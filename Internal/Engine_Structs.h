#pragma once 
#include "SDK.h" 
 
 
// DelegateFunction Engine.InputVectorAxisHandlerDynamicSignature__DelegateSignature
// Size: 0xC(Inherited: 0x0) 
struct FInputVectorAxisHandlerDynamicSignature__DelegateSignature
{
	struct FVector AxisValue;  // 0x0(0xC)

}; 
// ScriptStruct Engine.BlendParameter
// Size: 0x20(Inherited: 0x0) 
struct FBlendParameter
{
	struct FString DisplayName;  // 0x0(0x10)
	float Min;  // 0x10(0x4)
	float Max;  // 0x14(0x4)
	int32_t GridNum;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// ScriptStruct Engine.RawDistribution
// Size: 0x20(Inherited: 0x0) 
struct FRawDistribution
{
	struct FDistributionLookupTable Table;  // 0x0(0x20)

}; 
// Function Engine.PrimitiveComponent.IsOverlappingComponent
// Size: 0x10(Inherited: 0x0) 
struct FIsOverlappingComponent
{
	struct UPrimitiveComponent* OtherComp;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.LightComponent.SetEnableLightShaftBloom
// Size: 0x1(Inherited: 0x0) 
struct FSetEnableLightShaftBloom
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.Character.IsPlayingRootMotion
// Size: 0x1(Inherited: 0x0) 
struct FIsPlayingRootMotion
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.InputComponent.GetControllerAnalogKeyState
// Size: 0x20(Inherited: 0x0) 
struct FGetControllerAnalogKeyState
{
	struct FKey Key;  // 0x0(0x18)
	float ReturnValue;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.AnimNotifyState.Received_NotifyTick
// Size: 0x18(Inherited: 0x0) 
struct FReceived_NotifyTick
{
	struct USkeletalMeshComponent* MeshComp;  // 0x0(0x8)
	struct UAnimSequenceBase* Animation;  // 0x8(0x8)
	float FrameDeltaTime;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.KismetSystemLibrary.GetPrimaryAssetsWithBundleState
// Size: 0x48(Inherited: 0x0) 
struct FGetPrimaryAssetsWithBundleState
{
	struct TArray<struct FName> RequiredBundles;  // 0x0(0x10)
	struct TArray<struct FName> ExcludedBundles;  // 0x10(0x10)
	struct TArray<struct FPrimaryAssetType> ValidTypes;  // 0x20(0x10)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bForceCurrentState : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct TArray<struct FPrimaryAssetId> OutPrimaryAssetIdList;  // 0x38(0x10)

}; 
// Function Engine.Actor.K2_SetActorLocation
// Size: 0x9C(Inherited: 0x0) 
struct FK2_SetActorLocation
{
	struct FVector NewLocation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153_1 : 7;  // 0x99(0x1)
	bool ReturnValue : 1;  // 0x99(0x1)
	char pad_154[2];  // 0x9A(0x2)

}; 
// Function Engine.PhysicsConstraintComponent.GetConstraintForce
// Size: 0x18(Inherited: 0x0) 
struct FGetConstraintForce
{
	struct FVector OutLinearForce;  // 0x0(0xC)
	struct FVector OutAngularForce;  // 0xC(0xC)

}; 
// Function Engine.CurveSourceInterface.GetCurves
// Size: 0x10(Inherited: 0x0) 
struct FGetCurves
{
	struct TArray<struct FNamedCurveValue> OutValues;  // 0x0(0x10)

}; 
// ScriptStruct Engine.VectorRK4SpringInterpolator
// Size: 0x8(Inherited: 0x0) 
struct FVectorRK4SpringInterpolator
{
	float StiffnessConstant;  // 0x0(0x4)
	float DampeningRatio;  // 0x4(0x4)

}; 
// Function Engine.SkeletalMesh.K2_GetAllMorphTargetNames
// Size: 0x10(Inherited: 0x0) 
struct FK2_GetAllMorphTargetNames
{
	struct TArray<struct FString> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.BreakVector
// Size: 0x18(Inherited: 0x0) 
struct FBreakVector
{
	struct FVector InVec;  // 0x0(0xC)
	float X;  // 0xC(0x4)
	float Y;  // 0x10(0x4)
	float Z;  // 0x14(0x4)

}; 
// Function Engine.KismetSystemLibrary.CanLaunchURL
// Size: 0x18(Inherited: 0x0) 
struct FCanLaunchURL
{
	struct FString URL;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetFrustumRightPlane
// Size: 0x60(Inherited: 0x0) 
struct FMatrix_GetFrustumRightPlane
{
	struct FMatrix M;  // 0x0(0x40)
	struct FPlane OutPlane;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool ReturnValue : 1;  // 0x50(0x1)
	char pad_81[15];  // 0x51(0xF)

}; 
// Function Engine.KismetSystemLibrary.K2_InvalidateTimerHandle
// Size: 0x10(Inherited: 0x0) 
struct FK2_InvalidateTimerHandle
{
	struct FTimerHandle Handle;  // 0x0(0x8)
	struct FTimerHandle ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetSystemLibrary.ParseCommandLine
// Size: 0x80(Inherited: 0x0) 
struct FParseCommandLine
{
	struct FString InCmdLine;  // 0x0(0x10)
	struct TArray<struct FString> OutTokens;  // 0x10(0x10)
	struct TArray<struct FString> OutSwitches;  // 0x20(0x10)
	struct TMap<struct FString, struct FString> OutParams;  // 0x30(0x50)

}; 
// ScriptStruct Engine.DistributionLookupTable
// Size: 0x20(Inherited: 0x0) 
struct FDistributionLookupTable
{
	float TimeScale;  // 0x0(0x4)
	float TimeBias;  // 0x4(0x4)
	struct TArray<float> Values;  // 0x8(0x10)
	char Op;  // 0x18(0x1)
	char EntryCount;  // 0x19(0x1)
	char EntryStride;  // 0x1A(0x1)
	char SubEntryStride;  // 0x1B(0x1)
	char LockFlag;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// ScriptStruct Engine.A2Pose
// Size: 0x10(Inherited: 0x0) 
struct FA2Pose
{
	struct TArray<struct FTransform> Bones;  // 0x0(0x10)

}; 
// SparseDelegateFunction Engine.ComponentWakeSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FComponentWakeSignature__DelegateSignature
{
	struct UPrimitiveComponent* WakingComponent;  // 0x0(0x8)
	struct FName BoneName;  // 0x8(0x8)

}; 
// Function Engine.GameModeBase.K2_OnSwapPlayerControllers
// Size: 0x10(Inherited: 0x0) 
struct FK2_OnSwapPlayerControllers
{
	struct APlayerController* OldPC;  // 0x0(0x8)
	struct APlayerController* NewPC;  // 0x8(0x8)

}; 
// ScriptStruct Engine.HitResult
// Size: 0x88(Inherited: 0x0) 
struct FHitResult
{
	int32_t FaceIndex;  // 0x0(0x4)
	float Time;  // 0x4(0x4)
	float Distance;  // 0x8(0x4)
	struct FVector_NetQuantize Location;  // 0xC(0xC)
	struct FVector_NetQuantize ImpactPoint;  // 0x18(0xC)
	struct FVector_NetQuantizeNormal Normal;  // 0x24(0xC)
	struct FVector_NetQuantizeNormal ImpactNormal;  // 0x30(0xC)
	struct FVector_NetQuantize TraceStart;  // 0x3C(0xC)
	struct FVector_NetQuantize TraceEnd;  // 0x48(0xC)
	float PenetrationDepth;  // 0x54(0x4)
	int32_t Item;  // 0x58(0x4)
	char ElementIndex;  // 0x5C(0x1)
	char bBlockingHit : 1;  // 0x5D(0x1)
	char bStartPenetrating : 1;  // 0x5D(0x1)
	char pad_93_1 : 6;  // 0x5D(0x1)
	char pad_94[3];  // 0x5E(0x3)
	struct TWeakObjectPtr<UPhysicalMaterial> PhysMaterial;  // 0x60(0x8)
	struct TWeakObjectPtr<AActor> Actor;  // 0x68(0x8)
	struct TWeakObjectPtr<UPrimitiveComponent> Component;  // 0x70(0x8)
	struct FName BoneName;  // 0x78(0x8)
	struct FName MyBoneName;  // 0x80(0x8)

}; 
// Function Engine.DirectionalLightComponent.SetDynamicShadowDistanceStationaryLight
// Size: 0x4(Inherited: 0x0) 
struct FSetDynamicShadowDistanceStationaryLight
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.SetObjectPropertyByName
// Size: 0x18(Inherited: 0x0) 
struct FSetObjectPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct UObject* Value;  // 0x10(0x8)

}; 
// DelegateFunction Engine.OnSubmixEnvelopeBP__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnSubmixEnvelopeBP__DelegateSignature
{
	struct TArray<float> Envelope;  // 0x0(0x10)

}; 
// Function Engine.KismetSystemLibrary.ResetGamepadAssignmentToController
// Size: 0x4(Inherited: 0x0) 
struct FResetGamepadAssignmentToController
{
	int32_t ControllerId;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.GetMassScale
// Size: 0xC(Inherited: 0x0) 
struct FGetMassScale
{
	struct FName BoneName;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.Actor.MakeMIDForMaterial
// Size: 0x10(Inherited: 0x0) 
struct FMakeMIDForMaterial
{
	struct UMaterialInterface* Parent;  // 0x0(0x8)
	struct UMaterialInstanceDynamic* ReturnValue;  // 0x8(0x8)

}; 
// ScriptStruct Engine.FloatDistribution
// Size: 0x20(Inherited: 0x0) 
struct FFloatDistribution
{
	struct FDistributionLookupTable Table;  // 0x0(0x20)

}; 
// Function Engine.KismetSystemLibrary.Conv_SoftObjectReferenceToString
// Size: 0x38(Inherited: 0x0) 
struct FConv_SoftObjectReferenceToString
{
	struct TSoftObjectPtr<UObject> SoftObjectReference;  // 0x0(0x28)
	struct FString ReturnValue;  // 0x28(0x10)

}; 
// Function Engine.KismetMathLibrary.Matrix_TransformVector4
// Size: 0x60(Inherited: 0x0) 
struct FMatrix_TransformVector4
{
	struct FMatrix M;  // 0x0(0x40)
	struct FVector4 V;  // 0x40(0x10)
	struct FVector4 ReturnValue;  // 0x50(0x10)

}; 
// ScriptStruct Engine.Vector4Distribution
// Size: 0x20(Inherited: 0x0) 
struct FVector4Distribution
{
	struct FDistributionLookupTable Table;  // 0x0(0x20)

}; 
// Function Engine.PrimitiveComponent.GetPhysicsAngularVelocityInRadians
// Size: 0x14(Inherited: 0x0) 
struct FGetPhysicsAngularVelocityInRadians
{
	struct FName BoneName;  // 0x0(0x8)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// ScriptStruct Engine.RootMotionExtractionStep
// Size: 0x10(Inherited: 0x0) 
struct FRootMotionExtractionStep
{
	struct UAnimSequence* AnimSequence;  // 0x0(0x8)
	float StartPosition;  // 0x8(0x4)
	float EndPosition;  // 0xC(0x4)

}; 
// ScriptStruct Engine.PerPlatformInt
// Size: 0x4(Inherited: 0x0) 
struct FPerPlatformInt
{
	int32_t Default;  // 0x0(0x4)

}; 
// SparseDelegateFunction Engine.ComponentOnInputTouchEndSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FComponentOnInputTouchEndSignature__DelegateSignature
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct UPrimitiveComponent* TouchedComponent;  // 0x8(0x8)

}; 
// SparseDelegateFunction Engine.ActorHitSignature__DelegateSignature
// Size: 0xA8(Inherited: 0x0) 
struct FActorHitSignature__DelegateSignature
{
	struct AActor* SelfActor;  // 0x0(0x8)
	struct AActor* OtherActor;  // 0x8(0x8)
	struct FVector NormalImpulse;  // 0x10(0xC)
	struct FHitResult Hit;  // 0x1C(0x88)
	char pad_164[4];  // 0xA4(0x4)

}; 
// Function Engine.KismetTextLibrary.AsTimespan_Timespan
// Size: 0x20(Inherited: 0x0) 
struct FAsTimespan_Timespan
{
	struct FTimespan InTimespan;  // 0x0(0x8)
	struct FText ReturnValue;  // 0x8(0x18)

}; 
// ScriptStruct Engine.VectorDistribution
// Size: 0x20(Inherited: 0x0) 
struct FVectorDistribution
{
	struct FDistributionLookupTable Table;  // 0x0(0x20)

}; 
// Function Engine.KismetRenderingLibrary.ReadRenderTargetRawPixel
// Size: 0x28(Inherited: 0x0) 
struct FReadRenderTargetRawPixel
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UTextureRenderTarget2D* TextureRenderTarget;  // 0x8(0x8)
	int32_t X;  // 0x10(0x4)
	int32_t Y;  // 0x14(0x4)
	struct FLinearColor ReturnValue;  // 0x18(0x10)

}; 
// SparseDelegateFunction Engine.TakePointDamageSignature__DelegateSignature
// Size: 0x58(Inherited: 0x0) 
struct FTakePointDamageSignature__DelegateSignature
{
	struct AActor* DamagedActor;  // 0x0(0x8)
	float Damage;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct AController* InstigatedBy;  // 0x10(0x8)
	struct FVector HitLocation;  // 0x18(0xC)
	char pad_36[4];  // 0x24(0x4)
	struct UPrimitiveComponent* FHitComponent;  // 0x28(0x8)
	struct FName BoneName;  // 0x30(0x8)
	struct FVector ShotFromDirection;  // 0x38(0xC)
	char pad_68[4];  // 0x44(0x4)
	struct UDamageType* DamageType;  // 0x48(0x8)
	struct AActor* DamageCauser;  // 0x50(0x8)

}; 
// ScriptStruct Engine.TTVectorTrack
// Size: 0x28(Inherited: 0x20) 
struct FTTVectorTrack : public FTTPropertyTrack
{
	struct UCurveVector* CurveVector;  // 0x20(0x8)

}; 
// Function Engine.KismetMathLibrary.BooleanNOR
// Size: 0x3(Inherited: 0x0) 
struct FBooleanNOR
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool A : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool B : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool ReturnValue : 1;  // 0x2(0x1)

}; 
// ScriptStruct Engine.FloatRK4SpringInterpolator
// Size: 0x8(Inherited: 0x0) 
struct FFloatRK4SpringInterpolator
{
	float StiffnessConstant;  // 0x0(0x4)
	float DampeningRatio;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.BreakTimespan2
// Size: 0x20(Inherited: 0x0) 
struct FBreakTimespan2
{
	struct FTimespan InTimespan;  // 0x0(0x8)
	int32_t Days;  // 0x8(0x4)
	int32_t Hours;  // 0xC(0x4)
	int32_t Minutes;  // 0x10(0x4)
	int32_t Seconds;  // 0x14(0x4)
	int32_t FractionNano;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// DelegateFunction Engine.OnAudioMultiEnvelopeValue__DelegateSignature
// Size: 0xC(Inherited: 0x0) 
struct FOnAudioMultiEnvelopeValue__DelegateSignature
{
	float AverageEnvelopeValue;  // 0x0(0x4)
	float MaxEnvelope;  // 0x4(0x4)
	int32_t NumWaveInstances;  // 0x8(0x4)

}; 
// DelegateFunction Engine.OnMontageEndedMCDelegate__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnMontageEndedMCDelegate__DelegateSignature
{
	struct UAnimMontage* Montage;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bInterrupted : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// DelegateFunction Engine.OnAudioPlaybackPercent__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnAudioPlaybackPercent__DelegateSignature
{
	struct USoundWave* PlayingSoundWave;  // 0x0(0x8)
	float PlaybackPercent;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.AnimInstance.GetPropagateNotifiesToLinkedInstances
// Size: 0x1(Inherited: 0x0) 
struct FGetPropagateNotifiesToLinkedInstances
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.GameplayStatics.FindNearestActor
// Size: 0x30(Inherited: 0x0) 
struct FFindNearestActor
{
	struct FVector Origin;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct TArray<struct AActor*> ActorsToCheck;  // 0x10(0x10)
	float Distance;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)
	struct AActor* ReturnValue;  // 0x28(0x8)

}; 
// ScriptStruct Engine.FormatArgumentData
// Size: 0x40(Inherited: 0x0) 
struct FFormatArgumentData
{
	struct FString ArgumentName;  // 0x0(0x10)
	char EFormatArgumentType ArgumentValueType;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)
	struct FText ArgumentValue;  // 0x18(0x18)
	int32_t ArgumentValueInt;  // 0x30(0x4)
	float ArgumentValueFloat;  // 0x34(0x4)
	uint8_t  ArgumentValueGender;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 
// Function Engine.KismetSystemLibrary.SetUserActivity
// Size: 0x18(Inherited: 0x0) 
struct FSetUserActivity
{
	struct FUserActivity UserActivity;  // 0x0(0x18)

}; 
// Function Engine.Actor.GetActorEnableCollision
// Size: 0x1(Inherited: 0x0) 
struct FGetActorEnableCollision
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SoundSubmix.AddSpectralAnalysisDelegate
// Size: 0x40(Inherited: 0x0) 
struct FAddSpectralAnalysisDelegate
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct TArray<struct FSoundSubmixSpectralAnalysisBandSettings> InBandSettings;  // 0x8(0x10)
	struct FDelegate OnSubmixSpectralAnalysisBP;  // 0x18(0x10)
	float UpdateRate;  // 0x28(0x4)
	float DecibelNoiseFloor;  // 0x2C(0x4)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bDoNormalize : 1;  // 0x30(0x1)
	char pad_49_1 : 7;  // 0x31(0x1)
	bool bDoAutoRange : 1;  // 0x31(0x1)
	char pad_50[2];  // 0x32(0x2)
	float AutoRangeAttackTime;  // 0x34(0x4)
	float AutoRangeReleaseTime;  // 0x38(0x4)
	char pad_60[4];  // 0x3C(0x4)

}; 
// Function Engine.BlueprintPathsLibrary.GameSourceDir
// Size: 0x10(Inherited: 0x0) 
struct FGameSourceDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// ScriptStruct Engine.ExpressionInput
// Size: 0x14(Inherited: 0x0) 
struct FExpressionInput
{
	int32_t OutputIndex;  // 0x0(0x4)
	struct FName InputName;  // 0x4(0x8)
	struct FName ExpressionName;  // 0xC(0x8)

}; 
// Function Engine.TimelineComponent.SetFloatCurve
// Size: 0x10(Inherited: 0x0) 
struct FSetFloatCurve
{
	struct UCurveFloat* NewFloatCurve;  // 0x0(0x8)
	struct FName FloatTrackName;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Quat_SetFromEuler
// Size: 0x20(Inherited: 0x0) 
struct FQuat_SetFromEuler
{
	struct FQuat Q;  // 0x0(0x10)
	struct FVector Euler;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// DelegateFunction Engine.InterpToMovementComponent.OnInterpToResetDelegate__DelegateSignature
// Size: 0x8C(Inherited: 0x0) 
struct FOnInterpToResetDelegate__DelegateSignature
{
	struct FHitResult ImpactResult;  // 0x0(0x88)
	float Time;  // 0x88(0x4)

}; 
// Function Engine.KismetStringLibrary.GetSubstring
// Size: 0x28(Inherited: 0x0) 
struct FGetSubstring
{
	struct FString SourceString;  // 0x0(0x10)
	int32_t StartIndex;  // 0x10(0x4)
	int32_t Length;  // 0x14(0x4)
	struct FString ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.Actor.K2_GetComponentsByClass
// Size: 0x18(Inherited: 0x0) 
struct FK2_GetComponentsByClass
{
	UActorComponent* ComponentClass;  // 0x0(0x8)
	struct TArray<struct UActorComponent*> ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.TextRenderComponent.SetVerticalAlignment
// Size: 0x1(Inherited: 0x0) 
struct FSetVerticalAlignment
{
	char EVerticalTextAligment Value;  // 0x0(0x1)

}; 
// SparseDelegateFunction Engine.ComponentBeginCursorOverSignature__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FComponentBeginCursorOverSignature__DelegateSignature
{
	struct UPrimitiveComponent* TouchedComponent;  // 0x0(0x8)

}; 
// ScriptStruct Engine.MaterialAttributesInput
// Size: 0x18(Inherited: 0x14) 
struct FMaterialAttributesInput : public FExpressionInput
{
	int32_t PropertyConnectedBitmask;  // 0x14(0x4)

}; 
// SparseDelegateFunction Engine.ActorEndPlaySignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FActorEndPlaySignature__DelegateSignature
{
	struct AActor* Actor;  // 0x0(0x8)
	char EEndPlayReason EndPlayReason;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetSystemLibrary.IsStandalone
// Size: 0x10(Inherited: 0x0) 
struct FIsStandalone
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// ScriptStruct Engine.ExpressionOutput
// Size: 0x8(Inherited: 0x0) 
struct FExpressionOutput
{
	struct FName OutputName;  // 0x0(0x8)

}; 
// ScriptStruct Engine.AnimNode_ApplyMeshSpaceAdditive
// Size: 0xD0(Inherited: 0x10) 
struct FAnimNode_ApplyMeshSpaceAdditive : public FAnimNode_Base
{
	struct FPoseLink Base;  // 0x10(0x10)
	struct FPoseLink Additive;  // 0x20(0x10)
	uint8_t  AlphaInputType;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	float Alpha;  // 0x34(0x4)
	char bAlphaBoolEnabled : 1;  // 0x38(0x1)
	char pad_56_1 : 7;  // 0x38(0x1)
	char pad_57[8];  // 0x39(0x8)
	struct FInputAlphaBoolBlend AlphaBoolBlend;  // 0x40(0x48)
	struct FName AlphaCurveName;  // 0x88(0x8)
	struct FInputScaleBias AlphaScaleBias;  // 0x90(0x8)
	struct FInputScaleBiasClamp AlphaScaleBiasClamp;  // 0x98(0x30)
	int32_t LODThreshold;  // 0xC8(0x4)
	char pad_204[4];  // 0xCC(0x4)

}; 
// ScriptStruct Engine.PredictProjectilePathPointData
// Size: 0x1C(Inherited: 0x0) 
struct FPredictProjectilePathPointData
{
	struct FVector Location;  // 0x0(0xC)
	struct FVector Velocity;  // 0xC(0xC)
	float Time;  // 0x18(0x4)

}; 
// Function Engine.AnimInstance.GetRelevantAnimTimeFraction
// Size: 0xC(Inherited: 0x0) 
struct FGetRelevantAnimTimeFraction
{
	int32_t MachineIndex;  // 0x0(0x4)
	int32_t StateIndex;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// SparseDelegateFunction Engine.ActorBeginCursorOverSignature__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FActorBeginCursorOverSignature__DelegateSignature
{
	struct AActor* TouchedActor;  // 0x0(0x8)

}; 
// Function Engine.GameUserSettings.LoadSettings
// Size: 0x1(Inherited: 0x0) 
struct FLoadSettings
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bForceReload : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetSystemLibrary.GetViewportRotationEditorOnly
// Size: 0x18(Inherited: 0x0) 
struct FGetViewportRotationEditorOnly
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	int32_t ID;  // 0x8(0x4)
	struct FRotator ReturnValue;  // 0xC(0xC)

}; 
// ScriptStruct Engine.MaterialInput
// Size: 0x14(Inherited: 0x0) 
struct FMaterialInput
{
	int32_t OutputIndex;  // 0x0(0x4)
	struct FName InputName;  // 0x4(0x8)
	struct FName ExpressionName;  // 0xC(0x8)

}; 
// Function Engine.HUD.ReceiveHitBoxClick
// Size: 0x8(Inherited: 0x0) 
struct FReceiveHitBoxClick
{
	struct FName BoxName;  // 0x0(0x8)

}; 
// Function Engine.Canvas.K2_TextSize
// Size: 0x28(Inherited: 0x0) 
struct FK2_TextSize
{
	struct UFont* RenderFont;  // 0x0(0x8)
	struct FString RenderText;  // 0x8(0x10)
	struct FVector2D Scale;  // 0x18(0x8)
	struct FVector2D ReturnValue;  // 0x20(0x8)

}; 
// Function Engine.MovementComponent.SetPlaneConstraintAxisSetting
// Size: 0x1(Inherited: 0x0) 
struct FSetPlaneConstraintAxisSetting
{
	uint8_t  NewAxisSetting;  // 0x0(0x1)

}; 
// SparseDelegateFunction Engine.ActorEndTouchOverSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FActorEndTouchOverSignature__DelegateSignature
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct AActor* TouchedActor;  // 0x8(0x8)

}; 
// ScriptStruct Engine.ColorMaterialInput
// Size: 0x14(Inherited: 0x14) 
struct FColorMaterialInput : public FMaterialInput
{

}; 
// Function Engine.PlayerController.ClientSpawnCameraLensEffect
// Size: 0x8(Inherited: 0x0) 
struct FClientSpawnCameraLensEffect
{
	AEmitterCameraLensEffectBase* LensEffectEmitterClass;  // 0x0(0x8)

}; 
// DelegateFunction Engine.InputAxisHandlerDynamicSignature__DelegateSignature
// Size: 0x4(Inherited: 0x0) 
struct FInputAxisHandlerDynamicSignature__DelegateSignature
{
	float AxisValue;  // 0x0(0x4)

}; 
// Function Engine.SkeletalMeshComponent.SetEnablePhysicsBlending
// Size: 0x1(Inherited: 0x0) 
struct FSetEnablePhysicsBlending
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewBlendPhysics : 1;  // 0x0(0x1)

}; 
// SparseDelegateFunction Engine.ComponentCollisionSettingsChangedSignature__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FComponentCollisionSettingsChangedSignature__DelegateSignature
{
	struct UPrimitiveComponent* ChangedComponent;  // 0x0(0x8)

}; 
// DelegateFunction Engine.ConstraintBrokenSignature__DelegateSignature
// Size: 0x4(Inherited: 0x0) 
struct FConstraintBrokenSignature__DelegateSignature
{
	int32_t ConstraintIndex;  // 0x0(0x4)

}; 
// Function Engine.ActorComponent.SetComponentTickEnabled
// Size: 0x1(Inherited: 0x0) 
struct FSetComponentTickEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnabled : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetSystemLibrary.CapsuleTraceSingleForObjects
// Size: 0x108(Inherited: 0x0) 
struct FCapsuleTraceSingleForObjects
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	float Radius;  // 0x20(0x4)
	float HalfHeight;  // 0x24(0x4)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x28(0x10)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool bTraceComplex : 1;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x40(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x50(0x1)
	char pad_81[3];  // 0x51(0x3)
	struct FHitResult OutHit;  // 0x54(0x88)
	char pad_220_1 : 7;  // 0xDC(0x1)
	bool bIgnoreSelf : 1;  // 0xDC(0x1)
	char pad_221[3];  // 0xDD(0x3)
	struct FLinearColor TraceColor;  // 0xE0(0x10)
	struct FLinearColor TraceHitColor;  // 0xF0(0x10)
	float DrawTime;  // 0x100(0x4)
	char pad_260_1 : 7;  // 0x104(0x1)
	bool ReturnValue : 1;  // 0x104(0x1)
	char pad_261[3];  // 0x105(0x3)

}; 
// ScriptStruct Engine.ScalarMaterialInput
// Size: 0x14(Inherited: 0x14) 
struct FScalarMaterialInput : public FMaterialInput
{

}; 
// Function Engine.PlayerController.ServerChangeName
// Size: 0x10(Inherited: 0x0) 
struct FServerChangeName
{
	struct FString S;  // 0x0(0x10)

}; 
// Function Engine.KismetSystemLibrary.BoxTraceMultiForObjects
// Size: 0xA8(Inherited: 0x0) 
struct FBoxTraceMultiForObjects
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	struct FVector HalfSize;  // 0x20(0xC)
	struct FRotator Orientation;  // 0x2C(0xC)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x38(0x10)
	char pad_72_1 : 7;  // 0x48(0x1)
	bool bTraceComplex : 1;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x50(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x60(0x1)
	char pad_97[7];  // 0x61(0x7)
	struct TArray<struct FHitResult> OutHits;  // 0x68(0x10)
	char pad_120_1 : 7;  // 0x78(0x1)
	bool bIgnoreSelf : 1;  // 0x78(0x1)
	char pad_121[3];  // 0x79(0x3)
	struct FLinearColor TraceColor;  // 0x7C(0x10)
	struct FLinearColor TraceHitColor;  // 0x8C(0x10)
	float DrawTime;  // 0x9C(0x4)
	char pad_160_1 : 7;  // 0xA0(0x1)
	bool ReturnValue : 1;  // 0xA0(0x1)
	char pad_161[7];  // 0xA1(0x7)

}; 
// ScriptStruct Engine.ShadingModelMaterialInput
// Size: 0x14(Inherited: 0x14) 
struct FShadingModelMaterialInput : public FMaterialInput
{

}; 
// Function Engine.KismetMathLibrary.MinOfFloatArray
// Size: 0x18(Inherited: 0x0) 
struct FMinOfFloatArray
{
	struct TArray<float> FloatArray;  // 0x0(0x10)
	int32_t IndexOfMinValue;  // 0x10(0x4)
	float MinValue;  // 0x14(0x4)

}; 
// Function Engine.DataTableFunctionLibrary.EvaluateCurveTableRow
// Size: 0x30(Inherited: 0x0) 
struct FEvaluateCurveTableRow
{
	struct UCurveTable* CurveTable;  // 0x0(0x8)
	struct FName RowName;  // 0x8(0x8)
	float InXY;  // 0x10(0x4)
	char EEvaluateCurveTableResult OutResult;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)
	float OutXY;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)
	struct FString ContextString;  // 0x20(0x10)

}; 
// ScriptStruct Engine.RichCurveKey
// Size: 0x1C(Inherited: 0x0) 
struct FRichCurveKey
{
	char ERichCurveInterpMode InterpMode;  // 0x0(0x1)
	char ERichCurveTangentMode TangentMode;  // 0x1(0x1)
	char ERichCurveTangentWeightMode TangentWeightMode;  // 0x2(0x1)
	char pad_3[1];  // 0x3(0x1)
	float Time;  // 0x4(0x4)
	float Value;  // 0x8(0x4)
	float ArriveTangent;  // 0xC(0x4)
	float ArriveTangentWeight;  // 0x10(0x4)
	float LeaveTangent;  // 0x14(0x4)
	float LeaveTangentWeight;  // 0x18(0x4)

}; 
// ScriptStruct Engine.MovementProperties
// Size: 0x1(Inherited: 0x0) 
struct FMovementProperties
{
	char bCanCrouch : 1;  // 0x0(0x1)
	char bCanJump : 1;  // 0x0(0x1)
	char bCanWalk : 1;  // 0x0(0x1)
	char bCanSwim : 1;  // 0x0(0x1)
	char bCanFly : 1;  // 0x0(0x1)
	char pad_0_1 : 3;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.CreateVectorFromYawPitch
// Size: 0x18(Inherited: 0x0) 
struct FCreateVectorFromYawPitch
{
	float Yaw;  // 0x0(0x4)
	float Pitch;  // 0x4(0x4)
	float Length;  // 0x8(0x4)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetMathLibrary.BreakRotator
// Size: 0x18(Inherited: 0x0) 
struct FBreakRotator
{
	struct FRotator InRot;  // 0x0(0xC)
	float Roll;  // 0xC(0x4)
	float Pitch;  // 0x10(0x4)
	float Yaw;  // 0x14(0x4)

}; 
// Function Engine.LightComponent.SetBloomThreshold
// Size: 0x4(Inherited: 0x0) 
struct FSetBloomThreshold
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.StaticMeshComponent.SetReverseCulling
// Size: 0x1(Inherited: 0x0) 
struct FSetReverseCulling
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReverseCulling : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.VectorMaterialInput
// Size: 0x14(Inherited: 0x14) 
struct FVectorMaterialInput : public FMaterialInput
{

}; 
// Function Engine.AudioComponent.SetAudioBusSendPreEffect
// Size: 0x10(Inherited: 0x0) 
struct FSetAudioBusSendPreEffect
{
	struct UAudioBus* AudioBus;  // 0x0(0x8)
	float AudioBusSendLevel;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// ScriptStruct Engine.PlatformInterfaceDelegateResult
// Size: 0x38(Inherited: 0x0) 
struct FPlatformInterfaceDelegateResult
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bSuccessful : 1;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct FPlatformInterfaceData Data;  // 0x8(0x30)

}; 
// ScriptStruct Engine.Vector2MaterialInput
// Size: 0x14(Inherited: 0x14) 
struct FVector2MaterialInput : public FMaterialInput
{

}; 
// ScriptStruct Engine.AnimationTransitionBetweenStates
// Size: 0x40(Inherited: 0x8) 
struct FAnimationTransitionBetweenStates : public FAnimationStateBase
{
	int32_t PreviousState;  // 0x8(0x4)
	int32_t nextState;  // 0xC(0x4)
	float CrossfadeDuration;  // 0x10(0x4)
	int32_t StartNotify;  // 0x14(0x4)
	int32_t EndNotify;  // 0x18(0x4)
	int32_t InterruptNotify;  // 0x1C(0x4)
	uint8_t  BlendMode;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)
	struct UCurveFloat* CustomCurve;  // 0x28(0x8)
	struct UBlendProfile* BlendProfile;  // 0x30(0x8)
	char ETransitionLogicType LogicType;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 
// SparseDelegateFunction Engine.ActorComponentActivatedSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FActorComponentActivatedSignature__DelegateSignature
{
	struct UActorComponent* Component;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bReset : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.Actor.RemoveTickPrerequisiteActor
// Size: 0x8(Inherited: 0x0) 
struct FRemoveTickPrerequisiteActor
{
	struct AActor* PrerequisiteActor;  // 0x0(0x8)

}; 
// Function Engine.GameplayStatics.SpawnEmitterAtLocation
// Size: 0x40(Inherited: 0x0) 
struct FSpawnEmitterAtLocation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UParticleSystem* EmitterTemplate;  // 0x8(0x8)
	struct FVector Location;  // 0x10(0xC)
	struct FRotator Rotation;  // 0x1C(0xC)
	struct FVector Scale;  // 0x28(0xC)
	char pad_52_1 : 7;  // 0x34(0x1)
	bool bAutoDestroy : 1;  // 0x34(0x1)
	uint8_t  PoolingMethod;  // 0x35(0x1)
	char pad_54_1 : 7;  // 0x36(0x1)
	bool bAutoActivateSystem : 1;  // 0x36(0x1)
	char pad_55[1];  // 0x37(0x1)
	struct UParticleSystemComponent* ReturnValue;  // 0x38(0x8)

}; 
// Function Engine.GameplayStatics.SpawnDialogueAtLocation
// Size: 0x68(Inherited: 0x0) 
struct FSpawnDialogueAtLocation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UDialogueWave* Dialogue;  // 0x8(0x8)
	struct FDialogueContext Context;  // 0x10(0x18)
	struct FVector Location;  // 0x28(0xC)
	struct FRotator Rotation;  // 0x34(0xC)
	float VolumeMultiplier;  // 0x40(0x4)
	float PitchMultiplier;  // 0x44(0x4)
	float StartTime;  // 0x48(0x4)
	char pad_76[4];  // 0x4C(0x4)
	struct USoundAttenuation* AttenuationSettings;  // 0x50(0x8)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool bAutoDestroy : 1;  // 0x58(0x1)
	char pad_89[7];  // 0x59(0x7)
	struct UAudioComponent* ReturnValue;  // 0x60(0x8)

}; 
// Function Engine.KismetSystemLibrary.GetDisplayName
// Size: 0x18(Inherited: 0x0) 
struct FGetDisplayName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.CapsuleComponent.GetUnscaledCapsuleSize
// Size: 0x8(Inherited: 0x0) 
struct FGetUnscaledCapsuleSize
{
	float OutRadius;  // 0x0(0x4)
	float OutHalfHeight;  // 0x4(0x4)

}; 
// SparseDelegateFunction Engine.ActorComponentDeactivateSignature__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FActorComponentDeactivateSignature__DelegateSignature
{
	struct UActorComponent* Component;  // 0x0(0x8)

}; 
// SparseDelegateFunction Engine.ComponentEndTouchOverSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FComponentEndTouchOverSignature__DelegateSignature
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct UPrimitiveComponent* TouchedComponent;  // 0x8(0x8)

}; 
// Function Engine.PrimitiveComponent.GetWalkableSlopeOverride
// Size: 0x10(Inherited: 0x0) 
struct FGetWalkableSlopeOverride
{
	struct FWalkableSlopeOverride ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.SceneComponent.GetComponentVelocity
// Size: 0xC(Inherited: 0x0) 
struct FGetComponentVelocity
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// ScriptStruct Engine.EditedDocumentInfo
// Size: 0x30(Inherited: 0x0) 
struct FEditedDocumentInfo
{
	struct FSoftObjectPath EditedObjectPath;  // 0x0(0x18)
	struct FVector2D SavedViewOffset;  // 0x18(0x8)
	float SavedZoomAmount;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)
	struct UObject* EditedObject;  // 0x28(0x8)

}; 
// Function Engine.SkinnedMeshComponent.IsBoneHiddenByName
// Size: 0xC(Inherited: 0x0) 
struct FIsBoneHiddenByName
{
	struct FName BoneName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.Actor.DisableInput
// Size: 0x8(Inherited: 0x0) 
struct FDisableInput
{
	struct APlayerController* PlayerController;  // 0x0(0x8)

}; 
// SparseDelegateFunction Engine.PhysicsVolumeChanged__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FPhysicsVolumeChanged__DelegateSignature
{
	struct APhysicsVolume* NewVolume;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.ParseParam
// Size: 0x28(Inherited: 0x0) 
struct FParseParam
{
	struct FString inString;  // 0x0(0x10)
	struct FString InParam;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// Function Engine.AnimInstance.Montage_JumpToSection
// Size: 0x10(Inherited: 0x0) 
struct FMontage_JumpToSection
{
	struct FName SectionName;  // 0x0(0x8)
	struct UAnimMontage* Montage;  // 0x8(0x8)

}; 
// Function Engine.Pawn.IsLocallyControlled
// Size: 0x1(Inherited: 0x0) 
struct FIsLocallyControlled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SkeletalMeshComponent.GetIntegerAttribute
// Size: 0x1C(Inherited: 0x0) 
struct FGetIntegerAttribute
{
	struct FName BoneName;  // 0x0(0x8)
	struct FName AttributeName;  // 0x8(0x8)
	int32_t DefaultValue;  // 0x10(0x4)
	int32_t OutValue;  // 0x14(0x4)
	uint8_t  LookupType;  // 0x18(0x1)
	char pad_25_1 : 7;  // 0x19(0x1)
	bool ReturnValue : 1;  // 0x19(0x1)
	char pad_26[2];  // 0x1A(0x2)

}; 
// Function Engine.SplineComponent.GetUpVectorAtDistanceAlongSpline
// Size: 0x14(Inherited: 0x0) 
struct FGetUpVectorAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.DecalComponent.GetFadeInStartDelay
// Size: 0x4(Inherited: 0x0) 
struct FGetFadeInStartDelay
{
	float ReturnValue;  // 0x0(0x4)

}; 
// SparseDelegateFunction Engine.IsRootComponentChanged__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FIsRootComponentChanged__DelegateSignature
{
	struct USceneComponent* UpdatedComponent;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bIsRootComponent : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// ScriptStruct Engine.PrimaryAssetRulesCustomOverride
// Size: 0x38(Inherited: 0x0) 
struct FPrimaryAssetRulesCustomOverride
{
	struct FPrimaryAssetType PrimaryAssetType;  // 0x0(0x8)
	struct FDirectoryPath FilterDirectory;  // 0x8(0x10)
	struct FString FilterString;  // 0x18(0x10)
	struct FPrimaryAssetRules Rules;  // 0x28(0xC)
	char pad_52[4];  // 0x34(0x4)

}; 
// Function Engine.GameStateBase.HasBegunPlay
// Size: 0x1(Inherited: 0x0) 
struct FHasBegunPlay
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SceneComponent.SetHiddenInGame
// Size: 0x2(Inherited: 0x0) 
struct FSetHiddenInGame
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool NewHidden : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bPropagateToChildren : 1;  // 0x1(0x1)

}; 
// DelegateFunction Engine.OnQuartzMetronomeEventBP__DelegateSignature
// Size: 0x18(Inherited: 0x0) 
struct FOnQuartzMetronomeEventBP__DelegateSignature
{
	struct FName ClockName;  // 0x0(0x8)
	uint8_t  QuantizationType;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	int32_t NumBars;  // 0xC(0x4)
	int32_t Beat;  // 0x10(0x4)
	float BeatFraction;  // 0x14(0x4)

}; 
// ScriptStruct Engine.LayerActorStats
// Size: 0x10(Inherited: 0x0) 
struct FLayerActorStats
{
	UObject* Type;  // 0x0(0x8)
	int32_t Total;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.PlayerController.IsInputKeyDown
// Size: 0x20(Inherited: 0x0) 
struct FIsInputKeyDown
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.AnimInstance.GetOwningComponent
// Size: 0x8(Inherited: 0x0) 
struct FGetOwningComponent
{
	struct USkeletalMeshComponent* ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.VectorParameterValue
// Size: 0x30(Inherited: 0x0) 
struct FVectorParameterValue
{
	struct FMaterialParameterInfo ParameterInfo;  // 0x0(0x10)
	struct FLinearColor ParameterValue;  // 0x10(0x10)
	struct FGuid ExpressionGUID;  // 0x20(0x10)

}; 
// Function Engine.KismetInputLibrary.Key_GetNavigationDirectionFromAnalog
// Size: 0x48(Inherited: 0x0) 
struct FKey_GetNavigationDirectionFromAnalog
{
	struct FAnalogInputEvent InAnalogEvent;  // 0x0(0x40)
	uint8_t  ReturnValue;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)

}; 
// Function Engine.BlueprintPathsLibrary.CreateTempFilename
// Size: 0x40(Inherited: 0x0) 
struct FCreateTempFilename
{
	struct FString Path;  // 0x0(0x10)
	struct FString prefix;  // 0x10(0x10)
	struct FString Extension;  // 0x20(0x10)
	struct FString ReturnValue;  // 0x30(0x10)

}; 
// SparseDelegateFunction Engine.TakeAnyDamageSignature__DelegateSignature
// Size: 0x28(Inherited: 0x0) 
struct FTakeAnyDamageSignature__DelegateSignature
{
	struct AActor* DamagedActor;  // 0x0(0x8)
	float Damage;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct UDamageType* DamageType;  // 0x10(0x8)
	struct AController* InstigatedBy;  // 0x18(0x8)
	struct AActor* DamageCauser;  // 0x20(0x8)

}; 
// Function Engine.LightComponent.SetShadowBias
// Size: 0x4(Inherited: 0x0) 
struct FSetShadowBias
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.GameMode.SetBandwidthLimit
// Size: 0x4(Inherited: 0x0) 
struct FSetBandwidthLimit
{
	float AsyncIOBandwidthLimit;  // 0x0(0x4)

}; 
// SparseDelegateFunction Engine.TakeRadialDamageSignature__DelegateSignature
// Size: 0xC0(Inherited: 0x0) 
struct FTakeRadialDamageSignature__DelegateSignature
{
	struct AActor* DamagedActor;  // 0x0(0x8)
	float Damage;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct UDamageType* DamageType;  // 0x10(0x8)
	struct FVector Origin;  // 0x18(0xC)
	struct FHitResult HitInfo;  // 0x24(0x88)
	char pad_172[4];  // 0xAC(0x4)
	struct AController* InstigatedBy;  // 0xB0(0x8)
	struct AActor* DamageCauser;  // 0xB8(0x8)

}; 
// ScriptStruct Engine.MinimalViewInfo
// Size: 0x5F0(Inherited: 0x0) 
struct FMinimalViewInfo
{
	struct FVector Location;  // 0x0(0xC)
	struct FRotator Rotation;  // 0xC(0xC)
	float FOV;  // 0x18(0x4)
	float DesiredFOV;  // 0x1C(0x4)
	float OrthoWidth;  // 0x20(0x4)
	float OrthoNearClipPlane;  // 0x24(0x4)
	float OrthoFarClipPlane;  // 0x28(0x4)
	float AspectRatio;  // 0x2C(0x4)
	char bConstrainAspectRatio : 1;  // 0x30(0x1)
	char bUseFieldOfViewForLOD : 1;  // 0x30(0x1)
	char pad_48_1 : 6;  // 0x30(0x1)
	char pad_49[4];  // 0x31(0x4)
	char ECameraProjectionMode ProjectionMode;  // 0x34(0x1)
	char pad_53[3];  // 0x35(0x3)
	float PostProcessBlendWeight;  // 0x38(0x4)
	char pad_60[4];  // 0x3C(0x4)
	struct FPostProcessSettings PostProcessSettings;  // 0x40(0x560)
	struct FVector2D OffCenterProjectionOffset;  // 0x5A0(0x8)
	char pad_1448[72];  // 0x5A8(0x48)

}; 
// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromSoftClassReference
// Size: 0x38(Inherited: 0x0) 
struct FGetPrimaryAssetIdFromSoftClassReference
{
	struct TSoftClassPtr<UObject> SoftClassReference;  // 0x0(0x28)
	struct FPrimaryAssetId ReturnValue;  // 0x28(0x10)

}; 
// Function Engine.KismetSystemLibrary.SetColorPropertyByName
// Size: 0x18(Inherited: 0x0) 
struct FSetColorPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct FColor Value;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.KismetMathLibrary.Dot_VectorVector
// Size: 0x1C(Inherited: 0x0) 
struct FDot_VectorVector
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	float ReturnValue;  // 0x18(0x4)

}; 
// ScriptStruct Engine.Vector_NetQuantize
// Size: 0xC(Inherited: 0xC) 
struct FVector_NetQuantize : public FVector
{

}; 
// Function Engine.AnimNotifyState.GetNotifyName
// Size: 0x10(Inherited: 0x0) 
struct FGetNotifyName
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.GameplayStatics.CreatePlayer
// Size: 0x18(Inherited: 0x0) 
struct FCreatePlayer
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	int32_t ControllerId;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSpawnPlayerController : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct APlayerController* ReturnValue;  // 0x10(0x8)

}; 
// ScriptStruct Engine.Vector_NetQuantizeNormal
// Size: 0xC(Inherited: 0xC) 
struct FVector_NetQuantizeNormal : public FVector
{

}; 
// Function Engine.GameUserSettings.GetScreenResolution
// Size: 0x8(Inherited: 0x0) 
struct FGetScreenResolution
{
	struct FIntPoint ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.KAggregateGeom
// Size: 0x58(Inherited: 0x0) 
struct FKAggregateGeom
{
	struct TArray<struct FKSphereElem> SphereElems;  // 0x0(0x10)
	struct TArray<struct FKBoxElem> BoxElems;  // 0x10(0x10)
	struct TArray<struct FKSphylElem> SphylElems;  // 0x20(0x10)
	struct TArray<struct FKConvexElem> ConvexElems;  // 0x30(0x10)
	struct TArray<struct FKTaperedCapsuleElem> TaperedCapsuleElems;  // 0x40(0x10)
	char pad_80[8];  // 0x50(0x8)

}; 
// SparseDelegateFunction Engine.ComponentBeginTouchOverSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FComponentBeginTouchOverSignature__DelegateSignature
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct UPrimitiveComponent* TouchedComponent;  // 0x8(0x8)

}; 
// ScriptStruct Engine.LensBloomSettings
// Size: 0xB8(Inherited: 0x0) 
struct FLensBloomSettings
{
	struct FGaussianSumBloomSettings GaussianSum;  // 0x0(0x84)
	char pad_132[4];  // 0x84(0x4)
	struct FConvolutionBloomSettings Convolution;  // 0x88(0x28)
	char EBloomMethod Method;  // 0xB0(0x1)
	char pad_177[7];  // 0xB1(0x7)

}; 
// ScriptStruct Engine.MaterialShadingModelField
// Size: 0x2(Inherited: 0x0) 
struct FMaterialShadingModelField
{
	uint16_t ShadingModelField;  // 0x0(0x2)

}; 
// Function Engine.PoseableMeshComponent.CopyPoseFromSkeletalComponent
// Size: 0x8(Inherited: 0x0) 
struct FCopyPoseFromSkeletalComponent
{
	struct USkeletalMeshComponent* InComponentToCopy;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.Divide_VectorVector
// Size: 0x24(Inherited: 0x0) 
struct FDivide_VectorVector
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.Actor.SetActorHiddenInGame
// Size: 0x1(Inherited: 0x0) 
struct FSetActorHiddenInGame
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewHidden : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.CInterpTo
// Size: 0x38(Inherited: 0x0) 
struct FCInterpTo
{
	struct FLinearColor Current;  // 0x0(0x10)
	struct FLinearColor Target;  // 0x10(0x10)
	float DeltaTime;  // 0x20(0x4)
	float InterpSpeed;  // 0x24(0x4)
	struct FLinearColor ReturnValue;  // 0x28(0x10)

}; 
// Function Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamic
// Size: 0x10(Inherited: 0x0) 
struct FCreateAndSetMaterialInstanceDynamic
{
	int32_t ElementIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct UMaterialInstanceDynamic* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetSystemLibrary.BoxOverlapComponents
// Size: 0x60(Inherited: 0x0) 
struct FBoxOverlapComponents
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector BoxPos;  // 0x8(0xC)
	struct FVector Extent;  // 0x14(0xC)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x20(0x10)
	UObject* ComponentClassFilter;  // 0x30(0x8)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x38(0x10)
	struct TArray<struct UPrimitiveComponent*> OutComponents;  // 0x48(0x10)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool ReturnValue : 1;  // 0x58(0x1)
	char pad_89[7];  // 0x59(0x7)

}; 
// Function Engine.AnimInstance.HasMarkerBeenHitThisFrame
// Size: 0x14(Inherited: 0x0) 
struct FHasMarkerBeenHitThisFrame
{
	struct FName SyncGroup;  // 0x0(0x8)
	struct FName MarkerName;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.PhysicsConstraintComponent.SetConstraintReferenceOrientation
// Size: 0x1C(Inherited: 0x0) 
struct FSetConstraintReferenceOrientation
{
	char EConstraintFrame Frame;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FVector PriAxis;  // 0x4(0xC)
	struct FVector SecAxis;  // 0x10(0xC)

}; 
// SparseDelegateFunction Engine.ActorBeginOverlapSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FActorBeginOverlapSignature__DelegateSignature
{
	struct AActor* OverlappedActor;  // 0x0(0x8)
	struct AActor* OtherActor;  // 0x8(0x8)

}; 
// DelegateFunction Engine.OnTimelineVector__DelegateSignature
// Size: 0xC(Inherited: 0x0) 
struct FOnTimelineVector__DelegateSignature
{
	struct FVector Output;  // 0x0(0xC)

}; 
// SparseDelegateFunction Engine.ActorEndOverlapSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FActorEndOverlapSignature__DelegateSignature
{
	struct AActor* OverlappedActor;  // 0x0(0x8)
	struct AActor* OtherActor;  // 0x8(0x8)

}; 
// Function Engine.AnimInstance.Montage_GetPlayRate
// Size: 0x10(Inherited: 0x0) 
struct FMontage_GetPlayRate
{
	struct UAnimMontage* Montage;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.GameplayStatics.SpawnSound2D
// Size: 0x38(Inherited: 0x0) 
struct FSpawnSound2D
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct USoundBase* Sound;  // 0x8(0x8)
	float VolumeMultiplier;  // 0x10(0x4)
	float PitchMultiplier;  // 0x14(0x4)
	float StartTime;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)
	struct USoundConcurrency* ConcurrencySettings;  // 0x20(0x8)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bPersistAcrossLevelTransition : 1;  // 0x28(0x1)
	char pad_41_1 : 7;  // 0x29(0x1)
	bool bAutoDestroy : 1;  // 0x29(0x1)
	char pad_42[6];  // 0x2A(0x6)
	struct UAudioComponent* ReturnValue;  // 0x30(0x8)

}; 
// Function Engine.AnimInstance.BlueprintUpdateAnimation
// Size: 0x4(Inherited: 0x0) 
struct FBlueprintUpdateAnimation
{
	float DeltaTimeX;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_Int64Int64
// Size: 0x18(Inherited: 0x0) 
struct FEqualEqual_Int64Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.PlayerController.ClientSetCinematicMode
// Size: 0x4(Inherited: 0x0) 
struct FClientSetCinematicMode
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInCinematicMode : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bAffectsMovement : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool bAffectsTurning : 1;  // 0x2(0x1)
	char pad_3_1 : 7;  // 0x3(0x1)
	bool bAffectsHUD : 1;  // 0x3(0x1)

}; 
// Function Engine.BlueprintPathsLibrary.GetPropertyNameLocalizationPaths
// Size: 0x10(Inherited: 0x0) 
struct FGetPropertyNameLocalizationPaths
{
	struct TArray<struct FString> ReturnValue;  // 0x0(0x10)

}; 
// ScriptStruct Engine.BatchedPoint
// Size: 0x28(Inherited: 0x0) 
struct FBatchedPoint
{
	struct FVector position;  // 0x0(0xC)
	struct FLinearColor Color;  // 0xC(0x10)
	float PointSize;  // 0x1C(0x4)
	float RemainingLifeTime;  // 0x20(0x4)
	char DepthPriority;  // 0x24(0x1)
	char pad_37[3];  // 0x25(0x3)

}; 
// DelegateFunction Engine.ApplicationLifecycleComponent.OnLowPowerModeDelegate__DelegateSignature
// Size: 0x1(Inherited: 0x0) 
struct FOnLowPowerModeDelegate__DelegateSignature
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInLowPowerMode : 1;  // 0x0(0x1)

}; 
// SparseDelegateFunction Engine.ActorEndCursorOverSignature__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FActorEndCursorOverSignature__DelegateSignature
{
	struct AActor* TouchedActor;  // 0x0(0x8)

}; 
// ScriptStruct Engine.WalkableSlopeOverride
// Size: 0x10(Inherited: 0x0) 
struct FWalkableSlopeOverride
{
	char EWalkableSlopeBehavior WalkableSlopeBehavior;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float WalkableSlopeAngle;  // 0x4(0x4)
	char pad_8[8];  // 0x8(0x8)

}; 
// Function Engine.PlayerController.ClientPlaySound
// Size: 0x10(Inherited: 0x0) 
struct FClientPlaySound
{
	struct USoundBase* Sound;  // 0x0(0x8)
	float VolumeMultiplier;  // 0x8(0x4)
	float PitchMultiplier;  // 0xC(0x4)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugBox
// Size: 0x48(Inherited: 0x0) 
struct FDrawDebugBox
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Center;  // 0x8(0xC)
	struct FVector Extent;  // 0x14(0xC)
	struct FLinearColor LineColor;  // 0x20(0x10)
	struct FRotator Rotation;  // 0x30(0xC)
	float Duration;  // 0x3C(0x4)
	float Thickness;  // 0x40(0x4)
	char pad_68[4];  // 0x44(0x4)

}; 
// SparseDelegateFunction Engine.ActorOnClickedSignature__DelegateSignature
// Size: 0x20(Inherited: 0x0) 
struct FActorOnClickedSignature__DelegateSignature
{
	struct AActor* TouchedActor;  // 0x0(0x8)
	struct FKey ButtonPressed;  // 0x8(0x18)

}; 
// Function Engine.Controller.Possess
// Size: 0x8(Inherited: 0x0) 
struct FPossess
{
	struct APawn* InPawn;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.SphereOverlapComponents
// Size: 0x58(Inherited: 0x0) 
struct FSphereOverlapComponents
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector SpherePos;  // 0x8(0xC)
	float SphereRadius;  // 0x14(0x4)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x18(0x10)
	UObject* ComponentClassFilter;  // 0x28(0x8)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x30(0x10)
	struct TArray<struct UPrimitiveComponent*> OutComponents;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool ReturnValue : 1;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)

}; 
// SparseDelegateFunction Engine.ActorOnReleasedSignature__DelegateSignature
// Size: 0x20(Inherited: 0x0) 
struct FActorOnReleasedSignature__DelegateSignature
{
	struct AActor* TouchedActor;  // 0x0(0x8)
	struct FKey ButtonReleased;  // 0x8(0x18)

}; 
// Function Engine.KismetSystemLibrary.LoadAsset
// Size: 0x58(Inherited: 0x0) 
struct FLoadAsset
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct TSoftObjectPtr<UObject> Asset;  // 0x8(0x28)
	struct FDelegate OnLoaded;  // 0x30(0x10)
	struct FLatentActionInfo LatentInfo;  // 0x40(0x18)

}; 
// Function Engine.LightComponent.SetTemperature
// Size: 0x4(Inherited: 0x0) 
struct FSetTemperature
{
	float NewTemperature;  // 0x0(0x4)

}; 
// ScriptStruct Engine.RichCurve
// Size: 0x80(Inherited: 0x70) 
struct FRichCurve : public FRealCurve
{
	struct TArray<struct FRichCurveKey> Keys;  // 0x70(0x10)

}; 
// SparseDelegateFunction Engine.ActorOnInputTouchEndSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FActorOnInputTouchEndSignature__DelegateSignature
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct AActor* TouchedActor;  // 0x8(0x8)

}; 
// Function Engine.StaticMesh.GetMaterialIndex
// Size: 0xC(Inherited: 0x0) 
struct FGetMaterialIndex
{
	struct FName MaterialSlotName;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.InstancedStaticMeshComponent.BatchUpdateInstancesTransform
// Size: 0x50(Inherited: 0x0) 
struct FBatchUpdateInstancesTransform
{
	int32_t StartInstanceIndex;  // 0x0(0x4)
	int32_t NumInstances;  // 0x4(0x4)
	char pad_8[8];  // 0x8(0x8)
	struct FTransform NewInstancesTransform;  // 0x10(0x30)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool bWorldSpace : 1;  // 0x40(0x1)
	char pad_65_1 : 7;  // 0x41(0x1)
	bool bMarkRenderStateDirty : 1;  // 0x41(0x1)
	char pad_66_1 : 7;  // 0x42(0x1)
	bool bTeleport : 1;  // 0x42(0x1)
	char pad_67_1 : 7;  // 0x43(0x1)
	bool ReturnValue : 1;  // 0x43(0x1)
	char pad_68[12];  // 0x44(0xC)

}; 
// Function Engine.KismetMathLibrary.Conv_VectorToTransform
// Size: 0x40(Inherited: 0x0) 
struct FConv_VectorToTransform
{
	struct FVector InLocation;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct FTransform ReturnValue;  // 0x10(0x30)

}; 
// ScriptStruct Engine.StaticMaterial
// Size: 0x30(Inherited: 0x0) 
struct FStaticMaterial
{
	struct UMaterialInterface* MaterialInterface;  // 0x0(0x8)
	struct FName MaterialSlotName;  // 0x8(0x8)
	struct FName ImportedMaterialSlotName;  // 0x10(0x8)
	struct FMeshUVChannelInfo UVChannelData;  // 0x18(0x14)
	char pad_44[4];  // 0x2C(0x4)

}; 
// Function Engine.GameplayStatics.GetGameMode
// Size: 0x10(Inherited: 0x0) 
struct FGetGameMode
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct AGameModeBase* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.Actor.GetSquaredHorizontalDistanceTo
// Size: 0x10(Inherited: 0x0) 
struct FGetSquaredHorizontalDistanceTo
{
	struct AActor* OtherActor;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.CharacterMovementComponent.CapsuleTouched
// Size: 0xA8(Inherited: 0x0) 
struct FCapsuleTouched
{
	struct UPrimitiveComponent* OverlappedComp;  // 0x0(0x8)
	struct AActor* Other;  // 0x8(0x8)
	struct UPrimitiveComponent* OtherComp;  // 0x10(0x8)
	int32_t OtherBodyIndex;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bFromSweep : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)
	struct FHitResult SweepResult;  // 0x20(0x88)

}; 
// Function Engine.KismetMathLibrary.Vector_Normalize
// Size: 0x10(Inherited: 0x0) 
struct FVector_Normalize
{
	struct FVector A;  // 0x0(0xC)
	float Tolerance;  // 0xC(0x4)

}; 
// SparseDelegateFunction Engine.ActorOnInputTouchBeginSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FActorOnInputTouchBeginSignature__DelegateSignature
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct AActor* TouchedActor;  // 0x8(0x8)

}; 
// Function Engine.PlayerController.SetAudioListenerOverride
// Size: 0x20(Inherited: 0x0) 
struct FSetAudioListenerOverride
{
	struct USceneComponent* AttachToComponent;  // 0x0(0x8)
	struct FVector Location;  // 0x8(0xC)
	struct FRotator Rotation;  // 0x14(0xC)

}; 
// DelegateFunction Engine.PlatformInterfaceDelegate__DelegateSignature
// Size: 0x38(Inherited: 0x0) 
struct FPlatformInterfaceDelegate__DelegateSignature
{
	struct FPlatformInterfaceDelegateResult Result;  // 0x0(0x38)

}; 
// ScriptStruct Engine.MaterialTextureInfo
// Size: 0x10(Inherited: 0x0) 
struct FMaterialTextureInfo
{
	float SamplingScale;  // 0x0(0x4)
	int32_t UVChannelIndex;  // 0x4(0x4)
	struct FName TextureName;  // 0x8(0x8)

}; 
// ScriptStruct Engine.SoundWaveSpectralDataEntry
// Size: 0x8(Inherited: 0x0) 
struct FSoundWaveSpectralDataEntry
{
	float Magnitude;  // 0x0(0x4)
	float NormalizedMagnitude;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.MaxOfFloatArray
// Size: 0x18(Inherited: 0x0) 
struct FMaxOfFloatArray
{
	struct TArray<float> FloatArray;  // 0x0(0x10)
	int32_t IndexOfMaxValue;  // 0x10(0x4)
	float MaxValue;  // 0x14(0x4)

}; 
// Function Engine.Actor.SetReplicates
// Size: 0x1(Inherited: 0x0) 
struct FSetReplicates
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInReplicates : 1;  // 0x0(0x1)

}; 
// SparseDelegateFunction Engine.ActorBeginTouchOverSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FActorBeginTouchOverSignature__DelegateSignature
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct AActor* TouchedActor;  // 0x8(0x8)

}; 
// Function Engine.BlueprintSetLibrary.Set_ToArray
// Size: 0x60(Inherited: 0x0) 
struct FSet_ToArray
{
	struct TSet<int32_t> A;  // 0x0(0x50)
	struct TArray<int32_t> Result;  // 0x50(0x10)

}; 
// ScriptStruct Engine.CollectionReference
// Size: 0x8(Inherited: 0x0) 
struct FCollectionReference
{
	struct FName CollectionName;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector_ComponentMin
// Size: 0x24(Inherited: 0x0) 
struct FVector_ComponentMin
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetMathLibrary.RGBToHSV
// Size: 0x20(Inherited: 0x0) 
struct FRGBToHSV
{
	struct FLinearColor InColor;  // 0x0(0x10)
	float H;  // 0x10(0x4)
	float S;  // 0x14(0x4)
	float V;  // 0x18(0x4)
	float A;  // 0x1C(0x4)

}; 
// Function Engine.StaticMesh.GetMaterial
// Size: 0x10(Inherited: 0x0) 
struct FGetMaterial
{
	int32_t MaterialIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct UMaterialInterface* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.MovementComponent.GetPlaneConstraintOrigin
// Size: 0xC(Inherited: 0x0) 
struct FGetPlaneConstraintOrigin
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// ScriptStruct Engine.ParticleReplayTrackKey
// Size: 0xC(Inherited: 0x0) 
struct FParticleReplayTrackKey
{
	float Time;  // 0x0(0x4)
	float Duration;  // 0x4(0x4)
	int32_t ClipIDNumber;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.Matrix_InverseTransformPosition
// Size: 0x60(Inherited: 0x0) 
struct FMatrix_InverseTransformPosition
{
	struct FMatrix M;  // 0x0(0x40)
	struct FVector V;  // 0x40(0xC)
	struct FVector ReturnValue;  // 0x4C(0xC)
	char pad_88[8];  // 0x58(0x8)

}; 
// Function Engine.SceneComponent.GetSocketQuaternion
// Size: 0x20(Inherited: 0x0) 
struct FGetSocketQuaternion
{
	struct FName InSocketName;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FQuat ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.TimecodeProvider.GetFrameRate
// Size: 0x8(Inherited: 0x0) 
struct FGetFrameRate
{
	struct FFrameRate ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.GameStateBase.GetServerWorldTimeSeconds
// Size: 0x4(Inherited: 0x0) 
struct FGetServerWorldTimeSeconds
{
	float ReturnValue;  // 0x0(0x4)

}; 
// SparseDelegateFunction Engine.ActorDestroyedSignature__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FActorDestroyedSignature__DelegateSignature
{
	struct AActor* DestroyedActor;  // 0x0(0x8)

}; 
// DelegateFunction Engine.OnPawnControllerChanged__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnPawnControllerChanged__DelegateSignature
{
	struct APawn* Pawn;  // 0x0(0x8)
	struct AController* Controller;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.RandomInteger64
// Size: 0x10(Inherited: 0x0) 
struct FRandomInteger64
{
	int64_t Max;  // 0x0(0x8)
	int64_t ReturnValue;  // 0x8(0x8)

}; 
// SparseDelegateFunction Engine.ComponentHitSignature__DelegateSignature
// Size: 0xB0(Inherited: 0x0) 
struct FComponentHitSignature__DelegateSignature
{
	struct UPrimitiveComponent* HitComponent;  // 0x0(0x8)
	struct AActor* OtherActor;  // 0x8(0x8)
	struct UPrimitiveComponent* OtherComp;  // 0x10(0x8)
	struct FVector NormalImpulse;  // 0x18(0xC)
	struct FHitResult Hit;  // 0x24(0x88)
	char pad_172[4];  // 0xAC(0x4)

}; 
// Function Engine.KismetSystemLibrary.GetGameName
// Size: 0x10(Inherited: 0x0) 
struct FGetGameName
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// ScriptStruct Engine.BeamModifierOptions
// Size: 0x4(Inherited: 0x0) 
struct FBeamModifierOptions
{
	char bModify : 1;  // 0x0(0x1)
	char bScale : 1;  // 0x0(0x1)
	char bLock : 1;  // 0x0(0x1)
	char pad_0_1 : 5;  // 0x0(0x1)
	char pad_1[4];  // 0x1(0x4)

}; 
// Function Engine.SkeletalMeshComponent.PlayAnimation
// Size: 0x10(Inherited: 0x0) 
struct FPlayAnimation
{
	struct UAnimationAsset* NewAnimToPlay;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bLooping : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.PlayerController.GetHitResultUnderCursor
// Size: 0x90(Inherited: 0x0) 
struct FGetHitResultUnderCursor
{
	char ECollisionChannel TraceChannel;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bTraceComplex : 1;  // 0x1(0x1)
	char pad_2[2];  // 0x2(0x2)
	struct FHitResult HitResult;  // 0x4(0x88)
	char pad_140_1 : 7;  // 0x8C(0x1)
	bool ReturnValue : 1;  // 0x8C(0x1)
	char pad_141[3];  // 0x8D(0x3)

}; 
// Function Engine.KismetMathLibrary.VSizeXY
// Size: 0x10(Inherited: 0x0) 
struct FVSizeXY
{
	struct FVector A;  // 0x0(0xC)
	float ReturnValue;  // 0xC(0x4)

}; 
// DelegateFunction Engine.OnMontageBlendingOutStartedMCDelegate__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnMontageBlendingOutStartedMCDelegate__DelegateSignature
{
	struct UAnimMontage* Montage;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bInterrupted : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// SparseDelegateFunction Engine.ComponentBeginOverlapSignature__DelegateSignature
// Size: 0xA8(Inherited: 0x0) 
struct FComponentBeginOverlapSignature__DelegateSignature
{
	struct UPrimitiveComponent* OverlappedComponent;  // 0x0(0x8)
	struct AActor* OtherActor;  // 0x8(0x8)
	struct UPrimitiveComponent* OtherComp;  // 0x10(0x8)
	int32_t OtherBodyIndex;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bFromSweep : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)
	struct FHitResult SweepResult;  // 0x20(0x88)

}; 
// Function Engine.PlayerController.ClientIgnoreMoveInput
// Size: 0x1(Inherited: 0x0) 
struct FClientIgnoreMoveInput
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bIgnore : 1;  // 0x0(0x1)

}; 
// SparseDelegateFunction Engine.ComponentEndOverlapSignature__DelegateSignature
// Size: 0x20(Inherited: 0x0) 
struct FComponentEndOverlapSignature__DelegateSignature
{
	struct UPrimitiveComponent* OverlappedComponent;  // 0x0(0x8)
	struct AActor* OtherActor;  // 0x8(0x8)
	struct UPrimitiveComponent* OtherComp;  // 0x10(0x8)
	int32_t OtherBodyIndex;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// ScriptStruct Engine.SkeletalMeshOptimizationSettings
// Size: 0x3C(Inherited: 0x0) 
struct FSkeletalMeshOptimizationSettings
{
	char SkeletalMeshTerminationCriterion TerminationCriterion;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float NumOfTrianglesPercentage;  // 0x4(0x4)
	float NumOfVertPercentage;  // 0x8(0x4)
	uint32_t MaxNumOfTriangles;  // 0xC(0x4)
	uint32_t MaxNumOfVerts;  // 0x10(0x4)
	float MaxDeviationPercentage;  // 0x14(0x4)
	char SkeletalMeshOptimizationType ReductionMethod;  // 0x18(0x1)
	char SkeletalMeshOptimizationImportance SilhouetteImportance;  // 0x19(0x1)
	char SkeletalMeshOptimizationImportance TextureImportance;  // 0x1A(0x1)
	char SkeletalMeshOptimizationImportance ShadingImportance;  // 0x1B(0x1)
	char SkeletalMeshOptimizationImportance SkinningImportance;  // 0x1C(0x1)
	char bRemapMorphTargets : 1;  // 0x1D(0x1)
	char bRecalcNormals : 1;  // 0x1D(0x1)
	char pad_29_1 : 6;  // 0x1D(0x1)
	char pad_30[3];  // 0x1E(0x3)
	float WeldingThreshold;  // 0x20(0x4)
	float NormalsThreshold;  // 0x24(0x4)
	int32_t MaxBonesPerVertex;  // 0x28(0x4)
	char bEnforceBoneBoundaries : 1;  // 0x2C(0x1)
	char pad_44_1 : 7;  // 0x2C(0x1)
	char pad_45[4];  // 0x2D(0x4)
	float VolumeImportance;  // 0x30(0x4)
	char bLockEdges : 1;  // 0x34(0x1)
	char bLockColorBounaries : 1;  // 0x34(0x1)
	char pad_52_1 : 6;  // 0x34(0x1)
	char pad_53[4];  // 0x35(0x4)
	int32_t BaseLOD;  // 0x38(0x4)

}; 
// Function Engine.KismetMathLibrary.Vector4_SizeSquared
// Size: 0x20(Inherited: 0x0) 
struct FVector4_SizeSquared
{
	struct FVector4 A;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)
	char pad_20[12];  // 0x14(0xC)

}; 
// Function Engine.AvoidanceManager.GetNewAvoidanceUID
// Size: 0x4(Inherited: 0x0) 
struct FGetNewAvoidanceUID
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugString
// Size: 0x48(Inherited: 0x0) 
struct FDrawDebugString
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector TextLocation;  // 0x8(0xC)
	char pad_20[4];  // 0x14(0x4)
	struct FString Text;  // 0x18(0x10)
	struct AActor* TestBaseActor;  // 0x28(0x8)
	struct FLinearColor TextColor;  // 0x30(0x10)
	float Duration;  // 0x40(0x4)
	char pad_68[4];  // 0x44(0x4)

}; 
// Function Engine.Actor.K2_AddActorWorldOffset
// Size: 0x9C(Inherited: 0x0) 
struct FK2_AddActorWorldOffset
{
	struct FVector DeltaLocation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// ScriptStruct Engine.KBoxElem
// Size: 0x58(Inherited: 0x30) 
struct FKBoxElem : public FKShapeElem
{
	struct FVector Center;  // 0x30(0xC)
	struct FRotator Rotation;  // 0x3C(0xC)
	float X;  // 0x48(0x4)
	float Y;  // 0x4C(0x4)
	float Z;  // 0x50(0x4)
	char pad_84[4];  // 0x54(0x4)

}; 
// Function Engine.KismetSystemLibrary.K2_IsTimerPaused
// Size: 0x20(Inherited: 0x0) 
struct FK2_IsTimerPaused
{
	struct UObject* Object;  // 0x0(0x8)
	struct FString FunctionName;  // 0x8(0x10)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.BlueprintPathsLibrary.EnginePluginsDir
// Size: 0x10(Inherited: 0x0) 
struct FEnginePluginsDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// SparseDelegateFunction Engine.ComponentSleepSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FComponentSleepSignature__DelegateSignature
{
	struct UPrimitiveComponent* SleepingComponent;  // 0x0(0x8)
	struct FName BoneName;  // 0x8(0x8)

}; 
// ScriptStruct Engine.A2CSPose
// Size: 0x28(Inherited: 0x10) 
struct FA2CSPose : public FA2Pose
{
	char pad_16[8];  // 0x10(0x8)
	struct TArray<char> ComponentSpaceFlags;  // 0x18(0x10)

}; 
// Function Engine.MatineeActor.SetPosition
// Size: 0x8(Inherited: 0x0) 
struct FSetPosition
{
	float NewPosition;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bJump : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// ScriptStruct Engine.KeyHandleLookupTable
// Size: 0x60(Inherited: 0x0) 
struct FKeyHandleLookupTable
{
	char pad_0[96];  // 0x0(0x60)

}; 
// SparseDelegateFunction Engine.ComponentEndCursorOverSignature__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FComponentEndCursorOverSignature__DelegateSignature
{
	struct UPrimitiveComponent* TouchedComponent;  // 0x0(0x8)

}; 
// ScriptStruct Engine.TextureSourceBlock
// Size: 0x18(Inherited: 0x0) 
struct FTextureSourceBlock
{
	int32_t BlockX;  // 0x0(0x4)
	int32_t BlockY;  // 0x4(0x4)
	int32_t SizeX;  // 0x8(0x4)
	int32_t SizeY;  // 0xC(0x4)
	int32_t NumSlices;  // 0x10(0x4)
	int32_t NumMips;  // 0x14(0x4)

}; 
// Function Engine.SceneComponent.K2_AddLocalTransform
// Size: 0xC0(Inherited: 0x0) 
struct FK2_AddLocalTransform
{
	struct FTransform DeltaTransform;  // 0x0(0x30)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bSweep : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	struct FHitResult SweepHitResult;  // 0x34(0x88)
	char pad_188_1 : 7;  // 0xBC(0x1)
	bool bTeleport : 1;  // 0xBC(0x1)
	char pad_189[3];  // 0xBD(0x3)

}; 
// SparseDelegateFunction Engine.ComponentOnClickedSignature__DelegateSignature
// Size: 0x20(Inherited: 0x0) 
struct FComponentOnClickedSignature__DelegateSignature
{
	struct UPrimitiveComponent* TouchedComponent;  // 0x0(0x8)
	struct FKey ButtonPressed;  // 0x8(0x18)

}; 
// Function Engine.GameplayStatics.IsGamePaused
// Size: 0x10(Inherited: 0x0) 
struct FIsGamePaused
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.Pawn.GetLastMovementInputVector
// Size: 0xC(Inherited: 0x0) 
struct FGetLastMovementInputVector
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// SparseDelegateFunction Engine.ComponentOnReleasedSignature__DelegateSignature
// Size: 0x20(Inherited: 0x0) 
struct FComponentOnReleasedSignature__DelegateSignature
{
	struct UPrimitiveComponent* TouchedComponent;  // 0x0(0x8)
	struct FKey ButtonReleased;  // 0x8(0x18)

}; 
// Function Engine.SceneComponent.IsAnySimulatingPhysics
// Size: 0x1(Inherited: 0x0) 
struct FIsAnySimulatingPhysics
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.BlueprintPathsLibrary.ConvertFromSandboxPath
// Size: 0x30(Inherited: 0x0) 
struct FConvertFromSandboxPath
{
	struct FString InPath;  // 0x0(0x10)
	struct FString InSandboxName;  // 0x10(0x10)
	struct FString ReturnValue;  // 0x20(0x10)

}; 
// ScriptStruct Engine.BPInterfaceDescription
// Size: 0x18(Inherited: 0x0) 
struct FBPInterfaceDescription
{
	UInterface* Interface;  // 0x0(0x8)
	struct TArray<struct UEdGraph*> Graphs;  // 0x8(0x10)

}; 
// Function Engine.KismetSystemLibrary.GetGameBundleId
// Size: 0x10(Inherited: 0x0) 
struct FGetGameBundleId
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// SparseDelegateFunction Engine.ComponentOnInputTouchBeginSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FComponentOnInputTouchBeginSignature__DelegateSignature
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct UPrimitiveComponent* TouchedComponent;  // 0x8(0x8)

}; 
// Function Engine.Actor.ReceiveActorOnInputTouchEnd
// Size: 0x1(Inherited: 0x0) 
struct FReceiveActorOnInputTouchEnd
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)

}; 
// Function Engine.MovementComponent.ConstrainLocationToPlane
// Size: 0x18(Inherited: 0x0) 
struct FConstrainLocationToPlane
{
	struct FVector Location;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// DelegateFunction Engine.OnMontageStartedMCDelegate__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FOnMontageStartedMCDelegate__DelegateSignature
{
	struct UAnimMontage* Montage;  // 0x0(0x8)

}; 
// DelegateFunction Engine.PlayMontageAnimNotifyDelegate__DelegateSignature
// Size: 0x28(Inherited: 0x0) 
struct FPlayMontageAnimNotifyDelegate__DelegateSignature
{
	struct FName NotifyName;  // 0x0(0x8)
	struct FBranchingPointNotifyPayload BranchingPointPayload;  // 0x8(0x20)

}; 
// Function Engine.ActorComponent.ComponentHasTag
// Size: 0xC(Inherited: 0x0) 
struct FComponentHasTag
{
	struct FName Tag;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.SceneComponent.SnapTo
// Size: 0x18(Inherited: 0x0) 
struct FSnapTo
{
	struct USceneComponent* InParent;  // 0x0(0x8)
	struct FName InSocketName;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.BranchingPointNotifyPayload
// Size: 0x20(Inherited: 0x0) 
struct FBranchingPointNotifyPayload
{
	char pad_0[32];  // 0x0(0x20)

}; 
// Function Engine.MaterialInstanceDynamic.K2_InterpolateMaterialInstanceParams
// Size: 0x18(Inherited: 0x0) 
struct FK2_InterpolateMaterialInstanceParams
{
	struct UMaterialInstance* SourceA;  // 0x0(0x8)
	struct UMaterialInstance* SourceB;  // 0x8(0x8)
	float Alpha;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.KismetSystemLibrary.K2_ClearTimerDelegate
// Size: 0x10(Inherited: 0x0) 
struct FK2_ClearTimerDelegate
{
	struct FDelegate Delegate;  // 0x0(0x10)

}; 
// DelegateFunction Engine.OnAudioFadeChangeSignature__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FOnAudioFadeChangeSignature__DelegateSignature
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bFadeOut : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float FadeTime;  // 0x4(0x4)

}; 
// Function Engine.Actor.K2_DetachFromActor
// Size: 0x3(Inherited: 0x0) 
struct FK2_DetachFromActor
{
	uint8_t  LocationRule;  // 0x0(0x1)
	uint8_t  RotationRule;  // 0x1(0x1)
	uint8_t  ScaleRule;  // 0x2(0x1)

}; 
// ScriptStruct Engine.CameraShakeUpdateParams
// Size: 0x600(Inherited: 0x0) 
struct FCameraShakeUpdateParams
{
	float DeltaTime;  // 0x0(0x4)
	float ShakeScale;  // 0x4(0x4)
	float DynamicScale;  // 0x8(0x4)
	float BlendingWeight;  // 0xC(0x4)
	struct FMinimalViewInfo POV;  // 0x10(0x5F0)

}; 
// Function Engine.PrimitiveComponent.SetOnlyOwnerSee
// Size: 0x1(Inherited: 0x0) 
struct FSetOnlyOwnerSee
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewOnlyOwnerSee : 1;  // 0x0(0x1)

}; 
// Function Engine.Emitter.IsActive
// Size: 0x1(Inherited: 0x0) 
struct FIsActive
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.ActorComponent.Activate
// Size: 0x1(Inherited: 0x0) 
struct FActivate
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bReset : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.SetAllMassScale
// Size: 0x4(Inherited: 0x0) 
struct FSetAllMassScale
{
	float InMassScale;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.K2_IsTimerActive
// Size: 0x20(Inherited: 0x0) 
struct FK2_IsTimerActive
{
	struct UObject* Object;  // 0x0(0x8)
	struct FString FunctionName;  // 0x8(0x10)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetSystemLibrary.UnloadPrimaryAsset
// Size: 0x10(Inherited: 0x0) 
struct FUnloadPrimaryAsset
{
	struct FPrimaryAssetId PrimaryAssetId;  // 0x0(0x10)

}; 
// Function Engine.Actor.AddTickPrerequisiteActor
// Size: 0x8(Inherited: 0x0) 
struct FAddTickPrerequisiteActor
{
	struct AActor* PrerequisiteActor;  // 0x0(0x8)

}; 
// Function Engine.SplineComponent.GetWorldDirectionAtDistanceAlongSpline
// Size: 0x10(Inherited: 0x0) 
struct FGetWorldDirectionAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	struct FVector ReturnValue;  // 0x4(0xC)

}; 
// Function Engine.PhysicsConstraintComponent.SetAngularDriveMode
// Size: 0x1(Inherited: 0x0) 
struct FSetAngularDriveMode
{
	char EAngularDriveMode DriveMode;  // 0x0(0x1)

}; 
// Function Engine.GameplayStatics.ApplyPointDamage
// Size: 0xC0(Inherited: 0x0) 
struct FApplyPointDamage
{
	struct AActor* DamagedActor;  // 0x0(0x8)
	float BaseDamage;  // 0x8(0x4)
	struct FVector HitFromDirection;  // 0xC(0xC)
	struct FHitResult HitInfo;  // 0x18(0x88)
	struct AController* eventInstigator;  // 0xA0(0x8)
	struct AActor* DamageCauser;  // 0xA8(0x8)
	UDamageType* DamageTypeClass;  // 0xB0(0x8)
	float ReturnValue;  // 0xB8(0x4)
	char pad_188[4];  // 0xBC(0x4)

}; 
// ScriptStruct Engine.NetViewer
// Size: 0x30(Inherited: 0x0) 
struct FNetViewer
{
	struct UNetConnection* Connection;  // 0x0(0x8)
	struct AActor* InViewer;  // 0x8(0x8)
	struct AActor* ViewTarget;  // 0x10(0x8)
	struct FVector ViewLocation;  // 0x18(0xC)
	struct FVector ViewDir;  // 0x24(0xC)

}; 
// Function Engine.KismetInputLibrary.PointerEvent_GetLastScreenSpacePosition
// Size: 0x78(Inherited: 0x0) 
struct FPointerEvent_GetLastScreenSpacePosition
{
	struct FPointerEvent Input;  // 0x0(0x70)
	struct FVector2D ReturnValue;  // 0x70(0x8)

}; 
// Function Engine.PlayerController.ServerExecRPC
// Size: 0x10(Inherited: 0x0) 
struct FServerExecRPC
{
	struct FString Msg;  // 0x0(0x10)

}; 
// Function Engine.Actor.AddTickPrerequisiteComponent
// Size: 0x8(Inherited: 0x0) 
struct FAddTickPrerequisiteComponent
{
	struct UActorComponent* PrerequisiteComponent;  // 0x0(0x8)

}; 
// Function Engine.GameUserSettings.IsVSyncDirty
// Size: 0x1(Inherited: 0x0) 
struct FIsVSyncDirty
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.SetMassOverrideInKg
// Size: 0x10(Inherited: 0x0) 
struct FSetMassOverrideInKg
{
	struct FName BoneName;  // 0x0(0x8)
	float MassInKg;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bOverrideMass : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.ActorComponent.GetComponentTickInterval
// Size: 0x4(Inherited: 0x0) 
struct FGetComponentTickInterval
{
	float ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.SoundSubmixSendInfo
// Size: 0xB0(Inherited: 0x0) 
struct FSoundSubmixSendInfo
{
	uint8_t  SendLevelControlMethod;  // 0x0(0x1)
	uint8_t  SendStage;  // 0x1(0x1)
	char pad_2[6];  // 0x2(0x6)
	struct USoundSubmixBase* SoundSubmix;  // 0x8(0x8)
	float SendLevel;  // 0x10(0x4)
	float MinSendLevel;  // 0x14(0x4)
	float MaxSendLevel;  // 0x18(0x4)
	float MinSendDistance;  // 0x1C(0x4)
	float MaxSendDistance;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)
	struct FRuntimeFloatCurve CustomSendLevelCurve;  // 0x28(0x88)

}; 
// Function Engine.SplineComponent.GetLocationAtDistanceAlongSpline
// Size: 0x14(Inherited: 0x0) 
struct FGetLocationAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.PlayerController.ServerMutePlayer
// Size: 0x28(Inherited: 0x0) 
struct FServerMutePlayer
{
	struct FUniqueNetIdRepl PlayerId;  // 0x0(0x28)

}; 
// Function Engine.AnimInstance.IsSyncGroupBetweenMarkers
// Size: 0x1C(Inherited: 0x0) 
struct FIsSyncGroupBetweenMarkers
{
	struct FName InSyncGroupName;  // 0x0(0x8)
	struct FName PreviousMarker;  // 0x8(0x8)
	struct FName NextMarker;  // 0x10(0x8)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bRespectMarkerOrder : 1;  // 0x18(0x1)
	char pad_25_1 : 7;  // 0x19(0x1)
	bool ReturnValue : 1;  // 0x19(0x1)
	char pad_26[2];  // 0x1A(0x2)

}; 
// Function Engine.KismetMathLibrary.FromSeconds
// Size: 0x10(Inherited: 0x0) 
struct FFromSeconds
{
	float Seconds;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FTimespan ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.Actor.GetOwner
// Size: 0x8(Inherited: 0x0) 
struct FGetOwner
{
	struct AActor* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.PrimitiveComponent.SetDefaultCustomPrimitiveDataVector2
// Size: 0xC(Inherited: 0x0) 
struct FSetDefaultCustomPrimitiveDataVector2
{
	int32_t DataIndex;  // 0x0(0x4)
	struct FVector2D Value;  // 0x4(0x8)

}; 
// Function Engine.KismetSystemLibrary.BoxOverlapActors
// Size: 0x60(Inherited: 0x0) 
struct FBoxOverlapActors
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector BoxPos;  // 0x8(0xC)
	struct FVector BoxExtent;  // 0x14(0xC)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x20(0x10)
	UObject* ActorClassFilter;  // 0x30(0x8)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x38(0x10)
	struct TArray<struct AActor*> OutActors;  // 0x48(0x10)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool ReturnValue : 1;  // 0x58(0x1)
	char pad_89[7];  // 0x59(0x7)

}; 
// Function Engine.MovementComponent.SetPlaneConstraintNormal
// Size: 0xC(Inherited: 0x0) 
struct FSetPlaneConstraintNormal
{
	struct FVector PlaneNormal;  // 0x0(0xC)

}; 
// Function Engine.GameplayStatics.ProjectWorldToScreen
// Size: 0x20(Inherited: 0x0) 
struct FProjectWorldToScreen
{
	struct APlayerController* Player;  // 0x0(0x8)
	struct FVector WorldPosition;  // 0x8(0xC)
	struct FVector2D screenPosition;  // 0x14(0x8)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bPlayerViewportRelative : 1;  // 0x1C(0x1)
	char pad_29_1 : 7;  // 0x1D(0x1)
	bool ReturnValue : 1;  // 0x1D(0x1)
	char pad_30[2];  // 0x1E(0x2)

}; 
// Function Engine.ActorComponent.IsBeingDestroyed
// Size: 0x1(Inherited: 0x0) 
struct FIsBeingDestroyed
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.ForceFeedbackComponent.Play
// Size: 0x4(Inherited: 0x0) 
struct FPlay
{
	float StartTime;  // 0x0(0x4)

}; 
// Function Engine.RectLightComponent.SetBarnDoorLength
// Size: 0x4(Inherited: 0x0) 
struct FSetBarnDoorLength
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.K2_IsTimerPausedHandle
// Size: 0x18(Inherited: 0x0) 
struct FK2_IsTimerPausedHandle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FTimerHandle Handle;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.AnimInstance.Montage_GetIsStopped
// Size: 0x10(Inherited: 0x0) 
struct FMontage_GetIsStopped
{
	struct UAnimMontage* Montage;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.PrimitiveComponent.SetPhysMaterialOverride
// Size: 0x8(Inherited: 0x0) 
struct FSetPhysMaterialOverride
{
	struct UPhysicalMaterial* NewPhysMaterial;  // 0x0(0x8)

}; 
// Function Engine.PrimitiveComponent.GetCollisionObjectType
// Size: 0x1(Inherited: 0x0) 
struct FGetCollisionObjectType
{
	char ECollisionChannel ReturnValue;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.SetCustomPrimitiveDataVector4
// Size: 0x20(Inherited: 0x0) 
struct FSetCustomPrimitiveDataVector4
{
	int32_t DataIndex;  // 0x0(0x4)
	char pad_4[12];  // 0x4(0xC)
	struct FVector4 Value;  // 0x10(0x10)

}; 
// Function Engine.SceneComponent.SetAbsolute
// Size: 0x3(Inherited: 0x0) 
struct FSetAbsolute
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewAbsoluteLocation : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bNewAbsoluteRotation : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool bNewAbsoluteScale : 1;  // 0x2(0x1)

}; 
// Function Engine.KismetMathLibrary.Divide_TimespanFloat
// Size: 0x18(Inherited: 0x0) 
struct FDivide_TimespanFloat
{
	struct FTimespan A;  // 0x0(0x8)
	float Scalar;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct FTimespan ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.DebugCameraController.ReceiveOnActivate
// Size: 0x8(Inherited: 0x0) 
struct FReceiveOnActivate
{
	struct APlayerController* OriginalPC;  // 0x0(0x8)

}; 
// Function Engine.ActorComponent.IsComponentTickEnabled
// Size: 0x1(Inherited: 0x0) 
struct FIsComponentTickEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.LightComponent.SetForceCachedShadowsForMovablePrimitives
// Size: 0x1(Inherited: 0x0) 
struct FSetForceCachedShadowsForMovablePrimitives
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.HUD.DrawTextureSimple
// Size: 0x18(Inherited: 0x0) 
struct FDrawTextureSimple
{
	struct UTexture* Texture;  // 0x0(0x8)
	float ScreenX;  // 0x8(0x4)
	float ScreenY;  // 0xC(0x4)
	float Scale;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bScalePosition : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.Actor.K2_DestroyComponent
// Size: 0x8(Inherited: 0x0) 
struct FK2_DestroyComponent
{
	struct UActorComponent* Component;  // 0x0(0x8)

}; 
// Function Engine.SkyAtmosphereComponent.SetMieAbsorption
// Size: 0x10(Inherited: 0x0) 
struct FSetMieAbsorption
{
	struct FLinearColor NewValue;  // 0x0(0x10)

}; 
// Function Engine.HUD.ReceiveDrawHUD
// Size: 0x8(Inherited: 0x0) 
struct FReceiveDrawHUD
{
	int32_t SizeX;  // 0x0(0x4)
	int32_t SizeY;  // 0x4(0x4)

}; 
// Function Engine.KismetSystemLibrary.IsInterstitialAdAvailable
// Size: 0x1(Inherited: 0x0) 
struct FIsInterstitialAdAvailable
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.AnimInstance.GetInstanceMachineWeight
// Size: 0x8(Inherited: 0x0) 
struct FGetInstanceMachineWeight
{
	int32_t MachineIndex;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.Quat_SetComponents
// Size: 0x20(Inherited: 0x0) 
struct FQuat_SetComponents
{
	struct FQuat Q;  // 0x0(0x10)
	float X;  // 0x10(0x4)
	float Y;  // 0x14(0x4)
	float Z;  // 0x18(0x4)
	float W;  // 0x1C(0x4)

}; 
// Function Engine.Actor.ReceiveEndPlay
// Size: 0x1(Inherited: 0x0) 
struct FReceiveEndPlay
{
	char EEndPlayReason EndPlayReason;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInRadiansFromStream
// Size: 0x28(Inherited: 0x0) 
struct FRandomUnitVectorInEllipticalConeInRadiansFromStream
{
	struct FVector ConeDir;  // 0x0(0xC)
	float MaxYawInRadians;  // 0xC(0x4)
	float MaxPitchInRadians;  // 0x10(0x4)
	struct FRandomStream Stream;  // 0x14(0x8)
	struct FVector ReturnValue;  // 0x1C(0xC)

}; 
// DelegateFunction Engine.OnQuartzCommandEventBP__DelegateSignature
// Size: 0xC(Inherited: 0x0) 
struct FOnQuartzCommandEventBP__DelegateSignature
{
	uint8_t  EventType;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FName Name;  // 0x4(0x8)

}; 
// Function Engine.InputSettings.GetActionMappingByName
// Size: 0x18(Inherited: 0x0) 
struct FGetActionMappingByName
{
	struct FName InActionName;  // 0x0(0x8)
	struct TArray<struct FInputActionKeyMapping> OutMappings;  // 0x8(0x10)

}; 
// Function Engine.Actor.ReceiveTick
// Size: 0x4(Inherited: 0x0) 
struct FReceiveTick
{
	float DeltaSeconds;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.GetReflectionVector
// Size: 0x24(Inherited: 0x0) 
struct FGetReflectionVector
{
	struct FVector Direction;  // 0x0(0xC)
	struct FVector SurfaceNormal;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// ScriptStruct Engine.PlatformInterfaceData
// Size: 0x30(Inherited: 0x0) 
struct FPlatformInterfaceData
{
	struct FName DataName;  // 0x0(0x8)
	char EPlatformInterfaceDataType Type;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	int32_t IntValue;  // 0xC(0x4)
	float FloatValue;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct FString StringValue;  // 0x18(0x10)
	struct UObject* ObjectValue;  // 0x28(0x8)

}; 
// Function Engine.Actor.RemoveTickPrerequisiteComponent
// Size: 0x8(Inherited: 0x0) 
struct FRemoveTickPrerequisiteComponent
{
	struct UActorComponent* PrerequisiteComponent;  // 0x0(0x8)

}; 
// Function Engine.KismetStringLibrary.Conv_IntPointToString
// Size: 0x18(Inherited: 0x0) 
struct FConv_IntPointToString
{
	struct FIntPoint InIntPoint;  // 0x0(0x8)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetMathLibrary.LessEqual_DateTimeDateTime
// Size: 0x18(Inherited: 0x0) 
struct FLessEqual_DateTimeDateTime
{
	struct FDateTime A;  // 0x0(0x8)
	struct FDateTime B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.PrimitiveComponent.SetWalkableSlopeOverride
// Size: 0x10(Inherited: 0x0) 
struct FSetWalkableSlopeOverride
{
	struct FWalkableSlopeOverride NewOverride;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.IsZero2D
// Size: 0xC(Inherited: 0x0) 
struct FIsZero2D
{
	struct FVector2D A;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// ScriptStruct Engine.ParticleEmitterReplayFrame
// Size: 0x10(Inherited: 0x0) 
struct FParticleEmitterReplayFrame
{
	char pad_0[16];  // 0x0(0x10)

}; 
// Function Engine.Actor.GetActorBounds
// Size: 0x20(Inherited: 0x0) 
struct FGetActorBounds
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bOnlyCollidingComponents : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FVector Origin;  // 0x4(0xC)
	struct FVector BoxExtent;  // 0x10(0xC)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bIncludeFromChildActors : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// Function Engine.ActorComponent.SetActive
// Size: 0x2(Inherited: 0x0) 
struct FSetActive
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewActive : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bReset : 1;  // 0x1(0x1)

}; 
// Function Engine.KismetInputLibrary.InputEvent_IsLeftShiftDown
// Size: 0x20(Inherited: 0x0) 
struct FInputEvent_IsLeftShiftDown
{
	struct FInputEvent Input;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.Actor.GetActorRelativeScale3D
// Size: 0xC(Inherited: 0x0) 
struct FGetActorRelativeScale3D
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.Actor.GetDistanceTo
// Size: 0x10(Inherited: 0x0) 
struct FGetDistanceTo
{
	struct AActor* OtherActor;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.ActorComponent.SetAutoActivate
// Size: 0x1(Inherited: 0x0) 
struct FSetAutoActivate
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewAutoActivate : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.SoundWaveSpectralData
// Size: 0xC(Inherited: 0x0) 
struct FSoundWaveSpectralData
{
	float FrequencyHz;  // 0x0(0x4)
	float Magnitude;  // 0x4(0x4)
	float NormalizedMagnitude;  // 0x8(0x4)

}; 
// Function Engine.VOIPTalker.CreateTalkerForPlayer
// Size: 0x10(Inherited: 0x0) 
struct FCreateTalkerForPlayer
{
	struct APlayerState* OwningState;  // 0x0(0x8)
	struct UVOIPTalker* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetSystemLibrary.GetConvenientWindowedResolutions
// Size: 0x18(Inherited: 0x0) 
struct FGetConvenientWindowedResolutions
{
	struct TArray<struct FIntPoint> Resolutions;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.PointLightComponent.SetSourceLength
// Size: 0x4(Inherited: 0x0) 
struct FSetSourceLength
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.ActorComponent.SetComponentTickInterval
// Size: 0x4(Inherited: 0x0) 
struct FSetComponentTickInterval
{
	float TickInterval;  // 0x0(0x4)

}; 
// ScriptStruct Engine.InterpControlPoint
// Size: 0x1C(Inherited: 0x0) 
struct FInterpControlPoint
{
	struct FVector PositionControlPoint;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bPositionIsRelative : 1;  // 0xC(0x1)
	char pad_13[15];  // 0xD(0xF)

}; 
// ScriptStruct Engine.AnimationFrameSnapshot
// Size: 0x1(Inherited: 0x0) 
struct FAnimationFrameSnapshot
{
	char pad_0[1];  // 0x0(0x1)

}; 
// ScriptStruct Engine.NavDataConfig
// Size: 0x78(Inherited: 0x30) 
struct FNavDataConfig : public FNavAgentProperties
{
	struct FName Name;  // 0x30(0x8)
	struct FColor Color;  // 0x38(0x4)
	struct FVector DefaultQueryExtent;  // 0x3C(0xC)
	AActor* NavigationDataClass;  // 0x48(0x8)
	struct TSoftClassPtr<UObject> NavDataClass;  // 0x50(0x28)

}; 
// Function Engine.ActorComponent.SetComponentTickIntervalAndCooldown
// Size: 0x4(Inherited: 0x0) 
struct FSetComponentTickIntervalAndCooldown
{
	float TickInterval;  // 0x0(0x4)

}; 
// Function Engine.KismetInternationalizationLibrary.GetCurrentCulture
// Size: 0x10(Inherited: 0x0) 
struct FGetCurrentCulture
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.GameplayStatics.IsSplitscreenForceDisabled
// Size: 0x10(Inherited: 0x0) 
struct FIsSplitscreenForceDisabled
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.PrimitiveComponent.GetCollisionEnabled
// Size: 0x1(Inherited: 0x0) 
struct FGetCollisionEnabled
{
	char ECollisionEnabled ReturnValue;  // 0x0(0x1)

}; 
// Function Engine.PlayerController.ClientTravel
// Size: 0x28(Inherited: 0x0) 
struct FClientTravel
{
	struct FString URL;  // 0x0(0x10)
	char ETravelType TravelType;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bSeamless : 1;  // 0x11(0x1)
	char pad_18[2];  // 0x12(0x2)
	struct FGuid MapPackageGuid;  // 0x14(0x10)
	char pad_36[4];  // 0x24(0x4)

}; 
// ScriptStruct Engine.StreamingRenderAssetPrimitiveInfo
// Size: 0x30(Inherited: 0x0) 
struct FStreamingRenderAssetPrimitiveInfo
{
	struct UStreamableRenderAsset* RenderAsset;  // 0x0(0x8)
	struct FBoxSphereBounds Bounds;  // 0x8(0x1C)
	float TexelFactor;  // 0x24(0x4)
	uint32_t PackedRelativeBox;  // 0x28(0x4)
	char bAllowInvalidTexelFactorWhenUnregistered : 1;  // 0x2C(0x1)
	char pad_44_1 : 7;  // 0x2C(0x1)
	char pad_45[4];  // 0x2D(0x4)

}; 
// Function Engine.KismetRenderingLibrary.ExportRenderTarget
// Size: 0x30(Inherited: 0x0) 
struct FExportRenderTarget
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UTextureRenderTarget2D* TextureRenderTarget;  // 0x8(0x8)
	struct FString FilePath;  // 0x10(0x10)
	struct FString Filename;  // 0x20(0x10)

}; 
// Function Engine.ActorComponent.SetIsReplicated
// Size: 0x1(Inherited: 0x0) 
struct FSetIsReplicated
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ShouldReplicate : 1;  // 0x0(0x1)

}; 
// Function Engine.SkinnedMeshComponent.IsMaterialSectionShown
// Size: 0xC(Inherited: 0x0) 
struct FIsMaterialSectionShown
{
	int32_t MaterialID;  // 0x0(0x4)
	int32_t LODIndex;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.Actor.SetTickableWhenPaused
// Size: 0x1(Inherited: 0x0) 
struct FSetTickableWhenPaused
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bTickableWhenPaused : 1;  // 0x0(0x1)

}; 
// Function Engine.SceneComponent.K2_GetComponentToWorld
// Size: 0x30(Inherited: 0x0) 
struct FK2_GetComponentToWorld
{
	struct FTransform ReturnValue;  // 0x0(0x30)

}; 
// Function Engine.PlayerController.ServerViewSelf
// Size: 0x10(Inherited: 0x0) 
struct FServerViewSelf
{
	struct FViewTargetTransitionParams TransitionParams;  // 0x0(0x10)

}; 
// ScriptStruct Engine.ExponentialHeightFogData
// Size: 0xC(Inherited: 0x0) 
struct FExponentialHeightFogData
{
	float FogDensity;  // 0x0(0x4)
	float FogHeightFalloff;  // 0x4(0x4)
	float FogHeightOffset;  // 0x8(0x4)

}; 
// Function Engine.Actor.SetTickGroup
// Size: 0x1(Inherited: 0x0) 
struct FSetTickGroup
{
	char ETickingGroup NewTickGroup;  // 0x0(0x1)

}; 
// Function Engine.VisualLoggerKismetLibrary.LogSegment
// Size: 0x50(Inherited: 0x0) 
struct FLogSegment
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector SegmentStart;  // 0x8(0xC)
	struct FVector SegmentEnd;  // 0x14(0xC)
	struct FString Text;  // 0x20(0x10)
	struct FLinearColor ObjectColor;  // 0x30(0x10)
	float Thickness;  // 0x40(0x4)
	struct FName CategoryName;  // 0x44(0x8)
	char pad_76_1 : 7;  // 0x4C(0x1)
	bool bAddToMessageLog : 1;  // 0x4C(0x1)
	char pad_77[3];  // 0x4D(0x3)

}; 
// Function Engine.KismetSystemLibrary.LoadInterstitialAd
// Size: 0x4(Inherited: 0x0) 
struct FLoadInterstitialAd
{
	int32_t AdIdIndex;  // 0x0(0x4)

}; 
// Function Engine.Actor.K2_GetActorRotation
// Size: 0xC(Inherited: 0x0) 
struct FK2_GetActorRotation
{
	struct FRotator ReturnValue;  // 0x0(0xC)

}; 
// ScriptStruct Engine.FilmStockSettings
// Size: 0x14(Inherited: 0x0) 
struct FFilmStockSettings
{
	float Slope;  // 0x0(0x4)
	float Toe;  // 0x4(0x4)
	float Shoulder;  // 0x8(0x4)
	float BlackClip;  // 0xC(0x4)
	float WhiteClip;  // 0x10(0x4)

}; 
// ScriptStruct Engine.SimpleMemberReference
// Size: 0x20(Inherited: 0x0) 
struct FSimpleMemberReference
{
	struct UObject* MemberParent;  // 0x0(0x8)
	struct FName MemberName;  // 0x8(0x8)
	struct FGuid MemberGuid;  // 0x10(0x10)

}; 
// ScriptStruct Engine.TickFunction
// Size: 0x28(Inherited: 0x0) 
struct FTickFunction
{
	char pad_0[8];  // 0x0(0x8)
	char ETickingGroup TickGroup;  // 0x8(0x1)
	char ETickingGroup EndTickGroup;  // 0x9(0x1)
	char bTickEvenWhenPaused : 1;  // 0xA(0x1)
	char bCanEverTick : 1;  // 0xA(0x1)
	char bStartWithTickEnabled : 1;  // 0xA(0x1)
	char bAllowTickOnDedicatedServer : 1;  // 0xA(0x1)
	char pad_10_1 : 4;  // 0xA(0x1)
	char pad_11[2];  // 0xB(0x2)
	float TickInterval;  // 0xC(0x4)
	char pad_16[24];  // 0x10(0x18)

}; 
// ScriptStruct Engine.CollectionVectorParameter
// Size: 0x28(Inherited: 0x18) 
struct FCollectionVectorParameter : public FCollectionParameterBase
{
	struct FLinearColor DefaultValue;  // 0x18(0x10)

}; 
// Function Engine.KismetMathLibrary.Matrix_ScaleTranslation
// Size: 0x90(Inherited: 0x0) 
struct FMatrix_ScaleTranslation
{
	struct FMatrix M;  // 0x0(0x40)
	struct FVector Scale3D;  // 0x40(0xC)
	char pad_76[4];  // 0x4C(0x4)
	struct FMatrix ReturnValue;  // 0x50(0x40)

}; 
// ScriptStruct Engine.ActorComponentTickFunction
// Size: 0x30(Inherited: 0x28) 
struct FActorComponentTickFunction : public FTickFunction
{
	char pad_40[8];  // 0x28(0x8)

}; 
// Function Engine.KismetNodeHelperLibrary.GetRandomUnmarkedBit
// Size: 0x10(Inherited: 0x0) 
struct FGetRandomUnmarkedBit
{
	int32_t Data;  // 0x0(0x4)
	int32_t StartIdx;  // 0x4(0x4)
	int32_t NumBits;  // 0x8(0x4)
	int32_t ReturnValue;  // 0xC(0x4)

}; 
// DelegateFunction Engine.ApplicationLifecycleComponent.OnTemperatureChangeDelegate__DelegateSignature
// Size: 0x1(Inherited: 0x0) 
struct FOnTemperatureChangeDelegate__DelegateSignature
{
	uint8_t  Severity;  // 0x0(0x1)

}; 
// Function Engine.MovementComponent.K2_MoveUpdatedComponent
// Size: 0xA4(Inherited: 0x0) 
struct FK2_MoveUpdatedComponent
{
	struct FVector Delta;  // 0x0(0xC)
	struct FRotator NewRotation;  // 0xC(0xC)
	struct FHitResult OutHit;  // 0x18(0x88)
	char pad_160_1 : 7;  // 0xA0(0x1)
	bool bSweep : 1;  // 0xA0(0x1)
	char pad_161_1 : 7;  // 0xA1(0x1)
	bool bTeleport : 1;  // 0xA1(0x1)
	char pad_162_1 : 7;  // 0xA2(0x1)
	bool ReturnValue : 1;  // 0xA2(0x1)
	char pad_163[1];  // 0xA3(0x1)

}; 
// Function Engine.KismetSystemLibrary.BoxTraceSingleForObjects
// Size: 0x118(Inherited: 0x0) 
struct FBoxTraceSingleForObjects
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	struct FVector HalfSize;  // 0x20(0xC)
	struct FRotator Orientation;  // 0x2C(0xC)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x38(0x10)
	char pad_72_1 : 7;  // 0x48(0x1)
	bool bTraceComplex : 1;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x50(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x60(0x1)
	char pad_97[3];  // 0x61(0x3)
	struct FHitResult OutHit;  // 0x64(0x88)
	char pad_236_1 : 7;  // 0xEC(0x1)
	bool bIgnoreSelf : 1;  // 0xEC(0x1)
	char pad_237[3];  // 0xED(0x3)
	struct FLinearColor TraceColor;  // 0xF0(0x10)
	struct FLinearColor TraceHitColor;  // 0x100(0x10)
	float DrawTime;  // 0x110(0x4)
	char pad_276_1 : 7;  // 0x114(0x1)
	bool ReturnValue : 1;  // 0x114(0x1)
	char pad_277[3];  // 0x115(0x3)

}; 
// Function Engine.PlayerController.ClientSetForceMipLevelsToBeResident
// Size: 0x10(Inherited: 0x0) 
struct FClientSetForceMipLevelsToBeResident
{
	struct UMaterialInterface* Material;  // 0x0(0x8)
	float ForceDuration;  // 0x8(0x4)
	int32_t CinematicTextureGroups;  // 0xC(0x4)

}; 
// DelegateFunction Engine.ApplicationLifecycleComponent.ApplicationStartupArgumentsDelegate__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FApplicationStartupArgumentsDelegate__DelegateSignature
{
	struct TArray<struct FString> StartupArguments;  // 0x0(0x10)

}; 
// Function Engine.PlayerController.ServerUnmutePlayer
// Size: 0x28(Inherited: 0x0) 
struct FServerUnmutePlayer
{
	struct FUniqueNetIdRepl PlayerId;  // 0x0(0x28)

}; 
// ScriptStruct Engine.LevelStreamingStatus
// Size: 0x10(Inherited: 0x0) 
struct FLevelStreamingStatus
{
	struct FName PackageName;  // 0x0(0x8)
	char bShouldBeLoaded : 1;  // 0x8(0x1)
	char bShouldBeVisible : 1;  // 0x8(0x1)
	char pad_8_1 : 6;  // 0x8(0x1)
	char pad_9[4];  // 0x9(0x4)
	uint32_t LODIndex;  // 0xC(0x4)

}; 
// ScriptStruct Engine.HLODISMComponentDesc
// Size: 0x20(Inherited: 0x0) 
struct FHLODISMComponentDesc
{
	struct UStaticMesh* StaticMesh;  // 0x0(0x8)
	struct UMaterialInterface* Material;  // 0x8(0x8)
	struct TArray<struct FTransform> Instances;  // 0x10(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.IsProjectFilePathSet
// Size: 0x1(Inherited: 0x0) 
struct FIsProjectFilePathSet
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// DelegateFunction Engine.OnSubmixSpectralAnalysisBP__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnSubmixSpectralAnalysisBP__DelegateSignature
{
	struct TArray<float> Magnitude;  // 0x0(0x10)

}; 
// Function Engine.SceneComponent.K2_SetRelativeLocation
// Size: 0x9C(Inherited: 0x0) 
struct FK2_SetRelativeLocation
{
	struct FVector NewLocation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// Function Engine.KismetMathLibrary.Vector4_IsNAN
// Size: 0x20(Inherited: 0x0) 
struct FVector4_IsNAN
{
	struct FVector4 A;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[15];  // 0x11(0xF)

}; 
// ScriptStruct Engine.NavAvoidanceMask
// Size: 0x4(Inherited: 0x0) 
struct FNavAvoidanceMask
{
	char bGroup0 : 1;  // 0x0(0x1)
	char bGroup1 : 1;  // 0x0(0x1)
	char bGroup2 : 1;  // 0x0(0x1)
	char bGroup3 : 1;  // 0x0(0x1)
	char bGroup4 : 1;  // 0x0(0x1)
	char bGroup5 : 1;  // 0x0(0x1)
	char bGroup6 : 1;  // 0x0(0x1)
	char bGroup7 : 1;  // 0x0(0x1)
	char bGroup8 : 1;  // 0x1(0x1)
	char bGroup9 : 1;  // 0x1(0x1)
	char bGroup10 : 1;  // 0x1(0x1)
	char bGroup11 : 1;  // 0x1(0x1)
	char bGroup12 : 1;  // 0x1(0x1)
	char bGroup13 : 1;  // 0x1(0x1)
	char bGroup14 : 1;  // 0x1(0x1)
	char bGroup15 : 1;  // 0x1(0x1)
	char bGroup16 : 1;  // 0x2(0x1)
	char bGroup17 : 1;  // 0x2(0x1)
	char bGroup18 : 1;  // 0x2(0x1)
	char bGroup19 : 1;  // 0x2(0x1)
	char bGroup20 : 1;  // 0x2(0x1)
	char bGroup21 : 1;  // 0x2(0x1)
	char bGroup22 : 1;  // 0x2(0x1)
	char bGroup23 : 1;  // 0x2(0x1)
	char bGroup24 : 1;  // 0x3(0x1)
	char bGroup25 : 1;  // 0x3(0x1)
	char bGroup26 : 1;  // 0x3(0x1)
	char bGroup27 : 1;  // 0x3(0x1)
	char bGroup28 : 1;  // 0x3(0x1)
	char bGroup29 : 1;  // 0x3(0x1)
	char bGroup30 : 1;  // 0x3(0x1)
	char bGroup31 : 1;  // 0x3(0x1)

}; 
// DelegateFunction Engine.OnQuartzMetronomeEvent__DelegateSignature
// Size: 0x18(Inherited: 0x0) 
struct FOnQuartzMetronomeEvent__DelegateSignature
{
	struct FName ClockName;  // 0x0(0x8)
	uint8_t  QuantizationType;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	int32_t NumBars;  // 0xC(0x4)
	int32_t Beat;  // 0x10(0x4)
	float BeatFraction;  // 0x14(0x4)

}; 
// ScriptStruct Engine.SupportedSubTrackInfo
// Size: 0x20(Inherited: 0x0) 
struct FSupportedSubTrackInfo
{
	UInterpTrack* SupportedClass;  // 0x0(0x8)
	struct FString SubTrackName;  // 0x8(0x10)
	int32_t GroupIndex;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.ImportanceSamplingLibrary.ImportanceSample
// Size: 0x80(Inherited: 0x0) 
struct FImportanceSample
{
	struct FImportanceTexture Texture;  // 0x0(0x50)
	struct FVector2D Rand;  // 0x50(0x8)
	int32_t Samples;  // 0x58(0x4)
	float Intensity;  // 0x5C(0x4)
	struct FVector2D SamplePosition;  // 0x60(0x8)
	struct FLinearColor SampleColor;  // 0x68(0x10)
	float SampleIntensity;  // 0x78(0x4)
	float SampleSize;  // 0x7C(0x4)

}; 
// DelegateFunction Engine.OnQuartzCommandEvent__DelegateSignature
// Size: 0xC(Inherited: 0x0) 
struct FOnQuartzCommandEvent__DelegateSignature
{
	uint8_t  EventType;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FName Name;  // 0x4(0x8)

}; 
// ScriptStruct Engine.RadialDamageEvent
// Size: 0x40(Inherited: 0x10) 
struct FRadialDamageEvent : public FDamageEvent
{
	struct FRadialDamageParams Params;  // 0x10(0x14)
	struct FVector Origin;  // 0x24(0xC)
	struct TArray<struct FHitResult> ComponentHits;  // 0x30(0x10)

}; 
// ScriptStruct Engine.BlendProfileBoneEntry
// Size: 0x14(Inherited: 0x0) 
struct FBlendProfileBoneEntry
{
	struct FBoneReference BoneReference;  // 0x0(0x10)
	float BlendScale;  // 0x10(0x4)

}; 
// Function Engine.GameplayStatics.GetIntOption
// Size: 0x28(Inherited: 0x0) 
struct FGetIntOption
{
	struct FString Options;  // 0x0(0x10)
	struct FString Key;  // 0x10(0x10)
	int32_t DefaultValue;  // 0x20(0x4)
	int32_t ReturnValue;  // 0x24(0x4)

}; 
// ScriptStruct Engine.LatentActionInfo
// Size: 0x18(Inherited: 0x0) 
struct FLatentActionInfo
{
	int32_t Linkage;  // 0x0(0x4)
	int32_t UUID;  // 0x4(0x4)
	struct FName ExecutionFunction;  // 0x8(0x8)
	struct UObject* CallbackTarget;  // 0x10(0x8)

}; 
// DelegateFunction Engine.OnQueueSubtitles__DelegateSignature
// Size: 0x18(Inherited: 0x0) 
struct FOnQueueSubtitles__DelegateSignature
{
	struct TArray<struct FSubtitleCue> Subtitles;  // 0x0(0x10)
	float CueDuration;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.InstancedStaticMeshComponent.SetCullDistances
// Size: 0x8(Inherited: 0x0) 
struct FSetCullDistances
{
	int32_t StartCullDistance;  // 0x0(0x4)
	int32_t EndCullDistance;  // 0x4(0x4)

}; 
// Function Engine.SceneComponent.SetRelativeScale3D
// Size: 0xC(Inherited: 0x0) 
struct FSetRelativeScale3D
{
	struct FVector NewScale3D;  // 0x0(0xC)

}; 
// Function Engine.SkeletalMeshComponent.HasValidAnimationInstance
// Size: 0x1(Inherited: 0x0) 
struct FHasValidAnimationInstance
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.SubtitleCue
// Size: 0x20(Inherited: 0x0) 
struct FSubtitleCue
{
	struct FText Text;  // 0x0(0x18)
	float Time;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// DelegateFunction Engine.OnAudioPlayStateChanged__DelegateSignature
// Size: 0x1(Inherited: 0x0) 
struct FOnAudioPlayStateChanged__DelegateSignature
{
	uint8_t  PlayState;  // 0x0(0x1)

}; 
// DelegateFunction Engine.OnAudioVirtualizationChanged__DelegateSignature
// Size: 0x1(Inherited: 0x0) 
struct FOnAudioVirtualizationChanged__DelegateSignature
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bIsVirtualized : 1;  // 0x0(0x1)

}; 
// Function Engine.SplineComponent.GetRightVectorAtDistanceAlongSpline
// Size: 0x14(Inherited: 0x0) 
struct FGetRightVectorAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.KismetMathLibrary.Clamp
// Size: 0x10(Inherited: 0x0) 
struct FClamp
{
	int32_t Value;  // 0x0(0x4)
	int32_t Min;  // 0x4(0x4)
	int32_t Max;  // 0x8(0x4)
	int32_t ReturnValue;  // 0xC(0x4)

}; 
// DelegateFunction Engine.OnAudioSingleEnvelopeValue__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnAudioSingleEnvelopeValue__DelegateSignature
{
	struct USoundWave* PlayingSoundWave;  // 0x0(0x8)
	float EnvelopeValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// ScriptStruct Engine.FontCharacter
// Size: 0x18(Inherited: 0x0) 
struct FFontCharacter
{
	int32_t StartU;  // 0x0(0x4)
	int32_t StartV;  // 0x4(0x4)
	int32_t USize;  // 0x8(0x4)
	int32_t VSize;  // 0xC(0x4)
	char TextureIndex;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	int32_t VerticalOffset;  // 0x14(0x4)

}; 
// Function Engine.KismetSystemLibrary.LoadAsset_Blocking
// Size: 0x30(Inherited: 0x0) 
struct FLoadAsset_Blocking
{
	struct TSoftObjectPtr<UObject> Asset;  // 0x0(0x28)
	struct UObject* ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.KismetMathLibrary.RandomRotatorFromStream
// Size: 0x18(Inherited: 0x0) 
struct FRandomRotatorFromStream
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bRoll : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FRandomStream Stream;  // 0x4(0x8)
	struct FRotator ReturnValue;  // 0xC(0xC)

}; 
// DelegateFunction Engine.OnForceFeedbackFinished__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FOnForceFeedbackFinished__DelegateSignature
{
	struct UForceFeedbackComponent* ForceFeedbackComponent;  // 0x0(0x8)

}; 
// DelegateFunction Engine.InputActionHandlerDynamicSignature__DelegateSignature
// Size: 0x18(Inherited: 0x0) 
struct FInputActionHandlerDynamicSignature__DelegateSignature
{
	struct FKey Key;  // 0x0(0x18)

}; 
// ScriptStruct Engine.DepthFieldGlowInfo
// Size: 0x24(Inherited: 0x0) 
struct FDepthFieldGlowInfo
{
	char bEnableGlow : 1;  // 0x0(0x1)
	char pad_0_1 : 7;  // 0x0(0x1)
	char pad_1[4];  // 0x1(0x4)
	struct FLinearColor GlowColor;  // 0x4(0x10)
	struct FVector2D GlowOuterRadius;  // 0x14(0x8)
	struct FVector2D GlowInnerRadius;  // 0x1C(0x8)

}; 
// DelegateFunction Engine.InputTouchHandlerDynamicSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FInputTouchHandlerDynamicSignature__DelegateSignature
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FVector Location;  // 0x4(0xC)

}; 
// Function Engine.KismetMathLibrary.RandomIntegerFromStream
// Size: 0x10(Inherited: 0x0) 
struct FRandomIntegerFromStream
{
	int32_t Max;  // 0x0(0x4)
	struct FRandomStream Stream;  // 0x4(0x8)
	int32_t ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.GameplayStatics.SetWorldOriginLocation
// Size: 0x18(Inherited: 0x0) 
struct FSetWorldOriginLocation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FIntVector NewLocation;  // 0x8(0xC)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.HUD.DrawText
// Size: 0x38(Inherited: 0x0) 
struct FDrawText
{
	struct FString Text;  // 0x0(0x10)
	struct FLinearColor TextColor;  // 0x10(0x10)
	float ScreenX;  // 0x20(0x4)
	float ScreenY;  // 0x24(0x4)
	struct UFont* Font;  // 0x28(0x8)
	float Scale;  // 0x30(0x4)
	char pad_52_1 : 7;  // 0x34(0x1)
	bool bScalePosition : 1;  // 0x34(0x1)
	char pad_53[3];  // 0x35(0x3)

}; 
// Function Engine.SceneComponent.GetSocketRotation
// Size: 0x14(Inherited: 0x0) 
struct FGetSocketRotation
{
	struct FName InSocketName;  // 0x0(0x8)
	struct FRotator ReturnValue;  // 0x8(0xC)

}; 
// DelegateFunction Engine.InputGestureHandlerDynamicSignature__DelegateSignature
// Size: 0x4(Inherited: 0x0) 
struct FInputGestureHandlerDynamicSignature__DelegateSignature
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.GetPI
// Size: 0x4(Inherited: 0x0) 
struct FGetPI
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetArrayLibrary.Array_RandomFromStream
// Size: 0x20(Inherited: 0x0) 
struct FArray_RandomFromStream
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	struct FRandomStream RandomStream;  // 0x10(0x8)
	int32_t OutItem;  // 0x18(0x4)
	int32_t OutIndex;  // 0x1C(0x4)

}; 
// Function Engine.Actor.GetInputVectorAxisValue
// Size: 0x28(Inherited: 0x0) 
struct FGetInputVectorAxisValue
{
	struct FKey InputAxisKey;  // 0x0(0x18)
	struct FVector ReturnValue;  // 0x18(0xC)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.KismetSystemLibrary.GetVolumeButtonsHandledBySystem
// Size: 0x1(Inherited: 0x0) 
struct FGetVolumeButtonsHandledBySystem
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.Actor.K2_SetActorRelativeTransform
// Size: 0xC0(Inherited: 0x0) 
struct FK2_SetActorRelativeTransform
{
	struct FTransform NewRelativeTransform;  // 0x0(0x30)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bSweep : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	struct FHitResult SweepHitResult;  // 0x34(0x88)
	char pad_188_1 : 7;  // 0xBC(0x1)
	bool bTeleport : 1;  // 0xBC(0x1)
	char pad_189[3];  // 0xBD(0x3)

}; 
// ScriptStruct Engine.InstancedStaticMeshLightMapInstanceData
// Size: 0x40(Inherited: 0x0) 
struct FInstancedStaticMeshLightMapInstanceData
{
	struct FTransform Transform;  // 0x0(0x30)
	struct TArray<struct FGuid> MapBuildDataIds;  // 0x30(0x10)

}; 
// Function Engine.PhysicsConstraintComponent.GetCurrentSwing2
// Size: 0x4(Inherited: 0x0) 
struct FGetCurrentSwing2
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.MovementComponent.ConstrainDirectionToPlane
// Size: 0x18(Inherited: 0x0) 
struct FConstrainDirectionToPlane
{
	struct FVector Direction;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.SplineComponent.SetSplinePointType
// Size: 0x8(Inherited: 0x0) 
struct FSetSplinePointType
{
	int32_t PointIndex;  // 0x0(0x4)
	char ESplinePointType Type;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bUpdateSpline : 1;  // 0x5(0x1)
	char pad_6[2];  // 0x6(0x2)

}; 
// Function Engine.MovementComponent.ConstrainNormalToPlane
// Size: 0x18(Inherited: 0x0) 
struct FConstrainNormalToPlane
{
	struct FVector Normal;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.MovementComponent.GetGravityZ
// Size: 0x4(Inherited: 0x0) 
struct FGetGravityZ
{
	float ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.StaticTerrainLayerWeightParameter
// Size: 0x2C(Inherited: 0x24) 
struct FStaticTerrainLayerWeightParameter : public FStaticParameterBase
{
	int32_t WeightmapIndex;  // 0x24(0x4)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bWeightBasedBlend : 1;  // 0x28(0x1)
	char pad_41[3];  // 0x29(0x3)

}; 
// ScriptStruct Engine.CachedPoseIndices
// Size: 0x10(Inherited: 0x0) 
struct FCachedPoseIndices
{
	struct TArray<int32_t> OrderedSavedPoseNodeIndices;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.ClampVectorSize
// Size: 0x20(Inherited: 0x0) 
struct FClampVectorSize
{
	struct FVector A;  // 0x0(0xC)
	float Min;  // 0xC(0x4)
	float Max;  // 0x10(0x4)
	struct FVector ReturnValue;  // 0x14(0xC)

}; 
// Function Engine.MovementComponent.GetMaxSpeed
// Size: 0x4(Inherited: 0x0) 
struct FGetMaxSpeed
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.ConvertToRelativePath
// Size: 0x20(Inherited: 0x0) 
struct FConvertToRelativePath
{
	struct FString Filename;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.SkinnedMeshComponent.SetSkinWeightOverride
// Size: 0x18(Inherited: 0x0) 
struct FSetSkinWeightOverride
{
	int32_t LODIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct TArray<struct FSkelMeshSkinWeightInfo> SkinWeights;  // 0x8(0x10)

}; 
// Function Engine.StereoLayerComponent.SetTexture
// Size: 0x8(Inherited: 0x0) 
struct FSetTexture
{
	struct UTexture* InTexture;  // 0x0(0x8)

}; 
// Function Engine.PrimitiveComponent.SetHiddenInSceneCapture
// Size: 0x1(Inherited: 0x0) 
struct FSetHiddenInSceneCapture
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SplineComponent.GetLocationAtSplinePoint
// Size: 0x14(Inherited: 0x0) 
struct FGetLocationAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationSettingsBelow
// Size: 0x30(Inherited: 0x0) 
struct FApplyPhysicalAnimationSettingsBelow
{
	struct FName BodyName;  // 0x0(0x8)
	struct FPhysicalAnimationData PhysicalAnimationData;  // 0x8(0x24)
	char pad_44_1 : 7;  // 0x2C(0x1)
	bool bIncludeSelf : 1;  // 0x2C(0x1)
	char pad_45[3];  // 0x2D(0x3)

}; 
// Function Engine.SceneComponent.GetPhysicsVolume
// Size: 0x8(Inherited: 0x0) 
struct FGetPhysicsVolume
{
	struct APhysicsVolume* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.SkinnedMeshComponent.TransformToBoneSpace
// Size: 0x38(Inherited: 0x0) 
struct FTransformToBoneSpace
{
	struct FName BoneName;  // 0x0(0x8)
	struct FVector InPosition;  // 0x8(0xC)
	struct FRotator InRotation;  // 0x14(0xC)
	struct FVector OutPosition;  // 0x20(0xC)
	struct FRotator OutRotation;  // 0x2C(0xC)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_DateTimeDateTime
// Size: 0x18(Inherited: 0x0) 
struct FEqualEqual_DateTimeDateTime
{
	struct FDateTime A;  // 0x0(0x8)
	struct FDateTime B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.LODSoloTrack
// Size: 0x10(Inherited: 0x0) 
struct FLODSoloTrack
{
	struct TArray<char> SoloEnableSetting;  // 0x0(0x10)

}; 
// Function Engine.MovementComponent.GetPlaneConstraintAxisSetting
// Size: 0x1(Inherited: 0x0) 
struct FGetPlaneConstraintAxisSetting
{
	uint8_t  ReturnValue;  // 0x0(0x1)

}; 
// Function Engine.KismetSystemLibrary.ShowPlatformSpecificAchievementsScreen
// Size: 0x8(Inherited: 0x0) 
struct FShowPlatformSpecificAchievementsScreen
{
	struct APlayerController* SpecificPlayer;  // 0x0(0x8)

}; 
// Function Engine.KismetTextLibrary.Conv_Vector2dToText
// Size: 0x20(Inherited: 0x0) 
struct FConv_Vector2dToText
{
	struct FVector2D InVec;  // 0x0(0x8)
	struct FText ReturnValue;  // 0x8(0x18)

}; 
// Function Engine.KismetMathLibrary.RotatorFromAxisAndAngle
// Size: 0x1C(Inherited: 0x0) 
struct FRotatorFromAxisAndAngle
{
	struct FVector Axis;  // 0x0(0xC)
	float angle;  // 0xC(0x4)
	struct FRotator ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.KismetSystemLibrary.BreakSoftClassPath
// Size: 0x28(Inherited: 0x0) 
struct FBreakSoftClassPath
{
	struct FSoftClassPath InSoftClassPath;  // 0x0(0x18)
	struct FString PathString;  // 0x18(0x10)

}; 
// Function Engine.KismetMathLibrary.NotEqualExactly_Vector2DVector2D
// Size: 0x14(Inherited: 0x0) 
struct FNotEqualExactly_Vector2DVector2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationBadgeAtTime
// Size: 0x28(Inherited: 0x0) 
struct FScheduleLocalNotificationBadgeAtTime
{
	struct FDateTime FireDateTime;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool LocalTime : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)
	struct FString ActivationEvent;  // 0x10(0x10)
	int32_t ReturnValue;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.MovementComponent.GetPlaneConstraintNormal
// Size: 0xC(Inherited: 0x0) 
struct FGetPlaneConstraintNormal
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// ScriptStruct Engine.ColorGradePerRangeSettings
// Size: 0x50(Inherited: 0x0) 
struct FColorGradePerRangeSettings
{
	struct FVector4 Saturation;  // 0x0(0x10)
	struct FVector4 Contrast;  // 0x10(0x10)
	struct FVector4 Gamma;  // 0x20(0x10)
	struct FVector4 Gain;  // 0x30(0x10)
	struct FVector4 Offset;  // 0x40(0x10)

}; 
// Function Engine.PhysicsConstraintComponent.SetAngularVelocityDriveTwistAndSwing
// Size: 0x2(Inherited: 0x0) 
struct FSetAngularVelocityDriveTwistAndSwing
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnableTwistDrive : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bEnableSwingDrive : 1;  // 0x1(0x1)

}; 
// ScriptStruct Engine.Vector_NetQuantize100
// Size: 0xC(Inherited: 0xC) 
struct FVector_NetQuantize100 : public FVector
{

}; 
// Function Engine.MovementComponent.IsExceedingMaxSpeed
// Size: 0x8(Inherited: 0x0) 
struct FIsExceedingMaxSpeed
{
	float MaxSpeed;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool ReturnValue : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.Actor.K2_GetRootComponent
// Size: 0x8(Inherited: 0x0) 
struct FK2_GetRootComponent
{
	struct USceneComponent* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.GameplayStatics.GetGlobalTimeDilation
// Size: 0x10(Inherited: 0x0) 
struct FGetGlobalTimeDilation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.MovementComponent.K2_GetMaxSpeedModifier
// Size: 0x4(Inherited: 0x0) 
struct FK2_GetMaxSpeedModifier
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.MovementComponent.K2_GetModifiedMaxSpeed
// Size: 0x4(Inherited: 0x0) 
struct FK2_GetModifiedMaxSpeed
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMaterialLibrary.CreateDynamicMaterialInstance
// Size: 0x28(Inherited: 0x0) 
struct FCreateDynamicMaterialInstance
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UMaterialInterface* Parent;  // 0x8(0x8)
	struct FName OptionalName;  // 0x10(0x8)
	uint8_t  CreationFlags;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)
	struct UMaterialInstanceDynamic* ReturnValue;  // 0x20(0x8)

}; 
// ScriptStruct Engine.DirectorTrackCut
// Size: 0x14(Inherited: 0x0) 
struct FDirectorTrackCut
{
	float Time;  // 0x0(0x4)
	float TransitionTime;  // 0x4(0x4)
	struct FName TargetCamGroup;  // 0x8(0x8)
	int32_t ShotNumber;  // 0x10(0x4)

}; 
// Function Engine.AnimInstance.GetLinkedAnimLayerInstancesByGroup
// Size: 0x18(Inherited: 0x0) 
struct FGetLinkedAnimLayerInstancesByGroup
{
	struct FName InGroup;  // 0x0(0x8)
	struct TArray<struct UAnimInstance*> OutLinkedInstances;  // 0x8(0x10)

}; 
// Function Engine.SkeletalMeshComponent.GetAllowedAnimCurveEvaluate
// Size: 0x1(Inherited: 0x0) 
struct FGetAllowedAnimCurveEvaluate
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.AudioComponent.PlayQuantized
// Size: 0x40(Inherited: 0x0) 
struct FPlayQuantized
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UQuartzClockHandle* InClockHandle;  // 0x8(0x8)
	struct FQuartzQuantizationBoundary InQuantizationBoundary;  // 0x10(0xC)
	struct FDelegate InDelegate;  // 0x1C(0x10)
	float InStartTime;  // 0x2C(0x4)
	float InFadeInDuration;  // 0x30(0x4)
	float InFadeVolumeLevel;  // 0x34(0x4)
	uint8_t  InFadeCurve;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 
// Function Engine.KismetSystemLibrary.K2_SetTimer
// Size: 0x30(Inherited: 0x0) 
struct FK2_SetTimer
{
	struct UObject* Object;  // 0x0(0x8)
	struct FString FunctionName;  // 0x8(0x10)
	float Time;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bLooping : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)
	float InitialStartDelay;  // 0x20(0x4)
	float InitialStartDelayVariance;  // 0x24(0x4)
	struct FTimerHandle ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.KismetStringLibrary.Left
// Size: 0x28(Inherited: 0x0) 
struct FLeft
{
	struct FString SourceString;  // 0x0(0x10)
	int32_t Count;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct FString ReturnValue;  // 0x18(0x10)

}; 
// ScriptStruct Engine.SoundAttenuationSettings
// Size: 0x3A0(Inherited: 0xB0) 
struct FSoundAttenuationSettings : public FBaseAttenuationSettings
{
	char bAttenuate : 1;  // 0xB0(0x1)
	char bSpatialize : 1;  // 0xB0(0x1)
	char bAttenuateWithLPF : 1;  // 0xB0(0x1)
	char bEnableListenerFocus : 1;  // 0xB0(0x1)
	char bEnableFocusInterpolation : 1;  // 0xB0(0x1)
	char bEnableOcclusion : 1;  // 0xB0(0x1)
	char bUseComplexCollisionForOcclusion : 1;  // 0xB0(0x1)
	char bEnableReverbSend : 1;  // 0xB0(0x1)
	char bEnablePriorityAttenuation : 1;  // 0xB1(0x1)
	char bApplyNormalizationToStereoSounds : 1;  // 0xB1(0x1)
	char bEnableLogFrequencyScaling : 1;  // 0xB1(0x1)
	char bEnableSubmixSends : 1;  // 0xB1(0x1)
	char pad_177_1 : 4;  // 0xB1(0x1)
	char ESoundSpatializationAlgorithm SpatializationAlgorithm;  // 0xB2(0x1)
	char pad_179[1];  // 0xB3(0x1)
	float BinauralRadius;  // 0xB4(0x4)
	uint8_t  AbsorptionMethod;  // 0xB8(0x1)
	char ECollisionChannel OcclusionTraceChannel;  // 0xB9(0x1)
	uint8_t  ReverbSendMethod;  // 0xBA(0x1)
	uint8_t  PriorityAttenuationMethod;  // 0xBB(0x1)
	float OmniRadius;  // 0xBC(0x4)
	float StereoSpread;  // 0xC0(0x4)
	float LPFRadiusMin;  // 0xC4(0x4)
	float LPFRadiusMax;  // 0xC8(0x4)
	char pad_204[4];  // 0xCC(0x4)
	struct FRuntimeFloatCurve CustomLowpassAirAbsorptionCurve;  // 0xD0(0x88)
	struct FRuntimeFloatCurve CustomHighpassAirAbsorptionCurve;  // 0x158(0x88)
	float LPFFrequencyAtMin;  // 0x1E0(0x4)
	float LPFFrequencyAtMax;  // 0x1E4(0x4)
	float HPFFrequencyAtMin;  // 0x1E8(0x4)
	float HPFFrequencyAtMax;  // 0x1EC(0x4)
	float FocusAzimuth;  // 0x1F0(0x4)
	float NonFocusAzimuth;  // 0x1F4(0x4)
	float FocusDistanceScale;  // 0x1F8(0x4)
	float NonFocusDistanceScale;  // 0x1FC(0x4)
	float FocusPriorityScale;  // 0x200(0x4)
	float NonFocusPriorityScale;  // 0x204(0x4)
	float FocusVolumeAttenuation;  // 0x208(0x4)
	float NonFocusVolumeAttenuation;  // 0x20C(0x4)
	float FocusAttackInterpSpeed;  // 0x210(0x4)
	float FocusReleaseInterpSpeed;  // 0x214(0x4)
	float OcclusionLowPassFilterFrequency;  // 0x218(0x4)
	float OcclusionVolumeAttenuation;  // 0x21C(0x4)
	float OcclusionInterpolationTime;  // 0x220(0x4)
	float ReverbWetLevelMin;  // 0x224(0x4)
	float ReverbWetLevelMax;  // 0x228(0x4)
	float ReverbDistanceMin;  // 0x22C(0x4)
	float ReverbDistanceMax;  // 0x230(0x4)
	float ManualReverbSendLevel;  // 0x234(0x4)
	struct FRuntimeFloatCurve CustomReverbSendCurve;  // 0x238(0x88)
	struct TArray<struct FAttenuationSubmixSendSettings> SubmixSendSettings;  // 0x2C0(0x10)
	float PriorityAttenuationMin;  // 0x2D0(0x4)
	float PriorityAttenuationMax;  // 0x2D4(0x4)
	float PriorityAttenuationDistanceMin;  // 0x2D8(0x4)
	float PriorityAttenuationDistanceMax;  // 0x2DC(0x4)
	float ManualPriorityAttenuation;  // 0x2E0(0x4)
	char pad_740[4];  // 0x2E4(0x4)
	struct FRuntimeFloatCurve CustomPriorityAttenuationCurve;  // 0x2E8(0x88)
	struct FSoundAttenuationPluginSettings PluginSettings;  // 0x370(0x30)

}; 
// Function Engine.KismetStringLibrary.BuildString_Name
// Size: 0x48(Inherited: 0x0) 
struct FBuildString_Name
{
	struct FString AppendTo;  // 0x0(0x10)
	struct FString prefix;  // 0x10(0x10)
	struct FName InName;  // 0x20(0x8)
	struct FString suffix;  // 0x28(0x10)
	struct FString ReturnValue;  // 0x38(0x10)

}; 
// Function Engine.MovementComponent.PhysicsVolumeChanged
// Size: 0x8(Inherited: 0x0) 
struct FPhysicsVolumeChanged
{
	struct APhysicsVolume* NewVolume;  // 0x0(0x8)

}; 
// ScriptStruct Engine.SceneViewExtensionIsActiveFunctor
// Size: 0x50(Inherited: 0x0) 
struct FSceneViewExtensionIsActiveFunctor
{
	char pad_0[80];  // 0x0(0x50)

}; 
// Function Engine.KismetMathLibrary.Divide_IntPointInt
// Size: 0x14(Inherited: 0x0) 
struct FDivide_IntPointInt
{
	struct FIntPoint A;  // 0x0(0x8)
	int32_t B;  // 0x8(0x4)
	struct FIntPoint ReturnValue;  // 0xC(0x8)

}; 
// Function Engine.Actor.SetNetDormancy
// Size: 0x1(Inherited: 0x0) 
struct FSetNetDormancy
{
	char ENetDormancy NewDormancy;  // 0x0(0x1)

}; 
// Function Engine.MovementComponent.SetPlaneConstraintEnabled
// Size: 0x1(Inherited: 0x0) 
struct FSetPlaneConstraintEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnabled : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.ParameterChannelNames
// Size: 0x60(Inherited: 0x0) 
struct FParameterChannelNames
{
	struct FText R;  // 0x0(0x18)
	struct FText G;  // 0x18(0x18)
	struct FText B;  // 0x30(0x18)
	struct FText A;  // 0x48(0x18)

}; 
// Function Engine.AnimInstance.GetInstanceAssetPlayerLength
// Size: 0x8(Inherited: 0x0) 
struct FGetInstanceAssetPlayerLength
{
	int32_t AssetPlayerIndex;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.PrimitiveComponent.IgnoreComponentWhenMoving
// Size: 0x10(Inherited: 0x0) 
struct FIgnoreComponentWhenMoving
{
	struct UPrimitiveComponent* Component;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bShouldIgnore : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.MovementComponent.SetPlaneConstraintFromVectors
// Size: 0x18(Inherited: 0x0) 
struct FSetPlaneConstraintFromVectors
{
	struct FVector Forward;  // 0x0(0xC)
	struct FVector Up;  // 0xC(0xC)

}; 
// ScriptStruct Engine.CurveEdTab
// Size: 0x30(Inherited: 0x0) 
struct FCurveEdTab
{
	struct FString TabName;  // 0x0(0x10)
	struct TArray<struct FCurveEdEntry> Curves;  // 0x10(0x10)
	float ViewStartInput;  // 0x20(0x4)
	float ViewEndInput;  // 0x24(0x4)
	float ViewStartOutput;  // 0x28(0x4)
	float ViewEndOutput;  // 0x2C(0x4)

}; 
// Function Engine.Actor.ActorHasTag
// Size: 0xC(Inherited: 0x0) 
struct FActorHasTag
{
	struct FName Tag;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.MovementComponent.SetPlaneConstraintOrigin
// Size: 0xC(Inherited: 0x0) 
struct FSetPlaneConstraintOrigin
{
	struct FVector PlaneOrigin;  // 0x0(0xC)

}; 
// Function Engine.Character.ClientAdjustPosition
// Size: 0x38(Inherited: 0x0) 
struct FClientAdjustPosition
{
	float Timestamp;  // 0x0(0x4)
	struct FVector NewLoc;  // 0x4(0xC)
	struct FVector NewVel;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)
	struct UPrimitiveComponent* NewBase;  // 0x20(0x8)
	struct FName NewBaseBoneName;  // 0x28(0x8)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bHasBase : 1;  // 0x30(0x1)
	char pad_49_1 : 7;  // 0x31(0x1)
	bool bBaseRelativePosition : 1;  // 0x31(0x1)
	char ServerMovementMode;  // 0x32(0x1)
	char pad_51[5];  // 0x33(0x5)

}; 
// Function Engine.GameplayStatics.SetViewportMouseCaptureMode
// Size: 0x10(Inherited: 0x0) 
struct FSetViewportMouseCaptureMode
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	uint8_t  MouseCaptureMode;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetSystemLibrary.GetSupportedFullscreenResolutions
// Size: 0x18(Inherited: 0x0) 
struct FGetSupportedFullscreenResolutions
{
	struct TArray<struct FIntPoint> Resolutions;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.SubsystemBlueprintLibrary.GetGameInstanceSubsystem
// Size: 0x18(Inherited: 0x0) 
struct FGetGameInstanceSubsystem
{
	struct UObject* ContextObject;  // 0x0(0x8)
	UGameInstanceSubsystem* Class;  // 0x8(0x8)
	struct UGameInstanceSubsystem* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.PlayerController.ClientPlaySoundAtLocation
// Size: 0x20(Inherited: 0x0) 
struct FClientPlaySoundAtLocation
{
	struct USoundBase* Sound;  // 0x0(0x8)
	struct FVector Location;  // 0x8(0xC)
	float VolumeMultiplier;  // 0x14(0x4)
	float PitchMultiplier;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.MovementComponent.SetUpdatedComponent
// Size: 0x8(Inherited: 0x0) 
struct FSetUpdatedComponent
{
	struct USceneComponent* NewUpdatedComponent;  // 0x0(0x8)

}; 
// Function Engine.Actor.SetActorEnableCollision
// Size: 0x1(Inherited: 0x0) 
struct FSetActorEnableCollision
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewActorEnableCollision : 1;  // 0x0(0x1)

}; 
// Function Engine.PhysicsConstraintComponent.SetAngularSwing1Limit
// Size: 0x8(Inherited: 0x0) 
struct FSetAngularSwing1Limit
{
	char EAngularConstraintMotion MotionType;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float Swing1LimitAngle;  // 0x4(0x4)

}; 
// ScriptStruct Engine.InterpEdSelKey
// Size: 0x18(Inherited: 0x0) 
struct FInterpEdSelKey
{
	struct UInterpGroup* Group;  // 0x0(0x8)
	struct UInterpTrack* Track;  // 0x8(0x8)
	int32_t KeyIndex;  // 0x10(0x4)
	float UnsnappedPosition;  // 0x14(0x4)

}; 
// Function Engine.KismetMathLibrary.LinearColor_QuantizeRound
// Size: 0x14(Inherited: 0x0) 
struct FLinearColor_QuantizeRound
{
	struct FLinearColor InColor;  // 0x0(0x10)
	struct FColor ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.Controller.ReceiveInstigatedAnyDamage
// Size: 0x20(Inherited: 0x0) 
struct FReceiveInstigatedAnyDamage
{
	float Damage;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct UDamageType* DamageType;  // 0x8(0x8)
	struct AActor* DamagedActor;  // 0x10(0x8)
	struct AActor* DamageCauser;  // 0x18(0x8)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugCone
// Size: 0x48(Inherited: 0x0) 
struct FDrawDebugCone
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Origin;  // 0x8(0xC)
	struct FVector Direction;  // 0x14(0xC)
	float Length;  // 0x20(0x4)
	float AngleWidth;  // 0x24(0x4)
	float AngleHeight;  // 0x28(0x4)
	int32_t NumSides;  // 0x2C(0x4)
	struct FLinearColor LineColor;  // 0x30(0x10)
	float Duration;  // 0x40(0x4)
	float Thickness;  // 0x44(0x4)

}; 
// Function Engine.SplineComponent.GetDirectionAtSplinePoint
// Size: 0x14(Inherited: 0x0) 
struct FGetDirectionAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.InterpToMovementComponent.AddControlPointPosition
// Size: 0x10(Inherited: 0x0) 
struct FAddControlPointPosition
{
	struct FVector Pos;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bPositionIsRelative : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.KismetMathLibrary.Max
// Size: 0xC(Inherited: 0x0) 
struct FMax
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.SceneComponent.K2_GetComponentLocation
// Size: 0xC(Inherited: 0x0) 
struct FK2_GetComponentLocation
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// DelegateFunction Engine.InterpToMovementComponent.OnInterpToReverseDelegate__DelegateSignature
// Size: 0x8C(Inherited: 0x0) 
struct FOnInterpToReverseDelegate__DelegateSignature
{
	struct FHitResult ImpactResult;  // 0x0(0x88)
	float Time;  // 0x88(0x4)

}; 
// Function Engine.ParticleSystemComponent.SetBeamEndPoint
// Size: 0x10(Inherited: 0x0) 
struct FSetBeamEndPoint
{
	int32_t EmitterIndex;  // 0x0(0x4)
	struct FVector NewEndPoint;  // 0x4(0xC)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetInverse
// Size: 0x80(Inherited: 0x0) 
struct FMatrix_GetInverse
{
	struct FMatrix M;  // 0x0(0x40)
	struct FMatrix ReturnValue;  // 0x40(0x40)

}; 
// DelegateFunction Engine.InterpToMovementComponent.OnInterpToStopDelegate__DelegateSignature
// Size: 0x8C(Inherited: 0x0) 
struct FOnInterpToStopDelegate__DelegateSignature
{
	struct FHitResult ImpactResult;  // 0x0(0x88)
	float Time;  // 0x88(0x4)

}; 
// ScriptStruct Engine.PostProcessSettings
// Size: 0x560(Inherited: 0x0) 
struct FPostProcessSettings
{
	char bOverride_TemperatureType : 1;  // 0x0(0x1)
	char bOverride_WhiteTemp : 1;  // 0x0(0x1)
	char bOverride_WhiteTint : 1;  // 0x0(0x1)
	char bOverride_ColorSaturation : 1;  // 0x0(0x1)
	char bOverride_ColorContrast : 1;  // 0x0(0x1)
	char bOverride_ColorGamma : 1;  // 0x0(0x1)
	char bOverride_ColorGain : 1;  // 0x0(0x1)
	char bOverride_ColorOffset : 1;  // 0x0(0x1)
	char bOverride_ColorSaturationShadows : 1;  // 0x1(0x1)
	char bOverride_ColorContrastShadows : 1;  // 0x1(0x1)
	char bOverride_ColorGammaShadows : 1;  // 0x1(0x1)
	char bOverride_ColorGainShadows : 1;  // 0x1(0x1)
	char bOverride_ColorOffsetShadows : 1;  // 0x1(0x1)
	char bOverride_ColorSaturationMidtones : 1;  // 0x1(0x1)
	char bOverride_ColorContrastMidtones : 1;  // 0x1(0x1)
	char bOverride_ColorGammaMidtones : 1;  // 0x1(0x1)
	char bOverride_ColorGainMidtones : 1;  // 0x2(0x1)
	char bOverride_ColorOffsetMidtones : 1;  // 0x2(0x1)
	char bOverride_ColorSaturationHighlights : 1;  // 0x2(0x1)
	char bOverride_ColorContrastHighlights : 1;  // 0x2(0x1)
	char bOverride_ColorGammaHighlights : 1;  // 0x2(0x1)
	char bOverride_ColorGainHighlights : 1;  // 0x2(0x1)
	char bOverride_ColorOffsetHighlights : 1;  // 0x2(0x1)
	char bOverride_ColorCorrectionShadowsMax : 1;  // 0x2(0x1)
	char bOverride_ColorCorrectionHighlightsMin : 1;  // 0x3(0x1)
	char bOverride_BlueCorrection : 1;  // 0x3(0x1)
	char bOverride_ExpandGamut : 1;  // 0x3(0x1)
	char bOverride_ToneCurveAmount : 1;  // 0x3(0x1)
	char bOverride_FilmWhitePoint : 1;  // 0x3(0x1)
	char bOverride_FilmSaturation : 1;  // 0x3(0x1)
	char bOverride_FilmChannelMixerRed : 1;  // 0x3(0x1)
	char bOverride_FilmChannelMixerGreen : 1;  // 0x3(0x1)
	char bOverride_FilmChannelMixerBlue : 1;  // 0x4(0x1)
	char bOverride_FilmContrast : 1;  // 0x4(0x1)
	char bOverride_FilmDynamicRange : 1;  // 0x4(0x1)
	char bOverride_FilmHealAmount : 1;  // 0x4(0x1)
	char bOverride_FilmToeAmount : 1;  // 0x4(0x1)
	char bOverride_FilmShadowTint : 1;  // 0x4(0x1)
	char bOverride_FilmShadowTintBlend : 1;  // 0x4(0x1)
	char bOverride_FilmShadowTintAmount : 1;  // 0x4(0x1)
	char bOverride_FilmSlope : 1;  // 0x5(0x1)
	char bOverride_FilmToe : 1;  // 0x5(0x1)
	char bOverride_FilmShoulder : 1;  // 0x5(0x1)
	char bOverride_FilmBlackClip : 1;  // 0x5(0x1)
	char bOverride_FilmWhiteClip : 1;  // 0x5(0x1)
	char bOverride_SceneColorTint : 1;  // 0x5(0x1)
	char bOverride_SceneFringeIntensity : 1;  // 0x5(0x1)
	char bOverride_ChromaticAberrationStartOffset : 1;  // 0x5(0x1)
	char bOverride_AmbientCubemapTint : 1;  // 0x6(0x1)
	char bOverride_AmbientCubemapIntensity : 1;  // 0x6(0x1)
	char bOverride_BloomMethod : 1;  // 0x6(0x1)
	char bOverride_BloomIntensity : 1;  // 0x6(0x1)
	char bOverride_BloomThreshold : 1;  // 0x6(0x1)
	char bOverride_Bloom1Tint : 1;  // 0x6(0x1)
	char bOverride_Bloom1Size : 1;  // 0x6(0x1)
	char bOverride_Bloom2Size : 1;  // 0x6(0x1)
	char bOverride_Bloom2Tint : 1;  // 0x7(0x1)
	char bOverride_Bloom3Tint : 1;  // 0x7(0x1)
	char bOverride_Bloom3Size : 1;  // 0x7(0x1)
	char bOverride_Bloom4Tint : 1;  // 0x7(0x1)
	char bOverride_Bloom4Size : 1;  // 0x7(0x1)
	char bOverride_Bloom5Tint : 1;  // 0x7(0x1)
	char bOverride_Bloom5Size : 1;  // 0x7(0x1)
	char bOverride_Bloom6Tint : 1;  // 0x7(0x1)
	char bOverride_Bloom6Size : 1;  // 0x8(0x1)
	char bOverride_BloomSizeScale : 1;  // 0x8(0x1)
	char bOverride_BloomConvolutionTexture : 1;  // 0x8(0x1)
	char bOverride_BloomConvolutionSize : 1;  // 0x8(0x1)
	char bOverride_BloomConvolutionCenterUV : 1;  // 0x8(0x1)
	char bOverride_BloomConvolutionPreFilter : 1;  // 0x8(0x1)
	char bOverride_BloomConvolutionPreFilterMin : 1;  // 0x8(0x1)
	char bOverride_BloomConvolutionPreFilterMax : 1;  // 0x8(0x1)
	char bOverride_BloomConvolutionPreFilterMult : 1;  // 0x9(0x1)
	char bOverride_BloomConvolutionBufferScale : 1;  // 0x9(0x1)
	char bOverride_BloomDirtMaskIntensity : 1;  // 0x9(0x1)
	char bOverride_BloomDirtMaskTint : 1;  // 0x9(0x1)
	char bOverride_BloomDirtMask : 1;  // 0x9(0x1)
	char bOverride_CameraShutterSpeed : 1;  // 0x9(0x1)
	char bOverride_CameraISO : 1;  // 0x9(0x1)
	char bOverride_AutoExposureMethod : 1;  // 0x9(0x1)
	char bOverride_AutoExposureLowPercent : 1;  // 0xA(0x1)
	char bOverride_AutoExposureHighPercent : 1;  // 0xA(0x1)
	char bOverride_AutoExposureMinBrightness : 1;  // 0xA(0x1)
	char bOverride_AutoExposureMaxBrightness : 1;  // 0xA(0x1)
	char bOverride_AutoExposureCalibrationConstant : 1;  // 0xA(0x1)
	char bOverride_AutoExposureSpeedUp : 1;  // 0xA(0x1)
	char bOverride_AutoExposureSpeedDown : 1;  // 0xA(0x1)
	char bOverride_AutoExposureBias : 1;  // 0xA(0x1)
	char bOverride_AutoExposureBiasCurve : 1;  // 0xB(0x1)
	char bOverride_AutoExposureMeterMask : 1;  // 0xB(0x1)
	char bOverride_AutoExposureApplyPhysicalCameraExposure : 1;  // 0xB(0x1)
	char bOverride_HistogramLogMin : 1;  // 0xB(0x1)
	char bOverride_HistogramLogMax : 1;  // 0xB(0x1)
	char bOverride_LensFlareIntensity : 1;  // 0xB(0x1)
	char bOverride_LensFlareTint : 1;  // 0xB(0x1)
	char bOverride_LensFlareTints : 1;  // 0xB(0x1)
	char bOverride_LensFlareBokehSize : 1;  // 0xC(0x1)
	char bOverride_LensFlareBokehShape : 1;  // 0xC(0x1)
	char bOverride_LensFlareThreshold : 1;  // 0xC(0x1)
	char bOverride_VignetteIntensity : 1;  // 0xC(0x1)
	char bOverride_GrainIntensity : 1;  // 0xC(0x1)
	char bOverride_GrainJitter : 1;  // 0xC(0x1)
	char bOverride_AmbientOcclusionIntensity : 1;  // 0xC(0x1)
	char bOverride_AmbientOcclusionStaticFraction : 1;  // 0xC(0x1)
	char bOverride_AmbientOcclusionRadius : 1;  // 0xD(0x1)
	char bOverride_AmbientOcclusionFadeDistance : 1;  // 0xD(0x1)
	char bOverride_AmbientOcclusionFadeRadius : 1;  // 0xD(0x1)
	char bOverride_AmbientOcclusionDistance : 1;  // 0xD(0x1)
	char bOverride_AmbientOcclusionRadiusInWS : 1;  // 0xD(0x1)
	char bOverride_AmbientOcclusionPower : 1;  // 0xD(0x1)
	char bOverride_AmbientOcclusionBias : 1;  // 0xD(0x1)
	char bOverride_AmbientOcclusionQuality : 1;  // 0xD(0x1)
	char bOverride_AmbientOcclusionMipBlend : 1;  // 0xE(0x1)
	char bOverride_AmbientOcclusionMipScale : 1;  // 0xE(0x1)
	char bOverride_AmbientOcclusionMipThreshold : 1;  // 0xE(0x1)
	char bOverride_AmbientOcclusionTemporalBlendWeight : 1;  // 0xE(0x1)
	char pad_14_1 : 4;  // 0xE(0x1)
	char pad_15[2];  // 0xF(0x2)
	char bOverride_RayTracingAO : 1;  // 0x10(0x1)
	char bOverride_RayTracingAOSamplesPerPixel : 1;  // 0x10(0x1)
	char bOverride_RayTracingAOIntensity : 1;  // 0x10(0x1)
	char bOverride_RayTracingAORadius : 1;  // 0x10(0x1)
	char pad_16_1 : 4;  // 0x10(0x1)
	char pad_17[4];  // 0x11(0x4)
	char bOverride_LPVIntensity : 1;  // 0x14(0x1)
	char bOverride_LPVDirectionalOcclusionIntensity : 1;  // 0x14(0x1)
	char bOverride_LPVDirectionalOcclusionRadius : 1;  // 0x14(0x1)
	char bOverride_LPVDiffuseOcclusionExponent : 1;  // 0x14(0x1)
	char bOverride_LPVSpecularOcclusionExponent : 1;  // 0x14(0x1)
	char bOverride_LPVDiffuseOcclusionIntensity : 1;  // 0x14(0x1)
	char bOverride_LPVSpecularOcclusionIntensity : 1;  // 0x14(0x1)
	char bOverride_LPVSize : 1;  // 0x14(0x1)
	char bOverride_LPVSecondaryOcclusionIntensity : 1;  // 0x15(0x1)
	char bOverride_LPVSecondaryBounceIntensity : 1;  // 0x15(0x1)
	char bOverride_LPVGeometryVolumeBias : 1;  // 0x15(0x1)
	char bOverride_LPVVplInjectionBias : 1;  // 0x15(0x1)
	char bOverride_LPVEmissiveInjectionIntensity : 1;  // 0x15(0x1)
	char bOverride_LPVFadeRange : 1;  // 0x15(0x1)
	char bOverride_LPVDirectionalOcclusionFadeRange : 1;  // 0x15(0x1)
	char bOverride_IndirectLightingColor : 1;  // 0x15(0x1)
	char bOverride_IndirectLightingIntensity : 1;  // 0x16(0x1)
	char bOverride_ColorGradingIntensity : 1;  // 0x16(0x1)
	char bOverride_ColorGradingLUT : 1;  // 0x16(0x1)
	char bOverride_DepthOfFieldFocalDistance : 1;  // 0x16(0x1)
	char bOverride_DepthOfFieldFstop : 1;  // 0x16(0x1)
	char bOverride_DepthOfFieldMinFstop : 1;  // 0x16(0x1)
	char bOverride_DepthOfFieldBladeCount : 1;  // 0x16(0x1)
	char bOverride_DepthOfFieldSensorWidth : 1;  // 0x16(0x1)
	char bOverride_DepthOfFieldDepthBlurRadius : 1;  // 0x17(0x1)
	char bOverride_DepthOfFieldDepthBlurAmount : 1;  // 0x17(0x1)
	char bOverride_DepthOfFieldFocalRegion : 1;  // 0x17(0x1)
	char bOverride_DepthOfFieldNearTransitionRegion : 1;  // 0x17(0x1)
	char bOverride_DepthOfFieldFarTransitionRegion : 1;  // 0x17(0x1)
	char bOverride_DepthOfFieldScale : 1;  // 0x17(0x1)
	char bOverride_DepthOfFieldNearBlurSize : 1;  // 0x17(0x1)
	char bOverride_DepthOfFieldFarBlurSize : 1;  // 0x17(0x1)
	char bOverride_MobileHQGaussian : 1;  // 0x18(0x1)
	char bOverride_DepthOfFieldOcclusion : 1;  // 0x18(0x1)
	char bOverride_DepthOfFieldSkyFocusDistance : 1;  // 0x18(0x1)
	char bOverride_DepthOfFieldVignetteSize : 1;  // 0x18(0x1)
	char bOverride_MotionBlurAmount : 1;  // 0x18(0x1)
	char bOverride_MotionBlurMax : 1;  // 0x18(0x1)
	char bOverride_MotionBlurTargetFPS : 1;  // 0x18(0x1)
	char bOverride_MotionBlurPerObjectSize : 1;  // 0x18(0x1)
	char bOverride_ScreenPercentage : 1;  // 0x19(0x1)
	char bOverride_ScreenSpaceReflectionIntensity : 1;  // 0x19(0x1)
	char bOverride_ScreenSpaceReflectionQuality : 1;  // 0x19(0x1)
	char bOverride_ScreenSpaceReflectionMaxRoughness : 1;  // 0x19(0x1)
	char bOverride_ScreenSpaceReflectionRoughnessScale : 1;  // 0x19(0x1)
	char pad_25_1 : 3;  // 0x19(0x1)
	char pad_26[3];  // 0x1A(0x3)
	char bOverride_ReflectionsType : 1;  // 0x1C(0x1)
	char bOverride_RayTracingReflectionsMaxRoughness : 1;  // 0x1C(0x1)
	char bOverride_RayTracingReflectionsMaxBounces : 1;  // 0x1C(0x1)
	char bOverride_RayTracingReflectionsSamplesPerPixel : 1;  // 0x1C(0x1)
	char bOverride_RayTracingReflectionsShadows : 1;  // 0x1C(0x1)
	char bOverride_RayTracingReflectionsTranslucency : 1;  // 0x1C(0x1)
	char bOverride_TranslucencyType : 1;  // 0x1C(0x1)
	char bOverride_RayTracingTranslucencyMaxRoughness : 1;  // 0x1C(0x1)
	char bOverride_RayTracingTranslucencyRefractionRays : 1;  // 0x1D(0x1)
	char bOverride_RayTracingTranslucencySamplesPerPixel : 1;  // 0x1D(0x1)
	char bOverride_RayTracingTranslucencyShadows : 1;  // 0x1D(0x1)
	char bOverride_RayTracingTranslucencyRefraction : 1;  // 0x1D(0x1)
	char bOverride_RayTracingGI : 1;  // 0x1D(0x1)
	char bOverride_RayTracingGIMaxBounces : 1;  // 0x1D(0x1)
	char bOverride_RayTracingGISamplesPerPixel : 1;  // 0x1D(0x1)
	char bOverride_PathTracingMaxBounces : 1;  // 0x1D(0x1)
	char bOverride_PathTracingSamplesPerPixel : 1;  // 0x1E(0x1)
	char bOverride_PathTracingFilterWidth : 1;  // 0x1E(0x1)
	char bOverride_PathTracingEnableEmissive : 1;  // 0x1E(0x1)
	char bOverride_PathTracingMaxPathExposure : 1;  // 0x1E(0x1)
	char bOverride_PathTracingEnableDenoiser : 1;  // 0x1E(0x1)
	char pad_30_1 : 3;  // 0x1E(0x1)
	char pad_31[2];  // 0x1F(0x2)
	char bMobileHQGaussian : 1;  // 0x20(0x1)
	char pad_32_1 : 7;  // 0x20(0x1)
	char EBloomMethod BloomMethod;  // 0x21(0x1)
	char EAutoExposureMethod AutoExposureMethod;  // 0x22(0x1)
	char ETemperatureMethod TemperatureType;  // 0x23(0x1)
	float WhiteTemp;  // 0x24(0x4)
	float WhiteTint;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)
	struct FVector4 ColorSaturation;  // 0x30(0x10)
	struct FVector4 ColorContrast;  // 0x40(0x10)
	struct FVector4 ColorGamma;  // 0x50(0x10)
	struct FVector4 ColorGain;  // 0x60(0x10)
	struct FVector4 ColorOffset;  // 0x70(0x10)
	struct FVector4 ColorSaturationShadows;  // 0x80(0x10)
	struct FVector4 ColorContrastShadows;  // 0x90(0x10)
	struct FVector4 ColorGammaShadows;  // 0xA0(0x10)
	struct FVector4 ColorGainShadows;  // 0xB0(0x10)
	struct FVector4 ColorOffsetShadows;  // 0xC0(0x10)
	struct FVector4 ColorSaturationMidtones;  // 0xD0(0x10)
	struct FVector4 ColorContrastMidtones;  // 0xE0(0x10)
	struct FVector4 ColorGammaMidtones;  // 0xF0(0x10)
	struct FVector4 ColorGainMidtones;  // 0x100(0x10)
	struct FVector4 ColorOffsetMidtones;  // 0x110(0x10)
	struct FVector4 ColorSaturationHighlights;  // 0x120(0x10)
	struct FVector4 ColorContrastHighlights;  // 0x130(0x10)
	struct FVector4 ColorGammaHighlights;  // 0x140(0x10)
	struct FVector4 ColorGainHighlights;  // 0x150(0x10)
	struct FVector4 ColorOffsetHighlights;  // 0x160(0x10)
	float ColorCorrectionHighlightsMin;  // 0x170(0x4)
	float ColorCorrectionShadowsMax;  // 0x174(0x4)
	float BlueCorrection;  // 0x178(0x4)
	float ExpandGamut;  // 0x17C(0x4)
	float ToneCurveAmount;  // 0x180(0x4)
	float FilmSlope;  // 0x184(0x4)
	float FilmToe;  // 0x188(0x4)
	float FilmShoulder;  // 0x18C(0x4)
	float FilmBlackClip;  // 0x190(0x4)
	float FilmWhiteClip;  // 0x194(0x4)
	struct FLinearColor FilmWhitePoint;  // 0x198(0x10)
	struct FLinearColor FilmShadowTint;  // 0x1A8(0x10)
	float FilmShadowTintBlend;  // 0x1B8(0x4)
	float FilmShadowTintAmount;  // 0x1BC(0x4)
	float FilmSaturation;  // 0x1C0(0x4)
	struct FLinearColor FilmChannelMixerRed;  // 0x1C4(0x10)
	struct FLinearColor FilmChannelMixerGreen;  // 0x1D4(0x10)
	struct FLinearColor FilmChannelMixerBlue;  // 0x1E4(0x10)
	float FilmContrast;  // 0x1F4(0x4)
	float FilmToeAmount;  // 0x1F8(0x4)
	float FilmHealAmount;  // 0x1FC(0x4)
	float FilmDynamicRange;  // 0x200(0x4)
	struct FLinearColor SceneColorTint;  // 0x204(0x10)
	float SceneFringeIntensity;  // 0x214(0x4)
	float ChromaticAberrationStartOffset;  // 0x218(0x4)
	float BloomIntensity;  // 0x21C(0x4)
	float BloomThreshold;  // 0x220(0x4)
	float BloomSizeScale;  // 0x224(0x4)
	float Bloom1Size;  // 0x228(0x4)
	float Bloom2Size;  // 0x22C(0x4)
	float Bloom3Size;  // 0x230(0x4)
	float Bloom4Size;  // 0x234(0x4)
	float Bloom5Size;  // 0x238(0x4)
	float Bloom6Size;  // 0x23C(0x4)
	struct FLinearColor Bloom1Tint;  // 0x240(0x10)
	struct FLinearColor Bloom2Tint;  // 0x250(0x10)
	struct FLinearColor Bloom3Tint;  // 0x260(0x10)
	struct FLinearColor Bloom4Tint;  // 0x270(0x10)
	struct FLinearColor Bloom5Tint;  // 0x280(0x10)
	struct FLinearColor Bloom6Tint;  // 0x290(0x10)
	float BloomConvolutionSize;  // 0x2A0(0x4)
	char pad_676[4];  // 0x2A4(0x4)
	struct UTexture2D* BloomConvolutionTexture;  // 0x2A8(0x8)
	struct FVector2D BloomConvolutionCenterUV;  // 0x2B0(0x8)
	float BloomConvolutionPreFilterMin;  // 0x2B8(0x4)
	float BloomConvolutionPreFilterMax;  // 0x2BC(0x4)
	float BloomConvolutionPreFilterMult;  // 0x2C0(0x4)
	float BloomConvolutionBufferScale;  // 0x2C4(0x4)
	struct UTexture* BloomDirtMask;  // 0x2C8(0x8)
	float BloomDirtMaskIntensity;  // 0x2D0(0x4)
	struct FLinearColor BloomDirtMaskTint;  // 0x2D4(0x10)
	struct FLinearColor AmbientCubemapTint;  // 0x2E4(0x10)
	float AmbientCubemapIntensity;  // 0x2F4(0x4)
	struct UTextureCube* AmbientCubemap;  // 0x2F8(0x8)
	float CameraShutterSpeed;  // 0x300(0x4)
	float CameraISO;  // 0x304(0x4)
	float DepthOfFieldFstop;  // 0x308(0x4)
	float DepthOfFieldMinFstop;  // 0x30C(0x4)
	int32_t DepthOfFieldBladeCount;  // 0x310(0x4)
	float AutoExposureBias;  // 0x314(0x4)
	float AutoExposureBiasBackup;  // 0x318(0x4)
	char bOverride_AutoExposureBiasBackup : 1;  // 0x31C(0x1)
	char pad_796_1 : 7;  // 0x31C(0x1)
	char pad_797[4];  // 0x31D(0x4)
	char AutoExposureApplyPhysicalCameraExposure : 1;  // 0x320(0x1)
	char pad_800_1 : 7;  // 0x320(0x1)
	char pad_801[8];  // 0x321(0x8)
	struct UCurveFloat* AutoExposureBiasCurve;  // 0x328(0x8)
	struct UTexture* AutoExposureMeterMask;  // 0x330(0x8)
	float AutoExposureLowPercent;  // 0x338(0x4)
	float AutoExposureHighPercent;  // 0x33C(0x4)
	float AutoExposureMinBrightness;  // 0x340(0x4)
	float AutoExposureMaxBrightness;  // 0x344(0x4)
	float AutoExposureSpeedUp;  // 0x348(0x4)
	float AutoExposureSpeedDown;  // 0x34C(0x4)
	float HistogramLogMin;  // 0x350(0x4)
	float HistogramLogMax;  // 0x354(0x4)
	float AutoExposureCalibrationConstant;  // 0x358(0x4)
	float LensFlareIntensity;  // 0x35C(0x4)
	struct FLinearColor LensFlareTint;  // 0x360(0x10)
	float LensFlareBokehSize;  // 0x370(0x4)
	float LensFlareThreshold;  // 0x374(0x4)
	struct UTexture* LensFlareBokehShape;  // 0x378(0x8)
	struct FLinearColor LensFlareTints[8];  // 0x380(0x80)
	float VignetteIntensity;  // 0x400(0x4)
	float GrainJitter;  // 0x404(0x4)
	float GrainIntensity;  // 0x408(0x4)
	float AmbientOcclusionIntensity;  // 0x40C(0x4)
	float AmbientOcclusionStaticFraction;  // 0x410(0x4)
	float AmbientOcclusionRadius;  // 0x414(0x4)
	char AmbientOcclusionRadiusInWS : 1;  // 0x418(0x1)
	char pad_1048_1 : 7;  // 0x418(0x1)
	char pad_1049[4];  // 0x419(0x4)
	float AmbientOcclusionFadeDistance;  // 0x41C(0x4)
	float AmbientOcclusionFadeRadius;  // 0x420(0x4)
	float AmbientOcclusionDistance;  // 0x424(0x4)
	float AmbientOcclusionPower;  // 0x428(0x4)
	float AmbientOcclusionBias;  // 0x42C(0x4)
	float AmbientOcclusionQuality;  // 0x430(0x4)
	float AmbientOcclusionMipBlend;  // 0x434(0x4)
	float AmbientOcclusionMipScale;  // 0x438(0x4)
	float AmbientOcclusionMipThreshold;  // 0x43C(0x4)
	float AmbientOcclusionTemporalBlendWeight;  // 0x440(0x4)
	char RayTracingAO : 1;  // 0x444(0x1)
	char pad_1092_1 : 7;  // 0x444(0x1)
	char pad_1093[4];  // 0x445(0x4)
	int32_t RayTracingAOSamplesPerPixel;  // 0x448(0x4)
	float RayTracingAOIntensity;  // 0x44C(0x4)
	float RayTracingAORadius;  // 0x450(0x4)
	struct FLinearColor IndirectLightingColor;  // 0x454(0x10)
	float IndirectLightingIntensity;  // 0x464(0x4)
	uint8_t  RayTracingGIType;  // 0x468(0x1)
	char pad_1129[3];  // 0x469(0x3)
	int32_t RayTracingGIMaxBounces;  // 0x46C(0x4)
	int32_t RayTracingGISamplesPerPixel;  // 0x470(0x4)
	float ColorGradingIntensity;  // 0x474(0x4)
	struct UTexture* ColorGradingLUT;  // 0x478(0x8)
	float DepthOfFieldSensorWidth;  // 0x480(0x4)
	float DepthOfFieldFocalDistance;  // 0x484(0x4)
	float DepthOfFieldDepthBlurAmount;  // 0x488(0x4)
	float DepthOfFieldDepthBlurRadius;  // 0x48C(0x4)
	float DepthOfFieldFocalRegion;  // 0x490(0x4)
	float DepthOfFieldNearTransitionRegion;  // 0x494(0x4)
	float DepthOfFieldFarTransitionRegion;  // 0x498(0x4)
	float DepthOfFieldScale;  // 0x49C(0x4)
	float DepthOfFieldNearBlurSize;  // 0x4A0(0x4)
	float DepthOfFieldFarBlurSize;  // 0x4A4(0x4)
	float DepthOfFieldOcclusion;  // 0x4A8(0x4)
	float DepthOfFieldSkyFocusDistance;  // 0x4AC(0x4)
	float DepthOfFieldVignetteSize;  // 0x4B0(0x4)
	float MotionBlurAmount;  // 0x4B4(0x4)
	float MotionBlurMax;  // 0x4B8(0x4)
	int32_t MotionBlurTargetFPS;  // 0x4BC(0x4)
	float MotionBlurPerObjectSize;  // 0x4C0(0x4)
	float LPVIntensity;  // 0x4C4(0x4)
	float LPVVplInjectionBias;  // 0x4C8(0x4)
	float LPVSize;  // 0x4CC(0x4)
	float LPVSecondaryOcclusionIntensity;  // 0x4D0(0x4)
	float LPVSecondaryBounceIntensity;  // 0x4D4(0x4)
	float LPVGeometryVolumeBias;  // 0x4D8(0x4)
	float LPVEmissiveInjectionIntensity;  // 0x4DC(0x4)
	float LPVDirectionalOcclusionIntensity;  // 0x4E0(0x4)
	float LPVDirectionalOcclusionRadius;  // 0x4E4(0x4)
	float LPVDiffuseOcclusionExponent;  // 0x4E8(0x4)
	float LPVSpecularOcclusionExponent;  // 0x4EC(0x4)
	float LPVDiffuseOcclusionIntensity;  // 0x4F0(0x4)
	float LPVSpecularOcclusionIntensity;  // 0x4F4(0x4)
	uint8_t  ReflectionsType;  // 0x4F8(0x1)
	char pad_1273[3];  // 0x4F9(0x3)
	float ScreenSpaceReflectionIntensity;  // 0x4FC(0x4)
	float ScreenSpaceReflectionQuality;  // 0x500(0x4)
	float ScreenSpaceReflectionMaxRoughness;  // 0x504(0x4)
	float RayTracingReflectionsMaxRoughness;  // 0x508(0x4)
	int32_t RayTracingReflectionsMaxBounces;  // 0x50C(0x4)
	int32_t RayTracingReflectionsSamplesPerPixel;  // 0x510(0x4)
	uint8_t  RayTracingReflectionsShadows;  // 0x514(0x1)
	char RayTracingReflectionsTranslucency : 1;  // 0x515(0x1)
	char pad_1301_1 : 7;  // 0x515(0x1)
	uint8_t  TranslucencyType;  // 0x516(0x1)
	char pad_1303[1];  // 0x517(0x1)
	float RayTracingTranslucencyMaxRoughness;  // 0x518(0x4)
	int32_t RayTracingTranslucencyRefractionRays;  // 0x51C(0x4)
	int32_t RayTracingTranslucencySamplesPerPixel;  // 0x520(0x4)
	uint8_t  RayTracingTranslucencyShadows;  // 0x524(0x1)
	char RayTracingTranslucencyRefraction : 1;  // 0x525(0x1)
	char pad_1317_1 : 7;  // 0x525(0x1)
	char pad_1318[3];  // 0x526(0x3)
	int32_t PathTracingMaxBounces;  // 0x528(0x4)
	int32_t PathTracingSamplesPerPixel;  // 0x52C(0x4)
	float PathTracingFilterWidth;  // 0x530(0x4)
	char PathTracingEnableEmissive : 1;  // 0x534(0x1)
	char pad_1332_1 : 7;  // 0x534(0x1)
	char pad_1333[4];  // 0x535(0x4)
	float PathTracingMaxPathExposure;  // 0x538(0x4)
	char PathTracingEnableDenoiser : 1;  // 0x53C(0x1)
	char pad_1340_1 : 7;  // 0x53C(0x1)
	char pad_1341[4];  // 0x53D(0x4)
	float LPVFadeRange;  // 0x540(0x4)
	float LPVDirectionalOcclusionFadeRange;  // 0x544(0x4)
	float ScreenPercentage;  // 0x548(0x4)
	char pad_1356[4];  // 0x54C(0x4)
	struct FWeightedBlendables WeightedBlendables;  // 0x550(0x10)

}; 
// DelegateFunction Engine.ProjectileMovementComponent.OnProjectileStopDelegate__DelegateSignature
// Size: 0x88(Inherited: 0x0) 
struct FOnProjectileStopDelegate__DelegateSignature
{
	struct FHitResult ImpactResult;  // 0x0(0x88)

}; 
// Function Engine.KismetSystemLibrary.LoadAssetClass
// Size: 0x58(Inherited: 0x0) 
struct FLoadAssetClass
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct TSoftClassPtr<UObject> AssetClass;  // 0x8(0x28)
	struct FDelegate OnLoaded;  // 0x30(0x10)
	struct FLatentActionInfo LatentInfo;  // 0x40(0x18)

}; 
// Function Engine.AudioComponent.SetLowPassFilterEnabled
// Size: 0x1(Inherited: 0x0) 
struct FSetLowPassFilterEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool InLowPassFilterEnabled : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.SoundClassProperties
// Size: 0x78(Inherited: 0x0) 
struct FSoundClassProperties
{
	float Volume;  // 0x0(0x4)
	float Pitch;  // 0x4(0x4)
	float LowPassFilterFrequency;  // 0x8(0x4)
	float AttenuationDistanceScale;  // 0xC(0x4)
	float LFEBleed;  // 0x10(0x4)
	float VoiceCenterChannelVolume;  // 0x14(0x4)
	float RadioFilterVolume;  // 0x18(0x4)
	float RadioFilterVolumeThreshold;  // 0x1C(0x4)
	char bApplyEffects : 1;  // 0x20(0x1)
	char bAlwaysPlay : 1;  // 0x20(0x1)
	char bIsUISound : 1;  // 0x20(0x1)
	char bIsMusic : 1;  // 0x20(0x1)
	char bCenterChannelOnly : 1;  // 0x20(0x1)
	char bApplyAmbientVolumes : 1;  // 0x20(0x1)
	char bReverb : 1;  // 0x20(0x1)
	char pad_32_1 : 1;  // 0x20(0x1)
	char pad_33[4];  // 0x21(0x4)
	float Default2DReverbSendAmount;  // 0x24(0x4)
	struct FSoundModulationDefaultSettings ModulationSettings;  // 0x28(0x40)
	char EAudioOutputTarget OutputTarget;  // 0x68(0x1)
	uint8_t  LoadingBehavior;  // 0x69(0x1)
	char pad_106[6];  // 0x6A(0x6)
	struct USoundSubmix* DefaultSubmix;  // 0x70(0x8)

}; 
// Function Engine.SkeletalMeshComponent.GetPostProcessInstance
// Size: 0x8(Inherited: 0x0) 
struct FGetPostProcessInstance
{
	struct UAnimInstance* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.LevelStreaming.IsLevelVisible
// Size: 0x1(Inherited: 0x0) 
struct FIsLevelVisible
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.Vector_GetAbsMin
// Size: 0x10(Inherited: 0x0) 
struct FVector_GetAbsMin
{
	struct FVector A;  // 0x0(0xC)
	float ReturnValue;  // 0xC(0x4)

}; 
// DelegateFunction Engine.InterpToMovementComponent.OnInterpToWaitBeginDelegate__DelegateSignature
// Size: 0x8C(Inherited: 0x0) 
struct FOnInterpToWaitBeginDelegate__DelegateSignature
{
	struct FHitResult ImpactResult;  // 0x0(0x88)
	float Time;  // 0x88(0x4)

}; 
// Function Engine.SplineComponent.GetFloatPropertyAtSplineInputKey
// Size: 0x10(Inherited: 0x0) 
struct FGetFloatPropertyAtSplineInputKey
{
	float InKey;  // 0x0(0x4)
	struct FName PropertyName;  // 0x4(0x8)
	float ReturnValue;  // 0xC(0x4)

}; 
// DelegateFunction Engine.InterpToMovementComponent.OnInterpToWaitEndDelegate__DelegateSignature
// Size: 0x8C(Inherited: 0x0) 
struct FOnInterpToWaitEndDelegate__DelegateSignature
{
	struct FHitResult ImpactResult;  // 0x0(0x88)
	float Time;  // 0x88(0x4)

}; 
// Function Engine.CurveLinearColorAtlas.GetCurvePosition
// Size: 0x10(Inherited: 0x0) 
struct FGetCurvePosition
{
	struct UCurveLinearColor* InCurve;  // 0x0(0x8)
	float position;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool ReturnValue : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.InterpToMovementComponent.RestartMovement
// Size: 0x4(Inherited: 0x0) 
struct FRestartMovement
{
	float InitialDirection;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.ScaleByMomentOfInertia
// Size: 0x20(Inherited: 0x0) 
struct FScaleByMomentOfInertia
{
	struct FVector InputVector;  // 0x0(0xC)
	struct FName BoneName;  // 0xC(0x8)
	struct FVector ReturnValue;  // 0x14(0xC)

}; 
// Function Engine.SceneComponent.K2_AddLocalRotation
// Size: 0x9C(Inherited: 0x0) 
struct FK2_AddLocalRotation
{
	struct FRotator DeltaRotation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// Function Engine.Actor.SnapRootComponentTo
// Size: 0x10(Inherited: 0x0) 
struct FSnapRootComponentTo
{
	struct AActor* InParentActor;  // 0x0(0x8)
	struct FName InSocketName;  // 0x8(0x8)

}; 
// Function Engine.MatineeActor.SetLoopingState
// Size: 0x1(Inherited: 0x0) 
struct FSetLoopingState
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewLooping : 1;  // 0x0(0x1)

}; 
// Function Engine.Actor.GetDotProductTo
// Size: 0x10(Inherited: 0x0) 
struct FGetDotProductTo
{
	struct AActor* OtherActor;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.PhysicsConstraintComponent.SetLinearDriveParams
// Size: 0xC(Inherited: 0x0) 
struct FSetLinearDriveParams
{
	float PositionStrength;  // 0x0(0x4)
	float VelocityStrength;  // 0x4(0x4)
	float InForceLimit;  // 0x8(0x4)

}; 
// Function Engine.PrimitiveComponent.SetCullDistance
// Size: 0x4(Inherited: 0x0) 
struct FSetCullDistance
{
	float NewCullDistance;  // 0x0(0x4)

}; 
// Function Engine.ProjectileMovementComponent.StopSimulating
// Size: 0x88(Inherited: 0x0) 
struct FStopSimulating
{
	struct FHitResult HitResult;  // 0x0(0x88)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugLine
// Size: 0x38(Inherited: 0x0) 
struct FDrawDebugLine
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector LineStart;  // 0x8(0xC)
	struct FVector LineEnd;  // 0x14(0xC)
	struct FLinearColor LineColor;  // 0x20(0x10)
	float Duration;  // 0x30(0x4)
	float Thickness;  // 0x34(0x4)

}; 
// Function Engine.KismetMathLibrary.DegAcos
// Size: 0x8(Inherited: 0x0) 
struct FDegAcos
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.GameplayStatics.SetSoundClassDistanceScale
// Size: 0x18(Inherited: 0x0) 
struct FSetSoundClassDistanceScale
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct USoundClass* SoundClass;  // 0x8(0x8)
	float DistanceAttenuationScale;  // 0x10(0x4)
	float TimeSec;  // 0x14(0x4)

}; 
// Function Engine.PlayerController.GetInputKeyTimeDown
// Size: 0x20(Inherited: 0x0) 
struct FGetInputKeyTimeDown
{
	struct FKey Key;  // 0x0(0x18)
	float ReturnValue;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// ScriptStruct Engine.TimelineLinearColorTrack
// Size: 0x40(Inherited: 0x0) 
struct FTimelineLinearColorTrack
{
	struct UCurveLinearColor* LinearColorCurve;  // 0x0(0x8)
	struct FDelegate InterpFunc;  // 0x8(0x10)
	struct FName TrackName;  // 0x18(0x8)
	struct FName LinearColorPropertyName;  // 0x20(0x8)
	char pad_40[24];  // 0x28(0x18)

}; 
// Function Engine.PlayerController.AddRollInput
// Size: 0x4(Inherited: 0x0) 
struct FAddRollInput
{
	float Val;  // 0x0(0x4)

}; 
// Function Engine.StaticMesh.SetStaticMaterials
// Size: 0x10(Inherited: 0x0) 
struct FSetStaticMaterials
{
	struct TArray<struct FStaticMaterial> InStaticMaterials;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.Divide_IntPointIntPoint
// Size: 0x18(Inherited: 0x0) 
struct FDivide_IntPointIntPoint
{
	struct FIntPoint A;  // 0x0(0x8)
	struct FIntPoint B;  // 0x8(0x8)
	struct FIntPoint ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.PlatformEventsComponent.IsInLaptopMode
// Size: 0x1(Inherited: 0x0) 
struct FIsInLaptopMode
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_Advanced
// Size: 0x128(Inherited: 0x0) 
struct FBlueprint_PredictProjectilePath_Advanced
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FPredictProjectilePathParams PredictParams;  // 0x8(0x60)
	struct FPredictProjectilePathResult PredictResult;  // 0x68(0xB8)
	char pad_288_1 : 7;  // 0x120(0x1)
	bool ReturnValue : 1;  // 0x120(0x1)
	char pad_289[7];  // 0x121(0x7)

}; 
// Function Engine.PlayerController.ClientRestart
// Size: 0x8(Inherited: 0x0) 
struct FClientRestart
{
	struct APawn* NewPawn;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.PrintString
// Size: 0x30(Inherited: 0x0) 
struct FPrintString
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FString inString;  // 0x8(0x10)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bPrintToScreen : 1;  // 0x18(0x1)
	char pad_25_1 : 7;  // 0x19(0x1)
	bool bPrintToLog : 1;  // 0x19(0x1)
	char pad_26[2];  // 0x1A(0x2)
	struct FLinearColor TextColor;  // 0x1C(0x10)
	float Duration;  // 0x2C(0x4)

}; 
// Function Engine.PlatformEventsComponent.IsInTabletMode
// Size: 0x1(Inherited: 0x0) 
struct FIsInTabletMode
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.GameInstance.DebugCreatePlayer
// Size: 0x4(Inherited: 0x0) 
struct FDebugCreatePlayer
{
	int32_t ControllerId;  // 0x0(0x4)

}; 
// Function Engine.PoseableMeshComponent.GetBoneRotationByName
// Size: 0x18(Inherited: 0x0) 
struct FGetBoneRotationByName
{
	struct FName BoneName;  // 0x0(0x8)
	char EBoneSpaces BoneSpace;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	struct FRotator ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.BlueprintPathsLibrary.EnterprisePluginsDir
// Size: 0x10(Inherited: 0x0) 
struct FEnterprisePluginsDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.AtmosphericFogComponent.SetAltitudeScale
// Size: 0x4(Inherited: 0x0) 
struct FSetAltitudeScale
{
	float NewAltitudeScale;  // 0x0(0x4)

}; 
// Function Engine.PlatformEventsComponent.SupportsConvertibleLaptops
// Size: 0x1(Inherited: 0x0) 
struct FSupportsConvertibleLaptops
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.AnimGroupInstance
// Size: 0x70(Inherited: 0x0) 
struct FAnimGroupInstance
{
	char pad_0[112];  // 0x0(0x70)

}; 
// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromSoftObjectReference
// Size: 0x38(Inherited: 0x0) 
struct FGetPrimaryAssetIdFromSoftObjectReference
{
	struct TSoftObjectPtr<UObject> SoftObjectReference;  // 0x0(0x28)
	struct FPrimaryAssetId ReturnValue;  // 0x28(0x10)

}; 
// Function Engine.KismetMathLibrary.DegAsin
// Size: 0x8(Inherited: 0x0) 
struct FDegAsin
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// ScriptStruct Engine.CameraCacheEntry
// Size: 0x600(Inherited: 0x0) 
struct FCameraCacheEntry
{
	float Timestamp;  // 0x0(0x4)
	char pad_4[12];  // 0x4(0xC)
	struct FMinimalViewInfo POV;  // 0x10(0x5F0)

}; 
// Function Engine.TimelineComponent.SetLinearColorCurve
// Size: 0x10(Inherited: 0x0) 
struct FSetLinearColorCurve
{
	struct UCurveLinearColor* NewLinearColorCurve;  // 0x0(0x8)
	struct FName LinearColorTrackName;  // 0x8(0x8)

}; 
// Function Engine.PrimitiveComponent.K2_BoxOverlapComponent
// Size: 0xD8(Inherited: 0x0) 
struct FK2_BoxOverlapComponent
{
	struct FVector InBoxCentre;  // 0x0(0xC)
	struct FBox InBox;  // 0xC(0x1C)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bTraceComplex : 1;  // 0x28(0x1)
	char pad_41_1 : 7;  // 0x29(0x1)
	bool bShowTrace : 1;  // 0x29(0x1)
	char pad_42_1 : 7;  // 0x2A(0x1)
	bool bPersistentShowTrace : 1;  // 0x2A(0x1)
	char pad_43[1];  // 0x2B(0x1)
	struct FVector HitLocation;  // 0x2C(0xC)
	struct FVector HitNormal;  // 0x38(0xC)
	struct FName BoneName;  // 0x44(0x8)
	struct FHitResult OutHit;  // 0x4C(0x88)
	char pad_212_1 : 7;  // 0xD4(0x1)
	bool ReturnValue : 1;  // 0xD4(0x1)
	char pad_213[3];  // 0xD5(0x3)

}; 
// DelegateFunction Engine.OnTimelineFloat__DelegateSignature
// Size: 0x4(Inherited: 0x0) 
struct FOnTimelineFloat__DelegateSignature
{
	float Output;  // 0x0(0x4)

}; 
// DelegateFunction Engine.OnTimelineLinearColor__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnTimelineLinearColor__DelegateSignature
{
	struct FLinearColor Output;  // 0x0(0x10)

}; 
// Function Engine.SkeletalMeshComponent.SetAnimClass
// Size: 0x8(Inherited: 0x0) 
struct FSetAnimClass
{
	UObject* NewClass;  // 0x0(0x8)

}; 
// Function Engine.MaterialInstanceDynamic.SetTextureParameterValue
// Size: 0x10(Inherited: 0x0) 
struct FSetTextureParameterValue
{
	struct FName ParameterName;  // 0x0(0x8)
	struct UTexture* Value;  // 0x8(0x8)

}; 
// ScriptStruct Engine.SlotEvaluationPose
// Size: 0xE0(Inherited: 0x0) 
struct FSlotEvaluationPose
{
	char EAdditiveAnimationType AdditiveType;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float Weight;  // 0x4(0x4)
	char pad_8[216];  // 0x8(0xD8)

}; 
// Function Engine.SkeletalMeshComponent.SetAllowAnimCurveEvaluation
// Size: 0x1(Inherited: 0x0) 
struct FSetAllowAnimCurveEvaluation
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInAllow : 1;  // 0x0(0x1)

}; 
// Function Engine.CurveLinearColor.GetLinearColorValue
// Size: 0x14(Inherited: 0x0) 
struct FGetLinearColorValue
{
	float InTime;  // 0x0(0x4)
	struct FLinearColor ReturnValue;  // 0x4(0x10)

}; 
// Function Engine.Actor.GetSquaredDistanceTo
// Size: 0x10(Inherited: 0x0) 
struct FGetSquaredDistanceTo
{
	struct AActor* OtherActor;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.PlayerInput.SetMouseSensitivity
// Size: 0x4(Inherited: 0x0) 
struct FSetMouseSensitivity
{
	float Sensitivity;  // 0x0(0x4)

}; 
// ScriptStruct Engine.MeshInstancingSettings
// Size: 0x18(Inherited: 0x0) 
struct FMeshInstancingSettings
{
	AActor* ActorClassToUse;  // 0x0(0x8)
	int32_t InstanceReplacementThreshold;  // 0x8(0x4)
	uint8_t  MeshReplacementMethod;  // 0xC(0x1)
	char pad_13_1 : 7;  // 0xD(0x1)
	bool bSkipMeshesWithVertexColors : 1;  // 0xD(0x1)
	char pad_14_1 : 7;  // 0xE(0x1)
	bool bUseHLODVolumes : 1;  // 0xE(0x1)
	char pad_15[1];  // 0xF(0x1)
	UInstancedStaticMeshComponent* ISMComponentToUse;  // 0x10(0x8)

}; 
// ScriptStruct Engine.PoseLink
// Size: 0x10(Inherited: 0x10) 
struct FPoseLink : public FPoseLinkBase
{

}; 
// DelegateFunction Engine.DataDrivenCVarEngineSubsystem.OnDataDrivenCVarChanged__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnDataDrivenCVarChanged__DelegateSignature
{
	struct FString CVarName;  // 0x0(0x10)

}; 
// Function Engine.KismetSystemLibrary.K2_ClearTimerHandle
// Size: 0x10(Inherited: 0x0) 
struct FK2_ClearTimerHandle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FTimerHandle Handle;  // 0x8(0x8)

}; 
// ScriptStruct Engine.ChannelDefinition
// Size: 0x28(Inherited: 0x0) 
struct FChannelDefinition
{
	struct FName ChannelName;  // 0x0(0x8)
	struct FName ClassName;  // 0x8(0x8)
	UObject* ChannelClass;  // 0x10(0x8)
	int32_t StaticChannelIndex;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bTickOnCreate : 1;  // 0x1C(0x1)
	char pad_29_1 : 7;  // 0x1D(0x1)
	bool bServerOpen : 1;  // 0x1D(0x1)
	char pad_30_1 : 7;  // 0x1E(0x1)
	bool bClientOpen : 1;  // 0x1E(0x1)
	char pad_31_1 : 7;  // 0x1F(0x1)
	bool bInitialServer : 1;  // 0x1F(0x1)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool bInitialClient : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// ScriptStruct Engine.ConstraintBaseParams
// Size: 0x14(Inherited: 0x0) 
struct FConstraintBaseParams
{
	float Stiffness;  // 0x0(0x4)
	float Damping;  // 0x4(0x4)
	float Restitution;  // 0x8(0x4)
	float ContactDistance;  // 0xC(0x4)
	char bSoftConstraint : 1;  // 0x10(0x1)
	char pad_16_1 : 7;  // 0x10(0x1)
	char pad_17[4];  // 0x11(0x4)

}; 
// Function Engine.KismetMathLibrary.ComposeRotators
// Size: 0x24(Inherited: 0x0) 
struct FComposeRotators
{
	struct FRotator A;  // 0x0(0xC)
	struct FRotator B;  // 0xC(0xC)
	struct FRotator ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetSystemLibrary.GetConsoleVariableBoolValue
// Size: 0x18(Inherited: 0x0) 
struct FGetConsoleVariableBoolValue
{
	struct FString VariableName;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.SplineMeshComponent.SetStartScale
// Size: 0xC(Inherited: 0x0) 
struct FSetStartScale
{
	struct FVector2D StartScale;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bUpdateMesh : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.SphereComponent.GetUnscaledSphereRadius
// Size: 0x4(Inherited: 0x0) 
struct FGetUnscaledSphereRadius
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.SetCastInsetShadow
// Size: 0x1(Inherited: 0x0) 
struct FSetCastInsetShadow
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInCastInsetShadow : 1;  // 0x0(0x1)

}; 
// DelegateFunction Engine.OnCanvasRenderTargetUpdate__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnCanvasRenderTargetUpdate__DelegateSignature
{
	struct UCanvas* Canvas;  // 0x0(0x8)
	int32_t Width;  // 0x8(0x4)
	int32_t Height;  // 0xC(0x4)

}; 
// Function Engine.AudioComponent.SetPaused
// Size: 0x1(Inherited: 0x0) 
struct FSetPaused
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bPause : 1;  // 0x0(0x1)

}; 
// Function Engine.Actor.SetActorRelativeScale3D
// Size: 0xC(Inherited: 0x0) 
struct FSetActorRelativeScale3D
{
	struct FVector NewRelativeScale;  // 0x0(0xC)

}; 
// ScriptStruct Engine.EditorMapPerformanceTestDefinition
// Size: 0x20(Inherited: 0x0) 
struct FEditorMapPerformanceTestDefinition
{
	struct FSoftObjectPath PerformanceTestmap;  // 0x0(0x18)
	int32_t TestTimer;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.MakeRotFromY
// Size: 0x18(Inherited: 0x0) 
struct FMakeRotFromY
{
	struct FVector Y;  // 0x0(0xC)
	struct FRotator ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.BlueprintPlatformLibrary.GetLaunchNotification
// Size: 0x20(Inherited: 0x0) 
struct FGetLaunchNotification
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool NotificationLaunchedApp : 1;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct FString ActivationEvent;  // 0x8(0x10)
	int32_t FireDate;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.Character.ServerMove
// Size: 0x40(Inherited: 0x0) 
struct FServerMove
{
	float Timestamp;  // 0x0(0x4)
	struct FVector_NetQuantize10 InAccel;  // 0x4(0xC)
	struct FVector_NetQuantize100 ClientLoc;  // 0x10(0xC)
	char CompressedMoveFlags;  // 0x1C(0x1)
	char ClientRoll;  // 0x1D(0x1)
	char pad_30[2];  // 0x1E(0x2)
	uint32_t View;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)
	struct UPrimitiveComponent* ClientMovementBase;  // 0x28(0x8)
	struct FName ClientBaseBoneName;  // 0x30(0x8)
	char ClientMovementMode;  // 0x38(0x1)
	char pad_57[3];  // 0x39(0x3)
	float InCrouchedHalfHeight;  // 0x3C(0x4)

}; 
// DelegateFunction Engine.InstigatedAnyDamageSignature__DelegateSignature
// Size: 0x20(Inherited: 0x0) 
struct FInstigatedAnyDamageSignature__DelegateSignature
{
	float Damage;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct UDamageType* DamageType;  // 0x8(0x8)
	struct AActor* DamagedActor;  // 0x10(0x8)
	struct AActor* DamageCauser;  // 0x18(0x8)

}; 
// ScriptStruct Engine.EquirectProps
// Size: 0x48(Inherited: 0x0) 
struct FEquirectProps
{
	struct FBox2D LeftUVRect;  // 0x0(0x14)
	struct FBox2D RightUVRect;  // 0x14(0x14)
	struct FVector2D LeftScale;  // 0x28(0x8)
	struct FVector2D RightScale;  // 0x30(0x8)
	struct FVector2D LeftBias;  // 0x38(0x8)
	struct FVector2D RightBias;  // 0x40(0x8)

}; 
// DelegateFunction Engine.ViewportDisplayCallback__DelegateSignature
// Size: 0x30(Inherited: 0x0) 
struct FViewportDisplayCallback__DelegateSignature
{
	struct FText OutText;  // 0x0(0x18)
	struct FLinearColor OutColor;  // 0x18(0x10)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool ReturnValue : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// Function Engine.KismetInternationalizationLibrary.SetCurrentLocale
// Size: 0x18(Inherited: 0x0) 
struct FSetCurrentLocale
{
	struct FString Culture;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool SaveToConfig : 1;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool ReturnValue : 1;  // 0x11(0x1)
	char pad_18[6];  // 0x12(0x6)

}; 
// Function Engine.AnimInstance.GetLinkedAnimLayerInstanceByGroupAndClass
// Size: 0x18(Inherited: 0x0) 
struct FGetLinkedAnimLayerInstanceByGroupAndClass
{
	struct FName InGroup;  // 0x0(0x8)
	UAnimInstance* InClass;  // 0x8(0x8)
	struct UAnimInstance* ReturnValue;  // 0x10(0x8)

}; 
// DelegateFunction Engine.OnAsyncHandleSaveGame__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnAsyncHandleSaveGame__DelegateSignature
{
	struct USaveGame* SaveGame;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bSuccess : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.SceneComponent.K2_SetWorldLocation
// Size: 0x9C(Inherited: 0x0) 
struct FK2_SetWorldLocation
{
	struct FVector NewLocation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// Function Engine.CameraComponent.SetAspectRatio
// Size: 0x4(Inherited: 0x0) 
struct FSetAspectRatio
{
	float InAspectRatio;  // 0x0(0x4)

}; 
// DelegateFunction Engine.MovementModeChangedSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FMovementModeChangedSignature__DelegateSignature
{
	struct ACharacter* Character;  // 0x0(0x8)
	char EMovementMode PrevMovementMode;  // 0x8(0x1)
	char PreviousCustomMode;  // 0x9(0x1)
	char pad_10[6];  // 0xA(0x6)

}; 
// Function Engine.SplineComponent.GetTransformAtSplineInputKey
// Size: 0x40(Inherited: 0x0) 
struct FGetTransformAtSplineInputKey
{
	float InKey;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bUseScale : 1;  // 0x5(0x1)
	char pad_6[10];  // 0x6(0xA)
	struct FTransform ReturnValue;  // 0x10(0x30)

}; 
// Function Engine.KismetStringLibrary.EndsWith
// Size: 0x28(Inherited: 0x0) 
struct FEndsWith
{
	struct FString SourceString;  // 0x0(0x10)
	struct FString InSuffix;  // 0x10(0x10)
	char ESearchCase SearchCase;  // 0x20(0x1)
	char pad_33_1 : 7;  // 0x21(0x1)
	bool ReturnValue : 1;  // 0x21(0x1)
	char pad_34[6];  // 0x22(0x6)

}; 
// Function Engine.Actor.GetAttachParentActor
// Size: 0x8(Inherited: 0x0) 
struct FGetAttachParentActor
{
	struct AActor* ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.VertexOffsetUsage
// Size: 0x4(Inherited: 0x0) 
struct FVertexOffsetUsage
{
	int32_t Usage;  // 0x0(0x4)

}; 
// DelegateFunction Engine.CharacterMovementUpdatedSignature__DelegateSignature
// Size: 0x1C(Inherited: 0x0) 
struct FCharacterMovementUpdatedSignature__DelegateSignature
{
	float DeltaSeconds;  // 0x0(0x4)
	struct FVector OldLocation;  // 0x4(0xC)
	struct FVector OldVelocity;  // 0x10(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_Left
// Size: 0xC(Inherited: 0x0) 
struct FVector_Left
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.Multiply_VectorInt
// Size: 0x1C(Inherited: 0x0) 
struct FMultiply_VectorInt
{
	struct FVector A;  // 0x0(0xC)
	int32_t B;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// DelegateFunction Engine.LandedSignature__DelegateSignature
// Size: 0x88(Inherited: 0x0) 
struct FLandedSignature__DelegateSignature
{
	struct FHitResult Hit;  // 0x0(0x88)

}; 
// Function Engine.KismetSystemLibrary.GetPlatformUserDir
// Size: 0x10(Inherited: 0x0) 
struct FGetPlatformUserDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.SplineComponent.GetRotationAtSplineInputKey
// Size: 0x14(Inherited: 0x0) 
struct FGetRotationAtSplineInputKey
{
	float InKey;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FRotator ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.KismetMathLibrary.GreaterGreater_VectorRotator
// Size: 0x24(Inherited: 0x0) 
struct FGreaterGreater_VectorRotator
{
	struct FVector A;  // 0x0(0xC)
	struct FRotator B;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.ProjectileMovementComponent.IsInterpolationComplete
// Size: 0x1(Inherited: 0x0) 
struct FIsInterpolationComplete
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetInputLibrary.PointerEvent_GetUserIndex
// Size: 0x78(Inherited: 0x0) 
struct FPointerEvent_GetUserIndex
{
	struct FPointerEvent Input;  // 0x0(0x70)
	int32_t ReturnValue;  // 0x70(0x4)
	char pad_116[4];  // 0x74(0x4)

}; 
// Function Engine.KismetSystemLibrary.MoveComponentTo
// Size: 0x48(Inherited: 0x0) 
struct FMoveComponentTo
{
	struct USceneComponent* Component;  // 0x0(0x8)
	struct FVector TargetRelativeLocation;  // 0x8(0xC)
	struct FRotator TargetRelativeRotation;  // 0x14(0xC)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool bEaseOut : 1;  // 0x20(0x1)
	char pad_33_1 : 7;  // 0x21(0x1)
	bool bEaseIn : 1;  // 0x21(0x1)
	char pad_34[2];  // 0x22(0x2)
	float OverTime;  // 0x24(0x4)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bForceShortestRotationPath : 1;  // 0x28(0x1)
	char EMoveComponentAction MoveAction;  // 0x29(0x1)
	char pad_42[6];  // 0x2A(0x6)
	struct FLatentActionInfo LatentInfo;  // 0x30(0x18)

}; 
// Function Engine.ProjectileMovementComponent.IsVelocityUnderSimulationThreshold
// Size: 0x1(Inherited: 0x0) 
struct FIsVelocityUnderSimulationThreshold
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.SkeletalMeshSamplingInfo
// Size: 0x30(Inherited: 0x0) 
struct FSkeletalMeshSamplingInfo
{
	struct TArray<struct FSkeletalMeshSamplingRegion> Regions;  // 0x0(0x10)
	struct FSkeletalMeshSamplingBuiltData BuiltData;  // 0x10(0x20)

}; 
// ScriptStruct Engine.VectorCurve
// Size: 0x198(Inherited: 0x18) 
struct FVectorCurve : public FAnimCurveBase
{
	struct FRichCurve FloatCurves[3];  // 0x18(0x180)

}; 
// Function Engine.VolumetricCloudComponent.SetLayerHeight
// Size: 0x4(Inherited: 0x0) 
struct FSetLayerHeight
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.GetPreferredLanguages
// Size: 0x10(Inherited: 0x0) 
struct FGetPreferredLanguages
{
	struct TArray<struct FString> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.ProjectileMovementComponent.LimitVelocity
// Size: 0x18(Inherited: 0x0) 
struct FLimitVelocity
{
	struct FVector NewVelocity;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// ScriptStruct Engine.HLODProxyMesh
// Size: 0x30(Inherited: 0x0) 
struct FHLODProxyMesh
{
	 LODActor;  // 0x0(0x1C)
	char pad_28[4];  // 0x1C(0x4)
	struct UStaticMesh* StaticMesh;  // 0x20(0x8)
	struct FName Key;  // 0x28(0x8)

}; 
// ScriptStruct Engine.MaterialLayersFunctions
// Size: 0x40(Inherited: 0x0) 
struct FMaterialLayersFunctions
{
	struct TArray<struct UMaterialFunctionInterface*> Layers;  // 0x0(0x10)
	struct TArray<struct UMaterialFunctionInterface*> Blends;  // 0x10(0x10)
	struct TArray<bool> LayerStates;  // 0x20(0x10)
	struct FString KeyString;  // 0x30(0x10)

}; 
// Function Engine.KismetSystemLibrary.ControlScreensaver
// Size: 0x1(Inherited: 0x0) 
struct FControlScreensaver
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bAllowScreenSaver : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.BlueprintDebugData
// Size: 0x1(Inherited: 0x0) 
struct FBlueprintDebugData
{
	char pad_0[1];  // 0x0(0x1)

}; 
// Function Engine.ProjectileMovementComponent.MoveInterpolationTarget
// Size: 0x18(Inherited: 0x0) 
struct FMoveInterpolationTarget
{
	struct FVector NewLocation;  // 0x0(0xC)
	struct FRotator NewRotation;  // 0xC(0xC)

}; 
// DelegateFunction Engine.ProjectileMovementComponent.OnProjectileBounceDelegate__DelegateSignature
// Size: 0x94(Inherited: 0x0) 
struct FOnProjectileBounceDelegate__DelegateSignature
{
	struct FHitResult ImpactResult;  // 0x0(0x88)
	struct FVector ImpactVelocity;  // 0x88(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_CosineAngle2D
// Size: 0x1C(Inherited: 0x0) 
struct FVector_CosineAngle2D
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	float ReturnValue;  // 0x18(0x4)

}; 
// Function Engine.KismetSystemLibrary.LineTraceMulti
// Size: 0x80(Inherited: 0x0) 
struct FLineTraceMulti
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	char ETraceTypeQuery TraceChannel;  // 0x20(0x1)
	char pad_33_1 : 7;  // 0x21(0x1)
	bool bTraceComplex : 1;  // 0x21(0x1)
	char pad_34[6];  // 0x22(0x6)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x28(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)
	struct TArray<struct FHitResult> OutHits;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool bIgnoreSelf : 1;  // 0x50(0x1)
	char pad_81[3];  // 0x51(0x3)
	struct FLinearColor TraceColor;  // 0x54(0x10)
	struct FLinearColor TraceHitColor;  // 0x64(0x10)
	float DrawTime;  // 0x74(0x4)
	char pad_120_1 : 7;  // 0x78(0x1)
	bool ReturnValue : 1;  // 0x78(0x1)
	char pad_121[7];  // 0x79(0x7)

}; 
// Function Engine.KismetMathLibrary.Conv_MatrixToRotator
// Size: 0x50(Inherited: 0x0) 
struct FConv_MatrixToRotator
{
	struct FMatrix InMatrix;  // 0x0(0x40)
	struct FRotator ReturnValue;  // 0x40(0xC)
	char pad_76[4];  // 0x4C(0x4)

}; 
// Function Engine.AsyncActionLoadPrimaryAssetList.AsyncLoadPrimaryAssetList
// Size: 0x30(Inherited: 0x0) 
struct FAsyncLoadPrimaryAssetList
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct TArray<struct FPrimaryAssetId> PrimaryAssetList;  // 0x8(0x10)
	struct TArray<struct FName> LoadBundles;  // 0x18(0x10)
	struct UAsyncActionLoadPrimaryAssetList* ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.ProjectileMovementComponent.SetInterpolatedComponent
// Size: 0x8(Inherited: 0x0) 
struct FSetInterpolatedComponent
{
	struct USceneComponent* Component;  // 0x0(0x8)

}; 
// Function Engine.ProjectileMovementComponent.SetVelocityInLocalSpace
// Size: 0xC(Inherited: 0x0) 
struct FSetVelocityInLocalSpace
{
	struct FVector NewVelocity;  // 0x0(0xC)

}; 
// Function Engine.KismetArrayLibrary.Array_Swap
// Size: 0x18(Inherited: 0x0) 
struct FArray_Swap
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t FirstIndex;  // 0x10(0x4)
	int32_t SecondIndex;  // 0x14(0x4)

}; 
// Function Engine.KismetSystemLibrary.MakeLiteralFloat
// Size: 0x8(Inherited: 0x0) 
struct FMakeLiteralFloat
{
	float Value;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.BlueprintPathsLibrary.IsRelative
// Size: 0x18(Inherited: 0x0) 
struct FIsRelative
{
	struct FString InPath;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFromEnd
// Size: 0x8(Inherited: 0x0) 
struct FGetInstanceAssetPlayerTimeFromEnd
{
	int32_t AssetPlayerIndex;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.GameInstance.DebugRemovePlayer
// Size: 0x4(Inherited: 0x0) 
struct FDebugRemovePlayer
{
	int32_t ControllerId;  // 0x0(0x4)

}; 
// Function Engine.GameInstance.HandleNetworkError
// Size: 0x2(Inherited: 0x0) 
struct FHandleNetworkError
{
	char ENetworkFailure FailureType;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bIsServer : 1;  // 0x1(0x1)

}; 
// Function Engine.PlayerController.ClientUpdateLevelStreamingStatus
// Size: 0x10(Inherited: 0x0) 
struct FClientUpdateLevelStreamingStatus
{
	struct FName PackageName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bNewShouldBeLoaded : 1;  // 0x8(0x1)
	char pad_9_1 : 7;  // 0x9(0x1)
	bool bNewShouldBeVisible : 1;  // 0x9(0x1)
	char pad_10_1 : 7;  // 0xA(0x1)
	bool bNewShouldBlockOnLoad : 1;  // 0xA(0x1)
	char pad_11[1];  // 0xB(0x1)
	int32_t LODIndex;  // 0xC(0x4)

}; 
// Function Engine.KismetSystemLibrary.ComponentOverlapComponents
// Size: 0x80(Inherited: 0x0) 
struct FComponentOverlapComponents
{
	struct UPrimitiveComponent* Component;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FTransform ComponentTransform;  // 0x10(0x30)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x40(0x10)
	UObject* ComponentClassFilter;  // 0x50(0x8)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x58(0x10)
	struct TArray<struct UPrimitiveComponent*> OutComponents;  // 0x68(0x10)
	char pad_120_1 : 7;  // 0x78(0x1)
	bool ReturnValue : 1;  // 0x78(0x1)
	char pad_121[7];  // 0x79(0x7)

}; 
// Function Engine.Actor.ReceiveActorBeginOverlap
// Size: 0x8(Inherited: 0x0) 
struct FReceiveActorBeginOverlap
{
	struct AActor* OtherActor;  // 0x0(0x8)

}; 
// Function Engine.SplineComponent.GetScaleAtDistanceAlongSpline
// Size: 0x10(Inherited: 0x0) 
struct FGetScaleAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	struct FVector ReturnValue;  // 0x4(0xC)

}; 
// Function Engine.KismetMathLibrary.TimespanRatio
// Size: 0x18(Inherited: 0x0) 
struct FTimespanRatio
{
	struct FTimespan A;  // 0x0(0x8)
	struct FTimespan B;  // 0x8(0x8)
	float ReturnValue;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.GameInstance.HandleTravelError
// Size: 0x1(Inherited: 0x0) 
struct FHandleTravelError
{
	char ETravelFailure FailureType;  // 0x0(0x1)

}; 
// Function Engine.KismetStringLibrary.StartsWith
// Size: 0x28(Inherited: 0x0) 
struct FStartsWith
{
	struct FString SourceString;  // 0x0(0x10)
	struct FString InPrefix;  // 0x10(0x10)
	char ESearchCase SearchCase;  // 0x20(0x1)
	char pad_33_1 : 7;  // 0x21(0x1)
	bool ReturnValue : 1;  // 0x21(0x1)
	char pad_34[6];  // 0x22(0x6)

}; 
// Function Engine.BlueprintPathsLibrary.RootDir
// Size: 0x10(Inherited: 0x0) 
struct FRootDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// ScriptStruct Engine.BoneReference
// Size: 0x10(Inherited: 0x0) 
struct FBoneReference
{
	struct FName BoneName;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)

}; 
// DelegateFunction Engine.PlatformGameInstance.PlatformScreenOrientationChangedDelegate__DelegateSignature
// Size: 0x1(Inherited: 0x0) 
struct FPlatformScreenOrientationChangedDelegate__DelegateSignature
{
	char EScreenOrientation inScreenOrientation;  // 0x0(0x1)

}; 
// DelegateFunction Engine.OnPrimaryAssetClassLoaded__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FOnPrimaryAssetClassLoaded__DelegateSignature
{
	UObject* Loaded;  // 0x0(0x8)

}; 
// Function Engine.SubsystemBlueprintLibrary.GetWorldSubsystem
// Size: 0x18(Inherited: 0x0) 
struct FGetWorldSubsystem
{
	struct UObject* ContextObject;  // 0x0(0x8)
	UWorldSubsystem* Class;  // 0x8(0x8)
	struct UWorldSubsystem* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.GameplayStatics.FinishSpawningActor
// Size: 0x50(Inherited: 0x0) 
struct FFinishSpawningActor
{
	struct AActor* Actor;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FTransform SpawnTransform;  // 0x10(0x30)
	struct AActor* ReturnValue;  // 0x40(0x8)
	char pad_72[8];  // 0x48(0x8)

}; 
// Function Engine.KismetSystemLibrary.DoesImplementInterface
// Size: 0x18(Inherited: 0x0) 
struct FDoesImplementInterface
{
	struct UObject* TestObject;  // 0x0(0x8)
	UInterface* Interface;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// DelegateFunction Engine.PlatformGameInstance.PlatformReceivedLocalNotificationDelegate__DelegateSignature
// Size: 0x18(Inherited: 0x0) 
struct FPlatformReceivedLocalNotificationDelegate__DelegateSignature
{
	struct FString inString;  // 0x0(0x10)
	int32_t inInt;  // 0x10(0x4)
	char EApplicationState inAppState;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTime
// Size: 0x20(Inherited: 0x0) 
struct FK2_GetTimerElapsedTime
{
	struct UObject* Object;  // 0x0(0x8)
	struct FString FunctionName;  // 0x8(0x10)
	float ReturnValue;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetSystemLibrary.EqualEqual_PrimaryAssetType
// Size: 0x14(Inherited: 0x0) 
struct FEqualEqual_PrimaryAssetType
{
	struct FPrimaryAssetType A;  // 0x0(0x8)
	struct FPrimaryAssetType B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.KismetMathLibrary.Divide_VectorFloat
// Size: 0x1C(Inherited: 0x0) 
struct FDivide_VectorFloat
{
	struct FVector A;  // 0x0(0xC)
	float B;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// DelegateFunction Engine.PlatformGameInstance.PlatformReceivedRemoteNotificationDelegate__DelegateSignature
// Size: 0x18(Inherited: 0x0) 
struct FPlatformReceivedRemoteNotificationDelegate__DelegateSignature
{
	struct FString inString;  // 0x0(0x10)
	char EApplicationState inAppState;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// DelegateFunction Engine.PlatformGameInstance.PlatformFailedToRegisterForRemoteNotificationsDelegate__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FPlatformFailedToRegisterForRemoteNotificationsDelegate__DelegateSignature
{
	struct FString inString;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetMaximumAxisScale
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_GetMaximumAxisScale
{
	struct FMatrix M;  // 0x0(0x40)
	float ReturnValue;  // 0x40(0x4)
	char pad_68[12];  // 0x44(0xC)

}; 
// Function Engine.PrimitiveComponent.K2_SphereTraceComponent
// Size: 0xCC(Inherited: 0x0) 
struct FK2_SphereTraceComponent
{
	struct FVector TraceStart;  // 0x0(0xC)
	struct FVector TraceEnd;  // 0xC(0xC)
	float SphereRadius;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bTraceComplex : 1;  // 0x1C(0x1)
	char pad_29_1 : 7;  // 0x1D(0x1)
	bool bShowTrace : 1;  // 0x1D(0x1)
	char pad_30_1 : 7;  // 0x1E(0x1)
	bool bPersistentShowTrace : 1;  // 0x1E(0x1)
	char pad_31[1];  // 0x1F(0x1)
	struct FVector HitLocation;  // 0x20(0xC)
	struct FVector HitNormal;  // 0x2C(0xC)
	struct FName BoneName;  // 0x38(0x8)
	struct FHitResult OutHit;  // 0x40(0x88)
	char pad_200_1 : 7;  // 0xC8(0x1)
	bool ReturnValue : 1;  // 0xC8(0x1)
	char pad_201[3];  // 0xC9(0x3)

}; 
// Function Engine.PrimitiveComponent.SetSingleSampleShadowFromStationaryLights
// Size: 0x1(Inherited: 0x0) 
struct FSetSingleSampleShadowFromStationaryLights
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewSingleSampleShadowFromStationaryLights : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.MultiplyMultiply_FloatFloat
// Size: 0xC(Inherited: 0x0) 
struct FMultiplyMultiply_FloatFloat
{
	float Base;  // 0x0(0x4)
	float Exp;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// ScriptStruct Engine.ParticleCurvePair
// Size: 0x18(Inherited: 0x0) 
struct FParticleCurvePair
{
	struct FString CurveName;  // 0x0(0x10)
	struct UObject* CurveObject;  // 0x10(0x8)

}; 
// Function Engine.SplineComponent.SetLocationAtSplinePoint
// Size: 0x14(Inherited: 0x0) 
struct FSetLocationAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	struct FVector InLocation;  // 0x4(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bUpdateSpline : 1;  // 0x11(0x1)
	char pad_18[2];  // 0x12(0x2)

}; 
// Function Engine.KismetInputLibrary.InputEvent_IsShiftDown
// Size: 0x20(Inherited: 0x0) 
struct FInputEvent_IsShiftDown
{
	struct FInputEvent Input;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetSystemLibrary.EndTransaction
// Size: 0x4(Inherited: 0x0) 
struct FEndTransaction
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.URL
// Size: 0x68(Inherited: 0x0) 
struct FURL
{
	struct FString Protocol;  // 0x0(0x10)
	struct FString Host;  // 0x10(0x10)
	int32_t Port;  // 0x20(0x4)
	int32_t Valid;  // 0x24(0x4)
	struct FString Map;  // 0x28(0x10)
	struct FString RedirectURL;  // 0x38(0x10)
	struct TArray<struct FString> Op;  // 0x48(0x10)
	struct FString Portal;  // 0x58(0x10)

}; 
// Function Engine.PlayerCameraManager.GetCameraRotation
// Size: 0xC(Inherited: 0x0) 
struct FGetCameraRotation
{
	struct FRotator ReturnValue;  // 0x0(0xC)

}; 
// DelegateFunction Engine.PlatformGameInstance.PlatformRegisteredForUserNotificationsDelegate__DelegateSignature
// Size: 0x4(Inherited: 0x0) 
struct FPlatformRegisteredForUserNotificationsDelegate__DelegateSignature
{
	int32_t inInt;  // 0x0(0x4)

}; 
// ScriptStruct Engine.CanvasUVTri
// Size: 0x60(Inherited: 0x0) 
struct FCanvasUVTri
{
	struct FVector2D V0_Pos;  // 0x0(0x8)
	struct FVector2D V0_UV;  // 0x8(0x8)
	struct FLinearColor V0_Color;  // 0x10(0x10)
	struct FVector2D V1_Pos;  // 0x20(0x8)
	struct FVector2D V1_UV;  // 0x28(0x8)
	struct FLinearColor V1_Color;  // 0x30(0x10)
	struct FVector2D V2_Pos;  // 0x40(0x8)
	struct FVector2D V2_UV;  // 0x48(0x8)
	struct FLinearColor V2_Color;  // 0x50(0x10)

}; 
// Function Engine.KismetSystemLibrary.CapsuleTraceMultiForObjects
// Size: 0x98(Inherited: 0x0) 
struct FCapsuleTraceMultiForObjects
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	float Radius;  // 0x20(0x4)
	float HalfHeight;  // 0x24(0x4)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x28(0x10)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool bTraceComplex : 1;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x40(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)
	struct TArray<struct FHitResult> OutHits;  // 0x58(0x10)
	char pad_104_1 : 7;  // 0x68(0x1)
	bool bIgnoreSelf : 1;  // 0x68(0x1)
	char pad_105[3];  // 0x69(0x3)
	struct FLinearColor TraceColor;  // 0x6C(0x10)
	struct FLinearColor TraceHitColor;  // 0x7C(0x10)
	float DrawTime;  // 0x8C(0x4)
	char pad_144_1 : 7;  // 0x90(0x1)
	bool ReturnValue : 1;  // 0x90(0x1)
	char pad_145[7];  // 0x91(0x7)

}; 
// Function Engine.KismetSystemLibrary.LaunchURL
// Size: 0x10(Inherited: 0x0) 
struct FLaunchURL
{
	struct FString URL;  // 0x0(0x10)

}; 
// Function Engine.PrimitiveComponent.SetMassScale
// Size: 0xC(Inherited: 0x0) 
struct FSetMassScale
{
	struct FName BoneName;  // 0x0(0x8)
	float InMassScale;  // 0x8(0x4)

}; 
// DelegateFunction Engine.PlatformGameInstance.PlatformRegisteredForRemoteNotificationsDelegate__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FPlatformRegisteredForRemoteNotificationsDelegate__DelegateSignature
{
	struct TArray<char> inArray;  // 0x0(0x10)

}; 
// Function Engine.SkeletalMeshComponent.BreakConstraint
// Size: 0x20(Inherited: 0x0) 
struct FBreakConstraint
{
	struct FVector Impulse;  // 0x0(0xC)
	struct FVector HitLocation;  // 0xC(0xC)
	struct FName InBoneName;  // 0x18(0x8)

}; 
// Function Engine.ViewportStatsSubsystem.AddTimedDisplay
// Size: 0x30(Inherited: 0x0) 
struct FAddTimedDisplay
{
	struct FText Text;  // 0x0(0x18)
	struct FLinearColor Color;  // 0x18(0x10)
	float Duration;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)

}; 
// Function Engine.KismetMathLibrary.NotEqual_NameName
// Size: 0x14(Inherited: 0x0) 
struct FNotEqual_NameName
{
	struct FName A;  // 0x0(0x8)
	struct FName B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// DelegateFunction Engine.PlatformGameInstance.PlatformStartupArgumentsDelegate__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FPlatformStartupArgumentsDelegate__DelegateSignature
{
	struct TArray<struct FString> StartupArguments;  // 0x0(0x10)

}; 
// ScriptStruct Engine.CustomAttributePerBoneData
// Size: 0x18(Inherited: 0x0) 
struct FCustomAttributePerBoneData
{
	int32_t BoneTreeIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct TArray<struct FCustomAttribute> Attributes;  // 0x8(0x10)

}; 
// ScriptStruct Engine.BookmarkJumpToSettings
// Size: 0x1(Inherited: 0x1) 
struct FBookmarkJumpToSettings : public FBookmarkBaseJumpToSettings
{

}; 
// ScriptStruct Engine.AnimNotifyQueue
// Size: 0x70(Inherited: 0x0) 
struct FAnimNotifyQueue
{
	char pad_0[16];  // 0x0(0x10)
	struct TArray<struct FAnimNotifyEventReference> AnimNotifies;  // 0x10(0x10)
	struct TMap<struct FName, struct FAnimNotifyArray> UnfilteredMontageAnimNotifies;  // 0x20(0x50)

}; 
// ScriptStruct Engine.RootMotionSource_JumpForce
// Size: 0xD0(Inherited: 0xA0) 
struct FRootMotionSource_JumpForce : public FRootMotionSource
{
	struct FRotator Rotation;  // 0x98(0xC)
	float Distance;  // 0xA4(0x4)
	float Height;  // 0xA8(0x4)
	char pad_180_1 : 7;  // 0xB4(0x1)
	bool bDisableTimeout : 1;  // 0xAC(0x1)
	struct UCurveVector* PathOffsetCurve;  // 0xB0(0x8)
	struct UCurveFloat* TimeMappingCurve;  // 0xB8(0x8)
	char pad_197[11];  // 0xC5(0xB)

}; 
// Function Engine.KismetSystemLibrary.AddFloatHistorySample
// Size: 0x48(Inherited: 0x0) 
struct FAddFloatHistorySample
{
	float Value;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FDebugFloatHistory FloatHistory;  // 0x8(0x20)
	struct FDebugFloatHistory ReturnValue;  // 0x28(0x20)

}; 
// ScriptStruct Engine.DebugFloatHistory
// Size: 0x20(Inherited: 0x0) 
struct FDebugFloatHistory
{
	struct TArray<float> Samples;  // 0x0(0x10)
	float MaxSamples;  // 0x10(0x4)
	float MinValue;  // 0x14(0x4)
	float MaxValue;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bAutoAdjustMinMax : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// ScriptStruct Engine.PerBoneBlendWeights
// Size: 0x10(Inherited: 0x0) 
struct FPerBoneBlendWeights
{
	struct TArray<struct FPerBoneBlendWeight> BoneBlendWeights;  // 0x0(0x10)

}; 
// Function Engine.PrimitiveComponent.GetPhysicsLinearVelocity
// Size: 0x14(Inherited: 0x0) 
struct FGetPhysicsLinearVelocity
{
	struct FName BoneName;  // 0x0(0x8)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.Actor.GetParentComponent
// Size: 0x8(Inherited: 0x0) 
struct FGetParentComponent
{
	struct UChildActorComponent* ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.ParticleSystemReplayFrame
// Size: 0x10(Inherited: 0x0) 
struct FParticleSystemReplayFrame
{
	char pad_0[16];  // 0x0(0x10)

}; 
// ScriptStruct Engine.CharacterMovementComponentPostPhysicsTickFunction
// Size: 0x30(Inherited: 0x28) 
struct FCharacterMovementComponentPostPhysicsTickFunction : public FTickFunction
{
	char pad_40[8];  // 0x28(0x8)

}; 
// Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTimeDelegate
// Size: 0x14(Inherited: 0x0) 
struct FK2_GetTimerElapsedTimeDelegate
{
	struct FDelegate Delegate;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.KismetSystemLibrary.ParseParamValue
// Size: 0x38(Inherited: 0x0) 
struct FParseParamValue
{
	struct FString inString;  // 0x0(0x10)
	struct FString InParam;  // 0x10(0x10)
	struct FString OutValue;  // 0x20(0x10)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool ReturnValue : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 
// Function Engine.KismetSystemLibrary.BeginTransaction
// Size: 0x38(Inherited: 0x0) 
struct FBeginTransaction
{
	struct FString Context;  // 0x0(0x10)
	struct FText Description;  // 0x10(0x18)
	struct UObject* PrimaryObject;  // 0x28(0x8)
	int32_t ReturnValue;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)

}; 
// Function Engine.KismetSystemLibrary.BoxTraceMulti
// Size: 0x98(Inherited: 0x0) 
struct FBoxTraceMulti
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	struct FVector HalfSize;  // 0x20(0xC)
	struct FRotator Orientation;  // 0x2C(0xC)
	char ETraceTypeQuery TraceChannel;  // 0x38(0x1)
	char pad_57_1 : 7;  // 0x39(0x1)
	bool bTraceComplex : 1;  // 0x39(0x1)
	char pad_58[6];  // 0x3A(0x6)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x40(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)
	struct TArray<struct FHitResult> OutHits;  // 0x58(0x10)
	char pad_104_1 : 7;  // 0x68(0x1)
	bool bIgnoreSelf : 1;  // 0x68(0x1)
	char pad_105[3];  // 0x69(0x3)
	struct FLinearColor TraceColor;  // 0x6C(0x10)
	struct FLinearColor TraceHitColor;  // 0x7C(0x10)
	float DrawTime;  // 0x8C(0x4)
	char pad_144_1 : 7;  // 0x90(0x1)
	bool ReturnValue : 1;  // 0x90(0x1)
	char pad_145[7];  // 0x91(0x7)

}; 
// Function Engine.KismetMathLibrary.MakeTimespan
// Size: 0x20(Inherited: 0x0) 
struct FMakeTimespan
{
	int32_t Days;  // 0x0(0x4)
	int32_t Hours;  // 0x4(0x4)
	int32_t Minutes;  // 0x8(0x4)
	int32_t Seconds;  // 0xC(0x4)
	int32_t Milliseconds;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct FTimespan ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.KismetSystemLibrary.BoxTraceMultiByProfile
// Size: 0xA0(Inherited: 0x0) 
struct FBoxTraceMultiByProfile
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	struct FVector HalfSize;  // 0x20(0xC)
	struct FRotator Orientation;  // 0x2C(0xC)
	struct FName ProfileName;  // 0x38(0x8)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool bTraceComplex : 1;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x48(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x58(0x1)
	char pad_89[7];  // 0x59(0x7)
	struct TArray<struct FHitResult> OutHits;  // 0x60(0x10)
	char pad_112_1 : 7;  // 0x70(0x1)
	bool bIgnoreSelf : 1;  // 0x70(0x1)
	char pad_113[3];  // 0x71(0x3)
	struct FLinearColor TraceColor;  // 0x74(0x10)
	struct FLinearColor TraceHitColor;  // 0x84(0x10)
	float DrawTime;  // 0x94(0x4)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool ReturnValue : 1;  // 0x98(0x1)
	char pad_153[7];  // 0x99(0x7)

}; 
// Function Engine.SplineComponent.GetWorldDirectionAtTime
// Size: 0x14(Inherited: 0x0) 
struct FGetWorldDirectionAtTime
{
	float Time;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bUseConstantVelocity : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.KismetRenderingLibrary.CreateRenderTarget2DArray
// Size: 0x38(Inherited: 0x0) 
struct FCreateRenderTarget2DArray
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	int32_t Width;  // 0x8(0x4)
	int32_t Height;  // 0xC(0x4)
	int32_t Slices;  // 0x10(0x4)
	char ETextureRenderTargetFormat Format;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)
	struct FLinearColor ClearColor;  // 0x18(0x10)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bAutoGenerateMipMaps : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)
	struct UTextureRenderTarget2DArray* ReturnValue;  // 0x30(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector_ProjectOnToNormal
// Size: 0x24(Inherited: 0x0) 
struct FVector_ProjectOnToNormal
{
	struct FVector V;  // 0x0(0xC)
	struct FVector InNormal;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.GameStateBase.GetPlayerStartTime
// Size: 0x10(Inherited: 0x0) 
struct FGetPlayerStartTime
{
	struct AController* Controller;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetSystemLibrary.BoxTraceSingle
// Size: 0x108(Inherited: 0x0) 
struct FBoxTraceSingle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	struct FVector HalfSize;  // 0x20(0xC)
	struct FRotator Orientation;  // 0x2C(0xC)
	char ETraceTypeQuery TraceChannel;  // 0x38(0x1)
	char pad_57_1 : 7;  // 0x39(0x1)
	bool bTraceComplex : 1;  // 0x39(0x1)
	char pad_58[6];  // 0x3A(0x6)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x40(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x50(0x1)
	char pad_81[3];  // 0x51(0x3)
	struct FHitResult OutHit;  // 0x54(0x88)
	char pad_220_1 : 7;  // 0xDC(0x1)
	bool bIgnoreSelf : 1;  // 0xDC(0x1)
	char pad_221[3];  // 0xDD(0x3)
	struct FLinearColor TraceColor;  // 0xE0(0x10)
	struct FLinearColor TraceHitColor;  // 0xF0(0x10)
	float DrawTime;  // 0x100(0x4)
	char pad_260_1 : 7;  // 0x104(0x1)
	bool ReturnValue : 1;  // 0x104(0x1)
	char pad_261[3];  // 0x105(0x3)

}; 
// ScriptStruct Engine.BakedFloatCustomAttribute
// Size: 0x90(Inherited: 0x0) 
struct FBakedFloatCustomAttribute
{
	struct FName AttributeName;  // 0x0(0x8)
	struct FSimpleCurve FloatCurve;  // 0x8(0x88)

}; 
// Function Engine.LightComponentBase.SetSamplesPerPixel
// Size: 0x4(Inherited: 0x0) 
struct FSetSamplesPerPixel
{
	int32_t NewValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.BranchFilter
// Size: 0xC(Inherited: 0x0) 
struct FBranchFilter
{
	struct FName BoneName;  // 0x0(0x8)
	int32_t BlendDepth;  // 0x8(0x4)

}; 
// Function Engine.KismetSystemLibrary.BoxTraceSingleByProfile
// Size: 0x110(Inherited: 0x0) 
struct FBoxTraceSingleByProfile
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	struct FVector HalfSize;  // 0x20(0xC)
	struct FRotator Orientation;  // 0x2C(0xC)
	struct FName ProfileName;  // 0x38(0x8)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool bTraceComplex : 1;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x48(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x58(0x1)
	char pad_89[3];  // 0x59(0x3)
	struct FHitResult OutHit;  // 0x5C(0x88)
	char pad_228_1 : 7;  // 0xE4(0x1)
	bool bIgnoreSelf : 1;  // 0xE4(0x1)
	char pad_229[3];  // 0xE5(0x3)
	struct FLinearColor TraceColor;  // 0xE8(0x10)
	struct FLinearColor TraceHitColor;  // 0xF8(0x10)
	float DrawTime;  // 0x108(0x4)
	char pad_268_1 : 7;  // 0x10C(0x1)
	bool ReturnValue : 1;  // 0x10C(0x1)
	char pad_269[3];  // 0x10D(0x3)

}; 
// Function Engine.LevelScriptActor.SetCinematicMode
// Size: 0x5(Inherited: 0x0) 
struct FSetCinematicMode
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bCinematicMode : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bHidePlayer : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool bAffectsHUD : 1;  // 0x2(0x1)
	char pad_3_1 : 7;  // 0x3(0x1)
	bool bAffectsMovement : 1;  // 0x3(0x1)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bAffectsTurning : 1;  // 0x4(0x1)

}; 
// Function Engine.SkeletalMeshComponent.SetBodyNotifyRigidBodyCollision
// Size: 0xC(Inherited: 0x0) 
struct FSetBodyNotifyRigidBodyCollision
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewNotifyRigidBodyCollision : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FName BoneName;  // 0x4(0x8)

}; 
// Function Engine.KismetSystemLibrary.IsValidSoftClassReference
// Size: 0x30(Inherited: 0x0) 
struct FIsValidSoftClassReference
{
	struct TSoftClassPtr<UObject> SoftClassReference;  // 0x0(0x28)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool ReturnValue : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// Function Engine.SkeletalMesh.FindSocketAndIndex
// Size: 0x18(Inherited: 0x0) 
struct FFindSocketAndIndex
{
	struct FName InSocketName;  // 0x0(0x8)
	int32_t OutIndex;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct USkeletalMeshSocket* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector_BoundedToCube
// Size: 0x1C(Inherited: 0x0) 
struct FVector_BoundedToCube
{
	struct FVector InVect;  // 0x0(0xC)
	float InRadius;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.PlayerController.SetName
// Size: 0x10(Inherited: 0x0) 
struct FSetName
{
	struct FString S;  // 0x0(0x10)

}; 
// Function Engine.KismetSystemLibrary.BreakSoftObjectPath
// Size: 0x28(Inherited: 0x0) 
struct FBreakSoftObjectPath
{
	struct FSoftObjectPath InSoftObjectPath;  // 0x0(0x18)
	struct FString PathString;  // 0x18(0x10)

}; 
// ScriptStruct Engine.HapticFeedbackDetails_Curve
// Size: 0x110(Inherited: 0x0) 
struct FHapticFeedbackDetails_Curve
{
	struct FRuntimeFloatCurve Frequency;  // 0x0(0x88)
	struct FRuntimeFloatCurve Amplitude;  // 0x88(0x88)

}; 
// Function Engine.KismetSystemLibrary.NotEqual_PrimaryAssetType
// Size: 0x14(Inherited: 0x0) 
struct FNotEqual_PrimaryAssetType
{
	struct FPrimaryAssetType A;  // 0x0(0x8)
	struct FPrimaryAssetType B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.DataTableFunctionLibrary.GetDataTableRowNames
// Size: 0x18(Inherited: 0x0) 
struct FGetDataTableRowNames
{
	struct UDataTable* Table;  // 0x0(0x8)
	struct TArray<struct FName> OutRowNames;  // 0x8(0x10)

}; 
// ScriptStruct Engine.BuildPromotionOpenAssetSettings
// Size: 0x60(Inherited: 0x0) 
struct FBuildPromotionOpenAssetSettings
{
	struct FFilePath BlueprintAsset;  // 0x0(0x10)
	struct FFilePath MaterialAsset;  // 0x10(0x10)
	struct FFilePath ParticleSystemAsset;  // 0x20(0x10)
	struct FFilePath SkeletalMeshAsset;  // 0x30(0x10)
	struct FFilePath StaticMeshAsset;  // 0x40(0x10)
	struct FFilePath TextureAsset;  // 0x50(0x10)

}; 
// Function Engine.KismetSystemLibrary.CancelTransaction
// Size: 0x4(Inherited: 0x0) 
struct FCancelTransaction
{
	int32_t Index;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocityInDegrees
// Size: 0x10(Inherited: 0x0) 
struct FSetPhysicsMaxAngularVelocityInDegrees
{
	float NewMaxAngVel;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bAddToCurrent : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FName BoneName;  // 0x8(0x8)

}; 
// Function Engine.KismetSystemLibrary.CapsuleOverlapActors
// Size: 0x60(Inherited: 0x0) 
struct FCapsuleOverlapActors
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector CapsulePos;  // 0x8(0xC)
	float Radius;  // 0x14(0x4)
	float HalfHeight;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x20(0x10)
	UObject* ActorClassFilter;  // 0x30(0x8)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x38(0x10)
	struct TArray<struct AActor*> OutActors;  // 0x48(0x10)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool ReturnValue : 1;  // 0x58(0x1)
	char pad_89[7];  // 0x59(0x7)

}; 
// Function Engine.TimelineComponent.IsPlaying
// Size: 0x1(Inherited: 0x0) 
struct FIsPlaying
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.Controller.SetInitialLocationAndRotation
// Size: 0x18(Inherited: 0x0) 
struct FSetInitialLocationAndRotation
{
	struct FVector NewLocation;  // 0x0(0xC)
	struct FRotator NewRotation;  // 0xC(0xC)

}; 
// Function Engine.SkeletalMeshComponent.SetConstraintProfileForAll
// Size: 0xC(Inherited: 0x0) 
struct FSetConstraintProfileForAll
{
	struct FName ProfileName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bDefaultIfNotFound : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.CameraAnimInst.SetScale
// Size: 0x4(Inherited: 0x0) 
struct FSetScale
{
	float NewDuration;  // 0x0(0x4)

}; 
// Function Engine.GameModeBase.GetNumSpectators
// Size: 0x4(Inherited: 0x0) 
struct FGetNumSpectators
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.IsValidSoftObjectReference
// Size: 0x30(Inherited: 0x0) 
struct FIsValidSoftObjectReference
{
	struct TSoftObjectPtr<UObject> SoftObjectReference;  // 0x0(0x28)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool ReturnValue : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// Function Engine.PlayerCameraManager.StopCameraAnimInst
// Size: 0x10(Inherited: 0x0) 
struct FStopCameraAnimInst
{
	struct UCameraAnimInst* AnimInst;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bImmediate : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetSystemLibrary.CapsuleOverlapComponents
// Size: 0x60(Inherited: 0x0) 
struct FCapsuleOverlapComponents
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector CapsulePos;  // 0x8(0xC)
	float Radius;  // 0x14(0x4)
	float HalfHeight;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x20(0x10)
	UObject* ComponentClassFilter;  // 0x30(0x8)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x38(0x10)
	struct TArray<struct UPrimitiveComponent*> OutComponents;  // 0x48(0x10)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool ReturnValue : 1;  // 0x58(0x1)
	char pad_89[7];  // 0x59(0x7)

}; 
// Function Engine.PlayerController.ClientSetCameraMode
// Size: 0x8(Inherited: 0x0) 
struct FClientSetCameraMode
{
	struct FName NewCamMode;  // 0x0(0x8)

}; 
// Function Engine.KismetTextLibrary.Conv_BoolToText
// Size: 0x20(Inherited: 0x0) 
struct FConv_BoolToText
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool InBool : 1;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct FText ReturnValue;  // 0x8(0x18)

}; 
// Function Engine.PlayerController.ClientUpdateMultipleLevelsStreamingStatus
// Size: 0x10(Inherited: 0x0) 
struct FClientUpdateMultipleLevelsStreamingStatus
{
	struct TArray<struct FUpdateLevelStreamingLevelStatus> LevelStatuses;  // 0x0(0x10)

}; 
// Function Engine.SkeletalMeshComponent.GetLinkedAnimGraphInstancesByTag
// Size: 0x18(Inherited: 0x0) 
struct FGetLinkedAnimGraphInstancesByTag
{
	struct FName InTag;  // 0x0(0x8)
	struct TArray<struct UAnimInstance*> OutLinkedInstances;  // 0x8(0x10)

}; 
// Function Engine.KismetSystemLibrary.CapsuleTraceMulti
// Size: 0x88(Inherited: 0x0) 
struct FCapsuleTraceMulti
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	float Radius;  // 0x20(0x4)
	float HalfHeight;  // 0x24(0x4)
	char ETraceTypeQuery TraceChannel;  // 0x28(0x1)
	char pad_41_1 : 7;  // 0x29(0x1)
	bool bTraceComplex : 1;  // 0x29(0x1)
	char pad_42[6];  // 0x2A(0x6)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x30(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)
	struct TArray<struct FHitResult> OutHits;  // 0x48(0x10)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool bIgnoreSelf : 1;  // 0x58(0x1)
	char pad_89[3];  // 0x59(0x3)
	struct FLinearColor TraceColor;  // 0x5C(0x10)
	struct FLinearColor TraceHitColor;  // 0x6C(0x10)
	float DrawTime;  // 0x7C(0x4)
	char pad_128_1 : 7;  // 0x80(0x1)
	bool ReturnValue : 1;  // 0x80(0x1)
	char pad_129[7];  // 0x81(0x7)

}; 
// Function Engine.SkyAtmosphereComponent.GetAtmosphereTransmitanceOnGroundAtPlanetTop
// Size: 0x18(Inherited: 0x0) 
struct FGetAtmosphereTransmitanceOnGroundAtPlanetTop
{
	struct UDirectionalLightComponent* DirectionalLight;  // 0x0(0x8)
	struct FLinearColor ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetSystemLibrary.CapsuleTraceMultiByProfile
// Size: 0x90(Inherited: 0x0) 
struct FCapsuleTraceMultiByProfile
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	float Radius;  // 0x20(0x4)
	float HalfHeight;  // 0x24(0x4)
	struct FName ProfileName;  // 0x28(0x8)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bTraceComplex : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x38(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	struct TArray<struct FHitResult> OutHits;  // 0x50(0x10)
	char pad_96_1 : 7;  // 0x60(0x1)
	bool bIgnoreSelf : 1;  // 0x60(0x1)
	char pad_97[3];  // 0x61(0x3)
	struct FLinearColor TraceColor;  // 0x64(0x10)
	struct FLinearColor TraceHitColor;  // 0x74(0x10)
	float DrawTime;  // 0x84(0x4)
	char pad_136_1 : 7;  // 0x88(0x1)
	bool ReturnValue : 1;  // 0x88(0x1)
	char pad_137[7];  // 0x89(0x7)

}; 
// ScriptStruct Engine.RootMotionSource_ConstantForce
// Size: 0xB0(Inherited: 0xA0) 
struct FRootMotionSource_ConstantForce : public FRootMotionSource
{
	struct FVector force;  // 0x98(0xC)
	struct UCurveFloat* StrengthOverTime;  // 0xA8(0x8)

}; 
// ScriptStruct Engine.SoundWaveEnvelopeTimeData
// Size: 0x8(Inherited: 0x0) 
struct FSoundWaveEnvelopeTimeData
{
	float Amplitude;  // 0x0(0x4)
	float TimeSec;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.WeightedMovingAverage_Float
// Size: 0x10(Inherited: 0x0) 
struct FWeightedMovingAverage_Float
{
	float CurrentSample;  // 0x0(0x4)
	float PreviousSample;  // 0x4(0x4)
	float Weight;  // 0x8(0x4)
	float ReturnValue;  // 0xC(0x4)

}; 
// ScriptStruct Engine.InputAxisConfigEntry
// Size: 0x18(Inherited: 0x0) 
struct FInputAxisConfigEntry
{
	struct FName AxisKeyName;  // 0x0(0x8)
	struct FInputAxisProperties AxisProperties;  // 0x8(0x10)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugPoint
// Size: 0x30(Inherited: 0x0) 
struct FDrawDebugPoint
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector position;  // 0x8(0xC)
	float Size;  // 0x14(0x4)
	struct FLinearColor PointColor;  // 0x18(0x10)
	float Duration;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)

}; 
// Function Engine.KismetSystemLibrary.CapsuleTraceSingle
// Size: 0xF8(Inherited: 0x0) 
struct FCapsuleTraceSingle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	float Radius;  // 0x20(0x4)
	float HalfHeight;  // 0x24(0x4)
	char ETraceTypeQuery TraceChannel;  // 0x28(0x1)
	char pad_41_1 : 7;  // 0x29(0x1)
	bool bTraceComplex : 1;  // 0x29(0x1)
	char pad_42[6];  // 0x2A(0x6)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x30(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)
	struct FHitResult OutHit;  // 0x44(0x88)
	char pad_204_1 : 7;  // 0xCC(0x1)
	bool bIgnoreSelf : 1;  // 0xCC(0x1)
	char pad_205[3];  // 0xCD(0x3)
	struct FLinearColor TraceColor;  // 0xD0(0x10)
	struct FLinearColor TraceHitColor;  // 0xE0(0x10)
	float DrawTime;  // 0xF0(0x4)
	char pad_244_1 : 7;  // 0xF4(0x1)
	bool ReturnValue : 1;  // 0xF4(0x1)
	char pad_245[3];  // 0xF5(0x3)

}; 
// ScriptStruct Engine.CustomDefine
// Size: 0x20(Inherited: 0x0) 
struct FCustomDefine
{
	struct FString DefineName;  // 0x0(0x10)
	struct FString DefineValue;  // 0x10(0x10)

}; 
// Function Engine.PhysicsConstraintComponent.SetLinearBreakable
// Size: 0x8(Inherited: 0x0) 
struct FSetLinearBreakable
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bLinearBreakable : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float LinearBreakThreshold;  // 0x4(0x4)

}; 
// Function Engine.KismetSystemLibrary.Conv_SoftClassReferenceToString
// Size: 0x38(Inherited: 0x0) 
struct FConv_SoftClassReferenceToString
{
	struct TSoftClassPtr<UObject> SoftClassReference;  // 0x0(0x28)
	struct FString ReturnValue;  // 0x28(0x10)

}; 
// ScriptStruct Engine.BaseAttenuationSettings
// Size: 0xB0(Inherited: 0x0) 
struct FBaseAttenuationSettings
{
	char pad_0[8];  // 0x0(0x8)
	uint8_t  DistanceAlgorithm;  // 0x8(0x1)
	char EAttenuationShape AttenuationShape;  // 0x9(0x1)
	char pad_10[2];  // 0xA(0x2)
	float dBAttenuationAtMax;  // 0xC(0x4)
	uint8_t  FalloffMode;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	struct FVector AttenuationShapeExtents;  // 0x14(0xC)
	float ConeOffset;  // 0x20(0x4)
	float FalloffDistance;  // 0x24(0x4)
	struct FRuntimeFloatCurve CustomAttenuationCurve;  // 0x28(0x88)

}; 
// Function Engine.SkeletalMeshComponent.SetTeleportRotationThreshold
// Size: 0x4(Inherited: 0x0) 
struct FSetTeleportRotationThreshold
{
	float Threshold;  // 0x0(0x4)

}; 
// Function Engine.KismetRenderingLibrary.BreakSkinWeightInfo
// Size: 0x5C(Inherited: 0x0) 
struct FBreakSkinWeightInfo
{
	struct FSkelMeshSkinWeightInfo InWeight;  // 0x0(0x3C)
	int32_t Bone0;  // 0x3C(0x4)
	char Weight0;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)
	int32_t Bone1;  // 0x44(0x4)
	char Weight1;  // 0x48(0x1)
	char pad_73[3];  // 0x49(0x3)
	int32_t Bone2;  // 0x4C(0x4)
	char Weight2;  // 0x50(0x1)
	char pad_81[3];  // 0x51(0x3)
	int32_t Bone3;  // 0x54(0x4)
	char Weight3;  // 0x58(0x1)
	char pad_89[3];  // 0x59(0x3)

}; 
// Function Engine.KismetSystemLibrary.CapsuleTraceSingleByProfile
// Size: 0x100(Inherited: 0x0) 
struct FCapsuleTraceSingleByProfile
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	float Radius;  // 0x20(0x4)
	float HalfHeight;  // 0x24(0x4)
	struct FName ProfileName;  // 0x28(0x8)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bTraceComplex : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x38(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x48(0x1)
	char pad_73[3];  // 0x49(0x3)
	struct FHitResult OutHit;  // 0x4C(0x88)
	char pad_212_1 : 7;  // 0xD4(0x1)
	bool bIgnoreSelf : 1;  // 0xD4(0x1)
	char pad_213[3];  // 0xD5(0x3)
	struct FLinearColor TraceColor;  // 0xD8(0x10)
	struct FLinearColor TraceHitColor;  // 0xE8(0x10)
	float DrawTime;  // 0xF8(0x4)
	char pad_252_1 : 7;  // 0xFC(0x1)
	bool ReturnValue : 1;  // 0xFC(0x1)
	char pad_253[3];  // 0xFD(0x3)

}; 
// Function Engine.Actor.K2_OnBecomeViewTarget
// Size: 0x8(Inherited: 0x0) 
struct FK2_OnBecomeViewTarget
{
	struct APlayerController* PC;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.ComponentOverlapActors
// Size: 0x80(Inherited: 0x0) 
struct FComponentOverlapActors
{
	struct UPrimitiveComponent* Component;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FTransform ComponentTransform;  // 0x10(0x30)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x40(0x10)
	UObject* ActorClassFilter;  // 0x50(0x8)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x58(0x10)
	struct TArray<struct AActor*> OutActors;  // 0x68(0x10)
	char pad_120_1 : 7;  // 0x78(0x1)
	bool ReturnValue : 1;  // 0x78(0x1)
	char pad_121[7];  // 0x79(0x7)

}; 
// Function Engine.KismetMathLibrary.GetTotalDays
// Size: 0x10(Inherited: 0x0) 
struct FGetTotalDays
{
	struct FTimespan A;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.SceneComponent.OnRep_Visibility
// Size: 0x1(Inherited: 0x0) 
struct FOnRep_Visibility
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool oldValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PlayerController.PlayDynamicForceFeedback
// Size: 0x28(Inherited: 0x0) 
struct FPlayDynamicForceFeedback
{
	float Intensity;  // 0x0(0x4)
	float Duration;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bAffectsLeftLarge : 1;  // 0x8(0x1)
	char pad_9_1 : 7;  // 0x9(0x1)
	bool bAffectsLeftSmall : 1;  // 0x9(0x1)
	char pad_10_1 : 7;  // 0xA(0x1)
	bool bAffectsRightLarge : 1;  // 0xA(0x1)
	char pad_11_1 : 7;  // 0xB(0x1)
	bool bAffectsRightSmall : 1;  // 0xB(0x1)
	char EDynamicForceFeedbackAction Action;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FLatentActionInfo LatentInfo;  // 0x10(0x18)

}; 
// Function Engine.PhysicsConstraintComponent.SetAngularVelocityDrive
// Size: 0x2(Inherited: 0x0) 
struct FSetAngularVelocityDrive
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnableSwingDrive : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bEnableTwistDrive : 1;  // 0x1(0x1)

}; 
// Function Engine.ImportanceSamplingLibrary.MakeImportanceTexture
// Size: 0x60(Inherited: 0x0) 
struct FMakeImportanceTexture
{
	struct UTexture2D* Texture;  // 0x0(0x8)
	char EImportanceWeight WeightingFunc;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)
	struct FImportanceTexture ReturnValue;  // 0x10(0x50)

}; 
// Function Engine.KismetMathLibrary.GetRightVector
// Size: 0x18(Inherited: 0x0) 
struct FGetRightVector
{
	struct FRotator InRot;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.CharacterMovementComponent.SetGroupsToIgnoreMask
// Size: 0x4(Inherited: 0x0) 
struct FSetGroupsToIgnoreMask
{
	struct FNavAvoidanceMask GroupMask;  // 0x0(0x4)

}; 
// Function Engine.SkeletalMeshComponent.GetAnimationMode
// Size: 0x1(Inherited: 0x0) 
struct FGetAnimationMode
{
	char EAnimationMode ReturnValue;  // 0x0(0x1)

}; 
// Function Engine.KismetSystemLibrary.Conv_ClassToSoftClassReference
// Size: 0x30(Inherited: 0x0) 
struct FConv_ClassToSoftClassReference
{
	UObject* Class;  // 0x0(0x8)
	struct TSoftClassPtr<UObject> ReturnValue;  // 0x8(0x28)

}; 
// Function Engine.KismetMathLibrary.Vector_One
// Size: 0xC(Inherited: 0x0) 
struct FVector_One
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.PrimitiveComponent.CopyArrayOfMoveIgnoreActors
// Size: 0x10(Inherited: 0x0) 
struct FCopyArrayOfMoveIgnoreActors
{
	struct TArray<struct AActor*> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.PlayerController.ClientStopCameraShake
// Size: 0x10(Inherited: 0x0) 
struct FClientStopCameraShake
{
	UCameraShakeBase* Shake;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bImmediately : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetSystemLibrary.GetCurrentBundleState
// Size: 0x30(Inherited: 0x0) 
struct FGetCurrentBundleState
{
	struct FPrimaryAssetId PrimaryAssetId;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bForceCurrentState : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)
	struct TArray<struct FName> OutBundles;  // 0x18(0x10)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool ReturnValue : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// Function Engine.KismetSystemLibrary.Conv_InterfaceToObject
// Size: 0x18(Inherited: 0x0) 
struct FConv_InterfaceToObject
{
	struct TScriptInterface<IInterface> Interface;  // 0x0(0x10)
	struct UObject* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.StaticMeshActor.SetMobility
// Size: 0x1(Inherited: 0x0) 
struct FSetMobility
{
	char EComponentMobility InMobility;  // 0x0(0x1)

}; 
// Function Engine.KismetSystemLibrary.Conv_ObjectToSoftObjectReference
// Size: 0x30(Inherited: 0x0) 
struct FConv_ObjectToSoftObjectReference
{
	struct UObject* Object;  // 0x0(0x8)
	struct TSoftObjectPtr<UObject> ReturnValue;  // 0x8(0x28)

}; 
// Function Engine.CheatManager.Slomo
// Size: 0x4(Inherited: 0x0) 
struct FSlomo
{
	float NewTimeDilation;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.Conv_PrimaryAssetIdToString
// Size: 0x20(Inherited: 0x0) 
struct FConv_PrimaryAssetIdToString
{
	struct FPrimaryAssetId PrimaryAssetId;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// DelegateFunction Engine.ParticleCollisionSignature__DelegateSignature
// Size: 0x50(Inherited: 0x0) 
struct FParticleCollisionSignature__DelegateSignature
{
	struct FName EventName;  // 0x0(0x8)
	float EmitterTime;  // 0x8(0x4)
	int32_t ParticleTime;  // 0xC(0x4)
	struct FVector Location;  // 0x10(0xC)
	struct FVector Velocity;  // 0x1C(0xC)
	struct FVector Direction;  // 0x28(0xC)
	struct FVector Normal;  // 0x34(0xC)
	struct FName BoneName;  // 0x40(0x8)
	struct UPhysicalMaterial* PhysMat;  // 0x48(0x8)

}; 
// Function Engine.SplineComponent.GetTangentAtDistanceAlongSpline
// Size: 0x14(Inherited: 0x0) 
struct FGetTangentAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.AudioComponent.SetSourceBusSendPreEffect
// Size: 0x10(Inherited: 0x0) 
struct FSetSourceBusSendPreEffect
{
	struct USoundSourceBus* SoundSourceBus;  // 0x0(0x8)
	float SourceBusSendLevel;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetSystemLibrary.Conv_PrimaryAssetTypeToString
// Size: 0x18(Inherited: 0x0) 
struct FConv_PrimaryAssetTypeToString
{
	struct FPrimaryAssetType PrimaryAssetType;  // 0x0(0x8)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// ScriptStruct Engine.SoundTrackKey
// Size: 0x18(Inherited: 0x0) 
struct FSoundTrackKey
{
	float Time;  // 0x0(0x4)
	float Volume;  // 0x4(0x4)
	float Pitch;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct USoundBase* Sound;  // 0x10(0x8)

}; 
// Function Engine.Actor.K2_SetActorRelativeLocation
// Size: 0x9C(Inherited: 0x0) 
struct FK2_SetActorRelativeLocation
{
	struct FVector NewRelativeLocation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// Function Engine.KismetMathLibrary.TimespanZeroValue
// Size: 0x8(Inherited: 0x0) 
struct FTimespanZeroValue
{
	struct FTimespan ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.BoxComponent.GetUnscaledBoxExtent
// Size: 0xC(Inherited: 0x0) 
struct FGetUnscaledBoxExtent
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetSystemLibrary.Conv_SoftClassPathToSoftClassRef
// Size: 0x40(Inherited: 0x0) 
struct FConv_SoftClassPathToSoftClassRef
{
	struct FSoftClassPath SoftClassPath;  // 0x0(0x18)
	struct TSoftClassPtr<UObject> ReturnValue;  // 0x18(0x28)

}; 
// Function Engine.KismetSystemLibrary.Conv_SoftClassReferenceToClass
// Size: 0x30(Inherited: 0x0) 
struct FConv_SoftClassReferenceToClass
{
	struct TSoftClassPtr<UObject> SoftClass;  // 0x0(0x28)
	UObject* ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.KismetMathLibrary.LinearColor_SetFromPow22
// Size: 0x14(Inherited: 0x0) 
struct FLinearColor_SetFromPow22
{
	struct FLinearColor InOutColor;  // 0x0(0x10)
	struct FColor InColor;  // 0x10(0x4)

}; 
// ScriptStruct Engine.KConvexElem
// Size: 0xB0(Inherited: 0x30) 
struct FKConvexElem : public FKShapeElem
{
	struct TArray<struct FVector> VertexData;  // 0x30(0x10)
	struct TArray<int32_t> IndexData;  // 0x40(0x10)
	struct FBox ElemBox;  // 0x50(0x1C)
	char pad_108[4];  // 0x6C(0x4)
	struct FTransform Transform;  // 0x70(0x30)
	char pad_160[16];  // 0xA0(0x10)

}; 
// Function Engine.KismetSystemLibrary.GetClassDisplayName
// Size: 0x18(Inherited: 0x0) 
struct FGetClassDisplayName
{
	UObject* Class;  // 0x0(0x8)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetSystemLibrary.Conv_SoftObjectReferenceToObject
// Size: 0x30(Inherited: 0x0) 
struct FConv_SoftObjectReferenceToObject
{
	struct TSoftObjectPtr<UObject> SoftObject;  // 0x0(0x28)
	struct UObject* ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.KismetSystemLibrary.K2_TimerExists
// Size: 0x20(Inherited: 0x0) 
struct FK2_TimerExists
{
	struct UObject* Object;  // 0x0(0x8)
	struct FString FunctionName;  // 0x8(0x10)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetSystemLibrary.GetConsoleVariableIntValue
// Size: 0x18(Inherited: 0x0) 
struct FGetConsoleVariableIntValue
{
	struct FString VariableName;  // 0x0(0x10)
	int32_t ReturnValue;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.KismetMathLibrary.DotProduct2D
// Size: 0x14(Inherited: 0x0) 
struct FDotProduct2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D B;  // 0x8(0x8)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.KismetSystemLibrary.Conv_SoftObjPathToSoftObjRef
// Size: 0x40(Inherited: 0x0) 
struct FConv_SoftObjPathToSoftObjRef
{
	struct FSoftObjectPath SoftObjectPath;  // 0x0(0x18)
	struct TSoftObjectPtr<UObject> ReturnValue;  // 0x18(0x28)

}; 
// Function Engine.SkinnedMeshComponent.HideBoneByName
// Size: 0xC(Inherited: 0x0) 
struct FHideBoneByName
{
	struct FName BoneName;  // 0x0(0x8)
	char EPhysBodyOp PhysBodyOption;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetMathLibrary.Matrix_ApplyScale
// Size: 0x90(Inherited: 0x0) 
struct FMatrix_ApplyScale
{
	struct FMatrix M;  // 0x0(0x40)
	float Scale;  // 0x40(0x4)
	char pad_68[12];  // 0x44(0xC)
	struct FMatrix ReturnValue;  // 0x50(0x40)

}; 
// Function Engine.AnimInstance.GetInstanceTransitionCrossfadeDuration
// Size: 0xC(Inherited: 0x0) 
struct FGetInstanceTransitionCrossfadeDuration
{
	int32_t MachineIndex;  // 0x0(0x4)
	int32_t TransitionIndex;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.PrimitiveComponent.GetClosestPointOnCollision
// Size: 0x24(Inherited: 0x0) 
struct FGetClosestPointOnCollision
{
	struct FVector Point;  // 0x0(0xC)
	struct FVector OutPointOnBody;  // 0xC(0xC)
	struct FName BoneName;  // 0x18(0x8)
	float ReturnValue;  // 0x20(0x4)

}; 
// Function Engine.PlayerController.ClientRepObjRef
// Size: 0x8(Inherited: 0x0) 
struct FClientRepObjRef
{
	struct UObject* Object;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.ConvertToAbsolutePath
// Size: 0x20(Inherited: 0x0) 
struct FConvertToAbsolutePath
{
	struct FString Filename;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.Pawn.ConsumeMovementInputVector
// Size: 0xC(Inherited: 0x0) 
struct FConsumeMovementInputVector
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.VolumetricCloudComponent.SetReflectionSampleCountScale
// Size: 0x4(Inherited: 0x0) 
struct FSetReflectionSampleCountScale
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.CreateCopyForUndoBuffer
// Size: 0x8(Inherited: 0x0) 
struct FCreateCopyForUndoBuffer
{
	struct UObject* ObjectToModify;  // 0x0(0x8)

}; 
// Function Engine.CharacterMovementComponent.K2_GetWalkableFloorAngle
// Size: 0x4(Inherited: 0x0) 
struct FK2_GetWalkableFloorAngle
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTimeHandle
// Size: 0x18(Inherited: 0x0) 
struct FK2_GetTimerElapsedTimeHandle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FTimerHandle Handle;  // 0x8(0x8)
	float ReturnValue;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.KismetSystemLibrary.GetActorListFromComponentList
// Size: 0x28(Inherited: 0x0) 
struct FGetActorListFromComponentList
{
	struct TArray<struct UPrimitiveComponent*> ComponentList;  // 0x0(0x10)
	UObject* ActorClassFilter;  // 0x10(0x8)
	struct TArray<struct AActor*> OutActorList;  // 0x18(0x10)

}; 
// Function Engine.KismetSystemLibrary.Delay
// Size: 0x28(Inherited: 0x0) 
struct FDelay
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float Duration;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct FLatentActionInfo LatentInfo;  // 0x10(0x18)

}; 
// Function Engine.KismetSystemLibrary.SphereTraceMultiByProfile
// Size: 0x88(Inherited: 0x0) 
struct FSphereTraceMultiByProfile
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	float Radius;  // 0x20(0x4)
	struct FName ProfileName;  // 0x24(0x8)
	char pad_44_1 : 7;  // 0x2C(0x1)
	bool bTraceComplex : 1;  // 0x2C(0x1)
	char pad_45[3];  // 0x2D(0x3)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x30(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)
	struct TArray<struct FHitResult> OutHits;  // 0x48(0x10)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool bIgnoreSelf : 1;  // 0x58(0x1)
	char pad_89[3];  // 0x59(0x3)
	struct FLinearColor TraceColor;  // 0x5C(0x10)
	struct FLinearColor TraceHitColor;  // 0x6C(0x10)
	float DrawTime;  // 0x7C(0x4)
	char pad_128_1 : 7;  // 0x80(0x1)
	bool ReturnValue : 1;  // 0x80(0x1)
	char pad_129[7];  // 0x81(0x7)

}; 
// Function Engine.GameplayStatics.GetActorOfClass
// Size: 0x18(Inherited: 0x0) 
struct FGetActorOfClass
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	AActor* ActorClass;  // 0x8(0x8)
	struct AActor* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.AtmosphericFogComponent.SetDistanceOffset
// Size: 0x4(Inherited: 0x0) 
struct FSetDistanceOffset
{
	float NewDistanceOffset;  // 0x0(0x4)

}; 
// ScriptStruct Engine.FastArraySerializerItem
// Size: 0xC(Inherited: 0x0) 
struct FFastArraySerializerItem
{
	int32_t ReplicationID;  // 0x0(0x4)
	int32_t ReplicationKey;  // 0x4(0x4)
	int32_t MostRecentArrayReplicationKey;  // 0x8(0x4)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugArrow
// Size: 0x40(Inherited: 0x0) 
struct FDrawDebugArrow
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector LineStart;  // 0x8(0xC)
	struct FVector LineEnd;  // 0x14(0xC)
	float ArrowSize;  // 0x20(0x4)
	struct FLinearColor LineColor;  // 0x24(0x10)
	float Duration;  // 0x34(0x4)
	float Thickness;  // 0x38(0x4)
	char pad_60[4];  // 0x3C(0x4)

}; 
// Function Engine.GameplayStatics.PlayDialogue2D
// Size: 0x38(Inherited: 0x0) 
struct FPlayDialogue2D
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UDialogueWave* Dialogue;  // 0x8(0x8)
	struct FDialogueContext Context;  // 0x10(0x18)
	float VolumeMultiplier;  // 0x28(0x4)
	float PitchMultiplier;  // 0x2C(0x4)
	float StartTime;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)

}; 
// Function Engine.PlayerController.ServerExec
// Size: 0x10(Inherited: 0x0) 
struct FServerExec
{
	struct FString Msg;  // 0x0(0x10)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugCamera
// Size: 0x20(Inherited: 0x0) 
struct FDrawDebugCamera
{
	struct ACameraActor* CameraActor;  // 0x0(0x8)
	struct FLinearColor CameraColor;  // 0x8(0x10)
	float Duration;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.InstancedStaticMeshComponent.UpdateInstanceTransform
// Size: 0x50(Inherited: 0x0) 
struct FUpdateInstanceTransform
{
	int32_t InstanceIndex;  // 0x0(0x4)
	char pad_4[12];  // 0x4(0xC)
	struct FTransform NewInstanceTransform;  // 0x10(0x30)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool bWorldSpace : 1;  // 0x40(0x1)
	char pad_65_1 : 7;  // 0x41(0x1)
	bool bMarkRenderStateDirty : 1;  // 0x41(0x1)
	char pad_66_1 : 7;  // 0x42(0x1)
	bool bTeleport : 1;  // 0x42(0x1)
	char pad_67_1 : 7;  // 0x43(0x1)
	bool ReturnValue : 1;  // 0x43(0x1)
	char pad_68[12];  // 0x44(0xC)

}; 
// ScriptStruct Engine.KTaperedCapsuleElem
// Size: 0x58(Inherited: 0x30) 
struct FKTaperedCapsuleElem : public FKShapeElem
{
	struct FVector Center;  // 0x30(0xC)
	struct FRotator Rotation;  // 0x3C(0xC)
	float Radius0;  // 0x48(0x4)
	float Radius1;  // 0x4C(0x4)
	float Length;  // 0x50(0x4)
	char pad_84[4];  // 0x54(0x4)

}; 
// Function Engine.GameUserSettings.GetResolutionScaleInformation
// Size: 0x10(Inherited: 0x0) 
struct FGetResolutionScaleInformation
{
	float CurrentScaleNormalized;  // 0x0(0x4)
	int32_t CurrentScaleValue;  // 0x4(0x4)
	int32_t MinScaleValue;  // 0x8(0x4)
	int32_t MaxScaleValue;  // 0xC(0x4)

}; 
// Function Engine.HUD.ReceiveHitBoxEndCursorOver
// Size: 0x8(Inherited: 0x0) 
struct FReceiveHitBoxEndCursorOver
{
	struct FName BoxName;  // 0x0(0x8)

}; 
// ScriptStruct Engine.RealCurve
// Size: 0x70(Inherited: 0x68) 
struct FRealCurve : public FIndexedCurve
{
	float DefaultValue;  // 0x68(0x4)
	char ERichCurveExtrapolation PreInfinityExtrap;  // 0x6C(0x1)
	char ERichCurveExtrapolation PostInfinityExtrap;  // 0x6D(0x1)
	char pad_110[2];  // 0x6E(0x2)

}; 
// ScriptStruct Engine.RootMotionSourceGroup
// Size: 0x38(Inherited: 0x0) 
struct FRootMotionSourceGroup
{
	char pad_0[40];  // 0x0(0x28)
	char bHasAdditiveSources : 1;  // 0x28(0x1)
	char bHasOverrideSources : 1;  // 0x28(0x1)
	char bHasOverrideSourcesWithIgnoreZAccumulate : 1;  // 0x28(0x1)
	char bIsAdditiveVelocityApplied : 1;  // 0x28(0x1)
	char pad_40_1 : 4;  // 0x28(0x1)
	struct FRootMotionSourceSettings LastAccumulatedSettings;  // 0x29(0x1)
	char pad_42[2];  // 0x2A(0x2)
	struct FVector_NetQuantize10 LastPreAdditiveVelocity;  // 0x2C(0xC)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugCapsule
// Size: 0x40(Inherited: 0x0) 
struct FDrawDebugCapsule
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Center;  // 0x8(0xC)
	float HalfHeight;  // 0x14(0x4)
	float Radius;  // 0x18(0x4)
	struct FRotator Rotation;  // 0x1C(0xC)
	struct FLinearColor LineColor;  // 0x28(0x10)
	float Duration;  // 0x38(0x4)
	float Thickness;  // 0x3C(0x4)

}; 
// Function Engine.SplineComponent.GetRotationAtTime
// Size: 0x14(Inherited: 0x0) 
struct FGetRotationAtTime
{
	float Time;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bUseConstantVelocity : 1;  // 0x5(0x1)
	char pad_6[2];  // 0x6(0x2)
	struct FRotator ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.AmbientSound.FadeOut
// Size: 0x8(Inherited: 0x0) 
struct FFadeOut
{
	float FadeOutDuration;  // 0x0(0x4)
	float FadeVolumeLevel;  // 0x4(0x4)

}; 
// Function Engine.CameraComponent.SetPostProcessBlendWeight
// Size: 0x4(Inherited: 0x0) 
struct FSetPostProcessBlendWeight
{
	float InPostProcessBlendWeight;  // 0x0(0x4)

}; 
// Function Engine.PlayerState.GetPlayerName
// Size: 0x10(Inherited: 0x0) 
struct FGetPlayerName
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetSystemLibrary.SphereTraceSingle
// Size: 0xF0(Inherited: 0x0) 
struct FSphereTraceSingle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	float Radius;  // 0x20(0x4)
	char ETraceTypeQuery TraceChannel;  // 0x24(0x1)
	char pad_37_1 : 7;  // 0x25(0x1)
	bool bTraceComplex : 1;  // 0x25(0x1)
	char pad_38[2];  // 0x26(0x2)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x28(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x38(0x1)
	char pad_57[3];  // 0x39(0x3)
	struct FHitResult OutHit;  // 0x3C(0x88)
	char pad_196_1 : 7;  // 0xC4(0x1)
	bool bIgnoreSelf : 1;  // 0xC4(0x1)
	char pad_197[3];  // 0xC5(0x3)
	struct FLinearColor TraceColor;  // 0xC8(0x10)
	struct FLinearColor TraceHitColor;  // 0xD8(0x10)
	float DrawTime;  // 0xE8(0x4)
	char pad_236_1 : 7;  // 0xEC(0x1)
	bool ReturnValue : 1;  // 0xEC(0x1)
	char pad_237[3];  // 0xED(0x3)

}; 
// Function Engine.KismetMathLibrary.SelectRotator
// Size: 0x28(Inherited: 0x0) 
struct FSelectRotator
{
	struct FRotator A;  // 0x0(0xC)
	struct FRotator B;  // 0xC(0xC)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bPickA : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)
	struct FRotator ReturnValue;  // 0x1C(0xC)

}; 
// Function Engine.KismetMathLibrary.Quat_Size
// Size: 0x20(Inherited: 0x0) 
struct FQuat_Size
{
	struct FQuat Q;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)
	char pad_20[12];  // 0x14(0xC)

}; 
// Function Engine.KismetMathLibrary.Conv_IntToFloat
// Size: 0x8(Inherited: 0x0) 
struct FConv_IntToFloat
{
	int32_t inInt;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.Pawn.GetNavAgentLocation
// Size: 0xC(Inherited: 0x0) 
struct FGetNavAgentLocation
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugCircle
// Size: 0x50(Inherited: 0x0) 
struct FDrawDebugCircle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Center;  // 0x8(0xC)
	float Radius;  // 0x14(0x4)
	int32_t NumSegments;  // 0x18(0x4)
	struct FLinearColor LineColor;  // 0x1C(0x10)
	float Duration;  // 0x2C(0x4)
	float Thickness;  // 0x30(0x4)
	struct FVector YAxis;  // 0x34(0xC)
	struct FVector ZAxis;  // 0x40(0xC)
	char pad_76_1 : 7;  // 0x4C(0x1)
	bool bDrawAxis : 1;  // 0x4C(0x1)
	char pad_77[3];  // 0x4D(0x3)

}; 
// ScriptStruct Engine.SkeletonToMeshLinkup
// Size: 0x20(Inherited: 0x0) 
struct FSkeletonToMeshLinkup
{
	struct TArray<int32_t> SkeletonToMeshTable;  // 0x0(0x10)
	struct TArray<int32_t> MeshToSkeletonTable;  // 0x10(0x10)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugConeInDegrees
// Size: 0x48(Inherited: 0x0) 
struct FDrawDebugConeInDegrees
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Origin;  // 0x8(0xC)
	struct FVector Direction;  // 0x14(0xC)
	float Length;  // 0x20(0x4)
	float AngleWidth;  // 0x24(0x4)
	float AngleHeight;  // 0x28(0x4)
	int32_t NumSides;  // 0x2C(0x4)
	struct FLinearColor LineColor;  // 0x30(0x10)
	float Duration;  // 0x40(0x4)
	float Thickness;  // 0x44(0x4)

}; 
// Function Engine.KismetSystemLibrary.SetStructurePropertyByName
// Size: 0x18(Inherited: 0x0) 
struct FSetStructurePropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct FGenericStruct Value;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.MatineeActor.EnableGroupByName
// Size: 0x18(Inherited: 0x0) 
struct FEnableGroupByName
{
	struct FString GroupName;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bEnable : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetMathLibrary.TimespanMaxValue
// Size: 0x8(Inherited: 0x0) 
struct FTimespanMaxValue
{
	struct FTimespan ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.GetUniqueDeviceId
// Size: 0x10(Inherited: 0x0) 
struct FGetUniqueDeviceId
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.Actor.ReceiveHit
// Size: 0xC8(Inherited: 0x0) 
struct FReceiveHit
{
	struct UPrimitiveComponent* MyComp;  // 0x0(0x8)
	struct AActor* Other;  // 0x8(0x8)
	struct UPrimitiveComponent* OtherComp;  // 0x10(0x8)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bSelfMoved : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)
	struct FVector HitLocation;  // 0x1C(0xC)
	struct FVector HitNormal;  // 0x28(0xC)
	struct FVector NormalImpulse;  // 0x34(0xC)
	struct FHitResult Hit;  // 0x40(0x88)

}; 
// Function Engine.KismetMathLibrary.DegSin
// Size: 0x8(Inherited: 0x0) 
struct FDegSin
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.Conv_BoolToByte
// Size: 0x2(Inherited: 0x0) 
struct FConv_BoolToByte
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool InBool : 1;  // 0x0(0x1)
	char ReturnValue;  // 0x1(0x1)

}; 
// Function Engine.KismetSystemLibrary.IsControllerAssignedToGamepad
// Size: 0x8(Inherited: 0x0) 
struct FIsControllerAssignedToGamepad
{
	int32_t ControllerId;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool ReturnValue : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.PlayerController.GetMousePosition
// Size: 0xC(Inherited: 0x0) 
struct FGetMousePosition
{
	float LocationX;  // 0x0(0x4)
	float LocationY;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetMathLibrary.Divide_ByteByte
// Size: 0x3(Inherited: 0x0) 
struct FDivide_ByteByte
{
	char A;  // 0x0(0x1)
	char B;  // 0x1(0x1)
	char ReturnValue;  // 0x2(0x1)

}; 
// Function Engine.KismetSystemLibrary.K2_TimerExistsDelegate
// Size: 0x14(Inherited: 0x0) 
struct FK2_TimerExistsDelegate
{
	struct FDelegate Delegate;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.Light.SetLightFunctionScale
// Size: 0xC(Inherited: 0x0) 
struct FSetLightFunctionScale
{
	struct FVector NewLightFunctionScale;  // 0x0(0xC)

}; 
// Function Engine.BlueprintMapLibrary.Map_Find
// Size: 0x60(Inherited: 0x0) 
struct FMap_Find
{
	struct TMap<int32_t, int32_t> TargetMap;  // 0x0(0x50)
	int32_t Key;  // 0x50(0x4)
	int32_t Value;  // 0x54(0x4)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool ReturnValue : 1;  // 0x58(0x1)
	char pad_89[7];  // 0x59(0x7)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugCoordinateSystem
// Size: 0x30(Inherited: 0x0) 
struct FDrawDebugCoordinateSystem
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector AxisLoc;  // 0x8(0xC)
	struct FRotator AxisRot;  // 0x14(0xC)
	float Scale;  // 0x20(0x4)
	float Duration;  // 0x24(0x4)
	float Thickness;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)

}; 
// ScriptStruct Engine.GaussianSumBloomSettings
// Size: 0x84(Inherited: 0x0) 
struct FGaussianSumBloomSettings
{
	float Intensity;  // 0x0(0x4)
	float Threshold;  // 0x4(0x4)
	float SizeScale;  // 0x8(0x4)
	float Filter1Size;  // 0xC(0x4)
	float Filter2Size;  // 0x10(0x4)
	float Filter3Size;  // 0x14(0x4)
	float Filter4Size;  // 0x18(0x4)
	float Filter5Size;  // 0x1C(0x4)
	float Filter6Size;  // 0x20(0x4)
	struct FLinearColor Filter1Tint;  // 0x24(0x10)
	struct FLinearColor Filter2Tint;  // 0x34(0x10)
	struct FLinearColor Filter3Tint;  // 0x44(0x10)
	struct FLinearColor Filter4Tint;  // 0x54(0x10)
	struct FLinearColor Filter5Tint;  // 0x64(0x10)
	struct FLinearColor Filter6Tint;  // 0x74(0x10)

}; 
// Function Engine.KismetMathLibrary.Cos
// Size: 0x8(Inherited: 0x0) 
struct FCos
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.HUD.AddDebugText
// Size: 0x50(Inherited: 0x0) 
struct FAddDebugText
{
	struct FString DebugText;  // 0x0(0x10)
	struct AActor* SrcActor;  // 0x10(0x8)
	float Duration;  // 0x18(0x4)
	struct FVector Offset;  // 0x1C(0xC)
	struct FVector DesiredOffset;  // 0x28(0xC)
	struct FColor TextColor;  // 0x34(0x4)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool bSkipOverwriteCheck : 1;  // 0x38(0x1)
	char pad_57_1 : 7;  // 0x39(0x1)
	bool bAbsoluteLocation : 1;  // 0x39(0x1)
	char pad_58_1 : 7;  // 0x3A(0x1)
	bool bKeepAttachedToActor : 1;  // 0x3A(0x1)
	char pad_59[5];  // 0x3B(0x5)
	struct UFont* InFont;  // 0x40(0x8)
	float FontScale;  // 0x48(0x4)
	char pad_76_1 : 7;  // 0x4C(0x1)
	bool bDrawShadow : 1;  // 0x4C(0x1)
	char pad_77[3];  // 0x4D(0x3)

}; 
// Function Engine.PhysicsConstraintComponent.SetAngularVelocityDriveSLERP
// Size: 0x1(Inherited: 0x0) 
struct FSetAngularVelocityDriveSLERP
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnableSLERP : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.Conv_Int64ToByte
// Size: 0x10(Inherited: 0x0) 
struct FConv_Int64ToByte
{
	int64_t inInt;  // 0x0(0x8)
	char ReturnValue;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugCylinder
// Size: 0x40(Inherited: 0x0) 
struct FDrawDebugCylinder
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	float Radius;  // 0x20(0x4)
	int32_t Segments;  // 0x24(0x4)
	struct FLinearColor LineColor;  // 0x28(0x10)
	float Duration;  // 0x38(0x4)
	float Thickness;  // 0x3C(0x4)

}; 
// Function Engine.SkinnedMeshComponent.SetCapsuleIndirectShadowMinVisibility
// Size: 0x4(Inherited: 0x0) 
struct FSetCapsuleIndirectShadowMinVisibility
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.PlayerCameraManager.StopAllInstancesOfCameraAnim
// Size: 0x10(Inherited: 0x0) 
struct FStopAllInstancesOfCameraAnim
{
	struct UCameraAnim* Anim;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bImmediate : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetSystemLibrary.GetProjectDirectory
// Size: 0x10(Inherited: 0x0) 
struct FGetProjectDirectory
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.LessEqual_Int64Int64
// Size: 0x18(Inherited: 0x0) 
struct FLessEqual_Int64Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.PrimitiveComponent.SetNotifyRigidBodyCollision
// Size: 0x1(Inherited: 0x0) 
struct FSetNotifyRigidBodyCollision
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewNotifyRigidBodyCollision : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.K2_IsPhysicsCollisionEnabled
// Size: 0x1(Inherited: 0x0) 
struct FK2_IsPhysicsCollisionEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugFloatHistoryLocation
// Size: 0x50(Inherited: 0x0) 
struct FDrawDebugFloatHistoryLocation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FDebugFloatHistory FloatHistory;  // 0x8(0x20)
	struct FVector DrawLocation;  // 0x28(0xC)
	struct FVector2D DrawSize;  // 0x34(0x8)
	struct FLinearColor DrawColor;  // 0x3C(0x10)
	float Duration;  // 0x4C(0x4)

}; 
// ScriptStruct Engine.TexturePlatformData
// Size: 0x30(Inherited: 0x0) 
struct FTexturePlatformData
{
	char pad_0[48];  // 0x0(0x30)

}; 
// Function Engine.PawnMovementComponent.ConsumeInputVector
// Size: 0xC(Inherited: 0x0) 
struct FConsumeInputVector
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugFloatHistoryTransform
// Size: 0x80(Inherited: 0x0) 
struct FDrawDebugFloatHistoryTransform
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FDebugFloatHistory FloatHistory;  // 0x8(0x20)
	char pad_40[8];  // 0x28(0x8)
	struct FTransform DrawTransform;  // 0x30(0x30)
	struct FVector2D DrawSize;  // 0x60(0x8)
	struct FLinearColor DrawColor;  // 0x68(0x10)
	float Duration;  // 0x78(0x4)
	char pad_124[4];  // 0x7C(0x4)

}; 
// Function Engine.KismetTextLibrary.Conv_ByteToText
// Size: 0x20(Inherited: 0x0) 
struct FConv_ByteToText
{
	char Value;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct FText ReturnValue;  // 0x8(0x18)

}; 
// DelegateFunction Engine.ParticleDeathSignature__DelegateSignature
// Size: 0x34(Inherited: 0x0) 
struct FParticleDeathSignature__DelegateSignature
{
	struct FName EventName;  // 0x0(0x8)
	float EmitterTime;  // 0x8(0x4)
	int32_t ParticleTime;  // 0xC(0x4)
	struct FVector Location;  // 0x10(0xC)
	struct FVector Velocity;  // 0x1C(0xC)
	struct FVector Direction;  // 0x28(0xC)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugFrustum
// Size: 0x60(Inherited: 0x0) 
struct FDrawDebugFrustum
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FTransform FrustumTransform;  // 0x10(0x30)
	struct FLinearColor FrustumColor;  // 0x40(0x10)
	float Duration;  // 0x50(0x4)
	float Thickness;  // 0x54(0x4)
	char pad_88[8];  // 0x58(0x8)

}; 
// ScriptStruct Engine.RawCurveTracks
// Size: 0x10(Inherited: 0x0) 
struct FRawCurveTracks
{
	struct TArray<struct FFloatCurve> FloatCurves;  // 0x0(0x10)

}; 
// Function Engine.PrimitiveComponent.AddAngularImpulseInRadians
// Size: 0x18(Inherited: 0x0) 
struct FAddAngularImpulseInRadians
{
	struct FVector Impulse;  // 0x0(0xC)
	struct FName BoneName;  // 0xC(0x8)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bVelChange : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.KismetMathLibrary.Vector_ComponentMax
// Size: 0x24(Inherited: 0x0) 
struct FVector_ComponentMax
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugPlane
// Size: 0x50(Inherited: 0x0) 
struct FDrawDebugPlane
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FPlane PlaneCoordinates;  // 0x10(0x10)
	struct FVector Location;  // 0x20(0xC)
	float Size;  // 0x2C(0x4)
	struct FLinearColor PlaneColor;  // 0x30(0x10)
	float Duration;  // 0x40(0x4)
	char pad_68[12];  // 0x44(0xC)

}; 
// Function Engine.Controller.SetIgnoreMoveInput
// Size: 0x1(Inherited: 0x0) 
struct FSetIgnoreMoveInput
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewMoveInput : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.MakeRotFromXY
// Size: 0x24(Inherited: 0x0) 
struct FMakeRotFromXY
{
	struct FVector X;  // 0x0(0xC)
	struct FVector Y;  // 0xC(0xC)
	struct FRotator ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetSystemLibrary.DrawDebugSphere
// Size: 0x38(Inherited: 0x0) 
struct FDrawDebugSphere
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Center;  // 0x8(0xC)
	float Radius;  // 0x14(0x4)
	int32_t Segments;  // 0x18(0x4)
	struct FLinearColor LineColor;  // 0x1C(0x10)
	float Duration;  // 0x2C(0x4)
	float Thickness;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)

}; 
// ScriptStruct Engine.IndexedCurve
// Size: 0x68(Inherited: 0x0) 
struct FIndexedCurve
{
	char pad_0[8];  // 0x0(0x8)
	struct FKeyHandleMap KeyHandlesToIndices;  // 0x8(0x60)

}; 
// Function Engine.KismetSystemLibrary.EqualEqual_PrimaryAssetId
// Size: 0x24(Inherited: 0x0) 
struct FEqualEqual_PrimaryAssetId
{
	struct FPrimaryAssetId A;  // 0x0(0x10)
	struct FPrimaryAssetId B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[3];  // 0x21(0x3)

}; 
// Function Engine.Controller.K2_GetPawn
// Size: 0x8(Inherited: 0x0) 
struct FK2_GetPawn
{
	struct APawn* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.PrimitiveComponent.WasRecentlyRendered
// Size: 0x8(Inherited: 0x0) 
struct FWasRecentlyRendered
{
	float Tolerance;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool ReturnValue : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.KismetSystemLibrary.GetObjectName
// Size: 0x18(Inherited: 0x0) 
struct FGetObjectName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetMathLibrary.LinearColor_ToRGBE
// Size: 0x14(Inherited: 0x0) 
struct FLinearColor_ToRGBE
{
	struct FLinearColor InLinearColor;  // 0x0(0x10)
	struct FColor ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.KismetSystemLibrary.EqualEqual_SoftClassReference
// Size: 0x58(Inherited: 0x0) 
struct FEqualEqual_SoftClassReference
{
	struct TSoftClassPtr<UObject> A;  // 0x0(0x28)
	struct TSoftClassPtr<UObject> B;  // 0x28(0x28)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool ReturnValue : 1;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)

}; 
// Function Engine.SkyAtmosphereComponent.SetRayleighScatteringScale
// Size: 0x4(Inherited: 0x0) 
struct FSetRayleighScatteringScale
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.EqualEqual_SoftObjectReference
// Size: 0x58(Inherited: 0x0) 
struct FEqualEqual_SoftObjectReference
{
	struct TSoftObjectPtr<UObject> A;  // 0x0(0x28)
	struct TSoftObjectPtr<UObject> B;  // 0x28(0x28)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool ReturnValue : 1;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)

}; 
// Function Engine.KismetSystemLibrary.GetViewportLocation
// Size: 0x18(Inherited: 0x0) 
struct FGetViewportLocation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	int32_t ID;  // 0x8(0x4)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.AnimInstance.ResetDynamics
// Size: 0x1(Inherited: 0x0) 
struct FResetDynamics
{
	uint8_t  InTeleportType;  // 0x0(0x1)

}; 
// Function Engine.Actor.ReceiveActorOnInputTouchBegin
// Size: 0x1(Inherited: 0x0) 
struct FReceiveActorOnInputTouchBegin
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)

}; 
// Function Engine.KismetSystemLibrary.ExecuteConsoleCommand
// Size: 0x20(Inherited: 0x0) 
struct FExecuteConsoleCommand
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FString Command;  // 0x8(0x10)
	struct APlayerController* SpecificPlayer;  // 0x18(0x8)

}; 
// Function Engine.KismetSystemLibrary.GetProjectSavedDirectory
// Size: 0x10(Inherited: 0x0) 
struct FGetProjectSavedDirectory
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.PlayerCameraManager.GetOwningPlayerController
// Size: 0x8(Inherited: 0x0) 
struct FGetOwningPlayerController
{
	struct APlayerController* ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.ImportanceTexture
// Size: 0x50(Inherited: 0x0) 
struct FImportanceTexture
{
	struct FIntPoint Size;  // 0x0(0x8)
	int32_t NumMips;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct TArray<float> MarginalCDF;  // 0x10(0x10)
	struct TArray<float> ConditionalCDF;  // 0x20(0x10)
	struct TArray<struct FColor> TextureData;  // 0x30(0x10)
	struct TWeakObjectPtr<UTexture2D> Texture;  // 0x40(0x8)
	char EImportanceWeight Weighting;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)

}; 
// Function Engine.Actor.K2_SetActorRelativeRotation
// Size: 0x9C(Inherited: 0x0) 
struct FK2_SetActorRelativeRotation
{
	struct FRotator NewRelativeRotation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// Function Engine.KismetSystemLibrary.IsValidPrimaryAssetId
// Size: 0x14(Inherited: 0x0) 
struct FIsValidPrimaryAssetId
{
	struct FPrimaryAssetId PrimaryAssetId;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.KismetSystemLibrary.FlushDebugStrings
// Size: 0x8(Inherited: 0x0) 
struct FFlushDebugStrings
{
	struct UObject* WorldContextObject;  // 0x0(0x8)

}; 
// Function Engine.PrimitiveComponent.AddTorque
// Size: 0x18(Inherited: 0x0) 
struct FAddTorque
{
	struct FVector Torque;  // 0x0(0xC)
	struct FName BoneName;  // 0xC(0x8)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bAccelChange : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.SkeletalMeshComponent.SetAllBodiesBelowSimulatePhysics
// Size: 0xC(Inherited: 0x0) 
struct FSetAllBodiesBelowSimulatePhysics
{
	struct FName InBoneName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bNewSimulate : 1;  // 0x8(0x1)
	char pad_9_1 : 7;  // 0x9(0x1)
	bool bIncludeSelf : 1;  // 0x9(0x1)
	char pad_10[2];  // 0xA(0x2)

}; 
// ScriptStruct Engine.NameCurve
// Size: 0x78(Inherited: 0x68) 
struct FNameCurve : public FIndexedCurve
{
	struct TArray<struct FNameCurveKey> Keys;  // 0x68(0x10)

}; 
// Function Engine.KismetSystemLibrary.FlushPersistentDebugLines
// Size: 0x8(Inherited: 0x0) 
struct FFlushPersistentDebugLines
{
	struct UObject* WorldContextObject;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.GetClassFromPrimaryAssetId
// Size: 0x18(Inherited: 0x0) 
struct FGetClassFromPrimaryAssetId
{
	struct FPrimaryAssetId PrimaryAssetId;  // 0x0(0x10)
	UObject* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.PrimitiveComponent.IsGravityEnabled
// Size: 0x1(Inherited: 0x0) 
struct FIsGravityEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetSystemLibrary.SetClassPropertyByName
// Size: 0x18(Inherited: 0x0) 
struct FSetClassPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	UObject* Value;  // 0x10(0x8)

}; 
// Function Engine.KismetSystemLibrary.SetTransformPropertyByName
// Size: 0x40(Inherited: 0x0) 
struct FSetTransformPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct FTransform Value;  // 0x10(0x30)

}; 
// Function Engine.Actor.GetComponentsByTag
// Size: 0x20(Inherited: 0x0) 
struct FGetComponentsByTag
{
	UActorComponent* ComponentClass;  // 0x0(0x8)
	struct FName Tag;  // 0x8(0x8)
	struct TArray<struct UActorComponent*> ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.SkeletalMeshComponent.K2_GetClosestPointOnPhysicsAsset
// Size: 0x34(Inherited: 0x0) 
struct FK2_GetClosestPointOnPhysicsAsset
{
	struct FVector WorldPosition;  // 0x0(0xC)
	struct FVector ClosestWorldPosition;  // 0xC(0xC)
	struct FVector Normal;  // 0x18(0xC)
	struct FName BoneName;  // 0x24(0x8)
	float Distance;  // 0x2C(0x4)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool ReturnValue : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)

}; 
// ScriptStruct Engine.BlueprintInputActionDelegateBinding
// Size: 0x18(Inherited: 0x4) 
struct FBlueprintInputActionDelegateBinding : public FBlueprintInputDelegateBinding
{
	struct FName InputActionName;  // 0x4(0x8)
	char EInputEvent InputKeyEvent;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FName FunctionNameToBind;  // 0x10(0x8)

}; 
// Function Engine.KismetSystemLibrary.GetAdIDCount
// Size: 0x4(Inherited: 0x0) 
struct FGetAdIDCount
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_ByteByte
// Size: 0x3(Inherited: 0x0) 
struct FEqualEqual_ByteByte
{
	char A;  // 0x0(0x1)
	char B;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool ReturnValue : 1;  // 0x2(0x1)

}; 
// Function Engine.ExponentialHeightFogComponent.SetFullyDirectionalInscatteringColorDistance
// Size: 0x4(Inherited: 0x0) 
struct FSetFullyDirectionalInscatteringColorDistance
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.GetCommandLine
// Size: 0x10(Inherited: 0x0) 
struct FGetCommandLine
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.Controller.ReceiveUnPossess
// Size: 0x8(Inherited: 0x0) 
struct FReceiveUnPossess
{
	struct APawn* UnpossessedPawn;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.GetComponentBounds
// Size: 0x28(Inherited: 0x0) 
struct FGetComponentBounds
{
	struct USceneComponent* Component;  // 0x0(0x8)
	struct FVector Origin;  // 0x8(0xC)
	struct FVector BoxExtent;  // 0x14(0xC)
	float SphereRadius;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.KismetSystemLibrary.IsSplitScreen
// Size: 0x10(Inherited: 0x0) 
struct FIsSplitScreen
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetSystemLibrary.GetConsoleVariableFloatValue
// Size: 0x18(Inherited: 0x0) 
struct FGetConsoleVariableFloatValue
{
	struct FString VariableName;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.KismetMathLibrary.BreakRotIntoAxes
// Size: 0x30(Inherited: 0x0) 
struct FBreakRotIntoAxes
{
	struct FRotator InRot;  // 0x0(0xC)
	struct FVector X;  // 0xC(0xC)
	struct FVector Y;  // 0x18(0xC)
	struct FVector Z;  // 0x24(0xC)

}; 
// Function Engine.InputSettings.RemoveAxisMapping
// Size: 0x30(Inherited: 0x0) 
struct FRemoveAxisMapping
{
	struct FInputAxisKeyMapping KeyMapping;  // 0x0(0x28)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bForceRebuildKeymaps : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// Function Engine.DataTableFunctionLibrary.GetDataTableColumnAsString
// Size: 0x20(Inherited: 0x0) 
struct FGetDataTableColumnAsString
{
	struct UDataTable* DataTable;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct TArray<struct FString> ReturnValue;  // 0x10(0x10)

}; 
// ScriptStruct Engine.VirtualBone
// Size: 0x18(Inherited: 0x0) 
struct FVirtualBone
{
	struct FName SourceBoneName;  // 0x0(0x8)
	struct FName TargetBoneName;  // 0x8(0x8)
	struct FName VirtualBoneName;  // 0x10(0x8)

}; 
// Function Engine.Actor.IsChildActor
// Size: 0x1(Inherited: 0x0) 
struct FIsChildActor
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetSystemLibrary.GetDefaultLanguage
// Size: 0x10(Inherited: 0x0) 
struct FGetDefaultLanguage
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// ScriptStruct Engine.SkeletalMeshSamplingRegion
// Size: 0x30(Inherited: 0x0) 
struct FSkeletalMeshSamplingRegion
{
	struct FName Name;  // 0x0(0x8)
	int32_t LODIndex;  // 0x8(0x4)
	char bSupportUniformlyDistributedSampling : 1;  // 0xC(0x1)
	char pad_12_1 : 7;  // 0xC(0x1)
	char pad_13[4];  // 0xD(0x4)
	struct TArray<struct FSkeletalMeshSamplingRegionMaterialFilter> MaterialFilters;  // 0x10(0x10)
	struct TArray<struct FSkeletalMeshSamplingRegionBoneFilter> BoneFilters;  // 0x20(0x10)

}; 
// Function Engine.KismetMathLibrary.Conv_IntToByte
// Size: 0x8(Inherited: 0x0) 
struct FConv_IntToByte
{
	int32_t inInt;  // 0x0(0x4)
	char ReturnValue;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.KismetSystemLibrary.SetSoftClassPropertyByName
// Size: 0x38(Inherited: 0x0) 
struct FSetSoftClassPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct TSoftClassPtr<UObject> Value;  // 0x10(0x28)

}; 
// Function Engine.KismetMathLibrary.DynamicWeightedMovingAverage_FVector
// Size: 0x30(Inherited: 0x0) 
struct FDynamicWeightedMovingAverage_FVector
{
	struct FVector CurrentSample;  // 0x0(0xC)
	struct FVector PreviousSample;  // 0xC(0xC)
	float MaxDistance;  // 0x18(0x4)
	float MinWeight;  // 0x1C(0x4)
	float MaxWeight;  // 0x20(0x4)
	struct FVector ReturnValue;  // 0x24(0xC)

}; 
// Function Engine.PlayerController.GetInputMouseDelta
// Size: 0x8(Inherited: 0x0) 
struct FGetInputMouseDelta
{
	float DeltaX;  // 0x0(0x4)
	float DeltaY;  // 0x4(0x4)

}; 
// Function Engine.KismetInputLibrary.Key_GetNavigationActionFromKey
// Size: 0x40(Inherited: 0x0) 
struct FKey_GetNavigationActionFromKey
{
	struct FKeyEvent InKeyEvent;  // 0x0(0x38)
	uint8_t  ReturnValue;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 
// Function Engine.KismetSystemLibrary.GetDefaultLocale
// Size: 0x10(Inherited: 0x0) 
struct FGetDefaultLocale
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.SplineComponent.AddPoint
// Size: 0x48(Inherited: 0x0) 
struct FAddPoint
{
	struct FSplinePoint Point;  // 0x0(0x44)
	char pad_68_1 : 7;  // 0x44(0x1)
	bool bUpdateSpline : 1;  // 0x44(0x1)
	char pad_69[3];  // 0x45(0x3)

}; 
// Function Engine.AudioComponent.GetCookedEnvelopeData
// Size: 0x8(Inherited: 0x0) 
struct FGetCookedEnvelopeData
{
	float OutEnvelopeData;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool ReturnValue : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.AudioComponent.GetCookedEnvelopeDataForAllPlayingSounds
// Size: 0x18(Inherited: 0x0) 
struct FGetCookedEnvelopeDataForAllPlayingSounds
{
	struct TArray<struct FSoundWaveEnvelopeDataPerSound> OutEnvelopeData;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetSystemLibrary.GetPlatformUserName
// Size: 0x10(Inherited: 0x0) 
struct FGetPlatformUserName
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.Actor.GetHorizontalDotProductTo
// Size: 0x10(Inherited: 0x0) 
struct FGetHorizontalDotProductTo
{
	struct AActor* OtherActor;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetRenderingLibrary.ReadRenderTargetPixel
// Size: 0x20(Inherited: 0x0) 
struct FReadRenderTargetPixel
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UTextureRenderTarget2D* TextureRenderTarget;  // 0x8(0x8)
	int32_t X;  // 0x10(0x4)
	int32_t Y;  // 0x14(0x4)
	struct FColor ReturnValue;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetSystemLibrary.GetDeviceId
// Size: 0x10(Inherited: 0x0) 
struct FGetDeviceId
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// ScriptStruct Engine.DebugTextInfo
// Size: 0x60(Inherited: 0x0) 
struct FDebugTextInfo
{
	struct AActor* SrcActor;  // 0x0(0x8)
	struct FVector SrcActorOffset;  // 0x8(0xC)
	struct FVector SrcActorDesiredOffset;  // 0x14(0xC)
	struct FString DebugText;  // 0x20(0x10)
	float TimeRemaining;  // 0x30(0x4)
	float Duration;  // 0x34(0x4)
	struct FColor TextColor;  // 0x38(0x4)
	char bAbsoluteLocation : 1;  // 0x3C(0x1)
	char bKeepAttachedToActor : 1;  // 0x3C(0x1)
	char bDrawShadow : 1;  // 0x3C(0x1)
	char pad_60_1 : 5;  // 0x3C(0x1)
	char pad_61[4];  // 0x3D(0x4)
	struct FVector OrigActorLocation;  // 0x40(0xC)
	char pad_76[4];  // 0x4C(0x4)
	struct UFont* Font;  // 0x50(0x8)
	float FontScale;  // 0x58(0x4)
	char pad_92[4];  // 0x5C(0x4)

}; 
// Function Engine.SkeletalMeshComponent.SetAllBodiesBelowPhysicsBlendWeight
// Size: 0x10(Inherited: 0x0) 
struct FSetAllBodiesBelowPhysicsBlendWeight
{
	struct FName InBoneName;  // 0x0(0x8)
	float PhysicsBlendWeight;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSkipCustomPhysicsType : 1;  // 0xC(0x1)
	char pad_13_1 : 7;  // 0xD(0x1)
	bool bIncludeSelf : 1;  // 0xD(0x1)
	char pad_14[2];  // 0xE(0x2)

}; 
// ScriptStruct Engine.CollisionResponseContainer
// Size: 0x20(Inherited: 0x0) 
struct FCollisionResponseContainer
{
	char ECollisionResponse WorldStatic;  // 0x0(0x1)
	char ECollisionResponse WorldDynamic;  // 0x1(0x1)
	char ECollisionResponse Pawn;  // 0x2(0x1)
	char ECollisionResponse Visibility;  // 0x3(0x1)
	char ECollisionResponse Camera;  // 0x4(0x1)
	char ECollisionResponse PhysicsBody;  // 0x5(0x1)
	char ECollisionResponse Vehicle;  // 0x6(0x1)
	char ECollisionResponse Destructible;  // 0x7(0x1)
	char ECollisionResponse EngineTraceChannel1;  // 0x8(0x1)
	char ECollisionResponse EngineTraceChannel2;  // 0x9(0x1)
	char ECollisionResponse EngineTraceChannel3;  // 0xA(0x1)
	char ECollisionResponse EngineTraceChannel4;  // 0xB(0x1)
	char ECollisionResponse EngineTraceChannel5;  // 0xC(0x1)
	char ECollisionResponse EngineTraceChannel6;  // 0xD(0x1)
	char ECollisionResponse GameTraceChannel1;  // 0xE(0x1)
	char ECollisionResponse GameTraceChannel2;  // 0xF(0x1)
	char ECollisionResponse GameTraceChannel3;  // 0x10(0x1)
	char ECollisionResponse GameTraceChannel4;  // 0x11(0x1)
	char ECollisionResponse GameTraceChannel5;  // 0x12(0x1)
	char ECollisionResponse GameTraceChannel6;  // 0x13(0x1)
	char ECollisionResponse GameTraceChannel7;  // 0x14(0x1)
	char ECollisionResponse GameTraceChannel8;  // 0x15(0x1)
	char ECollisionResponse GameTraceChannel9;  // 0x16(0x1)
	char ECollisionResponse GameTraceChannel10;  // 0x17(0x1)
	char ECollisionResponse GameTraceChannel11;  // 0x18(0x1)
	char ECollisionResponse GameTraceChannel12;  // 0x19(0x1)
	char ECollisionResponse GameTraceChannel13;  // 0x1A(0x1)
	char ECollisionResponse GameTraceChannel14;  // 0x1B(0x1)
	char ECollisionResponse GameTraceChannel15;  // 0x1C(0x1)
	char ECollisionResponse GameTraceChannel16;  // 0x1D(0x1)
	char ECollisionResponse GameTraceChannel17;  // 0x1E(0x1)
	char ECollisionResponse GameTraceChannel18;  // 0x1F(0x1)

}; 
// Function Engine.KismetSystemLibrary.GetEngineVersion
// Size: 0x10(Inherited: 0x0) 
struct FGetEngineVersion
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetSystemLibrary.GetFrameCount
// Size: 0x8(Inherited: 0x0) 
struct FGetFrameCount
{
	int64_t ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.ToggleTrackKey
// Size: 0x8(Inherited: 0x0) 
struct FToggleTrackKey
{
	float Time;  // 0x0(0x4)
	char ETrackToggleAction ToggleAction;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.TimecodeProvider.GetDelayedTimecode
// Size: 0x14(Inherited: 0x0) 
struct FGetDelayedTimecode
{
	struct FTimecode ReturnValue;  // 0x0(0x14)

}; 
// Function Engine.KismetSystemLibrary.IsValidPrimaryAssetType
// Size: 0xC(Inherited: 0x0) 
struct FIsValidPrimaryAssetType
{
	struct FPrimaryAssetType PrimaryAssetType;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// ScriptStruct Engine.TrackToSkeletonMap
// Size: 0x4(Inherited: 0x0) 
struct FTrackToSkeletonMap
{
	int32_t BoneTreeIndex;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.GetGamepadButtonGlyph
// Size: 0x20(Inherited: 0x0) 
struct FGetGamepadButtonGlyph
{
	struct FString ButtonKey;  // 0x0(0x10)
	int32_t ControllerIndex;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct UTexture2D* ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.CameraComponent.SetFieldOfView
// Size: 0x4(Inherited: 0x0) 
struct FSetFieldOfView
{
	float InFieldOfView;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.NotEqual_SoftObjectReference
// Size: 0x58(Inherited: 0x0) 
struct FNotEqual_SoftObjectReference
{
	struct TSoftObjectPtr<UObject> A;  // 0x0(0x28)
	struct TSoftObjectPtr<UObject> B;  // 0x28(0x28)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool ReturnValue : 1;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)

}; 
// Function Engine.StaticMesh.GetNumLODs
// Size: 0x4(Inherited: 0x0) 
struct FGetNumLODs
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTime
// Size: 0x20(Inherited: 0x0) 
struct FK2_GetTimerRemainingTime
{
	struct UObject* Object;  // 0x0(0x8)
	struct FString FunctionName;  // 0x8(0x10)
	float ReturnValue;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetSystemLibrary.GetGamepadControllerName
// Size: 0x18(Inherited: 0x0) 
struct FGetGamepadControllerName
{
	int32_t ControllerId;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.GetPath
// Size: 0x20(Inherited: 0x0) 
struct FGetPath
{
	struct FString InPath;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetSystemLibrary.GetGameTimeInSeconds
// Size: 0x10(Inherited: 0x0) 
struct FGetGameTimeInSeconds
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromClass
// Size: 0x18(Inherited: 0x0) 
struct FGetPrimaryAssetIdFromClass
{
	UObject* Class;  // 0x0(0x8)
	struct FPrimaryAssetId ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.SceneComponent.GetChildrenComponents
// Size: 0x18(Inherited: 0x0) 
struct FGetChildrenComponents
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bIncludeAllDescendants : 1;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct TArray<struct USceneComponent*> Children;  // 0x8(0x10)

}; 
// Function Engine.KismetSystemLibrary.GetLocalCurrencyCode
// Size: 0x10(Inherited: 0x0) 
struct FGetLocalCurrencyCode
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// ScriptStruct Engine.IntegralKey
// Size: 0x8(Inherited: 0x0) 
struct FIntegralKey
{
	float Time;  // 0x0(0x4)
	int32_t Value;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.Matrix_TransformPosition
// Size: 0x60(Inherited: 0x0) 
struct FMatrix_TransformPosition
{
	struct FMatrix M;  // 0x0(0x40)
	struct FVector V;  // 0x40(0xC)
	char pad_76[4];  // 0x4C(0x4)
	struct FVector4 ReturnValue;  // 0x50(0x10)

}; 
// Function Engine.GameplayStatics.GrassOverlappingSphereCount
// Size: 0x28(Inherited: 0x0) 
struct FGrassOverlappingSphereCount
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UStaticMesh* StaticMesh;  // 0x8(0x8)
	struct FVector CenterPosition;  // 0x10(0xC)
	float Radius;  // 0x1C(0x4)
	int32_t ReturnValue;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)

}; 
// ScriptStruct Engine.AudioReverbEffect
// Size: 0x48(Inherited: 0x8) 
struct FAudioReverbEffect : public FAudioEffectParameters
{
	char pad_8[64];  // 0x8(0x40)

}; 
// Function Engine.PrimitiveComponent.AddForceAtLocation
// Size: 0x20(Inherited: 0x0) 
struct FAddForceAtLocation
{
	struct FVector force;  // 0x0(0xC)
	struct FVector Location;  // 0xC(0xC)
	struct FName BoneName;  // 0x18(0x8)

}; 
// Function Engine.KismetSystemLibrary.GetLocalCurrencySymbol
// Size: 0x10(Inherited: 0x0) 
struct FGetLocalCurrencySymbol
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.Actor.GetTransform
// Size: 0x30(Inherited: 0x0) 
struct FGetTransform
{
	struct FTransform ReturnValue;  // 0x0(0x30)

}; 
// Function Engine.PrimitiveComponent.GetCenterOfMass
// Size: 0x14(Inherited: 0x0) 
struct FGetCenterOfMass
{
	struct FName BoneName;  // 0x0(0x8)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.PlayerController.ClientPrestreamTextures
// Size: 0x18(Inherited: 0x0) 
struct FClientPrestreamTextures
{
	struct AActor* ForcedActor;  // 0x0(0x8)
	float ForceDuration;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bEnableStreaming : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	int32_t CinematicTextureGroups;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.KismetSystemLibrary.GetMinYResolutionFor3DView
// Size: 0x4(Inherited: 0x0) 
struct FGetMinYResolutionFor3DView
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.GetAngularDamping
// Size: 0x4(Inherited: 0x0) 
struct FGetAngularDamping
{
	float ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.MeshSectionInfo
// Size: 0x8(Inherited: 0x0) 
struct FMeshSectionInfo
{
	int32_t MaterialIndex;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bEnableCollision : 1;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bCastShadow : 1;  // 0x5(0x1)
	char pad_6_1 : 7;  // 0x6(0x1)
	bool bVisibleInRayTracing : 1;  // 0x6(0x1)
	char pad_7_1 : 7;  // 0x7(0x1)
	bool bForceOpaque : 1;  // 0x7(0x1)

}; 
// Function Engine.KismetMathLibrary.Less_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FLess_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetSystemLibrary.GetMinYResolutionForUI
// Size: 0x4(Inherited: 0x0) 
struct FGetMinYResolutionForUI
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.SkeletalMeshComponent.GetDisablePostProcessBlueprint
// Size: 0x1(Inherited: 0x0) 
struct FGetDisablePostProcessBlueprint
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetSystemLibrary.GetObjectFromPrimaryAssetId
// Size: 0x18(Inherited: 0x0) 
struct FGetObjectFromPrimaryAssetId
{
	struct FPrimaryAssetId PrimaryAssetId;  // 0x0(0x10)
	struct UObject* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetSystemLibrary.SetWindowTitle
// Size: 0x18(Inherited: 0x0) 
struct FSetWindowTitle
{
	struct FText Title;  // 0x0(0x18)

}; 
// Function Engine.KismetSystemLibrary.GetOuterObject
// Size: 0x10(Inherited: 0x0) 
struct FGetOuterObject
{
	struct UObject* Object;  // 0x0(0x8)
	struct UObject* ReturnValue;  // 0x8(0x8)

}; 
// ScriptStruct Engine.ScreenMessageString
// Size: 0x30(Inherited: 0x0) 
struct FScreenMessageString
{
	uint64_t Key;  // 0x0(0x8)
	struct FString ScreenMessage;  // 0x8(0x10)
	struct FColor DisplayColor;  // 0x18(0x4)
	float TimeToDisplay;  // 0x1C(0x4)
	float CurrentTimeDisplayed;  // 0x20(0x4)
	struct FVector2D TextScale;  // 0x24(0x8)
	char pad_44[4];  // 0x2C(0x4)

}; 
// Function Engine.ParticleSystemComponent.GetBeamSourcePoint
// Size: 0x18(Inherited: 0x0) 
struct FGetBeamSourcePoint
{
	int32_t EmitterIndex;  // 0x0(0x4)
	int32_t SourceIndex;  // 0x4(0x4)
	struct FVector OutSourcePoint;  // 0x8(0xC)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// ScriptStruct Engine.AtmospherePrecomputeInstanceData
// Size: 0x160(Inherited: 0xB8) 
struct FAtmospherePrecomputeInstanceData : public FSceneComponentInstanceData
{
	char pad_184[168];  // 0xB8(0xA8)

}; 
// Function Engine.KismetMathLibrary.Vector4_Zero
// Size: 0x10(Inherited: 0x0) 
struct FVector4_Zero
{
	struct FVector4 ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.Actor.GetLifeSpan
// Size: 0x4(Inherited: 0x0) 
struct FGetLifeSpan
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.GetPathName
// Size: 0x18(Inherited: 0x0) 
struct FGetPathName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.SkinnedMeshComponent.ClearSkinWeightOverride
// Size: 0x4(Inherited: 0x0) 
struct FClearSkinWeightOverride
{
	int32_t LODIndex;  // 0x0(0x4)

}; 
// Function Engine.KismetInputLibrary.PointerEvent_GetTouchpadIndex
// Size: 0x78(Inherited: 0x0) 
struct FPointerEvent_GetTouchpadIndex
{
	struct FPointerEvent Input;  // 0x0(0x70)
	int32_t ReturnValue;  // 0x70(0x4)
	char pad_116[4];  // 0x74(0x4)

}; 
// Function Engine.SceneComponent.K2_AddWorldOffset
// Size: 0x9C(Inherited: 0x0) 
struct FK2_AddWorldOffset
{
	struct FVector DeltaLocation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// Function Engine.SkeletalMeshComponent.SetAllMotorsAngularVelocityDrive
// Size: 0x3(Inherited: 0x0) 
struct FSetAllMotorsAngularVelocityDrive
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnableSwingDrive : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bEnableTwistDrive : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool bSkipCustomPhysicsType : 1;  // 0x2(0x1)

}; 
// Function Engine.PrimitiveComponent.CopyArrayOfMoveIgnoreComponents
// Size: 0x10(Inherited: 0x0) 
struct FCopyArrayOfMoveIgnoreComponents
{
	struct TArray<struct UPrimitiveComponent*> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.Actor.K2_AddActorLocalOffset
// Size: 0x9C(Inherited: 0x0) 
struct FK2_AddActorLocalOffset
{
	struct FVector DeltaLocation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromObject
// Size: 0x18(Inherited: 0x0) 
struct FGetPrimaryAssetIdFromObject
{
	struct UObject* Object;  // 0x0(0x8)
	struct FPrimaryAssetId ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetSystemLibrary.SetSuppressViewportTransitionMessage
// Size: 0x10(Inherited: 0x0) 
struct FSetSuppressViewportTransitionMessage
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bState : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.GameplayStatics.GetAccurateRealTime
// Size: 0x8(Inherited: 0x0) 
struct FGetAccurateRealTime
{
	int32_t Seconds;  // 0x0(0x4)
	float PartialSeconds;  // 0x4(0x4)

}; 
// Function Engine.SplineComponent.GetWorldLocationAtSplinePoint
// Size: 0x10(Inherited: 0x0) 
struct FGetWorldLocationAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	struct FVector ReturnValue;  // 0x4(0xC)

}; 
// Function Engine.GameplayStatics.GetPlayerPawn
// Size: 0x18(Inherited: 0x0) 
struct FGetPlayerPawn
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	int32_t PlayerIndex;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct APawn* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.AnimSingleNodeInstance.SetPositionWithPreviousTime
// Size: 0xC(Inherited: 0x0) 
struct FSetPositionWithPreviousTime
{
	float InPosition;  // 0x0(0x4)
	float InPreviousTime;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bFireNotifies : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.PrimitiveComponent.SetCustomPrimitiveDataVector2
// Size: 0xC(Inherited: 0x0) 
struct FSetCustomPrimitiveDataVector2
{
	int32_t DataIndex;  // 0x0(0x4)
	struct FVector2D Value;  // 0x4(0x8)

}; 
// Function Engine.PlayerController.ServerAcknowledgePossession
// Size: 0x8(Inherited: 0x0) 
struct FServerAcknowledgePossession
{
	struct APawn* P;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdList
// Size: 0x18(Inherited: 0x0) 
struct FGetPrimaryAssetIdList
{
	struct FPrimaryAssetType PrimaryAssetType;  // 0x0(0x8)
	struct TArray<struct FPrimaryAssetId> OutPrimaryAssetIdList;  // 0x8(0x10)

}; 
// ScriptStruct Engine.RootMotionMovementParams
// Size: 0x40(Inherited: 0x0) 
struct FRootMotionMovementParams
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bHasRootMotion : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float BlendWeight;  // 0x4(0x4)
	char pad_8[8];  // 0x8(0x8)
	struct FTransform RootMotionTransform;  // 0x10(0x30)

}; 
// ScriptStruct Engine.BlueprintInputDelegateBinding
// Size: 0x4(Inherited: 0x0) 
struct FBlueprintInputDelegateBinding
{
	char bConsumeInput : 1;  // 0x0(0x1)
	char bExecuteWhenPaused : 1;  // 0x0(0x1)
	char bOverrideParentBinding : 1;  // 0x0(0x1)
	char pad_0_1 : 5;  // 0x0(0x1)
	char pad_1[4];  // 0x1(0x4)

}; 
// ScriptStruct Engine.CollisionResponse
// Size: 0x30(Inherited: 0x0) 
struct FCollisionResponse
{
	struct FCollisionResponseContainer ResponseToChannels;  // 0x0(0x20)
	struct TArray<struct FResponseChannel> ResponseArray;  // 0x20(0x10)

}; 
// Function Engine.GameplayStatics.EnableLiveStreaming
// Size: 0x1(Inherited: 0x0) 
struct FEnableLiveStreaming
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool Enable : 1;  // 0x0(0x1)

}; 
// Function Engine.Actor.GetActorTickInterval
// Size: 0x4(Inherited: 0x0) 
struct FGetActorTickInterval
{
	float ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.ComponentSpacePoseLink
// Size: 0x10(Inherited: 0x10) 
struct FComponentSpacePoseLink : public FPoseLinkBase
{

}; 
// Function Engine.KismetSystemLibrary.GetProjectContentDirectory
// Size: 0x10(Inherited: 0x0) 
struct FGetProjectContentDirectory
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetSystemLibrary.GetRenderingDetailMode
// Size: 0x4(Inherited: 0x0) 
struct FGetRenderingDetailMode
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.GetRenderingMaterialQualityLevel
// Size: 0x4(Inherited: 0x0) 
struct FGetRenderingMaterialQualityLevel
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.SceneComponent.GetAllSocketNames
// Size: 0x10(Inherited: 0x0) 
struct FGetAllSocketNames
{
	struct TArray<struct FName> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetSystemLibrary.GetSoftClassReferenceFromPrimaryAssetId
// Size: 0x38(Inherited: 0x0) 
struct FGetSoftClassReferenceFromPrimaryAssetId
{
	struct FPrimaryAssetId PrimaryAssetId;  // 0x0(0x10)
	struct TSoftClassPtr<UObject> ReturnValue;  // 0x10(0x28)

}; 
// Function Engine.PlayerController.ClientRetryClientRestart
// Size: 0x8(Inherited: 0x0) 
struct FClientRetryClientRestart
{
	struct APawn* NewPawn;  // 0x0(0x8)

}; 
// Function Engine.GameUserSettings.SetAudioQualityLevel
// Size: 0x4(Inherited: 0x0) 
struct FSetAudioQualityLevel
{
	int32_t QualityLevel;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.GetSoftObjectReferenceFromPrimaryAssetId
// Size: 0x38(Inherited: 0x0) 
struct FGetSoftObjectReferenceFromPrimaryAssetId
{
	struct FPrimaryAssetId PrimaryAssetId;  // 0x0(0x10)
	struct TSoftObjectPtr<UObject> ReturnValue;  // 0x10(0x28)

}; 
// Function Engine.GameUserSettings.GetFrameRateLimit
// Size: 0x4(Inherited: 0x0) 
struct FGetFrameRateLimit
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.Actor.DetachRootComponentFromParent
// Size: 0x1(Inherited: 0x0) 
struct FDetachRootComponentFromParent
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bMaintainWorldPosition : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.FontImportOptionsData
// Size: 0xB0(Inherited: 0x0) 
struct FFontImportOptionsData
{
	struct FString FontName;  // 0x0(0x10)
	float Height;  // 0x10(0x4)
	char bEnableAntialiasing : 1;  // 0x14(0x1)
	char bEnableBold : 1;  // 0x14(0x1)
	char bEnableItalic : 1;  // 0x14(0x1)
	char bEnableUnderline : 1;  // 0x14(0x1)
	char bAlphaOnly : 1;  // 0x14(0x1)
	char pad_20_1 : 3;  // 0x14(0x1)
	char pad_21[4];  // 0x15(0x4)
	char EFontImportCharacterSet CharacterSet;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)
	struct FString Chars;  // 0x20(0x10)
	struct FString UnicodeRange;  // 0x30(0x10)
	struct FString CharsFilePath;  // 0x40(0x10)
	struct FString CharsFileWildcard;  // 0x50(0x10)
	char bCreatePrintableOnly : 1;  // 0x60(0x1)
	char bIncludeASCIIRange : 1;  // 0x60(0x1)
	char pad_96_1 : 6;  // 0x60(0x1)
	char pad_97[4];  // 0x61(0x4)
	struct FLinearColor ForegroundColor;  // 0x64(0x10)
	char bEnableDropShadow : 1;  // 0x74(0x1)
	char pad_116_1 : 7;  // 0x74(0x1)
	char pad_117[4];  // 0x75(0x4)
	int32_t TexturePageWidth;  // 0x78(0x4)
	int32_t TexturePageMaxHeight;  // 0x7C(0x4)
	int32_t XPadding;  // 0x80(0x4)
	int32_t YPadding;  // 0x84(0x4)
	int32_t ExtendBoxTop;  // 0x88(0x4)
	int32_t ExtendBoxBottom;  // 0x8C(0x4)
	int32_t ExtendBoxRight;  // 0x90(0x4)
	int32_t ExtendBoxLeft;  // 0x94(0x4)
	char bEnableLegacyMode : 1;  // 0x98(0x1)
	char pad_152_1 : 7;  // 0x98(0x1)
	char pad_153[4];  // 0x99(0x4)
	int32_t Kerning;  // 0x9C(0x4)
	char bUseDistanceFieldAlpha : 1;  // 0xA0(0x1)
	char pad_160_1 : 7;  // 0xA0(0x1)
	char pad_161[4];  // 0xA1(0x4)
	int32_t DistanceFieldScaleFactor;  // 0xA4(0x4)
	float DistanceFieldScanRadiusScale;  // 0xA8(0x4)
	char pad_172[4];  // 0xAC(0x4)

}; 
// Function Engine.TimelineComponent.IsLooping
// Size: 0x1(Inherited: 0x0) 
struct FIsLooping
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.Character.ClientAdjustRootMotionSourcePosition
// Size: 0x80(Inherited: 0x0) 
struct FClientAdjustRootMotionSourcePosition
{
	float Timestamp;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FRootMotionSourceGroup ServerRootMotion;  // 0x8(0x38)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool bHasAnimRootMotion : 1;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)
	float ServerMontageTrackPosition;  // 0x44(0x4)
	struct FVector ServerLoc;  // 0x48(0xC)
	struct FVector_NetQuantizeNormal ServerRotation;  // 0x54(0xC)
	float ServerVelZ;  // 0x60(0x4)
	char pad_100[4];  // 0x64(0x4)
	struct UPrimitiveComponent* ServerBase;  // 0x68(0x8)
	struct FName ServerBoneName;  // 0x70(0x8)
	char pad_120_1 : 7;  // 0x78(0x1)
	bool bHasBase : 1;  // 0x78(0x1)
	char pad_121_1 : 7;  // 0x79(0x1)
	bool bBaseRelativePosition : 1;  // 0x79(0x1)
	char ServerMovementMode;  // 0x7A(0x1)
	char pad_123[5];  // 0x7B(0x5)

}; 
// Function Engine.Character.RootMotionDebugClientPrintOnScreen
// Size: 0x10(Inherited: 0x0) 
struct FRootMotionDebugClientPrintOnScreen
{
	struct FString inString;  // 0x0(0x10)

}; 
// Function Engine.KismetSystemLibrary.GetSystemPath
// Size: 0x18(Inherited: 0x0) 
struct FGetSystemPath
{
	struct UObject* Object;  // 0x0(0x8)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.SkinnedMeshComponent.GetParentBone
// Size: 0x10(Inherited: 0x0) 
struct FGetParentBone
{
	struct FName BoneName;  // 0x0(0x8)
	struct FName ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetSystemLibrary.IsDedicatedServer
// Size: 0x10(Inherited: 0x0) 
struct FIsDedicatedServer
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetSystemLibrary.IsInterstitialAdRequested
// Size: 0x1(Inherited: 0x0) 
struct FIsInterstitialAdRequested
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.LevelScriptActor.WorldOriginLocationChanged
// Size: 0x18(Inherited: 0x0) 
struct FWorldOriginLocationChanged
{
	struct FIntVector OldOriginLocation;  // 0x0(0xC)
	struct FIntVector NewOriginLocation;  // 0xC(0xC)

}; 
// ScriptStruct Engine.FloatCurve
// Size: 0x98(Inherited: 0x18) 
struct FFloatCurve : public FAnimCurveBase
{
	struct FRichCurve FloatCurve;  // 0x18(0x80)

}; 
// Function Engine.KismetSystemLibrary.IsPackagedForDistribution
// Size: 0x1(Inherited: 0x0) 
struct FIsPackagedForDistribution
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.Character.ServerMoveOld
// Size: 0x18(Inherited: 0x0) 
struct FServerMoveOld
{
	float OldTimeStamp;  // 0x0(0x4)
	struct FVector_NetQuantize10 OldAccel;  // 0x4(0xC)
	char OldMoveFlags;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	float InCrouchedHalfHeight;  // 0x14(0x4)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetScaleVector
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_GetScaleVector
{
	struct FMatrix M;  // 0x0(0x40)
	float Tolerance;  // 0x40(0x4)
	struct FVector ReturnValue;  // 0x44(0xC)

}; 
// Function Engine.KismetArrayLibrary.Array_RemoveItem
// Size: 0x18(Inherited: 0x0) 
struct FArray_RemoveItem
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t Item;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.Actor.GetVelocity
// Size: 0xC(Inherited: 0x0) 
struct FGetVelocity
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetSystemLibrary.IsLoggedIn
// Size: 0x10(Inherited: 0x0) 
struct FIsLoggedIn
{
	struct APlayerController* SpecificPlayer;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetMathLibrary.ClampAxes2D
// Size: 0x18(Inherited: 0x0) 
struct FClampAxes2D
{
	struct FVector2D A;  // 0x0(0x8)
	float MinAxisVal;  // 0x8(0x4)
	float MaxAxisVal;  // 0xC(0x4)
	struct FVector2D ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.Emitter.SetActorParameter
// Size: 0x10(Inherited: 0x0) 
struct FSetActorParameter
{
	struct FName ParameterName;  // 0x0(0x8)
	struct AActor* Param;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.MakeRotFromYZ
// Size: 0x24(Inherited: 0x0) 
struct FMakeRotFromYZ
{
	struct FVector Y;  // 0x0(0xC)
	struct FVector Z;  // 0xC(0xC)
	struct FRotator ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.PlayerController.WasInputKeyJustPressed
// Size: 0x20(Inherited: 0x0) 
struct FWasInputKeyJustPressed
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetSystemLibrary.IsScreensaverEnabled
// Size: 0x1(Inherited: 0x0) 
struct FIsScreensaverEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.GetMinute
// Size: 0x10(Inherited: 0x0) 
struct FGetMinute
{
	struct FDateTime A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetSystemLibrary.SetRotatorPropertyByName
// Size: 0x20(Inherited: 0x0) 
struct FSetRotatorPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct FRotator Value;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// ScriptStruct Engine.SkelMeshSkinWeightInfo
// Size: 0x3C(Inherited: 0x0) 
struct FSkelMeshSkinWeightInfo
{
	int32_t Bones[c];  // 0x0(0x30)
	char Weights[c];  // 0x30(0xC)

}; 
// Function Engine.SphereComponent.GetScaledSphereRadius
// Size: 0x4(Inherited: 0x0) 
struct FGetScaledSphereRadius
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.HUD.DrawMaterialTriangle
// Size: 0x68(Inherited: 0x0) 
struct FDrawMaterialTriangle
{
	struct UMaterialInterface* Material;  // 0x0(0x8)
	struct FVector2D V0_Pos;  // 0x8(0x8)
	struct FVector2D V1_Pos;  // 0x10(0x8)
	struct FVector2D V2_Pos;  // 0x18(0x8)
	struct FVector2D V0_UV;  // 0x20(0x8)
	struct FVector2D V1_UV;  // 0x28(0x8)
	struct FVector2D V2_UV;  // 0x30(0x8)
	struct FLinearColor V0_Color;  // 0x38(0x10)
	struct FLinearColor V1_Color;  // 0x48(0x10)
	struct FLinearColor V2_Color;  // 0x58(0x10)

}; 
// Function Engine.KismetSystemLibrary.IsServer
// Size: 0x10(Inherited: 0x0) 
struct FIsServer
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetMathLibrary.Vector_UnwindEuler
// Size: 0xC(Inherited: 0x0) 
struct FVector_UnwindEuler
{
	struct FVector A;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.GetAbs2D
// Size: 0x10(Inherited: 0x0) 
struct FGetAbs2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.CharacterMovementComponent.AddImpulse
// Size: 0x10(Inherited: 0x0) 
struct FAddImpulse
{
	struct FVector Impulse;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bVelocityChange : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.SkeletalMesh.GetMorphTargets
// Size: 0x10(Inherited: 0x0) 
struct FGetMorphTargets
{
	struct TArray<struct UMorphTarget*> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.FeaturePackDir
// Size: 0x10(Inherited: 0x0) 
struct FFeaturePackDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetSystemLibrary.K2_SetTimerDelegate
// Size: 0x28(Inherited: 0x0) 
struct FK2_SetTimerDelegate
{
	struct FDelegate Delegate;  // 0x0(0x10)
	float Time;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bLooping : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)
	float InitialStartDelay;  // 0x18(0x4)
	float InitialStartDelayVariance;  // 0x1C(0x4)
	struct FTimerHandle ReturnValue;  // 0x20(0x8)

}; 
// Function Engine.PrimitiveComponent.AddAngularImpulseInDegrees
// Size: 0x18(Inherited: 0x0) 
struct FAddAngularImpulseInDegrees
{
	struct FVector Impulse;  // 0x0(0xC)
	struct FName BoneName;  // 0xC(0x8)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bVelChange : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.SkeletalMeshComponent.GetIntegerAttribute_Ref
// Size: 0x18(Inherited: 0x0) 
struct FGetIntegerAttribute_Ref
{
	struct FName BoneName;  // 0x0(0x8)
	struct FName AttributeName;  // 0x8(0x8)
	int32_t OutValue;  // 0x10(0x4)
	uint8_t  LookupType;  // 0x14(0x1)
	char pad_21_1 : 7;  // 0x15(0x1)
	bool ReturnValue : 1;  // 0x15(0x1)
	char pad_22[2];  // 0x16(0x2)

}; 
// Function Engine.KismetMathLibrary.Conv_VectorToVector2D
// Size: 0x14(Inherited: 0x0) 
struct FConv_VectorToVector2D
{
	struct FVector InVector;  // 0x0(0xC)
	struct FVector2D ReturnValue;  // 0xC(0x8)

}; 
// Function Engine.KismetSystemLibrary.IsUnattended
// Size: 0x1(Inherited: 0x0) 
struct FIsUnattended
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SceneComponent.GetRelativeTransform
// Size: 0x30(Inherited: 0x0) 
struct FGetRelativeTransform
{
	struct FTransform ReturnValue;  // 0x0(0x30)

}; 
// Function Engine.KismetSystemLibrary.IsValid
// Size: 0x10(Inherited: 0x0) 
struct FIsValid
{
	struct UObject* Object;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetSystemLibrary.IsValidClass
// Size: 0x10(Inherited: 0x0) 
struct FIsValidClass
{
	UObject* Class;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.SplineComponent.FindScaleClosestToWorldLocation
// Size: 0x18(Inherited: 0x0) 
struct FFindScaleClosestToWorldLocation
{
	struct FVector WorldLocation;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetSystemLibrary.K2_ClearAndInvalidateTimerHandle
// Size: 0x10(Inherited: 0x0) 
struct FK2_ClearAndInvalidateTimerHandle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FTimerHandle Handle;  // 0x8(0x8)

}; 
// ScriptStruct Engine.TimerHandle
// Size: 0x8(Inherited: 0x0) 
struct FTimerHandle
{
	uint64_t Handle;  // 0x0(0x8)

}; 
// Function Engine.SkeletalMesh.SetMaterials
// Size: 0x10(Inherited: 0x0) 
struct FSetMaterials
{
	struct TArray<struct FSkeletalMaterial> InMaterials;  // 0x0(0x10)

}; 
// Function Engine.KismetSystemLibrary.K2_ClearTimer
// Size: 0x18(Inherited: 0x0) 
struct FK2_ClearTimer
{
	struct UObject* Object;  // 0x0(0x8)
	struct FString FunctionName;  // 0x8(0x10)

}; 
// Function Engine.KismetStringLibrary.GetCharacterArrayFromString
// Size: 0x20(Inherited: 0x0) 
struct FGetCharacterArrayFromString
{
	struct FString SourceString;  // 0x0(0x10)
	struct TArray<struct FString> ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTimeDelegate
// Size: 0x14(Inherited: 0x0) 
struct FK2_GetTimerRemainingTimeDelegate
{
	struct FDelegate Delegate;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.PrimitiveComponent.GetOverlappingComponents
// Size: 0x10(Inherited: 0x0) 
struct FGetOverlappingComponents
{
	struct TArray<struct UPrimitiveComponent*> OutOverlappingComponents;  // 0x0(0x10)

}; 
// Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTimeHandle
// Size: 0x18(Inherited: 0x0) 
struct FK2_GetTimerRemainingTimeHandle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FTimerHandle Handle;  // 0x8(0x8)
	float ReturnValue;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.KismetMathLibrary.Abs
// Size: 0x8(Inherited: 0x0) 
struct FAbs
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetSystemLibrary.K2_IsTimerActiveDelegate
// Size: 0x14(Inherited: 0x0) 
struct FK2_IsTimerActiveDelegate
{
	struct FDelegate Delegate;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.PlayerController.ClientStopCameraShakesFromSource
// Size: 0x10(Inherited: 0x0) 
struct FClientStopCameraShakesFromSource
{
	struct UCameraShakeSourceComponent* SourceComponent;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bImmediately : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetStringTableLibrary.GetTableEntryMetaData
// Size: 0x30(Inherited: 0x0) 
struct FGetTableEntryMetaData
{
	struct FName TableId;  // 0x0(0x8)
	struct FString Key;  // 0x8(0x10)
	struct FName MetaDataId;  // 0x18(0x8)
	struct FString ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.KismetStringLibrary.RightPad
// Size: 0x28(Inherited: 0x0) 
struct FRightPad
{
	struct FString SourceString;  // 0x0(0x10)
	int32_t ChCount;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct FString ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.KismetSystemLibrary.K2_IsTimerActiveHandle
// Size: 0x18(Inherited: 0x0) 
struct FK2_IsTimerActiveHandle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FTimerHandle Handle;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.Actor.EnableInput
// Size: 0x8(Inherited: 0x0) 
struct FEnableInput
{
	struct APlayerController* PlayerController;  // 0x0(0x8)

}; 
// Function Engine.SkeletalMeshComponent.SetUpdateAnimationInEditor
// Size: 0x1(Inherited: 0x0) 
struct FSetUpdateAnimationInEditor
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool NewUpdateState : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.LessEqual_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FLessEqual_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.Actor.GetInstigatorController
// Size: 0x8(Inherited: 0x0) 
struct FGetInstigatorController
{
	struct AController* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.K2_IsTimerPausedDelegate
// Size: 0x14(Inherited: 0x0) 
struct FK2_IsTimerPausedDelegate
{
	struct FDelegate Delegate;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.KismetSystemLibrary.K2_IsValidTimerHandle
// Size: 0x10(Inherited: 0x0) 
struct FK2_IsValidTimerHandle
{
	struct FTimerHandle Handle;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetMathLibrary.Normalize2D
// Size: 0xC(Inherited: 0x0) 
struct FNormalize2D
{
	struct FVector2D A;  // 0x0(0x8)
	float Tolerance;  // 0x8(0x4)

}; 
// Function Engine.KismetSystemLibrary.K2_PauseTimer
// Size: 0x18(Inherited: 0x0) 
struct FK2_PauseTimer
{
	struct UObject* Object;  // 0x0(0x8)
	struct FString FunctionName;  // 0x8(0x10)

}; 
// Function Engine.KismetMathLibrary.Xor_Int64Int64
// Size: 0x18(Inherited: 0x0) 
struct FXor_Int64Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	int64_t ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.PlayerController.GetInputTouchState
// Size: 0x10(Inherited: 0x0) 
struct FGetInputTouchState
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float LocationX;  // 0x4(0x4)
	float LocationY;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bIsCurrentlyPressed : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.SplineComponent.GetVectorPropertyAtSplinePoint
// Size: 0x18(Inherited: 0x0) 
struct FGetVectorPropertyAtSplinePoint
{
	int32_t Index;  // 0x0(0x4)
	struct FName PropertyName;  // 0x4(0x8)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetSystemLibrary.K2_PauseTimerDelegate
// Size: 0x10(Inherited: 0x0) 
struct FK2_PauseTimerDelegate
{
	struct FDelegate Delegate;  // 0x0(0x10)

}; 
// Function Engine.PrimitiveComponent.SetMinDrawDistance
// Size: 0x4(Inherited: 0x0) 
struct FSetMinDrawDistance
{
	float NewMinDrawDistance;  // 0x0(0x4)

}; 
// Function Engine.SplineComponent.SetDrawDebug
// Size: 0x1(Inherited: 0x0) 
struct FSetDrawDebug
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bShow : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetSystemLibrary.SphereTraceSingleForObjects
// Size: 0x108(Inherited: 0x0) 
struct FSphereTraceSingleForObjects
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	float Radius;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x28(0x10)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool bTraceComplex : 1;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x40(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x50(0x1)
	char pad_81[3];  // 0x51(0x3)
	struct FHitResult OutHit;  // 0x54(0x88)
	char pad_220_1 : 7;  // 0xDC(0x1)
	bool bIgnoreSelf : 1;  // 0xDC(0x1)
	char pad_221[3];  // 0xDD(0x3)
	struct FLinearColor TraceColor;  // 0xE0(0x10)
	struct FLinearColor TraceHitColor;  // 0xF0(0x10)
	float DrawTime;  // 0x100(0x4)
	char pad_260_1 : 7;  // 0x104(0x1)
	bool ReturnValue : 1;  // 0x104(0x1)
	char pad_261[3];  // 0x105(0x3)

}; 
// Function Engine.KismetInputLibrary.GetAnalogValue
// Size: 0x48(Inherited: 0x0) 
struct FGetAnalogValue
{
	struct FAnalogInputEvent Input;  // 0x0(0x40)
	float ReturnValue;  // 0x40(0x4)
	char pad_68[4];  // 0x44(0x4)

}; 
// Function Engine.KismetSystemLibrary.K2_PauseTimerHandle
// Size: 0x10(Inherited: 0x0) 
struct FK2_PauseTimerHandle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FTimerHandle Handle;  // 0x8(0x8)

}; 
// Function Engine.KismetSystemLibrary.K2_TimerExistsHandle
// Size: 0x18(Inherited: 0x0) 
struct FK2_TimerExistsHandle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FTimerHandle Handle;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.BakedAnimationStateMachine
// Size: 0x30(Inherited: 0x0) 
struct FBakedAnimationStateMachine
{
	struct FName MachineName;  // 0x0(0x8)
	int32_t InitialState;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct TArray<struct FBakedAnimationState> states;  // 0x10(0x10)
	struct TArray<struct FAnimationTransitionBetweenStates> Transitions;  // 0x20(0x10)

}; 
// Function Engine.SkinnedMeshComponent.SetForcedLOD
// Size: 0x4(Inherited: 0x0) 
struct FSetForcedLOD
{
	int32_t InNewForcedLOD;  // 0x0(0x4)

}; 
// Function Engine.Character.GetCurrentMontage
// Size: 0x8(Inherited: 0x0) 
struct FGetCurrentMontage
{
	struct UAnimMontage* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.K2_UnPauseTimer
// Size: 0x18(Inherited: 0x0) 
struct FK2_UnPauseTimer
{
	struct UObject* Object;  // 0x0(0x8)
	struct FString FunctionName;  // 0x8(0x10)

}; 
// Function Engine.KismetSystemLibrary.K2_UnPauseTimerDelegate
// Size: 0x10(Inherited: 0x0) 
struct FK2_UnPauseTimerDelegate
{
	struct FDelegate Delegate;  // 0x0(0x10)

}; 
// Function Engine.SkinnedMeshComponent.GetRefPosePosition
// Size: 0x10(Inherited: 0x0) 
struct FGetRefPosePosition
{
	int32_t BoneIndex;  // 0x0(0x4)
	struct FVector ReturnValue;  // 0x4(0xC)

}; 
// ScriptStruct Engine.SimulatedRootMotionReplicatedMove
// Size: 0xA0(Inherited: 0x0) 
struct FSimulatedRootMotionReplicatedMove
{
	float Time;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FRepRootMotionMontage RootMotion;  // 0x8(0x98)

}; 
// Function Engine.KismetSystemLibrary.K2_UnPauseTimerHandle
// Size: 0x10(Inherited: 0x0) 
struct FK2_UnPauseTimerHandle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FTimerHandle Handle;  // 0x8(0x8)

}; 
// Function Engine.KismetSystemLibrary.LineTraceMultiByProfile
// Size: 0x88(Inherited: 0x0) 
struct FLineTraceMultiByProfile
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	struct FName ProfileName;  // 0x20(0x8)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bTraceComplex : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x30(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)
	struct TArray<struct FHitResult> OutHits;  // 0x48(0x10)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool bIgnoreSelf : 1;  // 0x58(0x1)
	char pad_89[3];  // 0x59(0x3)
	struct FLinearColor TraceColor;  // 0x5C(0x10)
	struct FLinearColor TraceHitColor;  // 0x6C(0x10)
	float DrawTime;  // 0x7C(0x4)
	char pad_128_1 : 7;  // 0x80(0x1)
	bool ReturnValue : 1;  // 0x80(0x1)
	char pad_129[7];  // 0x81(0x7)

}; 
// Function Engine.GameplayStatics.BeginSpawningActorFromClass
// Size: 0x60(Inherited: 0x0) 
struct FBeginSpawningActorFromClass
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	AActor* ActorClass;  // 0x8(0x8)
	struct FTransform SpawnTransform;  // 0x10(0x30)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool bNoCollisionFail : 1;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)
	struct AActor* Owner;  // 0x48(0x8)
	struct AActor* ReturnValue;  // 0x50(0x8)
	char pad_88[8];  // 0x58(0x8)

}; 
// Function Engine.KismetSystemLibrary.LineTraceMultiForObjects
// Size: 0x90(Inherited: 0x0) 
struct FLineTraceMultiForObjects
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x20(0x10)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bTraceComplex : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x38(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	struct TArray<struct FHitResult> OutHits;  // 0x50(0x10)
	char pad_96_1 : 7;  // 0x60(0x1)
	bool bIgnoreSelf : 1;  // 0x60(0x1)
	char pad_97[3];  // 0x61(0x3)
	struct FLinearColor TraceColor;  // 0x64(0x10)
	struct FLinearColor TraceHitColor;  // 0x74(0x10)
	float DrawTime;  // 0x84(0x4)
	char pad_136_1 : 7;  // 0x88(0x1)
	bool ReturnValue : 1;  // 0x88(0x1)
	char pad_137[7];  // 0x89(0x7)

}; 
// ScriptStruct Engine.SpriteCategoryInfo
// Size: 0x38(Inherited: 0x0) 
struct FSpriteCategoryInfo
{
	struct FName Category;  // 0x0(0x8)
	struct FText DisplayName;  // 0x8(0x18)
	struct FText Description;  // 0x20(0x18)

}; 
// Function Engine.KismetSystemLibrary.LineTraceSingle
// Size: 0xF0(Inherited: 0x0) 
struct FLineTraceSingle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	char ETraceTypeQuery TraceChannel;  // 0x20(0x1)
	char pad_33_1 : 7;  // 0x21(0x1)
	bool bTraceComplex : 1;  // 0x21(0x1)
	char pad_34[6];  // 0x22(0x6)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x28(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x38(0x1)
	char pad_57[3];  // 0x39(0x3)
	struct FHitResult OutHit;  // 0x3C(0x88)
	char pad_196_1 : 7;  // 0xC4(0x1)
	bool bIgnoreSelf : 1;  // 0xC4(0x1)
	char pad_197[3];  // 0xC5(0x3)
	struct FLinearColor TraceColor;  // 0xC8(0x10)
	struct FLinearColor TraceHitColor;  // 0xD8(0x10)
	float DrawTime;  // 0xE8(0x4)
	char pad_236_1 : 7;  // 0xEC(0x1)
	bool ReturnValue : 1;  // 0xEC(0x1)
	char pad_237[3];  // 0xED(0x3)

}; 
// Function Engine.StereoLayerComponent.GetUVRect
// Size: 0x14(Inherited: 0x0) 
struct FGetUVRect
{
	struct FBox2D ReturnValue;  // 0x0(0x14)

}; 
// Function Engine.KismetSystemLibrary.LineTraceSingleByProfile
// Size: 0xF8(Inherited: 0x0) 
struct FLineTraceSingleByProfile
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	struct FName ProfileName;  // 0x20(0x8)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bTraceComplex : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x30(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)
	struct FHitResult OutHit;  // 0x44(0x88)
	char pad_204_1 : 7;  // 0xCC(0x1)
	bool bIgnoreSelf : 1;  // 0xCC(0x1)
	char pad_205[3];  // 0xCD(0x3)
	struct FLinearColor TraceColor;  // 0xD0(0x10)
	struct FLinearColor TraceHitColor;  // 0xE0(0x10)
	float DrawTime;  // 0xF0(0x4)
	char pad_244_1 : 7;  // 0xF4(0x1)
	bool ReturnValue : 1;  // 0xF4(0x1)
	char pad_245[3];  // 0xF5(0x3)

}; 
// Function Engine.KismetSystemLibrary.LineTraceSingleForObjects
// Size: 0x100(Inherited: 0x0) 
struct FLineTraceSingleForObjects
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x20(0x10)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bTraceComplex : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x38(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x48(0x1)
	char pad_73[3];  // 0x49(0x3)
	struct FHitResult OutHit;  // 0x4C(0x88)
	char pad_212_1 : 7;  // 0xD4(0x1)
	bool bIgnoreSelf : 1;  // 0xD4(0x1)
	char pad_213[3];  // 0xD5(0x3)
	struct FLinearColor TraceColor;  // 0xD8(0x10)
	struct FLinearColor TraceHitColor;  // 0xE8(0x10)
	float DrawTime;  // 0xF8(0x4)
	char pad_252_1 : 7;  // 0xFC(0x1)
	bool ReturnValue : 1;  // 0xFC(0x1)
	char pad_253[3];  // 0xFD(0x3)

}; 
// DelegateFunction Engine.KismetSystemLibrary.OnAssetLoaded__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FOnAssetLoaded__DelegateSignature
{
	struct UObject* Loaded;  // 0x0(0x8)

}; 
// Function Engine.InputComponent.GetControllerAnalogStickState
// Size: 0xC(Inherited: 0x0) 
struct FGetControllerAnalogStickState
{
	char EControllerAnalogStick WhichStick;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float StickX;  // 0x4(0x4)
	float StickY;  // 0x8(0x4)

}; 
// ScriptStruct Engine.StateMachineDebugData
// Size: 0xB0(Inherited: 0x0) 
struct FStateMachineDebugData
{
	char pad_0[176];  // 0x0(0xB0)

}; 
// Function Engine.AtmosphericFogComponent.SetDistanceScale
// Size: 0x4(Inherited: 0x0) 
struct FSetDistanceScale
{
	float NewDistanceScale;  // 0x0(0x4)

}; 
// DelegateFunction Engine.KismetSystemLibrary.OnAssetClassLoaded__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FOnAssetClassLoaded__DelegateSignature
{
	UObject* Loaded;  // 0x0(0x8)

}; 
// Function Engine.VisualLoggerKismetLibrary.EnableRecording
// Size: 0x1(Inherited: 0x0) 
struct FEnableRecording
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnabled : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.FMax
// Size: 0xC(Inherited: 0x0) 
struct FFMax
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetSystemLibrary.LoadClassAsset_Blocking
// Size: 0x30(Inherited: 0x0) 
struct FLoadClassAsset_Blocking
{
	struct TSoftClassPtr<UObject> AssetClass;  // 0x0(0x28)
	UObject* ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.PoseableMeshComponent.SetBoneRotationByName
// Size: 0x18(Inherited: 0x0) 
struct FSetBoneRotationByName
{
	struct FName BoneName;  // 0x0(0x8)
	struct FRotator InRotation;  // 0x8(0xC)
	char EBoneSpaces BoneSpace;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.PoseableMeshComponent.GetBoneTransformByName
// Size: 0x40(Inherited: 0x0) 
struct FGetBoneTransformByName
{
	struct FName BoneName;  // 0x0(0x8)
	char EBoneSpaces BoneSpace;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)
	struct FTransform ReturnValue;  // 0x10(0x30)

}; 
// ScriptStruct Engine.RepAttachment
// Size: 0x40(Inherited: 0x0) 
struct FRepAttachment
{
	struct AActor* AttachParent;  // 0x0(0x8)
	struct FVector_NetQuantize100 LocationOffset;  // 0x8(0xC)
	struct FVector_NetQuantize100 RelativeScale3D;  // 0x14(0xC)
	struct FRotator RotationOffset;  // 0x20(0xC)
	struct FName AttachSocket;  // 0x2C(0x8)
	char pad_52[4];  // 0x34(0x4)
	struct USceneComponent* AttachComponent;  // 0x38(0x8)

}; 
// Function Engine.KismetMathLibrary.Quat_VectorRight
// Size: 0x20(Inherited: 0x0) 
struct FQuat_VectorRight
{
	struct FQuat Q;  // 0x0(0x10)
	struct FVector ReturnValue;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.PlayerController.ClientSetSpectatorWaiting
// Size: 0x1(Inherited: 0x0) 
struct FClientSetSpectatorWaiting
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bWaiting : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.DrawToRenderTargetContext
// Size: 0x10(Inherited: 0x0) 
struct FDrawToRenderTargetContext
{
	struct UTextureRenderTarget2D* RenderTarget;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)

}; 
// Function Engine.KismetSystemLibrary.MakeLiteralBool
// Size: 0x2(Inherited: 0x0) 
struct FMakeLiteralBool
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool Value : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool ReturnValue : 1;  // 0x1(0x1)

}; 
// Function Engine.KismetSystemLibrary.QuitGame
// Size: 0x18(Inherited: 0x0) 
struct FQuitGame
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct APlayerController* SpecificPlayer;  // 0x8(0x8)
	char EQuitPreference QuitPreference;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bIgnorePlatformRestrictions : 1;  // 0x11(0x1)
	char pad_18[6];  // 0x12(0x6)

}; 
// Function Engine.PointLightComponent.SetSourceRadius
// Size: 0x4(Inherited: 0x0) 
struct FSetSourceRadius
{
	float bNewValue;  // 0x0(0x4)

}; 
// Function Engine.PlayerController.GetInputAnalogStickState
// Size: 0xC(Inherited: 0x0) 
struct FGetInputAnalogStickState
{
	char EControllerAnalogStick WhichStick;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float StickX;  // 0x4(0x4)
	float StickY;  // 0x8(0x4)

}; 
// Function Engine.KismetSystemLibrary.MakeLiteralByte
// Size: 0x2(Inherited: 0x0) 
struct FMakeLiteralByte
{
	char Value;  // 0x0(0x1)
	char ReturnValue;  // 0x1(0x1)

}; 
// Function Engine.AnimInstance.GetRelevantAnimTimeRemainingFraction
// Size: 0xC(Inherited: 0x0) 
struct FGetRelevantAnimTimeRemainingFraction
{
	int32_t MachineIndex;  // 0x0(0x4)
	int32_t StateIndex;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// ScriptStruct Engine.BlueprintMacroCosmeticInfo
// Size: 0x1(Inherited: 0x0) 
struct FBlueprintMacroCosmeticInfo
{
	char pad_0[1];  // 0x0(0x1)

}; 
// Function Engine.KismetSystemLibrary.MakeLiteralInt
// Size: 0x8(Inherited: 0x0) 
struct FMakeLiteralInt
{
	int32_t Value;  // 0x0(0x4)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.Actor.GetGameTimeSinceCreation
// Size: 0x4(Inherited: 0x0) 
struct FGetGameTimeSinceCreation
{
	float ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.RepRootMotionMontage
// Size: 0x98(Inherited: 0x0) 
struct FRepRootMotionMontage
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bIsActive : 1;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct UAnimMontage* AnimMontage;  // 0x8(0x8)
	float position;  // 0x10(0x4)
	struct FVector_NetQuantize100 Location;  // 0x14(0xC)
	struct FRotator Rotation;  // 0x20(0xC)
	char pad_44[4];  // 0x2C(0x4)
	struct UPrimitiveComponent* MovementBase;  // 0x30(0x8)
	struct FName MovementBaseBoneName;  // 0x38(0x8)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool bRelativePosition : 1;  // 0x40(0x1)
	char pad_65_1 : 7;  // 0x41(0x1)
	bool bRelativeRotation : 1;  // 0x41(0x1)
	char pad_66[6];  // 0x42(0x6)
	struct FRootMotionSourceGroup AuthoritativeRootMotion;  // 0x48(0x38)
	struct FVector_NetQuantize10 Acceleration;  // 0x80(0xC)
	struct FVector_NetQuantize10 LinearVelocity;  // 0x8C(0xC)

}; 
// Function Engine.KismetMathLibrary.Divide_Int64Int64
// Size: 0x18(Inherited: 0x0) 
struct FDivide_Int64Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	int64_t ReturnValue;  // 0x10(0x8)

}; 
// DelegateFunction Engine.OnSubmixSpectralAnalysis__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnSubmixSpectralAnalysis__DelegateSignature
{
	struct TArray<float> Magnitudes;  // 0x0(0x10)

}; 
// Function Engine.SkeletalMeshComponent.SetAllMotorsAngularPositionDrive
// Size: 0x3(Inherited: 0x0) 
struct FSetAllMotorsAngularPositionDrive
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnableSwingDrive : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bEnableTwistDrive : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool bSkipCustomPhysicsType : 1;  // 0x2(0x1)

}; 
// Function Engine.PlayerController.PlayHapticEffect
// Size: 0x18(Inherited: 0x0) 
struct FPlayHapticEffect
{
	struct UHapticFeedbackEffect_Base* HapticEffect;  // 0x0(0x8)
	uint8_t  Hand;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	float Scale;  // 0xC(0x4)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bLoop : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetSystemLibrary.MakeLiteralName
// Size: 0x10(Inherited: 0x0) 
struct FMakeLiteralName
{
	struct FName Value;  // 0x0(0x8)
	struct FName ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.GameplayStatics.ClearSoundMixClassOverride
// Size: 0x20(Inherited: 0x0) 
struct FClearSoundMixClassOverride
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct USoundMix* InSoundMixModifier;  // 0x8(0x8)
	struct USoundClass* InSoundClass;  // 0x10(0x8)
	float FadeOutTime;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// ScriptStruct Engine.UserActivity
// Size: 0x18(Inherited: 0x0) 
struct FUserActivity
{
	struct FString ActionName;  // 0x0(0x10)
	char pad_16[8];  // 0x10(0x8)

}; 
// ScriptStruct Engine.AudioQualitySettings
// Size: 0x20(Inherited: 0x0) 
struct FAudioQualitySettings
{
	struct FText DisplayName;  // 0x0(0x18)
	int32_t MaxChannels;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetSystemLibrary.MakeLiteralString
// Size: 0x20(Inherited: 0x0) 
struct FMakeLiteralString
{
	struct FString Value;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.RectLightComponent.SetSourceHeight
// Size: 0x4(Inherited: 0x0) 
struct FSetSourceHeight
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.MakeLiteralText
// Size: 0x30(Inherited: 0x0) 
struct FMakeLiteralText
{
	struct FText Value;  // 0x0(0x18)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.PlayerController.ClientGotoState
// Size: 0x8(Inherited: 0x0) 
struct FClientGotoState
{
	struct FName NewState;  // 0x0(0x8)

}; 
// ScriptStruct Engine.InputActionKeyMapping
// Size: 0x28(Inherited: 0x0) 
struct FInputActionKeyMapping
{
	struct FName ActionName;  // 0x0(0x8)
	char bShift : 1;  // 0x8(0x1)
	char bCtrl : 1;  // 0x8(0x1)
	char bAlt : 1;  // 0x8(0x1)
	char bCmd : 1;  // 0x8(0x1)
	char pad_8_1 : 4;  // 0x8(0x1)
	char pad_9[8];  // 0x9(0x8)
	struct FKey Key;  // 0x10(0x18)

}; 
// Function Engine.LightComponentBase.SetAffectGlobalIllumination
// Size: 0x1(Inherited: 0x0) 
struct FSetAffectGlobalIllumination
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.CheatManager.StreamLevelIn
// Size: 0x8(Inherited: 0x0) 
struct FStreamLevelIn
{
	struct FName PackageName;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.MakeSoftClassPath
// Size: 0x28(Inherited: 0x0) 
struct FMakeSoftClassPath
{
	struct FString PathString;  // 0x0(0x10)
	struct FSoftClassPath ReturnValue;  // 0x10(0x18)

}; 
// ScriptStruct Engine.BodyInstance
// Size: 0x158(Inherited: 0x18) 
struct FBodyInstance : public FBodyInstanceCore
{
	char pad_24[6];  // 0x18(0x6)
	char ECollisionChannel ObjectType;  // 0x1E(0x1)
	char pad_31[1];  // 0x1F(0x1)
	char ECollisionEnabled CollisionEnabled;  // 0x20(0x1)
	char pad_33[56];  // 0x21(0x38)
	uint8_t  SleepFamily;  // 0x59(0x1)
	char EDOFMode DOFMode;  // 0x5A(0x1)
	char bUseCCD : 1;  // 0x5B(0x1)
	char bIgnoreAnalyticCollisions : 1;  // 0x5B(0x1)
	char bNotifyRigidBodyCollision : 1;  // 0x5B(0x1)
	char pad_91_1 : 1;  // 0x5B(0x1)
	char bLockTranslation : 1;  // 0x5B(0x1)
	char bLockRotation : 1;  // 0x5B(0x1)
	char bLockXTranslation : 1;  // 0x5B(0x1)
	char bLockYTranslation : 1;  // 0x5B(0x1)
	char bLockZTranslation : 1;  // 0x5C(0x1)
	char bLockXRotation : 1;  // 0x5C(0x1)
	char bLockYRotation : 1;  // 0x5C(0x1)
	char bLockZRotation : 1;  // 0x5C(0x1)
	char bOverrideMaxAngularVelocity : 1;  // 0x5C(0x1)
	char pad_92_1 : 2;  // 0x5C(0x1)
	char bOverrideMaxDepenetrationVelocity : 1;  // 0x5C(0x1)
	char bOverrideWalkableSlopeOnInstance : 1;  // 0x5D(0x1)
	char bInterpolateWhenSubStepping : 1;  // 0x5D(0x1)
	char pad_93_1 : 6;  // 0x5D(0x1)
	char pad_94[15];  // 0x5E(0xF)
	struct FName CollisionProfileName;  // 0x6C(0x8)
	char PositionSolverIterationCount;  // 0x74(0x1)
	char VelocitySolverIterationCount;  // 0x75(0x1)
	char pad_118[2];  // 0x76(0x2)
	struct FCollisionResponse CollisionResponses;  // 0x78(0x30)
	float MaxDepenetrationVelocity;  // 0xA8(0x4)
	float MassInKgOverride;  // 0xAC(0x4)
	char pad_176[8];  // 0xB0(0x8)
	float LinearDamping;  // 0xB8(0x4)
	float AngularDamping;  // 0xBC(0x4)
	struct FVector CustomDOFPlaneNormal;  // 0xC0(0xC)
	struct FVector COMNudge;  // 0xCC(0xC)
	float MassScale;  // 0xD8(0x4)
	struct FVector InertiaTensorScale;  // 0xDC(0xC)
	char pad_232[16];  // 0xE8(0x10)
	struct FWalkableSlopeOverride WalkableSlopeOverride;  // 0xF8(0x10)
	struct UPhysicalMaterial* PhysMaterialOverride;  // 0x108(0x8)
	float MaxAngularVelocity;  // 0x110(0x4)
	float CustomSleepThresholdMultiplier;  // 0x114(0x4)
	float StabilizationThresholdMultiplier;  // 0x118(0x4)
	float PhysicsBlendWeight;  // 0x11C(0x4)
	char pad_288[56];  // 0x120(0x38)

}; 
// ScriptStruct Engine.PreviewAssetAttachContainer
// Size: 0x10(Inherited: 0x0) 
struct FPreviewAssetAttachContainer
{
	struct TArray<struct FPreviewAttachedObjectPair> AttachedObjects;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.GetMin2D
// Size: 0xC(Inherited: 0x0) 
struct FGetMin2D
{
	struct FVector2D A;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetSystemLibrary.MakeSoftObjectPath
// Size: 0x28(Inherited: 0x0) 
struct FMakeSoftObjectPath
{
	struct FString PathString;  // 0x0(0x10)
	struct FSoftObjectPath ReturnValue;  // 0x10(0x18)

}; 
// Function Engine.Actor.K2_AttachRootComponentToActor
// Size: 0x18(Inherited: 0x0) 
struct FK2_AttachRootComponentToActor
{
	struct AActor* InParentActor;  // 0x0(0x8)
	struct FName InSocketName;  // 0x8(0x8)
	char EAttachLocation AttachLocationType;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bWeldSimulatedBodies : 1;  // 0x11(0x1)
	char pad_18[6];  // 0x12(0x6)

}; 
// Function Engine.GameModeBase.InitStartSpot
// Size: 0x10(Inherited: 0x0) 
struct FInitStartSpot
{
	struct AActor* StartSpot;  // 0x0(0x8)
	struct AController* NewPlayer;  // 0x8(0x8)

}; 
// Function Engine.Character.ServerMoveDualHybridRootMotion
// Size: 0x58(Inherited: 0x0) 
struct FServerMoveDualHybridRootMotion
{
	float TimeStamp0;  // 0x0(0x4)
	struct FVector_NetQuantize10 InAccel0;  // 0x4(0xC)
	char PendingFlags;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	uint32_t View0;  // 0x14(0x4)
	float Timestamp;  // 0x18(0x4)
	struct FVector_NetQuantize10 InAccel;  // 0x1C(0xC)
	struct FVector_NetQuantize100 ClientLoc;  // 0x28(0xC)
	char NewFlags;  // 0x34(0x1)
	char ClientRoll;  // 0x35(0x1)
	char pad_54[2];  // 0x36(0x2)
	uint32_t View;  // 0x38(0x4)
	char pad_60[4];  // 0x3C(0x4)
	struct UPrimitiveComponent* ClientMovementBase;  // 0x40(0x8)
	struct FName ClientBaseBoneName;  // 0x48(0x8)
	char ClientMovementMode;  // 0x50(0x1)
	char pad_81[3];  // 0x51(0x3)
	float InCrouchedHalfHeight;  // 0x54(0x4)

}; 
// Function Engine.BlueprintPathsLibrary.NormalizeFilename
// Size: 0x20(Inherited: 0x0) 
struct FNormalizeFilename
{
	struct FString InPath;  // 0x0(0x10)
	struct FString OutPath;  // 0x10(0x10)

}; 
// ScriptStruct Engine.LightmassLightSettings
// Size: 0xC(Inherited: 0x0) 
struct FLightmassLightSettings
{
	float IndirectLightingSaturation;  // 0x0(0x4)
	float ShadowExponent;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bUseAreaShadowsForStationaryLight : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.SceneComponent.DoesSocketExist
// Size: 0xC(Inherited: 0x0) 
struct FDoesSocketExist
{
	struct FName InSocketName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.SkeletalMesh.GetSkeleton
// Size: 0x8(Inherited: 0x0) 
struct FGetSkeleton
{
	struct USkeleton* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.Actor.GetAttachParentSocketName
// Size: 0x8(Inherited: 0x0) 
struct FGetAttachParentSocketName
{
	struct FName ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.InputComponent.GetControllerMouseDelta
// Size: 0x8(Inherited: 0x0) 
struct FGetControllerMouseDelta
{
	float DeltaX;  // 0x0(0x4)
	float DeltaY;  // 0x4(0x4)

}; 
// Function Engine.KismetSystemLibrary.NotEqual_PrimaryAssetId
// Size: 0x24(Inherited: 0x0) 
struct FNotEqual_PrimaryAssetId
{
	struct FPrimaryAssetId A;  // 0x0(0x10)
	struct FPrimaryAssetId B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[3];  // 0x21(0x3)

}; 
// Function Engine.Character.ClientMoveResponsePacked
// Size: 0x98(Inherited: 0x0) 
struct FClientMoveResponsePacked
{
	struct FCharacterMoveResponsePackedBits PackedBits;  // 0x0(0x98)

}; 
// Function Engine.KismetSystemLibrary.SetVolumeButtonsHandledBySystem
// Size: 0x1(Inherited: 0x0) 
struct FSetVolumeButtonsHandledBySystem
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnabled : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.BatchedLine
// Size: 0x34(Inherited: 0x0) 
struct FBatchedLine
{
	struct FVector Start;  // 0x0(0xC)
	struct FVector End;  // 0xC(0xC)
	struct FLinearColor Color;  // 0x18(0x10)
	float Thickness;  // 0x28(0x4)
	float RemainingLifeTime;  // 0x2C(0x4)
	char DepthPriority;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)

}; 
// Function Engine.KismetSystemLibrary.NotEqual_SoftClassReference
// Size: 0x58(Inherited: 0x0) 
struct FNotEqual_SoftClassReference
{
	struct TSoftClassPtr<UObject> A;  // 0x0(0x28)
	struct TSoftClassPtr<UObject> B;  // 0x28(0x28)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool ReturnValue : 1;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)

}; 
// Function Engine.KismetSystemLibrary.PrintText
// Size: 0x38(Inherited: 0x0) 
struct FPrintText
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FText InText;  // 0x8(0x18)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool bPrintToScreen : 1;  // 0x20(0x1)
	char pad_33_1 : 7;  // 0x21(0x1)
	bool bPrintToLog : 1;  // 0x21(0x1)
	char pad_34[2];  // 0x22(0x2)
	struct FLinearColor TextColor;  // 0x24(0x10)
	float Duration;  // 0x34(0x4)

}; 
// ScriptStruct Engine.LevelViewportInfo
// Size: 0x20(Inherited: 0x0) 
struct FLevelViewportInfo
{
	struct FVector CamPosition;  // 0x0(0xC)
	struct FRotator CamRotation;  // 0xC(0xC)
	float CamOrthoZoom;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool CamUpdated : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// ScriptStruct Engine.CompositeSection
// Size: 0x58(Inherited: 0x30) 
struct FCompositeSection : public FAnimLinkableElement
{
	struct FName SectionName;  // 0x30(0x8)
	float StartTime;  // 0x38(0x4)
	struct FName NextSectionName;  // 0x3C(0x8)
	char pad_68[4];  // 0x44(0x4)
	struct TArray<struct UAnimMetaData*> MetaData;  // 0x48(0x10)

}; 
// Function Engine.KismetSystemLibrary.PrintWarning
// Size: 0x10(Inherited: 0x0) 
struct FPrintWarning
{
	struct FString inString;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.DaysInYear
// Size: 0x8(Inherited: 0x0) 
struct FDaysInYear
{
	int32_t Year;  // 0x0(0x4)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// ScriptStruct Engine.AnimTickRecord
// Size: 0x48(Inherited: 0x0) 
struct FAnimTickRecord
{
	struct UAnimationAsset* SourceAsset;  // 0x0(0x8)
	char pad_8[64];  // 0x8(0x40)

}; 
// Function Engine.PlayerController.ClientSetCameraFade
// Size: 0x18(Inherited: 0x0) 
struct FClientSetCameraFade
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnableFading : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FColor FadeColor;  // 0x4(0x4)
	struct FVector2D FadeAlpha;  // 0x8(0x8)
	float FadeTime;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bFadeAudio : 1;  // 0x14(0x1)
	char pad_21_1 : 7;  // 0x15(0x1)
	bool bHoldWhenFinished : 1;  // 0x15(0x1)
	char pad_22[2];  // 0x16(0x2)

}; 
// Function Engine.InstancedStaticMeshComponent.GetInstanceCount
// Size: 0x4(Inherited: 0x0) 
struct FGetInstanceCount
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.SplineComponent.GetLocalLocationAndTangentAtSplinePoint
// Size: 0x1C(Inherited: 0x0) 
struct FGetLocalLocationAndTangentAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	struct FVector LocalLocation;  // 0x4(0xC)
	struct FVector LocalTangent;  // 0x10(0xC)

}; 
// Function Engine.KismetSystemLibrary.RetriggerableDelay
// Size: 0x28(Inherited: 0x0) 
struct FRetriggerableDelay
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float Duration;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct FLatentActionInfo LatentInfo;  // 0x10(0x18)

}; 
// Function Engine.KismetMathLibrary.Vector_GetProjection
// Size: 0x18(Inherited: 0x0) 
struct FVector_GetProjection
{
	struct FVector A;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetSystemLibrary.SetBoolPropertyByName
// Size: 0x18(Inherited: 0x0) 
struct FSetBoolPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool Value : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetSystemLibrary.SetBytePropertyByName
// Size: 0x18(Inherited: 0x0) 
struct FSetBytePropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	char Value;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.CustomAttribute
// Size: 0x30(Inherited: 0x0) 
struct FCustomAttribute
{
	struct FName Name;  // 0x0(0x8)
	int32_t VariantType;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct TArray<float> Times;  // 0x10(0x10)
	char pad_32[16];  // 0x20(0x10)

}; 
// Function Engine.AnimNotify.Received_Notify
// Size: 0x18(Inherited: 0x0) 
struct FReceived_Notify
{
	struct USkeletalMeshComponent* MeshComp;  // 0x0(0x8)
	struct UAnimSequenceBase* Animation;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.EditorElement
// Size: 0x18(Inherited: 0x0) 
struct FEditorElement
{
	int32_t Indices[3];  // 0x0(0xC)
	float Weights[3];  // 0xC(0xC)

}; 
// Function Engine.KismetSystemLibrary.SetCollisionProfileNameProperty
// Size: 0x18(Inherited: 0x0) 
struct FSetCollisionProfileNameProperty
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct FCollisionProfileName Value;  // 0x10(0x8)

}; 
// Function Engine.GameplayStatics.AreSubtitlesEnabled
// Size: 0x1(Inherited: 0x0) 
struct FAreSubtitlesEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.CollisionProfileName
// Size: 0x8(Inherited: 0x0) 
struct FCollisionProfileName
{
	struct FName Name;  // 0x0(0x8)

}; 
// ScriptStruct Engine.MaterialParameterCollectionInfo
// Size: 0x18(Inherited: 0x0) 
struct FMaterialParameterCollectionInfo
{
	struct FGuid StateId;  // 0x0(0x10)
	struct UMaterialParameterCollection* ParameterCollection;  // 0x10(0x8)

}; 
// ScriptStruct Engine.PerPlatformFloat
// Size: 0x4(Inherited: 0x0) 
struct FPerPlatformFloat
{
	float Default;  // 0x0(0x4)

}; 
// Function Engine.Controller.ClientSetLocation
// Size: 0x18(Inherited: 0x0) 
struct FClientSetLocation
{
	struct FVector NewLocation;  // 0x0(0xC)
	struct FRotator NewRotation;  // 0xC(0xC)

}; 
// Function Engine.NavMovementComponent.IsMovingOnGround
// Size: 0x1(Inherited: 0x0) 
struct FIsMovingOnGround
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetStringLibrary.Right
// Size: 0x28(Inherited: 0x0) 
struct FRight
{
	struct FString SourceString;  // 0x0(0x10)
	int32_t Count;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct FString ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.AnimInstance.Montage_SetPlayRate
// Size: 0x10(Inherited: 0x0) 
struct FMontage_SetPlayRate
{
	struct UAnimMontage* Montage;  // 0x0(0x8)
	float NewPlayRate;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.TransformRotation
// Size: 0x50(Inherited: 0x0) 
struct FTransformRotation
{
	struct FTransform T;  // 0x0(0x30)
	struct FRotator Rotation;  // 0x30(0xC)
	struct FRotator ReturnValue;  // 0x3C(0xC)
	char pad_72[8];  // 0x48(0x8)

}; 
// Function Engine.Actor.SetActorScale3D
// Size: 0xC(Inherited: 0x0) 
struct FSetActorScale3D
{
	struct FVector NewScale3D;  // 0x0(0xC)

}; 
// ScriptStruct Engine.BlueprintInputTouchDelegateBinding
// Size: 0x10(Inherited: 0x4) 
struct FBlueprintInputTouchDelegateBinding : public FBlueprintInputDelegateBinding
{
	char EInputEvent InputKeyEvent;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FName FunctionNameToBind;  // 0x8(0x8)

}; 
// Function Engine.KismetSystemLibrary.SetFieldPathPropertyByName
// Size: 0x30(Inherited: 0x0) 
struct FSetFieldPathPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct TFieldPath<FNone> Value;  // 0x10(0x20)

}; 
// ScriptStruct Engine.SimpleCurveKey
// Size: 0x8(Inherited: 0x0) 
struct FSimpleCurveKey
{
	float Time;  // 0x0(0x4)
	float Value;  // 0x4(0x4)

}; 
// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationAtTime
// Size: 0x70(Inherited: 0x0) 
struct FScheduleLocalNotificationAtTime
{
	struct FDateTime FireDateTime;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool LocalTime : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)
	struct FText Title;  // 0x10(0x18)
	struct FText Body;  // 0x28(0x18)
	struct FText Action;  // 0x40(0x18)
	struct FString ActivationEvent;  // 0x58(0x10)
	int32_t ReturnValue;  // 0x68(0x4)
	char pad_108[4];  // 0x6C(0x4)

}; 
// Function Engine.KismetSystemLibrary.SetFloatPropertyByName
// Size: 0x18(Inherited: 0x0) 
struct FSetFloatPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	float Value;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// ScriptStruct Engine.InertializationBoneDiff
// Size: 0x3C(Inherited: 0x0) 
struct FInertializationBoneDiff
{
	char pad_0[60];  // 0x0(0x3C)

}; 
// ScriptStruct Engine.ResponseChannel
// Size: 0xC(Inherited: 0x0) 
struct FResponseChannel
{
	struct FName Channel;  // 0x0(0x8)
	char ECollisionResponse Response;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetSystemLibrary.SetGamepadsBlockDeviceFeedback
// Size: 0x1(Inherited: 0x0) 
struct FSetGamepadsBlockDeviceFeedback
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bBlock : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.QuartzPulseOverrideStep
// Size: 0x8(Inherited: 0x0) 
struct FQuartzPulseOverrideStep
{
	int32_t NumberOfPulses;  // 0x0(0x4)
	uint8_t  PulseDuration;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.KismetSystemLibrary.SetInt64PropertyByName
// Size: 0x18(Inherited: 0x0) 
struct FSetInt64PropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	int64_t Value;  // 0x10(0x8)

}; 
// Function Engine.DefaultPawn.MoveForward
// Size: 0x4(Inherited: 0x0) 
struct FMoveForward
{
	float Val;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.SetInterfacePropertyByName
// Size: 0x20(Inherited: 0x0) 
struct FSetInterfacePropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct TScriptInterface<IInterface> Value;  // 0x10(0x10)

}; 
// Function Engine.SplineComponent.SetTangentsAtSplinePoint
// Size: 0x20(Inherited: 0x0) 
struct FSetTangentsAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	struct FVector InArriveTangent;  // 0x4(0xC)
	struct FVector InLeaveTangent;  // 0x10(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x1C(0x1)
	char pad_29_1 : 7;  // 0x1D(0x1)
	bool bUpdateSpline : 1;  // 0x1D(0x1)
	char pad_30[2];  // 0x1E(0x2)

}; 
// Function Engine.LevelStreaming.GetLevelScriptActor
// Size: 0x8(Inherited: 0x0) 
struct FGetLevelScriptActor
{
	struct ALevelScriptActor* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.SceneComponent.IsVisible
// Size: 0x1(Inherited: 0x0) 
struct FIsVisible
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SkeletalMeshComponent.SetEnableGravityOnAllBodiesBelow
// Size: 0x10(Inherited: 0x0) 
struct FSetEnableGravityOnAllBodiesBelow
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnableGravity : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FName BoneName;  // 0x4(0x8)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bIncludeSelf : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.KismetSystemLibrary.SetIntPropertyByName
// Size: 0x18(Inherited: 0x0) 
struct FSetIntPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	int32_t Value;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.SkeletalMeshComponent.UnlinkAnimClassLayers
// Size: 0x8(Inherited: 0x0) 
struct FUnlinkAnimClassLayers
{
	UAnimInstance* InClass;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.SetLinearColorPropertyByName
// Size: 0x20(Inherited: 0x0) 
struct FSetLinearColorPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct FLinearColor Value;  // 0x10(0x10)

}; 
// Function Engine.HUD.Deproject
// Size: 0x20(Inherited: 0x0) 
struct FDeproject
{
	float ScreenX;  // 0x0(0x4)
	float ScreenY;  // 0x4(0x4)
	struct FVector WorldPosition;  // 0x8(0xC)
	struct FVector WorldDirection;  // 0x14(0xC)

}; 
// ScriptStruct Engine.AnimCurveType
// Size: 0x2(Inherited: 0x0) 
struct FAnimCurveType
{
	char pad_0[2];  // 0x0(0x2)

}; 
// ScriptStruct Engine.TimeStretchCurveInstance
// Size: 0x30(Inherited: 0x0) 
struct FTimeStretchCurveInstance
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bHasValidData : 1;  // 0x0(0x1)
	char pad_1[47];  // 0x1(0x2F)

}; 
// Function Engine.PlayerController.SetDisableHaptics
// Size: 0x1(Inherited: 0x0) 
struct FSetDisableHaptics
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewDisabled : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetSystemLibrary.SetNamePropertyByName
// Size: 0x18(Inherited: 0x0) 
struct FSetNamePropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct FName Value;  // 0x10(0x8)

}; 
// Function Engine.KismetStringLibrary.BuildString_Bool
// Size: 0x48(Inherited: 0x0) 
struct FBuildString_Bool
{
	struct FString AppendTo;  // 0x0(0x10)
	struct FString prefix;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool InBool : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)
	struct FString suffix;  // 0x28(0x10)
	struct FString ReturnValue;  // 0x38(0x10)

}; 
// ScriptStruct Engine.DirectoryPath
// Size: 0x10(Inherited: 0x0) 
struct FDirectoryPath
{
	struct FString Path;  // 0x0(0x10)

}; 
// Function Engine.SkeletalMesh.GetMaterials
// Size: 0x10(Inherited: 0x0) 
struct FGetMaterials
{
	struct TArray<struct FSkeletalMaterial> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.SkinnedMeshComponent.SetVertexColorOverride_LinearColor
// Size: 0x18(Inherited: 0x0) 
struct FSetVertexColorOverride_LinearColor
{
	int32_t LODIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct TArray<struct FLinearColor> VertexColors;  // 0x8(0x10)

}; 
// Function Engine.PoseableMeshComponent.SetBoneScaleByName
// Size: 0x18(Inherited: 0x0) 
struct FSetBoneScaleByName
{
	struct FName BoneName;  // 0x0(0x8)
	struct FVector InScale3D;  // 0x8(0xC)
	char EBoneSpaces BoneSpace;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.KismetSystemLibrary.SetSoftObjectPropertyByName
// Size: 0x38(Inherited: 0x0) 
struct FSetSoftObjectPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct TSoftObjectPtr<UObject> Value;  // 0x10(0x28)

}; 
// Function Engine.ParticleSystemComponent.CreateNamedDynamicMaterialInstance
// Size: 0x18(Inherited: 0x0) 
struct FCreateNamedDynamicMaterialInstance
{
	struct FName InName;  // 0x0(0x8)
	struct UMaterialInterface* SourceMaterial;  // 0x8(0x8)
	struct UMaterialInstanceDynamic* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.SceneComponent.K2_SetRelativeRotation
// Size: 0x9C(Inherited: 0x0) 
struct FK2_SetRelativeRotation
{
	struct FRotator NewRotation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// Function Engine.KismetSystemLibrary.SetStringPropertyByName
// Size: 0x20(Inherited: 0x0) 
struct FSetStringPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct FString Value;  // 0x10(0x10)

}; 
// Function Engine.Controller.GetDesiredRotation
// Size: 0xC(Inherited: 0x0) 
struct FGetDesiredRotation
{
	struct FRotator ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.Multiply_Vector2DFloat
// Size: 0x14(Inherited: 0x0) 
struct FMultiply_Vector2DFloat
{
	struct FVector2D A;  // 0x0(0x8)
	float B;  // 0x8(0x4)
	struct FVector2D ReturnValue;  // 0xC(0x8)

}; 
// Function Engine.HUD.RemoveDebugText
// Size: 0x10(Inherited: 0x0) 
struct FRemoveDebugText
{
	struct AActor* SrcActor;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bLeaveDurationText : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.CharacterMovementComponent.SetWalkableFloorAngle
// Size: 0x4(Inherited: 0x0) 
struct FSetWalkableFloorAngle
{
	float InWalkableFloorAngle;  // 0x0(0x4)

}; 
// ScriptStruct Engine.GenericStruct
// Size: 0x4(Inherited: 0x0) 
struct FGenericStruct
{
	int32_t Data;  // 0x0(0x4)

}; 
// Function Engine.StereoLayerComponent.GetPriority
// Size: 0x4(Inherited: 0x0) 
struct FGetPriority
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.SetTextPropertyByName
// Size: 0x28(Inherited: 0x0) 
struct FSetTextPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct FText Value;  // 0x10(0x18)

}; 
// Function Engine.TimelineComponent.GetPlayRate
// Size: 0x4(Inherited: 0x0) 
struct FGetPlayRate
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.SetVectorPropertyByName
// Size: 0x20(Inherited: 0x0) 
struct FSetVectorPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct FVector Value;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.SceneComponent.K2_SetWorldRotation
// Size: 0x9C(Inherited: 0x0) 
struct FK2_SetWorldRotation
{
	struct FRotator NewRotation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// Function Engine.KismetMathLibrary.ResetVectorSpringState
// Size: 0x18(Inherited: 0x0) 
struct FResetVectorSpringState
{
	struct FVectorSpringState SpringState;  // 0x0(0x18)

}; 
// Function Engine.KismetMathLibrary.Multiply_RotatorFloat
// Size: 0x1C(Inherited: 0x0) 
struct FMultiply_RotatorFloat
{
	struct FRotator A;  // 0x0(0xC)
	float B;  // 0xC(0x4)
	struct FRotator ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.SkeletalMeshComponent.GetFloatAttribute_Ref
// Size: 0x18(Inherited: 0x0) 
struct FGetFloatAttribute_Ref
{
	struct FName BoneName;  // 0x0(0x8)
	struct FName AttributeName;  // 0x8(0x8)
	float OutValue;  // 0x10(0x4)
	uint8_t  LookupType;  // 0x14(0x1)
	char pad_21_1 : 7;  // 0x15(0x1)
	bool ReturnValue : 1;  // 0x15(0x1)
	char pad_22[2];  // 0x16(0x2)

}; 
// Function Engine.Pawn.ReceivePossessed
// Size: 0x8(Inherited: 0x0) 
struct FReceivePossessed
{
	struct AController* NewController;  // 0x0(0x8)

}; 
// Function Engine.Actor.GetVerticalDistanceTo
// Size: 0x10(Inherited: 0x0) 
struct FGetVerticalDistanceTo
{
	struct AActor* OtherActor;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// ScriptStruct Engine.MaterialParameterInfo
// Size: 0x10(Inherited: 0x0) 
struct FMaterialParameterInfo
{
	struct FName Name;  // 0x0(0x8)
	char EMaterialParameterAssociation Association;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	int32_t Index;  // 0xC(0x4)

}; 
// Function Engine.KismetSystemLibrary.ShowAdBanner
// Size: 0x8(Inherited: 0x0) 
struct FShowAdBanner
{
	int32_t AdIdIndex;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bShowOnBottomOfScreen : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.TextRenderComponent.SetVertSpacingAdjust
// Size: 0x4(Inherited: 0x0) 
struct FSetVertSpacingAdjust
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.KismetSystemLibrary.ShowPlatformSpecificLeaderboardScreen
// Size: 0x10(Inherited: 0x0) 
struct FShowPlatformSpecificLeaderboardScreen
{
	struct FString CategoryName;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.FindLookAtRotation
// Size: 0x24(Inherited: 0x0) 
struct FFindLookAtRotation
{
	struct FVector Start;  // 0x0(0xC)
	struct FVector Target;  // 0xC(0xC)
	struct FRotator ReturnValue;  // 0x18(0xC)

}; 
// ScriptStruct Engine.AlphaBlend
// Size: 0x30(Inherited: 0x0) 
struct FAlphaBlend
{
	struct UCurveFloat* CustomCurve;  // 0x0(0x8)
	float BlendTime;  // 0x8(0x4)
	char pad_12[24];  // 0xC(0x18)
	uint8_t  BlendOption;  // 0x24(0x1)
	char pad_37[11];  // 0x25(0xB)

}; 
// Function Engine.BlueprintPathsLibrary.ChangeExtension
// Size: 0x30(Inherited: 0x0) 
struct FChangeExtension
{
	struct FString InPath;  // 0x0(0x10)
	struct FString InNewExtension;  // 0x10(0x10)
	struct FString ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.SkinnedMeshComponent.UnHideBoneByName
// Size: 0x8(Inherited: 0x0) 
struct FUnHideBoneByName
{
	struct FName BoneName;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.SnapshotObject
// Size: 0x8(Inherited: 0x0) 
struct FSnapshotObject
{
	struct UObject* Object;  // 0x0(0x8)

}; 
// Function Engine.KismetSystemLibrary.SphereOverlapActors
// Size: 0x58(Inherited: 0x0) 
struct FSphereOverlapActors
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector SpherePos;  // 0x8(0xC)
	float SphereRadius;  // 0x14(0x4)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x18(0x10)
	UObject* ActorClassFilter;  // 0x28(0x8)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x30(0x10)
	struct TArray<struct AActor*> OutActors;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool ReturnValue : 1;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)

}; 
// Function Engine.PrimitiveComponent.SetPhysicsLinearVelocity
// Size: 0x18(Inherited: 0x0) 
struct FSetPhysicsLinearVelocity
{
	struct FVector NewVel;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bAddToCurrent : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FName BoneName;  // 0x10(0x8)

}; 
// Function Engine.Actor.GetActorForwardVector
// Size: 0xC(Inherited: 0x0) 
struct FGetActorForwardVector
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.SplineComponent.FindDirectionClosestToWorldLocation
// Size: 0x1C(Inherited: 0x0) 
struct FFindDirectionClosestToWorldLocation
{
	struct FVector WorldLocation;  // 0x0(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// ScriptStruct Engine.RuntimeFloatCurve
// Size: 0x88(Inherited: 0x0) 
struct FRuntimeFloatCurve
{
	struct FRichCurve EditorCurveData;  // 0x0(0x80)
	struct UCurveFloat* ExternalCurve;  // 0x80(0x8)

}; 
// Function Engine.SplineComponent.GetDistanceAlongSplineAtSplinePoint
// Size: 0x8(Inherited: 0x0) 
struct FGetDistanceAlongSplineAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetSystemLibrary.SphereTraceMulti
// Size: 0x80(Inherited: 0x0) 
struct FSphereTraceMulti
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	float Radius;  // 0x20(0x4)
	char ETraceTypeQuery TraceChannel;  // 0x24(0x1)
	char pad_37_1 : 7;  // 0x25(0x1)
	bool bTraceComplex : 1;  // 0x25(0x1)
	char pad_38[2];  // 0x26(0x2)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x28(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)
	struct TArray<struct FHitResult> OutHits;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool bIgnoreSelf : 1;  // 0x50(0x1)
	char pad_81[3];  // 0x51(0x3)
	struct FLinearColor TraceColor;  // 0x54(0x10)
	struct FLinearColor TraceHitColor;  // 0x64(0x10)
	float DrawTime;  // 0x74(0x4)
	char pad_120_1 : 7;  // 0x78(0x1)
	bool ReturnValue : 1;  // 0x78(0x1)
	char pad_121[7];  // 0x79(0x7)

}; 
// Function Engine.KismetSystemLibrary.SphereTraceMultiForObjects
// Size: 0x98(Inherited: 0x0) 
struct FSphereTraceMultiForObjects
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	float Radius;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x28(0x10)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool bTraceComplex : 1;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x40(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)
	struct TArray<struct FHitResult> OutHits;  // 0x58(0x10)
	char pad_104_1 : 7;  // 0x68(0x1)
	bool bIgnoreSelf : 1;  // 0x68(0x1)
	char pad_105[3];  // 0x69(0x3)
	struct FLinearColor TraceColor;  // 0x6C(0x10)
	struct FLinearColor TraceHitColor;  // 0x7C(0x10)
	float DrawTime;  // 0x8C(0x4)
	char pad_144_1 : 7;  // 0x90(0x1)
	bool ReturnValue : 1;  // 0x90(0x1)
	char pad_145[7];  // 0x91(0x7)

}; 
// Function Engine.KismetStringLibrary.Conv_Vector2dToString
// Size: 0x18(Inherited: 0x0) 
struct FConv_Vector2dToString
{
	struct FVector2D InVec;  // 0x0(0x8)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetSystemLibrary.SphereTraceSingleByProfile
// Size: 0xF8(Inherited: 0x0) 
struct FSphereTraceSingleByProfile
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Start;  // 0x8(0xC)
	struct FVector End;  // 0x14(0xC)
	float Radius;  // 0x20(0x4)
	struct FName ProfileName;  // 0x24(0x8)
	char pad_44_1 : 7;  // 0x2C(0x1)
	bool bTraceComplex : 1;  // 0x2C(0x1)
	char pad_45[3];  // 0x2D(0x3)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x30(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)
	struct FHitResult OutHit;  // 0x44(0x88)
	char pad_204_1 : 7;  // 0xCC(0x1)
	bool bIgnoreSelf : 1;  // 0xCC(0x1)
	char pad_205[3];  // 0xCD(0x3)
	struct FLinearColor TraceColor;  // 0xD0(0x10)
	struct FLinearColor TraceHitColor;  // 0xE0(0x10)
	float DrawTime;  // 0xF0(0x4)
	char pad_244_1 : 7;  // 0xF4(0x1)
	bool ReturnValue : 1;  // 0xF4(0x1)
	char pad_245[3];  // 0xF5(0x3)

}; 
// Function Engine.KismetSystemLibrary.TickLatentActionsEditorOnly
// Size: 0x18(Inherited: 0x0) 
struct FTickLatentActionsEditorOnly
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UObject* Object;  // 0x8(0x8)
	float dTime;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.CheatManager.DestroyAll
// Size: 0x8(Inherited: 0x0) 
struct FDestroyAll
{
	AActor* aClass;  // 0x0(0x8)

}; 
// ScriptStruct Engine.CachedAnimStateArray
// Size: 0x18(Inherited: 0x0) 
struct FCachedAnimStateArray
{
	struct TArray<struct FCachedAnimStateData> states;  // 0x0(0x10)
	char pad_16[8];  // 0x10(0x8)

}; 
// Function Engine.KismetSystemLibrary.TransactObject
// Size: 0x8(Inherited: 0x0) 
struct FTransactObject
{
	struct UObject* Object;  // 0x0(0x8)

}; 
// Function Engine.Actor.GetParentActor
// Size: 0x8(Inherited: 0x0) 
struct FGetParentActor
{
	struct AActor* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.Actor.IsActorTickEnabled
// Size: 0x1(Inherited: 0x0) 
struct FIsActorTickEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.Multiply_Int64Int64
// Size: 0x18(Inherited: 0x0) 
struct FMultiply_Int64Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	int64_t ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetSystemLibrary.UnloadPrimaryAssetList
// Size: 0x10(Inherited: 0x0) 
struct FUnloadPrimaryAssetList
{
	struct TArray<struct FPrimaryAssetId> PrimaryAssetIdList;  // 0x0(0x10)

}; 
// DelegateFunction Engine.ParticleSpawnSignature__DelegateSignature
// Size: 0x24(Inherited: 0x0) 
struct FParticleSpawnSignature__DelegateSignature
{
	struct FName EventName;  // 0x0(0x8)
	float EmitterTime;  // 0x8(0x4)
	struct FVector Location;  // 0xC(0xC)
	struct FVector Velocity;  // 0x18(0xC)

}; 
// Function Engine.NavMovementComponent.IsSwimming
// Size: 0x1(Inherited: 0x0) 
struct FIsSwimming
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// DelegateFunction Engine.ParticleBurstSignature__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FParticleBurstSignature__DelegateSignature
{
	struct FName EventName;  // 0x0(0x8)
	float EmitterTime;  // 0x8(0x4)
	int32_t ParticleCount;  // 0xC(0x4)

}; 
// Function Engine.Actor.IsActorBeingDestroyed
// Size: 0x1(Inherited: 0x0) 
struct FIsActorBeingDestroyed
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.TransformCurve
// Size: 0x4E0(Inherited: 0x18) 
struct FTransformCurve : public FAnimCurveBase
{
	struct FVectorCurve TranslationCurve;  // 0x18(0x198)
	struct FVectorCurve RotationCurve;  // 0x1B0(0x198)
	struct FVectorCurve ScaleCurve;  // 0x348(0x198)

}; 
// DelegateFunction Engine.OnSystemFinished__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FOnSystemFinished__DelegateSignature
{
	struct UParticleSystemComponent* PSystem;  // 0x0(0x8)

}; 
// Function Engine.GameUserSettings.GetDefaultWindowMode
// Size: 0x1(Inherited: 0x0) 
struct FGetDefaultWindowMode
{
	char EWindowMode ReturnValue;  // 0x0(0x1)

}; 
// Function Engine.GameModeBase.ChoosePlayerStart
// Size: 0x10(Inherited: 0x0) 
struct FChoosePlayerStart
{
	struct AController* Player;  // 0x0(0x8)
	struct AActor* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.PrimitiveComponent.SetCustomPrimitiveDataVector3
// Size: 0x10(Inherited: 0x0) 
struct FSetCustomPrimitiveDataVector3
{
	int32_t DataIndex;  // 0x0(0x4)
	struct FVector Value;  // 0x4(0xC)

}; 
// ScriptStruct Engine.ClusterNode_DEPRECATED
// Size: 0x28(Inherited: 0x0) 
struct FClusterNode_DEPRECATED
{
	struct FVector BoundMin;  // 0x0(0xC)
	int32_t FirstChild;  // 0xC(0x4)
	struct FVector BoundMax;  // 0x10(0xC)
	int32_t LastChild;  // 0x1C(0x4)
	int32_t FirstInstance;  // 0x20(0x4)
	int32_t LastInstance;  // 0x24(0x4)

}; 
// DelegateFunction Engine.OnSubmixRecordedFileDone__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FOnSubmixRecordedFileDone__DelegateSignature
{
	struct USoundWave* ResultingSoundWave;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector_IsUnit
// Size: 0x14(Inherited: 0x0) 
struct FVector_IsUnit
{
	struct FVector A;  // 0x0(0xC)
	float SquaredLenthTolerance;  // 0xC(0x4)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.Actor.K2_OnEndViewTarget
// Size: 0x8(Inherited: 0x0) 
struct FK2_OnEndViewTarget
{
	struct APlayerController* PC;  // 0x0(0x8)

}; 
// Function Engine.SkinnedMeshComponent.SetSkeletalMesh
// Size: 0x10(Inherited: 0x0) 
struct FSetSkeletalMesh
{
	struct USkeletalMesh* NewMesh;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bReinitPose : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// DelegateFunction Engine.OnSubmixEnvelope__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnSubmixEnvelope__DelegateSignature
{
	struct TArray<float> Envelope;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.VLerp
// Size: 0x28(Inherited: 0x0) 
struct FVLerp
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	float Alpha;  // 0x18(0x4)
	struct FVector ReturnValue;  // 0x1C(0xC)

}; 
// Function Engine.PrimitiveComponent.SetUseCCD
// Size: 0xC(Inherited: 0x0) 
struct FSetUseCCD
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool InUseCCD : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FName BoneName;  // 0x4(0x8)

}; 
// Function Engine.CapsuleComponent.SetCapsuleHalfHeight
// Size: 0x8(Inherited: 0x0) 
struct FSetCapsuleHalfHeight
{
	float HalfHeight;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bUpdateOverlaps : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.Actor.FinishAddComponent
// Size: 0x40(Inherited: 0x0) 
struct FFinishAddComponent
{
	struct UActorComponent* Component;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bManualAttachment : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)
	struct FTransform RelativeTransform;  // 0x10(0x30)

}; 
// Function Engine.SplineComponent.GetLocationAndTangentAtSplinePoint
// Size: 0x20(Inherited: 0x0) 
struct FGetLocationAndTangentAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	struct FVector Location;  // 0x4(0xC)
	struct FVector Tangent;  // 0x10(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// Function Engine.KismetMathLibrary.Conv_TransformToMatrix
// Size: 0x70(Inherited: 0x0) 
struct FConv_TransformToMatrix
{
	struct FTransform Transform;  // 0x0(0x30)
	struct FMatrix ReturnValue;  // 0x30(0x40)

}; 
// DelegateFunction Engine.OnPrimaryAssetLoaded__DelegateSignature
// Size: 0x8(Inherited: 0x0) 
struct FOnPrimaryAssetLoaded__DelegateSignature
{
	struct UObject* Loaded;  // 0x0(0x8)

}; 
// Function Engine.PrimitiveComponent.SetVisibleInSceneCaptureOnly
// Size: 0x1(Inherited: 0x0) 
struct FSetVisibleInSceneCaptureOnly
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.SetMaterialByName
// Size: 0x10(Inherited: 0x0) 
struct FSetMaterialByName
{
	struct FName MaterialSlotName;  // 0x0(0x8)
	struct UMaterialInterface* Material;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Greater_Int64Int64
// Size: 0x18(Inherited: 0x0) 
struct FGreater_Int64Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// DelegateFunction Engine.OnPrimaryAssetListLoaded__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnPrimaryAssetListLoaded__DelegateSignature
{
	struct TArray<struct UObject*> Loaded;  // 0x0(0x10)

}; 
// DelegateFunction Engine.OnPrimaryAssetClassListLoaded__DelegateSignature
// Size: 0x10(Inherited: 0x0) 
struct FOnPrimaryAssetClassListLoaded__DelegateSignature
{
	struct TArray<UObject*> Loaded;  // 0x0(0x10)

}; 
// Function Engine.Actor.AddComponent
// Size: 0x60(Inherited: 0x0) 
struct FAddComponent
{
	struct FName TemplateName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bManualAttachment : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)
	struct FTransform RelativeTransform;  // 0x10(0x30)
	struct UObject* ComponentTemplateContext;  // 0x40(0x8)
	char pad_72_1 : 7;  // 0x48(0x1)
	bool bDeferredFinish : 1;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	struct UActorComponent* ReturnValue;  // 0x50(0x8)
	char pad_88[8];  // 0x58(0x8)

}; 
// Function Engine.Actor.AddComponentByClass
// Size: 0x50(Inherited: 0x0) 
struct FAddComponentByClass
{
	UActorComponent* Class;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bManualAttachment : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)
	struct FTransform RelativeTransform;  // 0x10(0x30)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool bDeferredFinish : 1;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)
	struct UActorComponent* ReturnValue;  // 0x48(0x8)

}; 
// Function Engine.Actor.GetActorEyesViewPoint
// Size: 0x18(Inherited: 0x0) 
struct FGetActorEyesViewPoint
{
	struct FVector OutLocation;  // 0x0(0xC)
	struct FRotator OutRotation;  // 0xC(0xC)

}; 
// ScriptStruct Engine.RootMotionSource_RadialForce
// Size: 0xE0(Inherited: 0xA0) 
struct FRootMotionSource_RadialForce : public FRootMotionSource
{
	struct FVector Location;  // 0x98(0xC)
	struct AActor* LocationActor;  // 0xA8(0x8)
	float Radius;  // 0xB0(0x4)
	float Strength;  // 0xB4(0x4)
	char pad_188_1 : 7;  // 0xBC(0x1)
	bool bIsPush : 1;  // 0xB8(0x1)
	char pad_189_1 : 7;  // 0xBD(0x1)
	bool bNoZForce : 1;  // 0xB9(0x1)
	char pad_190[2];  // 0xBE(0x2)
	struct UCurveFloat* StrengthDistanceFalloff;  // 0xC0(0x8)
	struct UCurveFloat* StrengthOverTime;  // 0xC8(0x8)
	char pad_208_1 : 7;  // 0xD0(0x1)
	bool bUseFixedWorldDirection : 1;  // 0xD0(0x1)
	char pad_209[3];  // 0xD1(0x3)
	struct FRotator FixedWorldDirection;  // 0xD4(0xC)

}; 
// Function Engine.KismetInputLibrary.Key_IsDigital
// Size: 0x20(Inherited: 0x0) 
struct FKey_IsDigital
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.Actor.ReceiveActorOnClicked
// Size: 0x18(Inherited: 0x0) 
struct FReceiveActorOnClicked
{
	struct FKey ButtonPressed;  // 0x0(0x18)

}; 
// Function Engine.Actor.K2_AddActorWorldRotation
// Size: 0x9C(Inherited: 0x0) 
struct FK2_AddActorWorldRotation
{
	struct FRotator DeltaRotation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// Function Engine.Actor.GetActorRightVector
// Size: 0xC(Inherited: 0x0) 
struct FGetActorRightVector
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.Actor.GetActorScale3D
// Size: 0xC(Inherited: 0x0) 
struct FGetActorScale3D
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.BlueprintPathsLibrary.ProjectConfigDir
// Size: 0x10(Inherited: 0x0) 
struct FProjectConfigDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.Actor.GetActorTimeDilation
// Size: 0x4(Inherited: 0x0) 
struct FGetActorTimeDilation
{
	float ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.WeightedBlendable
// Size: 0x10(Inherited: 0x0) 
struct FWeightedBlendable
{
	float Weight;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct UObject* Object;  // 0x8(0x8)

}; 
// Function Engine.GameModeBase.MustSpectate
// Size: 0x10(Inherited: 0x0) 
struct FMustSpectate
{
	struct APlayerController* NewPlayerController;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.SceneComponent.K2_SetWorldTransform
// Size: 0xC0(Inherited: 0x0) 
struct FK2_SetWorldTransform
{
	struct FTransform NewTransform;  // 0x0(0x30)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bSweep : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	struct FHitResult SweepHitResult;  // 0x34(0x88)
	char pad_188_1 : 7;  // 0xBC(0x1)
	bool bTeleport : 1;  // 0xBC(0x1)
	char pad_189[3];  // 0xBD(0x3)

}; 
// ScriptStruct Engine.SoundWaveSpectralDataPerSound
// Size: 0x20(Inherited: 0x0) 
struct FSoundWaveSpectralDataPerSound
{
	struct TArray<struct FSoundWaveSpectralData> SpectralData;  // 0x0(0x10)
	float PlaybackTime;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct USoundWave* SoundWave;  // 0x18(0x8)

}; 
// Function Engine.Actor.GetActorUpVector
// Size: 0xC(Inherited: 0x0) 
struct FGetActorUpVector
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetTextLibrary.AsTimeZoneDate_DateTime
// Size: 0x30(Inherited: 0x0) 
struct FAsTimeZoneDate_DateTime
{
	struct FDateTime InDateTime;  // 0x0(0x8)
	struct FString InTimeZone;  // 0x8(0x10)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.Actor.GetAllChildActors
// Size: 0x18(Inherited: 0x0) 
struct FGetAllChildActors
{
	struct TArray<struct AActor*> ChildActors;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bIncludeDescendants : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.AssetManagerRedirect
// Size: 0x20(Inherited: 0x0) 
struct FAssetManagerRedirect
{
	struct FString Old;  // 0x0(0x10)
	struct FString New;  // 0x10(0x10)

}; 
// Function Engine.PointLight.SetLightFalloffExponent
// Size: 0x4(Inherited: 0x0) 
struct FSetLightFalloffExponent
{
	float NewLightFalloffExponent;  // 0x0(0x4)

}; 
// ScriptStruct Engine.ConstraintProfileProperties
// Size: 0x114(Inherited: 0x0) 
struct FConstraintProfileProperties
{
	float ProjectionLinearTolerance;  // 0x0(0x4)
	float ProjectionAngularTolerance;  // 0x4(0x4)
	float ProjectionLinearAlpha;  // 0x8(0x4)
	float ProjectionAngularAlpha;  // 0xC(0x4)
	float LinearBreakThreshold;  // 0x10(0x4)
	float LinearPlasticityThreshold;  // 0x14(0x4)
	float AngularBreakThreshold;  // 0x18(0x4)
	float AngularPlasticityThreshold;  // 0x1C(0x4)
	struct FLinearConstraint LinearLimit;  // 0x20(0x1C)
	struct FConeConstraint ConeLimit;  // 0x3C(0x20)
	struct FTwistConstraint TwistLimit;  // 0x5C(0x1C)
	struct FLinearDriveConstraint LinearDrive;  // 0x78(0x4C)
	struct FAngularDriveConstraint AngularDrive;  // 0xC4(0x4C)
	char bDisableCollision : 1;  // 0x110(0x1)
	char bParentDominates : 1;  // 0x110(0x1)
	char bEnableProjection : 1;  // 0x110(0x1)
	char bEnableSoftProjection : 1;  // 0x110(0x1)
	char bAngularBreakable : 1;  // 0x110(0x1)
	char bAngularPlasticity : 1;  // 0x110(0x1)
	char bLinearBreakable : 1;  // 0x110(0x1)
	char bLinearPlasticity : 1;  // 0x110(0x1)
	char pad_273[3];  // 0x111(0x3)

}; 
// Function Engine.Actor.GetAttachedActors
// Size: 0x18(Inherited: 0x0) 
struct FGetAttachedActors
{
	struct TArray<struct AActor*> OutActors;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bResetArray : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.Actor.GetComponentByClass
// Size: 0x10(Inherited: 0x0) 
struct FGetComponentByClass
{
	UActorComponent* ComponentClass;  // 0x0(0x8)
	struct UActorComponent* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.GameplayStatics.SetSubtitlesEnabled
// Size: 0x1(Inherited: 0x0) 
struct FSetSubtitlesEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnabled : 1;  // 0x0(0x1)

}; 
// Function Engine.Actor.GetComponentsByInterface
// Size: 0x18(Inherited: 0x0) 
struct FGetComponentsByInterface
{
	UInterface* Interface;  // 0x0(0x8)
	struct TArray<struct UActorComponent*> ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.Light.SetCastShadows
// Size: 0x1(Inherited: 0x0) 
struct FSetCastShadows
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.SetCustomPrimitiveDataFloat
// Size: 0x8(Inherited: 0x0) 
struct FSetCustomPrimitiveDataFloat
{
	int32_t DataIndex;  // 0x0(0x4)
	float Value;  // 0x4(0x4)

}; 
// Function Engine.Actor.GetHorizontalDistanceTo
// Size: 0x10(Inherited: 0x0) 
struct FGetHorizontalDistanceTo
{
	struct AActor* OtherActor;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.PrimitiveComponent.IsOverlappingActor
// Size: 0x10(Inherited: 0x0) 
struct FIsOverlappingActor
{
	struct AActor* Other;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.ParticleSystemComponent.GetNamedMaterial
// Size: 0x10(Inherited: 0x0) 
struct FGetNamedMaterial
{
	struct FName InName;  // 0x0(0x8)
	struct UMaterialInterface* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.Controller.IsLocalPlayerController
// Size: 0x1(Inherited: 0x0) 
struct FIsLocalPlayerController
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SceneComponent.K2_GetComponentRotation
// Size: 0xC(Inherited: 0x0) 
struct FK2_GetComponentRotation
{
	struct FRotator ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.Actor.ReceiveActorOnInputTouchLeave
// Size: 0x1(Inherited: 0x0) 
struct FReceiveActorOnInputTouchLeave
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)

}; 
// Function Engine.Actor.GetTickableWhenPaused
// Size: 0x1(Inherited: 0x0) 
struct FGetTickableWhenPaused
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.Actor.GetInputAxisKeyValue
// Size: 0x20(Inherited: 0x0) 
struct FGetInputAxisKeyValue
{
	struct FKey InputAxisKey;  // 0x0(0x18)
	float ReturnValue;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.LightComponentBase.SetCastVolumetricShadow
// Size: 0x1(Inherited: 0x0) 
struct FSetCastVolumetricShadow
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.Not_Int
// Size: 0x8(Inherited: 0x0) 
struct FNot_Int
{
	int32_t A;  // 0x0(0x4)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// ScriptStruct Engine.PaintedVertex
// Size: 0x20(Inherited: 0x0) 
struct FPaintedVertex
{
	struct FVector position;  // 0x0(0xC)
	struct FColor Color;  // 0xC(0x4)
	struct FVector4 Normal;  // 0x10(0x10)

}; 
// Function Engine.FXSystemComponent.GetFXSystemAsset
// Size: 0x8(Inherited: 0x0) 
struct FGetFXSystemAsset
{
	struct UFXSystemAsset* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetTextLibrary.TextToUpper
// Size: 0x30(Inherited: 0x0) 
struct FTextToUpper
{
	struct FText InText;  // 0x0(0x18)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.Actor.GetInputAxisValue
// Size: 0xC(Inherited: 0x0) 
struct FGetInputAxisValue
{
	struct FName InputAxisName;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.Actor.GetInstigator
// Size: 0x8(Inherited: 0x0) 
struct FGetInstigator
{
	struct APawn* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.Actor.K2_GetActorLocation
// Size: 0xC(Inherited: 0x0) 
struct FK2_GetActorLocation
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.SplineComponent.GetTangentAtSplinePoint
// Size: 0x14(Inherited: 0x0) 
struct FGetTangentAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.Actor.GetLocalRole
// Size: 0x1(Inherited: 0x0) 
struct FGetLocalRole
{
	char ENetRole ReturnValue;  // 0x0(0x1)

}; 
// Function Engine.MaterialInstanceDynamic.CopyParameterOverrides
// Size: 0x8(Inherited: 0x0) 
struct FCopyParameterOverrides
{
	struct UMaterialInstance* MaterialInstance;  // 0x0(0x8)

}; 
// Function Engine.ImportanceSamplingLibrary.NextSobolCell3D
// Size: 0x20(Inherited: 0x0) 
struct FNextSobolCell3D
{
	int32_t Index;  // 0x0(0x4)
	int32_t NumCells;  // 0x4(0x4)
	struct FVector PreviousValue;  // 0x8(0xC)
	struct FVector ReturnValue;  // 0x14(0xC)

}; 
// Function Engine.PrimitiveComponent.GetOverlappingActors
// Size: 0x18(Inherited: 0x0) 
struct FGetOverlappingActors
{
	struct TArray<struct AActor*> OverlappingActors;  // 0x0(0x10)
	AActor* ClassFilter;  // 0x10(0x8)

}; 
// Function Engine.AnimInstance.GetActiveCurveNames
// Size: 0x18(Inherited: 0x0) 
struct FGetActiveCurveNames
{
	uint8_t  curveType;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct TArray<struct FName> OutNames;  // 0x8(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.GetRelativePathToRoot
// Size: 0x10(Inherited: 0x0) 
struct FGetRelativePathToRoot
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.Actor.GetRemoteRole
// Size: 0x1(Inherited: 0x0) 
struct FGetRemoteRole
{
	char ENetRole ReturnValue;  // 0x0(0x1)

}; 
// Function Engine.SkeletalMeshComponent.GetBoneMass
// Size: 0x10(Inherited: 0x0) 
struct FGetBoneMass
{
	struct FName BoneName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bScaleMass : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.CharacterMovementComponent.SetGroupsToIgnore
// Size: 0x4(Inherited: 0x0) 
struct FSetGroupsToIgnore
{
	int32_t GroupFlags;  // 0x0(0x4)

}; 
// Function Engine.Character.ClientVeryShortAdjustPosition
// Size: 0x28(Inherited: 0x0) 
struct FClientVeryShortAdjustPosition
{
	float Timestamp;  // 0x0(0x4)
	struct FVector NewLoc;  // 0x4(0xC)
	struct UPrimitiveComponent* NewBase;  // 0x10(0x8)
	struct FName NewBaseBoneName;  // 0x18(0x8)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool bHasBase : 1;  // 0x20(0x1)
	char pad_33_1 : 7;  // 0x21(0x1)
	bool bBaseRelativePosition : 1;  // 0x21(0x1)
	char ServerMovementMode;  // 0x22(0x1)
	char pad_35[5];  // 0x23(0x5)

}; 
// ScriptStruct Engine.AnimNode_SequencePlayer
// Size: 0x80(Inherited: 0x38) 
struct FAnimNode_SequencePlayer : public FAnimNode_AssetPlayerBase
{
	struct UAnimSequenceBase* Sequence;  // 0x38(0x8)
	float PlayRateBasis;  // 0x40(0x4)
	float PlayRate;  // 0x44(0x4)
	struct FInputScaleBiasClamp PlayRateScaleBiasClamp;  // 0x48(0x30)
	float StartPosition;  // 0x78(0x4)
	char pad_124_1 : 7;  // 0x7C(0x1)
	bool bLoopAnimation : 1;  // 0x7C(0x1)
	char pad_125[3];  // 0x7D(0x3)

}; 
// Function Engine.Actor.HasAuthority
// Size: 0x1(Inherited: 0x0) 
struct FHasAuthority
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.Actor.K2_AddActorLocalRotation
// Size: 0x9C(Inherited: 0x0) 
struct FK2_AddActorLocalRotation
{
	struct FRotator DeltaRotation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// Function Engine.SceneComponent.K2_AddWorldRotation
// Size: 0x9C(Inherited: 0x0) 
struct FK2_AddWorldRotation
{
	struct FRotator DeltaRotation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// Function Engine.Actor.K2_AddActorLocalTransform
// Size: 0xC0(Inherited: 0x0) 
struct FK2_AddActorLocalTransform
{
	struct FTransform NewTransform;  // 0x0(0x30)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bSweep : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	struct FHitResult SweepHitResult;  // 0x34(0x88)
	char pad_188_1 : 7;  // 0xBC(0x1)
	bool bTeleport : 1;  // 0xBC(0x1)
	char pad_189[3];  // 0xBD(0x3)

}; 
// Function Engine.SceneComponent.K2_AddWorldTransform
// Size: 0xC0(Inherited: 0x0) 
struct FK2_AddWorldTransform
{
	struct FTransform DeltaTransform;  // 0x0(0x30)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bSweep : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	struct FHitResult SweepHitResult;  // 0x34(0x88)
	char pad_188_1 : 7;  // 0xBC(0x1)
	bool bTeleport : 1;  // 0xBC(0x1)
	char pad_189[3];  // 0xBD(0x3)

}; 
// Function Engine.KismetInputLibrary.Key_IsValid
// Size: 0x20(Inherited: 0x0) 
struct FKey_IsValid
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.Key_GetNavigationDirectionFromKey
// Size: 0x40(Inherited: 0x0) 
struct FKey_GetNavigationDirectionFromKey
{
	struct FKeyEvent InKeyEvent;  // 0x0(0x38)
	uint8_t  ReturnValue;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 
// Function Engine.GameModeBase.PlayerCanRestart
// Size: 0x10(Inherited: 0x0) 
struct FPlayerCanRestart
{
	struct APlayerController* Player;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.HUD.GetOwningPawn
// Size: 0x8(Inherited: 0x0) 
struct FGetOwningPawn
{
	struct APawn* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.Actor.K2_AddActorWorldTransform
// Size: 0xC0(Inherited: 0x0) 
struct FK2_AddActorWorldTransform
{
	struct FTransform DeltaTransform;  // 0x0(0x30)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bSweep : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	struct FHitResult SweepHitResult;  // 0x34(0x88)
	char pad_188_1 : 7;  // 0xBC(0x1)
	bool bTeleport : 1;  // 0xBC(0x1)
	char pad_189[3];  // 0xBD(0x3)

}; 
// Function Engine.KismetMathLibrary.FloatSpringInterp
// Size: 0x24(Inherited: 0x0) 
struct FFloatSpringInterp
{
	float Current;  // 0x0(0x4)
	float Target;  // 0x4(0x4)
	struct FFloatSpringState SpringState;  // 0x8(0x8)
	float Stiffness;  // 0x10(0x4)
	float CriticalDampingFactor;  // 0x14(0x4)
	float DeltaTime;  // 0x18(0x4)
	float Mass;  // 0x1C(0x4)
	float ReturnValue;  // 0x20(0x4)

}; 
// Function Engine.Canvas.K2_DrawTexture
// Size: 0x48(Inherited: 0x0) 
struct FK2_DrawTexture
{
	struct UTexture* RenderTexture;  // 0x0(0x8)
	struct FVector2D screenPosition;  // 0x8(0x8)
	struct FVector2D ScreenSize;  // 0x10(0x8)
	struct FVector2D CoordinatePosition;  // 0x18(0x8)
	struct FVector2D CoordinateSize;  // 0x20(0x8)
	struct FLinearColor RenderColor;  // 0x28(0x10)
	char EBlendMode BlendMode;  // 0x38(0x1)
	char pad_57[3];  // 0x39(0x3)
	float Rotation;  // 0x3C(0x4)
	struct FVector2D PivotPoint;  // 0x40(0x8)

}; 
// ScriptStruct Engine.AnimMontageInstance
// Size: 0x1B0(Inherited: 0x0) 
struct FAnimMontageInstance
{
	struct UAnimMontage* Montage;  // 0x0(0x8)
	char pad_8[32];  // 0x8(0x20)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bPlaying : 1;  // 0x28(0x1)
	char pad_41[3];  // 0x29(0x3)
	float DefaultBlendTimeMultiplier;  // 0x2C(0x4)
	char pad_48[184];  // 0x30(0xB8)
	struct TArray<int32_t> NextSections;  // 0xE8(0x10)
	struct TArray<int32_t> PrevSections;  // 0xF8(0x10)
	char pad_264[16];  // 0x108(0x10)
	struct TArray<struct FAnimNotifyEvent> ActiveStateBranchingPoints;  // 0x118(0x10)
	float position;  // 0x128(0x4)
	float PlayRate;  // 0x12C(0x4)
	struct FAlphaBlend Blend;  // 0x130(0x30)
	char pad_352[44];  // 0x160(0x2C)
	int32_t DisableRootMotionCount;  // 0x18C(0x4)
	char pad_400[32];  // 0x190(0x20)

}; 
// Function Engine.SplineMeshComponent.SetEndScale
// Size: 0xC(Inherited: 0x0) 
struct FSetEndScale
{
	struct FVector2D EndScale;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bUpdateMesh : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.PlayerController.ClientAddTextureStreamingLoc
// Size: 0x14(Inherited: 0x0) 
struct FClientAddTextureStreamingLoc
{
	struct FVector InLoc;  // 0x0(0xC)
	float Duration;  // 0xC(0x4)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bOverrideLocation : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.KismetMathLibrary.Greater_FloatFloat
// Size: 0xC(Inherited: 0x0) 
struct FGreater_FloatFloat
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.Actor.K2_AddActorWorldTransformKeepScale
// Size: 0xC0(Inherited: 0x0) 
struct FK2_AddActorWorldTransformKeepScale
{
	struct FTransform DeltaTransform;  // 0x0(0x30)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bSweep : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	struct FHitResult SweepHitResult;  // 0x34(0x88)
	char pad_188_1 : 7;  // 0xBC(0x1)
	bool bTeleport : 1;  // 0xBC(0x1)
	char pad_189[3];  // 0xBD(0x3)

}; 
// Function Engine.Actor.K2_AttachRootComponentTo
// Size: 0x18(Inherited: 0x0) 
struct FK2_AttachRootComponentTo
{
	struct USceneComponent* InParent;  // 0x0(0x8)
	struct FName InSocketName;  // 0x8(0x8)
	char EAttachLocation AttachLocationType;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bWeldSimulatedBodies : 1;  // 0x11(0x1)
	char pad_18[6];  // 0x12(0x6)

}; 
// ScriptStruct Engine.RollbackNetStartupActorInfo
// Size: 0xB0(Inherited: 0x0) 
struct FRollbackNetStartupActorInfo
{
	char pad_0[8];  // 0x0(0x8)
	struct UObject* Archetype;  // 0x8(0x8)
	char pad_16[40];  // 0x10(0x28)
	struct ULevel* Level;  // 0x38(0x8)
	char pad_64[96];  // 0x40(0x60)
	struct TArray<struct UObject*> ObjReferences;  // 0xA0(0x10)

}; 
// Function Engine.KismetMathLibrary.RandomBoolWithWeight
// Size: 0x8(Inherited: 0x0) 
struct FRandomBoolWithWeight
{
	float Weight;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool ReturnValue : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.SkeletalMeshComponent.SetAllBodiesPhysicsBlendWeight
// Size: 0x8(Inherited: 0x0) 
struct FSetAllBodiesPhysicsBlendWeight
{
	float PhysicsBlendWeight;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bSkipCustomPhysicsType : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.Actor.K2_AttachToActor
// Size: 0x18(Inherited: 0x0) 
struct FK2_AttachToActor
{
	struct AActor* ParentActor;  // 0x0(0x8)
	struct FName SocketName;  // 0x8(0x8)
	uint8_t  LocationRule;  // 0x10(0x1)
	uint8_t  RotationRule;  // 0x11(0x1)
	uint8_t  ScaleRule;  // 0x12(0x1)
	char pad_19_1 : 7;  // 0x13(0x1)
	bool bWeldSimulatedBodies : 1;  // 0x13(0x1)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.SceneComponent.K2_AttachToComponent
// Size: 0x18(Inherited: 0x0) 
struct FK2_AttachToComponent
{
	struct USceneComponent* Parent;  // 0x0(0x8)
	struct FName SocketName;  // 0x8(0x8)
	uint8_t  LocationRule;  // 0x10(0x1)
	uint8_t  RotationRule;  // 0x11(0x1)
	uint8_t  ScaleRule;  // 0x12(0x1)
	char pad_19_1 : 7;  // 0x13(0x1)
	bool bWeldSimulatedBodies : 1;  // 0x13(0x1)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.PlayerController.ClientGameEnded
// Size: 0x10(Inherited: 0x0) 
struct FClientGameEnded
{
	struct AActor* EndGameFocus;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bIsWinner : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetMathLibrary.Matrix_InverseTransformVector
// Size: 0x60(Inherited: 0x0) 
struct FMatrix_InverseTransformVector
{
	struct FMatrix M;  // 0x0(0x40)
	struct FVector V;  // 0x40(0xC)
	struct FVector ReturnValue;  // 0x4C(0xC)
	char pad_88[8];  // 0x58(0x8)

}; 
// Function Engine.PrimitiveComponent.SetCollisionResponseToAllChannels
// Size: 0x1(Inherited: 0x0) 
struct FSetCollisionResponseToAllChannels
{
	char ECollisionResponse NewResponse;  // 0x0(0x1)

}; 
// Function Engine.Controller.SetIgnoreLookInput
// Size: 0x1(Inherited: 0x0) 
struct FSetIgnoreLookInput
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewLookInput : 1;  // 0x0(0x1)

}; 
// Function Engine.SkeletalMeshComponent.GetTeleportDistanceThreshold
// Size: 0x4(Inherited: 0x0) 
struct FGetTeleportDistanceThreshold
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.Actor.K2_SetActorLocationAndRotation
// Size: 0xA8(Inherited: 0x0) 
struct FK2_SetActorLocationAndRotation
{
	struct FVector NewLocation;  // 0x0(0xC)
	struct FRotator NewRotation;  // 0xC(0xC)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bSweep : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)
	struct FHitResult SweepHitResult;  // 0x1C(0x88)
	char pad_164_1 : 7;  // 0xA4(0x1)
	bool bTeleport : 1;  // 0xA4(0x1)
	char pad_165_1 : 7;  // 0xA5(0x1)
	bool ReturnValue : 1;  // 0xA5(0x1)
	char pad_166[2];  // 0xA6(0x2)

}; 
// Function Engine.PlayerController.ClientTeamMessage
// Size: 0x28(Inherited: 0x0) 
struct FClientTeamMessage
{
	struct APlayerState* SenderPlayerState;  // 0x0(0x8)
	struct FString S;  // 0x8(0x10)
	struct FName Type;  // 0x18(0x8)
	float MsgLifeTime;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.TimecodeProvider.GetSynchronizationState
// Size: 0x4(Inherited: 0x0) 
struct FGetSynchronizationState
{
	uint8_t  ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.Actor.K2_SetActorRotation
// Size: 0x10(Inherited: 0x0) 
struct FK2_SetActorRotation
{
	struct FRotator NewRotation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bTeleportPhysics : 1;  // 0xC(0x1)
	char pad_13_1 : 7;  // 0xD(0x1)
	bool ReturnValue : 1;  // 0xD(0x1)
	char pad_14[2];  // 0xE(0x2)

}; 
// Function Engine.Actor.K2_SetActorTransform
// Size: 0xC0(Inherited: 0x0) 
struct FK2_SetActorTransform
{
	struct FTransform NewTransform;  // 0x0(0x30)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bSweep : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	struct FHitResult SweepHitResult;  // 0x34(0x88)
	char pad_188_1 : 7;  // 0xBC(0x1)
	bool bTeleport : 1;  // 0xBC(0x1)
	char pad_189_1 : 7;  // 0xBD(0x1)
	bool ReturnValue : 1;  // 0xBD(0x1)
	char pad_190[2];  // 0xBE(0x2)

}; 
// Function Engine.InstancedStaticMeshComponent.AddInstances
// Size: 0x28(Inherited: 0x0) 
struct FAddInstances
{
	struct TArray<struct FTransform> InstanceTransforms;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bShouldReturnIndices : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)
	struct TArray<int32_t> ReturnValue;  // 0x18(0x10)

}; 
// ScriptStruct Engine.InterpLookupTrack
// Size: 0x10(Inherited: 0x0) 
struct FInterpLookupTrack
{
	struct TArray<struct FInterpLookupPoint> Points;  // 0x0(0x10)

}; 
// Function Engine.Actor.K2_TeleportTo
// Size: 0x1C(Inherited: 0x0) 
struct FK2_TeleportTo
{
	struct FVector DestLocation;  // 0x0(0xC)
	struct FRotator DestRotation;  // 0xC(0xC)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)

}; 
// Function Engine.KismetMathLibrary.Vector4_Normalize3
// Size: 0x20(Inherited: 0x0) 
struct FVector4_Normalize3
{
	struct FVector4 A;  // 0x0(0x10)
	float Tolerance;  // 0x10(0x4)
	char pad_20[12];  // 0x14(0xC)

}; 
// Function Engine.KismetMathLibrary.NotEqual_Vector2DVector2D
// Size: 0x18(Inherited: 0x0) 
struct FNotEqual_Vector2DVector2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D B;  // 0x8(0x8)
	float ErrorTolerance;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.PawnNoiseEmitterComponent.MakeNoise
// Size: 0x18(Inherited: 0x0) 
struct FMakeNoise
{
	struct AActor* NoiseMaker;  // 0x0(0x8)
	float Loudness;  // 0x8(0x4)
	struct FVector NoiseLocation;  // 0xC(0xC)

}; 
// Function Engine.SplineComponent.FindTransformClosestToWorldLocation
// Size: 0x40(Inherited: 0x0) 
struct FFindTransformClosestToWorldLocation
{
	struct FVector WorldLocation;  // 0x0(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0xC(0x1)
	char pad_13_1 : 7;  // 0xD(0x1)
	bool bUseScale : 1;  // 0xD(0x1)
	char pad_14[2];  // 0xE(0x2)
	struct FTransform ReturnValue;  // 0x10(0x30)

}; 
// Function Engine.KismetTextLibrary.TextTrimPreceding
// Size: 0x30(Inherited: 0x0) 
struct FTextTrimPreceding
{
	struct FText InText;  // 0x0(0x18)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// ScriptStruct Engine.DelegateArray
// Size: 0x10(Inherited: 0x0) 
struct FDelegateArray
{
	struct TArray<struct FDelegate> Delegates;  // 0x0(0x10)

}; 
// Function Engine.MeshComponent.PrestreamTextures
// Size: 0xC(Inherited: 0x0) 
struct FPrestreamTextures
{
	float Seconds;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bPrioritizeCharacterTextures : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	int32_t CinematicTextureGroups;  // 0x8(0x4)

}; 
// ScriptStruct Engine.MeshMergingSettings
// Size: 0xA0(Inherited: 0x0) 
struct FMeshMergingSettings
{
	int32_t TargetLightMapResolution;  // 0x0(0x4)
	uint8_t  OutputUVs[8];  // 0x4(0x8)
	struct FMaterialProxySettings MaterialSettings;  // 0xC(0x88)
	int32_t GutterSize;  // 0x94(0x4)
	int32_t SpecificLOD;  // 0x98(0x4)
	uint8_t  LODSelectionType;  // 0x9C(0x1)
	char bGenerateLightMapUV : 1;  // 0x9D(0x1)
	char bComputedLightMapResolution : 1;  // 0x9D(0x1)
	char bPivotPointAtZero : 1;  // 0x9D(0x1)
	char bMergePhysicsData : 1;  // 0x9D(0x1)
	char bMergeMaterials : 1;  // 0x9D(0x1)
	char bCreateMergedMaterial : 1;  // 0x9D(0x1)
	char bBakeVertexDataToMesh : 1;  // 0x9D(0x1)
	char bUseVertexDataForBakingMaterial : 1;  // 0x9D(0x1)
	char bUseTextureBinning : 1;  // 0x9E(0x1)
	char bReuseMeshLightmapUVs : 1;  // 0x9E(0x1)
	char bMergeEquivalentMaterials : 1;  // 0x9E(0x1)
	char bPreserveOriginalUVChannel1 : 1;  // 0x9E(0x1)
	char bUseLandscapeCulling : 1;  // 0x9E(0x1)
	char bIncludeImposters : 1;  // 0x9E(0x1)
	char bAllowDistanceField : 1;  // 0x9E(0x1)
	char pad_158_1 : 1;  // 0x9E(0x1)
	char pad_159[2];  // 0x9F(0x2)

}; 
// Function Engine.VolumetricCloudComponent.SetShadowViewSampleCountScale
// Size: 0x4(Inherited: 0x0) 
struct FSetShadowViewSampleCountScale
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.Actor.ReceiveActorEndOverlap
// Size: 0x8(Inherited: 0x0) 
struct FReceiveActorEndOverlap
{
	struct AActor* OtherActor;  // 0x0(0x8)

}; 
// ScriptStruct Engine.RawDistributionVector
// Size: 0x48(Inherited: 0x20) 
struct FRawDistributionVector : public FRawDistribution
{
	float MinValue;  // 0x20(0x4)
	float MaxValue;  // 0x24(0x4)
	struct FVector MinValueVec;  // 0x28(0xC)
	struct FVector MaxValueVec;  // 0x34(0xC)
	struct UDistributionVector* Distribution;  // 0x40(0x8)

}; 
// Function Engine.CameraModifier.IsDisabled
// Size: 0x1(Inherited: 0x0) 
struct FIsDisabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.Actor.ReceiveActorOnInputTouchEnter
// Size: 0x1(Inherited: 0x0) 
struct FReceiveActorOnInputTouchEnter
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.Conv_BoolToFloat
// Size: 0x8(Inherited: 0x0) 
struct FConv_BoolToFloat
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool InBool : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.Actor.ReceiveActorOnReleased
// Size: 0x18(Inherited: 0x0) 
struct FReceiveActorOnReleased
{
	struct FKey ButtonReleased;  // 0x0(0x18)

}; 
// Function Engine.Actor.ReceiveAnyDamage
// Size: 0x20(Inherited: 0x0) 
struct FReceiveAnyDamage
{
	float Damage;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct UDamageType* DamageType;  // 0x8(0x8)
	struct AController* InstigatedBy;  // 0x10(0x8)
	struct AActor* DamageCauser;  // 0x18(0x8)

}; 
// ScriptStruct Engine.TransformBaseConstraint
// Size: 0x10(Inherited: 0x0) 
struct FTransformBaseConstraint
{
	struct TArray<struct FRigTransformConstraint> TransformConstraints;  // 0x0(0x10)

}; 
// Function Engine.InstancedStaticMeshComponent.AddInstanceWorldSpace
// Size: 0x40(Inherited: 0x0) 
struct FAddInstanceWorldSpace
{
	struct FTransform WorldTransform;  // 0x0(0x30)
	int32_t ReturnValue;  // 0x30(0x4)
	char pad_52[12];  // 0x34(0xC)

}; 
// Function Engine.TextRenderComponent.SetTextMaterial
// Size: 0x8(Inherited: 0x0) 
struct FSetTextMaterial
{
	struct UMaterialInterface* Material;  // 0x0(0x8)

}; 
// Function Engine.SplineComponent.SetRotationAtSplinePoint
// Size: 0x14(Inherited: 0x0) 
struct FSetRotationAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	struct FRotator InRotation;  // 0x4(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bUpdateSpline : 1;  // 0x11(0x1)
	char pad_18[2];  // 0x12(0x2)

}; 
// Function Engine.SkeletalMeshSocket.InitializeSocketFromLocation
// Size: 0x20(Inherited: 0x0) 
struct FInitializeSocketFromLocation
{
	struct USkeletalMeshComponent* SkelComp;  // 0x0(0x8)
	struct FVector WorldLocation;  // 0x8(0xC)
	struct FVector WorldNormal;  // 0x14(0xC)

}; 
// Function Engine.BlueprintPathsLibrary.CloudDir
// Size: 0x10(Inherited: 0x0) 
struct FCloudDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.Actor.ReceivePointDamage
// Size: 0xE0(Inherited: 0x0) 
struct FReceivePointDamage
{
	float Damage;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct UDamageType* DamageType;  // 0x8(0x8)
	struct FVector HitLocation;  // 0x10(0xC)
	struct FVector HitNormal;  // 0x1C(0xC)
	struct UPrimitiveComponent* HitComponent;  // 0x28(0x8)
	struct FName BoneName;  // 0x30(0x8)
	struct FVector ShotFromDirection;  // 0x38(0xC)
	char pad_68[4];  // 0x44(0x4)
	struct AController* InstigatedBy;  // 0x48(0x8)
	struct AActor* DamageCauser;  // 0x50(0x8)
	struct FHitResult HitInfo;  // 0x58(0x88)

}; 
// ScriptStruct Engine.Node
// Size: 0x60(Inherited: 0x0) 
struct FNode
{
	struct FName Name;  // 0x0(0x8)
	struct FName ParentName;  // 0x8(0x8)
	struct FTransform Transform;  // 0x10(0x30)
	struct FString DisplayName;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool bAdvanced : 1;  // 0x50(0x1)
	char pad_81[15];  // 0x51(0xF)

}; 
// Function Engine.KismetMathLibrary.InRange_FloatFloat
// Size: 0x10(Inherited: 0x0) 
struct FInRange_FloatFloat
{
	float Value;  // 0x0(0x4)
	float Min;  // 0x4(0x4)
	float Max;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool InclusiveMin : 1;  // 0xC(0x1)
	char pad_13_1 : 7;  // 0xD(0x1)
	bool InclusiveMax : 1;  // 0xD(0x1)
	char pad_14_1 : 7;  // 0xE(0x1)
	bool ReturnValue : 1;  // 0xE(0x1)
	char pad_15[1];  // 0xF(0x1)

}; 
// Function Engine.PlayerController.LocalTravel
// Size: 0x10(Inherited: 0x0) 
struct FLocalTravel
{
	struct FString URL;  // 0x0(0x10)

}; 
// Function Engine.Actor.ReceiveRadialDamage
// Size: 0xB8(Inherited: 0x0) 
struct FReceiveRadialDamage
{
	float DamageReceived;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct UDamageType* DamageType;  // 0x8(0x8)
	struct FVector Origin;  // 0x10(0xC)
	struct FHitResult HitInfo;  // 0x1C(0x88)
	char pad_164[4];  // 0xA4(0x4)
	struct AController* InstigatedBy;  // 0xA8(0x8)
	struct AActor* DamageCauser;  // 0xB0(0x8)

}; 
// ScriptStruct Engine.ConeConstraint
// Size: 0x20(Inherited: 0x14) 
struct FConeConstraint : public FConstraintBaseParams
{
	float Swing1LimitDegrees;  // 0x14(0x4)
	float Swing2LimitDegrees;  // 0x18(0x4)
	char EAngularConstraintMotion Swing1Motion;  // 0x1C(0x1)
	char EAngularConstraintMotion Swing2Motion;  // 0x1D(0x1)
	char pad_30[2];  // 0x1E(0x2)

}; 
// Function Engine.Actor.SetActorTickEnabled
// Size: 0x1(Inherited: 0x0) 
struct FSetActorTickEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnabled : 1;  // 0x0(0x1)

}; 
// Function Engine.Character.IsJumpProvidingForce
// Size: 0x1(Inherited: 0x0) 
struct FIsJumpProvidingForce
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.AttenuationSubmixSendSettings
// Size: 0xA8(Inherited: 0x0) 
struct FAttenuationSubmixSendSettings
{
	struct USoundSubmixBase* Submix;  // 0x0(0x8)
	uint8_t  SubmixSendMethod;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	float SubmixSendLevelMin;  // 0xC(0x4)
	float SubmixSendLevelMax;  // 0x10(0x4)
	float SubmixSendDistanceMin;  // 0x14(0x4)
	float SubmixSendDistanceMax;  // 0x18(0x4)
	float ManualSubmixSendLevel;  // 0x1C(0x4)
	struct FRuntimeFloatCurve CustomSubmixSendCurve;  // 0x20(0x88)

}; 
// Function Engine.AnimInstance.Montage_Resume
// Size: 0x8(Inherited: 0x0) 
struct FMontage_Resume
{
	struct UAnimMontage* Montage;  // 0x0(0x8)

}; 
// ScriptStruct Engine.PerBoneInterpolation
// Size: 0x14(Inherited: 0x0) 
struct FPerBoneInterpolation
{
	struct FBoneReference BoneReference;  // 0x0(0x10)
	float InterpolationSpeedPerSec;  // 0x10(0x4)

}; 
// Function Engine.CharacterMovementComponent.IsWalkable
// Size: 0x8C(Inherited: 0x0) 
struct FIsWalkable
{
	struct FHitResult Hit;  // 0x0(0x88)
	char pad_136_1 : 7;  // 0x88(0x1)
	bool ReturnValue : 1;  // 0x88(0x1)
	char pad_137[3];  // 0x89(0x3)

}; 
// Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInDegreesFromStream
// Size: 0x28(Inherited: 0x0) 
struct FRandomUnitVectorInEllipticalConeInDegreesFromStream
{
	struct FVector ConeDir;  // 0x0(0xC)
	float MaxYawInDegrees;  // 0xC(0x4)
	float MaxPitchInDegrees;  // 0x10(0x4)
	struct FRandomStream Stream;  // 0x14(0x8)
	struct FVector ReturnValue;  // 0x1C(0xC)

}; 
// Function Engine.Actor.SetActorTickInterval
// Size: 0x4(Inherited: 0x0) 
struct FSetActorTickInterval
{
	float TickInterval;  // 0x0(0x4)

}; 
// ScriptStruct Engine.KeyHandleMap
// Size: 0x60(Inherited: 0x0) 
struct FKeyHandleMap
{
	char pad_0[96];  // 0x0(0x60)

}; 
// Function Engine.PrimitiveComponent.SetAllPhysicsAngularVelocityInDegrees
// Size: 0x10(Inherited: 0x0) 
struct FSetAllPhysicsAngularVelocityInDegrees
{
	struct FVector NewAngVel;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bAddToCurrent : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.Actor.SetAutoDestroyWhenFinished
// Size: 0x1(Inherited: 0x0) 
struct FSetAutoDestroyWhenFinished
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bVal : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.SetRenderInMainPass
// Size: 0x1(Inherited: 0x0) 
struct FSetRenderInMainPass
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.RigConfiguration
// Size: 0x18(Inherited: 0x0) 
struct FRigConfiguration
{
	struct URig* Rig;  // 0x0(0x8)
	struct TArray<struct FNameMapping> BoneMappingTable;  // 0x8(0x10)

}; 
// Function Engine.KismetMathLibrary.Wrap
// Size: 0x10(Inherited: 0x0) 
struct FWrap
{
	int32_t Value;  // 0x0(0x4)
	int32_t Min;  // 0x4(0x4)
	int32_t Max;  // 0x8(0x4)
	int32_t ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.Pawn.AddControllerYawInput
// Size: 0x4(Inherited: 0x0) 
struct FAddControllerYawInput
{
	float Val;  // 0x0(0x4)

}; 
// Function Engine.Actor.SetLifeSpan
// Size: 0x4(Inherited: 0x0) 
struct FSetLifeSpan
{
	float InLifespan;  // 0x0(0x4)

}; 
// Function Engine.Actor.SetOwner
// Size: 0x8(Inherited: 0x0) 
struct FSetOwner
{
	struct AActor* NewOwner;  // 0x0(0x8)

}; 
// Function Engine.Actor.SetReplicateMovement
// Size: 0x1(Inherited: 0x0) 
struct FSetReplicateMovement
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInReplicateMovement : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.RepMovement
// Size: 0x34(Inherited: 0x0) 
struct FRepMovement
{
	struct FVector LinearVelocity;  // 0x0(0xC)
	struct FVector AngularVelocity;  // 0xC(0xC)
	struct FVector Location;  // 0x18(0xC)
	struct FRotator Rotation;  // 0x24(0xC)
	char bSimulatedPhysicSleep : 1;  // 0x30(0x1)
	char bRepPhysics : 1;  // 0x30(0x1)
	char pad_48_1 : 6;  // 0x30(0x1)
	uint8_t  LocationQuantizationLevel;  // 0x31(0x1)
	uint8_t  VelocityQuantizationLevel;  // 0x32(0x1)
	uint8_t  RotationQuantizationLevel;  // 0x33(0x1)

}; 
// Function Engine.KismetMathLibrary.Quat_IsIdentity
// Size: 0x20(Inherited: 0x0) 
struct FQuat_IsIdentity
{
	struct FQuat Q;  // 0x0(0x10)
	float Tolerance;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[11];  // 0x15(0xB)

}; 
// Function Engine.PrimitiveComponent.GetNumMaterials
// Size: 0x4(Inherited: 0x0) 
struct FGetNumMaterials
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.GetCollisionProfileName
// Size: 0x8(Inherited: 0x0) 
struct FGetCollisionProfileName
{
	struct FName ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.ActorTickFunction
// Size: 0x30(Inherited: 0x28) 
struct FActorTickFunction : public FTickFunction
{
	char pad_40[8];  // 0x28(0x8)

}; 
// Function Engine.KismetMathLibrary.SelectObject
// Size: 0x20(Inherited: 0x0) 
struct FSelectObject
{
	struct UObject* A;  // 0x0(0x8)
	struct UObject* B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bSelectA : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)
	struct UObject* ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.Controller.CastToPlayerController
// Size: 0x8(Inherited: 0x0) 
struct FCastToPlayerController
{
	struct APlayerController* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.Controller.ClientSetRotation
// Size: 0x10(Inherited: 0x0) 
struct FClientSetRotation
{
	struct FRotator NewRotation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bResetCamera : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.KismetMathLibrary.PerlinNoise1D
// Size: 0x8(Inherited: 0x0) 
struct FPerlinNoise1D
{
	float Value;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.PlayerState.ReceiveCopyProperties
// Size: 0x8(Inherited: 0x0) 
struct FReceiveCopyProperties
{
	struct APlayerState* NewPlayerState;  // 0x0(0x8)

}; 
// Function Engine.Pawn.GetControlRotation
// Size: 0xC(Inherited: 0x0) 
struct FGetControlRotation
{
	struct FRotator ReturnValue;  // 0x0(0xC)

}; 
// ScriptStruct Engine.PrimaryAssetRules
// Size: 0xC(Inherited: 0x0) 
struct FPrimaryAssetRules
{
	int32_t Priority;  // 0x0(0x4)
	int32_t ChunkId;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bApplyRecursively : 1;  // 0x8(0x1)
	uint8_t  CookRule;  // 0x9(0x1)
	char pad_10[2];  // 0xA(0x2)

}; 
// Function Engine.KismetTextLibrary.Conv_TextToString
// Size: 0x28(Inherited: 0x0) 
struct FConv_TextToString
{
	struct FText InText;  // 0x0(0x18)
	struct FString ReturnValue;  // 0x18(0x10)

}; 
// ScriptStruct Engine.KSphylElem
// Size: 0x50(Inherited: 0x30) 
struct FKSphylElem : public FKShapeElem
{
	struct FVector Center;  // 0x30(0xC)
	struct FRotator Rotation;  // 0x3C(0xC)
	float Radius;  // 0x48(0x4)
	float Length;  // 0x4C(0x4)

}; 
// Function Engine.CameraModifier.GetViewTarget
// Size: 0x8(Inherited: 0x0) 
struct FGetViewTarget
{
	struct AActor* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.Controller.IsLocalController
// Size: 0x1(Inherited: 0x0) 
struct FIsLocalController
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.StaticMesh.CreateStaticMeshDescription
// Size: 0x10(Inherited: 0x0) 
struct FCreateStaticMeshDescription
{
	struct UObject* Outer;  // 0x0(0x8)
	struct UStaticMeshDescription* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.SpringArmComponent.GetTargetRotation
// Size: 0xC(Inherited: 0x0) 
struct FGetTargetRotation
{
	struct FRotator ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.PlayerController.GetHitResultUnderFinger
// Size: 0x90(Inherited: 0x0) 
struct FGetHitResultUnderFinger
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)
	char ECollisionChannel TraceChannel;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool bTraceComplex : 1;  // 0x2(0x1)
	char pad_3[1];  // 0x3(0x1)
	struct FHitResult HitResult;  // 0x4(0x88)
	char pad_140_1 : 7;  // 0x8C(0x1)
	bool ReturnValue : 1;  // 0x8C(0x1)
	char pad_141[3];  // 0x8D(0x3)

}; 
// Function Engine.LevelStreaming.GetIsRequestingUnloadAndRemoval
// Size: 0x1(Inherited: 0x0) 
struct FGetIsRequestingUnloadAndRemoval
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.Controller.IsLookInputIgnored
// Size: 0x1(Inherited: 0x0) 
struct FIsLookInputIgnored
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.Character.K2_OnStartCrouch
// Size: 0x8(Inherited: 0x0) 
struct FK2_OnStartCrouch
{
	float HalfHeightAdjust;  // 0x0(0x4)
	float ScaledHalfHeightAdjust;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.LinearColor_GetLuminance
// Size: 0x14(Inherited: 0x0) 
struct FLinearColor_GetLuminance
{
	struct FLinearColor InColor;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.PlayerController.GetInputVectorKeyState
// Size: 0x28(Inherited: 0x0) 
struct FGetInputVectorKeyState
{
	struct FKey Key;  // 0x0(0x18)
	struct FVector ReturnValue;  // 0x18(0xC)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.PawnMovementComponent.IsMoveInputIgnored
// Size: 0x1(Inherited: 0x0) 
struct FIsMoveInputIgnored
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.TextureLODGroup
// Size: 0x68(Inherited: 0x0) 
struct FTextureLODGroup
{
	char TextureGroup Group;  // 0x0(0x1)
	char pad_1[11];  // 0x1(0xB)
	int32_t LODBias;  // 0xC(0x4)
	int32_t LODBias_Smaller;  // 0x10(0x4)
	int32_t LODBias_Smallest;  // 0x14(0x4)
	char pad_24[4];  // 0x18(0x4)
	int32_t NumStreamedMips;  // 0x1C(0x4)
	char TextureMipGenSettings MipGenSettings;  // 0x20(0x1)
	char pad_33[3];  // 0x21(0x3)
	int32_t MinLODSize;  // 0x24(0x4)
	int32_t MaxLODSize;  // 0x28(0x4)
	int32_t MaxLODSize_Smaller;  // 0x2C(0x4)
	int32_t MaxLODSize_Smallest;  // 0x30(0x4)
	int32_t OptionalLODBias;  // 0x34(0x4)
	int32_t OptionalMaxLODSize;  // 0x38(0x4)
	char pad_60[4];  // 0x3C(0x4)
	struct FName MinMagFilter;  // 0x40(0x8)
	struct FName MipFilter;  // 0x48(0x8)
	uint8_t  MipLoadOptions;  // 0x50(0x1)
	char pad_81_1 : 7;  // 0x51(0x1)
	bool HighPriorityLoad : 1;  // 0x51(0x1)
	char pad_82_1 : 7;  // 0x52(0x1)
	bool DuplicateNonOptionalMips : 1;  // 0x52(0x1)
	char pad_83[1];  // 0x53(0x1)
	float Downscale;  // 0x54(0x4)
	uint8_t  DownscaleOptions;  // 0x58(0x1)
	char pad_89[3];  // 0x59(0x3)
	int32_t VirtualTextureTileCountBias;  // 0x5C(0x4)
	int32_t VirtualTextureTileSizeBias;  // 0x60(0x4)
	char ETextureLossyCompressionAmount LossyCompressionAmount;  // 0x64(0x1)
	char pad_101[3];  // 0x65(0x3)

}; 
// ScriptStruct Engine.AnimNotifyEventReference
// Size: 0x10(Inherited: 0x0) 
struct FAnimNotifyEventReference
{
	char pad_0[8];  // 0x0(0x8)
	struct UObject* NotifySource;  // 0x8(0x8)

}; 
// ScriptStruct Engine.FastArraySerializer
// Size: 0x108(Inherited: 0x0) 
struct FFastArraySerializer
{
	char pad_0[84];  // 0x0(0x54)
	int32_t ArrayReplicationKey;  // 0x54(0x4)
	char pad_88[168];  // 0x58(0xA8)
	uint8_t  DeltaFlags;  // 0x100(0x1)
	char pad_257[7];  // 0x101(0x7)

}; 
// Function Engine.Character.UnCrouch
// Size: 0x1(Inherited: 0x0) 
struct FUnCrouch
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bClientSimulation : 1;  // 0x0(0x1)

}; 
// Function Engine.Controller.IsPlayerController
// Size: 0x1(Inherited: 0x0) 
struct FIsPlayerController
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.FindClosestPointOnLine
// Size: 0x30(Inherited: 0x0) 
struct FFindClosestPointOnLine
{
	struct FVector Point;  // 0x0(0xC)
	struct FVector LineOrigin;  // 0xC(0xC)
	struct FVector LineDirection;  // 0x18(0xC)
	struct FVector ReturnValue;  // 0x24(0xC)

}; 
// Function Engine.Pawn.SetCanAffectNavigationGeneration
// Size: 0x2(Inherited: 0x0) 
struct FSetCanAffectNavigationGeneration
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bForceUpdate : 1;  // 0x1(0x1)

}; 
// Function Engine.Controller.LineOfSightTo
// Size: 0x18(Inherited: 0x0) 
struct FLineOfSightTo
{
	struct AActor* Other;  // 0x0(0x8)
	struct FVector ViewPoint;  // 0x8(0xC)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bAlternateChecks : 1;  // 0x14(0x1)
	char pad_21_1 : 7;  // 0x15(0x1)
	bool ReturnValue : 1;  // 0x15(0x1)
	char pad_22[2];  // 0x16(0x2)

}; 
// Function Engine.KismetMathLibrary.Vector_BoundedToBox
// Size: 0x30(Inherited: 0x0) 
struct FVector_BoundedToBox
{
	struct FVector InVect;  // 0x0(0xC)
	struct FVector InBoxMin;  // 0xC(0xC)
	struct FVector InBoxMax;  // 0x18(0xC)
	struct FVector ReturnValue;  // 0x24(0xC)

}; 
// Function Engine.Controller.ReceivePossess
// Size: 0x8(Inherited: 0x0) 
struct FReceivePossess
{
	struct APawn* PossessedPawn;  // 0x0(0x8)

}; 
// Function Engine.Controller.SetControlRotation
// Size: 0xC(Inherited: 0x0) 
struct FSetControlRotation
{
	struct FRotator NewRotation;  // 0x0(0xC)

}; 
// Function Engine.GameplayStatics.HasOption
// Size: 0x28(Inherited: 0x0) 
struct FHasOption
{
	struct FString Options;  // 0x0(0x10)
	struct FString InKey;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// Function Engine.PlayerController.ActivateTouchInterface
// Size: 0x8(Inherited: 0x0) 
struct FActivateTouchInterface
{
	struct UTouchInterface* NewTouchInterface;  // 0x0(0x8)

}; 
// Function Engine.PlayerController.AddPitchInput
// Size: 0x4(Inherited: 0x0) 
struct FAddPitchInput
{
	float Val;  // 0x0(0x4)

}; 
// ScriptStruct Engine.ComponentReference
// Size: 0x28(Inherited: 0x0) 
struct FComponentReference
{
	struct AActor* OtherActor;  // 0x0(0x8)
	struct FName ComponentProperty;  // 0x8(0x8)
	struct FString PathToComponent;  // 0x10(0x10)
	char pad_32[8];  // 0x20(0x8)

}; 
// Function Engine.PlayerController.AddYawInput
// Size: 0x4(Inherited: 0x0) 
struct FAddYawInput
{
	float Val;  // 0x0(0x4)

}; 
// Function Engine.SkyAtmosphereComponent.SetHeightFogContribution
// Size: 0x4(Inherited: 0x0) 
struct FSetHeightFogContribution
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetStringLibrary.IsEmpty
// Size: 0x18(Inherited: 0x0) 
struct FIsEmpty
{
	struct FString inString;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetInputLibrary.PointerEvent_GetPointerIndex
// Size: 0x78(Inherited: 0x0) 
struct FPointerEvent_GetPointerIndex
{
	struct FPointerEvent Input;  // 0x0(0x70)
	int32_t ReturnValue;  // 0x70(0x4)
	char pad_116[4];  // 0x74(0x4)

}; 
// Function Engine.PlayerController.SetViewTargetWithBlend
// Size: 0x18(Inherited: 0x0) 
struct FSetViewTargetWithBlend
{
	struct AActor* NewViewTarget;  // 0x0(0x8)
	float BlendTime;  // 0x8(0x4)
	char EViewTargetBlendFunction BlendFunc;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	float BlendExp;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bLockOutgoing : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// ScriptStruct Engine.CameraShakeStopParams
// Size: 0x1(Inherited: 0x0) 
struct FCameraShakeStopParams
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bImmediately : 1;  // 0x0(0x1)

}; 
// Function Engine.GameplayStatics.GetPlayerController
// Size: 0x18(Inherited: 0x0) 
struct FGetPlayerController
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	int32_t PlayerIndex;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct APlayerController* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.PlayerController.Camera
// Size: 0x8(Inherited: 0x0) 
struct FCamera
{
	struct FName NewMode;  // 0x0(0x8)

}; 
// Function Engine.DebugCameraController.ReceiveOnDeactivate
// Size: 0x8(Inherited: 0x0) 
struct FReceiveOnDeactivate
{
	struct APlayerController* RestoredPC;  // 0x0(0x8)

}; 
// Function Engine.PlayerController.CanRestartPlayer
// Size: 0x1(Inherited: 0x0) 
struct FCanRestartPlayer
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.BoneFilter
// Size: 0xC(Inherited: 0x0) 
struct FBoneFilter
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bExcludeSelf : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FName BoneName;  // 0x4(0x8)

}; 
// ScriptStruct Engine.ComponentKey
// Size: 0x20(Inherited: 0x0) 
struct FComponentKey
{
	UObject* OwnerClass;  // 0x0(0x8)
	struct FName SCSVariableName;  // 0x8(0x8)
	struct FGuid AssociatedGuid;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.IntPoint_One
// Size: 0x8(Inherited: 0x0) 
struct FIntPoint_One
{
	struct FIntPoint ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.PlayerController.ClientCapBandwidth
// Size: 0x4(Inherited: 0x0) 
struct FClientCapBandwidth
{
	int32_t Cap;  // 0x0(0x4)

}; 
// Function Engine.BlueprintSetLibrary.Set_Intersection
// Size: 0xF0(Inherited: 0x0) 
struct FSet_Intersection
{
	struct TSet<int32_t> A;  // 0x0(0x50)
	struct TSet<int32_t> B;  // 0x50(0x50)
	struct TSet<int32_t> Result;  // 0xA0(0x50)

}; 
// Function Engine.PlayerController.ClientEnableNetworkVoice
// Size: 0x1(Inherited: 0x0) 
struct FClientEnableNetworkVoice
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnable : 1;  // 0x0(0x1)

}; 
// Function Engine.SplineComponent.GetRotationAtSplinePoint
// Size: 0x14(Inherited: 0x0) 
struct FGetRotationAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FRotator ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.SplineComponent.GetNumberOfSplinePoints
// Size: 0x4(Inherited: 0x0) 
struct FGetNumberOfSplinePoints
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.SetAllUseCCD
// Size: 0x1(Inherited: 0x0) 
struct FSetAllUseCCD
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool InUseCCD : 1;  // 0x0(0x1)

}; 
// Function Engine.PlayerController.ClientIgnoreLookInput
// Size: 0x1(Inherited: 0x0) 
struct FClientIgnoreLookInput
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bIgnore : 1;  // 0x0(0x1)

}; 
// Function Engine.CharacterMovementComponent.GetLastUpdateLocation
// Size: 0xC(Inherited: 0x0) 
struct FGetLastUpdateLocation
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.Pawn.PawnMakeNoise
// Size: 0x20(Inherited: 0x0) 
struct FPawnMakeNoise
{
	float Loudness;  // 0x0(0x4)
	struct FVector NoiseLocation;  // 0x4(0xC)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bUseNoiseMakerLocation : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)
	struct AActor* NoiseMaker;  // 0x18(0x8)

}; 
// Function Engine.PlayerController.ClientMessage
// Size: 0x20(Inherited: 0x0) 
struct FClientMessage
{
	struct FString S;  // 0x0(0x10)
	struct FName Type;  // 0x10(0x8)
	float MsgLifeTime;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetInternationalizationLibrary.SetCurrentCulture
// Size: 0x18(Inherited: 0x0) 
struct FSetCurrentCulture
{
	struct FString Culture;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool SaveToConfig : 1;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool ReturnValue : 1;  // 0x11(0x1)
	char pad_18[6];  // 0x12(0x6)

}; 
// Function Engine.PlayerController.ClientMutePlayer
// Size: 0x28(Inherited: 0x0) 
struct FClientMutePlayer
{
	struct FUniqueNetIdRepl PlayerId;  // 0x0(0x28)

}; 
// Function Engine.GameplayStatics.SetGlobalPitchModulation
// Size: 0x10(Inherited: 0x0) 
struct FSetGlobalPitchModulation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float PitchModulation;  // 0x8(0x4)
	float TimeSec;  // 0xC(0x4)

}; 
// ScriptStruct Engine.UniqueNetIdRepl
// Size: 0x28(Inherited: 0x1) 
struct FUniqueNetIdRepl : public FUniqueNetIdWrapper
{
	char pad_1[23];  // 0x1(0x17)
	struct TArray<char> ReplicationBytes;  // 0x18(0x10)

}; 
// Function Engine.SceneComponent.SetShouldUpdatePhysicsVolume
// Size: 0x1(Inherited: 0x0) 
struct FSetShouldUpdatePhysicsVolume
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInShouldUpdatePhysicsVolume : 1;  // 0x0(0x1)

}; 
// Function Engine.PlayerController.ClientPlayCameraAnim
// Size: 0x28(Inherited: 0x0) 
struct FClientPlayCameraAnim
{
	struct UCameraAnim* AnimToPlay;  // 0x0(0x8)
	float Scale;  // 0x8(0x4)
	float Rate;  // 0xC(0x4)
	float BlendInTime;  // 0x10(0x4)
	float BlendOutTime;  // 0x14(0x4)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bLoop : 1;  // 0x18(0x1)
	char pad_25_1 : 7;  // 0x19(0x1)
	bool bRandomStartTime : 1;  // 0x19(0x1)
	uint8_t  Space;  // 0x1A(0x1)
	char pad_27[1];  // 0x1B(0x1)
	struct FRotator CustomPlaySpace;  // 0x1C(0xC)

}; 
// Function Engine.SplineComponent.GetFloatPropertyAtSplinePoint
// Size: 0x10(Inherited: 0x0) 
struct FGetFloatPropertyAtSplinePoint
{
	int32_t Index;  // 0x0(0x4)
	struct FName PropertyName;  // 0x4(0x8)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.PlayerController.ClientPlayForceFeedback_Internal
// Size: 0x18(Inherited: 0x0) 
struct FClientPlayForceFeedback_Internal
{
	struct UForceFeedbackEffect* ForceFeedbackEffect;  // 0x0(0x8)
	struct FForceFeedbackParameters Params;  // 0x8(0xC)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.KismetMathLibrary.NotEqualExactly_VectorVector
// Size: 0x1C(Inherited: 0x0) 
struct FNotEqualExactly_VectorVector
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)

}; 
// Function Engine.Character.ServerMovePacked
// Size: 0x98(Inherited: 0x0) 
struct FServerMovePacked
{
	struct FCharacterServerMovePackedBits PackedBits;  // 0x0(0x98)

}; 
// Function Engine.GameplayStatics.DeleteGameInSlot
// Size: 0x18(Inherited: 0x0) 
struct FDeleteGameInSlot
{
	struct FString SlotName;  // 0x0(0x10)
	int32_t UserIndex;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// ScriptStruct Engine.ForceFeedbackParameters
// Size: 0xC(Inherited: 0x0) 
struct FForceFeedbackParameters
{
	struct FName Tag;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bLooping : 1;  // 0x8(0x1)
	char pad_9_1 : 7;  // 0x9(0x1)
	bool bIgnoreTimeDilation : 1;  // 0x9(0x1)
	char pad_10_1 : 7;  // 0xA(0x1)
	bool bPlayWhilePaused : 1;  // 0xA(0x1)
	char pad_11[1];  // 0xB(0x1)

}; 
// Function Engine.PlayerController.ClientPrepareMapChange
// Size: 0xC(Inherited: 0x0) 
struct FClientPrepareMapChange
{
	struct FName LevelName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bFirst : 1;  // 0x8(0x1)
	char pad_9_1 : 7;  // 0x9(0x1)
	bool bLast : 1;  // 0x9(0x1)
	char pad_10[2];  // 0xA(0x2)

}; 
// Function Engine.SplineComponent.GetRightVectorAtSplineInputKey
// Size: 0x14(Inherited: 0x0) 
struct FGetRightVectorAtSplineInputKey
{
	float InKey;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.KismetMathLibrary.DateTimeMaxValue
// Size: 0x8(Inherited: 0x0) 
struct FDateTimeMaxValue
{
	struct FDateTime ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.PlayerController.ClientReceiveLocalizedMessage
// Size: 0x28(Inherited: 0x0) 
struct FClientReceiveLocalizedMessage
{
	ULocalMessage* Message;  // 0x0(0x8)
	int32_t Switch;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct APlayerState* RelatedPlayerState_2;  // 0x10(0x8)
	struct APlayerState* RelatedPlayerState_3;  // 0x18(0x8)
	struct UObject* OptionalObject;  // 0x20(0x8)

}; 
// Function Engine.TimecodeProvider.GetTimecode
// Size: 0x14(Inherited: 0x0) 
struct FGetTimecode
{
	struct FTimecode ReturnValue;  // 0x0(0x14)

}; 
// Function Engine.KismetTextLibrary.GetEmptyText
// Size: 0x18(Inherited: 0x0) 
struct FGetEmptyText
{
	struct FText ReturnValue;  // 0x0(0x18)

}; 
// Function Engine.PlayerController.ClientReturnToMainMenu
// Size: 0x10(Inherited: 0x0) 
struct FClientReturnToMainMenu
{
	struct FString ReturnReason;  // 0x0(0x10)

}; 
// Function Engine.PlayerCameraManager.StopAllInstancesOfCameraShake
// Size: 0x10(Inherited: 0x0) 
struct FStopAllInstancesOfCameraShake
{
	UCameraShakeBase* Shake;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bImmediately : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// ScriptStruct Engine.SlotAnimationTrack
// Size: 0x18(Inherited: 0x0) 
struct FSlotAnimationTrack
{
	struct FName SlotName;  // 0x0(0x8)
	struct FAnimTrack AnimTrack;  // 0x8(0x10)

}; 
// Function Engine.PrimitiveComponent.SetDefaultCustomPrimitiveDataVector3
// Size: 0x10(Inherited: 0x0) 
struct FSetDefaultCustomPrimitiveDataVector3
{
	int32_t DataIndex;  // 0x0(0x4)
	struct FVector Value;  // 0x4(0xC)

}; 
// Function Engine.PlayerController.ClientReturnToMainMenuWithTextReason
// Size: 0x18(Inherited: 0x0) 
struct FClientReturnToMainMenuWithTextReason
{
	struct FText ReturnReason;  // 0x0(0x18)

}; 
// Function Engine.Character.IsPlayingNetworkedRootMotionMontage
// Size: 0x1(Inherited: 0x0) 
struct FIsPlayingNetworkedRootMotionMontage
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.DebugDisplayProperty
// Size: 0x20(Inherited: 0x0) 
struct FDebugDisplayProperty
{
	struct UObject* Obj;  // 0x0(0x8)
	UObject* WithinClass;  // 0x8(0x8)
	char pad_16[16];  // 0x10(0x10)

}; 
// Function Engine.PlayerController.ClientSetHUD
// Size: 0x8(Inherited: 0x0) 
struct FClientSetHUD
{
	AHUD* NewHUDClass;  // 0x0(0x8)

}; 
// Function Engine.Pawn.IsPlayerControlled
// Size: 0x1(Inherited: 0x0) 
struct FIsPlayerControlled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PlayerController.ClientSetViewTarget
// Size: 0x18(Inherited: 0x0) 
struct FClientSetViewTarget
{
	struct AActor* A;  // 0x0(0x8)
	struct FViewTargetTransitionParams TransitionParams;  // 0x8(0x10)

}; 
// ScriptStruct Engine.ViewTargetTransitionParams
// Size: 0x10(Inherited: 0x0) 
struct FViewTargetTransitionParams
{
	float BlendTime;  // 0x0(0x4)
	char EViewTargetBlendFunction BlendFunction;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	float BlendExp;  // 0x8(0x4)
	char bLockOutgoing : 1;  // 0xC(0x1)
	char pad_12_1 : 7;  // 0xC(0x1)
	char pad_13[4];  // 0xD(0x4)

}; 
// Function Engine.PlayerController.ClientStartCameraShake
// Size: 0x20(Inherited: 0x0) 
struct FClientStartCameraShake
{
	UCameraShakeBase* Shake;  // 0x0(0x8)
	float Scale;  // 0x8(0x4)
	uint8_t  PlaySpace;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FRotator UserPlaySpaceRot;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.TimelineComponent.GetTimelineLength
// Size: 0x4(Inherited: 0x0) 
struct FGetTimelineLength
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.GameUserSettings.SetShadowQuality
// Size: 0x4(Inherited: 0x0) 
struct FSetShadowQuality
{
	int32_t Value;  // 0x0(0x4)

}; 
// Function Engine.PlayerController.ClientStartCameraShakeFromSource
// Size: 0x10(Inherited: 0x0) 
struct FClientStartCameraShakeFromSource
{
	UCameraShakeBase* Shake;  // 0x0(0x8)
	struct UCameraShakeSourceComponent* SourceComponent;  // 0x8(0x8)

}; 
// ScriptStruct Engine.ConstraintInstanceBase
// Size: 0x18(Inherited: 0x0) 
struct FConstraintInstanceBase
{
	char pad_0[24];  // 0x0(0x18)

}; 
// Function Engine.SplineComponent.GetSplinePointType
// Size: 0x8(Inherited: 0x0) 
struct FGetSplinePointType
{
	int32_t PointIndex;  // 0x0(0x4)
	char ESplinePointType ReturnValue;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.PlayerController.ClientStopCameraAnim
// Size: 0x8(Inherited: 0x0) 
struct FClientStopCameraAnim
{
	struct UCameraAnim* AnimToStop;  // 0x0(0x8)

}; 
// ScriptStruct Engine.TimelineEventEntry
// Size: 0x14(Inherited: 0x0) 
struct FTimelineEventEntry
{
	float Time;  // 0x0(0x4)
	struct FDelegate EventFunc;  // 0x4(0x10)

}; 
// Function Engine.SplineMeshComponent.GetSplineUpDir
// Size: 0xC(Inherited: 0x0) 
struct FGetSplineUpDir
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.GameplayStatics.GetViewProjectionMatrix
// Size: 0x6B0(Inherited: 0x0) 
struct FGetViewProjectionMatrix
{
	struct FMinimalViewInfo DesiredView;  // 0x0(0x5F0)
	struct FMatrix ViewMatrix;  // 0x5F0(0x40)
	struct FMatrix ProjectionMatrix;  // 0x630(0x40)
	struct FMatrix ViewProjectionMatrix;  // 0x670(0x40)

}; 
// Function Engine.PlayerController.ClientStopForceFeedback
// Size: 0x10(Inherited: 0x0) 
struct FClientStopForceFeedback
{
	struct UForceFeedbackEffect* ForceFeedbackEffect;  // 0x0(0x8)
	struct FName Tag;  // 0x8(0x8)

}; 
// Function Engine.GameUserSettings.GetPostProcessingQuality
// Size: 0x4(Inherited: 0x0) 
struct FGetPostProcessingQuality
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.PlayerController.ClientTravelInternal
// Size: 0x28(Inherited: 0x0) 
struct FClientTravelInternal
{
	struct FString URL;  // 0x0(0x10)
	char ETravelType TravelType;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bSeamless : 1;  // 0x11(0x1)
	char pad_18[2];  // 0x12(0x2)
	struct FGuid MapPackageGuid;  // 0x14(0x10)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.Character.ServerMoveDual
// Size: 0x58(Inherited: 0x0) 
struct FServerMoveDual
{
	float TimeStamp0;  // 0x0(0x4)
	struct FVector_NetQuantize10 InAccel0;  // 0x4(0xC)
	char PendingFlags;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	uint32_t View0;  // 0x14(0x4)
	float Timestamp;  // 0x18(0x4)
	struct FVector_NetQuantize10 InAccel;  // 0x1C(0xC)
	struct FVector_NetQuantize100 ClientLoc;  // 0x28(0xC)
	char NewFlags;  // 0x34(0x1)
	char ClientRoll;  // 0x35(0x1)
	char pad_54[2];  // 0x36(0x2)
	uint32_t View;  // 0x38(0x4)
	char pad_60[4];  // 0x3C(0x4)
	struct UPrimitiveComponent* ClientMovementBase;  // 0x40(0x8)
	struct FName ClientBaseBoneName;  // 0x48(0x8)
	char ClientMovementMode;  // 0x50(0x1)
	char pad_81[3];  // 0x51(0x3)
	float InCrouchedHalfHeight;  // 0x54(0x4)

}; 
// Function Engine.PlayerController.ClientUnmutePlayer
// Size: 0x28(Inherited: 0x0) 
struct FClientUnmutePlayer
{
	struct FUniqueNetIdRepl PlayerId;  // 0x0(0x28)

}; 
// ScriptStruct Engine.NamedColor
// Size: 0xC(Inherited: 0x0) 
struct FNamedColor
{
	struct FColor Value;  // 0x0(0x4)
	struct FName Name;  // 0x4(0x8)

}; 
// ScriptStruct Engine.UpdateLevelStreamingLevelStatus
// Size: 0x10(Inherited: 0x0) 
struct FUpdateLevelStreamingLevelStatus
{
	struct FName PackageName;  // 0x0(0x8)
	int32_t LODIndex;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bNewShouldBeLoaded : 1;  // 0xC(0x1)
	char pad_13_1 : 7;  // 0xD(0x1)
	bool bNewShouldBeVisible : 1;  // 0xD(0x1)
	char pad_14_1 : 7;  // 0xE(0x1)
	bool bNewShouldBlockOnLoad : 1;  // 0xE(0x1)
	char pad_15[1];  // 0xF(0x1)

}; 
// Function Engine.NavMovementComponent.IsFlying
// Size: 0x1(Inherited: 0x0) 
struct FIsFlying
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PlayerController.ClientWasKicked
// Size: 0x18(Inherited: 0x0) 
struct FClientWasKicked
{
	struct FText KickReason;  // 0x0(0x18)

}; 
// Function Engine.KismetMathLibrary.VSizeSquared
// Size: 0x10(Inherited: 0x0) 
struct FVSizeSquared
{
	struct FVector A;  // 0x0(0xC)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.PlayerController.ConsoleKey
// Size: 0x18(Inherited: 0x0) 
struct FConsoleKey
{
	struct FKey Key;  // 0x0(0x18)

}; 
// Function Engine.PrimitiveComponent.GetMaterialFromCollisionFaceIndex
// Size: 0x10(Inherited: 0x0) 
struct FGetMaterialFromCollisionFaceIndex
{
	int32_t FaceIndex;  // 0x0(0x4)
	int32_t SectionIndex;  // 0x4(0x4)
	struct UMaterialInterface* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector_IsNAN
// Size: 0x10(Inherited: 0x0) 
struct FVector_IsNAN
{
	struct FVector A;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool ReturnValue : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.PlayerController.DeprojectMousePositionToWorld
// Size: 0x1C(Inherited: 0x0) 
struct FDeprojectMousePositionToWorld
{
	struct FVector WorldLocation;  // 0x0(0xC)
	struct FVector WorldDirection;  // 0xC(0xC)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)

}; 
// Function Engine.PhysicalAnimationComponent.SetSkeletalMeshComponent
// Size: 0x8(Inherited: 0x0) 
struct FSetSkeletalMeshComponent
{
	struct USkeletalMeshComponent* InSkeletalMeshComponent;  // 0x0(0x8)

}; 
// Function Engine.PlayerController.GetViewportSize
// Size: 0x8(Inherited: 0x0) 
struct FGetViewportSize
{
	int32_t SizeX;  // 0x0(0x4)
	int32_t SizeY;  // 0x4(0x4)

}; 
// Function Engine.PlayerController.DeprojectScreenPositionToWorld
// Size: 0x24(Inherited: 0x0) 
struct FDeprojectScreenPositionToWorld
{
	float ScreenX;  // 0x0(0x4)
	float ScreenY;  // 0x4(0x4)
	struct FVector WorldLocation;  // 0x8(0xC)
	struct FVector WorldDirection;  // 0x14(0xC)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[3];  // 0x21(0x3)

}; 
// Function Engine.GameUserSettings.GetShadingQuality
// Size: 0x4(Inherited: 0x0) 
struct FGetShadingQuality
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.DirectionalLightComponent.SetShadowDistanceFadeoutFraction
// Size: 0x4(Inherited: 0x0) 
struct FSetShadowDistanceFadeoutFraction
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.PlayerController.FOV
// Size: 0x4(Inherited: 0x0) 
struct FFOV
{
	float NewFOV;  // 0x0(0x4)

}; 
// ScriptStruct Engine.ChildActorAttachedActorInfo
// Size: 0x40(Inherited: 0x0) 
struct FChildActorAttachedActorInfo
{
	struct TWeakObjectPtr<AActor> Actor;  // 0x0(0x8)
	struct FName SocketName;  // 0x8(0x8)
	struct FTransform RelativeTransform;  // 0x10(0x30)

}; 
// Function Engine.GameUserSettings.SetOverallScalabilityLevel
// Size: 0x4(Inherited: 0x0) 
struct FSetOverallScalabilityLevel
{
	int32_t Value;  // 0x0(0x4)

}; 
// Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringExponent
// Size: 0x4(Inherited: 0x0) 
struct FSetDirectionalInscatteringExponent
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.PlayerController.ToggleSpeaking
// Size: 0x1(Inherited: 0x0) 
struct FToggleSpeaking
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInSpeaking : 1;  // 0x0(0x1)

}; 
// Function Engine.GameplayStatics.PrimeSound
// Size: 0x8(Inherited: 0x0) 
struct FPrimeSound
{
	struct USoundBase* InSound;  // 0x0(0x8)

}; 
// Function Engine.PlayerController.GetFocalLocation
// Size: 0xC(Inherited: 0x0) 
struct FGetFocalLocation
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// ScriptStruct Engine.ParticleEvent_GenerateInfo
// Size: 0x28(Inherited: 0x0) 
struct FParticleEvent_GenerateInfo
{
	char EParticleEventType Type;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	int32_t Frequency;  // 0x4(0x4)
	int32_t ParticleFrequency;  // 0x8(0x4)
	char FirstTimeOnly : 1;  // 0xC(0x1)
	char LastTimeOnly : 1;  // 0xC(0x1)
	char UseReflectedImpactVector : 1;  // 0xC(0x1)
	char bUseOrbitOffset : 1;  // 0xC(0x1)
	char pad_12_1 : 4;  // 0xC(0x1)
	char pad_13[4];  // 0xD(0x4)
	struct FName CustomName;  // 0x10(0x8)
	struct TArray<struct UParticleModuleEventSendToGame*> ParticleModuleEventsToSendToGame;  // 0x18(0x10)

}; 
// Function Engine.PlayerController.GetHitResultUnderCursorByChannel
// Size: 0x90(Inherited: 0x0) 
struct FGetHitResultUnderCursorByChannel
{
	char ETraceTypeQuery TraceChannel;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bTraceComplex : 1;  // 0x1(0x1)
	char pad_2[2];  // 0x2(0x2)
	struct FHitResult HitResult;  // 0x4(0x88)
	char pad_140_1 : 7;  // 0x8C(0x1)
	bool ReturnValue : 1;  // 0x8C(0x1)
	char pad_141[3];  // 0x8D(0x3)

}; 
// ScriptStruct Engine.BranchingPointMarker
// Size: 0xC(Inherited: 0x0) 
struct FBranchingPointMarker
{
	int32_t NotifyIndex;  // 0x0(0x4)
	float TriggerTime;  // 0x4(0x4)
	char EAnimNotifyEventType NotifyEventType;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.AtmosphericFogComponent.DisableSunDisk
// Size: 0x1(Inherited: 0x0) 
struct FDisableSunDisk
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool NewSunDisk : 1;  // 0x0(0x1)

}; 
// Function Engine.SceneComponent.SetWorldScale3D
// Size: 0xC(Inherited: 0x0) 
struct FSetWorldScale3D
{
	struct FVector NewScale;  // 0x0(0xC)

}; 
// ScriptStruct Engine.POV
// Size: 0x1C(Inherited: 0x0) 
struct FPOV
{
	struct FVector Location;  // 0x0(0xC)
	struct FRotator Rotation;  // 0xC(0xC)
	float FOV;  // 0x18(0x4)

}; 
// ScriptStruct Engine.TTPropertyTrack
// Size: 0x20(Inherited: 0x18) 
struct FTTPropertyTrack : public FTTTrackBase
{
	struct FName PropertyName;  // 0x18(0x8)

}; 
// Function Engine.PlayerController.GetHitResultUnderCursorForObjects
// Size: 0xA0(Inherited: 0x0) 
struct FGetHitResultUnderCursorForObjects
{
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bTraceComplex : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	struct FHitResult HitResult;  // 0x14(0x88)
	char pad_156_1 : 7;  // 0x9C(0x1)
	bool ReturnValue : 1;  // 0x9C(0x1)
	char pad_157[3];  // 0x9D(0x3)

}; 
// ScriptStruct Engine.LightmassDirectionalLightSettings
// Size: 0x10(Inherited: 0xC) 
struct FLightmassDirectionalLightSettings : public FLightmassLightSettings
{
	float LightSourceAngle;  // 0xC(0x4)

}; 
// ScriptStruct Engine.FontRenderInfo
// Size: 0x28(Inherited: 0x0) 
struct FFontRenderInfo
{
	char bClipText : 1;  // 0x0(0x1)
	char bEnableShadow : 1;  // 0x0(0x1)
	char pad_0_1 : 6;  // 0x0(0x1)
	char pad_1[4];  // 0x1(0x4)
	struct FDepthFieldGlowInfo GlowInfo;  // 0x4(0x24)

}; 
// Function Engine.PlayerController.GetHitResultUnderFingerByChannel
// Size: 0x90(Inherited: 0x0) 
struct FGetHitResultUnderFingerByChannel
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)
	char ETraceTypeQuery TraceChannel;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool bTraceComplex : 1;  // 0x2(0x1)
	char pad_3[1];  // 0x3(0x1)
	struct FHitResult HitResult;  // 0x4(0x88)
	char pad_140_1 : 7;  // 0x8C(0x1)
	bool ReturnValue : 1;  // 0x8C(0x1)
	char pad_141[3];  // 0x8D(0x3)

}; 
// Function Engine.StaticMesh.AddMaterial
// Size: 0x10(Inherited: 0x0) 
struct FAddMaterial
{
	struct UMaterialInterface* Material;  // 0x0(0x8)
	struct FName ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Quat_Identity
// Size: 0x10(Inherited: 0x0) 
struct FQuat_Identity
{
	struct FQuat ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.PlayerController.GetHitResultUnderFingerForObjects
// Size: 0xA8(Inherited: 0x0) 
struct FGetHitResultUnderFingerForObjects
{
	char ETouchIndex FingerIndex;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x8(0x10)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bTraceComplex : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)
	struct FHitResult HitResult;  // 0x1C(0x88)
	char pad_164_1 : 7;  // 0xA4(0x1)
	bool ReturnValue : 1;  // 0xA4(0x1)
	char pad_165[3];  // 0xA5(0x3)

}; 
// Function Engine.SplineComponent.GetArriveTangentAtSplinePoint
// Size: 0x14(Inherited: 0x0) 
struct FGetArriveTangentAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.CapsuleComponent.SetCapsuleRadius
// Size: 0x8(Inherited: 0x0) 
struct FSetCapsuleRadius
{
	float Radius;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bUpdateOverlaps : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.PlayerController.GetHUD
// Size: 0x8(Inherited: 0x0) 
struct FGetHUD
{
	struct AHUD* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.PlayerController.GetInputAnalogKeyState
// Size: 0x20(Inherited: 0x0) 
struct FGetInputAnalogKeyState
{
	struct FKey Key;  // 0x0(0x18)
	float ReturnValue;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.AmbientSound.FadeIn
// Size: 0x8(Inherited: 0x0) 
struct FFadeIn
{
	float FadeInDuration;  // 0x0(0x4)
	float FadeVolumeLevel;  // 0x4(0x4)

}; 
// Function Engine.KismetInputLibrary.Key_GetDisplayName
// Size: 0x30(Inherited: 0x0) 
struct FKey_GetDisplayName
{
	struct FKey Key;  // 0x0(0x18)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.PlayerController.GetInputMotionState
// Size: 0x30(Inherited: 0x0) 
struct FGetInputMotionState
{
	struct FVector Tilt;  // 0x0(0xC)
	struct FVector RotationRate;  // 0xC(0xC)
	struct FVector Gravity;  // 0x18(0xC)
	struct FVector Acceleration;  // 0x24(0xC)

}; 
// Function Engine.PlayerController.GetSpectatorPawn
// Size: 0x8(Inherited: 0x0) 
struct FGetSpectatorPawn
{
	struct ASpectatorPawn* ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.PrimaryAssetRulesOverride
// Size: 0x1C(Inherited: 0x0) 
struct FPrimaryAssetRulesOverride
{
	struct FPrimaryAssetId PrimaryAssetId;  // 0x0(0x10)
	struct FPrimaryAssetRules Rules;  // 0x10(0xC)

}; 
// Function Engine.PlayerCameraManager.AddCameraLensEffect
// Size: 0x10(Inherited: 0x0) 
struct FAddCameraLensEffect
{
	AEmitterCameraLensEffectBase* LensEffectEmitterClass;  // 0x0(0x8)
	struct AEmitterCameraLensEffectBase* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.CheatManager.BugIt
// Size: 0x10(Inherited: 0x0) 
struct FBugIt
{
	struct FString ScreenShotDescription;  // 0x0(0x10)

}; 
// Function Engine.PlayerController.K2_ClientPlayForceFeedback
// Size: 0x18(Inherited: 0x0) 
struct FK2_ClientPlayForceFeedback
{
	struct UForceFeedbackEffect* ForceFeedbackEffect;  // 0x0(0x8)
	struct FName Tag;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bLooping : 1;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bIgnoreTimeDilation : 1;  // 0x11(0x1)
	char pad_18_1 : 7;  // 0x12(0x1)
	bool bPlayWhilePaused : 1;  // 0x12(0x1)
	char pad_19[5];  // 0x13(0x5)

}; 
// Function Engine.KismetTextLibrary.Conv_FloatToText
// Size: 0x30(Inherited: 0x0) 
struct FConv_FloatToText
{
	float Value;  // 0x0(0x4)
	char ERoundingMode RoundingMode;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bAlwaysSign : 1;  // 0x5(0x1)
	char pad_6_1 : 7;  // 0x6(0x1)
	bool bUseGrouping : 1;  // 0x6(0x1)
	char pad_7[1];  // 0x7(0x1)
	int32_t MinimumIntegralDigits;  // 0x8(0x4)
	int32_t MaximumIntegralDigits;  // 0xC(0x4)
	int32_t MinimumFractionalDigits;  // 0x10(0x4)
	int32_t MaximumFractionalDigits;  // 0x14(0x4)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.PlayerController.OnServerStartedVisualLogger
// Size: 0x1(Inherited: 0x0) 
struct FOnServerStartedVisualLogger
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bIsLogging : 1;  // 0x0(0x1)

}; 
// Function Engine.PlayerController.ProjectWorldLocationToScreen
// Size: 0x18(Inherited: 0x0) 
struct FProjectWorldLocationToScreen
{
	struct FVector WorldLocation;  // 0x0(0xC)
	struct FVector2D ScreenLocation;  // 0xC(0x8)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bPlayerViewportRelative : 1;  // 0x14(0x1)
	char pad_21_1 : 7;  // 0x15(0x1)
	bool ReturnValue : 1;  // 0x15(0x1)
	char pad_22[2];  // 0x16(0x2)

}; 
// Function Engine.SplineComponent.GetRightVectorAtTime
// Size: 0x14(Inherited: 0x0) 
struct FGetRightVectorAtTime
{
	float Time;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bUseConstantVelocity : 1;  // 0x5(0x1)
	char pad_6[2];  // 0x6(0x2)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.KismetInputLibrary.EqualEqual_KeyKey
// Size: 0x38(Inherited: 0x0) 
struct FEqualEqual_KeyKey
{
	struct FKey A;  // 0x0(0x18)
	struct FKey B;  // 0x18(0x18)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool ReturnValue : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 
// Function Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamicFromMaterial
// Size: 0x18(Inherited: 0x0) 
struct FCreateAndSetMaterialInstanceDynamicFromMaterial
{
	int32_t ElementIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct UMaterialInterface* Parent;  // 0x8(0x8)
	struct UMaterialInstanceDynamic* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.PrimitiveComponent.GetPhysicsAngularVelocityInDegrees
// Size: 0x14(Inherited: 0x0) 
struct FGetPhysicsAngularVelocityInDegrees
{
	struct FName BoneName;  // 0x0(0x8)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.SkyAtmosphereComponent.SetRayleighExponentialDistribution
// Size: 0x4(Inherited: 0x0) 
struct FSetRayleighExponentialDistribution
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.GameUserSettings.SetPostProcessingQuality
// Size: 0x4(Inherited: 0x0) 
struct FSetPostProcessingQuality
{
	int32_t Value;  // 0x0(0x4)

}; 
// Function Engine.PlayerController.SendToConsole
// Size: 0x10(Inherited: 0x0) 
struct FSendToConsole
{
	struct FString Command;  // 0x0(0x10)

}; 
// Function Engine.PlayerController.ServerCamera
// Size: 0x8(Inherited: 0x0) 
struct FServerCamera
{
	struct FName NewMode;  // 0x0(0x8)

}; 
// ScriptStruct Engine.AnimNode_LinkedInputPose
// Size: 0x118(Inherited: 0x10) 
struct FAnimNode_LinkedInputPose : public FAnimNode_Base
{
	struct FName Name;  // 0x10(0x8)
	struct FName Graph;  // 0x18(0x8)
	struct FPoseLink InputPose;  // 0x20(0x10)
	char pad_48[232];  // 0x30(0xE8)

}; 
// ScriptStruct Engine.CurveMetaData
// Size: 0x18(Inherited: 0x0) 
struct FCurveMetaData
{
	char pad_0[24];  // 0x0(0x18)

}; 
// Function Engine.KismetArrayLibrary.Array_Identical
// Size: 0x28(Inherited: 0x0) 
struct FArray_Identical
{
	struct TArray<int32_t> ArrayA;  // 0x0(0x10)
	struct TArray<int32_t> ArrayB;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// Function Engine.PlayerController.ServerNotifyLoadedWorld
// Size: 0x8(Inherited: 0x0) 
struct FServerNotifyLoadedWorld
{
	struct FName WorldPackageName;  // 0x0(0x8)

}; 
// Function Engine.SceneComponent.GetAttachParent
// Size: 0x8(Inherited: 0x0) 
struct FGetAttachParent
{
	struct USceneComponent* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.GetSeconds
// Size: 0x10(Inherited: 0x0) 
struct FGetSeconds
{
	struct FTimespan A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// ScriptStruct Engine.PreviewAttachedObjectPair
// Size: 0x38(Inherited: 0x0) 
struct FPreviewAttachedObjectPair
{
	struct TSoftObjectPtr<UObject> AttachedObject;  // 0x0(0x28)
	struct UObject* Object;  // 0x28(0x8)
	struct FName AttachedTo;  // 0x30(0x8)

}; 
// Function Engine.BlueprintPathsLibrary.ValidatePath
// Size: 0x30(Inherited: 0x0) 
struct FValidatePath
{
	struct FString InPath;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bDidSucceed : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)
	struct FText OutReason;  // 0x18(0x18)

}; 
// Function Engine.PlayerController.ServerSetSpectatorLocation
// Size: 0x18(Inherited: 0x0) 
struct FServerSetSpectatorLocation
{
	struct FVector NewLoc;  // 0x0(0xC)
	struct FRotator NewRot;  // 0xC(0xC)

}; 
// Function Engine.PlayerController.ServerSetSpectatorWaiting
// Size: 0x1(Inherited: 0x0) 
struct FServerSetSpectatorWaiting
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bWaiting : 1;  // 0x0(0x1)

}; 
// Function Engine.CheatManager.ChangeSize
// Size: 0x4(Inherited: 0x0) 
struct FChangeSize
{
	float F;  // 0x0(0x4)

}; 
// Function Engine.PlayerController.ServerUpdateCamera
// Size: 0x10(Inherited: 0x0) 
struct FServerUpdateCamera
{
	struct FVector_NetQuantize CamLoc;  // 0x0(0xC)
	int32_t CamPitchAndYaw;  // 0xC(0x4)

}; 
// Function Engine.PlayerController.ServerUpdateLevelVisibility
// Size: 0x14(Inherited: 0x0) 
struct FServerUpdateLevelVisibility
{
	struct FUpdateLevelVisibilityLevelInfo LevelVisibility;  // 0x0(0x14)

}; 
// Function Engine.KismetStringLibrary.Conv_StringToVector
// Size: 0x20(Inherited: 0x0) 
struct FConv_StringToVector
{
	struct FString inString;  // 0x0(0x10)
	struct FVector OutConvertedVector;  // 0x10(0xC)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool OutIsValid : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// Function Engine.Character.PlayAnimMontage
// Size: 0x18(Inherited: 0x0) 
struct FPlayAnimMontage
{
	struct UAnimMontage* AnimMontage;  // 0x0(0x8)
	float InPlayRate;  // 0x8(0x4)
	struct FName StartSectionName;  // 0xC(0x8)
	float ReturnValue;  // 0x14(0x4)

}; 
// Function Engine.Pawn.IsBotControlled
// Size: 0x1(Inherited: 0x0) 
struct FIsBotControlled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.UpdateLevelVisibilityLevelInfo
// Size: 0x14(Inherited: 0x0) 
struct FUpdateLevelVisibilityLevelInfo
{
	struct FName PackageName;  // 0x0(0x8)
	struct FName Filename;  // 0x8(0x8)
	char bIsVisible : 1;  // 0x10(0x1)
	char pad_16_1 : 7;  // 0x10(0x1)
	char pad_17[4];  // 0x11(0x4)

}; 
// Function Engine.PlayerController.ServerUpdateMultipleLevelsVisibility
// Size: 0x10(Inherited: 0x0) 
struct FServerUpdateMultipleLevelsVisibility
{
	struct TArray<struct FUpdateLevelVisibilityLevelInfo> LevelVisibilities;  // 0x0(0x10)

}; 
// ScriptStruct Engine.StatColorMapping
// Size: 0x28(Inherited: 0x0) 
struct FStatColorMapping
{
	struct FString StatName;  // 0x0(0x10)
	struct TArray<struct FStatColorMapEntry> ColorMap;  // 0x10(0x10)
	char DisableBlend : 1;  // 0x20(0x1)
	char pad_32_1 : 7;  // 0x20(0x1)
	char pad_33[8];  // 0x21(0x8)

}; 
// Function Engine.PoseableMeshComponent.SetBoneTransformByName
// Size: 0x50(Inherited: 0x0) 
struct FSetBoneTransformByName
{
	struct FName BoneName;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FTransform InTransform;  // 0x10(0x30)
	char EBoneSpaces BoneSpace;  // 0x40(0x1)
	char pad_65[15];  // 0x41(0xF)

}; 
// ScriptStruct Engine.AnimNode_ConvertComponentToLocalSpace
// Size: 0x20(Inherited: 0x10) 
struct FAnimNode_ConvertComponentToLocalSpace : public FAnimNode_Base
{
	struct FComponentSpacePoseLink ComponentPose;  // 0x10(0x10)

}; 
// Function Engine.PlayerController.SetAudioListenerAttenuationOverride
// Size: 0x18(Inherited: 0x0) 
struct FSetAudioListenerAttenuationOverride
{
	struct USceneComponent* AttachToComponent;  // 0x0(0x8)
	struct FVector AttenuationLocationOVerride;  // 0x8(0xC)
	char pad_20[4];  // 0x14(0x4)

}; 
// ScriptStruct Engine.CharacterServerMovePackedBits
// Size: 0x98(Inherited: 0x98) 
struct FCharacterServerMovePackedBits : public FCharacterNetworkSerializationPackedBits
{

}; 
// Function Engine.PlayerController.SetControllerLightColor
// Size: 0x4(Inherited: 0x0) 
struct FSetControllerLightColor
{
	struct FColor Color;  // 0x0(0x4)

}; 
// Function Engine.PlayerController.SetHapticsByValue
// Size: 0xC(Inherited: 0x0) 
struct FSetHapticsByValue
{
	float Frequency;  // 0x0(0x4)
	float Amplitude;  // 0x4(0x4)
	uint8_t  Hand;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.PlayerController.SetMouseCursorWidget
// Size: 0x10(Inherited: 0x0) 
struct FSetMouseCursorWidget
{
	char EMouseCursor Cursor;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct UUserWidget* CursorWidget;  // 0x8(0x8)

}; 
// Function Engine.PlayerController.SetMouseLocation
// Size: 0x8(Inherited: 0x0) 
struct FSetMouseLocation
{
	int32_t X;  // 0x0(0x4)
	int32_t Y;  // 0x4(0x4)

}; 
// Function Engine.KismetStringLibrary.BuildString_Rotator
// Size: 0x50(Inherited: 0x0) 
struct FBuildString_Rotator
{
	struct FString AppendTo;  // 0x0(0x10)
	struct FString prefix;  // 0x10(0x10)
	struct FRotator InRot;  // 0x20(0xC)
	char pad_44[4];  // 0x2C(0x4)
	struct FString suffix;  // 0x30(0x10)
	struct FString ReturnValue;  // 0x40(0x10)

}; 
// Function Engine.SplineComponent.FindRollClosestToWorldLocation
// Size: 0x14(Inherited: 0x0) 
struct FFindRollClosestToWorldLocation
{
	struct FVector WorldLocation;  // 0x0(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.PlayerController.SetVirtualJoystickVisibility
// Size: 0x1(Inherited: 0x0) 
struct FSetVirtualJoystickVisibility
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bVisible : 1;  // 0x0(0x1)

}; 
// Function Engine.PlayerController.StartFire
// Size: 0x1(Inherited: 0x0) 
struct FStartFire
{
	char FireModeNum;  // 0x0(0x1)

}; 
// Function Engine.PlayerController.StopHapticEffect
// Size: 0x1(Inherited: 0x0) 
struct FStopHapticEffect
{
	uint8_t  Hand;  // 0x0(0x1)

}; 
// Function Engine.GameUserSettings.GetSyncInterval
// Size: 0x4(Inherited: 0x0) 
struct FGetSyncInterval
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.BlueprintPathsLibrary.GetEditorLocalizationPaths
// Size: 0x10(Inherited: 0x0) 
struct FGetEditorLocalizationPaths
{
	struct TArray<struct FString> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.PlayerController.SwitchLevel
// Size: 0x10(Inherited: 0x0) 
struct FSwitchLevel
{
	struct FString URL;  // 0x0(0x10)

}; 
// Function Engine.FXSystemComponent.SetAutoAttachmentParameters
// Size: 0x18(Inherited: 0x0) 
struct FSetAutoAttachmentParameters
{
	struct USceneComponent* Parent;  // 0x0(0x8)
	struct FName SocketName;  // 0x8(0x8)
	uint8_t  LocationRule;  // 0x10(0x1)
	uint8_t  RotationRule;  // 0x11(0x1)
	uint8_t  ScaleRule;  // 0x12(0x1)
	char pad_19[5];  // 0x13(0x5)

}; 
// ScriptStruct Engine.KShapeElem
// Size: 0x30(Inherited: 0x0) 
struct FKShapeElem
{
	char pad_0[8];  // 0x0(0x8)
	float RestOffset;  // 0x8(0x4)
	struct FName Name;  // 0xC(0x8)
	char pad_20[4];  // 0x14(0x4)
	char bContributeToMass : 1;  // 0x18(0x1)
	char pad_24_1 : 7;  // 0x18(0x1)
	char ECollisionEnabled CollisionEnabled;  // 0x19(0x1)
	char pad_26[22];  // 0x1A(0x16)

}; 
// Function Engine.SkeletalMeshComponent.SetNotifyRigidBodyCollisionBelow
// Size: 0x10(Inherited: 0x0) 
struct FSetNotifyRigidBodyCollisionBelow
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewNotifyRigidBodyCollision : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FName BoneName;  // 0x4(0x8)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bIncludeSelf : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.PlayerController.TestServerLevelVisibilityChange
// Size: 0x10(Inherited: 0x0) 
struct FTestServerLevelVisibilityChange
{
	struct FName PackageName;  // 0x0(0x8)
	struct FName Filename;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.VSize
// Size: 0x10(Inherited: 0x0) 
struct FVSize
{
	struct FVector A;  // 0x0(0xC)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.SceneComponent.GetAttachSocketName
// Size: 0x8(Inherited: 0x0) 
struct FGetAttachSocketName
{
	struct FName ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.SplineComponent.ClearSplinePoints
// Size: 0x1(Inherited: 0x0) 
struct FClearSplinePoints
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bUpdateSpline : 1;  // 0x0(0x1)

}; 
// Function Engine.PlayerController.WasInputKeyJustReleased
// Size: 0x20(Inherited: 0x0) 
struct FWasInputKeyJustReleased
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// ScriptStruct Engine.ActiveForceFeedbackEffect
// Size: 0x18(Inherited: 0x0) 
struct FActiveForceFeedbackEffect
{
	struct UForceFeedbackEffect* ForceFeedbackEffect;  // 0x0(0x8)
	char pad_8[16];  // 0x8(0x10)

}; 
// Function Engine.Pawn.AddControllerPitchInput
// Size: 0x4(Inherited: 0x0) 
struct FAddControllerPitchInput
{
	float Val;  // 0x0(0x4)

}; 
// ScriptStruct Engine.MulticastRecordOptions
// Size: 0x18(Inherited: 0x0) 
struct FMulticastRecordOptions
{
	struct FString FuncPathName;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bServerSkip : 1;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bClientSkip : 1;  // 0x11(0x1)
	char pad_18[6];  // 0x12(0x6)

}; 
// ScriptStruct Engine.StaticMeshOptimizationSettings
// Size: 0x1C(Inherited: 0x0) 
struct FStaticMeshOptimizationSettings
{
	char EOptimizationType ReductionMethod;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float NumOfTrianglesPercentage;  // 0x4(0x4)
	float MaxDeviationPercentage;  // 0x8(0x4)
	float WeldingThreshold;  // 0xC(0x4)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bRecalcNormals : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	float NormalsThreshold;  // 0x14(0x4)
	char SilhouetteImportance;  // 0x18(0x1)
	char TextureImportance;  // 0x19(0x1)
	char ShadingImportance;  // 0x1A(0x1)
	char pad_27[1];  // 0x1B(0x1)

}; 
// Function Engine.SceneComponent.K2_AttachTo
// Size: 0x18(Inherited: 0x0) 
struct FK2_AttachTo
{
	struct USceneComponent* InParent;  // 0x0(0x8)
	struct FName InSocketName;  // 0x8(0x8)
	char EAttachLocation AttachType;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bWeldSimulatedBodies : 1;  // 0x11(0x1)
	char pad_18_1 : 7;  // 0x12(0x1)
	bool ReturnValue : 1;  // 0x12(0x1)
	char pad_19[5];  // 0x13(0x5)

}; 
// Function Engine.KismetMathLibrary.DegAtan
// Size: 0x8(Inherited: 0x0) 
struct FDegAtan
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.Pawn.AddControllerRollInput
// Size: 0x4(Inherited: 0x0) 
struct FAddControllerRollInput
{
	float Val;  // 0x0(0x4)

}; 
// Function Engine.DebugCameraController.GetSelectedActor
// Size: 0x8(Inherited: 0x0) 
struct FGetSelectedActor
{
	struct AActor* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.Pawn.IsControlled
// Size: 0x1(Inherited: 0x0) 
struct FIsControlled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.ClampInt64
// Size: 0x20(Inherited: 0x0) 
struct FClampInt64
{
	int64_t Value;  // 0x0(0x8)
	int64_t Min;  // 0x8(0x8)
	int64_t Max;  // 0x10(0x8)
	int64_t ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.Pawn.AddMovementInput
// Size: 0x14(Inherited: 0x0) 
struct FAddMovementInput
{
	struct FVector WorldDirection;  // 0x0(0xC)
	float ScaleValue;  // 0xC(0x4)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bForce : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// ScriptStruct Engine.StreamableTextureInstance
// Size: 0x28(Inherited: 0x0) 
struct FStreamableTextureInstance
{
	char pad_0[40];  // 0x0(0x28)

}; 
// Function Engine.KismetMathLibrary.MakeTransform
// Size: 0x60(Inherited: 0x0) 
struct FMakeTransform
{
	struct FVector Location;  // 0x0(0xC)
	struct FRotator Rotation;  // 0xC(0xC)
	struct FVector Scale;  // 0x18(0xC)
	char pad_36[12];  // 0x24(0xC)
	struct FTransform ReturnValue;  // 0x30(0x30)

}; 
// Function Engine.DirectionalLightComponent.SetAtmosphereSunLight
// Size: 0x1(Inherited: 0x0) 
struct FSetAtmosphereSunLight
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.Pawn.GetBaseAimRotation
// Size: 0xC(Inherited: 0x0) 
struct FGetBaseAimRotation
{
	struct FRotator ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.Pawn.GetController
// Size: 0x8(Inherited: 0x0) 
struct FGetController
{
	struct AController* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.Pawn.GetMovementBaseActor
// Size: 0x10(Inherited: 0x0) 
struct FGetMovementBaseActor
{
	struct APawn* Pawn;  // 0x0(0x8)
	struct AActor* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Add_TimespanTimespan
// Size: 0x18(Inherited: 0x0) 
struct FAdd_TimespanTimespan
{
	struct FTimespan A;  // 0x0(0x8)
	struct FTimespan B;  // 0x8(0x8)
	struct FTimespan ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.Pawn.GetMovementComponent
// Size: 0x8(Inherited: 0x0) 
struct FGetMovementComponent
{
	struct UPawnMovementComponent* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.Pawn.GetPendingMovementInputVector
// Size: 0xC(Inherited: 0x0) 
struct FGetPendingMovementInputVector
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.SceneComponent.K2_AddWorldTransformKeepScale
// Size: 0xC0(Inherited: 0x0) 
struct FK2_AddWorldTransformKeepScale
{
	struct FTransform DeltaTransform;  // 0x0(0x30)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bSweep : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	struct FHitResult SweepHitResult;  // 0x34(0x88)
	char pad_188_1 : 7;  // 0xBC(0x1)
	bool bTeleport : 1;  // 0xBC(0x1)
	char pad_189[3];  // 0xBD(0x3)

}; 
// ScriptStruct Engine.SkeletalMeshComponentClothTickFunction
// Size: 0x30(Inherited: 0x28) 
struct FSkeletalMeshComponentClothTickFunction : public FTickFunction
{
	char pad_40[8];  // 0x28(0x8)

}; 
// Function Engine.Pawn.IsPawnControlled
// Size: 0x1(Inherited: 0x0) 
struct FIsPawnControlled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.Pawn.K2_GetMovementInputVector
// Size: 0xC(Inherited: 0x0) 
struct FK2_GetMovementInputVector
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.SkeletalMeshComponent.SetAllBodiesSimulatePhysics
// Size: 0x1(Inherited: 0x0) 
struct FSetAllBodiesSimulatePhysics
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewSimulate : 1;  // 0x0(0x1)

}; 
// Function Engine.Pawn.LaunchPawn
// Size: 0x10(Inherited: 0x0) 
struct FLaunchPawn
{
	struct FVector LaunchVelocity;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bXYOverride : 1;  // 0xC(0x1)
	char pad_13_1 : 7;  // 0xD(0x1)
	bool bZOverride : 1;  // 0xD(0x1)
	char pad_14[2];  // 0xE(0x2)

}; 
// Function Engine.AnimSingleNodeInstance.PlayAnim
// Size: 0xC(Inherited: 0x0) 
struct FPlayAnim
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bIsLooping : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float InPlayRate;  // 0x4(0x4)
	float InStartPosition;  // 0x8(0x4)

}; 
// Function Engine.Pawn.ReceiveUnpossessed
// Size: 0x8(Inherited: 0x0) 
struct FReceiveUnpossessed
{
	struct AController* OldController;  // 0x0(0x8)

}; 
// Function Engine.Character.GetBaseTranslationOffset
// Size: 0xC(Inherited: 0x0) 
struct FGetBaseTranslationOffset
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.Character.CacheInitialMeshOffset
// Size: 0x18(Inherited: 0x0) 
struct FCacheInitialMeshOffset
{
	struct FVector MeshRelativeLocation;  // 0x0(0xC)
	struct FRotator MeshRelativeRotation;  // 0xC(0xC)

}; 
// ScriptStruct Engine.AtmospherePrecomputeParameters
// Size: 0x2C(Inherited: 0x0) 
struct FAtmospherePrecomputeParameters
{
	float DensityHeight;  // 0x0(0x4)
	float DecayHeight;  // 0x4(0x4)
	int32_t MaxScatteringOrder;  // 0x8(0x4)
	int32_t TransmittanceTexWidth;  // 0xC(0x4)
	int32_t TransmittanceTexHeight;  // 0x10(0x4)
	int32_t IrradianceTexWidth;  // 0x14(0x4)
	int32_t IrradianceTexHeight;  // 0x18(0x4)
	int32_t InscatterAltitudeSampleNum;  // 0x1C(0x4)
	int32_t InscatterMuNum;  // 0x20(0x4)
	int32_t InscatterMuSNum;  // 0x24(0x4)
	int32_t InscatterNuNum;  // 0x28(0x4)

}; 
// Function Engine.Character.CanCrouch
// Size: 0x1(Inherited: 0x0) 
struct FCanCrouch
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.Character.CanJump
// Size: 0x1(Inherited: 0x0) 
struct FCanJump
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.CurveFloat.GetFloatValue
// Size: 0x8(Inherited: 0x0) 
struct FGetFloatValue
{
	float InTime;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.Character.CanJumpInternal
// Size: 0x1(Inherited: 0x0) 
struct FCanJumpInternal
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.TableRowBase
// Size: 0x8(Inherited: 0x0) 
struct FTableRowBase
{
	char pad_0[8];  // 0x0(0x8)

}; 
// Function Engine.KismetInternationalizationLibrary.SetCurrentAssetGroupCulture
// Size: 0x20(Inherited: 0x0) 
struct FSetCurrentAssetGroupCulture
{
	struct FName AssetGroup;  // 0x0(0x8)
	struct FString Culture;  // 0x8(0x10)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool SaveToConfig : 1;  // 0x18(0x1)
	char pad_25_1 : 7;  // 0x19(0x1)
	bool ReturnValue : 1;  // 0x19(0x1)
	char pad_26[6];  // 0x1A(0x6)

}; 
// Function Engine.SceneCaptureComponent2D.AddOrUpdateBlendable
// Size: 0x18(Inherited: 0x0) 
struct FAddOrUpdateBlendable
{
	struct TScriptInterface<IBlendableInterface> InBlendableObject;  // 0x0(0x10)
	float InWeight;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.Character.ClientAckGoodMove
// Size: 0x4(Inherited: 0x0) 
struct FClientAckGoodMove
{
	float Timestamp;  // 0x0(0x4)

}; 
// Function Engine.Light.GetBrightness
// Size: 0x4(Inherited: 0x0) 
struct FGetBrightness
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.Character.ClientAdjustRootMotionPosition
// Size: 0x40(Inherited: 0x0) 
struct FClientAdjustRootMotionPosition
{
	float Timestamp;  // 0x0(0x4)
	float ServerMontageTrackPosition;  // 0x4(0x4)
	struct FVector ServerLoc;  // 0x8(0xC)
	struct FVector_NetQuantizeNormal ServerRotation;  // 0x14(0xC)
	float ServerVelZ;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)
	struct UPrimitiveComponent* ServerBase;  // 0x28(0x8)
	struct FName ServerBoneName;  // 0x30(0x8)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool bHasBase : 1;  // 0x38(0x1)
	char pad_57_1 : 7;  // 0x39(0x1)
	bool bBaseRelativePosition : 1;  // 0x39(0x1)
	char ServerMovementMode;  // 0x3A(0x1)
	char pad_59[5];  // 0x3B(0x5)

}; 
// Function Engine.BlueprintPathsLibrary.ProjectPersistentDownloadDir
// Size: 0x10(Inherited: 0x0) 
struct FProjectPersistentDownloadDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.MeshComponent.GetMaterialSlotNames
// Size: 0x10(Inherited: 0x0) 
struct FGetMaterialSlotNames
{
	struct TArray<struct FName> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.HUD.AddHitBox
// Size: 0x20(Inherited: 0x0) 
struct FAddHitBox
{
	struct FVector2D position;  // 0x0(0x8)
	struct FVector2D Size;  // 0x8(0x8)
	struct FName InName;  // 0x10(0x8)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bConsumesInput : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)
	int32_t Priority;  // 0x1C(0x4)

}; 
// ScriptStruct Engine.LevelNameAndTime
// Size: 0x18(Inherited: 0x0) 
struct FLevelNameAndTime
{
	struct FString LevelName;  // 0x0(0x10)
	uint32_t LevelChangeTimeInMS;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// ScriptStruct Engine.Vector_NetQuantize10
// Size: 0xC(Inherited: 0xC) 
struct FVector_NetQuantize10 : public FVector
{

}; 
// Function Engine.PhysicsHandleComponent.SetLinearStiffness
// Size: 0x4(Inherited: 0x0) 
struct FSetLinearStiffness
{
	float NewLinearStiffness;  // 0x0(0x4)

}; 
// ScriptStruct Engine.RootMotionSourceSettings
// Size: 0x1(Inherited: 0x0) 
struct FRootMotionSourceSettings
{
	char Flags;  // 0x0(0x1)

}; 
// Function Engine.StereoLayerShapeCylinder.SetOverlayArc
// Size: 0x4(Inherited: 0x0) 
struct FSetOverlayArc
{
	float InOverlayArc;  // 0x0(0x4)

}; 
// Function Engine.HUD.ShowDebugForReticleTargetToggle
// Size: 0x8(Inherited: 0x0) 
struct FShowDebugForReticleTargetToggle
{
	AActor* DesiredClass;  // 0x0(0x8)

}; 
// ScriptStruct Engine.MarkerSyncAnimPosition
// Size: 0x14(Inherited: 0x0) 
struct FMarkerSyncAnimPosition
{
	struct FName PreviousMarkerName;  // 0x0(0x8)
	struct FName NextMarkerName;  // 0x8(0x8)
	float PositionBetweenMarkers;  // 0x10(0x4)

}; 
// ScriptStruct Engine.CharacterNetworkSerializationPackedBits
// Size: 0x98(Inherited: 0x0) 
struct FCharacterNetworkSerializationPackedBits
{
	char pad_0[152];  // 0x0(0x98)

}; 
// Function Engine.KismetTextLibrary.TextToLower
// Size: 0x30(Inherited: 0x0) 
struct FTextToLower
{
	struct FText InText;  // 0x0(0x18)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.KismetRenderingLibrary.RenderTargetCreateStaticTexture2DEditorOnly
// Size: 0x28(Inherited: 0x0) 
struct FRenderTargetCreateStaticTexture2DEditorOnly
{
	struct UTextureRenderTarget2D* RenderTarget;  // 0x0(0x8)
	struct FString Name;  // 0x8(0x10)
	char TextureCompressionSettings CompressionSettings;  // 0x18(0x1)
	char TextureMipGenSettings MipSettings;  // 0x19(0x1)
	char pad_26[6];  // 0x1A(0x6)
	struct UTexture2D* ReturnValue;  // 0x20(0x8)

}; 
// Function Engine.DataTableFunctionLibrary.GetDataTableRowFromName
// Size: 0x20(Inherited: 0x0) 
struct FGetDataTableRowFromName
{
	struct UDataTable* Table;  // 0x0(0x8)
	struct FName RowName;  // 0x8(0x8)
	struct FTableRowBase OutRow;  // 0x10(0x8)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// ScriptStruct Engine.VirtualTextureBuildSettings
// Size: 0xC(Inherited: 0x0) 
struct FVirtualTextureBuildSettings
{
	int32_t TileSize;  // 0x0(0x4)
	int32_t TileBorderSize;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bEnableCompressCrunch : 1;  // 0x8(0x1)
	char pad_9_1 : 7;  // 0x9(0x1)
	bool bEnableCompressZlib : 1;  // 0x9(0x1)
	char pad_10[2];  // 0xA(0x2)

}; 
// ScriptStruct Engine.CharacterMoveResponsePackedBits
// Size: 0x98(Inherited: 0x98) 
struct FCharacterMoveResponsePackedBits : public FCharacterNetworkSerializationPackedBits
{

}; 
// Function Engine.Character.Crouch
// Size: 0x1(Inherited: 0x0) 
struct FCrouch
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bClientSimulation : 1;  // 0x0(0x1)

}; 
// Function Engine.SplineComponent.AddPoints
// Size: 0x18(Inherited: 0x0) 
struct FAddPoints
{
	struct TArray<struct FSplinePoint> Points;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bUpdateSpline : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.Character.GetAnimRootMotionTranslationScale
// Size: 0x4(Inherited: 0x0) 
struct FGetAnimRootMotionTranslationScale
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.Character.GetBaseRotationOffsetRotator
// Size: 0xC(Inherited: 0x0) 
struct FGetBaseRotationOffsetRotator
{
	struct FRotator ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.TwitterIntegrationBase.GetNumAccounts
// Size: 0x4(Inherited: 0x0) 
struct FGetNumAccounts
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.PrecomputedLightInstanceData
// Size: 0x110(Inherited: 0xB8) 
struct FPrecomputedLightInstanceData : public FSceneComponentInstanceData
{
	char pad_184[8];  // 0xB8(0x8)
	struct FTransform Transform;  // 0xC0(0x30)
	struct FGuid LightGuid;  // 0xF0(0x10)
	int32_t PreviewShadowMapChannel;  // 0x100(0x4)
	char pad_260[12];  // 0x104(0xC)

}; 
// Function Engine.Character.HasAnyRootMotion
// Size: 0x1(Inherited: 0x0) 
struct FHasAnyRootMotion
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.VOIPTalker.GetVoiceLevel
// Size: 0x4(Inherited: 0x0) 
struct FGetVoiceLevel
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.CheatManager.DebugCapsuleSweepComplex
// Size: 0x1(Inherited: 0x0) 
struct FDebugCapsuleSweepComplex
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bTraceComplex : 1;  // 0x0(0x1)

}; 
// Function Engine.Character.K2_OnEndCrouch
// Size: 0x8(Inherited: 0x0) 
struct FK2_OnEndCrouch
{
	float HalfHeightAdjust;  // 0x0(0x4)
	float ScaledHalfHeightAdjust;  // 0x4(0x4)

}; 
// Function Engine.LightComponent.SetBloomMaxBrightness
// Size: 0x4(Inherited: 0x0) 
struct FSetBloomMaxBrightness
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetTextLibrary.AsCurrency_Integer
// Size: 0x40(Inherited: 0x0) 
struct FAsCurrency_Integer
{
	int32_t Value;  // 0x0(0x4)
	char ERoundingMode RoundingMode;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bAlwaysSign : 1;  // 0x5(0x1)
	char pad_6_1 : 7;  // 0x6(0x1)
	bool bUseGrouping : 1;  // 0x6(0x1)
	char pad_7[1];  // 0x7(0x1)
	int32_t MinimumIntegralDigits;  // 0x8(0x4)
	int32_t MaximumIntegralDigits;  // 0xC(0x4)
	int32_t MinimumFractionalDigits;  // 0x10(0x4)
	int32_t MaximumFractionalDigits;  // 0x14(0x4)
	struct FString CurrencyCode;  // 0x18(0x10)
	struct FText ReturnValue;  // 0x28(0x18)

}; 
// Function Engine.InputSettings.RemoveActionMapping
// Size: 0x30(Inherited: 0x0) 
struct FRemoveActionMapping
{
	struct FInputActionKeyMapping KeyMapping;  // 0x0(0x28)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bForceRebuildKeymaps : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// Function Engine.PrimitiveComponent.SetExcludeFromLightAttachmentGroup
// Size: 0x1(Inherited: 0x0) 
struct FSetExcludeFromLightAttachmentGroup
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInExcludeFromLightAttachmentGroup : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.SetCenterOfMass
// Size: 0x14(Inherited: 0x0) 
struct FSetCenterOfMass
{
	struct FVector CenterOfMassOffset;  // 0x0(0xC)
	struct FName BoneName;  // 0xC(0x8)

}; 
// Function Engine.KismetMathLibrary.Multiply_FloatFloat
// Size: 0xC(Inherited: 0x0) 
struct FMultiply_FloatFloat
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.GameplayStatics.DoesSaveGameExist
// Size: 0x18(Inherited: 0x0) 
struct FDoesSaveGameExist
{
	struct FString SlotName;  // 0x0(0x10)
	int32_t UserIndex;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.CheatManager.BugItGo
// Size: 0x18(Inherited: 0x0) 
struct FBugItGo
{
	float X;  // 0x0(0x4)
	float Y;  // 0x4(0x4)
	float Z;  // 0x8(0x4)
	float Pitch;  // 0xC(0x4)
	float Yaw;  // 0x10(0x4)
	float Roll;  // 0x14(0x4)

}; 
// Function Engine.Character.K2_OnMovementModeChanged
// Size: 0x4(Inherited: 0x0) 
struct FK2_OnMovementModeChanged
{
	char EMovementMode PrevMovementMode;  // 0x0(0x1)
	char EMovementMode NewMovementMode;  // 0x1(0x1)
	char PrevCustomMode;  // 0x2(0x1)
	char NewCustomMode;  // 0x3(0x1)

}; 
// Function Engine.Character.K2_UpdateCustomMovement
// Size: 0x4(Inherited: 0x0) 
struct FK2_UpdateCustomMovement
{
	float DeltaTime;  // 0x0(0x4)

}; 
// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationBadgeFromNow
// Size: 0x18(Inherited: 0x0) 
struct FScheduleLocalNotificationBadgeFromNow
{
	int32_t inSecondsFromNow;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FString ActivationEvent;  // 0x8(0x10)

}; 
// Function Engine.Character.LaunchCharacter
// Size: 0x10(Inherited: 0x0) 
struct FLaunchCharacter
{
	struct FVector LaunchVelocity;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bXYOverride : 1;  // 0xC(0x1)
	char pad_13_1 : 7;  // 0xD(0x1)
	bool bZOverride : 1;  // 0xD(0x1)
	char pad_14[2];  // 0xE(0x2)

}; 
// Function Engine.SplineComponent.SetSplineWorldPoints
// Size: 0x10(Inherited: 0x0) 
struct FSetSplineWorldPoints
{
	struct TArray<struct FVector> Points;  // 0x0(0x10)

}; 
// Function Engine.GameplayStatics.RebaseLocalOriginOntoZero
// Size: 0x20(Inherited: 0x0) 
struct FRebaseLocalOriginOntoZero
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector WorldLocation;  // 0x8(0xC)
	struct FVector ReturnValue;  // 0x14(0xC)

}; 
// Function Engine.Character.OnLanded
// Size: 0x88(Inherited: 0x0) 
struct FOnLanded
{
	struct FHitResult Hit;  // 0x0(0x88)

}; 
// Function Engine.Canvas.K2_DrawMaterial
// Size: 0x38(Inherited: 0x0) 
struct FK2_DrawMaterial
{
	struct UMaterialInterface* RenderMaterial;  // 0x0(0x8)
	struct FVector2D screenPosition;  // 0x8(0x8)
	struct FVector2D ScreenSize;  // 0x10(0x8)
	struct FVector2D CoordinatePosition;  // 0x18(0x8)
	struct FVector2D CoordinateSize;  // 0x20(0x8)
	float Rotation;  // 0x28(0x4)
	struct FVector2D PivotPoint;  // 0x2C(0x8)
	char pad_52[4];  // 0x34(0x4)

}; 
// Function Engine.BlueprintPathsLibrary.GetRestrictedFolderNames
// Size: 0x10(Inherited: 0x0) 
struct FGetRestrictedFolderNames
{
	struct TArray<struct FString> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.Character.OnLaunched
// Size: 0x10(Inherited: 0x0) 
struct FOnLaunched
{
	struct FVector LaunchVelocity;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bXYOverride : 1;  // 0xC(0x1)
	char pad_13_1 : 7;  // 0xD(0x1)
	bool bZOverride : 1;  // 0xD(0x1)
	char pad_14[2];  // 0xE(0x2)

}; 
// Function Engine.KismetMathLibrary.Vector4_IsZero
// Size: 0x20(Inherited: 0x0) 
struct FVector4_IsZero
{
	struct FVector4 A;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[15];  // 0x11(0xF)

}; 
// Function Engine.Character.OnWalkingOffLedge
// Size: 0x28(Inherited: 0x0) 
struct FOnWalkingOffLedge
{
	struct FVector PreviousFloorImpactNormal;  // 0x0(0xC)
	struct FVector PreviousFloorContactNormal;  // 0xC(0xC)
	struct FVector PreviousLocation;  // 0x18(0xC)
	float TimeDelta;  // 0x24(0x4)

}; 
// Function Engine.StaticMeshComponent.SetEvaluateWorldPositionOffsetInRayTracing
// Size: 0x1(Inherited: 0x0) 
struct FSetEvaluateWorldPositionOffsetInRayTracing
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool NewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.TimelineComponent.SetVectorCurve
// Size: 0x10(Inherited: 0x0) 
struct FSetVectorCurve
{
	struct UCurveVector* NewVectorCurve;  // 0x0(0x8)
	struct FName VectorTrackName;  // 0x8(0x8)

}; 
// Function Engine.Character.ServerMoveDualNoBase
// Size: 0x44(Inherited: 0x0) 
struct FServerMoveDualNoBase
{
	float TimeStamp0;  // 0x0(0x4)
	struct FVector_NetQuantize10 InAccel0;  // 0x4(0xC)
	char PendingFlags;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	uint32_t View0;  // 0x14(0x4)
	float Timestamp;  // 0x18(0x4)
	struct FVector_NetQuantize10 InAccel;  // 0x1C(0xC)
	struct FVector_NetQuantize100 ClientLoc;  // 0x28(0xC)
	char NewFlags;  // 0x34(0x1)
	char ClientRoll;  // 0x35(0x1)
	char pad_54[2];  // 0x36(0x2)
	uint32_t View;  // 0x38(0x4)
	char ClientMovementMode;  // 0x3C(0x1)
	char pad_61[3];  // 0x3D(0x3)
	float InCrouchedHalfHeight;  // 0x40(0x4)

}; 
// Function Engine.Character.ServerMoveNoBase
// Size: 0x2C(Inherited: 0x0) 
struct FServerMoveNoBase
{
	float Timestamp;  // 0x0(0x4)
	struct FVector_NetQuantize10 InAccel;  // 0x4(0xC)
	struct FVector_NetQuantize100 ClientLoc;  // 0x10(0xC)
	char CompressedMoveFlags;  // 0x1C(0x1)
	char ClientRoll;  // 0x1D(0x1)
	char pad_30[2];  // 0x1E(0x2)
	uint32_t View;  // 0x20(0x4)
	char ClientMovementMode;  // 0x24(0x1)
	char pad_37[3];  // 0x25(0x3)
	float InCrouchedHalfHeight;  // 0x28(0x4)

}; 
// Function Engine.SceneComponent.K2_SetWorldLocationAndRotation
// Size: 0xA8(Inherited: 0x0) 
struct FK2_SetWorldLocationAndRotation
{
	struct FVector NewLocation;  // 0x0(0xC)
	struct FRotator NewRotation;  // 0xC(0xC)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bSweep : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)
	struct FHitResult SweepHitResult;  // 0x1C(0x88)
	char pad_164_1 : 7;  // 0xA4(0x1)
	bool bTeleport : 1;  // 0xA4(0x1)
	char pad_165[3];  // 0xA5(0x3)

}; 
// Function Engine.Character.StopAnimMontage
// Size: 0x8(Inherited: 0x0) 
struct FStopAnimMontage
{
	struct UAnimMontage* AnimMontage;  // 0x0(0x8)

}; 
// Function Engine.Light.SetAffectTranslucentLighting
// Size: 0x1(Inherited: 0x0) 
struct FSetAffectTranslucentLighting
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.BasedMovementInfo
// Size: 0x30(Inherited: 0x0) 
struct FBasedMovementInfo
{
	struct UPrimitiveComponent* MovementBase;  // 0x0(0x8)
	struct FName BoneName;  // 0x8(0x8)
	struct FVector_NetQuantize100 Location;  // 0x10(0xC)
	struct FRotator Rotation;  // 0x1C(0xC)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bServerHasBaseComponent : 1;  // 0x28(0x1)
	char pad_41_1 : 7;  // 0x29(0x1)
	bool bRelativeRotation : 1;  // 0x29(0x1)
	char pad_42_1 : 7;  // 0x2A(0x1)
	bool bServerHasVelocity : 1;  // 0x2A(0x1)
	char pad_43[5];  // 0x2B(0x5)

}; 
// ScriptStruct Engine.DamageEvent
// Size: 0x10(Inherited: 0x0) 
struct FDamageEvent
{
	char pad_0[8];  // 0x0(0x8)
	UDamageType* DamageTypeClass;  // 0x8(0x8)

}; 
// ScriptStruct Engine.InteriorSettings
// Size: 0x24(Inherited: 0x0) 
struct FInteriorSettings
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bIsWorldSettings : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float ExteriorVolume;  // 0x4(0x4)
	float ExteriorTime;  // 0x8(0x4)
	float ExteriorLPF;  // 0xC(0x4)
	float ExteriorLPFTime;  // 0x10(0x4)
	float InteriorVolume;  // 0x14(0x4)
	float InteriorTime;  // 0x18(0x4)
	float InteriorLPF;  // 0x1C(0x4)
	float InteriorLPFTime;  // 0x20(0x4)

}; 
// Function Engine.SplineComponent.SetUnselectedSplineSegmentColor
// Size: 0x10(Inherited: 0x0) 
struct FSetUnselectedSplineSegmentColor
{
	struct FLinearColor SegmentColor;  // 0x0(0x10)

}; 
// Function Engine.KismetNodeHelperLibrary.BitIsMarked
// Size: 0xC(Inherited: 0x0) 
struct FBitIsMarked
{
	int32_t Data;  // 0x0(0x4)
	int32_t Index;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.SplineComponent.AddSplinePointAtIndex
// Size: 0x14(Inherited: 0x0) 
struct FAddSplinePointAtIndex
{
	struct FVector position;  // 0x0(0xC)
	int32_t Index;  // 0xC(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bUpdateSpline : 1;  // 0x11(0x1)
	char pad_18[2];  // 0x12(0x2)

}; 
// Function Engine.SkyAtmosphereComponent.SetMieAnisotropy
// Size: 0x4(Inherited: 0x0) 
struct FSetMieAnisotropy
{
	float NewValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.PointDamageEvent
// Size: 0xA8(Inherited: 0x10) 
struct FPointDamageEvent : public FDamageEvent
{
	float Damage;  // 0x10(0x4)
	struct FVector_NetQuantizeNormal ShotDirection;  // 0x14(0xC)
	struct FHitResult HitInfo;  // 0x20(0x88)

}; 
// Function Engine.GameUserSettings.RunHardwareBenchmark
// Size: 0xC(Inherited: 0x0) 
struct FRunHardwareBenchmark
{
	int32_t WorkScale;  // 0x0(0x4)
	float CPUMultiplier;  // 0x4(0x4)
	float GPUMultiplier;  // 0x8(0x4)

}; 
// ScriptStruct Engine.RigidBodyState
// Size: 0x40(Inherited: 0x0) 
struct FRigidBodyState
{
	struct FVector_NetQuantize100 position;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct FQuat Quaternion;  // 0x10(0x10)
	struct FVector_NetQuantize100 LinVel;  // 0x20(0xC)
	struct FVector_NetQuantize100 AngVel;  // 0x2C(0xC)
	char Flags;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 
// Function Engine.SkeletalMeshComponent.GetLinkedAnimGraphInstanceByTag
// Size: 0x10(Inherited: 0x0) 
struct FGetLinkedAnimGraphInstanceByTag
{
	struct FName InTag;  // 0x0(0x8)
	struct UAnimInstance* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.SceneComponent.DetachFromParent
// Size: 0x2(Inherited: 0x0) 
struct FDetachFromParent
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bMaintainWorldPosition : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bCallModify : 1;  // 0x1(0x1)

}; 
// Function Engine.SceneComponent.GetChildComponent
// Size: 0x10(Inherited: 0x0) 
struct FGetChildComponent
{
	int32_t ChildIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct USceneComponent* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.SceneComponent.K2_AddRelativeLocation
// Size: 0x9C(Inherited: 0x0) 
struct FK2_AddRelativeLocation
{
	struct FVector DeltaLocation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// ScriptStruct Engine.AnimUpdateRateParameters
// Size: 0x88(Inherited: 0x0) 
struct FAnimUpdateRateParameters
{
	char pad_0[1];  // 0x0(0x1)
	uint8_t  ShiftBucket;  // 0x1(0x1)
	char bInterpolateSkippedFrames : 1;  // 0x2(0x1)
	char bShouldUseLodMap : 1;  // 0x2(0x1)
	char bShouldUseMinLod : 1;  // 0x2(0x1)
	char bSkipUpdate : 1;  // 0x2(0x1)
	char bSkipEvaluation : 1;  // 0x2(0x1)
	char pad_2_1 : 3;  // 0x2(0x1)
	char pad_3[2];  // 0x3(0x2)
	int32_t UpdateRate;  // 0x4(0x4)
	int32_t EvaluationRate;  // 0x8(0x4)
	float TickedPoseOffestTime;  // 0xC(0x4)
	float AdditionalTime;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	int32_t BaseNonRenderedUpdateRate;  // 0x18(0x4)
	int32_t MaxEvalRateForInterpolation;  // 0x1C(0x4)
	struct TArray<float> BaseVisibleDistanceFactorThesholds;  // 0x20(0x10)
	struct TMap<int32_t, int32_t> LODToFrameSkipMap;  // 0x30(0x50)
	int32_t SkippedUpdateFrames;  // 0x80(0x4)
	int32_t SkippedEvalFrames;  // 0x84(0x4)

}; 
// Function Engine.KismetMathLibrary.GetForwardVector
// Size: 0x18(Inherited: 0x0) 
struct FGetForwardVector
{
	struct FRotator InRot;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.SceneComponent.GetNumChildrenComponents
// Size: 0x4(Inherited: 0x0) 
struct FGetNumChildrenComponents
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.FFloor64
// Size: 0x10(Inherited: 0x0) 
struct FFFloor64
{
	float A;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	int64_t ReturnValue;  // 0x8(0x8)

}; 
// ScriptStruct Engine.AnimBlueprintFunctionData
// Size: 0x40(Inherited: 0x0) 
struct FAnimBlueprintFunctionData
{
	struct TFieldPath<FNone> OutputPoseNodeProperty;  // 0x0(0x20)
	struct TArray<struct TFieldPath<FNone>> InputPoseNodeProperties;  // 0x20(0x10)
	struct TArray<struct TFieldPath<FNone>> InputProperties;  // 0x30(0x10)

}; 
// Function Engine.KismetMathLibrary.FInterpTo_Constant
// Size: 0x14(Inherited: 0x0) 
struct FFInterpTo_Constant
{
	float Current;  // 0x0(0x4)
	float Target;  // 0x4(0x4)
	float DeltaTime;  // 0x8(0x4)
	float InterpSpeed;  // 0xC(0x4)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.SceneComponent.GetParentComponents
// Size: 0x10(Inherited: 0x0) 
struct FGetParentComponents
{
	struct TArray<struct USceneComponent*> Parents;  // 0x0(0x10)

}; 
// Function Engine.SceneComponent.GetShouldUpdatePhysicsVolume
// Size: 0x1(Inherited: 0x0) 
struct FGetShouldUpdatePhysicsVolume
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PlayerCameraManager.GetFOVAngle
// Size: 0x4(Inherited: 0x0) 
struct FGetFOVAngle
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.SkeletalMeshSocket.GetSocketLocation
// Size: 0x18(Inherited: 0x0) 
struct FGetSocketLocation
{
	struct USkeletalMeshComponent* SkelComp;  // 0x0(0x8)
	struct FVector ReturnValue;  // 0x8(0xC)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.KismetMathLibrary.LinearColor_ToNewOpacity
// Size: 0x24(Inherited: 0x0) 
struct FLinearColor_ToNewOpacity
{
	struct FLinearColor InColor;  // 0x0(0x10)
	float InOpacity;  // 0x10(0x4)
	struct FLinearColor ReturnValue;  // 0x14(0x10)

}; 
// Function Engine.PrimitiveComponent.GetGenerateOverlapEvents
// Size: 0x1(Inherited: 0x0) 
struct FGetGenerateOverlapEvents
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SceneComponent.GetSocketTransform
// Size: 0x40(Inherited: 0x0) 
struct FGetSocketTransform
{
	struct FName InSocketName;  // 0x0(0x8)
	char ERelativeTransformSpace TransformSpace;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)
	struct FTransform ReturnValue;  // 0x10(0x30)

}; 
// Function Engine.KismetMathLibrary.Add_QuatQuat
// Size: 0x30(Inherited: 0x0) 
struct FAdd_QuatQuat
{
	struct FQuat A;  // 0x0(0x10)
	struct FQuat B;  // 0x10(0x10)
	struct FQuat ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.KismetMathLibrary.GetUpVector
// Size: 0x18(Inherited: 0x0) 
struct FGetUpVector
{
	struct FRotator InRot;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.HUD.GetTextSize
// Size: 0x28(Inherited: 0x0) 
struct FGetTextSize
{
	struct FString Text;  // 0x0(0x10)
	float OutWidth;  // 0x10(0x4)
	float OutHeight;  // 0x14(0x4)
	struct UFont* Font;  // 0x18(0x8)
	float Scale;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.SceneComponent.IsSimulatingPhysics
// Size: 0xC(Inherited: 0x0) 
struct FIsSimulatingPhysics
{
	struct FName BoneName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.PhysicsHandleComponent.SetAngularStiffness
// Size: 0x4(Inherited: 0x0) 
struct FSetAngularStiffness
{
	float NewAngularStiffness;  // 0x0(0x4)

}; 
// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogAlbedo
// Size: 0x4(Inherited: 0x0) 
struct FSetVolumetricFogAlbedo
{
	struct FColor NewValue;  // 0x0(0x4)

}; 
// Function Engine.SceneComponent.K2_AddLocalOffset
// Size: 0x9C(Inherited: 0x0) 
struct FK2_AddLocalOffset
{
	struct FVector DeltaLocation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// ScriptStruct Engine.PassiveSoundMixModifier
// Size: 0x10(Inherited: 0x0) 
struct FPassiveSoundMixModifier
{
	struct USoundMix* SoundMix;  // 0x0(0x8)
	float MinVolumeThreshold;  // 0x8(0x4)
	float MaxVolumeThreshold;  // 0xC(0x4)

}; 
// Function Engine.ForceFeedbackComponent.BP_GetAttenuationSettingsToApply
// Size: 0xB8(Inherited: 0x0) 
struct FBP_GetAttenuationSettingsToApply
{
	struct FForceFeedbackAttenuationSettings OutAttenuationSettings;  // 0x0(0xB0)
	char pad_176_1 : 7;  // 0xB0(0x1)
	bool ReturnValue : 1;  // 0xB0(0x1)
	char pad_177[7];  // 0xB1(0x7)

}; 
// Function Engine.PrimitiveComponent.SetCollisionObjectType
// Size: 0x1(Inherited: 0x0) 
struct FSetCollisionObjectType
{
	char ECollisionChannel Channel;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.Subtract_Vector2DVector2D
// Size: 0x18(Inherited: 0x0) 
struct FSubtract_Vector2DVector2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D B;  // 0x8(0x8)
	struct FVector2D ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.SceneComponent.K2_AddRelativeRotation
// Size: 0x9C(Inherited: 0x0) 
struct FK2_AddRelativeRotation
{
	struct FRotator DeltaRotation;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSweep : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FHitResult SweepHitResult;  // 0x10(0x88)
	char pad_152_1 : 7;  // 0x98(0x1)
	bool bTeleport : 1;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)

}; 
// Function Engine.KismetStringLibrary.LeftPad
// Size: 0x28(Inherited: 0x0) 
struct FLeftPad
{
	struct FString SourceString;  // 0x0(0x10)
	int32_t ChCount;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct FString ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.SourceConfigDir
// Size: 0x10(Inherited: 0x0) 
struct FSourceConfigDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.HUD.DrawRect
// Size: 0x20(Inherited: 0x0) 
struct FDrawRect
{
	struct FLinearColor RectColor;  // 0x0(0x10)
	float ScreenX;  // 0x10(0x4)
	float ScreenY;  // 0x14(0x4)
	float ScreenW;  // 0x18(0x4)
	float ScreenH;  // 0x1C(0x4)

}; 
// Function Engine.SceneComponent.K2_DetachFromComponent
// Size: 0x4(Inherited: 0x0) 
struct FK2_DetachFromComponent
{
	uint8_t  LocationRule;  // 0x0(0x1)
	uint8_t  RotationRule;  // 0x1(0x1)
	uint8_t  ScaleRule;  // 0x2(0x1)
	char pad_3_1 : 7;  // 0x3(0x1)
	bool bCallModify : 1;  // 0x3(0x1)

}; 
// Function Engine.SceneComponent.K2_GetComponentScale
// Size: 0xC(Inherited: 0x0) 
struct FK2_GetComponentScale
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// ScriptStruct Engine.LensSettings
// Size: 0xE0(Inherited: 0x0) 
struct FLensSettings
{
	struct FLensBloomSettings Bloom;  // 0x0(0xB8)
	struct FLensImperfectionSettings Imperfections;  // 0xB8(0x20)
	float ChromaticAberration;  // 0xD8(0x4)
	char pad_220[4];  // 0xDC(0x4)

}; 
// Function Engine.SceneComponent.K2_SetRelativeLocationAndRotation
// Size: 0xA8(Inherited: 0x0) 
struct FK2_SetRelativeLocationAndRotation
{
	struct FVector NewLocation;  // 0x0(0xC)
	struct FRotator NewRotation;  // 0xC(0xC)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bSweep : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)
	struct FHitResult SweepHitResult;  // 0x1C(0x88)
	char pad_164_1 : 7;  // 0xA4(0x1)
	bool bTeleport : 1;  // 0xA4(0x1)
	char pad_165[3];  // 0xA5(0x3)

}; 
// Function Engine.SceneComponent.K2_SetRelativeTransform
// Size: 0xC0(Inherited: 0x0) 
struct FK2_SetRelativeTransform
{
	struct FTransform NewTransform;  // 0x0(0x30)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bSweep : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	struct FHitResult SweepHitResult;  // 0x34(0x88)
	char pad_188_1 : 7;  // 0xBC(0x1)
	bool bTeleport : 1;  // 0xBC(0x1)
	char pad_189[3];  // 0xBD(0x3)

}; 
// Function Engine.SceneComponent.SetVisibility
// Size: 0x2(Inherited: 0x0) 
struct FSetVisibility
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewVisibility : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bPropagateToChildren : 1;  // 0x1(0x1)

}; 
// Function Engine.CameraShakeBase.GetRootShakePattern
// Size: 0x8(Inherited: 0x0) 
struct FGetRootShakePattern
{
	struct UCameraShakePattern* ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.AnimNode_ConvertLocalToComponentSpace
// Size: 0x20(Inherited: 0x10) 
struct FAnimNode_ConvertLocalToComponentSpace : public FAnimNode_Base
{
	struct FPoseLink LocalPose;  // 0x10(0x10)

}; 
// Function Engine.SplineComponent.GetUpVectorAtTime
// Size: 0x14(Inherited: 0x0) 
struct FGetUpVectorAtTime
{
	float Time;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bUseConstantVelocity : 1;  // 0x5(0x1)
	char pad_6[2];  // 0x6(0x2)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.SceneComponent.ToggleVisibility
// Size: 0x1(Inherited: 0x0) 
struct FToggleVisibility
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bPropagateToChildren : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.AddAngularImpulse
// Size: 0x18(Inherited: 0x0) 
struct FAddAngularImpulse
{
	struct FVector Impulse;  // 0x0(0xC)
	struct FName BoneName;  // 0xC(0x8)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bVelChange : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.KismetMathLibrary.Percent_ByteByte
// Size: 0x3(Inherited: 0x0) 
struct FPercent_ByteByte
{
	char A;  // 0x0(0x1)
	char B;  // 0x1(0x1)
	char ReturnValue;  // 0x2(0x1)

}; 
// ScriptStruct Engine.AnimNode_AssetPlayerBase
// Size: 0x38(Inherited: 0x10) 
struct FAnimNode_AssetPlayerBase : public FAnimNode_Base
{
	struct FName GroupName;  // 0x10(0x8)
	char EAnimGroupRole GroupRole;  // 0x18(0x1)
	uint8_t  GroupScope;  // 0x19(0x1)
	char pad_26_1 : 7;  // 0x1A(0x1)
	bool bIgnoreForRelevancyTest : 1;  // 0x1A(0x1)
	char pad_27[1];  // 0x1B(0x1)
	float BlendWeight;  // 0x1C(0x4)
	float InternalTimeAccumulator;  // 0x20(0x4)
	char pad_36[20];  // 0x24(0x14)

}; 
// Function Engine.CharacterMovementComponent.AddForce
// Size: 0xC(Inherited: 0x0) 
struct FAddForce
{
	struct FVector force;  // 0x0(0xC)

}; 
// Function Engine.BlueprintPathsLibrary.EnterpriseFeaturePackDir
// Size: 0x10(Inherited: 0x0) 
struct FEnterpriseFeaturePackDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.PrimitiveComponent.AddForceAtLocationLocal
// Size: 0x20(Inherited: 0x0) 
struct FAddForceAtLocationLocal
{
	struct FVector force;  // 0x0(0xC)
	struct FVector Location;  // 0xC(0xC)
	struct FName BoneName;  // 0x18(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector_ClampSizeMax2D
// Size: 0x1C(Inherited: 0x0) 
struct FVector_ClampSizeMax2D
{
	struct FVector A;  // 0x0(0xC)
	float Max;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// ScriptStruct Engine.BlueprintComponentDelegateBinding
// Size: 0x18(Inherited: 0x0) 
struct FBlueprintComponentDelegateBinding
{
	struct FName ComponentPropertyName;  // 0x0(0x8)
	struct FName DelegatePropertyName;  // 0x8(0x8)
	struct FName FunctionNameToBind;  // 0x10(0x8)

}; 
// ScriptStruct Engine.InputScaleBiasClamp
// Size: 0x30(Inherited: 0x0) 
struct FInputScaleBiasClamp
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bMapRange : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bClampResult : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool bInterpResult : 1;  // 0x2(0x1)
	char pad_3[1];  // 0x3(0x1)
	struct FInputRange InRange;  // 0x4(0x8)
	struct FInputRange OutRange;  // 0xC(0x8)
	float Scale;  // 0x14(0x4)
	float Bias;  // 0x18(0x4)
	float ClampMin;  // 0x1C(0x4)
	float ClampMax;  // 0x20(0x4)
	float InterpSpeedIncreasing;  // 0x24(0x4)
	float InterpSpeedDecreasing;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)

}; 
// Function Engine.PrimitiveComponent.AddImpulseAtLocation
// Size: 0x20(Inherited: 0x0) 
struct FAddImpulseAtLocation
{
	struct FVector Impulse;  // 0x0(0xC)
	struct FVector Location;  // 0xC(0xC)
	struct FName BoneName;  // 0x18(0x8)

}; 
// Function Engine.PrimitiveComponent.AddRadialForce
// Size: 0x18(Inherited: 0x0) 
struct FAddRadialForce
{
	struct FVector Origin;  // 0x0(0xC)
	float Radius;  // 0xC(0x4)
	float Strength;  // 0x10(0x4)
	char ERadialImpulseFalloff Falloff;  // 0x14(0x1)
	char pad_21_1 : 7;  // 0x15(0x1)
	bool bAccelChange : 1;  // 0x15(0x1)
	char pad_22[2];  // 0x16(0x2)

}; 
// ScriptStruct Engine.ActorComponentInstanceData
// Size: 0x68(Inherited: 0x0) 
struct FActorComponentInstanceData
{
	char pad_0[8];  // 0x0(0x8)
	struct UObject* SourceComponentTemplate;  // 0x8(0x8)
	uint8_t  SourceComponentCreationMethod;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	int32_t SourceComponentTypeSerializedIndex;  // 0x14(0x4)
	struct TArray<char> SavedProperties;  // 0x18(0x10)
	struct FActorComponentDuplicatedObjectData UniqueTransientPackage;  // 0x28(0x10)
	struct TArray<struct FActorComponentDuplicatedObjectData> DuplicatedObjects;  // 0x38(0x10)
	struct TArray<struct UObject*> ReferencedObjects;  // 0x48(0x10)
	struct TArray<struct FName> ReferencedNames;  // 0x58(0x10)

}; 
// Function Engine.SplineComponent.GetDirectionAtDistanceAlongSpline
// Size: 0x14(Inherited: 0x0) 
struct FGetDirectionAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.ParticleSystemComponent.GetNumActiveParticles
// Size: 0x4(Inherited: 0x0) 
struct FGetNumActiveParticles
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.AddRadialImpulse
// Size: 0x18(Inherited: 0x0) 
struct FAddRadialImpulse
{
	struct FVector Origin;  // 0x0(0xC)
	float Radius;  // 0xC(0x4)
	float Strength;  // 0x10(0x4)
	char ERadialImpulseFalloff Falloff;  // 0x14(0x1)
	char pad_21_1 : 7;  // 0x15(0x1)
	bool bVelChange : 1;  // 0x15(0x1)
	char pad_22[2];  // 0x16(0x2)

}; 
// Function Engine.PrimitiveComponent.AddTorqueInDegrees
// Size: 0x18(Inherited: 0x0) 
struct FAddTorqueInDegrees
{
	struct FVector Torque;  // 0x0(0xC)
	struct FName BoneName;  // 0xC(0x8)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bAccelChange : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.PrimitiveComponent.AddTorqueInRadians
// Size: 0x18(Inherited: 0x0) 
struct FAddTorqueInRadians
{
	struct FVector Torque;  // 0x0(0xC)
	struct FName BoneName;  // 0xC(0x8)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bAccelChange : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.SplineComponent.FindRotationClosestToWorldLocation
// Size: 0x1C(Inherited: 0x0) 
struct FFindRotationClosestToWorldLocation
{
	struct FVector WorldLocation;  // 0x0(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FRotator ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.PrimitiveComponent.CanCharacterStepUp
// Size: 0x10(Inherited: 0x0) 
struct FCanCharacterStepUp
{
	struct APawn* Pawn;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// ScriptStruct Engine.SoundGroup
// Size: 0x20(Inherited: 0x0) 
struct FSoundGroup
{
	char ESoundGroup SoundGroup;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct FString DisplayName;  // 0x8(0x10)
	char bAlwaysDecompressOnLoad : 1;  // 0x18(0x1)
	char pad_24_1 : 7;  // 0x18(0x1)
	char pad_25[4];  // 0x19(0x4)
	float DecompressedDuration;  // 0x1C(0x4)

}; 
// Function Engine.SplineComponent.GetDirectionAtSplineInputKey
// Size: 0x14(Inherited: 0x0) 
struct FGetDirectionAtSplineInputKey
{
	float InKey;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.Canvas.K2_Project
// Size: 0x18(Inherited: 0x0) 
struct FK2_Project
{
	struct FVector WorldLocation;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.PrimitiveComponent.GetCollisionResponseToChannel
// Size: 0x2(Inherited: 0x0) 
struct FGetCollisionResponseToChannel
{
	char ECollisionChannel Channel;  // 0x0(0x1)
	char ECollisionResponse ReturnValue;  // 0x1(0x1)

}; 
// Function Engine.PrimitiveComponent.GetInertiaTensor
// Size: 0x14(Inherited: 0x0) 
struct FGetInertiaTensor
{
	struct FName BoneName;  // 0x0(0x8)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.PrimitiveComponent.GetLinearDamping
// Size: 0x4(Inherited: 0x0) 
struct FGetLinearDamping
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.GetMass
// Size: 0x4(Inherited: 0x0) 
struct FGetMass
{
	float ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.NavAgentProperties
// Size: 0x30(Inherited: 0x1) 
struct FNavAgentProperties : public FMovementProperties
{
	char pad_1[3];  // 0x1(0x3)
	float AgentRadius;  // 0x4(0x4)
	float AgentHeight;  // 0x8(0x4)
	float AgentStepHeight;  // 0xC(0x4)
	float AgentMaxSlope;  // 0x10(0x4)
	float NavWalkingSearchHeightScale;  // 0x14(0x4)
	struct FSoftClassPath PreferredNavData;  // 0x18(0x18)

}; 
// Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFromEndFraction
// Size: 0x8(Inherited: 0x0) 
struct FGetInstanceAssetPlayerTimeFromEndFraction
{
	int32_t AssetPlayerIndex;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// ScriptStruct Engine.RadialDamageParams
// Size: 0x14(Inherited: 0x0) 
struct FRadialDamageParams
{
	float BaseDamage;  // 0x0(0x4)
	float MinimumDamage;  // 0x4(0x4)
	float InnerRadius;  // 0x8(0x4)
	float OuterRadius;  // 0xC(0x4)
	float DamageFalloff;  // 0x10(0x4)

}; 
// Function Engine.LightComponent.SetIESBrightnessScale
// Size: 0x4(Inherited: 0x0) 
struct FSetIESBrightnessScale
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.DecalComponent.GetDecalMaterial
// Size: 0x8(Inherited: 0x0) 
struct FGetDecalMaterial
{
	struct UMaterialInterface* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.PrimitiveComponent.GetPhysicsAngularVelocity
// Size: 0x14(Inherited: 0x0) 
struct FGetPhysicsAngularVelocity
{
	struct FName BoneName;  // 0x0(0x8)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.PrimitiveComponent.GetPhysicsLinearVelocityAtPoint
// Size: 0x20(Inherited: 0x0) 
struct FGetPhysicsLinearVelocityAtPoint
{
	struct FVector Point;  // 0x0(0xC)
	struct FName BoneName;  // 0xC(0x8)
	struct FVector ReturnValue;  // 0x14(0xC)

}; 
// Function Engine.KismetMathLibrary.IsLeapYear
// Size: 0x8(Inherited: 0x0) 
struct FIsLeapYear
{
	int32_t Year;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool ReturnValue : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.BlueprintMapLibrary.Map_Keys
// Size: 0x60(Inherited: 0x0) 
struct FMap_Keys
{
	struct TMap<int32_t, int32_t> TargetMap;  // 0x0(0x50)
	struct TArray<int32_t> Keys;  // 0x50(0x10)

}; 
// Function Engine.PrimitiveComponent.IgnoreActorWhenMoving
// Size: 0x10(Inherited: 0x0) 
struct FIgnoreActorWhenMoving
{
	struct AActor* Actor;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bShouldIgnore : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// ScriptStruct Engine.VisibilityTrackKey
// Size: 0x8(Inherited: 0x0) 
struct FVisibilityTrackKey
{
	float Time;  // 0x0(0x4)
	char EVisibilityTrackAction Action;  // 0x4(0x1)
	char EVisibilityTrackCondition ActiveCondition;  // 0x5(0x1)
	char pad_6[2];  // 0x6(0x2)

}; 
// ScriptStruct Engine.VirtualTextureSpacePoolConfig
// Size: 0x28(Inherited: 0x0) 
struct FVirtualTextureSpacePoolConfig
{
	int32_t MinTileSize;  // 0x0(0x4)
	int32_t MaxTileSize;  // 0x4(0x4)
	struct TArray<char EPixelFormat> Formats;  // 0x8(0x10)
	int32_t SizeInMegabyte;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bAllowSizeScale : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)
	uint32_t ScalabilityGroup;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.PrimitiveComponent.IsAnyRigidBodyAwake
// Size: 0x1(Inherited: 0x0) 
struct FIsAnyRigidBodyAwake
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.K2_IsCollisionEnabled
// Size: 0x1(Inherited: 0x0) 
struct FK2_IsCollisionEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.K2_IsQueryCollisionEnabled
// Size: 0x1(Inherited: 0x0) 
struct FK2_IsQueryCollisionEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.K2_LineTraceComponent
// Size: 0xC8(Inherited: 0x0) 
struct FK2_LineTraceComponent
{
	struct FVector TraceStart;  // 0x0(0xC)
	struct FVector TraceEnd;  // 0xC(0xC)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bTraceComplex : 1;  // 0x18(0x1)
	char pad_25_1 : 7;  // 0x19(0x1)
	bool bShowTrace : 1;  // 0x19(0x1)
	char pad_26_1 : 7;  // 0x1A(0x1)
	bool bPersistentShowTrace : 1;  // 0x1A(0x1)
	char pad_27[1];  // 0x1B(0x1)
	struct FVector HitLocation;  // 0x1C(0xC)
	struct FVector HitNormal;  // 0x28(0xC)
	struct FName BoneName;  // 0x34(0x8)
	struct FHitResult OutHit;  // 0x3C(0x88)
	char pad_196_1 : 7;  // 0xC4(0x1)
	bool ReturnValue : 1;  // 0xC4(0x1)
	char pad_197[3];  // 0xC5(0x3)

}; 
// Function Engine.PhysicsConstraintComponent.SetAngularBreakable
// Size: 0x8(Inherited: 0x0) 
struct FSetAngularBreakable
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bAngularBreakable : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float AngularBreakThreshold;  // 0x4(0x4)

}; 
// Function Engine.PrimitiveComponent.K2_SphereOverlapComponent
// Size: 0xC0(Inherited: 0x0) 
struct FK2_SphereOverlapComponent
{
	struct FVector InSphereCentre;  // 0x0(0xC)
	float InSphereRadius;  // 0xC(0x4)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bTraceComplex : 1;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bShowTrace : 1;  // 0x11(0x1)
	char pad_18_1 : 7;  // 0x12(0x1)
	bool bPersistentShowTrace : 1;  // 0x12(0x1)
	char pad_19[1];  // 0x13(0x1)
	struct FVector HitLocation;  // 0x14(0xC)
	struct FVector HitNormal;  // 0x20(0xC)
	struct FName BoneName;  // 0x2C(0x8)
	struct FHitResult OutHit;  // 0x34(0x88)
	char pad_188_1 : 7;  // 0xBC(0x1)
	bool ReturnValue : 1;  // 0xBC(0x1)
	char pad_189[3];  // 0xBD(0x3)

}; 
// Function Engine.CharacterMovementComponent.SetGroupsToAvoid
// Size: 0x4(Inherited: 0x0) 
struct FSetGroupsToAvoid
{
	int32_t GroupFlags;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.PutRigidBodyToSleep
// Size: 0x8(Inherited: 0x0) 
struct FPutRigidBodyToSleep
{
	struct FName BoneName;  // 0x0(0x8)

}; 
// Function Engine.PrimitiveComponent.SetAllPhysicsAngularVelocityInRadians
// Size: 0x10(Inherited: 0x0) 
struct FSetAllPhysicsAngularVelocityInRadians
{
	struct FVector NewAngVel;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bAddToCurrent : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.PrimitiveComponent.SetAllPhysicsLinearVelocity
// Size: 0x10(Inherited: 0x0) 
struct FSetAllPhysicsLinearVelocity
{
	struct FVector NewVel;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bAddToCurrent : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.KismetMathLibrary.VEase
// Size: 0x34(Inherited: 0x0) 
struct FVEase
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	float Alpha;  // 0x18(0x4)
	char EEasingFunc EasingFunc;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)
	float BlendExp;  // 0x20(0x4)
	int32_t Steps;  // 0x24(0x4)
	struct FVector ReturnValue;  // 0x28(0xC)

}; 
// Function Engine.KismetMathLibrary.HSVToRGBLinear
// Size: 0x20(Inherited: 0x0) 
struct FHSVToRGBLinear
{
	struct FLinearColor HSV;  // 0x0(0x10)
	struct FLinearColor ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.PhysicsHandleComponent.SetAngularDamping
// Size: 0x4(Inherited: 0x0) 
struct FSetAngularDamping
{
	float NewAngularDamping;  // 0x0(0x4)

}; 
// Function Engine.PhysicsHandleComponent.SetTargetRotation
// Size: 0xC(Inherited: 0x0) 
struct FSetTargetRotation
{
	struct FRotator NewRotation;  // 0x0(0xC)

}; 
// ScriptStruct Engine.PoseData
// Size: 0x70(Inherited: 0x0) 
struct FPoseData
{
	struct TArray<struct FTransform> LocalSpacePose;  // 0x0(0x10)
	struct TMap<int32_t, int32_t> TrackToBufferIndex;  // 0x10(0x50)
	struct TArray<float> CurveData;  // 0x60(0x10)

}; 
// Function Engine.PrimitiveComponent.SetBoundsScale
// Size: 0x4(Inherited: 0x0) 
struct FSetBoundsScale
{
	float NewBoundsScale;  // 0x0(0x4)

}; 
// ScriptStruct Engine.AnimationActiveTransitionEntry
// Size: 0xC8(Inherited: 0x0) 
struct FAnimationActiveTransitionEntry
{
	char pad_0[184];  // 0x0(0xB8)
	struct UBlendProfile* BlendProfile;  // 0xB8(0x8)
	char pad_192[8];  // 0xC0(0x8)

}; 
// ScriptStruct Engine.BookmarkBaseJumpToSettings
// Size: 0x1(Inherited: 0x0) 
struct FBookmarkBaseJumpToSettings
{
	char pad_0[1];  // 0x0(0x1)

}; 
// Function Engine.KismetStringLibrary.Len
// Size: 0x18(Inherited: 0x0) 
struct FLen
{
	struct FString S;  // 0x0(0x10)
	int32_t ReturnValue;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.PrimitiveComponent.SetCastHiddenShadow
// Size: 0x1(Inherited: 0x0) 
struct FSetCastHiddenShadow
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool NewCastHiddenShadow : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.LinearColor_Yellow
// Size: 0x10(Inherited: 0x0) 
struct FLinearColor_Yellow
{
	struct FLinearColor ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.PrimitiveComponent.SetCastShadow
// Size: 0x1(Inherited: 0x0) 
struct FSetCastShadow
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool NewCastShadow : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.SetCollisionEnabled
// Size: 0x1(Inherited: 0x0) 
struct FSetCollisionEnabled
{
	char ECollisionEnabled NewType;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.SetCollisionProfileName
// Size: 0xC(Inherited: 0x0) 
struct FSetCollisionProfileName
{
	struct FName InCollisionProfileName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bUpdateOverlaps : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.SkinnedMeshComponent.FindClosestBone_K2
// Size: 0x28(Inherited: 0x0) 
struct FFindClosestBone_K2
{
	struct FVector TestLocation;  // 0x0(0xC)
	struct FVector BoneLocation;  // 0xC(0xC)
	float IgnoreScale;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bRequirePhysicsAsset : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)
	struct FName ReturnValue;  // 0x20(0x8)

}; 
// ScriptStruct Engine.SkeletalMeshClothBuildParams
// Size: 0x58(Inherited: 0x0) 
struct FSkeletalMeshClothBuildParams
{
	struct TWeakObjectPtr<UClothingAssetBase> TargetAsset;  // 0x0(0x8)
	int32_t TargetLod;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bRemapParameters : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FString AssetName;  // 0x10(0x10)
	int32_t LODIndex;  // 0x20(0x4)
	int32_t SourceSection;  // 0x24(0x4)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bRemoveFromMesh : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)
	struct TSoftObjectPtr<UPhysicsAsset> PhysicsAsset;  // 0x30(0x28)

}; 
// Function Engine.PrimitiveComponent.SetCollisionResponseToChannel
// Size: 0x2(Inherited: 0x0) 
struct FSetCollisionResponseToChannel
{
	char ECollisionChannel Channel;  // 0x0(0x1)
	char ECollisionResponse NewResponse;  // 0x1(0x1)

}; 
// Function Engine.GameUserSettings.SetFoliageQuality
// Size: 0x4(Inherited: 0x0) 
struct FSetFoliageQuality
{
	int32_t Value;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.SetConstraintMode
// Size: 0x1(Inherited: 0x0) 
struct FSetConstraintMode
{
	char EDOFMode ConstraintMode;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.SetCustomDepthStencilValue
// Size: 0x4(Inherited: 0x0) 
struct FSetCustomDepthStencilValue
{
	int32_t Value;  // 0x0(0x4)

}; 
// ScriptStruct Engine.TwistConstraint
// Size: 0x1C(Inherited: 0x14) 
struct FTwistConstraint : public FConstraintBaseParams
{
	float TwistLimitDegrees;  // 0x14(0x4)
	char EAngularConstraintMotion TwistMotion;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)

}; 
// Function Engine.PrimitiveComponent.SetCustomDepthStencilWriteMask
// Size: 0x1(Inherited: 0x0) 
struct FSetCustomDepthStencilWriteMask
{
	uint8_t  WriteMaskBit;  // 0x0(0x1)

}; 
// Function Engine.LightComponent.SetLightFunctionDisabledBrightness
// Size: 0x4(Inherited: 0x0) 
struct FSetLightFunctionDisabledBrightness
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.SkeletalMeshComponent.LinkAnimClassLayers
// Size: 0x8(Inherited: 0x0) 
struct FLinkAnimClassLayers
{
	UAnimInstance* InClass;  // 0x0(0x8)

}; 
// Function Engine.SplineComponent.SetDefaultUpVector
// Size: 0x10(Inherited: 0x0) 
struct FSetDefaultUpVector
{
	struct FVector UpVector;  // 0x0(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.PrimitiveComponent.SetDefaultCustomPrimitiveDataFloat
// Size: 0x8(Inherited: 0x0) 
struct FSetDefaultCustomPrimitiveDataFloat
{
	int32_t DataIndex;  // 0x0(0x4)
	float Value;  // 0x4(0x4)

}; 
// ScriptStruct Engine.PerBoneBlendWeight
// Size: 0x8(Inherited: 0x0) 
struct FPerBoneBlendWeight
{
	int32_t SourceIndex;  // 0x0(0x4)
	float BlendWeight;  // 0x4(0x4)

}; 
// Function Engine.PrimitiveComponent.SetDefaultCustomPrimitiveDataVector4
// Size: 0x20(Inherited: 0x0) 
struct FSetDefaultCustomPrimitiveDataVector4
{
	int32_t DataIndex;  // 0x0(0x4)
	char pad_4[12];  // 0x4(0xC)
	struct FVector4 Value;  // 0x10(0x10)

}; 
// ScriptStruct Engine.NamedVector
// Size: 0x14(Inherited: 0x0) 
struct FNamedVector
{
	struct FVector Value;  // 0x0(0xC)
	struct FName Name;  // 0xC(0x8)

}; 
// Function Engine.GameUserSettings.IsDynamicResolutionEnabled
// Size: 0x1(Inherited: 0x0) 
struct FIsDynamicResolutionEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.AnimInstanceProxy
// Size: 0x770(Inherited: 0x0) 
struct FAnimInstanceProxy
{
	char pad_0[1904];  // 0x0(0x770)

}; 
// ScriptStruct Engine.SimpleCurve
// Size: 0x88(Inherited: 0x70) 
struct FSimpleCurve : public FRealCurve
{
	char ERichCurveInterpMode InterpMode;  // 0x70(0x1)
	char pad_113[7];  // 0x71(0x7)
	struct TArray<struct FSimpleCurveKey> Keys;  // 0x78(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.ProjectIntermediateDir
// Size: 0x10(Inherited: 0x0) 
struct FProjectIntermediateDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.PrimitiveComponent.SetEnableGravity
// Size: 0x1(Inherited: 0x0) 
struct FSetEnableGravity
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bGravityEnabled : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.DegTan
// Size: 0x8(Inherited: 0x0) 
struct FDegTan
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.PrimitiveComponent.SetTranslucencySortDistanceOffset
// Size: 0x4(Inherited: 0x0) 
struct FSetTranslucencySortDistanceOffset
{
	float NewTranslucencySortDistanceOffset;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.SetGenerateOverlapEvents
// Size: 0x1(Inherited: 0x0) 
struct FSetGenerateOverlapEvents
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInGenerateOverlapEvents : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.NavigationLinkBase
// Size: 0x30(Inherited: 0x0) 
struct FNavigationLinkBase
{
	float LeftProjectHeight;  // 0x0(0x4)
	float MaxFallDownLength;  // 0x4(0x4)
	char pad_8[4];  // 0x8(0x4)
	float SnapRadius;  // 0xC(0x4)
	float SnapHeight;  // 0x10(0x4)
	struct FNavAgentSelector SupportedAgents;  // 0x14(0x4)
	char bSupportsAgent0 : 1;  // 0x18(0x1)
	char bSupportsAgent1 : 1;  // 0x18(0x1)
	char bSupportsAgent2 : 1;  // 0x18(0x1)
	char bSupportsAgent3 : 1;  // 0x18(0x1)
	char bSupportsAgent4 : 1;  // 0x18(0x1)
	char bSupportsAgent5 : 1;  // 0x18(0x1)
	char bSupportsAgent6 : 1;  // 0x18(0x1)
	char bSupportsAgent7 : 1;  // 0x18(0x1)
	char bSupportsAgent8 : 1;  // 0x19(0x1)
	char bSupportsAgent9 : 1;  // 0x19(0x1)
	char bSupportsAgent10 : 1;  // 0x19(0x1)
	char bSupportsAgent11 : 1;  // 0x19(0x1)
	char bSupportsAgent12 : 1;  // 0x19(0x1)
	char bSupportsAgent13 : 1;  // 0x19(0x1)
	char bSupportsAgent14 : 1;  // 0x19(0x1)
	char bSupportsAgent15 : 1;  // 0x19(0x1)
	char pad_26[2];  // 0x1A(0x2)
	char ENavLinkDirection Direction;  // 0x1C(0x1)
	char bUseSnapHeight : 1;  // 0x1D(0x1)
	char bSnapToCheapestArea : 1;  // 0x1D(0x1)
	char bCustomFlag0 : 1;  // 0x1D(0x1)
	char bCustomFlag1 : 1;  // 0x1D(0x1)
	char bCustomFlag2 : 1;  // 0x1D(0x1)
	char bCustomFlag3 : 1;  // 0x1D(0x1)
	char bCustomFlag4 : 1;  // 0x1D(0x1)
	char bCustomFlag5 : 1;  // 0x1D(0x1)
	char bCustomFlag6 : 1;  // 0x1E(0x1)
	char bCustomFlag7 : 1;  // 0x1E(0x1)
	char pad_30_1 : 6;  // 0x1E(0x1)
	char pad_31[2];  // 0x1F(0x2)
	UNavAreaBase* AreaClass;  // 0x20(0x8)
	char pad_40[8];  // 0x28(0x8)

}; 
// Function Engine.DirectionalLightComponent.SetLightShaftOverrideDirection
// Size: 0xC(Inherited: 0x0) 
struct FSetLightShaftOverrideDirection
{
	struct FVector NewValue;  // 0x0(0xC)

}; 
// ScriptStruct Engine.HardwareCursorReference
// Size: 0x10(Inherited: 0x0) 
struct FHardwareCursorReference
{
	struct FName CursorPath;  // 0x0(0x8)
	struct FVector2D HotSpot;  // 0x8(0x8)

}; 
// ScriptStruct Engine.AnimCurveParam
// Size: 0xC(Inherited: 0x0) 
struct FAnimCurveParam
{
	struct FName Name;  // 0x0(0x8)
	char pad_8[4];  // 0x8(0x4)

}; 
// Function Engine.PoseableMeshComponent.SetBoneLocationByName
// Size: 0x18(Inherited: 0x0) 
struct FSetBoneLocationByName
{
	struct FName BoneName;  // 0x0(0x8)
	struct FVector InLocation;  // 0x8(0xC)
	char EBoneSpaces BoneSpace;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.PrimitiveComponent.SetLightAttachmentsAsGroup
// Size: 0x1(Inherited: 0x0) 
struct FSetLightAttachmentsAsGroup
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInLightAttachmentsAsGroup : 1;  // 0x0(0x1)

}; 
// Function Engine.AmbientSound.AdjustVolume
// Size: 0x8(Inherited: 0x0) 
struct FAdjustVolume
{
	float AdjustVolumeDuration;  // 0x0(0x4)
	float AdjustVolumeLevel;  // 0x4(0x4)

}; 
// Function Engine.LightComponent.SetLightingChannels
// Size: 0x3(Inherited: 0x0) 
struct FSetLightingChannels
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bChannel0 : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bChannel1 : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool bChannel2 : 1;  // 0x2(0x1)

}; 
// ScriptStruct Engine.MemberReference
// Size: 0x38(Inherited: 0x0) 
struct FMemberReference
{
	struct UObject* MemberParent;  // 0x0(0x8)
	struct FString MemberScope;  // 0x8(0x10)
	struct FName MemberName;  // 0x18(0x8)
	struct FGuid MemberGuid;  // 0x20(0x10)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bSelfContext : 1;  // 0x30(0x1)
	char pad_49_1 : 7;  // 0x31(0x1)
	bool bWasDeprecated : 1;  // 0x31(0x1)
	char pad_50[6];  // 0x32(0x6)

}; 
// Function Engine.PhysicsHandleComponent.SetLinearDamping
// Size: 0x4(Inherited: 0x0) 
struct FSetLinearDamping
{
	float NewLinearDamping;  // 0x0(0x4)

}; 
// Function Engine.PhysicsHandleComponent.GrabComponent
// Size: 0x20(Inherited: 0x0) 
struct FGrabComponent
{
	struct UPrimitiveComponent* Component;  // 0x0(0x8)
	struct FName InBoneName;  // 0x8(0x8)
	struct FVector GrabLocation;  // 0x10(0xC)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bConstrainRotation : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// Function Engine.VolumetricCloudComponent.SetMaterial
// Size: 0x8(Inherited: 0x0) 
struct FSetMaterial
{
	struct UMaterialInterface* NewValue;  // 0x0(0x8)

}; 
// Function Engine.SplineComponent.GetSplineLength
// Size: 0x4(Inherited: 0x0) 
struct FGetSplineLength
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.GameUserSettings.GetAntiAliasingQuality
// Size: 0x4(Inherited: 0x0) 
struct FGetAntiAliasingQuality
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.SetOwnerNoSee
// Size: 0x1(Inherited: 0x0) 
struct FSetOwnerNoSee
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewOwnerNoSee : 1;  // 0x0(0x1)

}; 
// Function Engine.SkeletalMeshComponent.SetUpdateClothInEditor
// Size: 0x1(Inherited: 0x0) 
struct FSetUpdateClothInEditor
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool NewUpdateState : 1;  // 0x0(0x1)

}; 
// Function Engine.ViewportStatsSubsystem.AddDisplayDelegate
// Size: 0x14(Inherited: 0x0) 
struct FAddDisplayDelegate
{
	struct FDelegate Delegate;  // 0x0(0x10)
	int32_t ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.PrimitiveComponent.SetPhysicsAngularVelocity
// Size: 0x18(Inherited: 0x0) 
struct FSetPhysicsAngularVelocity
{
	struct FVector NewAngVel;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bAddToCurrent : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FName BoneName;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.Conv_Vector2DToVector
// Size: 0x18(Inherited: 0x0) 
struct FConv_Vector2DToVector
{
	struct FVector2D InVector2D;  // 0x0(0x8)
	float Z;  // 0x8(0x4)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.PrimitiveComponent.SetPhysicsAngularVelocityInDegrees
// Size: 0x18(Inherited: 0x0) 
struct FSetPhysicsAngularVelocityInDegrees
{
	struct FVector NewAngVel;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bAddToCurrent : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FName BoneName;  // 0x10(0x8)

}; 
// Function Engine.TextRenderComponent.K2_SetText
// Size: 0x18(Inherited: 0x0) 
struct FK2_SetText
{
	struct FText Value;  // 0x0(0x18)

}; 
// Function Engine.PrimitiveComponent.SetPhysicsAngularVelocityInRadians
// Size: 0x18(Inherited: 0x0) 
struct FSetPhysicsAngularVelocityInRadians
{
	struct FVector NewAngVel;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bAddToCurrent : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FName BoneName;  // 0x10(0x8)

}; 
// Function Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocity
// Size: 0x10(Inherited: 0x0) 
struct FSetPhysicsMaxAngularVelocity
{
	float NewMaxAngVel;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bAddToCurrent : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FName BoneName;  // 0x8(0x8)

}; 
// Function Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocityInRadians
// Size: 0x10(Inherited: 0x0) 
struct FSetPhysicsMaxAngularVelocityInRadians
{
	float NewMaxAngVel;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bAddToCurrent : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FName BoneName;  // 0x8(0x8)

}; 
// Function Engine.PoseableMeshComponent.GetBoneScaleByName
// Size: 0x18(Inherited: 0x0) 
struct FGetBoneScaleByName
{
	struct FName BoneName;  // 0x0(0x8)
	char EBoneSpaces BoneSpace;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.PrimitiveComponent.SetReceivesDecals
// Size: 0x1(Inherited: 0x0) 
struct FSetReceivesDecals
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewReceivesDecals : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.BroadphaseSettings
// Size: 0x24(Inherited: 0x0) 
struct FBroadphaseSettings
{
	uint8_t  ClientBroadphaseAlgorithm;  // 0x0(0x1)
	uint8_t  ServerBroadphaseAlgorithm;  // 0x1(0x1)
	char pad_2[2];  // 0x2(0x2)
	struct FBox MBPBounds;  // 0x4(0x1C)
	uint32_t MBPNumSubdivs;  // 0x20(0x4)

}; 
// Function Engine.GameplayStatics.SetBaseSoundMix
// Size: 0x10(Inherited: 0x0) 
struct FSetBaseSoundMix
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct USoundMix* InSoundMix;  // 0x8(0x8)

}; 
// Function Engine.ExponentialHeightFogComponent.SetVolumetricFog
// Size: 0x1(Inherited: 0x0) 
struct FSetVolumetricFog
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.SetRenderCustomDepth
// Size: 0x1(Inherited: 0x0) 
struct FSetRenderCustomDepth
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PrimitiveComponent.SetSimulatePhysics
// Size: 0x1(Inherited: 0x0) 
struct FSetSimulatePhysics
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bSimulate : 1;  // 0x0(0x1)

}; 
// Function Engine.AnimInstance.Montage_SetPosition
// Size: 0x10(Inherited: 0x0) 
struct FMontage_SetPosition
{
	struct UAnimMontage* Montage;  // 0x0(0x8)
	float NewPosition;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.PrimitiveComponent.SetTranslucentSortPriority
// Size: 0x4(Inherited: 0x0) 
struct FSetTranslucentSortPriority
{
	int32_t NewTranslucentSortPriority;  // 0x0(0x4)

}; 
// Function Engine.PrimitiveComponent.WakeRigidBody
// Size: 0x8(Inherited: 0x0) 
struct FWakeRigidBody
{
	struct FName BoneName;  // 0x0(0x8)

}; 
// ScriptStruct Engine.CustomPrimitiveData
// Size: 0x10(Inherited: 0x0) 
struct FCustomPrimitiveData
{
	struct TArray<float> Data;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.Log
// Size: 0xC(Inherited: 0x0) 
struct FLog
{
	float A;  // 0x0(0x4)
	float Base;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// ScriptStruct Engine.LightingChannels
// Size: 0x1(Inherited: 0x0) 
struct FLightingChannels
{
	char bChannel0 : 1;  // 0x0(0x1)
	char bChannel1 : 1;  // 0x0(0x1)
	char bChannel2 : 1;  // 0x0(0x1)
	char pad_0_1 : 5;  // 0x0(0x1)

}; 
// ScriptStruct Engine.CanvasIcon
// Size: 0x18(Inherited: 0x0) 
struct FCanvasIcon
{
	struct UTexture* Texture;  // 0x0(0x8)
	float U;  // 0x8(0x4)
	float V;  // 0xC(0x4)
	float UL;  // 0x10(0x4)
	float VL;  // 0x14(0x4)

}; 
// Function Engine.SkeletalMeshComponent.SetAnimationMode
// Size: 0x1(Inherited: 0x0) 
struct FSetAnimationMode
{
	char EAnimationMode InAnimationMode;  // 0x0(0x1)

}; 
// ScriptStruct Engine.WeightedBlendables
// Size: 0x10(Inherited: 0x0) 
struct FWeightedBlendables
{
	struct TArray<struct FWeightedBlendable> Array;  // 0x0(0x10)

}; 
// Function Engine.GameplayStatics.SpawnSoundAtLocation
// Size: 0x58(Inherited: 0x0) 
struct FSpawnSoundAtLocation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct USoundBase* Sound;  // 0x8(0x8)
	struct FVector Location;  // 0x10(0xC)
	struct FRotator Rotation;  // 0x1C(0xC)
	float VolumeMultiplier;  // 0x28(0x4)
	float PitchMultiplier;  // 0x2C(0x4)
	float StartTime;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)
	struct USoundAttenuation* AttenuationSettings;  // 0x38(0x8)
	struct USoundConcurrency* ConcurrencySettings;  // 0x40(0x8)
	char pad_72_1 : 7;  // 0x48(0x1)
	bool bAutoDestroy : 1;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	struct UAudioComponent* ReturnValue;  // 0x50(0x8)

}; 
// Function Engine.HUD.DrawLine
// Size: 0x24(Inherited: 0x0) 
struct FDrawLine
{
	float StartScreenX;  // 0x0(0x4)
	float StartScreenY;  // 0x4(0x4)
	float EndScreenX;  // 0x8(0x4)
	float EndScreenY;  // 0xC(0x4)
	struct FLinearColor LineColor;  // 0x10(0x10)
	float LineThickness;  // 0x20(0x4)

}; 
// Function Engine.AnimInstance.StopSlotAnimation
// Size: 0xC(Inherited: 0x0) 
struct FStopSlotAnimation
{
	float InBlendOutTime;  // 0x0(0x4)
	struct FName SlotNodeName;  // 0x4(0x8)

}; 
// Function Engine.HUD.DrawMaterial
// Size: 0x40(Inherited: 0x0) 
struct FDrawMaterial
{
	struct UMaterialInterface* Material;  // 0x0(0x8)
	float ScreenX;  // 0x8(0x4)
	float ScreenY;  // 0xC(0x4)
	float ScreenW;  // 0x10(0x4)
	float ScreenH;  // 0x14(0x4)
	float MaterialU;  // 0x18(0x4)
	float MaterialV;  // 0x1C(0x4)
	float MaterialUWidth;  // 0x20(0x4)
	float MaterialVHeight;  // 0x24(0x4)
	float Scale;  // 0x28(0x4)
	char pad_44_1 : 7;  // 0x2C(0x1)
	bool bScalePosition : 1;  // 0x2C(0x1)
	char pad_45[3];  // 0x2D(0x3)
	float Rotation;  // 0x30(0x4)
	struct FVector2D RotPivot;  // 0x34(0x8)
	char pad_60[4];  // 0x3C(0x4)

}; 
// Function Engine.KismetMathLibrary.ResetFloatSpringState
// Size: 0x8(Inherited: 0x0) 
struct FResetFloatSpringState
{
	struct FFloatSpringState SpringState;  // 0x0(0x8)

}; 
// Function Engine.SkinnedMeshComponent.SetPhysicsAsset
// Size: 0x10(Inherited: 0x0) 
struct FSetPhysicsAsset
{
	struct UPhysicsAsset* NewPhysicsAsset;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bForceReInit : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.HUD.DrawMaterialSimple
// Size: 0x20(Inherited: 0x0) 
struct FDrawMaterialSimple
{
	struct UMaterialInterface* Material;  // 0x0(0x8)
	float ScreenX;  // 0x8(0x4)
	float ScreenY;  // 0xC(0x4)
	float ScreenW;  // 0x10(0x4)
	float ScreenH;  // 0x14(0x4)
	float Scale;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bScalePosition : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// Function Engine.GameplayStatics.CreateSound2D
// Size: 0x38(Inherited: 0x0) 
struct FCreateSound2D
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct USoundBase* Sound;  // 0x8(0x8)
	float VolumeMultiplier;  // 0x10(0x4)
	float PitchMultiplier;  // 0x14(0x4)
	float StartTime;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)
	struct USoundConcurrency* ConcurrencySettings;  // 0x20(0x8)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bPersistAcrossLevelTransition : 1;  // 0x28(0x1)
	char pad_41_1 : 7;  // 0x29(0x1)
	bool bAutoDestroy : 1;  // 0x29(0x1)
	char pad_42[6];  // 0x2A(0x6)
	struct UAudioComponent* ReturnValue;  // 0x30(0x8)

}; 
// ScriptStruct Engine.InputScaleBias
// Size: 0x8(Inherited: 0x0) 
struct FInputScaleBias
{
	float Scale;  // 0x0(0x4)
	float Bias;  // 0x4(0x4)

}; 
// Function Engine.HUD.DrawTexture
// Size: 0x50(Inherited: 0x0) 
struct FDrawTexture
{
	struct UTexture* Texture;  // 0x0(0x8)
	float ScreenX;  // 0x8(0x4)
	float ScreenY;  // 0xC(0x4)
	float ScreenW;  // 0x10(0x4)
	float ScreenH;  // 0x14(0x4)
	float TextureU;  // 0x18(0x4)
	float TextureV;  // 0x1C(0x4)
	float TextureUWidth;  // 0x20(0x4)
	float TextureVHeight;  // 0x24(0x4)
	struct FLinearColor TintColor;  // 0x28(0x10)
	char EBlendMode BlendMode;  // 0x38(0x1)
	char pad_57[3];  // 0x39(0x3)
	float Scale;  // 0x3C(0x4)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool bScalePosition : 1;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)
	float Rotation;  // 0x44(0x4)
	struct FVector2D RotPivot;  // 0x48(0x8)

}; 
// ScriptStruct Engine.AnimNode_Root
// Size: 0x30(Inherited: 0x10) 
struct FAnimNode_Root : public FAnimNode_Base
{
	struct FPoseLink Result;  // 0x10(0x10)
	struct FName Name;  // 0x20(0x8)
	struct FName Group;  // 0x28(0x8)

}; 
// Function Engine.HUD.GetActorsInSelectionRectangle
// Size: 0x30(Inherited: 0x0) 
struct FGetActorsInSelectionRectangle
{
	AActor* ClassFilter;  // 0x0(0x8)
	struct FVector2D FirstPoint;  // 0x8(0x8)
	struct FVector2D SecondPoint;  // 0x10(0x8)
	struct TArray<struct AActor*> OutActors;  // 0x18(0x10)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bIncludeNonCollidingComponents : 1;  // 0x28(0x1)
	char pad_41_1 : 7;  // 0x29(0x1)
	bool bActorMustBeFullyEnclosed : 1;  // 0x29(0x1)
	char pad_42[6];  // 0x2A(0x6)

}; 
// Function Engine.AudioComponent.SetOutputToBusOnly
// Size: 0x1(Inherited: 0x0) 
struct FSetOutputToBusOnly
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInOutputToBusOnly : 1;  // 0x0(0x1)

}; 
// Function Engine.GameUserSettings.SetViewDistanceQuality
// Size: 0x4(Inherited: 0x0) 
struct FSetViewDistanceQuality
{
	int32_t Value;  // 0x0(0x4)

}; 
// Function Engine.HUD.Project
// Size: 0x18(Inherited: 0x0) 
struct FProject
{
	struct FVector Location;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.CharacterMovementComponent.GetMaxJumpHeightWithJumpTime
// Size: 0x4(Inherited: 0x0) 
struct FGetMaxJumpHeightWithJumpTime
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.HUD.ReceiveHitBoxBeginCursorOver
// Size: 0x8(Inherited: 0x0) 
struct FReceiveHitBoxBeginCursorOver
{
	struct FName BoxName;  // 0x0(0x8)

}; 
// Function Engine.KismetStringLibrary.ToLower
// Size: 0x20(Inherited: 0x0) 
struct FToLower
{
	struct FString SourceString;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.AudioComponent.StopDelayed
// Size: 0x4(Inherited: 0x0) 
struct FStopDelayed
{
	float DelayTime;  // 0x0(0x4)

}; 
// Function Engine.PhysicsConstraintComponent.SetLinearXLimit
// Size: 0x8(Inherited: 0x0) 
struct FSetLinearXLimit
{
	char ELinearConstraintMotion ConstraintType;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float LimitSize;  // 0x4(0x4)

}; 
// Function Engine.HUD.ReceiveHitBoxRelease
// Size: 0x8(Inherited: 0x0) 
struct FReceiveHitBoxRelease
{
	struct FName BoxName;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.ToRounded2D
// Size: 0x10(Inherited: 0x0) 
struct FToRounded2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.HUD.ShowDebug
// Size: 0x8(Inherited: 0x0) 
struct FShowDebug
{
	struct FName DebugType;  // 0x0(0x8)

}; 
// Function Engine.MaterialInterface.GetPhysicalMaterial
// Size: 0x8(Inherited: 0x0) 
struct FGetPhysicalMaterial
{
	struct UPhysicalMaterial* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.HUD.ShowDebugToggleSubCategory
// Size: 0x8(Inherited: 0x0) 
struct FShowDebugToggleSubCategory
{
	struct FName Category;  // 0x0(0x8)

}; 
// Function Engine.MeshComponent.IsMaterialSlotNameValid
// Size: 0xC(Inherited: 0x0) 
struct FIsMaterialSlotNameValid
{
	struct FName MaterialSlotName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.MeshComponent.SetScalarParameterValueOnMaterials
// Size: 0xC(Inherited: 0x0) 
struct FSetScalarParameterValueOnMaterials
{
	struct FName ParameterName;  // 0x0(0x8)
	float ParameterValue;  // 0x8(0x4)

}; 
// ScriptStruct Engine.BoneReductionSetting
// Size: 0x10(Inherited: 0x0) 
struct FBoneReductionSetting
{
	struct TArray<struct FName> BonesToRemove;  // 0x0(0x10)

}; 
// ScriptStruct Engine.AnimationGroupReference
// Size: 0xC(Inherited: 0x0) 
struct FAnimationGroupReference
{
	struct FName GroupName;  // 0x0(0x8)
	char EAnimGroupRole GroupRole;  // 0x8(0x1)
	uint8_t  GroupScope;  // 0x9(0x1)
	char pad_10[2];  // 0xA(0x2)

}; 
// Function Engine.MeshComponent.SetVectorParameterValueOnMaterials
// Size: 0x14(Inherited: 0x0) 
struct FSetVectorParameterValueOnMaterials
{
	struct FName ParameterName;  // 0x0(0x8)
	struct FVector ParameterValue;  // 0x8(0xC)

}; 
// ScriptStruct Engine.AnimNode_Base
// Size: 0x10(Inherited: 0x0) 
struct FAnimNode_Base
{
	char pad_0[16];  // 0x0(0x10)

}; 
// ScriptStruct Engine.MarkerSyncData
// Size: 0x20(Inherited: 0x0) 
struct FMarkerSyncData
{
	struct TArray<struct FAnimSyncMarker> AuthoredSyncMarkers;  // 0x0(0x10)
	char pad_16[16];  // 0x10(0x10)

}; 
// ScriptStruct Engine.InputRange
// Size: 0x8(Inherited: 0x0) 
struct FInputRange
{
	float Min;  // 0x0(0x4)
	float Max;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.RandomPointInBoundingBox
// Size: 0x24(Inherited: 0x0) 
struct FRandomPointInBoundingBox
{
	struct FVector Origin;  // 0x0(0xC)
	struct FVector BoxExtent;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// ScriptStruct Engine.InputAlphaBoolBlend
// Size: 0x48(Inherited: 0x0) 
struct FInputAlphaBoolBlend
{
	float BlendInTime;  // 0x0(0x4)
	float BlendOutTime;  // 0x4(0x4)
	uint8_t  BlendOption;  // 0x8(0x1)
	char pad_9_1 : 7;  // 0x9(0x1)
	bool bInitialized : 1;  // 0x9(0x1)
	char pad_10[6];  // 0xA(0x6)
	struct UCurveFloat* CustomCurve;  // 0x10(0x8)
	struct FAlphaBlend AlphaBlend;  // 0x18(0x30)

}; 
// Function Engine.KismetStringLibrary.Conv_StringToInt
// Size: 0x18(Inherited: 0x0) 
struct FConv_StringToInt
{
	struct FString inString;  // 0x0(0x10)
	int32_t ReturnValue;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// ScriptStruct Engine.PoseLinkBase
// Size: 0x10(Inherited: 0x0) 
struct FPoseLinkBase
{
	int32_t LinkID;  // 0x0(0x4)
	char pad_4[12];  // 0x4(0xC)

}; 
// Function Engine.BlueprintPathsLibrary.ProjectLogDir
// Size: 0x10(Inherited: 0x0) 
struct FProjectLogDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.CharacterMovementComponent.GetMovementBase
// Size: 0x8(Inherited: 0x0) 
struct FGetMovementBase
{
	struct UPrimitiveComponent* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector_Distance2DSquared
// Size: 0x1C(Inherited: 0x0) 
struct FVector_Distance2DSquared
{
	struct FVector v1;  // 0x0(0xC)
	struct FVector v2;  // 0xC(0xC)
	float ReturnValue;  // 0x18(0x4)

}; 
// ScriptStruct Engine.AnimNode_CustomProperty
// Size: 0x58(Inherited: 0x10) 
struct FAnimNode_CustomProperty : public FAnimNode_Base
{
	struct TArray<struct FName> SourcePropertyNames;  // 0x10(0x10)
	struct TArray<struct FName> DestPropertyNames;  // 0x20(0x10)
	struct UObject* TargetInstance;  // 0x30(0x8)
	char pad_56[32];  // 0x38(0x20)

}; 
// ScriptStruct Engine.InputBlendPose
// Size: 0x10(Inherited: 0x0) 
struct FInputBlendPose
{
	struct TArray<struct FBranchFilter> BranchFilters;  // 0x0(0x10)

}; 
// ScriptStruct Engine.BakedAnimationState
// Size: 0x58(Inherited: 0x0) 
struct FBakedAnimationState
{
	struct FName StateName;  // 0x0(0x8)
	struct TArray<struct FBakedStateExitTransition> Transitions;  // 0x8(0x10)
	int32_t StateRootNodeIndex;  // 0x18(0x4)
	int32_t StartNotify;  // 0x1C(0x4)
	int32_t EndNotify;  // 0x20(0x4)
	int32_t FullyBlendedNotify;  // 0x24(0x4)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bIsAConduit : 1;  // 0x28(0x1)
	char pad_41[3];  // 0x29(0x3)
	int32_t EntryRuleNodeIndex;  // 0x2C(0x4)
	struct TArray<int32_t> PlayerNodeIndices;  // 0x30(0x10)
	struct TArray<int32_t> LayerNodeIndices;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool bAlwaysResetOnEntry : 1;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)

}; 
// Function Engine.SplineComponent.SetTangentColor
// Size: 0x10(Inherited: 0x0) 
struct FSetTangentColor
{
	struct FLinearColor TangentColor;  // 0x0(0x10)

}; 
// ScriptStruct Engine.PerPlatformBool
// Size: 0x1(Inherited: 0x0) 
struct FPerPlatformBool
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool Default : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.PSCPool
// Size: 0x10(Inherited: 0x0) 
struct FPSCPool
{
	struct TArray<struct FPSCPoolElem> FreeElements;  // 0x0(0x10)

}; 
// ScriptStruct Engine.SoundModulationDestinationSettings
// Size: 0x10(Inherited: 0x0) 
struct FSoundModulationDestinationSettings
{
	float Value;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct USoundModulatorBase* Modulator;  // 0x8(0x8)

}; 
// Function Engine.VisualLoggerKismetLibrary.LogText
// Size: 0x28(Inherited: 0x0) 
struct FLogText
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FString Text;  // 0x8(0x10)
	struct FName LogCategory;  // 0x18(0x8)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool bAddToMessageLog : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// ScriptStruct Engine.SplinePoint
// Size: 0x44(Inherited: 0x0) 
struct FSplinePoint
{
	float InputKey;  // 0x0(0x4)
	struct FVector position;  // 0x4(0xC)
	struct FVector ArriveTangent;  // 0x10(0xC)
	struct FVector LeaveTangent;  // 0x1C(0xC)
	struct FRotator Rotation;  // 0x28(0xC)
	struct FVector Scale;  // 0x34(0xC)
	char ESplinePointType Type;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)

}; 
// ScriptStruct Engine.FunctionExpressionOutput
// Size: 0x20(Inherited: 0x0) 
struct FFunctionExpressionOutput
{
	struct UMaterialExpressionFunctionOutput* ExpressionOutput;  // 0x0(0x8)
	struct FGuid ExpressionOutputId;  // 0x8(0x10)
	struct FExpressionOutput Output;  // 0x18(0x8)

}; 
// ScriptStruct Engine.PoseSnapshot
// Size: 0x38(Inherited: 0x0) 
struct FPoseSnapshot
{
	struct TArray<struct FTransform> LocalTransforms;  // 0x0(0x10)
	struct TArray<struct FName> BoneNames;  // 0x10(0x10)
	struct FName SkeletalMeshName;  // 0x20(0x8)
	struct FName SnapshotName;  // 0x28(0x8)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bIsValid : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 
// ScriptStruct Engine.BlueprintInputAxisKeyDelegateBinding
// Size: 0x28(Inherited: 0x4) 
struct FBlueprintInputAxisKeyDelegateBinding : public FBlueprintInputDelegateBinding
{
	char pad_4[4];  // 0x4(0x4)
	struct FKey AxisKey;  // 0x8(0x18)
	struct FName FunctionNameToBind;  // 0x20(0x8)

}; 
// Function Engine.Canvas.K2_DrawLine
// Size: 0x24(Inherited: 0x0) 
struct FK2_DrawLine
{
	struct FVector2D ScreenPositionA;  // 0x0(0x8)
	struct FVector2D ScreenPositionB;  // 0x8(0x8)
	float Thickness;  // 0x10(0x4)
	struct FLinearColor RenderColor;  // 0x14(0x10)

}; 
// ScriptStruct Engine.ActorComponentDuplicatedObjectData
// Size: 0x10(Inherited: 0x0) 
struct FActorComponentDuplicatedObjectData
{
	char pad_0[16];  // 0x0(0x10)

}; 
// Function Engine.ExponentialHeightFogComponent.SetNonDirectionalInscatteringColorDistance
// Size: 0x4(Inherited: 0x0) 
struct FSetNonDirectionalInscatteringColorDistance
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.SplineComponent.GetTransformAtDistanceAlongSpline
// Size: 0x40(Inherited: 0x0) 
struct FGetTransformAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bUseScale : 1;  // 0x5(0x1)
	char pad_6[10];  // 0x6(0xA)
	struct FTransform ReturnValue;  // 0x10(0x30)

}; 
// Function Engine.KismetMathLibrary.Set2D
// Size: 0x10(Inherited: 0x0) 
struct FSet2D
{
	struct FVector2D A;  // 0x0(0x8)
	float X;  // 0x8(0x4)
	float Y;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.Divide_LinearColorLinearColor
// Size: 0x30(Inherited: 0x0) 
struct FDivide_LinearColorLinearColor
{
	struct FLinearColor A;  // 0x0(0x10)
	struct FLinearColor B;  // 0x10(0x10)
	struct FLinearColor ReturnValue;  // 0x20(0x10)

}; 
// ScriptStruct Engine.SceneComponentInstanceData
// Size: 0xB8(Inherited: 0x68) 
struct FSceneComponentInstanceData : public FActorComponentInstanceData
{
	struct TMap<struct USceneComponent*, struct FTransform> AttachedInstanceComponents;  // 0x68(0x50)

}; 
// ScriptStruct Engine.KSphereElem
// Size: 0x40(Inherited: 0x30) 
struct FKSphereElem : public FKShapeElem
{
	struct FVector Center;  // 0x30(0xC)
	float Radius;  // 0x3C(0x4)

}; 
// ScriptStruct Engine.BlendFilter
// Size: 0x78(Inherited: 0x0) 
struct FBlendFilter
{
	char pad_0[120];  // 0x0(0x78)

}; 
// Function Engine.SkeletalMeshComponent.AddImpulseToAllBodiesBelow
// Size: 0x18(Inherited: 0x0) 
struct FAddImpulseToAllBodiesBelow
{
	struct FVector Impulse;  // 0x0(0xC)
	struct FName BoneName;  // 0xC(0x8)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bVelChange : 1;  // 0x14(0x1)
	char pad_21_1 : 7;  // 0x15(0x1)
	bool bIncludeSelf : 1;  // 0x15(0x1)
	char pad_22[2];  // 0x16(0x2)

}; 
// ScriptStruct Engine.BlendSampleData
// Size: 0x40(Inherited: 0x0) 
struct FBlendSampleData
{
	int32_t SampleDataIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct UAnimSequence* Animation;  // 0x8(0x8)
	float TotalWeight;  // 0x10(0x4)
	float Time;  // 0x14(0x4)
	float PreviousTime;  // 0x18(0x4)
	float SamplePlayRate;  // 0x1C(0x4)
	char pad_32[32];  // 0x20(0x20)

}; 
// ScriptStruct Engine.AnimationRecordingSettings
// Size: 0x14(Inherited: 0x0) 
struct FAnimationRecordingSettings
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bRecordInWorldSpace : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bRemoveRootAnimation : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool bAutoSaveAsset : 1;  // 0x2(0x1)
	char pad_3[1];  // 0x3(0x1)
	float SampleRate;  // 0x4(0x4)
	float Length;  // 0x8(0x4)
	char ERichCurveInterpMode InterpMode;  // 0xC(0x1)
	char ERichCurveTangentMode TangentMode;  // 0xD(0x1)
	char pad_14[1];  // 0xE(0x1)
	char pad_15_1 : 7;  // 0xF(0x1)
	bool bRecordTransforms : 1;  // 0xF(0x1)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bRecordCurves : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.AudioComponent.SetSubmixSend
// Size: 0x10(Inherited: 0x0) 
struct FSetSubmixSend
{
	struct USoundSubmixBase* Submix;  // 0x0(0x8)
	float SendLevel;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// ScriptStruct Engine.ComponentSpacePose
// Size: 0x20(Inherited: 0x0) 
struct FComponentSpacePose
{
	struct TArray<struct FTransform> Transforms;  // 0x0(0x10)
	struct TArray<struct FName> names;  // 0x10(0x10)

}; 
// ScriptStruct Engine.MaterialSpriteElement
// Size: 0x28(Inherited: 0x0) 
struct FMaterialSpriteElement
{
	struct UMaterialInterface* Material;  // 0x0(0x8)
	struct UCurveFloat* DistanceToOpacityCurve;  // 0x8(0x8)
	char bSizeIsInScreenSpace : 1;  // 0x10(0x1)
	char pad_16_1 : 7;  // 0x10(0x1)
	char pad_17[4];  // 0x11(0x4)
	float BaseSizeX;  // 0x14(0x4)
	float BaseSizeY;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)
	struct UCurveFloat* DistanceToSizeCurve;  // 0x20(0x8)

}; 
// Function Engine.SkinnedMeshComponent.GetDeltaTransformFromRefPose
// Size: 0x40(Inherited: 0x0) 
struct FGetDeltaTransformFromRefPose
{
	struct FName BoneName;  // 0x0(0x8)
	struct FName BaseName;  // 0x8(0x8)
	struct FTransform ReturnValue;  // 0x10(0x30)

}; 
// Function Engine.KismetInputLibrary.Key_IsModifierKey
// Size: 0x20(Inherited: 0x0) 
struct FKey_IsModifierKey
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// ScriptStruct Engine.LocalSpacePose
// Size: 0x20(Inherited: 0x0) 
struct FLocalSpacePose
{
	struct TArray<struct FTransform> Transforms;  // 0x0(0x10)
	struct TArray<struct FName> names;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.RandomUnitVectorInConeInRadians
// Size: 0x1C(Inherited: 0x0) 
struct FRandomUnitVectorInConeInRadians
{
	struct FVector ConeDir;  // 0x0(0xC)
	float ConeHalfAngleInRadians;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// ScriptStruct Engine.NamedTransform
// Size: 0x40(Inherited: 0x0) 
struct FNamedTransform
{
	struct FTransform Value;  // 0x0(0x30)
	struct FName Name;  // 0x30(0x8)
	char pad_56[8];  // 0x38(0x8)

}; 
// ScriptStruct Engine.NamedFloat
// Size: 0xC(Inherited: 0x0) 
struct FNamedFloat
{
	float Value;  // 0x0(0x4)
	struct FName Name;  // 0x4(0x8)

}; 
// ScriptStruct Engine.AnimParentNodeAssetOverride
// Size: 0x18(Inherited: 0x0) 
struct FAnimParentNodeAssetOverride
{
	struct UAnimationAsset* NewAsset;  // 0x0(0x8)
	struct FGuid ParentNodeGuid;  // 0x8(0x10)

}; 
// Function Engine.KismetMathLibrary.Vector2D_Zero
// Size: 0x8(Inherited: 0x0) 
struct FVector2D_Zero
{
	struct FVector2D ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.AnimGroupInfo
// Size: 0x18(Inherited: 0x0) 
struct FAnimGroupInfo
{
	struct FName Name;  // 0x0(0x8)
	struct FLinearColor Color;  // 0x8(0x10)

}; 
// ScriptStruct Engine.AnimBlueprintDebugData
// Size: 0x1(Inherited: 0x0) 
struct FAnimBlueprintDebugData
{
	char pad_0[1];  // 0x0(0x1)

}; 
// Function Engine.GameUserSettings.SetTextureQuality
// Size: 0x4(Inherited: 0x0) 
struct FSetTextureQuality
{
	int32_t Value;  // 0x0(0x4)

}; 
// ScriptStruct Engine.StateMachineStateDebugData
// Size: 0x10(Inherited: 0x0) 
struct FStateMachineStateDebugData
{
	char pad_0[16];  // 0x0(0x10)

}; 
// ScriptStruct Engine.AnimGraphBlendOptions
// Size: 0x8(Inherited: 0x0) 
struct FAnimGraphBlendOptions
{
	float BlendInTime;  // 0x0(0x4)
	float BlendOutTime;  // 0x4(0x4)

}; 
// Function Engine.RuntimeVirtualTexture.GetTileSize
// Size: 0x4(Inherited: 0x0) 
struct FGetTileSize
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.GraphAssetPlayerInformation
// Size: 0x10(Inherited: 0x0) 
struct FGraphAssetPlayerInformation
{
	struct TArray<int32_t> PlayerNodeIndices;  // 0x0(0x10)

}; 
// ScriptStruct Engine.AnimBlueprintFunction
// Size: 0x68(Inherited: 0x0) 
struct FAnimBlueprintFunction
{
	struct FName Name;  // 0x0(0x8)
	struct FName Group;  // 0x8(0x8)
	int32_t OutputPoseNodeIndex;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct TArray<struct FName> InputPoseNames;  // 0x18(0x10)
	struct TArray<int32_t> InputPoseNodeIndices;  // 0x28(0x10)
	char pad_56[40];  // 0x38(0x28)
	char pad_96_1 : 7;  // 0x60(0x1)
	bool bImplemented : 1;  // 0x60(0x1)
	char pad_97[7];  // 0x61(0x7)

}; 
// Function Engine.SplineComponent.GetWorldRotationAtTime
// Size: 0x14(Inherited: 0x0) 
struct FGetWorldRotationAtTime
{
	float Time;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bUseConstantVelocity : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FRotator ReturnValue;  // 0x8(0xC)

}; 
// ScriptStruct Engine.AnimTrack
// Size: 0x10(Inherited: 0x0) 
struct FAnimTrack
{
	struct TArray<struct FAnimSegment> AnimSegments;  // 0x0(0x10)

}; 
// ScriptStruct Engine.AnimSegment
// Size: 0x20(Inherited: 0x0) 
struct FAnimSegment
{
	struct UAnimSequenceBase* AnimReference;  // 0x0(0x8)
	float StartPos;  // 0x8(0x4)
	float AnimStartTime;  // 0xC(0x4)
	float AnimEndTime;  // 0x10(0x4)
	float AnimPlayRate;  // 0x14(0x4)
	int32_t LoopingCount;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// ScriptStruct Engine.SmartNameMapping
// Size: 0x70(Inherited: 0x0) 
struct FSmartNameMapping
{
	char pad_0[112];  // 0x0(0x70)

}; 
// ScriptStruct Engine.AnimationErrorStats
// Size: 0x10(Inherited: 0x0) 
struct FAnimationErrorStats
{
	char pad_0[16];  // 0x0(0x10)

}; 
// Function Engine.SplineComponent.GetWorldLocationAtDistanceAlongSpline
// Size: 0x10(Inherited: 0x0) 
struct FGetWorldLocationAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	struct FVector ReturnValue;  // 0x4(0xC)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_ClassClass
// Size: 0x18(Inherited: 0x0) 
struct FEqualEqual_ClassClass
{
	UObject* A;  // 0x0(0x8)
	UObject* B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.AnimCurveBase
// Size: 0x18(Inherited: 0x0) 
struct FAnimCurveBase
{
	struct FName LastObservedName;  // 0x0(0x8)
	struct FSmartName Name;  // 0x8(0xC)
	int32_t CurveTypeFlags;  // 0x14(0x4)

}; 
// ScriptStruct Engine.SmartName
// Size: 0xC(Inherited: 0x0) 
struct FSmartName
{
	struct FName DisplayName;  // 0x0(0x8)
	char pad_8[4];  // 0x8(0x4)

}; 
// ScriptStruct Engine.QueuedDrawDebugItem
// Size: 0x68(Inherited: 0x0) 
struct FQueuedDrawDebugItem
{
	char EDrawDebugItemType ItemType;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FVector StartLoc;  // 0x4(0xC)
	struct FVector EndLoc;  // 0x10(0xC)
	struct FVector Center;  // 0x1C(0xC)
	struct FRotator Rotation;  // 0x28(0xC)
	float Radius;  // 0x34(0x4)
	float Size;  // 0x38(0x4)
	int32_t Segments;  // 0x3C(0x4)
	struct FColor Color;  // 0x40(0x4)
	char pad_68_1 : 7;  // 0x44(0x1)
	bool bPersistentLines : 1;  // 0x44(0x1)
	char pad_69[3];  // 0x45(0x3)
	float LifeTime;  // 0x48(0x4)
	float Thickness;  // 0x4C(0x4)
	struct FString Message;  // 0x50(0x10)
	struct FVector2D TextScale;  // 0x60(0x8)

}; 
// Function Engine.RadialForceComponent.RemoveObjectTypeToAffect
// Size: 0x1(Inherited: 0x0) 
struct FRemoveObjectTypeToAffect
{
	char EObjectTypeQuery ObjectType;  // 0x0(0x1)

}; 
// ScriptStruct Engine.AnimInstanceSubsystemData
// Size: 0x1(Inherited: 0x0) 
struct FAnimInstanceSubsystemData
{
	char pad_0[1];  // 0x0(0x1)

}; 
// ScriptStruct Engine.LevelSimplificationDetails
// Size: 0x12C(Inherited: 0x0) 
struct FLevelSimplificationDetails
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bCreatePackagePerAsset : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float DetailsPercentage;  // 0x4(0x4)
	struct FMaterialProxySettings StaticMeshMaterialSettings;  // 0x8(0x88)
	char pad_144_1 : 7;  // 0x90(0x1)
	bool bOverrideLandscapeExportLOD : 1;  // 0x90(0x1)
	char pad_145[3];  // 0x91(0x3)
	int32_t LandscapeExportLOD;  // 0x94(0x4)
	struct FMaterialProxySettings LandscapeMaterialSettings;  // 0x98(0x88)
	char pad_288_1 : 7;  // 0x120(0x1)
	bool bBakeFoliageToLandscape : 1;  // 0x120(0x1)
	char pad_289_1 : 7;  // 0x121(0x1)
	bool bBakeGrassToLandscape : 1;  // 0x121(0x1)
	char pad_290_1 : 7;  // 0x122(0x1)
	bool bGenerateMeshNormalMap : 1;  // 0x122(0x1)
	char pad_291_1 : 7;  // 0x123(0x1)
	bool bGenerateMeshMetallicMap : 1;  // 0x123(0x1)
	char pad_292_1 : 7;  // 0x124(0x1)
	bool bGenerateMeshRoughnessMap : 1;  // 0x124(0x1)
	char pad_293_1 : 7;  // 0x125(0x1)
	bool bGenerateMeshSpecularMap : 1;  // 0x125(0x1)
	char pad_294_1 : 7;  // 0x126(0x1)
	bool bGenerateLandscapeNormalMap : 1;  // 0x126(0x1)
	char pad_295_1 : 7;  // 0x127(0x1)
	bool bGenerateLandscapeMetallicMap : 1;  // 0x127(0x1)
	char pad_296_1 : 7;  // 0x128(0x1)
	bool bGenerateLandscapeRoughnessMap : 1;  // 0x128(0x1)
	char pad_297_1 : 7;  // 0x129(0x1)
	bool bGenerateLandscapeSpecularMap : 1;  // 0x129(0x1)
	char pad_298[2];  // 0x12A(0x2)

}; 
// ScriptStruct Engine.PooledCameraShakes
// Size: 0x10(Inherited: 0x0) 
struct FPooledCameraShakes
{
	struct TArray<struct UCameraShakeBase*> PooledShakes;  // 0x0(0x10)

}; 
// Function Engine.SoundSubmix.RemoveSpectralAnalysisDelegate
// Size: 0x18(Inherited: 0x0) 
struct FRemoveSpectralAnalysisDelegate
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FDelegate OnSubmixSpectralAnalysisBP;  // 0x8(0x10)

}; 
// ScriptStruct Engine.AnimLinkableElement
// Size: 0x30(Inherited: 0x0) 
struct FAnimLinkableElement
{
	char pad_0[8];  // 0x0(0x8)
	struct UAnimMontage* LinkedMontage;  // 0x8(0x8)
	int32_t SlotIndex;  // 0x10(0x4)
	int32_t SegmentIndex;  // 0x14(0x4)
	char EAnimLinkMethod LinkMethod;  // 0x18(0x1)
	char EAnimLinkMethod CachedLinkMethod;  // 0x19(0x1)
	char pad_26[2];  // 0x1A(0x2)
	float SegmentBeginTime;  // 0x1C(0x4)
	float SegmentLength;  // 0x20(0x4)
	float LinkValue;  // 0x24(0x4)
	struct UAnimSequenceBase* LinkedSequence;  // 0x28(0x8)

}; 
// ScriptStruct Engine.AnimNotifyEvent
// Size: 0xB8(Inherited: 0x30) 
struct FAnimNotifyEvent : public FAnimLinkableElement
{
	float DisplayTime;  // 0x30(0x4)
	float TriggerTimeOffset;  // 0x34(0x4)
	float EndTriggerTimeOffset;  // 0x38(0x4)
	float TriggerWeightThreshold;  // 0x3C(0x4)
	struct FName NotifyName;  // 0x40(0x8)
	struct UAnimNotify* Notify;  // 0x48(0x8)
	struct UAnimNotifyState* NotifyStateClass;  // 0x50(0x8)
	float Duration;  // 0x58(0x4)
	char pad_92[4];  // 0x5C(0x4)
	struct FAnimLinkableElement EndLink;  // 0x60(0x30)
	char pad_144_1 : 7;  // 0x90(0x1)
	bool bConvertedFromBranchingPoint : 1;  // 0x90(0x1)
	char EMontageNotifyTickType MontageTickType;  // 0x91(0x1)
	char pad_146[2];  // 0x92(0x2)
	float NotifyTriggerChance;  // 0x94(0x4)
	char ENotifyFilterType NotifyFilterType;  // 0x98(0x1)
	char pad_153[3];  // 0x99(0x3)
	int32_t NotifyFilterLOD;  // 0x9C(0x4)
	char pad_160_1 : 7;  // 0xA0(0x1)
	bool bTriggerOnDedicatedServer : 1;  // 0xA0(0x1)
	char pad_161_1 : 7;  // 0xA1(0x1)
	bool bTriggerOnFollower : 1;  // 0xA1(0x1)
	char pad_162[2];  // 0xA2(0x2)
	int32_t TrackIndex;  // 0xA4(0x4)
	char pad_168[16];  // 0xA8(0x10)

}; 
// Function Engine.AnimSingleNodeInstance.SetReverse
// Size: 0x1(Inherited: 0x0) 
struct FSetReverse
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInReverse : 1;  // 0x0(0x1)

}; 
// Function Engine.SplineComponent.GetLeaveTangentAtSplinePoint
// Size: 0x14(Inherited: 0x0) 
struct FGetLeaveTangentAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// ScriptStruct Engine.BranchingPoint
// Size: 0x40(Inherited: 0x30) 
struct FBranchingPoint : public FAnimLinkableElement
{
	struct FName EventName;  // 0x30(0x8)
	float DisplayTime;  // 0x38(0x4)
	float TriggerTimeOffset;  // 0x3C(0x4)

}; 
// ScriptStruct Engine.AnimNode_Inertialization
// Size: 0x70(Inherited: 0x10) 
struct FAnimNode_Inertialization : public FAnimNode_Base
{
	struct FPoseLink Source;  // 0x10(0x10)
	char pad_32[80];  // 0x20(0x50)

}; 
// Function Engine.SplineComponent.GetDistanceAlongSplineAtSplineInputKey
// Size: 0x8(Inherited: 0x0) 
struct FGetDistanceAlongSplineAtSplineInputKey
{
	float InKey;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// ScriptStruct Engine.InertializationPoseDiff
// Size: 0x28(Inherited: 0x0) 
struct FInertializationPoseDiff
{
	char pad_0[40];  // 0x0(0x28)

}; 
// ScriptStruct Engine.InertializationCurveDiff
// Size: 0x8(Inherited: 0x0) 
struct FInertializationCurveDiff
{
	char pad_0[8];  // 0x0(0x8)

}; 
// Function Engine.CharacterMovementComponent.SetGroupsToAvoidMask
// Size: 0x4(Inherited: 0x0) 
struct FSetGroupsToAvoidMask
{
	struct FNavAvoidanceMask GroupMask;  // 0x0(0x4)

}; 
// ScriptStruct Engine.InertializationPose
// Size: 0xA0(Inherited: 0x0) 
struct FInertializationPose
{
	char pad_0[160];  // 0x0(0xA0)

}; 
// Function Engine.StaticMesh.RemoveSocket
// Size: 0x8(Inherited: 0x0) 
struct FRemoveSocket
{
	struct UStaticMeshSocket* Socket;  // 0x0(0x8)

}; 
// ScriptStruct Engine.EdGraphPinReference
// Size: 0x18(Inherited: 0x0) 
struct FEdGraphPinReference
{
	struct TWeakObjectPtr<UEdGraphNode> OwningNode;  // 0x0(0x8)
	struct FGuid PinId;  // 0x8(0x10)

}; 
// ScriptStruct Engine.AnimNode_LinkedAnimGraph
// Size: 0xA0(Inherited: 0x58) 
struct FAnimNode_LinkedAnimGraph : public FAnimNode_CustomProperty
{
	struct TArray<struct FPoseLink> InputPoses;  // 0x58(0x10)
	struct TArray<struct FName> InputPoseNames;  // 0x68(0x10)
	UAnimInstance* InstanceClass;  // 0x78(0x8)
	struct FName Tag;  // 0x80(0x8)
	char pad_136[20];  // 0x88(0x14)
	char bReceiveNotifiesFromLinkedInstances : 1;  // 0x9C(0x1)
	char bPropagateNotifiesToLinkedInstances : 1;  // 0x9C(0x1)
	char pad_156_1 : 6;  // 0x9C(0x1)
	char pad_157[4];  // 0x9D(0x4)

}; 
// Function Engine.PhysicsConstraintComponent.GetCurrentSwing1
// Size: 0x4(Inherited: 0x0) 
struct FGetCurrentSwing1
{
	float ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.AnimNode_LinkedAnimLayer
// Size: 0xB0(Inherited: 0xA0) 
struct FAnimNode_LinkedAnimLayer : public FAnimNode_LinkedAnimGraph
{
	UAnimLayerInterface* Interface;  // 0xA0(0x8)
	struct FName Layer;  // 0xA8(0x8)

}; 
// ScriptStruct Engine.CustomOutput
// Size: 0xC(Inherited: 0x0) 
struct FCustomOutput
{
	struct FName OutputName;  // 0x0(0x8)
	char ECustomMaterialOutputType OutputType;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.AnimInstance.TryGetPawnOwner
// Size: 0x8(Inherited: 0x0) 
struct FTryGetPawnOwner
{
	struct APawn* ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.AnimNode_SaveCachedPose
// Size: 0x158(Inherited: 0x10) 
struct FAnimNode_SaveCachedPose : public FAnimNode_Base
{
	struct FPoseLink Pose;  // 0x10(0x10)
	struct FName CachePoseName;  // 0x20(0x8)
	char pad_40[304];  // 0x28(0x130)

}; 
// Function Engine.AnimInstance.Montage_JumpToSectionsEnd
// Size: 0x10(Inherited: 0x0) 
struct FMontage_JumpToSectionsEnd
{
	struct FName SectionName;  // 0x0(0x8)
	struct UAnimMontage* Montage;  // 0x8(0x8)

}; 
// Function Engine.PhysicsConstraintComponent.SetLinearZLimit
// Size: 0x8(Inherited: 0x0) 
struct FSetLinearZLimit
{
	char ELinearConstraintMotion ConstraintType;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float LimitSize;  // 0x4(0x4)

}; 
// ScriptStruct Engine.AnimNode_StateMachine
// Size: 0xB0(Inherited: 0x10) 
struct FAnimNode_StateMachine : public FAnimNode_Base
{
	int32_t StateMachineIndexInClass;  // 0x10(0x4)
	int32_t MaxTransitionsPerFrame;  // 0x14(0x4)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bSkipFirstUpdateTransition : 1;  // 0x18(0x1)
	char pad_25_1 : 7;  // 0x19(0x1)
	bool bReinitializeOnBecomingRelevant : 1;  // 0x19(0x1)
	char pad_26[150];  // 0x1A(0x96)

}; 
// Function Engine.AnimInstance.PlaySlotAnimation
// Size: 0x28(Inherited: 0x0) 
struct FPlaySlotAnimation
{
	struct UAnimSequenceBase* Asset;  // 0x0(0x8)
	struct FName SlotNodeName;  // 0x8(0x8)
	float BlendInTime;  // 0x10(0x4)
	float BlendOutTime;  // 0x14(0x4)
	float InPlayRate;  // 0x18(0x4)
	int32_t LoopCount;  // 0x1C(0x4)
	float ReturnValue;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.AudioComponent.HasCookedFFTData
// Size: 0x1(Inherited: 0x0) 
struct FHasCookedFFTData
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.AnimationPotentialTransition
// Size: 0x30(Inherited: 0x0) 
struct FAnimationPotentialTransition
{
	char pad_0[48];  // 0x0(0x30)

}; 
// Function Engine.KismetMathLibrary.ToDirectionAndLength2D
// Size: 0x14(Inherited: 0x0) 
struct FToDirectionAndLength2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D OutDir;  // 0x8(0x8)
	float OutLength;  // 0x10(0x4)

}; 
// Function Engine.KismetInputLibrary.PointerEvent_GetGestureType
// Size: 0x78(Inherited: 0x0) 
struct FPointerEvent_GetGestureType
{
	struct FPointerEvent Input;  // 0x0(0x70)
	uint8_t  ReturnValue;  // 0x70(0x1)
	char pad_113[7];  // 0x71(0x7)

}; 
// ScriptStruct Engine.AnimNode_TransitionPoseEvaluator
// Size: 0xF8(Inherited: 0x10) 
struct FAnimNode_TransitionPoseEvaluator : public FAnimNode_Base
{
	char pad_16[216];  // 0x10(0xD8)
	int32_t FramesToCachePose;  // 0xE8(0x4)
	char pad_236[4];  // 0xEC(0x4)
	char EEvaluatorDataSource DataSource;  // 0xF0(0x1)
	char EEvaluatorMode EvaluatorMode;  // 0xF1(0x1)
	char pad_242[6];  // 0xF2(0x6)

}; 
// Function Engine.CurveSourceInterface.GetBindingName
// Size: 0x8(Inherited: 0x0) 
struct FGetBindingName
{
	struct FName ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.AnimNode_TransitionResult
// Size: 0x28(Inherited: 0x10) 
struct FAnimNode_TransitionResult : public FAnimNode_Base
{
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bCanEnterTransition : 1;  // 0x10(0x1)
	char pad_17[23];  // 0x11(0x17)

}; 
// ScriptStruct Engine.AnimNode_UseCachedPose
// Size: 0x28(Inherited: 0x10) 
struct FAnimNode_UseCachedPose : public FAnimNode_Base
{
	struct FPoseLink LinkToCachingNode;  // 0x10(0x10)
	struct FName CachePoseName;  // 0x20(0x8)

}; 
// Function Engine.ParticleSystemComponent.SetBeamSourceStrength
// Size: 0xC(Inherited: 0x0) 
struct FSetBeamSourceStrength
{
	int32_t EmitterIndex;  // 0x0(0x4)
	float NewSourceStrength;  // 0x4(0x4)
	int32_t SourceIndex;  // 0x8(0x4)

}; 
// ScriptStruct Engine.ExposedValueHandler
// Size: 0x50(Inherited: 0x0) 
struct FExposedValueHandler
{
	struct FName BoundFunction;  // 0x0(0x8)
	struct TArray<struct FExposedValueCopyRecord> CopyRecords;  // 0x8(0x10)
	struct UFunction* Function;  // 0x18(0x8)
	struct TFieldPath<FNone> ValueHandlerNodeProperty;  // 0x20(0x20)
	char pad_64[16];  // 0x40(0x10)

}; 
// ScriptStruct Engine.ExposedValueCopyRecord
// Size: 0x8(Inherited: 0x0) 
struct FExposedValueCopyRecord
{
	int32_t CopyIndex;  // 0x0(0x4)
	uint8_t  PostCopyOperation;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.AtmosphericFogComponent.SetDensityOffset
// Size: 0x4(Inherited: 0x0) 
struct FSetDensityOffset
{
	float NewDensityOffset;  // 0x0(0x4)

}; 
// ScriptStruct Engine.AnimNotifyArray
// Size: 0x10(Inherited: 0x0) 
struct FAnimNotifyArray
{
	struct TArray<struct FAnimNotifyEventReference> Notifies;  // 0x0(0x10)

}; 
// Function Engine.SceneCaptureComponent.RemoveShowOnlyActorComponents
// Size: 0x10(Inherited: 0x0) 
struct FRemoveShowOnlyActorComponents
{
	struct AActor* InActor;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bIncludeFromChildActors : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// ScriptStruct Engine.CompressedTrack
// Size: 0x38(Inherited: 0x0) 
struct FCompressedTrack
{
	struct TArray<char> ByteStream;  // 0x0(0x10)
	struct TArray<float> Times;  // 0x10(0x10)
	float Mins[3];  // 0x20(0xC)
	float Ranges[3];  // 0x2C(0xC)

}; 
// ScriptStruct Engine.SoundWaveEnvelopeDataPerSound
// Size: 0x10(Inherited: 0x0) 
struct FSoundWaveEnvelopeDataPerSound
{
	float Envelope;  // 0x0(0x4)
	float PlaybackTime;  // 0x4(0x4)
	struct USoundWave* SoundWave;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Conv_ByteToFloat
// Size: 0x8(Inherited: 0x0) 
struct FConv_ByteToFloat
{
	char InByte;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float ReturnValue;  // 0x4(0x4)

}; 
// ScriptStruct Engine.PoseDataContainer
// Size: 0x90(Inherited: 0x0) 
struct FPoseDataContainer
{
	struct TArray<struct FSmartName> PoseNames;  // 0x0(0x10)
	struct TArray<struct FName> Tracks;  // 0x10(0x10)
	struct TMap<struct FName, int32_t> TrackMap;  // 0x20(0x50)
	struct TArray<struct FPoseData> Poses;  // 0x70(0x10)
	struct TArray<struct FAnimCurveBase> Curves;  // 0x80(0x10)

}; 
// Function Engine.AnimInstance.Montage_Stop
// Size: 0x10(Inherited: 0x0) 
struct FMontage_Stop
{
	float InBlendOutTime;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct UAnimMontage* Montage;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector4_Negated
// Size: 0x20(Inherited: 0x0) 
struct FVector4_Negated
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 ReturnValue;  // 0x10(0x10)

}; 
// ScriptStruct Engine.CurveTrack
// Size: 0x18(Inherited: 0x0) 
struct FCurveTrack
{
	struct FName CurveName;  // 0x0(0x8)
	struct TArray<float> CurveWeights;  // 0x8(0x10)

}; 
// ScriptStruct Engine.ScaleTrack
// Size: 0x20(Inherited: 0x0) 
struct FScaleTrack
{
	struct TArray<struct FVector> ScaleKeys;  // 0x0(0x10)
	struct TArray<float> Times;  // 0x10(0x10)

}; 
// ScriptStruct Engine.PrecomputedSkyLightInstanceData
// Size: 0x170(Inherited: 0xB8) 
struct FPrecomputedSkyLightInstanceData : public FSceneComponentInstanceData
{
	struct FGuid LightGuid;  // 0xB8(0x10)
	float AverageBrightness;  // 0xC8(0x4)
	char pad_204[164];  // 0xCC(0xA4)

}; 
// ScriptStruct Engine.RotationTrack
// Size: 0x20(Inherited: 0x0) 
struct FRotationTrack
{
	struct TArray<struct FQuat> RotKeys;  // 0x0(0x10)
	struct TArray<float> Times;  // 0x10(0x10)

}; 
// ScriptStruct Engine.TranslationTrack
// Size: 0x20(Inherited: 0x0) 
struct FTranslationTrack
{
	struct TArray<struct FVector> PosKeys;  // 0x0(0x10)
	struct TArray<float> Times;  // 0x10(0x10)

}; 
// ScriptStruct Engine.PredictProjectilePathResult
// Size: 0xB8(Inherited: 0x0) 
struct FPredictProjectilePathResult
{
	struct TArray<struct FPredictProjectilePathPointData> PathData;  // 0x0(0x10)
	struct FPredictProjectilePathPointData LastTraceDestination;  // 0x10(0x1C)
	struct FHitResult HitResult;  // 0x2C(0x88)
	char pad_180[4];  // 0xB4(0x4)

}; 
// ScriptStruct Engine.AnimSequenceTrackContainer
// Size: 0x20(Inherited: 0x0) 
struct FAnimSequenceTrackContainer
{
	struct TArray<struct FRawAnimSequenceTrack> AnimationTracks;  // 0x0(0x10)
	struct TArray<struct FName> TrackNames;  // 0x10(0x10)

}; 
// ScriptStruct Engine.RawAnimSequenceTrack
// Size: 0x30(Inherited: 0x0) 
struct FRawAnimSequenceTrack
{
	struct TArray<struct FVector> PosKeys;  // 0x0(0x10)
	struct TArray<struct FQuat> RotKeys;  // 0x10(0x10)
	struct TArray<struct FVector> ScaleKeys;  // 0x20(0x10)

}; 
// Function Engine.KismetMathLibrary.Subtract_IntPointInt
// Size: 0x14(Inherited: 0x0) 
struct FSubtract_IntPointInt
{
	struct FIntPoint A;  // 0x0(0x8)
	int32_t B;  // 0x8(0x4)
	struct FIntPoint ReturnValue;  // 0xC(0x8)

}; 
// ScriptStruct Engine.AnimSetMeshLinkup
// Size: 0x10(Inherited: 0x0) 
struct FAnimSetMeshLinkup
{
	struct TArray<int32_t> BoneToTrackTable;  // 0x0(0x10)

}; 
// ScriptStruct Engine.AnimSingleNodeInstanceProxy
// Size: 0x8C0(Inherited: 0x770) 
struct FAnimSingleNodeInstanceProxy : public FAnimInstanceProxy
{
	char pad_1904[336];  // 0x770(0x150)

}; 
// ScriptStruct Engine.MeshReductionSettings
// Size: 0x24(Inherited: 0x0) 
struct FMeshReductionSettings
{
	float PercentTriangles;  // 0x0(0x4)
	float PercentVertices;  // 0x4(0x4)
	float MaxDeviation;  // 0x8(0x4)
	float PixelError;  // 0xC(0x4)
	float WeldingThreshold;  // 0x10(0x4)
	float HardAngleThreshold;  // 0x14(0x4)
	int32_t BaseLODModel;  // 0x18(0x4)
	char EMeshFeatureImportance SilhouetteImportance;  // 0x1C(0x1)
	char EMeshFeatureImportance TextureImportance;  // 0x1D(0x1)
	char EMeshFeatureImportance ShadingImportance;  // 0x1E(0x1)
	char bRecalculateNormals : 1;  // 0x1F(0x1)
	char bGenerateUniqueLightmapUVs : 1;  // 0x1F(0x1)
	char bKeepSymmetry : 1;  // 0x1F(0x1)
	char bVisibilityAided : 1;  // 0x1F(0x1)
	char bCullOccluded : 1;  // 0x1F(0x1)
	char pad_31_1 : 3;  // 0x1F(0x1)
	uint8_t  TerminationCriterion;  // 0x20(0x1)
	char EMeshFeatureImportance VisibilityAggressiveness;  // 0x21(0x1)
	char EMeshFeatureImportance VertexColorImportance;  // 0x22(0x1)
	char pad_35[1];  // 0x23(0x1)

}; 
// ScriptStruct Engine.AnimNode_SingleNode
// Size: 0x30(Inherited: 0x10) 
struct FAnimNode_SingleNode : public FAnimNode_Base
{
	struct FPoseLink SourcePose;  // 0x10(0x10)
	char pad_32[16];  // 0x20(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.MakeStandardFilename
// Size: 0x20(Inherited: 0x0) 
struct FMakeStandardFilename
{
	struct FString InPath;  // 0x0(0x10)
	struct FString OutPath;  // 0x10(0x10)

}; 
// Function Engine.CameraComponent.SetConstraintAspectRatio
// Size: 0x1(Inherited: 0x0) 
struct FSetConstraintAspectRatio
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInConstrainAspectRatio : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.AnimationStateBase
// Size: 0x8(Inherited: 0x0) 
struct FAnimationStateBase
{
	struct FName StateName;  // 0x0(0x8)

}; 
// Function Engine.KismetTextLibrary.EqualEqual_TextText
// Size: 0x38(Inherited: 0x0) 
struct FEqualEqual_TextText
{
	struct FText A;  // 0x0(0x18)
	struct FText B;  // 0x18(0x18)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool ReturnValue : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 
// ScriptStruct Engine.BakedStateExitTransition
// Size: 0x20(Inherited: 0x0) 
struct FBakedStateExitTransition
{
	int32_t CanTakeDelegateIndex;  // 0x0(0x4)
	int32_t CustomResultNodeIndex;  // 0x4(0x4)
	int32_t TransitionIndex;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bDesiredTransitionReturnValue : 1;  // 0xC(0x1)
	char pad_13_1 : 7;  // 0xD(0x1)
	bool bAutomaticRemainingTimeRule : 1;  // 0xD(0x1)
	char pad_14[2];  // 0xE(0x2)
	struct TArray<int32_t> PoseEvaluatorLinks;  // 0x10(0x10)

}; 
// ScriptStruct Engine.AnimationState
// Size: 0x28(Inherited: 0x8) 
struct FAnimationState : public FAnimationStateBase
{
	struct TArray<struct FAnimationTransitionRule> Transitions;  // 0x8(0x10)
	int32_t StateRootNodeIndex;  // 0x18(0x4)
	int32_t StartNotify;  // 0x1C(0x4)
	int32_t EndNotify;  // 0x20(0x4)
	int32_t FullyBlendedNotify;  // 0x24(0x4)

}; 
// Function Engine.CameraComponent.SetUseFieldOfViewForLOD
// Size: 0x1(Inherited: 0x0) 
struct FSetUseFieldOfViewForLOD
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInUseFieldOfViewForLOD : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.AnimationTransitionRule
// Size: 0x10(Inherited: 0x0) 
struct FAnimationTransitionRule
{
	struct FName RuleToExecute;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool TransitionReturnVal : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	int32_t TransitionIndex;  // 0xC(0x4)

}; 
// ScriptStruct Engine.AnimSyncMarker
// Size: 0xC(Inherited: 0x0) 
struct FAnimSyncMarker
{
	struct FName MarkerName;  // 0x0(0x8)
	float Time;  // 0x8(0x4)

}; 
// Function Engine.PlayerInput.InvertAxis
// Size: 0x8(Inherited: 0x0) 
struct FInvertAxis
{
	struct FName AxisName;  // 0x0(0x8)

}; 
// ScriptStruct Engine.AnimNotifyTrack
// Size: 0x38(Inherited: 0x0) 
struct FAnimNotifyTrack
{
	struct FName TrackName;  // 0x0(0x8)
	struct FLinearColor TrackColor;  // 0x8(0x10)
	char pad_24[32];  // 0x18(0x20)

}; 
// Function Engine.AnimInstance.IsAnyMontagePlaying
// Size: 0x1(Inherited: 0x0) 
struct FIsAnyMontagePlaying
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.AssetImportInfo
// Size: 0x1(Inherited: 0x0) 
struct FAssetImportInfo
{
	char pad_0[1];  // 0x0(0x1)

}; 
// ScriptStruct Engine.PreviewMeshCollectionEntry
// Size: 0x28(Inherited: 0x0) 
struct FPreviewMeshCollectionEntry
{
	struct TSoftObjectPtr<USkeletalMesh> SkeletalMesh;  // 0x0(0x28)

}; 
// Function Engine.SkeletalMeshComponent.GetLinkedAnimLayerInstanceByGroup
// Size: 0x10(Inherited: 0x0) 
struct FGetLinkedAnimLayerInstanceByGroup
{
	struct FName InGroup;  // 0x0(0x8)
	struct UAnimInstance* ReturnValue;  // 0x8(0x8)

}; 
// ScriptStruct Engine.AssetManagerSearchRules
// Size: 0x50(Inherited: 0x0) 
struct FAssetManagerSearchRules
{
	struct TArray<struct FString> AssetScanPaths;  // 0x0(0x10)
	struct TArray<struct FString> IncludePatterns;  // 0x10(0x10)
	struct TArray<struct FString> ExcludePatterns;  // 0x20(0x10)
	UObject* AssetBaseClass;  // 0x30(0x8)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool bHasBlueprintClasses : 1;  // 0x38(0x1)
	char pad_57_1 : 7;  // 0x39(0x1)
	bool bForceSynchronousScan : 1;  // 0x39(0x1)
	char pad_58_1 : 7;  // 0x3A(0x1)
	bool bSkipVirtualPathExpansion : 1;  // 0x3A(0x1)
	char pad_59_1 : 7;  // 0x3B(0x1)
	bool bSkipManagerIncludeCheck : 1;  // 0x3B(0x1)
	char pad_60[20];  // 0x3C(0x14)

}; 
// Function Engine.KismetMathLibrary.Quat_Inversed
// Size: 0x20(Inherited: 0x0) 
struct FQuat_Inversed
{
	struct FQuat Q;  // 0x0(0x10)
	struct FQuat ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.MirrorVectorByNormal
// Size: 0x24(Inherited: 0x0) 
struct FMirrorVectorByNormal
{
	struct FVector InVect;  // 0x0(0xC)
	struct FVector InNormal;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// ScriptStruct Engine.PrimaryAssetTypeInfo
// Size: 0x88(Inherited: 0x0) 
struct FPrimaryAssetTypeInfo
{
	struct FName PrimaryAssetType;  // 0x0(0x8)
	struct TSoftClassPtr<UObject> AssetBaseClass;  // 0x8(0x28)
	UObject* AssetBaseClassLoaded;  // 0x30(0x8)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool bHasBlueprintClasses : 1;  // 0x38(0x1)
	char pad_57_1 : 7;  // 0x39(0x1)
	bool bIsEditorOnly : 1;  // 0x39(0x1)
	char pad_58[6];  // 0x3A(0x6)
	struct TArray<struct FDirectoryPath> Directories;  // 0x40(0x10)
	struct TArray<struct FSoftObjectPath> SpecificAssets;  // 0x50(0x10)
	struct FPrimaryAssetRules Rules;  // 0x60(0xC)
	char pad_108[4];  // 0x6C(0x4)
	struct TArray<struct FString> AssetScanPaths;  // 0x70(0x10)
	char pad_128_1 : 7;  // 0x80(0x1)
	bool bIsDynamicAsset : 1;  // 0x80(0x1)
	char pad_129[3];  // 0x81(0x3)
	int32_t NumberOfAssets;  // 0x84(0x4)

}; 
// Function Engine.KismetMathLibrary.Vector_GetAbs
// Size: 0x18(Inherited: 0x0) 
struct FVector_GetAbs
{
	struct FVector A;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// ScriptStruct Engine.AssetMapping
// Size: 0x10(Inherited: 0x0) 
struct FAssetMapping
{
	struct UAnimationAsset* SourceAsset;  // 0x0(0x8)
	struct UAnimationAsset* TargetAsset;  // 0x8(0x8)

}; 
// ScriptStruct Engine.AudioComponentParam
// Size: 0x20(Inherited: 0x0) 
struct FAudioComponentParam
{
	struct FName ParamName;  // 0x0(0x8)
	float FloatParam;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool BoolParam : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	int32_t IntParam;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct USoundWave* SoundWaveParam;  // 0x18(0x8)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_Vector4Vector4
// Size: 0x30(Inherited: 0x0) 
struct FEqualEqual_Vector4Vector4
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 B;  // 0x10(0x10)
	float ErrorTolerance;  // 0x20(0x4)
	char pad_36_1 : 7;  // 0x24(0x1)
	bool ReturnValue : 1;  // 0x24(0x1)
	char pad_37[11];  // 0x25(0xB)

}; 
// ScriptStruct Engine.AudioEffectParameters
// Size: 0x8(Inherited: 0x0) 
struct FAudioEffectParameters
{
	char pad_0[8];  // 0x0(0x8)

}; 
// ScriptStruct Engine.DefaultAudioBusSettings
// Size: 0x18(Inherited: 0x0) 
struct FDefaultAudioBusSettings
{
	struct FSoftObjectPath AudioBus;  // 0x0(0x18)

}; 
// Function Engine.KismetMathLibrary.LinearColor_White
// Size: 0x10(Inherited: 0x0) 
struct FLinearColor_White
{
	struct FLinearColor ReturnValue;  // 0x0(0x10)

}; 
// ScriptStruct Engine.SoundDebugEntry
// Size: 0x20(Inherited: 0x0) 
struct FSoundDebugEntry
{
	struct FName DebugName;  // 0x0(0x8)
	struct FSoftObjectPath Sound;  // 0x8(0x18)

}; 
// Function Engine.GameUserSettings.GetRecommendedResolutionScale
// Size: 0x4(Inherited: 0x0) 
struct FGetRecommendedResolutionScale
{
	float ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.AudioVolumeSubmixOverrideSettings
// Size: 0x20(Inherited: 0x0) 
struct FAudioVolumeSubmixOverrideSettings
{
	struct USoundSubmix* Submix;  // 0x0(0x8)
	struct TArray<struct USoundEffectSubmixPreset*> SubmixEffectChain;  // 0x8(0x10)
	float CrossfadeTime;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.SplineComponent.GetWorldLocationAtTime
// Size: 0x14(Inherited: 0x0) 
struct FGetWorldLocationAtTime
{
	float Time;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bUseConstantVelocity : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// ScriptStruct Engine.AudioVolumeSubmixSendSettings
// Size: 0x18(Inherited: 0x0) 
struct FAudioVolumeSubmixSendSettings
{
	uint8_t  ListenerLocationState;  // 0x0(0x1)
	uint8_t  SourceLocationState;  // 0x1(0x1)
	char pad_2[6];  // 0x2(0x6)
	struct TArray<struct FSoundSubmixSendInfo> SubmixSends;  // 0x8(0x10)

}; 
// ScriptStruct Engine.SplineCurves
// Size: 0x70(Inherited: 0x0) 
struct FSplineCurves
{
	struct FInterpCurveVector position;  // 0x0(0x18)
	struct FInterpCurveQuat Rotation;  // 0x18(0x18)
	struct FInterpCurveVector Scale;  // 0x30(0x18)
	struct FInterpCurveFloat ReparamTable;  // 0x48(0x18)
	struct USplineMetadata* MetaData;  // 0x60(0x8)
	uint32_t Version;  // 0x68(0x4)
	char pad_108[4];  // 0x6C(0x4)

}; 
// Function Engine.CharacterMovementComponent.K2_ComputeFloorDist
// Size: 0xAC(Inherited: 0x0) 
struct FK2_ComputeFloorDist
{
	struct FVector CapsuleLocation;  // 0x0(0xC)
	float LineDistance;  // 0xC(0x4)
	float SweepDistance;  // 0x10(0x4)
	float SweepRadius;  // 0x14(0x4)
	struct FFindFloorResult FloorResult;  // 0x18(0x94)

}; 
// ScriptStruct Engine.LaunchOnTestSettings
// Size: 0x20(Inherited: 0x0) 
struct FLaunchOnTestSettings
{
	struct FFilePath LaunchOnTestmap;  // 0x0(0x10)
	struct FString DeviceID;  // 0x10(0x10)

}; 
// Function Engine.AnimInstance.GetCurrentStateName
// Size: 0xC(Inherited: 0x0) 
struct FGetCurrentStateName
{
	int32_t MachineIndex;  // 0x0(0x4)
	struct FName ReturnValue;  // 0x4(0x8)

}; 
// ScriptStruct Engine.StaticMeshComponentLODInfo
// Size: 0x90(Inherited: 0x0) 
struct FStaticMeshComponentLODInfo
{
	char pad_0[144];  // 0x0(0x90)

}; 
// ScriptStruct Engine.FilePath
// Size: 0x10(Inherited: 0x0) 
struct FFilePath
{
	struct FString FilePath;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.Add_LinearColorLinearColor
// Size: 0x30(Inherited: 0x0) 
struct FAdd_LinearColorLinearColor
{
	struct FLinearColor A;  // 0x0(0x10)
	struct FLinearColor B;  // 0x10(0x10)
	struct FLinearColor ReturnValue;  // 0x20(0x10)

}; 
// ScriptStruct Engine.BuildPromotionTestSettings
// Size: 0x1F0(Inherited: 0x0) 
struct FBuildPromotionTestSettings
{
	struct FFilePath DefaultStaticMeshAsset;  // 0x0(0x10)
	struct FBuildPromotionImportWorkflowSettings ImportWorkflow;  // 0x10(0x150)
	struct FBuildPromotionOpenAssetSettings OpenAssets;  // 0x160(0x60)
	struct FBuildPromotionNewProjectSettings NewProjectSettings;  // 0x1C0(0x20)
	struct FFilePath SourceControlMaterial;  // 0x1E0(0x10)

}; 
// ScriptStruct Engine.SkeletalMeshLODInfo
// Size: 0xB8(Inherited: 0x0) 
struct FSkeletalMeshLODInfo
{
	struct FPerPlatformFloat ScreenSize;  // 0x0(0x4)
	float LODHysteresis;  // 0x4(0x4)
	struct TArray<int32_t> LODMaterialMap;  // 0x8(0x10)
	struct FSkeletalMeshBuildSettings BuildSettings;  // 0x18(0x14)
	struct FSkeletalMeshOptimizationSettings ReductionSettings;  // 0x2C(0x3C)
	struct TArray<struct FBoneReference> BonesToRemove;  // 0x68(0x10)
	struct TArray<struct FBoneReference> BonesToPrioritize;  // 0x78(0x10)
	float WeightOfPrioritization;  // 0x88(0x4)
	char pad_140[4];  // 0x8C(0x4)
	struct UAnimSequence* BakePose;  // 0x90(0x8)
	struct UAnimSequence* BakePoseOverride;  // 0x98(0x8)
	struct FString SourceImportFilename;  // 0xA0(0x10)
	uint8_t  SkinCacheUsage;  // 0xB0(0x1)
	char bHasBeenSimplified : 1;  // 0xB1(0x1)
	char bHasPerLODVertexColors : 1;  // 0xB1(0x1)
	char bAllowCPUAccess : 1;  // 0xB1(0x1)
	char bSupportUniformlyDistributedSampling : 1;  // 0xB1(0x1)
	char pad_177_1 : 4;  // 0xB1(0x1)
	char pad_178[7];  // 0xB2(0x7)

}; 
// ScriptStruct Engine.BuildPromotionNewProjectSettings
// Size: 0x20(Inherited: 0x0) 
struct FBuildPromotionNewProjectSettings
{
	struct FDirectoryPath NewProjectFolderOverride;  // 0x0(0x10)
	struct FString NewProjectNameOverride;  // 0x10(0x10)

}; 
// Function Engine.TimelineComponent.GetPlaybackPosition
// Size: 0x4(Inherited: 0x0) 
struct FGetPlaybackPosition
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.DefaultPawn.TurnAtRate
// Size: 0x4(Inherited: 0x0) 
struct FTurnAtRate
{
	float Rate;  // 0x0(0x4)

}; 
// ScriptStruct Engine.BuildPromotionImportWorkflowSettings
// Size: 0x150(Inherited: 0x0) 
struct FBuildPromotionImportWorkflowSettings
{
	struct FEditorImportWorkflowDefinition Diffuse;  // 0x0(0x20)
	struct FEditorImportWorkflowDefinition Normal;  // 0x20(0x20)
	struct FEditorImportWorkflowDefinition StaticMesh;  // 0x40(0x20)
	struct FEditorImportWorkflowDefinition ReimportStaticMesh;  // 0x60(0x20)
	struct FEditorImportWorkflowDefinition BlendShapeMesh;  // 0x80(0x20)
	struct FEditorImportWorkflowDefinition MorphMesh;  // 0xA0(0x20)
	struct FEditorImportWorkflowDefinition SkeletalMesh;  // 0xC0(0x20)
	struct FEditorImportWorkflowDefinition Animation;  // 0xE0(0x20)
	struct FEditorImportWorkflowDefinition Sound;  // 0x100(0x20)
	struct FEditorImportWorkflowDefinition SurroundSound;  // 0x120(0x20)
	struct TArray<struct FEditorImportWorkflowDefinition> OtherAssetsToImport;  // 0x140(0x10)

}; 
// ScriptStruct Engine.EditorImportWorkflowDefinition
// Size: 0x20(Inherited: 0x0) 
struct FEditorImportWorkflowDefinition
{
	struct FFilePath ImportFilePath;  // 0x0(0x10)
	struct TArray<struct FImportFactorySettingValues> FactorySettings;  // 0x10(0x10)

}; 
// Function Engine.SkeletalMeshComponent.GetStringAttribute_Ref
// Size: 0x28(Inherited: 0x0) 
struct FGetStringAttribute_Ref
{
	struct FName BoneName;  // 0x0(0x8)
	struct FName AttributeName;  // 0x8(0x8)
	struct FString OutValue;  // 0x10(0x10)
	uint8_t  LookupType;  // 0x20(0x1)
	char pad_33_1 : 7;  // 0x21(0x1)
	bool ReturnValue : 1;  // 0x21(0x1)
	char pad_34[6];  // 0x22(0x6)

}; 
// ScriptStruct Engine.ImportFactorySettingValues
// Size: 0x20(Inherited: 0x0) 
struct FImportFactorySettingValues
{
	struct FString SettingName;  // 0x0(0x10)
	struct FString Value;  // 0x10(0x10)

}; 
// ScriptStruct Engine.BlueprintEditorPromotionSettings
// Size: 0x30(Inherited: 0x0) 
struct FBlueprintEditorPromotionSettings
{
	struct FFilePath FirstMeshPath;  // 0x0(0x10)
	struct FFilePath SecondMeshPath;  // 0x10(0x10)
	struct FFilePath DefaultParticleAsset;  // 0x20(0x10)

}; 
// ScriptStruct Engine.ParticleEditorPromotionSettings
// Size: 0x10(Inherited: 0x0) 
struct FParticleEditorPromotionSettings
{
	struct FFilePath DefaultParticleAsset;  // 0x0(0x10)

}; 
// Function Engine.SkeletalMeshComponent.GetStringAttribute
// Size: 0x38(Inherited: 0x0) 
struct FGetStringAttribute
{
	struct FName BoneName;  // 0x0(0x8)
	struct FName AttributeName;  // 0x8(0x8)
	struct FString DefaultValue;  // 0x10(0x10)
	struct FString OutValue;  // 0x20(0x10)
	uint8_t  LookupType;  // 0x30(0x1)
	char pad_49_1 : 7;  // 0x31(0x1)
	bool ReturnValue : 1;  // 0x31(0x1)
	char pad_50[6];  // 0x32(0x6)

}; 
// Function Engine.SkinnedMeshComponent.SetPostSkinningOffsets
// Size: 0x18(Inherited: 0x0) 
struct FSetPostSkinningOffsets
{
	int32_t LODIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct TArray<struct FVector> Offsets;  // 0x8(0x10)

}; 
// Function Engine.KismetMathLibrary.Add_Int64Int64
// Size: 0x18(Inherited: 0x0) 
struct FAdd_Int64Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	int64_t ReturnValue;  // 0x10(0x8)

}; 
// ScriptStruct Engine.MaterialEditorPromotionSettings
// Size: 0x30(Inherited: 0x0) 
struct FMaterialEditorPromotionSettings
{
	struct FFilePath DefaultMaterialAsset;  // 0x0(0x10)
	struct FFilePath DefaultDiffuseTexture;  // 0x10(0x10)
	struct FFilePath DefaultNormalTexture;  // 0x20(0x10)

}; 
// ScriptStruct Engine.EditorImportExportTestDefinition
// Size: 0x38(Inherited: 0x0) 
struct FEditorImportExportTestDefinition
{
	struct FFilePath ImportFilePath;  // 0x0(0x10)
	struct FString ExportFileExtension;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool bSkipExport : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)
	struct TArray<struct FImportFactorySettingValues> FactorySettings;  // 0x28(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.ProjectPluginsDir
// Size: 0x10(Inherited: 0x0) 
struct FProjectPluginsDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// ScriptStruct Engine.ExternalToolDefinition
// Size: 0x60(Inherited: 0x0) 
struct FExternalToolDefinition
{
	struct FString ToolName;  // 0x0(0x10)
	struct FFilePath ExecutablePath;  // 0x10(0x10)
	struct FString CommandLineOptions;  // 0x20(0x10)
	struct FDirectoryPath WorkingDirectory;  // 0x30(0x10)
	struct FString ScriptExtension;  // 0x40(0x10)
	struct FDirectoryPath ScriptDirectory;  // 0x50(0x10)

}; 
// Function Engine.SkinnedMeshComponent.TransformFromBoneSpace
// Size: 0x38(Inherited: 0x0) 
struct FTransformFromBoneSpace
{
	struct FName BoneName;  // 0x0(0x8)
	struct FVector InPosition;  // 0x8(0xC)
	struct FRotator InRotation;  // 0x14(0xC)
	struct FVector OutPosition;  // 0x20(0xC)
	struct FRotator OutRotation;  // 0x2C(0xC)

}; 
// ScriptStruct Engine.FunctionExpressionInput
// Size: 0x30(Inherited: 0x0) 
struct FFunctionExpressionInput
{
	struct UMaterialExpressionFunctionInput* ExpressionInput;  // 0x0(0x8)
	struct FGuid ExpressionInputId;  // 0x8(0x10)
	struct FExpressionInput Input;  // 0x18(0x14)
	char pad_44[4];  // 0x2C(0x4)

}; 
// ScriptStruct Engine.NavAvoidanceData
// Size: 0x3C(Inherited: 0x0) 
struct FNavAvoidanceData
{
	char pad_0[60];  // 0x0(0x3C)

}; 
// ScriptStruct Engine.BandwidthTestGenerator
// Size: 0x20(Inherited: 0x0) 
struct FBandwidthTestGenerator
{
	struct TArray<struct FBandwidthTestItem> ReplicatedBuffers;  // 0x0(0x10)
	char pad_16[16];  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetColumn
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_GetColumn
{
	struct FMatrix M;  // 0x0(0x40)
	char EMatrixColumns column;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)
	struct FVector ReturnValue;  // 0x44(0xC)

}; 
// ScriptStruct Engine.BandwidthTestItem
// Size: 0x10(Inherited: 0x0) 
struct FBandwidthTestItem
{
	struct TArray<char> Kilobyte;  // 0x0(0x10)

}; 
// Function Engine.ParticleSystem.ContainsEmitterType
// Size: 0x10(Inherited: 0x0) 
struct FContainsEmitterType
{
	UObject* TypeData;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetMathLibrary.ClassIsChildOf
// Size: 0x18(Inherited: 0x0) 
struct FClassIsChildOf
{
	UObject* TestClass;  // 0x0(0x8)
	UObject* ParentClass;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.GridBlendSample
// Size: 0x1C(Inherited: 0x0) 
struct FGridBlendSample
{
	struct FEditorElement GridElement;  // 0x0(0x18)
	float BlendWeight;  // 0x18(0x4)

}; 
// ScriptStruct Engine.BlendSample
// Size: 0x18(Inherited: 0x0) 
struct FBlendSample
{
	struct UAnimSequence* Animation;  // 0x0(0x8)
	struct FVector SampleValue;  // 0x8(0xC)
	float RateScale;  // 0x14(0x4)

}; 
// ScriptStruct Engine.AudioEQEffect
// Size: 0x40(Inherited: 0x8) 
struct FAudioEQEffect : public FAudioEffectParameters
{
	char pad_8[8];  // 0x8(0x8)
	float FrequencyCenter0;  // 0x10(0x4)
	float Gain0;  // 0x14(0x4)
	float Bandwidth0;  // 0x18(0x4)
	float FrequencyCenter1;  // 0x1C(0x4)
	float Gain1;  // 0x20(0x4)
	float Bandwidth1;  // 0x24(0x4)
	float FrequencyCenter2;  // 0x28(0x4)
	float Gain2;  // 0x2C(0x4)
	float Bandwidth2;  // 0x30(0x4)
	float FrequencyCenter3;  // 0x34(0x4)
	float Gain3;  // 0x38(0x4)
	float Bandwidth3;  // 0x3C(0x4)

}; 
// Function Engine.SkeletalMeshComponent.GetLinkedAnimLayerInstanceByClass
// Size: 0x10(Inherited: 0x0) 
struct FGetLinkedAnimLayerInstanceByClass
{
	UAnimInstance* InClass;  // 0x0(0x8)
	struct UAnimInstance* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.WindDirectionalSourceComponent.SetMaximumGustAmount
// Size: 0x4(Inherited: 0x0) 
struct FSetMaximumGustAmount
{
	float InNewMaxGust;  // 0x0(0x4)

}; 
// ScriptStruct Engine.InterpolationParameter
// Size: 0x8(Inherited: 0x0) 
struct FInterpolationParameter
{
	float InterpolationTime;  // 0x0(0x4)
	char EFilterInterpolationType InterpolationType;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// ScriptStruct Engine.BPEditorBookmarkNode
// Size: 0x38(Inherited: 0x0) 
struct FBPEditorBookmarkNode
{
	struct FGuid NodeGuid;  // 0x0(0x10)
	struct FGuid ParentGuid;  // 0x10(0x10)
	struct FText DisplayName;  // 0x20(0x18)

}; 
// ScriptStruct Engine.BPVariableDescription
// Size: 0xD0(Inherited: 0x0) 
struct FBPVariableDescription
{
	struct FName VarName;  // 0x0(0x8)
	struct FGuid VarGuid;  // 0x8(0x10)
	struct FEdGraphPinType VarType;  // 0x18(0x58)
	struct FString FriendlyName;  // 0x70(0x10)
	struct FText Category;  // 0x80(0x18)
	uint64_t PropertyFlags;  // 0x98(0x8)
	struct FName RepNotifyFunc;  // 0xA0(0x8)
	char ELifetimeCondition ReplicationCondition;  // 0xA8(0x1)
	char pad_169[7];  // 0xA9(0x7)
	struct TArray<struct FBPVariableMetaDataEntry> MetaDataArray;  // 0xB0(0x10)
	struct FString DefaultValue;  // 0xC0(0x10)

}; 
// ScriptStruct Engine.BPVariableMetaDataEntry
// Size: 0x18(Inherited: 0x0) 
struct FBPVariableMetaDataEntry
{
	struct FName DataKey;  // 0x0(0x8)
	struct FString DataValue;  // 0x8(0x10)

}; 
// Function Engine.AudioComponent.GetCookedFFTDataForAllPlayingSounds
// Size: 0x18(Inherited: 0x0) 
struct FGetCookedFFTDataForAllPlayingSounds
{
	struct TArray<struct FSoundWaveSpectralDataPerSound> OutSoundWaveSpectralData;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.NavigationSegmentLink
// Size: 0x60(Inherited: 0x30) 
struct FNavigationSegmentLink : public FNavigationLinkBase
{
	struct FVector LeftStart;  // 0x30(0xC)
	struct FVector LeftEnd;  // 0x3C(0xC)
	struct FVector RightStart;  // 0x48(0xC)
	struct FVector RightEnd;  // 0x54(0xC)

}; 
// ScriptStruct Engine.EdGraphPinType
// Size: 0x58(Inherited: 0x0) 
struct FEdGraphPinType
{
	struct FName PinCategory;  // 0x0(0x8)
	struct FName PinSubCategory;  // 0x8(0x8)
	struct TWeakObjectPtr<UObject> PinSubCategoryObject;  // 0x10(0x8)
	struct FSimpleMemberReference PinSubCategoryMemberReference;  // 0x18(0x20)
	struct FEdGraphTerminalType PinValueType;  // 0x38(0x1C)
	uint8_t  ContainerType;  // 0x54(0x1)
	char bIsArray : 1;  // 0x55(0x1)
	char bIsReference : 1;  // 0x55(0x1)
	char bIsConst : 1;  // 0x55(0x1)
	char bIsWeakPointer : 1;  // 0x55(0x1)
	char bIsUObjectWrapper : 1;  // 0x55(0x1)
	char pad_85_1 : 3;  // 0x55(0x1)
	char pad_86[3];  // 0x56(0x3)

}; 
// ScriptStruct Engine.StaticComponentMaskValue
// Size: 0x4(Inherited: 0x0) 
struct FStaticComponentMaskValue
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool R : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool G : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool B : 1;  // 0x2(0x1)
	char pad_3_1 : 7;  // 0x3(0x1)
	bool A : 1;  // 0x3(0x1)

}; 
// ScriptStruct Engine.EdGraphTerminalType
// Size: 0x1C(Inherited: 0x0) 
struct FEdGraphTerminalType
{
	struct FName TerminalCategory;  // 0x0(0x8)
	struct FName TerminalSubCategory;  // 0x8(0x8)
	struct TWeakObjectPtr<UObject> TerminalSubCategoryObject;  // 0x10(0x8)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bTerminalIsConst : 1;  // 0x18(0x1)
	char pad_25_1 : 7;  // 0x19(0x1)
	bool bTerminalIsWeakPointer : 1;  // 0x19(0x1)
	char pad_26_1 : 7;  // 0x1A(0x1)
	bool bTerminalIsUObjectWrapper : 1;  // 0x1A(0x1)
	char pad_27[1];  // 0x1B(0x1)

}; 
// ScriptStruct Engine.CompilerNativizationOptions
// Size: 0x80(Inherited: 0x0) 
struct FCompilerNativizationOptions
{
	struct FName PlatformName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ServerOnlyPlatform : 1;  // 0x8(0x1)
	char pad_9_1 : 7;  // 0x9(0x1)
	bool ClientOnlyPlatform : 1;  // 0x9(0x1)
	char pad_10_1 : 7;  // 0xA(0x1)
	bool bExcludeMonolithicHeaders : 1;  // 0xA(0x1)
	char pad_11[5];  // 0xB(0x5)
	struct TArray<struct FName> ExcludedModules;  // 0x10(0x10)
	struct TSet<struct FSoftObjectPath> ExcludedAssets;  // 0x20(0x50)
	struct TArray<struct FString> ExcludedFolderPaths;  // 0x70(0x10)

}; 
// Function Engine.KismetMathLibrary.Quat_GetAxisZ
// Size: 0x20(Inherited: 0x0) 
struct FQuat_GetAxisZ
{
	struct FQuat Q;  // 0x0(0x10)
	struct FVector ReturnValue;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// ScriptStruct Engine.SolverIterations
// Size: 0x1C(Inherited: 0x0) 
struct FSolverIterations
{
	float FixedTimeStep;  // 0x0(0x4)
	int32_t SolverIterations;  // 0x4(0x4)
	int32_t JointIterations;  // 0x8(0x4)
	int32_t CollisionIterations;  // 0xC(0x4)
	int32_t SolverPushOutIterations;  // 0x10(0x4)
	int32_t JointPushOutIterations;  // 0x14(0x4)
	int32_t CollisionPushOutIterations;  // 0x18(0x4)

}; 
// ScriptStruct Engine.BPComponentClassOverride
// Size: 0x10(Inherited: 0x0) 
struct FBPComponentClassOverride
{
	struct FName ComponentName;  // 0x0(0x8)
	UObject* ComponentClass;  // 0x8(0x8)

}; 
// Function Engine.GameplayStatics.GetActorArrayBounds
// Size: 0x30(Inherited: 0x0) 
struct FGetActorArrayBounds
{
	struct TArray<struct AActor*> Actors;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bOnlyCollidingComponents : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	struct FVector Center;  // 0x14(0xC)
	struct FVector BoxExtent;  // 0x20(0xC)
	char pad_44[4];  // 0x2C(0x4)

}; 
// ScriptStruct Engine.BlueprintCookedComponentInstancingData
// Size: 0x48(Inherited: 0x0) 
struct FBlueprintCookedComponentInstancingData
{
	struct TArray<struct FBlueprintComponentChangedPropertyInfo> ChangedPropertyList;  // 0x0(0x10)
	char pad_16[17];  // 0x10(0x11)
	char pad_33_1 : 7;  // 0x21(0x1)
	bool bHasValidCookedData : 1;  // 0x21(0x1)
	char pad_34[38];  // 0x22(0x26)

}; 
// Function Engine.SkeletalMeshComponent.GetCurrentJointAngles
// Size: 0x14(Inherited: 0x0) 
struct FGetCurrentJointAngles
{
	struct FName InBoneName;  // 0x0(0x8)
	float Swing1Angle;  // 0x8(0x4)
	float TwistAngle;  // 0xC(0x4)
	float Swing2Angle;  // 0x10(0x4)

}; 
// ScriptStruct Engine.BlueprintComponentChangedPropertyInfo
// Size: 0x18(Inherited: 0x0) 
struct FBlueprintComponentChangedPropertyInfo
{
	struct FName PropertyName;  // 0x0(0x8)
	int32_t ArrayIndex;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct UStruct* PropertyScope;  // 0x10(0x8)

}; 
// Function Engine.SkinnedMeshComponent.UnloadSkinWeightProfile
// Size: 0x8(Inherited: 0x0) 
struct FUnloadSkinWeightProfile
{
	struct FName InProfileName;  // 0x0(0x8)

}; 
// ScriptStruct Engine.EventGraphFastCallPair
// Size: 0x10(Inherited: 0x0) 
struct FEventGraphFastCallPair
{
	struct UFunction* FunctionToPatch;  // 0x0(0x8)
	int32_t EventGraphCallOffset;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// ScriptStruct Engine.AnimSlotGroup
// Size: 0x18(Inherited: 0x0) 
struct FAnimSlotGroup
{
	struct FName GroupName;  // 0x0(0x8)
	struct TArray<struct FName> SlotNames;  // 0x8(0x10)

}; 
// ScriptStruct Engine.BoneNode
// Size: 0x10(Inherited: 0x0) 
struct FBoneNode
{
	struct FName Name;  // 0x0(0x8)
	int32_t ParentIndex;  // 0x8(0x4)
	char EBoneTranslationRetargetingMode TranslationRetargetingMode;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// ScriptStruct Engine.PointerToUberGraphFrame
// Size: 0x8(Inherited: 0x0) 
struct FPointerToUberGraphFrame
{
	char pad_0[8];  // 0x0(0x8)

}; 
// Function Engine.KismetStringTableLibrary.IsRegisteredTableId
// Size: 0xC(Inherited: 0x0) 
struct FIsRegisteredTableId
{
	struct FName TableId;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.CameraShakeSourceComponent.StartCameraShake
// Size: 0x20(Inherited: 0x0) 
struct FStartCameraShake
{
	UCameraShakeBase* InCameraShake;  // 0x0(0x8)
	float Scale;  // 0x8(0x4)
	uint8_t  PlaySpace;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FRotator UserPlaySpaceRot;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.SkeletalMeshComponent.IsBodyGravityEnabled
// Size: 0xC(Inherited: 0x0) 
struct FIsBodyGravityEnabled
{
	struct FName BoneName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// ScriptStruct Engine.DebuggingInfoForSingleFunction
// Size: 0x190(Inherited: 0x0) 
struct FDebuggingInfoForSingleFunction
{
	char pad_0[400];  // 0x0(0x190)

}; 
// Function Engine.CharacterMovementComponent.GetPerchRadiusThreshold
// Size: 0x4(Inherited: 0x0) 
struct FGetPerchRadiusThreshold
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.SceneCaptureComponent.HideComponent
// Size: 0x8(Inherited: 0x0) 
struct FHideComponent
{
	struct UPrimitiveComponent* InComponent;  // 0x0(0x8)

}; 
// Function Engine.BlueprintSetLibrary.Set_Length
// Size: 0x58(Inherited: 0x0) 
struct FSet_Length
{
	struct TSet<int32_t> TargetSet;  // 0x0(0x50)
	int32_t ReturnValue;  // 0x50(0x4)
	char pad_84[4];  // 0x54(0x4)

}; 
// ScriptStruct Engine.NodeToCodeAssociation
// Size: 0x14(Inherited: 0x0) 
struct FNodeToCodeAssociation
{
	char pad_0[20];  // 0x0(0x14)

}; 
// Function Engine.KismetMathLibrary.ToSign2D
// Size: 0x10(Inherited: 0x0) 
struct FToSign2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.BlueprintMapLibrary.Map_Clear
// Size: 0x50(Inherited: 0x0) 
struct FMap_Clear
{
	struct TMap<int32_t, int32_t> TargetMap;  // 0x0(0x50)

}; 
// Function Engine.SplineComponent.SetSelectedSplineSegmentColor
// Size: 0x10(Inherited: 0x0) 
struct FSetSelectedSplineSegmentColor
{
	struct FLinearColor SegmentColor;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.Negated2D
// Size: 0x10(Inherited: 0x0) 
struct FNegated2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Add_Vector4Vector4
// Size: 0x30(Inherited: 0x0) 
struct FAdd_Vector4Vector4
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 B;  // 0x10(0x10)
	struct FVector4 ReturnValue;  // 0x20(0x10)

}; 
// ScriptStruct Engine.Bookmark2DJumpToSettings
// Size: 0x1(Inherited: 0x0) 
struct FBookmark2DJumpToSettings
{
	char pad_0[1];  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.And_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FAnd_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// ScriptStruct Engine.GeomSelection
// Size: 0xC(Inherited: 0x0) 
struct FGeomSelection
{
	int32_t Type;  // 0x0(0x4)
	int32_t Index;  // 0x4(0x4)
	int32_t SelectionIndex;  // 0x8(0x4)

}; 
// ScriptStruct Engine.BlueprintInputKeyDelegateBinding
// Size: 0x38(Inherited: 0x4) 
struct FBlueprintInputKeyDelegateBinding : public FBlueprintInputDelegateBinding
{
	char pad_4[4];  // 0x4(0x4)
	struct FInputChord InputChord;  // 0x8(0x20)
	char EInputEvent InputKeyEvent;  // 0x28(0x1)
	char pad_41[3];  // 0x29(0x3)
	struct FName FunctionNameToBind;  // 0x2C(0x8)
	char pad_52[4];  // 0x34(0x4)

}; 
// ScriptStruct Engine.StreamedAudioPlatformData
// Size: 0x20(Inherited: 0x0) 
struct FStreamedAudioPlatformData
{
	char pad_0[32];  // 0x0(0x20)

}; 
// ScriptStruct Engine.BuilderPoly
// Size: 0x20(Inherited: 0x0) 
struct FBuilderPoly
{
	struct TArray<int32_t> VertexIndices;  // 0x0(0x10)
	int32_t Direction;  // 0x10(0x4)
	struct FName ItemName;  // 0x14(0x8)
	int32_t PolyFlags;  // 0x1C(0x4)

}; 
// ScriptStruct Engine.CachedAnimTransitionData
// Size: 0x24(Inherited: 0x0) 
struct FCachedAnimTransitionData
{
	struct FName StateMachineName;  // 0x0(0x8)
	struct FName FromStateName;  // 0x8(0x8)
	struct FName ToStateName;  // 0x10(0x8)
	char pad_24[12];  // 0x18(0xC)

}; 
// ScriptStruct Engine.CachedAnimRelevancyData
// Size: 0x1C(Inherited: 0x0) 
struct FCachedAnimRelevancyData
{
	struct FName StateMachineName;  // 0x0(0x8)
	struct FName StateName;  // 0x8(0x8)
	char pad_16[12];  // 0x10(0xC)

}; 
// ScriptStruct Engine.DialogueWaveParameter
// Size: 0x20(Inherited: 0x0) 
struct FDialogueWaveParameter
{
	struct UDialogueWave* DialogueWave;  // 0x0(0x8)
	struct FDialogueContext Context;  // 0x8(0x18)

}; 
// ScriptStruct Engine.ExposureSettings
// Size: 0x8(Inherited: 0x0) 
struct FExposureSettings
{
	float FixedEV100;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bFixed : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// ScriptStruct Engine.CachedAnimAssetPlayerData
// Size: 0x18(Inherited: 0x0) 
struct FCachedAnimAssetPlayerData
{
	struct FName StateMachineName;  // 0x0(0x8)
	struct FName StateName;  // 0x8(0x8)
	char pad_16[8];  // 0x10(0x8)

}; 
// ScriptStruct Engine.CachedAnimStateData
// Size: 0x1C(Inherited: 0x0) 
struct FCachedAnimStateData
{
	struct FName StateMachineName;  // 0x0(0x8)
	struct FName StateName;  // 0x8(0x8)
	char pad_16[12];  // 0x10(0xC)

}; 
// ScriptStruct Engine.ActiveCameraShakeInfo
// Size: 0x18(Inherited: 0x0) 
struct FActiveCameraShakeInfo
{
	struct UCameraShakeBase* ShakeInstance;  // 0x0(0x8)
	struct TWeakObjectPtr<UCameraShakeSourceComponent> ShakeSource;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bIsCustomInitialized : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.CameraShakeInfo
// Size: 0x10(Inherited: 0x0) 
struct FCameraShakeInfo
{
	struct FCameraShakeDuration Duration;  // 0x0(0x8)
	float BlendIn;  // 0x8(0x4)
	float BlendOut;  // 0xC(0x4)

}; 
// ScriptStruct Engine.CameraShakeDuration
// Size: 0x8(Inherited: 0x0) 
struct FCameraShakeDuration
{
	float Duration;  // 0x0(0x4)
	uint8_t  Type;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.KismetMathLibrary.Cross_VectorVector
// Size: 0x24(Inherited: 0x0) 
struct FCross_VectorVector
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// ScriptStruct Engine.CameraShakeUpdateResult
// Size: 0x590(Inherited: 0x0) 
struct FCameraShakeUpdateResult
{
	char pad_0[1424];  // 0x0(0x590)

}; 
// ScriptStruct Engine.CameraShakeScrubParams
// Size: 0x600(Inherited: 0x0) 
struct FCameraShakeScrubParams
{
	float AbsoluteTime;  // 0x0(0x4)
	float ShakeScale;  // 0x4(0x4)
	float DynamicScale;  // 0x8(0x4)
	float BlendingWeight;  // 0xC(0x4)
	struct FMinimalViewInfo POV;  // 0x10(0x5F0)

}; 
// ScriptStruct Engine.SoundModulationDefaultSettings
// Size: 0x40(Inherited: 0x0) 
struct FSoundModulationDefaultSettings
{
	struct FSoundModulationDestinationSettings VolumeModulationDestination;  // 0x0(0x10)
	struct FSoundModulationDestinationSettings PitchModulationDestination;  // 0x10(0x10)
	struct FSoundModulationDestinationSettings HighpassModulationDestination;  // 0x20(0x10)
	struct FSoundModulationDestinationSettings LowpassModulationDestination;  // 0x30(0x10)

}; 
// ScriptStruct Engine.CameraShakeStartParams
// Size: 0x1(Inherited: 0x0) 
struct FCameraShakeStartParams
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bIsRestarting : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.DummySpacerCameraTypes
// Size: 0x1(Inherited: 0x0) 
struct FDummySpacerCameraTypes
{
	char pad_0[1];  // 0x0(0x1)

}; 
// ScriptStruct Engine.WrappedStringElement
// Size: 0x18(Inherited: 0x0) 
struct FWrappedStringElement
{
	struct FString Value;  // 0x0(0x10)
	struct FVector2D LineExtent;  // 0x10(0x8)

}; 
// ScriptStruct Engine.TextSizingParameters
// Size: 0x28(Inherited: 0x0) 
struct FTextSizingParameters
{
	float DrawX;  // 0x0(0x4)
	float DrawY;  // 0x4(0x4)
	float DrawXL;  // 0x8(0x4)
	float DrawYL;  // 0xC(0x4)
	struct FVector2D Scaling;  // 0x10(0x8)
	struct UFont* DrawFont;  // 0x18(0x8)
	struct FVector2D SpacingAdjust;  // 0x20(0x8)

}; 
// ScriptStruct Engine.FindFloorResult
// Size: 0x94(Inherited: 0x0) 
struct FFindFloorResult
{
	char bBlockingHit : 1;  // 0x0(0x1)
	char bWalkableFloor : 1;  // 0x0(0x1)
	char bLineTrace : 1;  // 0x0(0x1)
	char pad_0_1 : 5;  // 0x0(0x1)
	char pad_1[4];  // 0x1(0x4)
	float FloorDist;  // 0x4(0x4)
	float LineDist;  // 0x8(0x4)
	struct FHitResult HitResult;  // 0xC(0x88)

}; 
// ScriptStruct Engine.ChildActorComponentInstanceData
// Size: 0xE8(Inherited: 0xB8) 
struct FChildActorComponentInstanceData : public FSceneComponentInstanceData
{
	AActor* ChildActorClass;  // 0xB8(0x8)
	struct FName ChildActorName;  // 0xC0(0x8)
	struct TArray<struct FChildActorAttachedActorInfo> AttachedActors;  // 0xC8(0x10)
	char pad_216[16];  // 0xD8(0x10)

}; 
// Function Engine.ExponentialHeightFogComponent.SetFogInscatteringColor
// Size: 0x10(Inherited: 0x0) 
struct FSetFogInscatteringColor
{
	struct FLinearColor Value;  // 0x0(0x10)

}; 
// Function Engine.AnimInstance.Montage_IsPlaying
// Size: 0x10(Inherited: 0x0) 
struct FMontage_IsPlaying
{
	struct UAnimMontage* Montage;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// ScriptStruct Engine.CustomProfile
// Size: 0x18(Inherited: 0x0) 
struct FCustomProfile
{
	struct FName Name;  // 0x0(0x8)
	struct TArray<struct FResponseChannel> CustomResponses;  // 0x8(0x10)

}; 
// ScriptStruct Engine.CustomChannelSetup
// Size: 0xC(Inherited: 0x0) 
struct FCustomChannelSetup
{
	char ECollisionChannel Channel;  // 0x0(0x1)
	char ECollisionResponse DefaultResponse;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool bTraceType : 1;  // 0x2(0x1)
	char pad_3_1 : 7;  // 0x3(0x1)
	bool bStaticObject : 1;  // 0x3(0x1)
	struct FName Name;  // 0x4(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector4_IsUnit3
// Size: 0x20(Inherited: 0x0) 
struct FVector4_IsUnit3
{
	struct FVector4 A;  // 0x0(0x10)
	float SquaredLenthTolerance;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[11];  // 0x15(0xB)

}; 
// ScriptStruct Engine.CollisionResponseTemplate
// Size: 0x48(Inherited: 0x0) 
struct FCollisionResponseTemplate
{
	struct FName Name;  // 0x0(0x8)
	char ECollisionEnabled CollisionEnabled;  // 0x8(0x1)
	char pad_9[1];  // 0x9(0x1)
	char pad_10_1 : 7;  // 0xA(0x1)
	bool bCanModify : 1;  // 0xA(0x1)
	char pad_11[33];  // 0xB(0x21)
	struct FName ObjectTypeName;  // 0x2C(0x8)
	char pad_52[4];  // 0x34(0x4)
	struct TArray<struct FResponseChannel> CustomResponses;  // 0x38(0x10)

}; 
// ScriptStruct Engine.MeshUVChannelInfo
// Size: 0x14(Inherited: 0x0) 
struct FMeshUVChannelInfo
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInitialized : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bOverrideDensities : 1;  // 0x1(0x1)
	char pad_2[2];  // 0x2(0x2)
	float LocalUVDensities[4];  // 0x4(0x10)

}; 
// Function Engine.SplineComponent.AddSplineLocalPoint
// Size: 0xC(Inherited: 0x0) 
struct FAddSplineLocalPoint
{
	struct FVector position;  // 0x0(0xC)

}; 
// Function Engine.BlueprintPathsLibrary.MakePlatformFilename
// Size: 0x20(Inherited: 0x0) 
struct FMakePlatformFilename
{
	struct FString InPath;  // 0x0(0x10)
	struct FString OutPath;  // 0x10(0x10)

}; 
// ScriptStruct Engine.AutoCompleteNode
// Size: 0x28(Inherited: 0x0) 
struct FAutoCompleteNode
{
	int32_t IndexChar;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct TArray<int32_t> AutoCompleteListIndices;  // 0x8(0x10)
	char pad_24[16];  // 0x18(0x10)

}; 
// ScriptStruct Engine.AngularDriveConstraint
// Size: 0x4C(Inherited: 0x0) 
struct FAngularDriveConstraint
{
	struct FConstraintDrive TwistDrive;  // 0x0(0x10)
	struct FConstraintDrive SwingDrive;  // 0x10(0x10)
	struct FConstraintDrive SlerpDrive;  // 0x20(0x10)
	struct FRotator OrientationTarget;  // 0x30(0xC)
	struct FVector AngularVelocityTarget;  // 0x3C(0xC)
	char EAngularDriveMode AngularDriveMode;  // 0x48(0x1)
	char pad_73[3];  // 0x49(0x3)

}; 
// Function Engine.TimelineComponent.GetIgnoreTimeDilation
// Size: 0x1(Inherited: 0x0) 
struct FGetIgnoreTimeDilation
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.ConstraintDrive
// Size: 0x10(Inherited: 0x0) 
struct FConstraintDrive
{
	float Stiffness;  // 0x0(0x4)
	float Damping;  // 0x4(0x4)
	float MaxForce;  // 0x8(0x4)
	char bEnablePositionDrive : 1;  // 0xC(0x1)
	char bEnableVelocityDrive : 1;  // 0xC(0x1)
	char pad_12_1 : 6;  // 0xC(0x1)
	char pad_13[4];  // 0xD(0x4)

}; 
// Function Engine.KismetMathLibrary.Ease
// Size: 0x1C(Inherited: 0x0) 
struct FEase
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	float Alpha;  // 0x8(0x4)
	char EEasingFunc EasingFunc;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	float BlendExp;  // 0x10(0x4)
	int32_t Steps;  // 0x14(0x4)
	float ReturnValue;  // 0x18(0x4)

}; 
// ScriptStruct Engine.LinearDriveConstraint
// Size: 0x4C(Inherited: 0x0) 
struct FLinearDriveConstraint
{
	struct FVector PositionTarget;  // 0x0(0xC)
	struct FVector VelocityTarget;  // 0xC(0xC)
	struct FConstraintDrive XDrive;  // 0x18(0x10)
	struct FConstraintDrive YDrive;  // 0x28(0x10)
	struct FConstraintDrive ZDrive;  // 0x38(0x10)
	char bEnablePositionDrive : 1;  // 0x48(0x1)
	char pad_72_1 : 7;  // 0x48(0x1)
	char pad_73[4];  // 0x49(0x4)

}; 
// ScriptStruct Engine.ConstraintInstance
// Size: 0x1C8(Inherited: 0x18) 
struct FConstraintInstance : public FConstraintInstanceBase
{
	struct FName JointName;  // 0x18(0x8)
	struct FName ConstraintBone1;  // 0x20(0x8)
	struct FName ConstraintBone2;  // 0x28(0x8)
	struct FVector Pos1;  // 0x30(0xC)
	struct FVector PriAxis1;  // 0x3C(0xC)
	struct FVector SecAxis1;  // 0x48(0xC)
	struct FVector Pos2;  // 0x54(0xC)
	struct FVector PriAxis2;  // 0x60(0xC)
	struct FVector SecAxis2;  // 0x6C(0xC)
	struct FRotator AngularRotationOffset;  // 0x78(0xC)
	char bScaleLinearLimits : 1;  // 0x84(0x1)
	char pad_132_1 : 7;  // 0x84(0x1)
	char pad_133[8];  // 0x85(0x8)
	struct FConstraintProfileProperties ProfileInstance;  // 0x8C(0x114)
	char pad_416[40];  // 0x1A0(0x28)

}; 
// Function Engine.KismetMathLibrary.Quat_UnrotateVector
// Size: 0x30(Inherited: 0x0) 
struct FQuat_UnrotateVector
{
	struct FQuat Q;  // 0x0(0x10)
	struct FVector V;  // 0x10(0xC)
	struct FVector ReturnValue;  // 0x1C(0xC)
	char pad_40[8];  // 0x28(0x8)

}; 
// ScriptStruct Engine.LinearConstraint
// Size: 0x1C(Inherited: 0x14) 
struct FLinearConstraint : public FConstraintBaseParams
{
	float Limit;  // 0x14(0x4)
	char ELinearConstraintMotion XMotion;  // 0x18(0x1)
	char ELinearConstraintMotion YMotion;  // 0x19(0x1)
	char ELinearConstraintMotion ZMotion;  // 0x1A(0x1)
	char pad_27[1];  // 0x1B(0x1)

}; 
// ScriptStruct Engine.VectorSpringState
// Size: 0x18(Inherited: 0x0) 
struct FVectorSpringState
{
	char pad_0[24];  // 0x0(0x18)

}; 
// Function Engine.BlueprintPathsLibrary.IsRestrictedPath
// Size: 0x18(Inherited: 0x0) 
struct FIsRestrictedPath
{
	struct FString InPath;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.ClientReceiveData
// Size: 0x40(Inherited: 0x0) 
struct FClientReceiveData
{
	struct APlayerController* LocalPC;  // 0x0(0x8)
	struct FName MessageType;  // 0x8(0x8)
	int32_t MessageIndex;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct FString MessageString;  // 0x18(0x10)
	struct APlayerState* RelatedPlayerState_2;  // 0x28(0x8)
	struct APlayerState* RelatedPlayerState_3;  // 0x30(0x8)
	struct UObject* OptionalObject;  // 0x38(0x8)

}; 
// Function Engine.KismetMathLibrary.GetMonth
// Size: 0x10(Inherited: 0x0) 
struct FGetMonth
{
	struct FDateTime A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.ExponentialHeightFogComponent.SetFogDensity
// Size: 0x4(Inherited: 0x0) 
struct FSetFogDensity
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.ExponentialHeightFogComponent.SetFogCutoffDistance
// Size: 0x4(Inherited: 0x0) 
struct FSetFogCutoffDistance
{
	float Value;  // 0x0(0x4)

}; 
// ScriptStruct Engine.CullDistanceSizePair
// Size: 0x8(Inherited: 0x0) 
struct FCullDistanceSizePair
{
	float Size;  // 0x0(0x4)
	float CullDistance;  // 0x4(0x4)

}; 
// Function Engine.KismetStringLibrary.Conv_StringToFloat
// Size: 0x18(Inherited: 0x0) 
struct FConv_StringToFloat
{
	struct FString inString;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// ScriptStruct Engine.RuntimeCurveLinearColor
// Size: 0x208(Inherited: 0x0) 
struct FRuntimeCurveLinearColor
{
	struct FRichCurve ColorCurves[4];  // 0x0(0x200)
	struct UCurveLinearColor* ExternalCurve;  // 0x200(0x8)

}; 
// ScriptStruct Engine.AssetEditorOrbitCameraPosition
// Size: 0x28(Inherited: 0x0) 
struct FAssetEditorOrbitCameraPosition
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bIsSet : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FVector CamOrbitPoint;  // 0x4(0xC)
	struct FVector CamOrbitZoom;  // 0x10(0xC)
	struct FRotator CamOrbitRotation;  // 0x1C(0xC)

}; 
// Function Engine.PawnMovementComponent.K2_GetInputVector
// Size: 0xC(Inherited: 0x0) 
struct FK2_GetInputVector
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// ScriptStruct Engine.CurveAtlasColorAdjustments
// Size: 0x24(Inherited: 0x0) 
struct FCurveAtlasColorAdjustments
{
	char bChromaKeyTexture : 1;  // 0x0(0x1)
	char pad_0_1 : 7;  // 0x0(0x1)
	char pad_1[4];  // 0x1(0x4)
	float AdjustBrightness;  // 0x4(0x4)
	float AdjustBrightnessCurve;  // 0x8(0x4)
	float AdjustVibrance;  // 0xC(0x4)
	float AdjustSaturation;  // 0x10(0x4)
	float AdjustRGBCurve;  // 0x14(0x4)
	float AdjustHue;  // 0x18(0x4)
	float AdjustMinAlpha;  // 0x1C(0x4)
	float AdjustMaxAlpha;  // 0x20(0x4)

}; 
// Function Engine.AudioComponent.IsVirtualized
// Size: 0x1(Inherited: 0x0) 
struct FIsVirtualized
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.GameModeBase.K2_OnLogout
// Size: 0x8(Inherited: 0x0) 
struct FK2_OnLogout
{
	struct AController* ExitingController;  // 0x0(0x8)

}; 
// ScriptStruct Engine.NamedCurveValue
// Size: 0xC(Inherited: 0x0) 
struct FNamedCurveValue
{
	struct FName Name;  // 0x0(0x8)
	float Value;  // 0x8(0x4)

}; 
// ScriptStruct Engine.CurveTableRowHandle
// Size: 0x10(Inherited: 0x0) 
struct FCurveTableRowHandle
{
	struct UCurveTable* CurveTable;  // 0x0(0x8)
	struct FName RowName;  // 0x8(0x8)

}; 
// Function Engine.ParticleSystemComponent.GetBeamSourceTangent
// Size: 0x18(Inherited: 0x0) 
struct FGetBeamSourceTangent
{
	int32_t EmitterIndex;  // 0x0(0x4)
	int32_t SourceIndex;  // 0x4(0x4)
	struct FVector OutTangentPoint;  // 0x8(0xC)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// ScriptStruct Engine.BakedCustomAttributePerBoneData
// Size: 0x38(Inherited: 0x0) 
struct FBakedCustomAttributePerBoneData
{
	int32_t BoneTreeIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct TArray<struct FBakedStringCustomAttribute> StringAttributes;  // 0x8(0x10)
	struct TArray<struct FBakedIntegerCustomAttribute> IntAttributes;  // 0x18(0x10)
	struct TArray<struct FBakedFloatCustomAttribute> FloatAttributes;  // 0x28(0x10)

}; 
// Function Engine.InputComponent.GetControllerKeyTimeDown
// Size: 0x20(Inherited: 0x0) 
struct FGetControllerKeyTimeDown
{
	struct FKey Key;  // 0x0(0x18)
	float ReturnValue;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// ScriptStruct Engine.BakedIntegerCustomAttribute
// Size: 0x88(Inherited: 0x0) 
struct FBakedIntegerCustomAttribute
{
	struct FName AttributeName;  // 0x0(0x8)
	struct FIntegralCurve IntCurve;  // 0x8(0x80)

}; 
// ScriptStruct Engine.IntegralCurve
// Size: 0x80(Inherited: 0x68) 
struct FIntegralCurve : public FIndexedCurve
{
	struct TArray<struct FIntegralKey> Keys;  // 0x68(0x10)
	int32_t DefaultValue;  // 0x78(0x4)
	char pad_124_1 : 7;  // 0x7C(0x1)
	bool bUseDefaultValueBeforeFirstKey : 1;  // 0x7C(0x1)
	char pad_125[3];  // 0x7D(0x3)

}; 
// ScriptStruct Engine.BakedStringCustomAttribute
// Size: 0x90(Inherited: 0x0) 
struct FBakedStringCustomAttribute
{
	struct FName AttributeName;  // 0x0(0x8)
	struct FStringCurve StringCurve;  // 0x8(0x88)

}; 
// ScriptStruct Engine.StringCurve
// Size: 0x88(Inherited: 0x68) 
struct FStringCurve : public FIndexedCurve
{
	struct FString DefaultValue;  // 0x68(0x10)
	struct TArray<struct FStringCurveKey> Keys;  // 0x78(0x10)

}; 
// ScriptStruct Engine.TickPrerequisite
// Size: 0x10(Inherited: 0x0) 
struct FTickPrerequisite
{
	char pad_0[16];  // 0x0(0x10)

}; 
// ScriptStruct Engine.StringCurveKey
// Size: 0x18(Inherited: 0x0) 
struct FStringCurveKey
{
	float Time;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FString Value;  // 0x8(0x10)

}; 
// ScriptStruct Engine.StaticMeshVertexColorLODData
// Size: 0x28(Inherited: 0x0) 
struct FStaticMeshVertexColorLODData
{
	struct TArray<struct FPaintedVertex> PaintedVertices;  // 0x0(0x10)
	struct TArray<struct FColor> VertexBufferColors;  // 0x10(0x10)
	uint32_t LODIndex;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.AudioComponent.SetAudioBusSendPostEffect
// Size: 0x10(Inherited: 0x0) 
struct FSetAudioBusSendPostEffect
{
	struct UAudioBus* AudioBus;  // 0x0(0x8)
	float AudioBusSendLevel;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// ScriptStruct Engine.CustomAttributeSetting
// Size: 0x20(Inherited: 0x0) 
struct FCustomAttributeSetting
{
	struct FString Name;  // 0x0(0x10)
	struct FString Meaning;  // 0x10(0x10)

}; 
// Function Engine.PlayerCameraManager.StopCameraShake
// Size: 0x10(Inherited: 0x0) 
struct FStopCameraShake
{
	struct UCameraShakeBase* ShakeInstance;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bImmediately : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// ScriptStruct Engine.SwarmDebugOptions
// Size: 0x4(Inherited: 0x0) 
struct FSwarmDebugOptions
{
	char bDistributionEnabled : 1;  // 0x0(0x1)
	char bForceContentExport : 1;  // 0x0(0x1)
	char bInitialized : 1;  // 0x0(0x1)
	char pad_0_1 : 5;  // 0x0(0x1)
	char pad_1[4];  // 0x1(0x4)

}; 
// ScriptStruct Engine.DataDrivenConsoleVariable
// Size: 0x50(Inherited: 0x0) 
struct FDataDrivenConsoleVariable
{
	uint8_t  Type;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct FString Name;  // 0x8(0x10)
	struct FString ToolTip;  // 0x18(0x10)
	float DefaultValueFloat;  // 0x28(0x4)
	int32_t DefaultValueInt;  // 0x2C(0x4)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool DefaultValueBool : 1;  // 0x30(0x1)
	char pad_49[31];  // 0x31(0x1F)

}; 
// ScriptStruct Engine.SkinWeightProfileInfo
// Size: 0x10(Inherited: 0x0) 
struct FSkinWeightProfileInfo
{
	struct FName Name;  // 0x0(0x8)
	struct FPerPlatformBool DefaultProfile;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	struct FPerPlatformInt DefaultProfileFromLODIndex;  // 0xC(0x4)

}; 
// ScriptStruct Engine.DataTableCategoryHandle
// Size: 0x18(Inherited: 0x0) 
struct FDataTableCategoryHandle
{
	struct UDataTable* DataTable;  // 0x0(0x8)
	struct FName ColumnName;  // 0x8(0x8)
	struct FName RowContents;  // 0x10(0x8)

}; 
// ScriptStruct Engine.DataTableRowHandle
// Size: 0x10(Inherited: 0x0) 
struct FDataTableRowHandle
{
	struct UDataTable* DataTable;  // 0x0(0x8)
	struct FName RowName;  // 0x8(0x8)

}; 
// Function Engine.KismetStringLibrary.Concat_StrStr
// Size: 0x30(Inherited: 0x0) 
struct FConcat_StrStr
{
	struct FString A;  // 0x0(0x10)
	struct FString B;  // 0x10(0x10)
	struct FString ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.KismetMathLibrary.NegateRotator
// Size: 0x18(Inherited: 0x0) 
struct FNegateRotator
{
	struct FRotator A;  // 0x0(0xC)
	struct FRotator ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetMathLibrary.HSVToRGB_Vector
// Size: 0x20(Inherited: 0x0) 
struct FHSVToRGB_Vector
{
	struct FLinearColor HSV;  // 0x0(0x10)
	struct FLinearColor RGB;  // 0x10(0x10)

}; 
// Function Engine.GameUserSettings.GetCurrentHDRDisplayNits
// Size: 0x4(Inherited: 0x0) 
struct FGetCurrentHDRDisplayNits
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.DebugCameraControllerSettingsViewModeIndex
// Size: 0x10(Inherited: 0x0) 
struct FDebugCameraControllerSettingsViewModeIndex
{
	char pad_0[8];  // 0x0(0x8)
	char EViewModeIndex ViewModeIndex;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetMathLibrary.FindNearestPointsOnLineSegments
// Size: 0x48(Inherited: 0x0) 
struct FFindNearestPointsOnLineSegments
{
	struct FVector Segment1Start;  // 0x0(0xC)
	struct FVector Segment1End;  // 0xC(0xC)
	struct FVector Segment2Start;  // 0x18(0xC)
	struct FVector Segment2End;  // 0x24(0xC)
	struct FVector Segment1Point;  // 0x30(0xC)
	struct FVector Segment2Point;  // 0x3C(0xC)

}; 
// ScriptStruct Engine.DialogueContext
// Size: 0x18(Inherited: 0x0) 
struct FDialogueContext
{
	struct UDialogueVoice* Speaker;  // 0x0(0x8)
	struct TArray<struct UDialogueVoice*> Targets;  // 0x8(0x10)

}; 
// Function Engine.SkeletalMeshComponent.SetAllowedAnimCurvesEvaluation
// Size: 0x18(Inherited: 0x0) 
struct FSetAllowedAnimCurvesEvaluation
{
	struct TArray<struct FName> List;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bAllow : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.DialogueContextMapping
// Size: 0x38(Inherited: 0x0) 
struct FDialogueContextMapping
{
	struct FDialogueContext Context;  // 0x0(0x18)
	struct USoundWave* SoundWave;  // 0x18(0x8)
	struct FString LocalizationKeyFormat;  // 0x20(0x10)
	struct UDialogueSoundWaveProxy* Proxy;  // 0x30(0x8)

}; 
// Function Engine.GameUserSettings.SetShadingQuality
// Size: 0x4(Inherited: 0x0) 
struct FSetShadingQuality
{
	int32_t Value;  // 0x0(0x4)

}; 
// ScriptStruct Engine.RawDistributionFloat
// Size: 0x30(Inherited: 0x20) 
struct FRawDistributionFloat : public FRawDistribution
{
	float MinValue;  // 0x20(0x4)
	float MaxValue;  // 0x24(0x4)
	struct UDistributionFloat* Distribution;  // 0x28(0x8)

}; 
// ScriptStruct Engine.PSCPoolElem
// Size: 0x10(Inherited: 0x0) 
struct FPSCPoolElem
{
	struct UParticleSystemComponent* PSC;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)

}; 
// ScriptStruct Engine.GraphReference
// Size: 0x20(Inherited: 0x0) 
struct FGraphReference
{
	struct UEdGraph* MacroGraph;  // 0x0(0x8)
	struct UBlueprint* GraphBlueprint;  // 0x8(0x8)
	struct FGuid GraphGuid;  // 0x10(0x10)

}; 
// ScriptStruct Engine.VoiceSettings
// Size: 0x18(Inherited: 0x0) 
struct FVoiceSettings
{
	struct USceneComponent* ComponentToAttachTo;  // 0x0(0x8)
	struct USoundAttenuation* AttenuationSettings;  // 0x8(0x8)
	struct USoundEffectSourcePresetChain* SourceEffectChain;  // 0x10(0x8)

}; 
// Function Engine.SkeletalMeshComponent.ResetAnimInstanceDynamics
// Size: 0x1(Inherited: 0x0) 
struct FResetAnimInstanceDynamics
{
	uint8_t  InTeleportType;  // 0x0(0x1)

}; 
// ScriptStruct Engine.SmartNameContainer
// Size: 0x50(Inherited: 0x0) 
struct FSmartNameContainer
{
	char pad_0[80];  // 0x0(0x50)

}; 
// ScriptStruct Engine.EdGraphSchemaAction
// Size: 0x100(Inherited: 0x0) 
struct FEdGraphSchemaAction
{
	char pad_0[8];  // 0x0(0x8)
	struct FText MenuDescription;  // 0x8(0x18)
	struct FText TooltipDescription;  // 0x20(0x18)
	struct FText Category;  // 0x38(0x18)
	struct FText Keywords;  // 0x50(0x18)
	int32_t Grouping;  // 0x68(0x4)
	int32_t SectionID;  // 0x6C(0x4)
	struct TArray<struct FString> MenuDescriptionArray;  // 0x70(0x10)
	struct TArray<struct FString> FullSearchTitlesArray;  // 0x80(0x10)
	struct TArray<struct FString> FullSearchKeywordsArray;  // 0x90(0x10)
	struct TArray<struct FString> FullSearchCategoryArray;  // 0xA0(0x10)
	struct TArray<struct FString> LocalizedMenuDescriptionArray;  // 0xB0(0x10)
	struct TArray<struct FString> LocalizedFullSearchTitlesArray;  // 0xC0(0x10)
	struct TArray<struct FString> LocalizedFullSearchKeywordsArray;  // 0xD0(0x10)
	struct TArray<struct FString> LocalizedFullSearchCategoryArray;  // 0xE0(0x10)
	struct FString SearchText;  // 0xF0(0x10)

}; 
// Function Engine.KismetTextLibrary.EqualEqual_IgnoreCase_TextText
// Size: 0x38(Inherited: 0x0) 
struct FEqualEqual_IgnoreCase_TextText
{
	struct FText A;  // 0x0(0x18)
	struct FText B;  // 0x18(0x18)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool ReturnValue : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 
// ScriptStruct Engine.MeshBuildSettings
// Size: 0x30(Inherited: 0x0) 
struct FMeshBuildSettings
{
	char bUseMikkTSpace : 1;  // 0x0(0x1)
	char bRecomputeNormals : 1;  // 0x0(0x1)
	char bRecomputeTangents : 1;  // 0x0(0x1)
	char bComputeWeightedNormals : 1;  // 0x0(0x1)
	char bRemoveDegenerates : 1;  // 0x0(0x1)
	char bBuildAdjacencyBuffer : 1;  // 0x0(0x1)
	char bBuildReversedIndexBuffer : 1;  // 0x0(0x1)
	char bUseHighPrecisionTangentBasis : 1;  // 0x0(0x1)
	char bUseFullPrecisionUVs : 1;  // 0x1(0x1)
	char bGenerateLightmapUVs : 1;  // 0x1(0x1)
	char bGenerateDistanceFieldAsIfTwoSided : 1;  // 0x1(0x1)
	char bSupportFaceRemap : 1;  // 0x1(0x1)
	char pad_1_1 : 4;  // 0x1(0x1)
	char pad_2[3];  // 0x2(0x3)
	int32_t MinLightmapResolution;  // 0x4(0x4)
	int32_t SrcLightmapIndex;  // 0x8(0x4)
	int32_t DstLightmapIndex;  // 0xC(0x4)
	float BuildScale;  // 0x10(0x4)
	struct FVector BuildScale3D;  // 0x14(0xC)
	float DistanceFieldResolutionScale;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)
	struct UStaticMesh* DistanceFieldReplacementMesh;  // 0x28(0x8)

}; 
// ScriptStruct Engine.EdGraphSchemaAction_NewNode
// Size: 0x108(Inherited: 0x100) 
struct FEdGraphSchemaAction_NewNode : public FEdGraphSchemaAction
{
	struct UEdGraphNode* NodeTemplate;  // 0x100(0x8)

}; 
// ScriptStruct Engine.PluginRedirect
// Size: 0x20(Inherited: 0x0) 
struct FPluginRedirect
{
	struct FString OldPluginName;  // 0x0(0x10)
	struct FString NewPluginName;  // 0x10(0x10)

}; 
// ScriptStruct Engine.Redirector
// Size: 0x10(Inherited: 0x0) 
struct FRedirector
{
	struct FName OldName;  // 0x0(0x8)
	struct FName NewName;  // 0x8(0x8)

}; 
// ScriptStruct Engine.StructRedirect
// Size: 0x10(Inherited: 0x0) 
struct FStructRedirect
{
	struct FName OldStructName;  // 0x0(0x8)
	struct FName NewStructName;  // 0x8(0x8)

}; 
// Function Engine.GameUserSettings.GetFoliageQuality
// Size: 0x4(Inherited: 0x0) 
struct FGetFoliageQuality
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.ArrowComponent.SetArrowColor
// Size: 0x10(Inherited: 0x0) 
struct FSetArrowColor
{
	struct FLinearColor NewColor;  // 0x0(0x10)

}; 
// ScriptStruct Engine.ClassRedirect
// Size: 0x3C(Inherited: 0x0) 
struct FClassRedirect
{
	struct FName ObjectName;  // 0x0(0x8)
	struct FName OldClassName;  // 0x8(0x8)
	struct FName NewClassName;  // 0x10(0x8)
	struct FName OldSubobjName;  // 0x18(0x8)
	struct FName NewSubobjName;  // 0x20(0x8)
	struct FName NewClassClass;  // 0x28(0x8)
	struct FName NewClassPackage;  // 0x30(0x8)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool InstanceOnly : 1;  // 0x38(0x1)
	char pad_57[3];  // 0x39(0x3)

}; 
// Function Engine.SoundSubmix.SetSubmixOutputVolume
// Size: 0x10(Inherited: 0x0) 
struct FSetSubmixOutputVolume
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float InOutputVolume;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// ScriptStruct Engine.GameNameRedirect
// Size: 0x10(Inherited: 0x0) 
struct FGameNameRedirect
{
	struct FName OldGameName;  // 0x0(0x8)
	struct FName NewGameName;  // 0x8(0x8)

}; 
// ScriptStruct Engine.DropNoteInfo
// Size: 0x28(Inherited: 0x0) 
struct FDropNoteInfo
{
	struct FVector Location;  // 0x0(0xC)
	struct FRotator Rotation;  // 0xC(0xC)
	struct FString Comment;  // 0x18(0x10)

}; 
// Function Engine.AnimSingleNodeInstance.SetPreviewCurveOverride
// Size: 0x10(Inherited: 0x0) 
struct FSetPreviewCurveOverride
{
	struct FName PoseName;  // 0x0(0x8)
	float Value;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bRemoveIfZero : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// ScriptStruct Engine.StatColorMapEntry
// Size: 0x8(Inherited: 0x0) 
struct FStatColorMapEntry
{
	float In;  // 0x0(0x4)
	struct FColor Out;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.MakeVector2D
// Size: 0x10(Inherited: 0x0) 
struct FMakeVector2D
{
	float X;  // 0x0(0x4)
	float Y;  // 0x4(0x4)
	struct FVector2D ReturnValue;  // 0x8(0x8)

}; 
// ScriptStruct Engine.WorldContext
// Size: 0x288(Inherited: 0x0) 
struct FWorldContext
{
	char pad_0[208];  // 0x0(0xD0)
	struct FURL LastURL;  // 0xD0(0x68)
	struct FURL LastRemoteURL;  // 0x138(0x68)
	struct UPendingNetGame* PendingNetGame;  // 0x1A0(0x8)
	struct TArray<struct FFullyLoadedPackagesInfo> PackagesToFullyLoad;  // 0x1A8(0x10)
	char pad_440[16];  // 0x1B8(0x10)
	struct TArray<struct ULevel*> LoadedLevelsForPendingMapChange;  // 0x1C8(0x10)
	char pad_472[24];  // 0x1D8(0x18)
	struct TArray<struct UObjectReferencer*> ObjectReferencers;  // 0x1F0(0x10)
	struct TArray<struct FLevelStreamingStatus> PendingLevelStreamingStatusUpdates;  // 0x200(0x10)
	struct UGameViewportClient* GameViewport;  // 0x210(0x8)
	struct UGameInstance* OwningGameInstance;  // 0x218(0x8)
	struct TArray<struct FNamedNetDriver> ActiveNetDrivers;  // 0x220(0x10)
	char pad_560[88];  // 0x230(0x58)

}; 
// ScriptStruct Engine.NamedNetDriver
// Size: 0x10(Inherited: 0x0) 
struct FNamedNetDriver
{
	struct UNetDriver* NetDriver;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector_AddBounded
// Size: 0x1C(Inherited: 0x0) 
struct FVector_AddBounded
{
	struct FVector A;  // 0x0(0xC)
	struct FVector InAddVect;  // 0xC(0xC)
	float InRadius;  // 0x18(0x4)

}; 
// Function Engine.KismetMathLibrary.NotEqual_DateTimeDateTime
// Size: 0x18(Inherited: 0x0) 
struct FNotEqual_DateTimeDateTime
{
	struct FDateTime A;  // 0x0(0x8)
	struct FDateTime B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.FullyLoadedPackagesInfo
// Size: 0x38(Inherited: 0x0) 
struct FFullyLoadedPackagesInfo
{
	char EFullyLoadPackageType FullyLoadType;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct FString Tag;  // 0x8(0x10)
	struct TArray<struct FName> PackagesToLoad;  // 0x18(0x10)
	struct TArray<struct UObject*> LoadedObjects;  // 0x28(0x10)

}; 
// ScriptStruct Engine.NetDriverDefinition
// Size: 0x18(Inherited: 0x0) 
struct FNetDriverDefinition
{
	struct FName DefName;  // 0x0(0x8)
	struct FName DriverClassName;  // 0x8(0x8)
	struct FName DriverClassNameFallback;  // 0x10(0x8)

}; 
// ScriptStruct Engine.SubTrackGroup
// Size: 0x28(Inherited: 0x0) 
struct FSubTrackGroup
{
	struct FString GroupName;  // 0x0(0x10)
	struct TArray<int32_t> TrackIndices;  // 0x10(0x10)
	char bIsCollapsed : 1;  // 0x20(0x1)
	char bIsSelected : 1;  // 0x20(0x1)
	char pad_32_1 : 6;  // 0x20(0x1)
	char pad_33[8];  // 0x21(0x8)

}; 
// Function Engine.SkeletalMeshComponent.UnbindClothFromMasterPoseComponent
// Size: 0x1(Inherited: 0x0) 
struct FUnbindClothFromMasterPoseComponent
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bRestoreSimulationSpace : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.ConstrainComponentPropName
// Size: 0x8(Inherited: 0x0) 
struct FConstrainComponentPropName
{
	struct FName ComponentName;  // 0x0(0x8)

}; 
// ScriptStruct Engine.SkeletalMeshBuildSettings
// Size: 0x14(Inherited: 0x0) 
struct FSkeletalMeshBuildSettings
{
	char bRecomputeNormals : 1;  // 0x0(0x1)
	char bRecomputeTangents : 1;  // 0x0(0x1)
	char bUseMikkTSpace : 1;  // 0x0(0x1)
	char bComputeWeightedNormals : 1;  // 0x0(0x1)
	char bRemoveDegenerates : 1;  // 0x0(0x1)
	char bUseHighPrecisionTangentBasis : 1;  // 0x0(0x1)
	char bUseFullPrecisionUVs : 1;  // 0x0(0x1)
	char bBuildAdjacencyBuffer : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float ThresholdPosition;  // 0x4(0x4)
	float ThresholdTangentNormal;  // 0x8(0x4)
	float ThresholdUV;  // 0xC(0x4)
	float MorphThresholdPosition;  // 0x10(0x4)

}; 
// ScriptStruct Engine.CompressedRichCurve
// Size: 0x18(Inherited: 0x0) 
struct FCompressedRichCurve
{
	char pad_0[24];  // 0x0(0x18)

}; 
// ScriptStruct Engine.AnimSlotDesc
// Size: 0xC(Inherited: 0x0) 
struct FAnimSlotDesc
{
	struct FName SlotName;  // 0x0(0x8)
	int32_t NumChannels;  // 0x8(0x4)

}; 
// ScriptStruct Engine.AnimSlotInfo
// Size: 0x18(Inherited: 0x0) 
struct FAnimSlotInfo
{
	struct FName SlotName;  // 0x0(0x8)
	struct TArray<float> ChannelWeights;  // 0x8(0x10)

}; 
// ScriptStruct Engine.MTDResult
// Size: 0x10(Inherited: 0x0) 
struct FMTDResult
{
	struct FVector Direction;  // 0x0(0xC)
	float Distance;  // 0xC(0x4)

}; 
// Function Engine.HealthSnapshotBlueprintLibrary.LogPerformanceSnapshot
// Size: 0x18(Inherited: 0x0) 
struct FLogPerformanceSnapshot
{
	struct FString SnapshotTitle;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bResetStats : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.ParticleSystemComponent.SetTemplate
// Size: 0x8(Inherited: 0x0) 
struct FSetTemplate
{
	struct UParticleSystem* NewTemplate;  // 0x0(0x8)

}; 
// ScriptStruct Engine.OverlapResult
// Size: 0x18(Inherited: 0x0) 
struct FOverlapResult
{
	struct TWeakObjectPtr<AActor> Actor;  // 0x0(0x8)
	struct TWeakObjectPtr<UPrimitiveComponent> Component;  // 0x8(0x8)
	char pad_16[4];  // 0x10(0x4)
	char bBlockingHit : 1;  // 0x14(0x1)
	char pad_20_1 : 7;  // 0x14(0x1)
	char pad_21[4];  // 0x15(0x4)

}; 
// Function Engine.KismetMathLibrary.FromHours
// Size: 0x10(Inherited: 0x0) 
struct FFromHours
{
	float Hours;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FTimespan ReturnValue;  // 0x8(0x8)

}; 
// ScriptStruct Engine.PrimitiveMaterialRef
// Size: 0x18(Inherited: 0x0) 
struct FPrimitiveMaterialRef
{
	struct UPrimitiveComponent* Primitive;  // 0x0(0x8)
	struct UDecalComponent* Decal;  // 0x8(0x8)
	int32_t ElementIndex;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// ScriptStruct Engine.LightmassDebugOptions
// Size: 0x10(Inherited: 0x0) 
struct FLightmassDebugOptions
{
	char bDebugMode : 1;  // 0x0(0x1)
	char bStatsEnabled : 1;  // 0x0(0x1)
	char bGatherBSPSurfacesAcrossComponents : 1;  // 0x0(0x1)
	char pad_0_1 : 5;  // 0x0(0x1)
	char pad_1[4];  // 0x1(0x4)
	float CoplanarTolerance;  // 0x4(0x4)
	char bUseImmediateImport : 1;  // 0x8(0x1)
	char bImmediateProcessMappings : 1;  // 0x8(0x1)
	char bSortMappings : 1;  // 0x8(0x1)
	char bDumpBinaryFiles : 1;  // 0x8(0x1)
	char bDebugMaterials : 1;  // 0x8(0x1)
	char bPadMappings : 1;  // 0x8(0x1)
	char bDebugPaddings : 1;  // 0x8(0x1)
	char bOnlyCalcDebugTexelMappings : 1;  // 0x8(0x1)
	char bUseRandomColors : 1;  // 0x9(0x1)
	char bColorBordersGreen : 1;  // 0x9(0x1)
	char bColorByExecutionTime : 1;  // 0x9(0x1)
	char pad_9_1 : 5;  // 0x9(0x1)
	char pad_10[3];  // 0xA(0x3)
	float ExecutionTimeDivisor;  // 0xC(0x4)

}; 
// ScriptStruct Engine.LightmassPrimitiveSettings
// Size: 0x18(Inherited: 0x0) 
struct FLightmassPrimitiveSettings
{
	char bUseTwoSidedLighting : 1;  // 0x0(0x1)
	char bShadowIndirectOnly : 1;  // 0x0(0x1)
	char bUseEmissiveForStaticLighting : 1;  // 0x0(0x1)
	char bUseVertexNormalForHemisphereGather : 1;  // 0x0(0x1)
	char pad_0_1 : 4;  // 0x0(0x1)
	char pad_1[4];  // 0x1(0x4)
	float EmissiveLightFalloffExponent;  // 0x4(0x4)
	float EmissiveLightExplicitInfluenceRadius;  // 0x8(0x4)
	float EmissiveBoost;  // 0xC(0x4)
	float DiffuseBoost;  // 0x10(0x4)
	float FullyOccludedSamplesFraction;  // 0x14(0x4)

}; 
// ScriptStruct Engine.LightmassPointLightSettings
// Size: 0xC(Inherited: 0xC) 
struct FLightmassPointLightSettings : public FLightmassLightSettings
{

}; 
// Function Engine.AnimInstance.SetReceiveNotifiesFromLinkedInstances
// Size: 0x1(Inherited: 0x0) 
struct FSetReceiveNotifiesFromLinkedInstances
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bSet : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.BasedPosition
// Size: 0x38(Inherited: 0x0) 
struct FBasedPosition
{
	struct AActor* Base;  // 0x0(0x8)
	struct FVector position;  // 0x8(0xC)
	struct FVector CachedBaseLocation;  // 0x14(0xC)
	struct FRotator CachedBaseRotation;  // 0x20(0xC)
	struct FVector CachedTransPosition;  // 0x2C(0xC)

}; 
// ScriptStruct Engine.FractureEffect
// Size: 0x10(Inherited: 0x0) 
struct FFractureEffect
{
	struct UParticleSystem* ParticleSystem;  // 0x0(0x8)
	struct USoundBase* Sound;  // 0x8(0x8)

}; 
// ScriptStruct Engine.CollisionImpactData
// Size: 0x30(Inherited: 0x0) 
struct FCollisionImpactData
{
	struct TArray<struct FRigidBodyContactInfo> ContactInfos;  // 0x0(0x10)
	struct FVector TotalNormalImpulse;  // 0x10(0xC)
	struct FVector TotalFrictionImpulse;  // 0x1C(0xC)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bIsVelocityDeltaUnderThreshold : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// ScriptStruct Engine.RigidBodyContactInfo
// Size: 0x30(Inherited: 0x0) 
struct FRigidBodyContactInfo
{
	struct FVector ContactPosition;  // 0x0(0xC)
	struct FVector ContactNormal;  // 0xC(0xC)
	float ContactPenetration;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)
	struct UPhysicalMaterial* PhysMaterial[2];  // 0x20(0x10)

}; 
// ScriptStruct Engine.RigidBodyErrorCorrection
// Size: 0x34(Inherited: 0x0) 
struct FRigidBodyErrorCorrection
{
	float PingExtrapolation;  // 0x0(0x4)
	float PingLimit;  // 0x4(0x4)
	float ErrorPerLinearDifference;  // 0x8(0x4)
	float ErrorPerAngularDifference;  // 0xC(0x4)
	float MaxRestoredStateError;  // 0x10(0x4)
	float MaxLinearHardSnapDistance;  // 0x14(0x4)
	float PositionLerp;  // 0x18(0x4)
	float AngleLerp;  // 0x1C(0x4)
	float LinearVelocityCoefficient;  // 0x20(0x4)
	float AngularVelocityCoefficient;  // 0x24(0x4)
	float ErrorAccumulationSeconds;  // 0x28(0x4)
	float ErrorAccumulationDistanceSq;  // 0x2C(0x4)
	float ErrorAccumulationSimilarity;  // 0x30(0x4)

}; 
// ScriptStruct Engine.NetworkEmulationProfileDescription
// Size: 0x20(Inherited: 0x0) 
struct FNetworkEmulationProfileDescription
{
	struct FString ProfileName;  // 0x0(0x10)
	struct FString ToolTip;  // 0x10(0x10)

}; 
// Function Engine.SkeletalMesh.GetSocketByIndex
// Size: 0x10(Inherited: 0x0) 
struct FGetSocketByIndex
{
	int32_t Index;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct USkeletalMeshSocket* ReturnValue;  // 0x8(0x8)

}; 
// ScriptStruct Engine.RuntimeVirtualTextureParameterValue
// Size: 0x28(Inherited: 0x0) 
struct FRuntimeVirtualTextureParameterValue
{
	struct FMaterialParameterInfo ParameterInfo;  // 0x0(0x10)
	struct URuntimeVirtualTexture* ParameterValue;  // 0x10(0x8)
	struct FGuid ExpressionGUID;  // 0x18(0x10)

}; 
// ScriptStruct Engine.ForceFeedbackAttenuationSettings
// Size: 0xB0(Inherited: 0xB0) 
struct FForceFeedbackAttenuationSettings : public FBaseAttenuationSettings
{

}; 
// ScriptStruct Engine.ForceFeedbackChannelDetails
// Size: 0x90(Inherited: 0x0) 
struct FForceFeedbackChannelDetails
{
	char bAffectsLeftLarge : 1;  // 0x0(0x1)
	char bAffectsLeftSmall : 1;  // 0x0(0x1)
	char bAffectsRightLarge : 1;  // 0x0(0x1)
	char bAffectsRightSmall : 1;  // 0x0(0x1)
	char pad_0_1 : 4;  // 0x0(0x1)
	char pad_1[8];  // 0x1(0x8)
	struct FRuntimeFloatCurve Curve;  // 0x8(0x88)

}; 
// Function Engine.PhysicsHandleComponent.GrabComponentAtLocation
// Size: 0x20(Inherited: 0x0) 
struct FGrabComponentAtLocation
{
	struct UPrimitiveComponent* Component;  // 0x0(0x8)
	struct FName InBoneName;  // 0x8(0x8)
	struct FVector GrabLocation;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// ScriptStruct Engine.PredictProjectilePathParams
// Size: 0x60(Inherited: 0x0) 
struct FPredictProjectilePathParams
{
	struct FVector StartLocation;  // 0x0(0xC)
	struct FVector LaunchVelocity;  // 0xC(0xC)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bTraceWithCollision : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)
	float ProjectileRadius;  // 0x1C(0x4)
	float MaxSimTime;  // 0x20(0x4)
	char pad_36_1 : 7;  // 0x24(0x1)
	bool bTraceWithChannel : 1;  // 0x24(0x1)
	char ECollisionChannel TraceChannel;  // 0x25(0x1)
	char pad_38[2];  // 0x26(0x2)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0x28(0x10)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0x38(0x10)
	float SimFrequency;  // 0x48(0x4)
	float OverrideGravityZ;  // 0x4C(0x4)
	char EDrawDebugTrace DrawDebugType;  // 0x50(0x1)
	char pad_81[3];  // 0x51(0x3)
	float DrawDebugTime;  // 0x54(0x4)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool bTraceComplex : 1;  // 0x58(0x1)
	char pad_89[7];  // 0x59(0x7)

}; 
// ScriptStruct Engine.ActiveHapticFeedbackEffect
// Size: 0x18(Inherited: 0x0) 
struct FActiveHapticFeedbackEffect
{
	struct UHapticFeedbackEffect_Base* HapticEffect;  // 0x0(0x8)
	char pad_8[16];  // 0x8(0x10)

}; 
// Function Engine.KismetMathLibrary.Vector_IsZero
// Size: 0x10(Inherited: 0x0) 
struct FVector_IsZero
{
	struct FVector A;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool ReturnValue : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.CameraComponent.SetProjectionMode
// Size: 0x1(Inherited: 0x0) 
struct FSetProjectionMode
{
	char ECameraProjectionMode InProjectionMode;  // 0x0(0x1)

}; 
// ScriptStruct Engine.ClusterNode
// Size: 0x40(Inherited: 0x0) 
struct FClusterNode
{
	struct FVector BoundMin;  // 0x0(0xC)
	int32_t FirstChild;  // 0xC(0x4)
	struct FVector BoundMax;  // 0x10(0xC)
	int32_t LastChild;  // 0x1C(0x4)
	int32_t FirstInstance;  // 0x20(0x4)
	int32_t LastInstance;  // 0x24(0x4)
	struct FVector MinInstanceScale;  // 0x28(0xC)
	struct FVector MaxInstanceScale;  // 0x34(0xC)

}; 
// ScriptStruct Engine.ComponentOverrideRecord
// Size: 0x78(Inherited: 0x0) 
struct FComponentOverrideRecord
{
	UObject* ComponentClass;  // 0x0(0x8)
	struct UActorComponent* ComponentTemplate;  // 0x8(0x8)
	struct FComponentKey ComponentKey;  // 0x10(0x20)
	struct FBlueprintCookedComponentInstancingData CookedComponentInstancingData;  // 0x30(0x48)

}; 
// Function Engine.MaterialInstanceDynamic.K2_GetTextureParameterValueByInfo
// Size: 0x18(Inherited: 0x0) 
struct FK2_GetTextureParameterValueByInfo
{
	struct FMaterialParameterInfo ParameterInfo;  // 0x0(0x10)
	struct UTexture* ReturnValue;  // 0x10(0x8)

}; 
// ScriptStruct Engine.BlueprintInputAxisDelegateBinding
// Size: 0x14(Inherited: 0x4) 
struct FBlueprintInputAxisDelegateBinding : public FBlueprintInputDelegateBinding
{
	struct FName InputAxisName;  // 0x4(0x8)
	struct FName FunctionNameToBind;  // 0xC(0x8)

}; 
// ScriptStruct Engine.CachedKeyToActionInfo
// Size: 0x70(Inherited: 0x0) 
struct FCachedKeyToActionInfo
{
	struct UPlayerInput* PlayerInput;  // 0x0(0x8)
	char pad_8[104];  // 0x8(0x68)

}; 
// Function Engine.KismetMathLibrary.SelectString
// Size: 0x38(Inherited: 0x0) 
struct FSelectString
{
	struct FString A;  // 0x0(0x10)
	struct FString B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool bPickA : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)
	struct FString ReturnValue;  // 0x28(0x10)

}; 
// Function Engine.KismetMathLibrary.LinearColor_Set
// Size: 0x20(Inherited: 0x0) 
struct FLinearColor_Set
{
	struct FLinearColor InOutColor;  // 0x0(0x10)
	struct FLinearColor InColor;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.IntPoint_Up
// Size: 0x8(Inherited: 0x0) 
struct FIntPoint_Up
{
	struct FIntPoint ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.InstancedStaticMeshComponentInstanceData
// Size: 0x150(Inherited: 0xB8) 
struct FInstancedStaticMeshComponentInstanceData : public FSceneComponentInstanceData
{
	struct UStaticMesh* StaticMesh;  // 0xB8(0x8)
	struct FInstancedStaticMeshLightMapInstanceData CachedStaticLighting;  // 0xC0(0x40)
	struct TArray<struct FInstancedStaticMeshInstanceData> PerInstanceSMData;  // 0x100(0x10)
	struct TArray<float> PerInstanceSMCustomData;  // 0x110(0x10)
	char pad_288[32];  // 0x120(0x20)
	int32_t InstancingRandomSeed;  // 0x140(0x4)
	char pad_324[12];  // 0x144(0xC)

}; 
// ScriptStruct Engine.InstancedStaticMeshInstanceData
// Size: 0x40(Inherited: 0x0) 
struct FInstancedStaticMeshInstanceData
{
	struct FMatrix Transform;  // 0x0(0x40)

}; 
// ScriptStruct Engine.InstancedStaticMeshMappingInfo
// Size: 0x8(Inherited: 0x0) 
struct FInstancedStaticMeshMappingInfo
{
	char pad_0[8];  // 0x0(0x8)

}; 
// Function Engine.LightComponentBase.SetAffectReflection
// Size: 0x1(Inherited: 0x0) 
struct FSetAffectReflection
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetStringLibrary.Replace
// Size: 0x48(Inherited: 0x0) 
struct FReplace
{
	struct FString SourceString;  // 0x0(0x10)
	struct FString from;  // 0x10(0x10)
	struct FString To;  // 0x20(0x10)
	char ESearchCase SearchCase;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct FString ReturnValue;  // 0x38(0x10)

}; 
// ScriptStruct Engine.CurveEdEntry
// Size: 0x38(Inherited: 0x0) 
struct FCurveEdEntry
{
	struct UObject* CurveObject;  // 0x0(0x8)
	struct FColor CurveColor;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct FString CurveName;  // 0x10(0x10)
	int32_t bHideCurve;  // 0x20(0x4)
	int32_t bColorCurve;  // 0x24(0x4)
	int32_t bFloatingPointColorCurve;  // 0x28(0x4)
	int32_t bClamp;  // 0x2C(0x4)
	float ClampLow;  // 0x30(0x4)
	float ClampHigh;  // 0x34(0x4)

}; 
// ScriptStruct Engine.BoneMirrorExport
// Size: 0x14(Inherited: 0x0) 
struct FBoneMirrorExport
{
	struct FName BoneName;  // 0x0(0x8)
	struct FName SourceBoneName;  // 0x8(0x8)
	char EAxis BoneFlipAxis;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// ScriptStruct Engine.CameraPreviewInfo
// Size: 0x30(Inherited: 0x0) 
struct FCameraPreviewInfo
{
	APawn* PawnClass;  // 0x0(0x8)
	struct UAnimSequence* AnimSeq;  // 0x8(0x8)
	struct FVector Location;  // 0x10(0xC)
	struct FRotator Rotation;  // 0x1C(0xC)
	struct APawn* PawnInst;  // 0x28(0x8)

}; 
// ScriptStruct Engine.AnimControlTrackKey
// Size: 0x20(Inherited: 0x0) 
struct FAnimControlTrackKey
{
	float StartTime;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct UAnimSequence* AnimSeq;  // 0x8(0x8)
	float AnimStartOffset;  // 0x10(0x4)
	float AnimEndOffset;  // 0x14(0x4)
	float AnimPlayRate;  // 0x18(0x4)
	char bLooping : 1;  // 0x1C(0x1)
	char bReverse : 1;  // 0x1C(0x1)
	char pad_28_1 : 6;  // 0x1C(0x1)
	char pad_29[4];  // 0x1D(0x4)

}; 
// Function Engine.KismetMathLibrary.NotEqual_ByteByte
// Size: 0x3(Inherited: 0x0) 
struct FNotEqual_ByteByte
{
	char A;  // 0x0(0x1)
	char B;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool ReturnValue : 1;  // 0x2(0x1)

}; 
// Function Engine.KismetMathLibrary.GetDuration
// Size: 0x10(Inherited: 0x0) 
struct FGetDuration
{
	struct FTimespan A;  // 0x0(0x8)
	struct FTimespan ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.HierarchicalInstancedStaticMeshComponent.RemoveInstances
// Size: 0x18(Inherited: 0x0) 
struct FRemoveInstances
{
	struct TArray<int32_t> InstancesToRemove;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.BoolTrackKey
// Size: 0x8(Inherited: 0x0) 
struct FBoolTrackKey
{
	float Time;  // 0x0(0x4)
	char Value : 1;  // 0x4(0x1)
	char pad_4_1 : 7;  // 0x4(0x1)
	char pad_5[4];  // 0x5(0x4)

}; 
// ScriptStruct Engine.EventTrackKey
// Size: 0xC(Inherited: 0x0) 
struct FEventTrackKey
{
	float Time;  // 0x0(0x4)
	struct FName EventName;  // 0x4(0x8)

}; 
// ScriptStruct Engine.InterpLookupPoint
// Size: 0xC(Inherited: 0x0) 
struct FInterpLookupPoint
{
	struct FName GroupName;  // 0x0(0x8)
	float Time;  // 0x8(0x4)

}; 
// ScriptStruct Engine.FloatSpringState
// Size: 0x8(Inherited: 0x0) 
struct FFloatSpringState
{
	char pad_0[8];  // 0x0(0x8)

}; 
// ScriptStruct Engine.TTTrackId
// Size: 0x8(Inherited: 0x0) 
struct FTTTrackId
{
	int32_t TrackType;  // 0x0(0x4)
	int32_t TrackIndex;  // 0x4(0x4)

}; 
// Function Engine.SkinnedMeshComponent.GetVertexOffsetUsage
// Size: 0x8(Inherited: 0x0) 
struct FGetVertexOffsetUsage
{
	int32_t LODIndex;  // 0x0(0x4)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// ScriptStruct Engine.LatentActionManager
// Size: 0x60(Inherited: 0x0) 
struct FLatentActionManager
{
	char pad_0[96];  // 0x0(0x60)

}; 
// ScriptStruct Engine.ReplicatedStaticActorDestructionInfo
// Size: 0x38(Inherited: 0x0) 
struct FReplicatedStaticActorDestructionInfo
{
	char pad_0[48];  // 0x0(0x30)
	UObject* ObjClass;  // 0x30(0x8)

}; 
// ScriptStruct Engine.QuartzClockSettings
// Size: 0x20(Inherited: 0x0) 
struct FQuartzClockSettings
{
	struct FQuartzTimeSignature TimeSignature;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bIgnoreLevelChange : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.TwitterIntegrationBase.TwitterRequest
// Size: 0x30(Inherited: 0x0) 
struct FTwitterRequest
{
	struct FString URL;  // 0x0(0x10)
	struct TArray<struct FString> ParamKeysAndValues;  // 0x10(0x10)
	char ETwitterRequestMethod RequestMethod;  // 0x20(0x1)
	char pad_33[3];  // 0x21(0x3)
	int32_t AccountIndex;  // 0x24(0x4)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool ReturnValue : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// ScriptStruct Engine.MaterialProxySettings
// Size: 0x88(Inherited: 0x0) 
struct FMaterialProxySettings
{
	struct FIntPoint TextureSize;  // 0x0(0x8)
	float GutterSpace;  // 0x8(0x4)
	float MetallicConstant;  // 0xC(0x4)
	float RoughnessConstant;  // 0x10(0x4)
	float AnisotropyConstant;  // 0x14(0x4)
	float SpecularConstant;  // 0x18(0x4)
	float OpacityConstant;  // 0x1C(0x4)
	float OpacityMaskConstant;  // 0x20(0x4)
	float AmbientOcclusionConstant;  // 0x24(0x4)
	char ETextureSizingType TextureSizingType;  // 0x28(0x1)
	char EMaterialMergeType MaterialMergeType;  // 0x29(0x1)
	char EBlendMode BlendMode;  // 0x2A(0x1)
	char bAllowTwoSidedMaterial : 1;  // 0x2B(0x1)
	char bNormalMap : 1;  // 0x2B(0x1)
	char bTangentMap : 1;  // 0x2B(0x1)
	char bMetallicMap : 1;  // 0x2B(0x1)
	char bRoughnessMap : 1;  // 0x2B(0x1)
	char bAnisotropyMap : 1;  // 0x2B(0x1)
	char bSpecularMap : 1;  // 0x2B(0x1)
	char bEmissiveMap : 1;  // 0x2B(0x1)
	char bOpacityMap : 1;  // 0x2C(0x1)
	char bOpacityMaskMap : 1;  // 0x2C(0x1)
	char bAmbientOcclusionMap : 1;  // 0x2C(0x1)
	char pad_44_1 : 5;  // 0x2C(0x1)
	char pad_45[4];  // 0x2D(0x4)
	struct FIntPoint DiffuseTextureSize;  // 0x30(0x8)
	struct FIntPoint NormalTextureSize;  // 0x38(0x8)
	struct FIntPoint TangentTextureSize;  // 0x40(0x8)
	struct FIntPoint MetallicTextureSize;  // 0x48(0x8)
	struct FIntPoint RoughnessTextureSize;  // 0x50(0x8)
	struct FIntPoint AnisotropyTextureSize;  // 0x58(0x8)
	struct FIntPoint SpecularTextureSize;  // 0x60(0x8)
	struct FIntPoint EmissiveTextureSize;  // 0x68(0x8)
	struct FIntPoint OpacityTextureSize;  // 0x70(0x8)
	struct FIntPoint OpacityMaskTextureSize;  // 0x78(0x8)
	struct FIntPoint AmbientOcclusionTextureSize;  // 0x80(0x8)

}; 
// Function Engine.StereoLayerComponent.SetEquirectProps
// Size: 0x48(Inherited: 0x0) 
struct FSetEquirectProps
{
	struct FEquirectProps InScaleBiases;  // 0x0(0x48)

}; 
// Function Engine.AudioComponent.SetWaveParameter
// Size: 0x10(Inherited: 0x0) 
struct FSetWaveParameter
{
	struct FName InName;  // 0x0(0x8)
	struct USoundWave* InWave;  // 0x8(0x8)

}; 
// ScriptStruct Engine.DynamicTextureInstance
// Size: 0x38(Inherited: 0x28) 
struct FDynamicTextureInstance : public FStreamableTextureInstance
{
	struct UTexture2D* Texture;  // 0x28(0x8)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bAttached : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	float OriginalRadius;  // 0x34(0x4)

}; 
// ScriptStruct Engine.HLODInstancingKey
// Size: 0x10(Inherited: 0x0) 
struct FHLODInstancingKey
{
	struct UStaticMesh* StaticMesh;  // 0x0(0x8)
	struct UMaterialInterface* Material;  // 0x8(0x8)

}; 
// ScriptStruct Engine.ComponentSync
// Size: 0xC(Inherited: 0x0) 
struct FComponentSync
{
	struct FName Name;  // 0x0(0x8)
	uint8_t  SyncOption;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.BlueprintPathsLibrary.MakeValidFileName
// Size: 0x30(Inherited: 0x0) 
struct FMakeValidFileName
{
	struct FString inString;  // 0x0(0x10)
	struct FString InReplacementChar;  // 0x10(0x10)
	struct FString ReturnValue;  // 0x20(0x10)

}; 
// ScriptStruct Engine.LODMappingData
// Size: 0x20(Inherited: 0x0) 
struct FLODMappingData
{
	struct TArray<int32_t> Mapping;  // 0x0(0x10)
	struct TArray<int32_t> InverseMapping;  // 0x10(0x10)

}; 
// Function Engine.VolumetricCloudComponent.SetShadowReflectionSampleCountScale
// Size: 0x4(Inherited: 0x0) 
struct FSetShadowReflectionSampleCountScale
{
	float NewValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.ParameterGroupData
// Size: 0x18(Inherited: 0x0) 
struct FParameterGroupData
{
	struct FString GroupName;  // 0x0(0x10)
	int32_t GroupSortPriority;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// ScriptStruct Engine.MaterialCachedExpressionData
// Size: 0x1D8(Inherited: 0x0) 
struct FMaterialCachedExpressionData
{
	struct FMaterialCachedParameters parameters;  // 0x0(0x150)
	struct TArray<struct UObject*> ReferencedTextures;  // 0x150(0x10)
	struct TArray<struct FMaterialFunctionInfo> FunctionInfos;  // 0x160(0x10)
	struct TArray<struct FMaterialParameterCollectionInfo> ParameterCollectionInfos;  // 0x170(0x10)
	struct TArray<struct UMaterialFunctionInterface*> DefaultLayers;  // 0x180(0x10)
	struct TArray<struct UMaterialFunctionInterface*> DefaultLayerBlends;  // 0x190(0x10)
	struct TArray<struct ULandscapeGrassType*> GrassTypes;  // 0x1A0(0x10)
	struct TArray<struct FName> DynamicParameterNames;  // 0x1B0(0x10)
	struct TArray<bool> QualityLevelsUsed;  // 0x1C0(0x10)
	char bHasRuntimeVirtualTextureOutput : 1;  // 0x1D0(0x1)
	char bHasSceneColor : 1;  // 0x1D0(0x1)
	char pad_464_1 : 6;  // 0x1D0(0x1)
	char pad_465[8];  // 0x1D1(0x8)

}; 
// ScriptStruct Engine.MaterialFunctionInfo
// Size: 0x18(Inherited: 0x0) 
struct FMaterialFunctionInfo
{
	struct FGuid StateId;  // 0x0(0x10)
	struct UMaterialFunctionInterface* Function;  // 0x10(0x8)

}; 
// ScriptStruct Engine.MaterialCachedParameters
// Size: 0x150(Inherited: 0x0) 
struct FMaterialCachedParameters
{
	struct FMaterialCachedParameterEntry RuntimeEntries[5];  // 0x0(0xF0)
	struct TArray<float> ScalarValues;  // 0xF0(0x10)
	struct TArray<struct FLinearColor> VectorValues;  // 0x100(0x10)
	struct TArray<struct UTexture*> TextureValues;  // 0x110(0x10)
	struct TArray<struct UFont*> FontValues;  // 0x120(0x10)
	struct TArray<int32_t> FontPageValues;  // 0x130(0x10)
	struct TArray<struct URuntimeVirtualTexture*> RuntimeVirtualTextureValues;  // 0x140(0x10)

}; 
// ScriptStruct Engine.MaterialCachedParameterEntry
// Size: 0x30(Inherited: 0x0) 
struct FMaterialCachedParameterEntry
{
	struct TArray<uint64_t> NameHashes;  // 0x0(0x10)
	struct TArray<struct FMaterialParameterInfo> ParameterInfos;  // 0x10(0x10)
	struct TArray<struct FGuid> ExpressionGuids;  // 0x20(0x10)

}; 
// ScriptStruct Engine.CustomInput
// Size: 0x1C(Inherited: 0x0) 
struct FCustomInput
{
	struct FName InputName;  // 0x0(0x8)
	struct FExpressionInput Input;  // 0x8(0x14)

}; 
// Function Engine.KismetMathLibrary.EqualExactly_Vector4Vector4
// Size: 0x30(Inherited: 0x0) 
struct FEqualExactly_Vector4Vector4
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[15];  // 0x21(0xF)

}; 
// ScriptStruct Engine.FontParameterValue
// Size: 0x30(Inherited: 0x0) 
struct FFontParameterValue
{
	struct FMaterialParameterInfo ParameterInfo;  // 0x0(0x10)
	struct UFont* FontValue;  // 0x10(0x8)
	int32_t FontPage;  // 0x18(0x4)
	struct FGuid ExpressionGUID;  // 0x1C(0x10)
	char pad_44[4];  // 0x2C(0x4)

}; 
// Function Engine.StereoLayerFunctionLibrary.SetSplashScreen
// Size: 0x20(Inherited: 0x0) 
struct FSetSplashScreen
{
	struct UTexture* Texture;  // 0x0(0x8)
	struct FVector2D Scale;  // 0x8(0x8)
	struct FVector Offset;  // 0x10(0xC)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bShowLoadingMovie : 1;  // 0x1C(0x1)
	char pad_29_1 : 7;  // 0x1D(0x1)
	bool bShowOnSet : 1;  // 0x1D(0x1)
	char pad_30[2];  // 0x1E(0x2)

}; 
// ScriptStruct Engine.TextureParameterValue
// Size: 0x28(Inherited: 0x0) 
struct FTextureParameterValue
{
	struct FMaterialParameterInfo ParameterInfo;  // 0x0(0x10)
	struct UTexture* ParameterValue;  // 0x10(0x8)
	struct FGuid ExpressionGUID;  // 0x18(0x10)

}; 
// Function Engine.Exporter.RunAssetExportTask
// Size: 0x10(Inherited: 0x0) 
struct FRunAssetExportTask
{
	struct UAssetExportTask* Task;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// ScriptStruct Engine.ScalarParameterValue
// Size: 0x24(Inherited: 0x0) 
struct FScalarParameterValue
{
	struct FMaterialParameterInfo ParameterInfo;  // 0x0(0x10)
	float ParameterValue;  // 0x10(0x4)
	struct FGuid ExpressionGUID;  // 0x14(0x10)

}; 
// Function Engine.InputComponent.IsControllerKeyDown
// Size: 0x20(Inherited: 0x0) 
struct FIsControllerKeyDown
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// ScriptStruct Engine.RigTransformConstraint
// Size: 0x10(Inherited: 0x0) 
struct FRigTransformConstraint
{
	char EConstraintTransform TranformType;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FName ParentSpace;  // 0x4(0x8)
	float Weight;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetScaledAxis
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_GetScaledAxis
{
	struct FMatrix M;  // 0x0(0x40)
	char EAxis Axis;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)
	struct FVector ReturnValue;  // 0x44(0xC)

}; 
// ScriptStruct Engine.ScalarParameterAtlasInstanceData
// Size: 0x58(Inherited: 0x0) 
struct FScalarParameterAtlasInstanceData
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bIsUsedAsAtlasPosition : 1;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct TSoftObjectPtr<UCurveLinearColor> Curve;  // 0x8(0x28)
	struct TSoftObjectPtr<UCurveLinearColorAtlas> Atlas;  // 0x30(0x28)

}; 
// ScriptStruct Engine.MaterialInstanceBasePropertyOverrides
// Size: 0x8(Inherited: 0x0) 
struct FMaterialInstanceBasePropertyOverrides
{
	char bOverride_OpacityMaskClipValue : 1;  // 0x0(0x1)
	char bOverride_BlendMode : 1;  // 0x0(0x1)
	char bOverride_ShadingModel : 1;  // 0x0(0x1)
	char bOverride_DitheredLODTransition : 1;  // 0x0(0x1)
	char bOverride_CastDynamicShadowAsMasked : 1;  // 0x0(0x1)
	char bOverride_TwoSided : 1;  // 0x0(0x1)
	char TwoSided : 1;  // 0x0(0x1)
	char DitheredLODTransition : 1;  // 0x0(0x1)
	char bCastDynamicShadowAsMasked : 1;  // 0x1(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	char EBlendMode BlendMode;  // 0x2(0x1)
	char EMaterialShadingModel ShadingModel;  // 0x3(0x1)
	float OpacityMaskClipValue;  // 0x4(0x4)

}; 
// ScriptStruct Engine.LightmassMaterialInterfaceSettings
// Size: 0x10(Inherited: 0x0) 
struct FLightmassMaterialInterfaceSettings
{
	float EmissiveBoost;  // 0x0(0x4)
	float DiffuseBoost;  // 0x4(0x4)
	float ExportResolutionScale;  // 0x8(0x4)
	char bCastShadowAsMasked : 1;  // 0xC(0x1)
	char bOverrideCastShadowAsMasked : 1;  // 0xC(0x1)
	char bOverrideEmissiveBoost : 1;  // 0xC(0x1)
	char bOverrideDiffuseBoost : 1;  // 0xC(0x1)
	char bOverrideExportResolutionScale : 1;  // 0xC(0x1)
	char pad_12_1 : 3;  // 0xC(0x1)
	char pad_13[4];  // 0xD(0x4)

}; 
// ScriptStruct Engine.CollectionParameterBase
// Size: 0x18(Inherited: 0x0) 
struct FCollectionParameterBase
{
	struct FName ParameterName;  // 0x0(0x8)
	struct FGuid ID;  // 0x8(0x10)

}; 
// ScriptStruct Engine.CollectionScalarParameter
// Size: 0x1C(Inherited: 0x18) 
struct FCollectionScalarParameter : public FCollectionParameterBase
{
	float DefaultValue;  // 0x18(0x4)

}; 
// ScriptStruct Engine.NamedEmitterMaterial
// Size: 0x10(Inherited: 0x0) 
struct FNamedEmitterMaterial
{
	struct FName Name;  // 0x0(0x8)
	struct UMaterialInterface* Material;  // 0x8(0x8)

}; 
// Function Engine.GameplayStatics.GetRealTimeSeconds
// Size: 0x10(Inherited: 0x0) 
struct FGetRealTimeSeconds
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// ScriptStruct Engine.InterpGroupActorInfo
// Size: 0x18(Inherited: 0x0) 
struct FInterpGroupActorInfo
{
	struct FName ObjectName;  // 0x0(0x8)
	struct TArray<struct AActor*> Actors;  // 0x8(0x10)

}; 
// Function Engine.SplineComponent.SetScaleAtSplinePoint
// Size: 0x14(Inherited: 0x0) 
struct FSetScaleAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	struct FVector InScaleVector;  // 0x4(0xC)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bUpdateSpline : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// ScriptStruct Engine.CameraCutInfo
// Size: 0x10(Inherited: 0x0) 
struct FCameraCutInfo
{
	struct FVector Location;  // 0x0(0xC)
	float Timestamp;  // 0xC(0x4)

}; 
// ScriptStruct Engine.NodeItem
// Size: 0x40(Inherited: 0x0) 
struct FNodeItem
{
	struct FName ParentName;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FTransform Transform;  // 0x10(0x30)

}; 
// ScriptStruct Engine.MeshProxySettings
// Size: 0xA8(Inherited: 0x0) 
struct FMeshProxySettings
{
	int32_t ScreenSize;  // 0x0(0x4)
	float VoxelSize;  // 0x4(0x4)
	struct FMaterialProxySettings MaterialSettings;  // 0x8(0x88)
	float MergeDistance;  // 0x90(0x4)
	struct FColor UnresolvedGeometryColor;  // 0x94(0x4)
	float MaxRayCastDist;  // 0x98(0x4)
	float HardAngleThreshold;  // 0x9C(0x4)
	int32_t LightMapResolution;  // 0xA0(0x4)
	char EProxyNormalComputationMethod NormalCalculationMethod;  // 0xA4(0x1)
	char ELandscapeCullingPrecision LandscapeCullingPrecision;  // 0xA5(0x1)
	char bCalculateCorrectLODModel : 1;  // 0xA6(0x1)
	char bOverrideVoxelSize : 1;  // 0xA6(0x1)
	char bOverrideTransferDistance : 1;  // 0xA6(0x1)
	char bUseHardAngleThreshold : 1;  // 0xA6(0x1)
	char bComputeLightMapResolution : 1;  // 0xA6(0x1)
	char bRecalculateNormals : 1;  // 0xA6(0x1)
	char bUseLandscapeCulling : 1;  // 0xA6(0x1)
	char bAllowAdjacency : 1;  // 0xA6(0x1)
	char bAllowDistanceField : 1;  // 0xA7(0x1)
	char bReuseMeshLightmapUVs : 1;  // 0xA7(0x1)
	char bCreateCollision : 1;  // 0xA7(0x1)
	char bAllowVertexColors : 1;  // 0xA7(0x1)
	char bGenerateLightmapUVs : 1;  // 0xA7(0x1)
	char pad_167_1 : 3;  // 0xA7(0x1)

}; 
// ScriptStruct Engine.PurchaseInfo
// Size: 0x40(Inherited: 0x0) 
struct FPurchaseInfo
{
	struct FString Identifier;  // 0x0(0x10)
	struct FString DisplayName;  // 0x10(0x10)
	struct FString DisplayDescription;  // 0x20(0x10)
	struct FString DisplayPrice;  // 0x30(0x10)

}; 
// Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInDegrees
// Size: 0x20(Inherited: 0x0) 
struct FRandomUnitVectorInEllipticalConeInDegrees
{
	struct FVector ConeDir;  // 0x0(0xC)
	float MaxYawInDegrees;  // 0xC(0x4)
	float MaxPitchInDegrees;  // 0x10(0x4)
	struct FVector ReturnValue;  // 0x14(0xC)

}; 
// ScriptStruct Engine.NameCurveKey
// Size: 0xC(Inherited: 0x0) 
struct FNameCurveKey
{
	float Time;  // 0x0(0x4)
	struct FName Value;  // 0x4(0x8)

}; 
// ScriptStruct Engine.NavAgentSelector
// Size: 0x4(Inherited: 0x0) 
struct FNavAgentSelector
{
	char bSupportsAgent0 : 1;  // 0x0(0x1)
	char bSupportsAgent1 : 1;  // 0x0(0x1)
	char bSupportsAgent2 : 1;  // 0x0(0x1)
	char bSupportsAgent3 : 1;  // 0x0(0x1)
	char bSupportsAgent4 : 1;  // 0x0(0x1)
	char bSupportsAgent5 : 1;  // 0x0(0x1)
	char bSupportsAgent6 : 1;  // 0x0(0x1)
	char bSupportsAgent7 : 1;  // 0x0(0x1)
	char bSupportsAgent8 : 1;  // 0x1(0x1)
	char bSupportsAgent9 : 1;  // 0x1(0x1)
	char bSupportsAgent10 : 1;  // 0x1(0x1)
	char bSupportsAgent11 : 1;  // 0x1(0x1)
	char bSupportsAgent12 : 1;  // 0x1(0x1)
	char bSupportsAgent13 : 1;  // 0x1(0x1)
	char bSupportsAgent14 : 1;  // 0x1(0x1)
	char bSupportsAgent15 : 1;  // 0x1(0x1)
	char pad_2[2];  // 0x2(0x2)

}; 
// Function Engine.StaticMesh.BuildFromStaticMeshDescriptions
// Size: 0x18(Inherited: 0x0) 
struct FBuildFromStaticMeshDescriptions
{
	struct TArray<struct UStaticMeshDescription*> StaticMeshDescriptions;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bBuildSimpleCollision : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.NavigationLink
// Size: 0x48(Inherited: 0x30) 
struct FNavigationLink : public FNavigationLinkBase
{
	struct FVector Left;  // 0x30(0xC)
	struct FVector Right;  // 0x3C(0xC)

}; 
// ScriptStruct Engine.PacketSimulationSettings
// Size: 0x34(Inherited: 0x0) 
struct FPacketSimulationSettings
{
	int32_t PktLoss;  // 0x0(0x4)
	int32_t PktLossMaxSize;  // 0x4(0x4)
	int32_t PktLossMinSize;  // 0x8(0x4)
	int32_t PktOrder;  // 0xC(0x4)
	int32_t PktDup;  // 0x10(0x4)
	int32_t PktLag;  // 0x14(0x4)
	int32_t PktLagVariance;  // 0x18(0x4)
	int32_t PktLagMin;  // 0x1C(0x4)
	int32_t PktLagMax;  // 0x20(0x4)
	int32_t PktIncomingLagMin;  // 0x24(0x4)
	int32_t PktIncomingLagMax;  // 0x28(0x4)
	int32_t PktIncomingLoss;  // 0x2C(0x4)
	int32_t PktJitter;  // 0x30(0x4)

}; 
// Function Engine.KismetRenderingLibrary.ReadRenderTargetUV
// Size: 0x20(Inherited: 0x0) 
struct FReadRenderTargetUV
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UTextureRenderTarget2D* TextureRenderTarget;  // 0x8(0x8)
	float U;  // 0x10(0x4)
	float V;  // 0x14(0x4)
	struct FColor ReturnValue;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// ScriptStruct Engine.SoundSourceBusSendInfo
// Size: 0xB8(Inherited: 0x0) 
struct FSoundSourceBusSendInfo
{
	uint8_t  SourceBusSendLevelControlMethod;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct USoundSourceBus* SoundSourceBus;  // 0x8(0x8)
	struct UAudioBus* AudioBus;  // 0x10(0x8)
	float SendLevel;  // 0x18(0x4)
	float MinSendLevel;  // 0x1C(0x4)
	float MaxSendLevel;  // 0x20(0x4)
	float MinSendDistance;  // 0x24(0x4)
	float MaxSendDistance;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)
	struct FRuntimeFloatCurve CustomSendLevelCurve;  // 0x30(0x88)

}; 
// Function Engine.SkinnedMeshComponent.GetBoneIndex
// Size: 0xC(Inherited: 0x0) 
struct FGetBoneIndex
{
	struct FName BoneName;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetArrayLibrary.Array_Resize
// Size: 0x18(Inherited: 0x0) 
struct FArray_Resize
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t Size;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// ScriptStruct Engine.ParticleBurst
// Size: 0xC(Inherited: 0x0) 
struct FParticleBurst
{
	int32_t Count;  // 0x0(0x4)
	int32_t CountLow;  // 0x4(0x4)
	float Time;  // 0x8(0x4)

}; 
// Function Engine.KismetStringLibrary.Reverse
// Size: 0x20(Inherited: 0x0) 
struct FReverse
{
	struct FString SourceString;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// ScriptStruct Engine.ParticleRandomSeedInfo
// Size: 0x20(Inherited: 0x0) 
struct FParticleRandomSeedInfo
{
	struct FName ParameterName;  // 0x0(0x8)
	char bGetSeedFromInstance : 1;  // 0x8(0x1)
	char bInstanceSeedIsIndex : 1;  // 0x8(0x1)
	char bResetSeedOnEmitterLooping : 1;  // 0x8(0x1)
	char bRandomlySelectSeedArray : 1;  // 0x8(0x1)
	char pad_8_1 : 4;  // 0x8(0x1)
	char pad_9[8];  // 0x9(0x8)
	struct TArray<int32_t> RandomSeeds;  // 0x10(0x10)

}; 
// Function Engine.SkeletalMeshComponent.OverrideAnimationData
// Size: 0x18(Inherited: 0x0) 
struct FOverrideAnimationData
{
	struct UAnimationAsset* InAnimToPlay;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bIsLooping : 1;  // 0x8(0x1)
	char pad_9_1 : 7;  // 0x9(0x1)
	bool bIsPlaying : 1;  // 0x9(0x1)
	char pad_10[2];  // 0xA(0x2)
	float position;  // 0xC(0x4)
	float PlayRate;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// ScriptStruct Engine.LocationBoneSocketInfo
// Size: 0x14(Inherited: 0x0) 
struct FLocationBoneSocketInfo
{
	struct FName BoneSocketName;  // 0x0(0x8)
	struct FVector Offset;  // 0x8(0xC)

}; 
// Function Engine.CurveBase.GetTimeRange
// Size: 0x8(Inherited: 0x0) 
struct FGetTimeRange
{
	float MinTime;  // 0x0(0x4)
	float MaxTime;  // 0x4(0x4)

}; 
// Function Engine.TimelineComponent.SetPlayRate
// Size: 0x4(Inherited: 0x0) 
struct FSetPlayRate
{
	float NewRate;  // 0x0(0x4)

}; 
// ScriptStruct Engine.OrbitOptions
// Size: 0x4(Inherited: 0x0) 
struct FOrbitOptions
{
	char bProcessDuringSpawn : 1;  // 0x0(0x1)
	char bProcessDuringUpdate : 1;  // 0x0(0x1)
	char bUseEmitterTime : 1;  // 0x0(0x1)
	char pad_0_1 : 5;  // 0x0(0x1)
	char pad_1[4];  // 0x1(0x4)

}; 
// ScriptStruct Engine.EmitterDynamicParameter
// Size: 0x48(Inherited: 0x0) 
struct FEmitterDynamicParameter
{
	struct FName ParamName;  // 0x0(0x8)
	char bUseEmitterTime : 1;  // 0x8(0x1)
	char bSpawnTimeOnly : 1;  // 0x8(0x1)
	char pad_8_1 : 6;  // 0x8(0x1)
	char pad_9[4];  // 0x9(0x4)
	char EEmitterDynamicParameterValue ValueMethod;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	char bScaleVelocityByParamValue : 1;  // 0x10(0x1)
	char pad_16_1 : 7;  // 0x10(0x1)
	char pad_17[8];  // 0x11(0x8)
	struct FRawDistributionFloat ParamValue;  // 0x18(0x30)

}; 
// Function Engine.AnimInstance.Montage_GetBlendTime
// Size: 0x10(Inherited: 0x0) 
struct FMontage_GetBlendTime
{
	struct UAnimMontage* Montage;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.Canvas.K2_DrawPolygon
// Size: 0x30(Inherited: 0x0) 
struct FK2_DrawPolygon
{
	struct UTexture* RenderTexture;  // 0x0(0x8)
	struct FVector2D screenPosition;  // 0x8(0x8)
	struct FVector2D Radius;  // 0x10(0x8)
	int32_t numberOfSides;  // 0x18(0x4)
	struct FLinearColor RenderColor;  // 0x1C(0x10)
	char pad_44[4];  // 0x2C(0x4)

}; 
// ScriptStruct Engine.BeamTargetData
// Size: 0xC(Inherited: 0x0) 
struct FBeamTargetData
{
	struct FName TargetName;  // 0x0(0x8)
	float TargetPercentage;  // 0x8(0x4)

}; 
// Function Engine.LevelStreaming.IsLevelLoaded
// Size: 0x1(Inherited: 0x0) 
struct FIsLevelLoaded
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.GPUSpriteResourceData
// Size: 0x160(Inherited: 0x0) 
struct FGPUSpriteResourceData
{
	struct TArray<struct FColor> QuantizedColorSamples;  // 0x0(0x10)
	struct TArray<struct FColor> QuantizedMiscSamples;  // 0x10(0x10)
	struct TArray<struct FColor> QuantizedSimulationAttrSamples;  // 0x20(0x10)
	struct FVector4 ColorScale;  // 0x30(0x10)
	struct FVector4 ColorBias;  // 0x40(0x10)
	struct FVector4 MiscScale;  // 0x50(0x10)
	struct FVector4 MiscBias;  // 0x60(0x10)
	struct FVector4 SimulationAttrCurveScale;  // 0x70(0x10)
	struct FVector4 SimulationAttrCurveBias;  // 0x80(0x10)
	struct FVector4 SubImageSize;  // 0x90(0x10)
	struct FVector4 SizeBySpeed;  // 0xA0(0x10)
	struct FVector ConstantAcceleration;  // 0xB0(0xC)
	struct FVector OrbitOffsetBase;  // 0xBC(0xC)
	struct FVector OrbitOffsetRange;  // 0xC8(0xC)
	struct FVector OrbitFrequencyBase;  // 0xD4(0xC)
	struct FVector OrbitFrequencyRange;  // 0xE0(0xC)
	struct FVector OrbitPhaseBase;  // 0xEC(0xC)
	struct FVector OrbitPhaseRange;  // 0xF8(0xC)
	float GlobalVectorFieldScale;  // 0x104(0x4)
	float GlobalVectorFieldTightness;  // 0x108(0x4)
	float PerParticleVectorFieldScale;  // 0x10C(0x4)
	float PerParticleVectorFieldBias;  // 0x110(0x4)
	float DragCoefficientScale;  // 0x114(0x4)
	float DragCoefficientBias;  // 0x118(0x4)
	float ResilienceScale;  // 0x11C(0x4)
	float ResilienceBias;  // 0x120(0x4)
	float CollisionRadiusScale;  // 0x124(0x4)
	float CollisionRadiusBias;  // 0x128(0x4)
	float CollisionTimeBias;  // 0x12C(0x4)
	float CollisionRandomSpread;  // 0x130(0x4)
	float CollisionRandomDistribution;  // 0x134(0x4)
	float OneMinusFriction;  // 0x138(0x4)
	float RotationRateScale;  // 0x13C(0x4)
	float CameraMotionBlurAmount;  // 0x140(0x4)
	char EParticleScreenAlignment ScreenAlignment;  // 0x144(0x1)
	char EParticleAxisLock LockAxisFlag;  // 0x145(0x1)
	char pad_326[2];  // 0x146(0x2)
	struct FVector2D PivotOffset;  // 0x148(0x8)
	char bRemoveHMDRoll : 1;  // 0x150(0x1)
	char pad_336_1 : 7;  // 0x150(0x1)
	char pad_337[4];  // 0x151(0x4)
	float MinFacingCameraBlendDistance;  // 0x154(0x4)
	float MaxFacingCameraBlendDistance;  // 0x158(0x4)
	char pad_348[4];  // 0x15C(0x4)

}; 
// Function Engine.KismetMathLibrary.LinePlaneIntersection
// Size: 0x50(Inherited: 0x0) 
struct FLinePlaneIntersection
{
	struct FVector LineStart;  // 0x0(0xC)
	struct FVector LineEnd;  // 0xC(0xC)
	char pad_24[8];  // 0x18(0x8)
	struct FPlane APlane;  // 0x20(0x10)
	float T;  // 0x30(0x4)
	struct FVector Intersection;  // 0x34(0xC)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool ReturnValue : 1;  // 0x40(0x1)
	char pad_65[15];  // 0x41(0xF)

}; 
// Function Engine.AnimInstance.Montage_GetPosition
// Size: 0x10(Inherited: 0x0) 
struct FMontage_GetPosition
{
	struct UAnimMontage* Montage;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// ScriptStruct Engine.GPUSpriteEmitterInfo
// Size: 0x280(Inherited: 0x0) 
struct FGPUSpriteEmitterInfo
{
	struct UParticleModuleRequired* RequiredModule;  // 0x0(0x8)
	struct UParticleModuleSpawn* SpawnModule;  // 0x8(0x8)
	struct UParticleModuleSpawnPerUnit* SpawnPerUnitModule;  // 0x10(0x8)
	struct TArray<struct UParticleModule*> SpawnModules;  // 0x18(0x10)
	char pad_40[8];  // 0x28(0x8)
	struct FGPUSpriteLocalVectorFieldInfo LocalVectorField;  // 0x30(0x70)
	struct FFloatDistribution VectorFieldScale;  // 0xA0(0x20)
	struct FFloatDistribution DragCoefficient;  // 0xC0(0x20)
	struct FFloatDistribution PointAttractorStrength;  // 0xE0(0x20)
	struct FFloatDistribution Resilience;  // 0x100(0x20)
	struct FVector ConstantAcceleration;  // 0x120(0xC)
	struct FVector PointAttractorPosition;  // 0x12C(0xC)
	float PointAttractorRadiusSq;  // 0x138(0x4)
	struct FVector OrbitOffsetBase;  // 0x13C(0xC)
	struct FVector OrbitOffsetRange;  // 0x148(0xC)
	struct FVector2D InvMaxSize;  // 0x154(0x8)
	float InvRotationRateScale;  // 0x15C(0x4)
	float MaxLifetime;  // 0x160(0x4)
	int32_t MaxParticleCount;  // 0x164(0x4)
	char EParticleScreenAlignment ScreenAlignment;  // 0x168(0x1)
	char EParticleAxisLock LockAxisFlag;  // 0x169(0x1)
	char pad_362[2];  // 0x16A(0x2)
	char bEnableCollision : 1;  // 0x16C(0x1)
	char pad_364_1 : 7;  // 0x16C(0x1)
	char pad_365[4];  // 0x16D(0x4)
	char EParticleCollisionMode CollisionMode;  // 0x170(0x1)
	char pad_369[3];  // 0x171(0x3)
	char bRemoveHMDRoll : 1;  // 0x174(0x1)
	char pad_372_1 : 7;  // 0x174(0x1)
	char pad_373[4];  // 0x175(0x4)
	float MinFacingCameraBlendDistance;  // 0x178(0x4)
	float MaxFacingCameraBlendDistance;  // 0x17C(0x4)
	struct FRawDistributionVector DynamicColor;  // 0x180(0x48)
	struct FRawDistributionFloat DynamicAlpha;  // 0x1C8(0x30)
	struct FRawDistributionVector DynamicColorScale;  // 0x1F8(0x48)
	struct FRawDistributionFloat DynamicAlphaScale;  // 0x240(0x30)
	char pad_624[16];  // 0x270(0x10)

}; 
// Function Engine.AnimInstance.GetInstanceTransitionTimeElapsedFraction
// Size: 0xC(Inherited: 0x0) 
struct FGetInstanceTransitionTimeElapsedFraction
{
	int32_t MachineIndex;  // 0x0(0x4)
	int32_t TransitionIndex;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// ScriptStruct Engine.GPUSpriteLocalVectorFieldInfo
// Size: 0x70(Inherited: 0x0) 
struct FGPUSpriteLocalVectorFieldInfo
{
	struct UVectorField* Field;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FTransform Transform;  // 0x10(0x30)
	struct FRotator MinInitialRotation;  // 0x40(0xC)
	struct FRotator MaxInitialRotation;  // 0x4C(0xC)
	struct FRotator RotationRate;  // 0x58(0xC)
	float Intensity;  // 0x64(0x4)
	float Tightness;  // 0x68(0x4)
	char bIgnoreComponentTransform : 1;  // 0x6C(0x1)
	char bTileX : 1;  // 0x6C(0x1)
	char bTileY : 1;  // 0x6C(0x1)
	char bTileZ : 1;  // 0x6C(0x1)
	char bUseFixDT : 1;  // 0x6C(0x1)
	char pad_108_1 : 3;  // 0x6C(0x1)
	char pad_109[4];  // 0x6D(0x4)

}; 
// ScriptStruct Engine.RootMotionSource_MoveToForce
// Size: 0xC0(Inherited: 0xA0) 
struct FRootMotionSource_MoveToForce : public FRootMotionSource
{
	struct FVector StartLocation;  // 0x98(0xC)
	struct FVector TargetLocation;  // 0xA4(0xC)
	char pad_184_1 : 7;  // 0xB8(0x1)
	bool bRestrictSpeedToExpected : 1;  // 0xB0(0x1)
	struct UCurveVector* PathOffsetCurve;  // 0xB8(0x8)

}; 
// ScriptStruct Engine.ParticleSystemLOD
// Size: 0x1(Inherited: 0x0) 
struct FParticleSystemLOD
{
	char pad_0[1];  // 0x0(0x1)

}; 
// ScriptStruct Engine.ParticleSysParam
// Size: 0x80(Inherited: 0x0) 
struct FParticleSysParam
{
	struct FName Name;  // 0x0(0x8)
	char EParticleSysParamType ParamType;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	float Scalar;  // 0xC(0x4)
	float Scalar_Low;  // 0x10(0x4)
	struct FVector Vector;  // 0x14(0xC)
	struct FVector Vector_Low;  // 0x20(0xC)
	struct FColor Color;  // 0x2C(0x4)
	struct AActor* Actor;  // 0x30(0x8)
	struct UMaterialInterface* Material;  // 0x38(0x8)
	char pad_64[64];  // 0x40(0x40)

}; 
// ScriptStruct Engine.ParticleSystemWorldManagerTickFunction
// Size: 0x30(Inherited: 0x28) 
struct FParticleSystemWorldManagerTickFunction : public FTickFunction
{
	char pad_40[8];  // 0x28(0x8)

}; 
// ScriptStruct Engine.FreezablePerPlatformInt
// Size: 0x4(Inherited: 0x0) 
struct FFreezablePerPlatformInt
{
	char pad_0[4];  // 0x0(0x4)

}; 
// ScriptStruct Engine.PhysicalAnimationData
// Size: 0x24(Inherited: 0x0) 
struct FPhysicalAnimationData
{
	struct FName BodyName;  // 0x0(0x8)
	char bIsLocalSimulation : 1;  // 0x8(0x1)
	char pad_8_1 : 7;  // 0x8(0x1)
	char pad_9[4];  // 0x9(0x4)
	float OrientationStrength;  // 0xC(0x4)
	float AngularVelocityStrength;  // 0x10(0x4)
	float PositionStrength;  // 0x14(0x4)
	float VelocityStrength;  // 0x18(0x4)
	float MaxLinearForce;  // 0x1C(0x4)
	float MaxAngularForce;  // 0x20(0x4)

}; 
// Function Engine.AudioComponent.SetLowPassFilterFrequency
// Size: 0x4(Inherited: 0x0) 
struct FSetLowPassFilterFrequency
{
	float InLowPassFilterFrequency;  // 0x0(0x4)

}; 
// Function Engine.AtmosphericFogComponent.SetPrecomputeParams
// Size: 0xC(Inherited: 0x0) 
struct FSetPrecomputeParams
{
	float DensityHeight;  // 0x0(0x4)
	int32_t MaxScatteringOrder;  // 0x4(0x4)
	int32_t InscatterAltitudeSampleNum;  // 0x8(0x4)

}; 
// ScriptStruct Engine.PhysicalAnimationProfile
// Size: 0x2C(Inherited: 0x0) 
struct FPhysicalAnimationProfile
{
	struct FName ProfileName;  // 0x0(0x8)
	struct FPhysicalAnimationData PhysicalAnimationData;  // 0x8(0x24)

}; 
// Function Engine.FXSystemComponent.SetUseAutoManageAttachment
// Size: 0x1(Inherited: 0x0) 
struct FSetUseAutoManageAttachment
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bAutoManage : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.PhysicsConstraintProfileHandle
// Size: 0x11C(Inherited: 0x0) 
struct FPhysicsConstraintProfileHandle
{
	struct FConstraintProfileProperties ProfileProperties;  // 0x0(0x114)
	struct FName ProfileName;  // 0x114(0x8)

}; 
// Function Engine.AnimInstance.Montage_Play
// Size: 0x20(Inherited: 0x0) 
struct FMontage_Play
{
	struct UAnimMontage* MontageToPlay;  // 0x0(0x8)
	float InPlayRate;  // 0x8(0x4)
	uint8_t  ReturnValueType;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	float InTimeToStartMontageAt;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bStopAllMontages : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)
	float ReturnValue;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.CameraComponent.GetCameraView
// Size: 0x600(Inherited: 0x0) 
struct FGetCameraView
{
	float DeltaTime;  // 0x0(0x4)
	char pad_4[12];  // 0x4(0xC)
	struct FMinimalViewInfo DesiredView;  // 0x10(0x5F0)

}; 
// Function Engine.GameModeBase.GetNumPlayers
// Size: 0x4(Inherited: 0x0) 
struct FGetNumPlayers
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.ChaosPhysicsSettings
// Size: 0x3(Inherited: 0x0) 
struct FChaosPhysicsSettings
{
	uint8_t  DefaultThreadingModel;  // 0x0(0x1)
	uint8_t  DedicatedThreadTickMode;  // 0x1(0x1)
	uint8_t  DedicatedThreadBufferMode;  // 0x2(0x1)

}; 
// ScriptStruct Engine.PhysicalSurfaceName
// Size: 0xC(Inherited: 0x0) 
struct FPhysicalSurfaceName
{
	char EPhysicalSurface Type;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FName Name;  // 0x4(0x8)

}; 
// Function Engine.GameUserSettings.GetGameUserSettings
// Size: 0x8(Inherited: 0x0) 
struct FGetGameUserSettings
{
	struct UGameUserSettings* ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.TViewTarget
// Size: 0x610(Inherited: 0x0) 
struct FTViewTarget
{
	struct AActor* Target;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FMinimalViewInfo POV;  // 0x10(0x5F0)
	struct APlayerState* PlayerState;  // 0x600(0x8)
	char pad_1544[8];  // 0x608(0x8)

}; 
// Function Engine.KismetMathLibrary.RandomUnitVectorFromStream
// Size: 0x14(Inherited: 0x0) 
struct FRandomUnitVectorFromStream
{
	struct FRandomStream Stream;  // 0x0(0x8)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// ScriptStruct Engine.InputActionSpeechMapping
// Size: 0x10(Inherited: 0x0) 
struct FInputActionSpeechMapping
{
	struct FName ActionName;  // 0x0(0x8)
	struct FName SpeechKeyword;  // 0x8(0x8)

}; 
// ScriptStruct Engine.ReferencePose
// Size: 0x18(Inherited: 0x0) 
struct FReferencePose
{
	struct FName PoseName;  // 0x0(0x8)
	struct TArray<struct FTransform> ReferencePose;  // 0x8(0x10)

}; 
// ScriptStruct Engine.InputAxisKeyMapping
// Size: 0x28(Inherited: 0x0) 
struct FInputAxisKeyMapping
{
	struct FName AxisName;  // 0x0(0x8)
	float Scale;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct FKey Key;  // 0x10(0x18)

}; 
// ScriptStruct Engine.InputAxisProperties
// Size: 0x10(Inherited: 0x0) 
struct FInputAxisProperties
{
	float DeadZone;  // 0x0(0x4)
	float Sensitivity;  // 0x4(0x4)
	float Exponent;  // 0x8(0x4)
	char bInvert : 1;  // 0xC(0x1)
	char pad_12_1 : 7;  // 0xC(0x1)
	char pad_13[4];  // 0xD(0x4)

}; 
// ScriptStruct Engine.KeyBind
// Size: 0x30(Inherited: 0x0) 
struct FKeyBind
{
	struct FKey Key;  // 0x0(0x18)
	struct FString Command;  // 0x18(0x10)
	char Control : 1;  // 0x28(0x1)
	char Shift : 1;  // 0x28(0x1)
	char Alt : 1;  // 0x28(0x1)
	char Cmd : 1;  // 0x28(0x1)
	char bIgnoreCtrl : 1;  // 0x28(0x1)
	char bIgnoreShift : 1;  // 0x28(0x1)
	char bIgnoreAlt : 1;  // 0x28(0x1)
	char bIgnoreCmd : 1;  // 0x28(0x1)
	char bDisabled : 1;  // 0x29(0x1)
	char pad_41_1 : 7;  // 0x29(0x1)
	char pad_42[7];  // 0x2A(0x7)

}; 
// Function Engine.GameplayStatics.GetViewportMouseCaptureMode
// Size: 0x10(Inherited: 0x0) 
struct FGetViewportMouseCaptureMode
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	uint8_t  ReturnValue;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.Emitter.SetColorParameter
// Size: 0x18(Inherited: 0x0) 
struct FSetColorParameter
{
	struct FName ParameterName;  // 0x0(0x8)
	struct FLinearColor Param;  // 0x8(0x10)

}; 
// ScriptStruct Engine.PlayerMuteList
// Size: 0x38(Inherited: 0x0) 
struct FPlayerMuteList
{
	char pad_0[48];  // 0x0(0x30)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bHasVoiceHandshakeCompleted : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	int32_t VoiceChannelIdx;  // 0x34(0x4)

}; 
// Function Engine.MaterialInstanceDynamic.SetTextureParameterValueByInfo
// Size: 0x18(Inherited: 0x0) 
struct FSetTextureParameterValueByInfo
{
	struct FMaterialParameterInfo ParameterInfo;  // 0x0(0x10)
	struct UTexture* Value;  // 0x10(0x8)

}; 
// Function Engine.KismetTextLibrary.AsCurrency_Float
// Size: 0x40(Inherited: 0x0) 
struct FAsCurrency_Float
{
	float Value;  // 0x0(0x4)
	char ERoundingMode RoundingMode;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bAlwaysSign : 1;  // 0x5(0x1)
	char pad_6_1 : 7;  // 0x6(0x1)
	bool bUseGrouping : 1;  // 0x6(0x1)
	char pad_7[1];  // 0x7(0x1)
	int32_t MinimumIntegralDigits;  // 0x8(0x4)
	int32_t MaximumIntegralDigits;  // 0xC(0x4)
	int32_t MinimumFractionalDigits;  // 0x10(0x4)
	int32_t MaximumFractionalDigits;  // 0x14(0x4)
	struct FString CurrencyCode;  // 0x18(0x10)
	struct FText ReturnValue;  // 0x28(0x18)

}; 
// Function Engine.GameUserSettings.GetDesktopResolution
// Size: 0x8(Inherited: 0x0) 
struct FGetDesktopResolution
{
	struct FIntPoint ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.PrimitiveComponentInstanceData
// Size: 0x100(Inherited: 0xB8) 
struct FPrimitiveComponentInstanceData : public FSceneComponentInstanceData
{
	char pad_184[8];  // 0xB8(0x8)
	struct FTransform ComponentTransform;  // 0xC0(0x30)
	int32_t VisibilityId;  // 0xF0(0x4)
	char pad_244[4];  // 0xF4(0x4)
	struct UPrimitiveComponent* LODParent;  // 0xF8(0x8)

}; 
// Function Engine.BlueprintPathsLibrary.AutomationTransientDir
// Size: 0x10(Inherited: 0x0) 
struct FAutomationTransientDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// ScriptStruct Engine.QuartzTimeSignature
// Size: 0x18(Inherited: 0x0) 
struct FQuartzTimeSignature
{
	int32_t NumBeats;  // 0x0(0x4)
	uint8_t  BeatType;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct TArray<struct FQuartzPulseOverrideStep> OptionalPulseOverride;  // 0x8(0x10)

}; 
// Function Engine.KismetMathLibrary.Less_TimespanTimespan
// Size: 0x18(Inherited: 0x0) 
struct FLess_TimespanTimespan
{
	struct FTimespan A;  // 0x0(0x8)
	struct FTimespan B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.QuartzQuantizationBoundary
// Size: 0xC(Inherited: 0x0) 
struct FQuartzQuantizationBoundary
{
	uint8_t  Quantization;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float Multiplier;  // 0x4(0x4)
	uint8_t  CountingReferencePoint;  // 0x8(0x1)
	char pad_9_1 : 7;  // 0x9(0x1)
	bool bFireOnClockStart : 1;  // 0x9(0x1)
	char pad_10[2];  // 0xA(0x2)

}; 
// Function Engine.SkeletalMeshComponent.GetAnimInstance
// Size: 0x8(Inherited: 0x0) 
struct FGetAnimInstance
{
	struct UAnimInstance* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.AnimSingleNodeInstance.GetAnimationAsset
// Size: 0x8(Inherited: 0x0) 
struct FGetAnimationAsset
{
	struct UAnimationAsset* ReturnValue;  // 0x0(0x8)

}; 
// ScriptStruct Engine.QuartzTransportTimeStamp
// Size: 0x10(Inherited: 0x0) 
struct FQuartzTransportTimeStamp
{
	int32_t Bars;  // 0x0(0x4)
	int32_t Beat;  // 0x4(0x4)
	float BeatFraction;  // 0x8(0x4)
	float Seconds;  // 0xC(0x4)

}; 
// ScriptStruct Engine.ReverbSettings
// Size: 0x20(Inherited: 0x0) 
struct FReverbSettings
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bApplyReverb : 1;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct UReverbEffect* ReverbEffect;  // 0x8(0x8)
	struct USoundEffectSubmixPreset* ReverbPluginEffect;  // 0x10(0x8)
	float Volume;  // 0x18(0x4)
	float FadeTime;  // 0x1C(0x4)

}; 
// Function Engine.StaticMeshComponent.SetStaticMesh
// Size: 0x10(Inherited: 0x0) 
struct FSetStaticMesh
{
	struct UStaticMesh* NewMesh;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// ScriptStruct Engine.TransformBase
// Size: 0x28(Inherited: 0x0) 
struct FTransformBase
{
	struct FName Node;  // 0x0(0x8)
	struct FTransformBaseConstraint Constraints[2];  // 0x8(0x20)

}; 
// Function Engine.AnimInstance.GetRelevantAnimTime
// Size: 0xC(Inherited: 0x0) 
struct FGetRelevantAnimTime
{
	int32_t MachineIndex;  // 0x0(0x4)
	int32_t StateIndex;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// ScriptStruct Engine.RootMotionSource
// Size: 0xA0(Inherited: 0x0) 
struct FRootMotionSource
{
	char pad_0[16];  // 0x0(0x10)
	uint16_t Priority;  // 0x10(0x2)
	uint16_t LocalID;  // 0x12(0x2)
	uint8_t  AccumulateMode;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)
	struct FName InstanceName;  // 0x18(0x8)
	float StartTime;  // 0x20(0x4)
	float CurrentTime;  // 0x24(0x4)
	float PreviousTime;  // 0x28(0x4)
	float Duration;  // 0x2C(0x4)
	struct FRootMotionSourceStatus Status;  // 0x30(0x1)
	struct FRootMotionSourceSettings Settings;  // 0x31(0x1)
	char pad_50_1 : 7;  // 0x32(0x1)
	bool bInLocalSpace : 1;  // 0x32(0x1)
	char pad_51[13];  // 0x33(0xD)
	struct FRootMotionMovementParams RootMotionParams;  // 0x40(0x40)
	struct FRootMotionFinishVelocitySettings FinishVelocityParams;  // 0x80(0x14)
	char pad_148[12];  // 0x94(0xC)

}; 
// ScriptStruct Engine.RootMotionFinishVelocitySettings
// Size: 0x14(Inherited: 0x0) 
struct FRootMotionFinishVelocitySettings
{
	uint8_t  mode;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FVector SetVelocity;  // 0x4(0xC)
	float ClampVelocity;  // 0x10(0x4)

}; 
// Function Engine.KismetMathLibrary.Quat_Rotator
// Size: 0x20(Inherited: 0x0) 
struct FQuat_Rotator
{
	struct FQuat Q;  // 0x0(0x10)
	struct FRotator ReturnValue;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// ScriptStruct Engine.RootMotionSourceStatus
// Size: 0x1(Inherited: 0x0) 
struct FRootMotionSourceStatus
{
	char Flags;  // 0x0(0x1)

}; 
// ScriptStruct Engine.RootMotionSource_MoveToDynamicForce
// Size: 0xD0(Inherited: 0xA0) 
struct FRootMotionSource_MoveToDynamicForce : public FRootMotionSource
{
	struct FVector StartLocation;  // 0x98(0xC)
	struct FVector InitialTargetLocation;  // 0xA4(0xC)
	struct FVector TargetLocation;  // 0xB0(0xC)
	char pad_196_1 : 7;  // 0xC4(0x1)
	bool bRestrictSpeedToExpected : 1;  // 0xBC(0x1)
	struct UCurveVector* PathOffsetCurve;  // 0xC0(0x8)
	struct UCurveFloat* TimeMappingCurve;  // 0xC8(0x8)

}; 
// Function Engine.KismetMathLibrary.Normal
// Size: 0x1C(Inherited: 0x0) 
struct FNormal
{
	struct FVector A;  // 0x0(0xC)
	float Tolerance;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// ScriptStruct Engine.CameraExposureSettings
// Size: 0x40(Inherited: 0x0) 
struct FCameraExposureSettings
{
	char EAutoExposureMethod Method;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float LowPercent;  // 0x4(0x4)
	float HighPercent;  // 0x8(0x4)
	float MinBrightness;  // 0xC(0x4)
	float MaxBrightness;  // 0x10(0x4)
	float SpeedUp;  // 0x14(0x4)
	float SpeedDown;  // 0x18(0x4)
	float Bias;  // 0x1C(0x4)
	struct UCurveFloat* BiasCurve;  // 0x20(0x8)
	struct UTexture* MeterMask;  // 0x28(0x8)
	float HistogramLogMin;  // 0x30(0x4)
	float HistogramLogMax;  // 0x34(0x4)
	float CalibrationConstant;  // 0x38(0x4)
	char ApplyPhysicalCameraExposure : 1;  // 0x3C(0x1)
	char pad_60_1 : 7;  // 0x3C(0x1)
	char pad_61[4];  // 0x3D(0x4)

}; 
// ScriptStruct Engine.LensImperfectionSettings
// Size: 0x20(Inherited: 0x0) 
struct FLensImperfectionSettings
{
	struct UTexture* DirtMask;  // 0x0(0x8)
	float DirtMaskIntensity;  // 0x8(0x4)
	struct FLinearColor DirtMaskTint;  // 0xC(0x10)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.SkinnedMeshComponent.GetForcedLOD
// Size: 0x4(Inherited: 0x0) 
struct FGetForcedLOD
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.MakePulsatingValue
// Size: 0x10(Inherited: 0x0) 
struct FMakePulsatingValue
{
	float InCurrentTime;  // 0x0(0x4)
	float InPulsesPerSecond;  // 0x4(0x4)
	float InPhase;  // 0x8(0x4)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.GameplayStatics.ApplyRadialDamage
// Size: 0x50(Inherited: 0x0) 
struct FApplyRadialDamage
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float BaseDamage;  // 0x8(0x4)
	struct FVector Origin;  // 0xC(0xC)
	float DamageRadius;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)
	UDamageType* DamageTypeClass;  // 0x20(0x8)
	struct TArray<struct AActor*> IgnoreActors;  // 0x28(0x10)
	struct AActor* DamageCauser;  // 0x38(0x8)
	struct AController* InstigatedByController;  // 0x40(0x8)
	char pad_72_1 : 7;  // 0x48(0x1)
	bool bDoFullDamage : 1;  // 0x48(0x1)
	char ECollisionChannel DamagePreventionChannel;  // 0x49(0x1)
	char pad_74_1 : 7;  // 0x4A(0x1)
	bool ReturnValue : 1;  // 0x4A(0x1)
	char pad_75[5];  // 0x4B(0x5)

}; 
// ScriptStruct Engine.ConvolutionBloomSettings
// Size: 0x28(Inherited: 0x0) 
struct FConvolutionBloomSettings
{
	struct UTexture2D* Texture;  // 0x0(0x8)
	float Size;  // 0x8(0x4)
	struct FVector2D CenterUV;  // 0xC(0x8)
	float PreFilterMin;  // 0x14(0x4)
	float PreFilterMax;  // 0x18(0x4)
	float PreFilterMult;  // 0x1C(0x4)
	float BufferScale;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)

}; 
// ScriptStruct Engine.ColorGradingSettings
// Size: 0x150(Inherited: 0x0) 
struct FColorGradingSettings
{
	struct FColorGradePerRangeSettings Global;  // 0x0(0x50)
	struct FColorGradePerRangeSettings Shadows;  // 0x50(0x50)
	struct FColorGradePerRangeSettings Midtones;  // 0xA0(0x50)
	struct FColorGradePerRangeSettings Highlights;  // 0xF0(0x50)
	float ShadowsMax;  // 0x140(0x4)
	float HighlightsMin;  // 0x144(0x4)
	char pad_328[8];  // 0x148(0x8)

}; 
// Function Engine.SkinnedMeshComponent.SetRenderStatic
// Size: 0x1(Inherited: 0x0) 
struct FSetRenderStatic
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.Percent_FloatFloat
// Size: 0xC(Inherited: 0x0) 
struct FPercent_FloatFloat
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// ScriptStruct Engine.EngineShowFlagsSetting
// Size: 0x18(Inherited: 0x0) 
struct FEngineShowFlagsSetting
{
	struct FString ShowFlagName;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool Enabled : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.SingleAnimationPlayData
// Size: 0x18(Inherited: 0x0) 
struct FSingleAnimationPlayData
{
	struct UAnimationAsset* AnimToPlay;  // 0x0(0x8)
	char bSavedLooping : 1;  // 0x8(0x1)
	char bSavedPlaying : 1;  // 0x8(0x1)
	char pad_8_1 : 6;  // 0x8(0x1)
	char pad_9[4];  // 0x9(0x4)
	float SavedPosition;  // 0xC(0x4)
	float SavedPlayRate;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// ScriptStruct Engine.SkeletalMaterial
// Size: 0x28(Inherited: 0x0) 
struct FSkeletalMaterial
{
	struct UMaterialInterface* MaterialInterface;  // 0x0(0x8)
	struct FName MaterialSlotName;  // 0x8(0x8)
	struct FMeshUVChannelInfo UVChannelData;  // 0x10(0x14)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.VolumetricCloudComponent.SetViewSampleCountScale
// Size: 0x4(Inherited: 0x0) 
struct FSetViewSampleCountScale
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.SplineComponent.AddSplineWorldPoint
// Size: 0xC(Inherited: 0x0) 
struct FAddSplineWorldPoint
{
	struct FVector position;  // 0x0(0xC)

}; 
// ScriptStruct Engine.ClothingAssetData_Legacy
// Size: 0x70(Inherited: 0x0) 
struct FClothingAssetData_Legacy
{
	struct FName AssetName;  // 0x0(0x8)
	struct FString ApexFileName;  // 0x8(0x10)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bClothPropertiesChanged : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)
	struct FClothPhysicsProperties_Legacy PhysicsProperties;  // 0x1C(0x50)
	char pad_108[4];  // 0x6C(0x4)

}; 
// Function Engine.KismetMathLibrary.Conv_IntPointToVector2D
// Size: 0x10(Inherited: 0x0) 
struct FConv_IntPointToVector2D
{
	struct FIntPoint InIntPoint;  // 0x0(0x8)
	struct FVector2D ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Add_VectorVector
// Size: 0x24(Inherited: 0x0) 
struct FAdd_VectorVector
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetInputLibrary.InputChord_GetDisplayName
// Size: 0x38(Inherited: 0x0) 
struct FInputChord_GetDisplayName
{
	struct FInputChord Key;  // 0x0(0x20)
	struct FText ReturnValue;  // 0x20(0x18)

}; 
// ScriptStruct Engine.ClothPhysicsProperties_Legacy
// Size: 0x50(Inherited: 0x0) 
struct FClothPhysicsProperties_Legacy
{
	float VerticalResistance;  // 0x0(0x4)
	float HorizontalResistance;  // 0x4(0x4)
	float BendResistance;  // 0x8(0x4)
	float ShearResistance;  // 0xC(0x4)
	float Friction;  // 0x10(0x4)
	float Damping;  // 0x14(0x4)
	float TetherStiffness;  // 0x18(0x4)
	float TetherLimit;  // 0x1C(0x4)
	float Drag;  // 0x20(0x4)
	float StiffnessFrequency;  // 0x24(0x4)
	float GravityScale;  // 0x28(0x4)
	float MassScale;  // 0x2C(0x4)
	float InertiaBlend;  // 0x30(0x4)
	float SelfCollisionThickness;  // 0x34(0x4)
	float SelfCollisionSquashScale;  // 0x38(0x4)
	float SelfCollisionStiffness;  // 0x3C(0x4)
	float SolverFrequency;  // 0x40(0x4)
	float FiberCompression;  // 0x44(0x4)
	float FiberExpansion;  // 0x48(0x4)
	float FiberResistance;  // 0x4C(0x4)

}; 
// ScriptStruct Engine.BoneMirrorInfo
// Size: 0x8(Inherited: 0x0) 
struct FBoneMirrorInfo
{
	int32_t SourceIndex;  // 0x0(0x4)
	char EAxis BoneFlipAxis;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.KismetNodeHelperLibrary.GetFirstUnmarkedBit
// Size: 0x10(Inherited: 0x0) 
struct FGetFirstUnmarkedBit
{
	int32_t Data;  // 0x0(0x4)
	int32_t StartIdx;  // 0x4(0x4)
	int32_t NumBits;  // 0x8(0x4)
	int32_t ReturnValue;  // 0xC(0x4)

}; 
// ScriptStruct Engine.SkeletalMeshComponentEndPhysicsTickFunction
// Size: 0x30(Inherited: 0x28) 
struct FSkeletalMeshComponentEndPhysicsTickFunction : public FTickFunction
{
	char pad_40[8];  // 0x28(0x8)

}; 
// ScriptStruct Engine.SkeletalMeshLODGroupSettings
// Size: 0x80(Inherited: 0x0) 
struct FSkeletalMeshLODGroupSettings
{
	struct FPerPlatformFloat ScreenSize;  // 0x0(0x4)
	float LODHysteresis;  // 0x4(0x4)
	uint8_t  BoneFilterActionOption;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)
	struct TArray<struct FBoneFilter> BoneList;  // 0x10(0x10)
	struct TArray<struct FName> BonesToPrioritize;  // 0x20(0x10)
	float WeightOfPrioritization;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)
	struct UAnimSequence* BakePose;  // 0x38(0x8)
	struct FSkeletalMeshOptimizationSettings ReductionSettings;  // 0x40(0x3C)
	char pad_124[4];  // 0x7C(0x4)

}; 
// ScriptStruct Engine.SkeletalMeshSamplingBuiltData
// Size: 0x20(Inherited: 0x0) 
struct FSkeletalMeshSamplingBuiltData
{
	struct TArray<struct FSkeletalMeshSamplingLODBuiltData> WholeMeshBuiltData;  // 0x0(0x10)
	struct TArray<struct FSkeletalMeshSamplingRegionBuiltData> RegionBuiltData;  // 0x10(0x10)

}; 
// ScriptStruct Engine.SkeletalMeshSamplingRegionBuiltData
// Size: 0x78(Inherited: 0x0) 
struct FSkeletalMeshSamplingRegionBuiltData
{
	char pad_0[120];  // 0x0(0x78)

}; 
// ScriptStruct Engine.SkeletalMeshSamplingLODBuiltData
// Size: 0x48(Inherited: 0x0) 
struct FSkeletalMeshSamplingLODBuiltData
{
	char pad_0[72];  // 0x0(0x48)

}; 
// Function Engine.SkinnedMeshComponent.IsUsingSkinWeightProfile
// Size: 0x1(Inherited: 0x0) 
struct FIsUsingSkinWeightProfile
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.SkeletalMeshSamplingRegionBoneFilter
// Size: 0xC(Inherited: 0x0) 
struct FSkeletalMeshSamplingRegionBoneFilter
{
	struct FName BoneName;  // 0x0(0x8)
	char bIncludeOrExclude : 1;  // 0x8(0x1)
	char bApplyToChildren : 1;  // 0x8(0x1)
	char pad_8_1 : 6;  // 0x8(0x1)
	char pad_9[4];  // 0x9(0x4)

}; 
// ScriptStruct Engine.SkeletalMeshSamplingRegionMaterialFilter
// Size: 0x8(Inherited: 0x0) 
struct FSkeletalMeshSamplingRegionMaterialFilter
{
	struct FName MaterialName;  // 0x0(0x8)

}; 
// Function Engine.GameplayStatics.GetWorldOriginLocation
// Size: 0x18(Inherited: 0x0) 
struct FGetWorldOriginLocation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FIntVector ReturnValue;  // 0x8(0xC)
	char pad_20[4];  // 0x14(0x4)

}; 
// ScriptStruct Engine.NameMapping
// Size: 0x10(Inherited: 0x0) 
struct FNameMapping
{
	struct FName NodeName;  // 0x0(0x8)
	struct FName BoneName;  // 0x8(0x8)

}; 
// Function Engine.SplineComponent.SetWorldLocationAtSplinePoint
// Size: 0x10(Inherited: 0x0) 
struct FSetWorldLocationAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	struct FVector InLocation;  // 0x4(0xC)

}; 
// ScriptStruct Engine.SkelMeshComponentLODInfo
// Size: 0x48(Inherited: 0x0) 
struct FSkelMeshComponentLODInfo
{
	struct TArray<bool> HiddenMaterials;  // 0x0(0x10)
	char pad_16[56];  // 0x10(0x38)

}; 
// ScriptStruct Engine.SkinWeightProfileManagerTickFunction
// Size: 0x30(Inherited: 0x28) 
struct FSkinWeightProfileManagerTickFunction : public FTickFunction
{
	char pad_40[8];  // 0x28(0x8)

}; 
// Function Engine.SoundSubmix.StartEnvelopeFollowing
// Size: 0x8(Inherited: 0x0) 
struct FStartEnvelopeFollowing
{
	struct UObject* WorldContextObject;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.FInterpEaseInOut
// Size: 0x14(Inherited: 0x0) 
struct FFInterpEaseInOut
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	float Alpha;  // 0x8(0x4)
	float Exponent;  // 0xC(0x4)
	float ReturnValue;  // 0x10(0x4)

}; 
// ScriptStruct Engine.TentDistribution
// Size: 0xC(Inherited: 0x0) 
struct FTentDistribution
{
	float TipAltitude;  // 0x0(0x4)
	float TipValue;  // 0x4(0x4)
	float Width;  // 0x8(0x4)

}; 
// ScriptStruct Engine.TextureFormatSettings
// Size: 0x2(Inherited: 0x0) 
struct FTextureFormatSettings
{
	char TextureCompressionSettings CompressionSettings;  // 0x0(0x1)
	char CompressionNoAlpha : 1;  // 0x1(0x1)
	char CompressionNone : 1;  // 0x1(0x1)
	char CompressionYCoCg : 1;  // 0x1(0x1)
	char sRGB : 1;  // 0x1(0x1)
	char pad_1_1 : 4;  // 0x1(0x1)

}; 
// Function Engine.KismetMathLibrary.MakeDateTime
// Size: 0x28(Inherited: 0x0) 
struct FMakeDateTime
{
	int32_t Year;  // 0x0(0x4)
	int32_t Month;  // 0x4(0x4)
	int32_t Day;  // 0x8(0x4)
	int32_t Hour;  // 0xC(0x4)
	int32_t Minute;  // 0x10(0x4)
	int32_t Second;  // 0x14(0x4)
	int32_t Millisecond;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)
	struct FDateTime ReturnValue;  // 0x20(0x8)

}; 
// ScriptStruct Engine.SoundAttenuationPluginSettings
// Size: 0x30(Inherited: 0x0) 
struct FSoundAttenuationPluginSettings
{
	struct TArray<struct USpatializationPluginSourceSettingsBase*> SpatializationPluginSettingsArray;  // 0x0(0x10)
	struct TArray<struct UOcclusionPluginSourceSettingsBase*> OcclusionPluginSettingsArray;  // 0x10(0x10)
	struct TArray<struct UReverbPluginSourceSettingsBase*> ReverbPluginSettingsArray;  // 0x20(0x10)

}; 
// ScriptStruct Engine.SoundClassEditorData
// Size: 0x8(Inherited: 0x0) 
struct FSoundClassEditorData
{
	char pad_0[8];  // 0x0(0x8)

}; 
// ScriptStruct Engine.SoundConcurrencySettings
// Size: 0x28(Inherited: 0x0) 
struct FSoundConcurrencySettings
{
	int32_t MaxCount;  // 0x0(0x4)
	char bLimitToOwner : 1;  // 0x4(0x1)
	char pad_4_1 : 7;  // 0x4(0x1)
	char pad_5[4];  // 0x5(0x4)
	char EMaxConcurrentResolutionRule ResolutionRule;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	float RetriggerTime;  // 0xC(0x4)
	float VolumeScale;  // 0x10(0x4)
	uint8_t  VolumeScaleMode;  // 0x14(0x4)
	float VolumeScaleAttackTime;  // 0x18(0x4)
	char bVolumeScaleCanRelease : 1;  // 0x1C(0x1)
	char pad_28_1 : 7;  // 0x1C(0x1)
	char pad_29[4];  // 0x1D(0x4)
	float VolumeScaleReleaseTime;  // 0x20(0x4)
	float VoiceStealReleaseTime;  // 0x24(0x4)

}; 
// Function Engine.KismetMathLibrary.GetMaxElement
// Size: 0x10(Inherited: 0x0) 
struct FGetMaxElement
{
	struct FVector A;  // 0x0(0xC)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.GameModeBase.FindPlayerStart
// Size: 0x20(Inherited: 0x0) 
struct FFindPlayerStart
{
	struct AController* Player;  // 0x0(0x8)
	struct FString IncomingName;  // 0x8(0x10)
	struct AActor* ReturnValue;  // 0x18(0x8)

}; 
// ScriptStruct Engine.SoundNodeEditorData
// Size: 0x8(Inherited: 0x0) 
struct FSoundNodeEditorData
{
	char pad_0[8];  // 0x0(0x8)

}; 
// Function Engine.LightComponent.SetAffectDynamicIndirectLighting
// Size: 0x1(Inherited: 0x0) 
struct FSetAffectDynamicIndirectLighting
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// ScriptStruct Engine.SourceEffectChainEntry
// Size: 0x10(Inherited: 0x0) 
struct FSourceEffectChainEntry
{
	struct USoundEffectSourcePreset* Preset;  // 0x0(0x8)
	char bBypass : 1;  // 0x8(0x1)
	char pad_8_1 : 7;  // 0x8(0x1)
	char pad_9[8];  // 0x9(0x8)

}; 
// Function Engine.SceneCaptureComponent2D.RemoveBlendable
// Size: 0x10(Inherited: 0x0) 
struct FRemoveBlendable
{
	struct TScriptInterface<IBlendableInterface> InBlendableObject;  // 0x0(0x10)

}; 
// ScriptStruct Engine.SoundClassAdjuster
// Size: 0x20(Inherited: 0x0) 
struct FSoundClassAdjuster
{
	struct USoundClass* SoundClassObject;  // 0x0(0x8)
	float VolumeAdjuster;  // 0x8(0x4)
	float PitchAdjuster;  // 0xC(0x4)
	float LowPassFilterFrequency;  // 0x10(0x4)
	char bApplyToChildren : 1;  // 0x14(0x1)
	char pad_20_1 : 7;  // 0x14(0x1)
	char pad_21[4];  // 0x15(0x4)
	float VoiceCenterChannelVolumeAdjuster;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetStringLibrary.BuildString_Int
// Size: 0x48(Inherited: 0x0) 
struct FBuildString_Int
{
	struct FString AppendTo;  // 0x0(0x10)
	struct FString prefix;  // 0x10(0x10)
	int32_t inInt;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)
	struct FString suffix;  // 0x28(0x10)
	struct FString ReturnValue;  // 0x38(0x10)

}; 
// Function Engine.SkeletalMeshComponent.SetClothMaxDistanceScale
// Size: 0x4(Inherited: 0x0) 
struct FSetClothMaxDistanceScale
{
	float Scale;  // 0x0(0x4)

}; 
// ScriptStruct Engine.SoundModulationDefaultRoutingSettings
// Size: 0x48(Inherited: 0x40) 
struct FSoundModulationDefaultRoutingSettings : public FSoundModulationDefaultSettings
{
	uint8_t  VolumeRouting;  // 0x40(0x1)
	uint8_t  PitchRouting;  // 0x41(0x1)
	uint8_t  HighpassRouting;  // 0x42(0x1)
	uint8_t  LowpassRouting;  // 0x43(0x1)
	char pad_68[4];  // 0x44(0x4)

}; 
// ScriptStruct Engine.DistanceDatum
// Size: 0x14(Inherited: 0x0) 
struct FDistanceDatum
{
	float FadeInDistanceStart;  // 0x0(0x4)
	float FadeInDistanceEnd;  // 0x4(0x4)
	float FadeOutDistanceStart;  // 0x8(0x4)
	float FadeOutDistanceEnd;  // 0xC(0x4)
	float Volume;  // 0x10(0x4)

}; 
// ScriptStruct Engine.ModulatorContinuousParams
// Size: 0x20(Inherited: 0x0) 
struct FModulatorContinuousParams
{
	struct FName ParameterName;  // 0x0(0x8)
	float Default;  // 0x8(0x4)
	float MinInput;  // 0xC(0x4)
	float MaxInput;  // 0x10(0x4)
	float MinOutput;  // 0x14(0x4)
	float MaxOutput;  // 0x18(0x4)
	char ModulationParamMode ParamMode;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// Function Engine.AudioVolume.SetSubmixSendSettings
// Size: 0x10(Inherited: 0x0) 
struct FSetSubmixSendSettings
{
	struct TArray<struct FAudioVolumeSubmixSendSettings> NewSubmixSendSettings;  // 0x0(0x10)

}; 
// ScriptStruct Engine.SoundSubmixSpectralAnalysisBandSettings
// Size: 0x10(Inherited: 0x0) 
struct FSoundSubmixSpectralAnalysisBandSettings
{
	float BandFrequency;  // 0x0(0x4)
	int32_t AttackTimeMsec;  // 0x4(0x4)
	int32_t ReleaseTimeMsec;  // 0x8(0x4)
	float QFactor;  // 0xC(0x4)

}; 
// ScriptStruct Engine.SoundWaveSpectralTimeData
// Size: 0x18(Inherited: 0x0) 
struct FSoundWaveSpectralTimeData
{
	struct TArray<struct FSoundWaveSpectralDataEntry> Data;  // 0x0(0x10)
	float TimeSec;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// ScriptStruct Engine.SplineInstanceData
// Size: 0x1A0(Inherited: 0xB8) 
struct FSplineInstanceData : public FSceneComponentInstanceData
{
	char pad_184_1 : 7;  // 0xB8(0x1)
	bool bSplineHasBeenEdited : 1;  // 0xB8(0x1)
	char pad_185[7];  // 0xB9(0x7)
	struct FSplineCurves SplineCurves;  // 0xC0(0x70)
	struct FSplineCurves SplineCurvesPreUCS;  // 0x130(0x70)

}; 
// ScriptStruct Engine.SplineMeshInstanceData
// Size: 0xE8(Inherited: 0xB8) 
struct FSplineMeshInstanceData : public FSceneComponentInstanceData
{
	struct FVector StartPos;  // 0xB8(0xC)
	struct FVector EndPos;  // 0xC4(0xC)
	struct FVector StartTangent;  // 0xD0(0xC)
	struct FVector EndTangent;  // 0xDC(0xC)

}; 
// ScriptStruct Engine.SplineMeshParams
// Size: 0x58(Inherited: 0x0) 
struct FSplineMeshParams
{
	struct FVector StartPos;  // 0x0(0xC)
	struct FVector StartTangent;  // 0xC(0xC)
	struct FVector2D StartScale;  // 0x18(0x8)
	float StartRoll;  // 0x20(0x4)
	struct FVector2D StartOffset;  // 0x24(0x8)
	struct FVector EndPos;  // 0x2C(0xC)
	struct FVector2D EndScale;  // 0x38(0x8)
	struct FVector EndTangent;  // 0x40(0xC)
	float EndRoll;  // 0x4C(0x4)
	struct FVector2D EndOffset;  // 0x50(0x8)

}; 
// ScriptStruct Engine.MaterialRemapIndex
// Size: 0x18(Inherited: 0x0) 
struct FMaterialRemapIndex
{
	uint32_t ImportVersionKey;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct TArray<int32_t> MaterialRemap;  // 0x8(0x10)

}; 
// ScriptStruct Engine.MeshSectionInfoMap
// Size: 0x50(Inherited: 0x0) 
struct FMeshSectionInfoMap
{
	struct TMap<uint32_t, struct FMeshSectionInfo> Map;  // 0x0(0x50)

}; 
// ScriptStruct Engine.StaticMeshSourceModel
// Size: 0x70(Inherited: 0x0) 
struct FStaticMeshSourceModel
{
	struct FMeshBuildSettings BuildSettings;  // 0x0(0x30)
	struct FMeshReductionSettings ReductionSettings;  // 0x30(0x24)
	float LODDistance;  // 0x54(0x4)
	struct FPerPlatformFloat ScreenSize;  // 0x58(0x4)
	char pad_92[4];  // 0x5C(0x4)
	struct FString SourceImportFilename;  // 0x60(0x10)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetFrustumLeftPlane
// Size: 0x60(Inherited: 0x0) 
struct FMatrix_GetFrustumLeftPlane
{
	struct FMatrix M;  // 0x0(0x40)
	struct FPlane OutPlane;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool ReturnValue : 1;  // 0x50(0x1)
	char pad_81[15];  // 0x51(0xF)

}; 
// ScriptStruct Engine.StaticMeshComponentInstanceData
// Size: 0x140(Inherited: 0x100) 
struct FStaticMeshComponentInstanceData : public FPrimitiveComponentInstanceData
{
	struct UStaticMesh* StaticMesh;  // 0x100(0x8)
	struct TArray<struct FStaticMeshVertexColorLODData> VertexColorLODs;  // 0x108(0x10)
	struct TArray<struct FGuid> CachedStaticLighting;  // 0x118(0x10)
	struct TArray<struct FStreamingTextureBuildInfo> StreamingTextureData;  // 0x128(0x10)
	char pad_312[8];  // 0x138(0x8)

}; 
// ScriptStruct Engine.StreamingTextureBuildInfo
// Size: 0xC(Inherited: 0x0) 
struct FStreamingTextureBuildInfo
{
	uint32_t PackedRelativeBox;  // 0x0(0x4)
	int32_t TextureLevelIndex;  // 0x4(0x4)
	float TexelFactor;  // 0x8(0x4)

}; 
// ScriptStruct Engine.StaticParameterSet
// Size: 0x40(Inherited: 0x0) 
struct FStaticParameterSet
{
	struct TArray<struct FStaticSwitchParameter> StaticSwitchParameters;  // 0x0(0x10)
	struct TArray<struct FStaticComponentMaskParameter> StaticComponentMaskParameters;  // 0x10(0x10)
	struct TArray<struct FStaticTerrainLayerWeightParameter> TerrainLayerWeightParameters;  // 0x20(0x10)
	struct TArray<struct FStaticMaterialLayersParameter> MaterialLayersParameters;  // 0x30(0x10)

}; 
// Function Engine.PhysicsConstraintComponent.GetCurrentTwist
// Size: 0x4(Inherited: 0x0) 
struct FGetCurrentTwist
{
	float ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.StaticParameterBase
// Size: 0x24(Inherited: 0x0) 
struct FStaticParameterBase
{
	struct FMaterialParameterInfo ParameterInfo;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bOverride : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	struct FGuid ExpressionGUID;  // 0x14(0x10)

}; 
// ScriptStruct Engine.StaticMaterialLayersParameter
// Size: 0x68(Inherited: 0x24) 
struct FStaticMaterialLayersParameter : public FStaticParameterBase
{
	char pad_36[4];  // 0x24(0x4)
	struct FMaterialLayersFunctions Value;  // 0x28(0x40)

}; 
// Function Engine.SpringArmComponent.GetUnfixedCameraPosition
// Size: 0xC(Inherited: 0x0) 
struct FGetUnfixedCameraPosition
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// ScriptStruct Engine.StaticComponentMaskParameter
// Size: 0x28(Inherited: 0x24) 
struct FStaticComponentMaskParameter : public FStaticParameterBase
{
	char pad_36_1 : 7;  // 0x24(0x1)
	bool R : 1;  // 0x24(0x1)
	char pad_37_1 : 7;  // 0x25(0x1)
	bool G : 1;  // 0x25(0x1)
	char pad_38_1 : 7;  // 0x26(0x1)
	bool B : 1;  // 0x26(0x1)
	char pad_39_1 : 7;  // 0x27(0x1)
	bool A : 1;  // 0x27(0x1)

}; 
// ScriptStruct Engine.StaticSwitchParameter
// Size: 0x28(Inherited: 0x24) 
struct FStaticSwitchParameter : public FStaticParameterBase
{
	char pad_36_1 : 7;  // 0x24(0x1)
	bool Value : 1;  // 0x24(0x1)
	char pad_37[3];  // 0x25(0x3)

}; 
// ScriptStruct Engine.SubsurfaceProfileStruct
// Size: 0x8C(Inherited: 0x0) 
struct FSubsurfaceProfileStruct
{
	struct FLinearColor SurfaceAlbedo;  // 0x0(0x10)
	struct FLinearColor MeanFreePathColor;  // 0x10(0x10)
	float MeanFreePathDistance;  // 0x20(0x4)
	float WorldUnitScale;  // 0x24(0x4)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bEnableBurley : 1;  // 0x28(0x1)
	char pad_41[3];  // 0x29(0x3)
	float ScatterRadius;  // 0x2C(0x4)
	struct FLinearColor SubsurfaceColor;  // 0x30(0x10)
	struct FLinearColor FalloffColor;  // 0x40(0x10)
	struct FLinearColor BoundaryColorBleed;  // 0x50(0x10)
	float ExtinctionScale;  // 0x60(0x4)
	float NormalScale;  // 0x64(0x4)
	float ScatteringDistribution;  // 0x68(0x4)
	float IOR;  // 0x6C(0x4)
	float Roughness0;  // 0x70(0x4)
	float Roughness1;  // 0x74(0x4)
	float LobeMix;  // 0x78(0x4)
	struct FLinearColor TransmissionTintColor;  // 0x7C(0x10)

}; 
// Function Engine.BlueprintPlatformLibrary.CancelLocalNotification
// Size: 0x10(Inherited: 0x0) 
struct FCancelLocalNotification
{
	struct FString ActivationEvent;  // 0x0(0x10)

}; 
// ScriptStruct Engine.TextureSource
// Size: 0x38(Inherited: 0x0) 
struct FTextureSource
{
	char pad_0[56];  // 0x0(0x38)

}; 
// Function Engine.GameplayStatics.SpawnEmitterAttached
// Size: 0x48(Inherited: 0x0) 
struct FSpawnEmitterAttached
{
	struct UParticleSystem* EmitterTemplate;  // 0x0(0x8)
	struct USceneComponent* AttachToComponent;  // 0x8(0x8)
	struct FName AttachPointName;  // 0x10(0x8)
	struct FVector Location;  // 0x18(0xC)
	struct FRotator Rotation;  // 0x24(0xC)
	struct FVector Scale;  // 0x30(0xC)
	char EAttachLocation LocationType;  // 0x3C(0x1)
	char pad_61_1 : 7;  // 0x3D(0x1)
	bool bAutoDestroy : 1;  // 0x3D(0x1)
	uint8_t  PoolingMethod;  // 0x3E(0x1)
	char pad_63_1 : 7;  // 0x3F(0x1)
	bool bAutoActivate : 1;  // 0x3F(0x1)
	struct UParticleSystemComponent* ReturnValue;  // 0x40(0x8)

}; 
// Function Engine.GameplayStatics.SpawnDialogueAttached
// Size: 0x70(Inherited: 0x0) 
struct FSpawnDialogueAttached
{
	struct UDialogueWave* Dialogue;  // 0x0(0x8)
	struct FDialogueContext Context;  // 0x8(0x18)
	struct USceneComponent* AttachToComponent;  // 0x20(0x8)
	struct FName AttachPointName;  // 0x28(0x8)
	struct FVector Location;  // 0x30(0xC)
	struct FRotator Rotation;  // 0x3C(0xC)
	char EAttachLocation LocationType;  // 0x48(0x1)
	char pad_73_1 : 7;  // 0x49(0x1)
	bool bStopWhenAttachedToDestroyed : 1;  // 0x49(0x1)
	char pad_74[2];  // 0x4A(0x2)
	float VolumeMultiplier;  // 0x4C(0x4)
	float PitchMultiplier;  // 0x50(0x4)
	float StartTime;  // 0x54(0x4)
	struct USoundAttenuation* AttenuationSettings;  // 0x58(0x8)
	char pad_96_1 : 7;  // 0x60(0x1)
	bool bAutoDestroy : 1;  // 0x60(0x1)
	char pad_97[7];  // 0x61(0x7)
	struct UAudioComponent* ReturnValue;  // 0x68(0x8)

}; 
// ScriptStruct Engine.Timeline
// Size: 0x98(Inherited: 0x0) 
struct FTimeline
{
	char ETimelineLengthMode LengthMode;  // 0x0(0x1)
	char bLooping : 1;  // 0x1(0x1)
	char bReversePlayback : 1;  // 0x1(0x1)
	char bPlaying : 1;  // 0x1(0x1)
	char pad_1_1 : 5;  // 0x1(0x1)
	char pad_2[3];  // 0x2(0x3)
	float Length;  // 0x4(0x4)
	float PlayRate;  // 0x8(0x4)
	float position;  // 0xC(0x4)
	struct TArray<struct FTimelineEventEntry> Events;  // 0x10(0x10)
	struct TArray<struct FTimelineVectorTrack> InterpVectors;  // 0x20(0x10)
	struct TArray<struct FTimelineFloatTrack> InterpFloats;  // 0x30(0x10)
	struct TArray<struct FTimelineLinearColorTrack> InterpLinearColors;  // 0x40(0x10)
	struct FDelegate TimelinePostUpdateFunc;  // 0x50(0x10)
	struct FDelegate TimelineFinishedFunc;  // 0x60(0x10)
	struct TWeakObjectPtr<UObject> PropertySetObject;  // 0x70(0x8)
	struct FName DirectionPropertyName;  // 0x78(0x8)
	char pad_128[24];  // 0x80(0x18)

}; 
// Function Engine.AnimInstance.GetInstanceTransitionTimeElapsed
// Size: 0xC(Inherited: 0x0) 
struct FGetInstanceTransitionTimeElapsed
{
	int32_t MachineIndex;  // 0x0(0x4)
	int32_t TransitionIndex;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// ScriptStruct Engine.TimelineFloatTrack
// Size: 0x40(Inherited: 0x0) 
struct FTimelineFloatTrack
{
	struct UCurveFloat* FloatCurve;  // 0x0(0x8)
	struct FDelegate InterpFunc;  // 0x8(0x10)
	struct FName TrackName;  // 0x18(0x8)
	struct FName FloatPropertyName;  // 0x20(0x8)
	char pad_40[24];  // 0x28(0x18)

}; 
// ScriptStruct Engine.TimelineVectorTrack
// Size: 0x40(Inherited: 0x0) 
struct FTimelineVectorTrack
{
	struct UCurveVector* VectorCurve;  // 0x0(0x8)
	struct FDelegate InterpFunc;  // 0x8(0x10)
	struct FName TrackName;  // 0x18(0x8)
	struct FName VectorPropertyName;  // 0x20(0x8)
	char pad_40[24];  // 0x28(0x18)

}; 
// Function Engine.SkeletalMeshComponent.GetSkeletalCenterOfMass
// Size: 0xC(Inherited: 0x0) 
struct FGetSkeletalCenterOfMass
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// ScriptStruct Engine.TTTrackBase
// Size: 0x18(Inherited: 0x0) 
struct FTTTrackBase
{
	char pad_0[8];  // 0x0(0x8)
	struct FName TrackName;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bIsExternalCurve : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// ScriptStruct Engine.TTLinearColorTrack
// Size: 0x28(Inherited: 0x20) 
struct FTTLinearColorTrack : public FTTPropertyTrack
{
	struct UCurveLinearColor* CurveLinearColor;  // 0x20(0x8)

}; 
// ScriptStruct Engine.TTFloatTrack
// Size: 0x28(Inherited: 0x20) 
struct FTTFloatTrack : public FTTPropertyTrack
{
	struct UCurveFloat* CurveFloat;  // 0x20(0x8)

}; 
// ScriptStruct Engine.TTEventTrack
// Size: 0x28(Inherited: 0x18) 
struct FTTEventTrack : public FTTTrackBase
{
	struct FName FunctionName;  // 0x18(0x8)
	struct UCurveFloat* CurveKeys;  // 0x20(0x8)

}; 
// Function Engine.KismetMathLibrary.Matrix_RemoveTranslation
// Size: 0x80(Inherited: 0x0) 
struct FMatrix_RemoveTranslation
{
	struct FMatrix M;  // 0x0(0x40)
	struct FMatrix ReturnValue;  // 0x40(0x40)

}; 
// ScriptStruct Engine.TimeStretchCurve
// Size: 0x28(Inherited: 0x0) 
struct FTimeStretchCurve
{
	float SamplingRate;  // 0x0(0x4)
	float CurveValueMinPrecision;  // 0x4(0x4)
	struct TArray<struct FTimeStretchCurveMarker> Markers;  // 0x8(0x10)
	float Sum_dT_i_by_C_i[3];  // 0x18(0xC)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.SkeletalMesh.SetDefaultAnimatingRig
// Size: 0x28(Inherited: 0x0) 
struct FSetDefaultAnimatingRig
{
	struct TSoftObjectPtr<UObject> InAnimatingRig;  // 0x0(0x28)

}; 
// Function Engine.KismetNodeHelperLibrary.GetEnumeratorName
// Size: 0x18(Inherited: 0x0) 
struct FGetEnumeratorName
{
	struct UEnum* Enum;  // 0x0(0x8)
	char EnumeratorValue;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	struct FName ReturnValue;  // 0xC(0x8)
	char pad_20[4];  // 0x14(0x4)

}; 
// ScriptStruct Engine.TimeStretchCurveMarker
// Size: 0x10(Inherited: 0x0) 
struct FTimeStretchCurveMarker
{
	float Time[3];  // 0x0(0xC)
	float Alpha;  // 0xC(0x4)

}; 
// Function Engine.CharacterMovementComponent.K2_GetModifiedMaxAcceleration
// Size: 0x4(Inherited: 0x0) 
struct FK2_GetModifiedMaxAcceleration
{
	float ReturnValue;  // 0x0(0x4)

}; 
// ScriptStruct Engine.TouchInputControl
// Size: 0x68(Inherited: 0x0) 
struct FTouchInputControl
{
	struct UTexture2D* Image1;  // 0x0(0x8)
	struct UTexture2D* Image2;  // 0x8(0x8)
	struct FVector2D Center;  // 0x10(0x8)
	struct FVector2D VisualSize;  // 0x18(0x8)
	struct FVector2D ThumbSize;  // 0x20(0x8)
	struct FVector2D InteractionSize;  // 0x28(0x8)
	struct FVector2D InputScale;  // 0x30(0x8)
	struct FKey MainInputKey;  // 0x38(0x18)
	struct FKey AltInputKey;  // 0x50(0x18)

}; 
// ScriptStruct Engine.LevelCollection
// Size: 0x78(Inherited: 0x0) 
struct FLevelCollection
{
	char pad_0[8];  // 0x0(0x8)
	struct AGameStateBase* GameState;  // 0x8(0x8)
	struct UNetDriver* NetDriver;  // 0x10(0x8)
	struct UDemoNetDriver* DemoNetDriver;  // 0x18(0x8)
	struct ULevel* PersistentLevel;  // 0x20(0x8)
	struct TSet<struct ULevel*> Levels;  // 0x28(0x50)

}; 
// Function Engine.KismetMathLibrary.EqualExactly_VectorVector
// Size: 0x1C(Inherited: 0x0) 
struct FEqualExactly_VectorVector
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)

}; 
// ScriptStruct Engine.StreamingLevelsToConsider
// Size: 0x28(Inherited: 0x0) 
struct FStreamingLevelsToConsider
{
	struct TArray<struct ULevelStreaming*> StreamingLevels;  // 0x0(0x10)
	char pad_16[24];  // 0x10(0x18)

}; 
// ScriptStruct Engine.EndPhysicsTickFunction
// Size: 0x30(Inherited: 0x28) 
struct FEndPhysicsTickFunction : public FTickFunction
{
	char pad_40[8];  // 0x28(0x8)

}; 
// Function Engine.LightComponentBase.SetCastRaytracedShadow
// Size: 0x1(Inherited: 0x0) 
struct FSetCastRaytracedShadow
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.Vector4_NormalUnsafe3
// Size: 0x20(Inherited: 0x0) 
struct FVector4_NormalUnsafe3
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.Divide_Vector4Vector4
// Size: 0x30(Inherited: 0x0) 
struct FDivide_Vector4Vector4
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 B;  // 0x10(0x10)
	struct FVector4 ReturnValue;  // 0x20(0x10)

}; 
// ScriptStruct Engine.StartPhysicsTickFunction
// Size: 0x30(Inherited: 0x28) 
struct FStartPhysicsTickFunction : public FTickFunction
{
	char pad_40[8];  // 0x28(0x8)

}; 
// Function Engine.BlueprintPathsLibrary.EngineSavedDir
// Size: 0x10(Inherited: 0x0) 
struct FEngineSavedDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// ScriptStruct Engine.WorldPSCPool
// Size: 0x58(Inherited: 0x0) 
struct FWorldPSCPool
{
	struct TMap<struct UParticleSystem*, struct FPSCPool> WorldParticleSystemPools;  // 0x0(0x50)
	char pad_80[8];  // 0x50(0x8)

}; 
// ScriptStruct Engine.HierarchicalSimplification
// Size: 0x160(Inherited: 0x0) 
struct FHierarchicalSimplification
{
	float TransitionScreenSize;  // 0x0(0x4)
	float OverrideDrawDistance;  // 0x4(0x4)
	char bUseOverrideDrawDistance : 1;  // 0x8(0x1)
	char bAllowSpecificExclusion : 1;  // 0x8(0x1)
	char bSimplifyMesh : 1;  // 0x8(0x1)
	char bOnlyGenerateClustersForVolumes : 1;  // 0x8(0x1)
	char bReusePreviousLevelClusters : 1;  // 0x8(0x1)
	char pad_8_1 : 3;  // 0x8(0x1)
	char pad_9[4];  // 0x9(0x4)
	struct FMeshProxySettings ProxySetting;  // 0xC(0xA8)
	struct FMeshMergingSettings MergeSetting;  // 0xB4(0xA0)
	float DesiredBoundRadius;  // 0x154(0x4)
	float DesiredFillingPercentage;  // 0x158(0x4)
	int32_t MinNumberOfActorsToBuild;  // 0x15C(0x4)

}; 
// Function Engine.KismetMathLibrary.GreaterEqual_ByteByte
// Size: 0x3(Inherited: 0x0) 
struct FGreaterEqual_ByteByte
{
	char A;  // 0x0(0x1)
	char B;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool ReturnValue : 1;  // 0x2(0x1)

}; 
// ScriptStruct Engine.LightmassWorldInfoSettings
// Size: 0x4C(Inherited: 0x0) 
struct FLightmassWorldInfoSettings
{
	float StaticLightingLevelScale;  // 0x0(0x4)
	int32_t NumIndirectLightingBounces;  // 0x4(0x4)
	int32_t NumSkyLightingBounces;  // 0x8(0x4)
	float IndirectLightingQuality;  // 0xC(0x4)
	float IndirectLightingSmoothness;  // 0x10(0x4)
	struct FColor EnvironmentColor;  // 0x14(0x4)
	float EnvironmentIntensity;  // 0x18(0x4)
	float EmissiveBoost;  // 0x1C(0x4)
	float DiffuseBoost;  // 0x20(0x4)
	char EVolumeLightingMethod VolumeLightingMethod;  // 0x24(0x1)
	char bUseAmbientOcclusion : 1;  // 0x25(0x1)
	char bGenerateAmbientOcclusionMaterialMask : 1;  // 0x25(0x1)
	char bVisualizeMaterialDiffuse : 1;  // 0x25(0x1)
	char bVisualizeAmbientOcclusion : 1;  // 0x25(0x1)
	char bCompressLightmaps : 1;  // 0x25(0x1)
	char pad_37_1 : 3;  // 0x25(0x1)
	char pad_38[3];  // 0x26(0x3)
	float VolumetricLightmapDetailCellSize;  // 0x28(0x4)
	float VolumetricLightmapMaximumBrickMemoryMb;  // 0x2C(0x4)
	float VolumetricLightmapSphericalHarmonicSmoothing;  // 0x30(0x4)
	float VolumeLightSamplePlacementScale;  // 0x34(0x4)
	float DirectIlluminationOcclusionFraction;  // 0x38(0x4)
	float IndirectIlluminationOcclusionFraction;  // 0x3C(0x4)
	float OcclusionExponent;  // 0x40(0x4)
	float FullyOccludedSamplesFraction;  // 0x44(0x4)
	float MaxOcclusionDistance;  // 0x48(0x4)

}; 
// Function Engine.AnimInstance.CalculateDirection
// Size: 0x1C(Inherited: 0x0) 
struct FCalculateDirection
{
	struct FVector Velocity;  // 0x0(0xC)
	struct FRotator BaseRotation;  // 0xC(0xC)
	float ReturnValue;  // 0x18(0x4)

}; 
// Function Engine.KismetStringLibrary.NotEqual_StriStri
// Size: 0x28(Inherited: 0x0) 
struct FNotEqual_StriStri
{
	struct FString A;  // 0x0(0x10)
	struct FString B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// Function Engine.AnimInstance.GetAllCurveNames
// Size: 0x10(Inherited: 0x0) 
struct FGetAllCurveNames
{
	struct TArray<struct FName> OutNames;  // 0x0(0x10)

}; 
// Function Engine.AnimInstance.GetCurrentActiveMontage
// Size: 0x8(Inherited: 0x0) 
struct FGetCurrentActiveMontage
{
	struct UAnimMontage* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.SkeletalMeshComponent.SetDisablePostProcessBlueprint
// Size: 0x1(Inherited: 0x0) 
struct FSetDisablePostProcessBlueprint
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInDisablePostProcess : 1;  // 0x0(0x1)

}; 
// Function Engine.GameUserSettings.SetResolutionScaleValueEx
// Size: 0x4(Inherited: 0x0) 
struct FSetResolutionScaleValueEx
{
	float NewScaleValue;  // 0x0(0x4)

}; 
// Function Engine.CapsuleComponent.GetUnscaledCapsuleSize_WithoutHemisphere
// Size: 0x8(Inherited: 0x0) 
struct FGetUnscaledCapsuleSize_WithoutHemisphere
{
	float OutRadius;  // 0x0(0x4)
	float OutHalfHeightWithoutHemisphere;  // 0x4(0x4)

}; 
// Function Engine.CurveSourceInterface.GetCurveValue
// Size: 0xC(Inherited: 0x0) 
struct FGetCurveValue
{
	struct FName CurveName;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.AnimInstance.GetInstanceAssetPlayerTime
// Size: 0x8(Inherited: 0x0) 
struct FGetInstanceAssetPlayerTime
{
	int32_t AssetPlayerIndex;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFraction
// Size: 0x8(Inherited: 0x0) 
struct FGetInstanceAssetPlayerTimeFraction
{
	int32_t AssetPlayerIndex;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.GetDayOfYear
// Size: 0x10(Inherited: 0x0) 
struct FGetDayOfYear
{
	struct FDateTime A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.GameplayStatics.SpawnSoundAttached
// Size: 0x60(Inherited: 0x0) 
struct FSpawnSoundAttached
{
	struct USoundBase* Sound;  // 0x0(0x8)
	struct USceneComponent* AttachToComponent;  // 0x8(0x8)
	struct FName AttachPointName;  // 0x10(0x8)
	struct FVector Location;  // 0x18(0xC)
	struct FRotator Rotation;  // 0x24(0xC)
	char EAttachLocation LocationType;  // 0x30(0x1)
	char pad_49_1 : 7;  // 0x31(0x1)
	bool bStopWhenAttachedToDestroyed : 1;  // 0x31(0x1)
	char pad_50[2];  // 0x32(0x2)
	float VolumeMultiplier;  // 0x34(0x4)
	float PitchMultiplier;  // 0x38(0x4)
	float StartTime;  // 0x3C(0x4)
	struct USoundAttenuation* AttenuationSettings;  // 0x40(0x8)
	struct USoundConcurrency* ConcurrencySettings;  // 0x48(0x8)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool bAutoDestroy : 1;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)
	struct UAudioComponent* ReturnValue;  // 0x58(0x8)

}; 
// Function Engine.AnimInstance.GetInstanceCurrentStateElapsedTime
// Size: 0x8(Inherited: 0x0) 
struct FGetInstanceCurrentStateElapsedTime
{
	int32_t MachineIndex;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.AnimInstance.GetInstanceStateWeight
// Size: 0xC(Inherited: 0x0) 
struct FGetInstanceStateWeight
{
	int32_t MachineIndex;  // 0x0(0x4)
	int32_t StateIndex;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetArrayLibrary.Array_Random
// Size: 0x18(Inherited: 0x0) 
struct FArray_Random
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t OutItem;  // 0x10(0x4)
	int32_t OutIndex;  // 0x14(0x4)

}; 
// Function Engine.AnimInstance.GetOwningActor
// Size: 0x8(Inherited: 0x0) 
struct FGetOwningActor
{
	struct AActor* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.AnimInstance.GetReceiveNotifiesFromLinkedInstances
// Size: 0x1(Inherited: 0x0) 
struct FGetReceiveNotifiesFromLinkedInstances
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.AnimInstance.GetRelevantAnimLength
// Size: 0xC(Inherited: 0x0) 
struct FGetRelevantAnimLength
{
	int32_t MachineIndex;  // 0x0(0x4)
	int32_t StateIndex;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.AnimInstance.GetRelevantAnimTimeRemaining
// Size: 0xC(Inherited: 0x0) 
struct FGetRelevantAnimTimeRemaining
{
	int32_t MachineIndex;  // 0x0(0x4)
	int32_t StateIndex;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.AtmosphericFogComponent.SetSunMultiplier
// Size: 0x4(Inherited: 0x0) 
struct FSetSunMultiplier
{
	float NewSunMultiplier;  // 0x0(0x4)

}; 
// Function Engine.AnimInstance.GetSyncGroupPosition
// Size: 0x1C(Inherited: 0x0) 
struct FGetSyncGroupPosition
{
	struct FName InSyncGroupName;  // 0x0(0x8)
	struct FMarkerSyncAnimPosition ReturnValue;  // 0x8(0x14)

}; 
// Function Engine.AnimInstance.GetTimeToClosestMarker
// Size: 0x18(Inherited: 0x0) 
struct FGetTimeToClosestMarker
{
	struct FName SyncGroup;  // 0x0(0x8)
	struct FName MarkerName;  // 0x8(0x8)
	float OutMarkerTime;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.SkyLightComponent.SetOcclusionTint
// Size: 0x4(Inherited: 0x0) 
struct FSetOcclusionTint
{
	struct FColor InTint;  // 0x0(0x4)

}; 
// Function Engine.AnimInstance.IsPlayingSlotAnimation
// Size: 0x18(Inherited: 0x0) 
struct FIsPlayingSlotAnimation
{
	struct UAnimSequenceBase* Asset;  // 0x0(0x8)
	struct FName SlotNodeName;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.SkeletalMeshComponent.LinkAnimGraphByTag
// Size: 0x10(Inherited: 0x0) 
struct FLinkAnimGraphByTag
{
	struct FName InTag;  // 0x0(0x8)
	UAnimInstance* InClass;  // 0x8(0x8)

}; 
// Function Engine.SkeletalMeshComponent.AccumulateAllBodiesBelowPhysicsBlendWeight
// Size: 0x10(Inherited: 0x0) 
struct FAccumulateAllBodiesBelowPhysicsBlendWeight
{
	struct FName InBoneName;  // 0x0(0x8)
	float AddPhysicsBlendWeight;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSkipCustomPhysicsType : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.KismetMathLibrary.NearlyEqual_FloatFloat
// Size: 0x10(Inherited: 0x0) 
struct FNearlyEqual_FloatFloat
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	float ErrorTolerance;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool ReturnValue : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.KismetMathLibrary.LessEqual_FloatFloat
// Size: 0xC(Inherited: 0x0) 
struct FLessEqual_FloatFloat
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.AnimInstance.LockAIResources
// Size: 0x2(Inherited: 0x0) 
struct FLockAIResources
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bLockMovement : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool LockAILogic : 1;  // 0x1(0x1)

}; 
// Function Engine.AnimInstance.Montage_GetCurrentSection
// Size: 0x10(Inherited: 0x0) 
struct FMontage_GetCurrentSection
{
	struct UAnimMontage* Montage;  // 0x0(0x8)
	struct FName ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.AnimInstance.Montage_IsActive
// Size: 0x10(Inherited: 0x0) 
struct FMontage_IsActive
{
	struct UAnimMontage* Montage;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.AnimInstance.Montage_Pause
// Size: 0x8(Inherited: 0x0) 
struct FMontage_Pause
{
	struct UAnimMontage* Montage;  // 0x0(0x8)

}; 
// Function Engine.AnimInstance.Montage_SetNextSection
// Size: 0x18(Inherited: 0x0) 
struct FMontage_SetNextSection
{
	struct FName SectionNameToChange;  // 0x0(0x8)
	struct FName NextSection;  // 0x8(0x8)
	struct UAnimMontage* Montage;  // 0x10(0x8)

}; 
// Function Engine.AnimInstance.Montage_StopGroupByName
// Size: 0xC(Inherited: 0x0) 
struct FMontage_StopGroupByName
{
	float InBlendOutTime;  // 0x0(0x4)
	struct FName GroupName;  // 0x4(0x8)

}; 
// Function Engine.AnimInstance.PlaySlotAnimationAsDynamicMontage
// Size: 0x30(Inherited: 0x0) 
struct FPlaySlotAnimationAsDynamicMontage
{
	struct UAnimSequenceBase* Asset;  // 0x0(0x8)
	struct FName SlotNodeName;  // 0x8(0x8)
	float BlendInTime;  // 0x10(0x4)
	float BlendOutTime;  // 0x14(0x4)
	float InPlayRate;  // 0x18(0x4)
	int32_t LoopCount;  // 0x1C(0x4)
	float BlendOutTriggerTime;  // 0x20(0x4)
	float InTimeToStartMontageAt;  // 0x24(0x4)
	struct UAnimMontage* ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector4_Set
// Size: 0x20(Inherited: 0x0) 
struct FVector4_Set
{
	struct FVector4 A;  // 0x0(0x10)
	float X;  // 0x10(0x4)
	float Y;  // 0x14(0x4)
	float Z;  // 0x18(0x4)
	float W;  // 0x1C(0x4)

}; 
// Function Engine.AnimInstance.SavePoseSnapshot
// Size: 0x8(Inherited: 0x0) 
struct FSavePoseSnapshot
{
	struct FName SnapshotName;  // 0x0(0x8)

}; 
// Function Engine.KismetStringLibrary.ReplaceInline
// Size: 0x38(Inherited: 0x0) 
struct FReplaceInline
{
	struct FString SourceString;  // 0x0(0x10)
	struct FString SearchText;  // 0x10(0x10)
	struct FString ReplacementText;  // 0x20(0x10)
	char ESearchCase SearchCase;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	int32_t ReturnValue;  // 0x34(0x4)

}; 
// Function Engine.SkeletalMeshComponent.SetMorphTarget
// Size: 0x10(Inherited: 0x0) 
struct FSetMorphTarget
{
	struct FName MorphTargetName;  // 0x0(0x8)
	float Value;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bRemoveZeroWeight : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.AnimInstance.SetRootMotionMode
// Size: 0x1(Inherited: 0x0) 
struct FSetRootMotionMode
{
	char ERootMotionMode Value;  // 0x0(0x1)

}; 
// Function Engine.AnimInstance.SetPropagateNotifiesToLinkedInstances
// Size: 0x1(Inherited: 0x0) 
struct FSetPropagateNotifiesToLinkedInstances
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bSet : 1;  // 0x0(0x1)

}; 
// Function Engine.SkeletalMeshComponent.SnapshotPose
// Size: 0x38(Inherited: 0x0) 
struct FSnapshotPose
{
	struct FPoseSnapshot Snapshot;  // 0x0(0x38)

}; 
// Function Engine.KismetMathLibrary.SelectColor
// Size: 0x34(Inherited: 0x0) 
struct FSelectColor
{
	struct FLinearColor A;  // 0x0(0x10)
	struct FLinearColor B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool bPickA : 1;  // 0x20(0x1)
	char pad_33[3];  // 0x21(0x3)
	struct FLinearColor ReturnValue;  // 0x24(0x10)

}; 
// Function Engine.AnimInstance.UnlockAIResources
// Size: 0x2(Inherited: 0x0) 
struct FUnlockAIResources
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bUnlockMovement : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool UnlockAILogic : 1;  // 0x1(0x1)

}; 
// Function Engine.NavMovementComponent.IsCrouching
// Size: 0x1(Inherited: 0x0) 
struct FIsCrouching
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.NavMovementComponent.IsFalling
// Size: 0x1(Inherited: 0x0) 
struct FIsFalling
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PawnMovementComponent.AddInputVector
// Size: 0x10(Inherited: 0x0) 
struct FAddInputVector
{
	struct FVector WorldVector;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bForce : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.PawnMovementComponent.GetLastInputVector
// Size: 0xC(Inherited: 0x0) 
struct FGetLastInputVector
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.SplineComponent.GetInputKeyAtDistanceAlongSpline
// Size: 0x8(Inherited: 0x0) 
struct FGetInputKeyAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.PawnMovementComponent.GetPawnOwner
// Size: 0x8(Inherited: 0x0) 
struct FGetPawnOwner
{
	struct APawn* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.PawnMovementComponent.GetPendingInputVector
// Size: 0xC(Inherited: 0x0) 
struct FGetPendingInputVector
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.CameraShakeBase.SetRootShakePattern
// Size: 0x8(Inherited: 0x0) 
struct FSetRootShakePattern
{
	struct UCameraShakePattern* InPattern;  // 0x0(0x8)

}; 
// Function Engine.AudioComponent.SetIntParameter
// Size: 0xC(Inherited: 0x0) 
struct FSetIntParameter
{
	struct FName InName;  // 0x0(0x8)
	int32_t inInt;  // 0x8(0x4)

}; 
// Function Engine.TimecodeProvider.FetchTimecode
// Size: 0x14(Inherited: 0x0) 
struct FFetchTimecode
{
	struct FQualifiedFrameTime OutFrameTime;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.TimecodeProvider.GetDelayedQualifiedFrameTime
// Size: 0x10(Inherited: 0x0) 
struct FGetDelayedQualifiedFrameTime
{
	struct FQualifiedFrameTime ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.SkyAtmosphereComponent.SetSkyLuminanceFactor
// Size: 0x10(Inherited: 0x0) 
struct FSetSkyLuminanceFactor
{
	struct FLinearColor NewValue;  // 0x0(0x10)

}; 
// Function Engine.KismetStringLibrary.Conv_StringToVector2D
// Size: 0x20(Inherited: 0x0) 
struct FConv_StringToVector2D
{
	struct FString inString;  // 0x0(0x10)
	struct FVector2D OutConvertedVector2D;  // 0x10(0x8)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool OutIsValid : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.TimecodeProvider.GetQualifiedFrameTime
// Size: 0x10(Inherited: 0x0) 
struct FGetQualifiedFrameTime
{
	struct FQualifiedFrameTime ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.AudioComponent.SetBoolParameter
// Size: 0xC(Inherited: 0x0) 
struct FSetBoolParameter
{
	struct FName InName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool InBool : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.ParticleSystemComponent.GetBeamTargetStrength
// Size: 0x10(Inherited: 0x0) 
struct FGetBeamTargetStrength
{
	int32_t EmitterIndex;  // 0x0(0x4)
	int32_t TargetIndex;  // 0x4(0x4)
	float OutTargetStrength;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool ReturnValue : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.BlueprintSetLibrary.Set_Remove
// Size: 0x58(Inherited: 0x0) 
struct FSet_Remove
{
	struct TSet<int32_t> TargetSet;  // 0x0(0x50)
	int32_t Item;  // 0x50(0x4)
	char pad_84_1 : 7;  // 0x54(0x1)
	bool ReturnValue : 1;  // 0x54(0x1)
	char pad_85[3];  // 0x55(0x3)

}; 
// Function Engine.FXSystemComponent.SetEmitterEnable
// Size: 0xC(Inherited: 0x0) 
struct FSetEmitterEnable
{
	struct FName EmitterName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bNewEnableState : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.Emitter.SetFloatParameter
// Size: 0xC(Inherited: 0x0) 
struct FSetFloatParameter
{
	struct FName ParameterName;  // 0x0(0x8)
	float Param;  // 0x8(0x4)

}; 
// Function Engine.Emitter.SetVectorParameter
// Size: 0x14(Inherited: 0x0) 
struct FSetVectorParameter
{
	struct FName ParameterName;  // 0x0(0x8)
	struct FVector Param;  // 0x8(0xC)

}; 
// Function Engine.AnimNotifyState.Received_NotifyBegin
// Size: 0x18(Inherited: 0x0) 
struct FReceived_NotifyBegin
{
	struct USkeletalMeshComponent* MeshComp;  // 0x0(0x8)
	struct UAnimSequenceBase* Animation;  // 0x8(0x8)
	float TotalDuration;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.AnimNotifyState.Received_NotifyEnd
// Size: 0x18(Inherited: 0x0) 
struct FReceived_NotifyEnd
{
	struct USkeletalMeshComponent* MeshComp;  // 0x0(0x8)
	struct UAnimSequenceBase* Animation;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.SkinnedMeshComponent.ClearVertexColorOverride
// Size: 0x4(Inherited: 0x0) 
struct FClearVertexColorOverride
{
	int32_t LODIndex;  // 0x0(0x4)

}; 
// Function Engine.SplineComponent.AddSplinePoint
// Size: 0x10(Inherited: 0x0) 
struct FAddSplinePoint
{
	struct FVector position;  // 0x0(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0xC(0x1)
	char pad_13_1 : 7;  // 0xD(0x1)
	bool bUpdateSpline : 1;  // 0xD(0x1)
	char pad_14[2];  // 0xE(0x2)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetRotator
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_GetRotator
{
	struct FMatrix M;  // 0x0(0x40)
	struct FRotator ReturnValue;  // 0x40(0xC)
	char pad_76[4];  // 0x4C(0x4)

}; 
// Function Engine.CameraShakeSourceComponent.StopAllCameraShakes
// Size: 0x1(Inherited: 0x0) 
struct FStopAllCameraShakes
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bImmediately : 1;  // 0x0(0x1)

}; 
// Function Engine.SplineComponent.GetDirectionAtTime
// Size: 0x14(Inherited: 0x0) 
struct FGetDirectionAtTime
{
	float Time;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bUseConstantVelocity : 1;  // 0x5(0x1)
	char pad_6[2];  // 0x6(0x2)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.SplineComponent.FindInputKeyClosestToWorldLocation
// Size: 0x10(Inherited: 0x0) 
struct FFindInputKeyClosestToWorldLocation
{
	struct FVector WorldLocation;  // 0x0(0xC)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.SplineComponent.FindLocationClosestToWorldLocation
// Size: 0x1C(Inherited: 0x0) 
struct FFindLocationClosestToWorldLocation
{
	struct FVector WorldLocation;  // 0x0(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.VectorFieldComponent.SetIntensity
// Size: 0x4(Inherited: 0x0) 
struct FSetIntensity
{
	float NewIntensity;  // 0x0(0x4)

}; 
// Function Engine.SplineComponent.FindRightVectorClosestToWorldLocation
// Size: 0x1C(Inherited: 0x0) 
struct FFindRightVectorClosestToWorldLocation
{
	struct FVector WorldLocation;  // 0x0(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.SplineComponent.FindTangentClosestToWorldLocation
// Size: 0x1C(Inherited: 0x0) 
struct FFindTangentClosestToWorldLocation
{
	struct FVector WorldLocation;  // 0x0(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.CheatManager.ViewPlayer
// Size: 0x10(Inherited: 0x0) 
struct FViewPlayer
{
	struct FString S;  // 0x0(0x10)

}; 
// Function Engine.SplineComponent.FindUpVectorClosestToWorldLocation
// Size: 0x1C(Inherited: 0x0) 
struct FFindUpVectorClosestToWorldLocation
{
	struct FVector WorldLocation;  // 0x0(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.KismetMathLibrary.FromDays
// Size: 0x10(Inherited: 0x0) 
struct FFromDays
{
	float Days;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FTimespan ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.CapsuleComponent.GetScaledCapsuleSize_WithoutHemisphere
// Size: 0x8(Inherited: 0x0) 
struct FGetScaledCapsuleSize_WithoutHemisphere
{
	float OutRadius;  // 0x0(0x4)
	float OutHalfHeightWithoutHemisphere;  // 0x4(0x4)

}; 
// Function Engine.SplineComponent.GetDefaultUpVector
// Size: 0x10(Inherited: 0x0) 
struct FGetDefaultUpVector
{
	char ESplineCoordinateSpace CoordinateSpace;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FVector ReturnValue;  // 0x4(0xC)

}; 
// Function Engine.SplineComponent.GetLocationAtSplineInputKey
// Size: 0x14(Inherited: 0x0) 
struct FGetLocationAtSplineInputKey
{
	float InKey;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.SplineComponent.GetLocationAtTime
// Size: 0x14(Inherited: 0x0) 
struct FGetLocationAtTime
{
	float Time;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bUseConstantVelocity : 1;  // 0x5(0x1)
	char pad_6[2];  // 0x6(0x2)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.SplineComponent.GetNumberOfSplineSegments
// Size: 0x4(Inherited: 0x0) 
struct FGetNumberOfSplineSegments
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetInputLibrary.EqualEqual_InputChordInputChord
// Size: 0x48(Inherited: 0x0) 
struct FEqualEqual_InputChordInputChord
{
	struct FInputChord A;  // 0x0(0x20)
	struct FInputChord B;  // 0x20(0x20)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool ReturnValue : 1;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)

}; 
// Function Engine.SplineComponent.GetRightVectorAtSplinePoint
// Size: 0x14(Inherited: 0x0) 
struct FGetRightVectorAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.SplineComponent.GetRollAtDistanceAlongSpline
// Size: 0xC(Inherited: 0x0) 
struct FGetRollAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.SplineComponent.GetRollAtSplineInputKey
// Size: 0xC(Inherited: 0x0) 
struct FGetRollAtSplineInputKey
{
	float InKey;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.SplineComponent.GetRollAtSplinePoint
// Size: 0xC(Inherited: 0x0) 
struct FGetRollAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.SplineComponent.GetRollAtTime
// Size: 0xC(Inherited: 0x0) 
struct FGetRollAtTime
{
	float Time;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bUseConstantVelocity : 1;  // 0x5(0x1)
	char pad_6[2];  // 0x6(0x2)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.GameUserSettings.GetFullscreenMode
// Size: 0x1(Inherited: 0x0) 
struct FGetFullscreenMode
{
	char EWindowMode ReturnValue;  // 0x0(0x1)

}; 
// Function Engine.SplineComponent.GetRotationAtDistanceAlongSpline
// Size: 0x14(Inherited: 0x0) 
struct FGetRotationAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FRotator ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.KismetMathLibrary.Conv_IntToBool
// Size: 0x8(Inherited: 0x0) 
struct FConv_IntToBool
{
	int32_t inInt;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool ReturnValue : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.SplineComponent.GetScaleAtSplineInputKey
// Size: 0x10(Inherited: 0x0) 
struct FGetScaleAtSplineInputKey
{
	float InKey;  // 0x0(0x4)
	struct FVector ReturnValue;  // 0x4(0xC)

}; 
// Function Engine.SplineComponent.GetScaleAtSplinePoint
// Size: 0x10(Inherited: 0x0) 
struct FGetScaleAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	struct FVector ReturnValue;  // 0x4(0xC)

}; 
// Function Engine.SplineComponent.GetScaleAtTime
// Size: 0x14(Inherited: 0x0) 
struct FGetScaleAtTime
{
	float Time;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bUseConstantVelocity : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.SplineComponent.GetTangentAtSplineInputKey
// Size: 0x14(Inherited: 0x0) 
struct FGetTangentAtSplineInputKey
{
	float InKey;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.SplineComponent.GetTangentAtTime
// Size: 0x14(Inherited: 0x0) 
struct FGetTangentAtTime
{
	float Time;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bUseConstantVelocity : 1;  // 0x5(0x1)
	char pad_6[2];  // 0x6(0x2)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.SplineComponent.GetTransformAtSplinePoint
// Size: 0x40(Inherited: 0x0) 
struct FGetTransformAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bUseScale : 1;  // 0x5(0x1)
	char pad_6[10];  // 0x6(0xA)
	struct FTransform ReturnValue;  // 0x10(0x30)

}; 
// Function Engine.SplineComponent.GetTransformAtTime
// Size: 0x40(Inherited: 0x0) 
struct FGetTransformAtTime
{
	float Time;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bUseConstantVelocity : 1;  // 0x5(0x1)
	char pad_6_1 : 7;  // 0x6(0x1)
	bool bUseScale : 1;  // 0x6(0x1)
	char pad_7[9];  // 0x7(0x9)
	struct FTransform ReturnValue;  // 0x10(0x30)

}; 
// Function Engine.SplineComponent.GetUpVectorAtSplineInputKey
// Size: 0x14(Inherited: 0x0) 
struct FGetUpVectorAtSplineInputKey
{
	float InKey;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.SplineComponent.GetUpVectorAtSplinePoint
// Size: 0x14(Inherited: 0x0) 
struct FGetUpVectorAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.SplineComponent.GetVectorPropertyAtSplineInputKey
// Size: 0x18(Inherited: 0x0) 
struct FGetVectorPropertyAtSplineInputKey
{
	float InKey;  // 0x0(0x4)
	struct FName PropertyName;  // 0x4(0x8)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetStringLibrary.Conv_NameToString
// Size: 0x18(Inherited: 0x0) 
struct FConv_NameToString
{
	struct FName InName;  // 0x0(0x8)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetMathLibrary.IsMorning
// Size: 0x10(Inherited: 0x0) 
struct FIsMorning
{
	struct FDateTime A;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetArrayLibrary.Array_Reverse
// Size: 0x10(Inherited: 0x0) 
struct FArray_Reverse
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)

}; 
// Function Engine.SplineComponent.GetWorldRotationAtDistanceAlongSpline
// Size: 0x10(Inherited: 0x0) 
struct FGetWorldRotationAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	struct FRotator ReturnValue;  // 0x4(0xC)

}; 
// Function Engine.SplineComponent.GetWorldTangentAtDistanceAlongSpline
// Size: 0x10(Inherited: 0x0) 
struct FGetWorldTangentAtDistanceAlongSpline
{
	float Distance;  // 0x0(0x4)
	struct FVector ReturnValue;  // 0x4(0xC)

}; 
// Function Engine.SplineComponent.IsClosedLoop
// Size: 0x1(Inherited: 0x0) 
struct FIsClosedLoop
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SplineComponent.RemoveSplinePoint
// Size: 0x8(Inherited: 0x0) 
struct FRemoveSplinePoint
{
	int32_t Index;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bUpdateSpline : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.SplineComponent.SetClosedLoop
// Size: 0x2(Inherited: 0x0) 
struct FSetClosedLoop
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInClosedLoop : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bUpdateSpline : 1;  // 0x1(0x1)

}; 
// Function Engine.SplineComponent.SetClosedLoopAtPosition
// Size: 0xC(Inherited: 0x0) 
struct FSetClosedLoopAtPosition
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInClosedLoop : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float Key;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bUpdateSpline : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.SplineComponent.SetSplineLocalPoints
// Size: 0x10(Inherited: 0x0) 
struct FSetSplineLocalPoints
{
	struct TArray<struct FVector> Points;  // 0x0(0x10)

}; 
// Function Engine.GameplayStatics.GetClosestListenerLocation
// Size: 0x30(Inherited: 0x0) 
struct FGetClosestListenerLocation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Location;  // 0x8(0xC)
	float MaximumRange;  // 0x14(0x4)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bAllowAttenuationOverride : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)
	struct FVector ListenerPosition;  // 0x1C(0xC)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool ReturnValue : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// Function Engine.SplineComponent.SetSplinePoints
// Size: 0x18(Inherited: 0x0) 
struct FSetSplinePoints
{
	struct TArray<struct FVector> Points;  // 0x0(0x10)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bUpdateSpline : 1;  // 0x11(0x1)
	char pad_18[6];  // 0x12(0x6)

}; 
// Function Engine.SplineComponent.SetTangentAtSplinePoint
// Size: 0x14(Inherited: 0x0) 
struct FSetTangentAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	struct FVector InTangent;  // 0x4(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bUpdateSpline : 1;  // 0x11(0x1)
	char pad_18[2];  // 0x12(0x2)

}; 
// Function Engine.KismetMathLibrary.SignOfFloat
// Size: 0x8(Inherited: 0x0) 
struct FSignOfFloat
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.SplineComponent.SetUpVectorAtSplinePoint
// Size: 0x14(Inherited: 0x0) 
struct FSetUpVectorAtSplinePoint
{
	int32_t PointIndex;  // 0x0(0x4)
	struct FVector InUpVector;  // 0x4(0xC)
	char ESplineCoordinateSpace CoordinateSpace;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bUpdateSpline : 1;  // 0x11(0x1)
	char pad_18[2];  // 0x12(0x2)

}; 
// Function Engine.ForceFeedbackComponent.AdjustAttenuation
// Size: 0xB0(Inherited: 0x0) 
struct FAdjustAttenuation
{
	struct FForceFeedbackAttenuationSettings InAttenuationSettings;  // 0x0(0xB0)

}; 
// Function Engine.AudioComponent.GetCookedFFTData
// Size: 0x28(Inherited: 0x0) 
struct FGetCookedFFTData
{
	struct TArray<float> FrequenciesToGet;  // 0x0(0x10)
	struct TArray<struct FSoundWaveSpectralData> OutSoundWaveSpectralData;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// Function Engine.AudioComponent.GetPlayState
// Size: 0x1(Inherited: 0x0) 
struct FGetPlayState
{
	uint8_t  ReturnValue;  // 0x0(0x1)

}; 
// Function Engine.SplineMeshComponent.GetBoundaryMin
// Size: 0x4(Inherited: 0x0) 
struct FGetBoundaryMin
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.AudioComponent.HasCookedAmplitudeEnvelopeData
// Size: 0x1(Inherited: 0x0) 
struct FHasCookedAmplitudeEnvelopeData
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.AudioComponent.SetPitchMultiplier
// Size: 0x4(Inherited: 0x0) 
struct FSetPitchMultiplier
{
	float NewPitchMultiplier;  // 0x0(0x4)

}; 
// Function Engine.PhysicsSpringComponent.GetSpringCurrentEndPoint
// Size: 0xC(Inherited: 0x0) 
struct FGetSpringCurrentEndPoint
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.BlueprintPathsLibrary.ShaderWorkingDir
// Size: 0x10(Inherited: 0x0) 
struct FShaderWorkingDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.AudioComponent.SetSound
// Size: 0x8(Inherited: 0x0) 
struct FSetSound
{
	struct USoundBase* NewSound;  // 0x0(0x8)

}; 
// Function Engine.AudioComponent.SetSourceBusSendPostEffect
// Size: 0x10(Inherited: 0x0) 
struct FSetSourceBusSendPostEffect
{
	struct USoundSourceBus* SoundSourceBus;  // 0x0(0x8)
	float SourceBusSendLevel;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.AudioComponent.SetUISound
// Size: 0x1(Inherited: 0x0) 
struct FSetUISound
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInUISound : 1;  // 0x0(0x1)

}; 
// Function Engine.AudioComponent.SetVolumeMultiplier
// Size: 0x4(Inherited: 0x0) 
struct FSetVolumeMultiplier
{
	float NewVolumeMultiplier;  // 0x0(0x4)

}; 
// Function Engine.CharacterMovementComponent.CalcVelocity
// Size: 0x10(Inherited: 0x0) 
struct FCalcVelocity
{
	float DeltaTime;  // 0x0(0x4)
	float Friction;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bFluid : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	float BrakingDeceleration;  // 0xC(0x4)

}; 
// Function Engine.KismetInputLibrary.InputEvent_IsLeftControlDown
// Size: 0x20(Inherited: 0x0) 
struct FInputEvent_IsLeftControlDown
{
	struct FInputEvent Input;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.CharacterMovementComponent.GetAnalogInputModifier
// Size: 0x4(Inherited: 0x0) 
struct FGetAnalogInputModifier
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.SoundSubmix.AddEnvelopeFollowerDelegate
// Size: 0x18(Inherited: 0x0) 
struct FAddEnvelopeFollowerDelegate
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FDelegate OnSubmixEnvelopeBP;  // 0x8(0x10)

}; 
// Function Engine.KismetMathLibrary.Round64
// Size: 0x10(Inherited: 0x0) 
struct FRound64
{
	float A;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	int64_t ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.CharacterMovementComponent.GetCharacterOwner
// Size: 0x8(Inherited: 0x0) 
struct FGetCharacterOwner
{
	struct ACharacter* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.CharacterMovementComponent.GetCurrentAcceleration
// Size: 0xC(Inherited: 0x0) 
struct FGetCurrentAcceleration
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.CharacterMovementComponent.GetImpartedMovementBaseVelocity
// Size: 0xC(Inherited: 0x0) 
struct FGetImpartedMovementBaseVelocity
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.CharacterMovementComponent.GetLastUpdateRotation
// Size: 0xC(Inherited: 0x0) 
struct FGetLastUpdateRotation
{
	struct FRotator ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.CharacterMovementComponent.GetLastUpdateVelocity
// Size: 0xC(Inherited: 0x0) 
struct FGetLastUpdateVelocity
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.CharacterMovementComponent.GetMaxAcceleration
// Size: 0x4(Inherited: 0x0) 
struct FGetMaxAcceleration
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.GameModeBase.HandleStartingNewPlayer
// Size: 0x8(Inherited: 0x0) 
struct FHandleStartingNewPlayer
{
	struct APlayerController* NewPlayer;  // 0x0(0x8)

}; 
// Function Engine.CharacterMovementComponent.GetMaxBrakingDeceleration
// Size: 0x4(Inherited: 0x0) 
struct FGetMaxBrakingDeceleration
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.SkinnedMeshComponent.ShowAllMaterialSections
// Size: 0x4(Inherited: 0x0) 
struct FShowAllMaterialSections
{
	int32_t LODIndex;  // 0x0(0x4)

}; 
// Function Engine.CharacterMovementComponent.GetMaxJumpHeight
// Size: 0x4(Inherited: 0x0) 
struct FGetMaxJumpHeight
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetStringLibrary.BuildString_Object
// Size: 0x48(Inherited: 0x0) 
struct FBuildString_Object
{
	struct FString AppendTo;  // 0x0(0x10)
	struct FString prefix;  // 0x10(0x10)
	struct UObject* InObj;  // 0x20(0x8)
	struct FString suffix;  // 0x28(0x10)
	struct FString ReturnValue;  // 0x38(0x10)

}; 
// Function Engine.CharacterMovementComponent.GetMinAnalogSpeed
// Size: 0x4(Inherited: 0x0) 
struct FGetMinAnalogSpeed
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetStringLibrary.GetCharacterAsNumber
// Size: 0x18(Inherited: 0x0) 
struct FGetCharacterAsNumber
{
	struct FString SourceString;  // 0x0(0x10)
	int32_t Index;  // 0x10(0x4)
	int32_t ReturnValue;  // 0x14(0x4)

}; 
// Function Engine.CharacterMovementComponent.GetValidPerchRadius
// Size: 0x4(Inherited: 0x0) 
struct FGetValidPerchRadius
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.CharacterMovementComponent.IsWalking
// Size: 0x1(Inherited: 0x0) 
struct FIsWalking
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.CharacterMovementComponent.K2_FindFloor
// Size: 0xA0(Inherited: 0x0) 
struct FK2_FindFloor
{
	struct FVector CapsuleLocation;  // 0x0(0xC)
	struct FFindFloorResult FloorResult;  // 0xC(0x94)

}; 
// Function Engine.CharacterMovementComponent.K2_GetWalkableFloorZ
// Size: 0x4(Inherited: 0x0) 
struct FK2_GetWalkableFloorZ
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.PointLightComponent.SetSoftSourceRadius
// Size: 0x4(Inherited: 0x0) 
struct FSetSoftSourceRadius
{
	float bNewValue;  // 0x0(0x4)

}; 
// Function Engine.CharacterMovementComponent.SetAvoidanceEnabled
// Size: 0x1(Inherited: 0x0) 
struct FSetAvoidanceEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnable : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.LinearColor_Transparent
// Size: 0x10(Inherited: 0x0) 
struct FLinearColor_Transparent
{
	struct FLinearColor ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.SkinnedMeshComponent.SetCastCapsuleDirectShadow
// Size: 0x1(Inherited: 0x0) 
struct FSetCastCapsuleDirectShadow
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.CharacterMovementComponent.SetAvoidanceGroup
// Size: 0x4(Inherited: 0x0) 
struct FSetAvoidanceGroup
{
	int32_t GroupFlags;  // 0x0(0x4)

}; 
// Function Engine.CharacterMovementComponent.SetAvoidanceGroupMask
// Size: 0x4(Inherited: 0x0) 
struct FSetAvoidanceGroupMask
{
	struct FNavAvoidanceMask GroupMask;  // 0x0(0x4)

}; 
// Function Engine.KismetInternationalizationLibrary.SetCurrentLanguageAndLocale
// Size: 0x18(Inherited: 0x0) 
struct FSetCurrentLanguageAndLocale
{
	struct FString Culture;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool SaveToConfig : 1;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool ReturnValue : 1;  // 0x11(0x1)
	char pad_18[6];  // 0x12(0x6)

}; 
// Function Engine.CharacterMovementComponent.SetMovementMode
// Size: 0x2(Inherited: 0x0) 
struct FSetMovementMode
{
	char EMovementMode NewMovementMode;  // 0x0(0x1)
	char NewCustomMode;  // 0x1(0x1)

}; 
// Function Engine.CharacterMovementComponent.SetWalkableFloorZ
// Size: 0x4(Inherited: 0x0) 
struct FSetWalkableFloorZ
{
	float InWalkableFloorZ;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.TransformDirection
// Size: 0x50(Inherited: 0x0) 
struct FTransformDirection
{
	struct FTransform T;  // 0x0(0x30)
	struct FVector Direction;  // 0x30(0xC)
	struct FVector ReturnValue;  // 0x3C(0xC)
	char pad_72[8];  // 0x48(0x8)

}; 
// Function Engine.Light.GetLightColor
// Size: 0x10(Inherited: 0x0) 
struct FGetLightColor
{
	struct FLinearColor ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.Greater_DateTimeDateTime
// Size: 0x18(Inherited: 0x0) 
struct FGreater_DateTimeDateTime
{
	struct FDateTime A;  // 0x0(0x8)
	struct FDateTime B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.LightComponentBase.SetCastDeepShadow
// Size: 0x1(Inherited: 0x0) 
struct FSetCastDeepShadow
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.LightComponent.SetBloomScale
// Size: 0x4(Inherited: 0x0) 
struct FSetBloomScale
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.LightComponent.SetBloomTint
// Size: 0x4(Inherited: 0x0) 
struct FSetBloomTint
{
	struct FColor NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetStringLibrary.FindSubstring
// Size: 0x30(Inherited: 0x0) 
struct FFindSubstring
{
	struct FString SearchIn;  // 0x0(0x10)
	struct FString Substring;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool bUseCase : 1;  // 0x20(0x1)
	char pad_33_1 : 7;  // 0x21(0x1)
	bool bSearchFromEnd : 1;  // 0x21(0x1)
	char pad_34[2];  // 0x22(0x2)
	int32_t StartPosition;  // 0x24(0x4)
	int32_t ReturnValue;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)

}; 
// Function Engine.LightComponent.SetIESTexture
// Size: 0x8(Inherited: 0x0) 
struct FSetIESTexture
{
	struct UTextureLightProfile* NewValue;  // 0x0(0x8)

}; 
// Function Engine.SkyLightComponent.SetIndirectLightingIntensity
// Size: 0x4(Inherited: 0x0) 
struct FSetIndirectLightingIntensity
{
	float NewIntensity;  // 0x0(0x4)

}; 
// Function Engine.SkyLightComponent.SetLightColor
// Size: 0x10(Inherited: 0x0) 
struct FSetLightColor
{
	struct FLinearColor NewLightColor;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.NegateVector
// Size: 0x18(Inherited: 0x0) 
struct FNegateVector
{
	struct FVector A;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.Light.SetLightFunctionFadeDistance
// Size: 0x4(Inherited: 0x0) 
struct FSetLightFunctionFadeDistance
{
	float NewLightFunctionFadeDistance;  // 0x0(0x4)

}; 
// Function Engine.Light.SetLightFunctionMaterial
// Size: 0x8(Inherited: 0x0) 
struct FSetLightFunctionMaterial
{
	struct UMaterialInterface* NewLightFunctionMaterial;  // 0x0(0x8)

}; 
// Function Engine.LightComponent.SetShadowSlopeBias
// Size: 0x4(Inherited: 0x0) 
struct FSetShadowSlopeBias
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.IntPoint_Left
// Size: 0x8(Inherited: 0x0) 
struct FIntPoint_Left
{
	struct FIntPoint ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.LightComponent.SetSpecularScale
// Size: 0x4(Inherited: 0x0) 
struct FSetSpecularScale
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.Atan
// Size: 0x8(Inherited: 0x0) 
struct FAtan
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.LightComponent.SetTransmission
// Size: 0x1(Inherited: 0x0) 
struct FSetTransmission
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.LightComponent.SetUseIESBrightness
// Size: 0x1(Inherited: 0x0) 
struct FSetUseIESBrightness
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.LightComponent.SetUseTemperature
// Size: 0x1(Inherited: 0x0) 
struct FSetUseTemperature
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SkyLightComponent.SetVolumetricScatteringIntensity
// Size: 0x4(Inherited: 0x0) 
struct FSetVolumetricScatteringIntensity
{
	float NewIntensity;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.And_Int64Int64
// Size: 0x18(Inherited: 0x0) 
struct FAnd_Int64Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	int64_t ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.LocalLightComponent.GetUnitsConversionFactor
// Size: 0xC(Inherited: 0x0) 
struct FGetUnitsConversionFactor
{
	uint8_t  SrcUnits;  // 0x0(0x1)
	uint8_t  TargetUnits;  // 0x1(0x1)
	char pad_2[2];  // 0x2(0x2)
	float CosHalfConeAngle;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.LocalLightComponent.SetAttenuationRadius
// Size: 0x4(Inherited: 0x0) 
struct FSetAttenuationRadius
{
	float NewRadius;  // 0x0(0x4)

}; 
// Function Engine.PlayerInput.InvertAxisKey
// Size: 0x18(Inherited: 0x0) 
struct FInvertAxisKey
{
	struct FKey AxisKey;  // 0x0(0x18)

}; 
// Function Engine.LocalLightComponent.SetIntensityUnits
// Size: 0x1(Inherited: 0x0) 
struct FSetIntensityUnits
{
	uint8_t  NewIntensityUnits;  // 0x0(0x1)

}; 
// Function Engine.KismetTextLibrary.Conv_IntToText
// Size: 0x28(Inherited: 0x0) 
struct FConv_IntToText
{
	int32_t Value;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bAlwaysSign : 1;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bUseGrouping : 1;  // 0x5(0x1)
	char pad_6[2];  // 0x6(0x2)
	int32_t MinimumIntegralDigits;  // 0x8(0x4)
	int32_t MaximumIntegralDigits;  // 0xC(0x4)
	struct FText ReturnValue;  // 0x10(0x18)

}; 
// Function Engine.StaticMeshComponent.SetDistanceFieldSelfShadowBias
// Size: 0x4(Inherited: 0x0) 
struct FSetDistanceFieldSelfShadowBias
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetRenderingLibrary.SetCastInsetShadowForAllAttachments
// Size: 0x10(Inherited: 0x0) 
struct FSetCastInsetShadowForAllAttachments
{
	struct UPrimitiveComponent* PrimitiveComponent;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bCastInsetShadow : 1;  // 0x8(0x1)
	char pad_9_1 : 7;  // 0x9(0x1)
	bool bLightAttachmentsAsGroup : 1;  // 0x9(0x1)
	char pad_10[6];  // 0xA(0x6)

}; 
// Function Engine.KismetMathLibrary.NormalizedDeltaRotator
// Size: 0x24(Inherited: 0x0) 
struct FNormalizedDeltaRotator
{
	struct FRotator A;  // 0x0(0xC)
	struct FRotator B;  // 0xC(0xC)
	struct FRotator ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.StaticMeshComponent.GetLocalBounds
// Size: 0x18(Inherited: 0x0) 
struct FGetLocalBounds
{
	struct FVector Min;  // 0x0(0xC)
	struct FVector Max;  // 0xC(0xC)

}; 
// Function Engine.StaticMeshComponent.OnRep_StaticMesh
// Size: 0x8(Inherited: 0x0) 
struct FOnRep_StaticMesh
{
	struct UStaticMesh* OldStaticMesh;  // 0x0(0x8)

}; 
// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogEmissive
// Size: 0x10(Inherited: 0x0) 
struct FSetVolumetricFogEmissive
{
	struct FLinearColor NewValue;  // 0x0(0x10)

}; 
// Function Engine.StaticMeshComponent.SetForcedLodModel
// Size: 0x4(Inherited: 0x0) 
struct FSetForcedLodModel
{
	int32_t NewForcedLodModel;  // 0x0(0x4)

}; 
// Function Engine.InstancedStaticMeshComponent.AddInstance
// Size: 0x40(Inherited: 0x0) 
struct FAddInstance
{
	struct FTransform InstanceTransform;  // 0x0(0x30)
	int32_t ReturnValue;  // 0x30(0x4)
	char pad_52[12];  // 0x34(0xC)

}; 
// Function Engine.InstancedStaticMeshComponent.BatchUpdateInstancesTransforms
// Size: 0x20(Inherited: 0x0) 
struct FBatchUpdateInstancesTransforms
{
	int32_t StartInstanceIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct TArray<struct FTransform> NewInstancesTransforms;  // 0x8(0x10)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bWorldSpace : 1;  // 0x18(0x1)
	char pad_25_1 : 7;  // 0x19(0x1)
	bool bMarkRenderStateDirty : 1;  // 0x19(0x1)
	char pad_26_1 : 7;  // 0x1A(0x1)
	bool bTeleport : 1;  // 0x1A(0x1)
	char pad_27_1 : 7;  // 0x1B(0x1)
	bool ReturnValue : 1;  // 0x1B(0x1)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_ByObjectType
// Size: 0x110(Inherited: 0x0) 
struct FBlueprint_PredictProjectilePath_ByObjectType
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FHitResult OutHit;  // 0x8(0x88)
	struct TArray<struct FVector> OutPathPositions;  // 0x90(0x10)
	struct FVector OutLastTraceDestination;  // 0xA0(0xC)
	struct FVector StartPos;  // 0xAC(0xC)
	struct FVector LaunchVelocity;  // 0xB8(0xC)
	char pad_196_1 : 7;  // 0xC4(0x1)
	bool bTracePath : 1;  // 0xC4(0x1)
	char pad_197[3];  // 0xC5(0x3)
	float ProjectileRadius;  // 0xC8(0x4)
	char pad_204[4];  // 0xCC(0x4)
	struct TArray<char EObjectTypeQuery> ObjectTypes;  // 0xD0(0x10)
	char pad_224_1 : 7;  // 0xE0(0x1)
	bool bTraceComplex : 1;  // 0xE0(0x1)
	char pad_225[7];  // 0xE1(0x7)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0xE8(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0xF8(0x1)
	char pad_249[3];  // 0xF9(0x3)
	float DrawDebugTime;  // 0xFC(0x4)
	float SimFrequency;  // 0x100(0x4)
	float MaxSimTime;  // 0x104(0x4)
	float OverrideGravityZ;  // 0x108(0x4)
	char pad_268_1 : 7;  // 0x10C(0x1)
	bool ReturnValue : 1;  // 0x10C(0x1)
	char pad_269[3];  // 0x10D(0x3)

}; 
// Function Engine.BlueprintPlatformLibrary.GetDeviceOrientation
// Size: 0x1(Inherited: 0x0) 
struct FGetDeviceOrientation
{
	char EScreenOrientation ReturnValue;  // 0x0(0x1)

}; 
// Function Engine.InstancedStaticMeshComponent.GetInstancesOverlappingBox
// Size: 0x30(Inherited: 0x0) 
struct FGetInstancesOverlappingBox
{
	struct FBox Box;  // 0x0(0x1C)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bBoxInWorldSpace : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)
	struct TArray<int32_t> ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.InstancedStaticMeshComponent.GetInstancesOverlappingSphere
// Size: 0x28(Inherited: 0x0) 
struct FGetInstancesOverlappingSphere
{
	struct FVector Center;  // 0x0(0xC)
	float Radius;  // 0xC(0x4)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bSphereInWorldSpace : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)
	struct TArray<int32_t> ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.RuntimeVirtualTextureComponent.Invalidate
// Size: 0x1C(Inherited: 0x0) 
struct FInvalidate
{
	struct FBoxSphereBounds WorldBounds;  // 0x0(0x1C)

}; 
// Function Engine.InstancedStaticMeshComponent.GetInstanceTransform
// Size: 0x50(Inherited: 0x0) 
struct FGetInstanceTransform
{
	int32_t InstanceIndex;  // 0x0(0x4)
	char pad_4[12];  // 0x4(0xC)
	struct FTransform OutInstanceTransform;  // 0x10(0x30)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool bWorldSpace : 1;  // 0x40(0x1)
	char pad_65_1 : 7;  // 0x41(0x1)
	bool ReturnValue : 1;  // 0x41(0x1)
	char pad_66[14];  // 0x42(0xE)

}; 
// Function Engine.KismetMathLibrary.Quat_IsNormalized
// Size: 0x20(Inherited: 0x0) 
struct FQuat_IsNormalized
{
	struct FQuat Q;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[15];  // 0x11(0xF)

}; 
// Function Engine.Exporter.ScriptRunAssetExportTask
// Size: 0x10(Inherited: 0x0) 
struct FScriptRunAssetExportTask
{
	struct UAssetExportTask* Task;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.InstancedStaticMeshComponent.RemoveInstance
// Size: 0x8(Inherited: 0x0) 
struct FRemoveInstance
{
	int32_t InstanceIndex;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool ReturnValue : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.InstancedStaticMeshComponent.SetCustomDataValue
// Size: 0x10(Inherited: 0x0) 
struct FSetCustomDataValue
{
	int32_t InstanceIndex;  // 0x0(0x4)
	int32_t CustomDataIndex;  // 0x4(0x4)
	float CustomDataValue;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bMarkRenderStateDirty : 1;  // 0xC(0x1)
	char pad_13_1 : 7;  // 0xD(0x1)
	bool ReturnValue : 1;  // 0xD(0x1)
	char pad_14[2];  // 0xE(0x2)

}; 
// Function Engine.KismetInputLibrary.InputEvent_IsLeftAltDown
// Size: 0x20(Inherited: 0x0) 
struct FInputEvent_IsLeftAltDown
{
	struct FInputEvent Input;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.SkinnedMeshComponent.BoneIsChildOf
// Size: 0x14(Inherited: 0x0) 
struct FBoneIsChildOf
{
	struct FName BoneName;  // 0x0(0x8)
	struct FName ParentBoneName;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.SkinnedMeshComponent.GetBoneName
// Size: 0xC(Inherited: 0x0) 
struct FGetBoneName
{
	int32_t BoneIndex;  // 0x0(0x4)
	struct FName ReturnValue;  // 0x4(0x8)

}; 
// Function Engine.SkinnedMeshComponent.GetCurrentSkinWeightProfileName
// Size: 0x8(Inherited: 0x0) 
struct FGetCurrentSkinWeightProfileName
{
	struct FName ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.SkinnedMeshComponent.GetNumBones
// Size: 0x4(Inherited: 0x0) 
struct FGetNumBones
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.PlayerCameraManager.FindCameraModifierByClass
// Size: 0x10(Inherited: 0x0) 
struct FFindCameraModifierByClass
{
	UCameraModifier* ModifierClass;  // 0x0(0x8)
	struct UCameraModifier* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.SkinnedMeshComponent.GetSocketBoneName
// Size: 0x10(Inherited: 0x0) 
struct FGetSocketBoneName
{
	struct FName InSocketName;  // 0x0(0x8)
	struct FName ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.SkinnedMeshComponent.GetTwistAndSwingAngleOfDeltaRotationFromRefPose
// Size: 0x14(Inherited: 0x0) 
struct FGetTwistAndSwingAngleOfDeltaRotationFromRefPose
{
	struct FName BoneName;  // 0x0(0x8)
	float OutTwistAngle;  // 0x8(0x4)
	float OutSwingAngle;  // 0xC(0x4)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.SkinnedMeshComponent.SetCastCapsuleIndirectShadow
// Size: 0x1(Inherited: 0x0) 
struct FSetCastCapsuleIndirectShadow
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SkinnedMeshComponent.SetMasterPoseComponent
// Size: 0x10(Inherited: 0x0) 
struct FSetMasterPoseComponent
{
	struct USkinnedMeshComponent* NewMasterBoneComponent;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bForceUpdate : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.SkinnedMeshComponent.SetMinLOD
// Size: 0x4(Inherited: 0x0) 
struct FSetMinLOD
{
	int32_t InNewMinLOD;  // 0x0(0x4)

}; 
// Function Engine.SkinnedMeshComponent.SetPreSkinningOffsets
// Size: 0x18(Inherited: 0x0) 
struct FSetPreSkinningOffsets
{
	int32_t LODIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct TArray<struct FVector> Offsets;  // 0x8(0x10)

}; 
// Function Engine.SkinnedMeshComponent.SetSkinWeightProfile
// Size: 0xC(Inherited: 0x0) 
struct FSetSkinWeightProfile
{
	struct FName InProfileName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.SkinnedMeshComponent.SetVertexOffsetUsage
// Size: 0x8(Inherited: 0x0) 
struct FSetVertexOffsetUsage
{
	int32_t LODIndex;  // 0x0(0x4)
	int32_t Usage;  // 0x4(0x4)

}; 
// Function Engine.SkinnedMeshComponent.ShowMaterialSection
// Size: 0x10(Inherited: 0x0) 
struct FShowMaterialSection
{
	int32_t MaterialID;  // 0x0(0x4)
	int32_t SectionIndex;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bShow : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	int32_t LODIndex;  // 0xC(0x4)

}; 
// Function Engine.BlueprintPathsLibrary.EngineDir
// Size: 0x10(Inherited: 0x0) 
struct FEngineDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.SkeletalMeshComponent.AddForceToAllBodiesBelow
// Size: 0x18(Inherited: 0x0) 
struct FAddForceToAllBodiesBelow
{
	struct FVector force;  // 0x0(0xC)
	struct FName BoneName;  // 0xC(0x8)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bAccelChange : 1;  // 0x14(0x1)
	char pad_21_1 : 7;  // 0x15(0x1)
	bool bIncludeSelf : 1;  // 0x15(0x1)
	char pad_22[2];  // 0x16(0x2)

}; 
// Function Engine.World.K2_GetWorldSettings
// Size: 0x8(Inherited: 0x0) 
struct FK2_GetWorldSettings
{
	struct AWorldSettings* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.GameplayStatics.SpawnDialogue2D
// Size: 0x40(Inherited: 0x0) 
struct FSpawnDialogue2D
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UDialogueWave* Dialogue;  // 0x8(0x8)
	struct FDialogueContext Context;  // 0x10(0x18)
	float VolumeMultiplier;  // 0x28(0x4)
	float PitchMultiplier;  // 0x2C(0x4)
	float StartTime;  // 0x30(0x4)
	char pad_52_1 : 7;  // 0x34(0x1)
	bool bAutoDestroy : 1;  // 0x34(0x1)
	char pad_53[3];  // 0x35(0x3)
	struct UAudioComponent* ReturnValue;  // 0x38(0x8)

}; 
// Function Engine.SkeletalMeshComponent.AllowAnimCurveEvaluation
// Size: 0xC(Inherited: 0x0) 
struct FAllowAnimCurveEvaluation
{
	struct FName NameOfCurve;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bAllow : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FEqualEqual_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.SkeletalMeshComponent.FindConstraintBoneName
// Size: 0xC(Inherited: 0x0) 
struct FFindConstraintBoneName
{
	int32_t ConstraintIndex;  // 0x0(0x4)
	struct FName ReturnValue;  // 0x4(0x8)

}; 
// Function Engine.TimelineComponent.IsReversing
// Size: 0x1(Inherited: 0x0) 
struct FIsReversing
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SkeletalMeshComponent.GetAllowRigidBodyAnimNode
// Size: 0x1(Inherited: 0x0) 
struct FGetAllowRigidBodyAnimNode
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SkeletalMeshComponent.GetAnimClass
// Size: 0x8(Inherited: 0x0) 
struct FGetAnimClass
{
	UObject* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.MaxOfByteArray
// Size: 0x18(Inherited: 0x0) 
struct FMaxOfByteArray
{
	struct TArray<char> ByteArray;  // 0x0(0x10)
	int32_t IndexOfMaxValue;  // 0x10(0x4)
	char MaxValue;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.SkeletalMeshComponent.GetClothingSimulationInteractor
// Size: 0x8(Inherited: 0x0) 
struct FGetClothingSimulationInteractor
{
	struct UClothingSimulationInteractor* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.SkeletalMeshComponent.GetClothMaxDistanceScale
// Size: 0x4(Inherited: 0x0) 
struct FGetClothMaxDistanceScale
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.PoseableMeshComponent.ResetBoneTransformByName
// Size: 0x8(Inherited: 0x0) 
struct FResetBoneTransformByName
{
	struct FName BoneName;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.Matrix_TransformVector
// Size: 0x60(Inherited: 0x0) 
struct FMatrix_TransformVector
{
	struct FMatrix M;  // 0x0(0x40)
	struct FVector V;  // 0x40(0xC)
	char pad_76[4];  // 0x4C(0x4)
	struct FVector4 ReturnValue;  // 0x50(0x10)

}; 
// Function Engine.SkeletalMeshComponent.GetDisableAnimCurves
// Size: 0x1(Inherited: 0x0) 
struct FGetDisableAnimCurves
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.FFloor
// Size: 0x8(Inherited: 0x0) 
struct FFFloor
{
	float A;  // 0x0(0x4)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.GameModeBase.RestartPlayer
// Size: 0x8(Inherited: 0x0) 
struct FRestartPlayer
{
	struct AController* NewPlayer;  // 0x0(0x8)

}; 
// Function Engine.SkeletalMeshComponent.GetFloatAttribute
// Size: 0x1C(Inherited: 0x0) 
struct FGetFloatAttribute
{
	struct FName BoneName;  // 0x0(0x8)
	struct FName AttributeName;  // 0x8(0x8)
	float DefaultValue;  // 0x10(0x4)
	float OutValue;  // 0x14(0x4)
	uint8_t  LookupType;  // 0x18(0x1)
	char pad_25_1 : 7;  // 0x19(0x1)
	bool ReturnValue : 1;  // 0x19(0x1)
	char pad_26[2];  // 0x1A(0x2)

}; 
// Function Engine.SkeletalMeshComponent.GetMorphTarget
// Size: 0xC(Inherited: 0x0) 
struct FGetMorphTarget
{
	struct FName MorphTargetName;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.SkeletalMeshComponent.GetPosition
// Size: 0x4(Inherited: 0x0) 
struct FGetPosition
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.SoundSubmix.StopRecordingOutput
// Size: 0x38(Inherited: 0x0) 
struct FStopRecordingOutput
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	uint8_t  ExportType;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)
	struct FString Name;  // 0x10(0x10)
	struct FString Path;  // 0x20(0x10)
	struct USoundWave* ExistingSoundWaveToOverwrite;  // 0x30(0x8)

}; 
// Function Engine.KismetStringLibrary.Conv_IntToString
// Size: 0x18(Inherited: 0x0) 
struct FConv_IntToString
{
	int32_t inInt;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.SkeletalMeshComponent.GetTeleportRotationThreshold
// Size: 0x4(Inherited: 0x0) 
struct FGetTeleportRotationThreshold
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.GameplayStatics.PlayDialogueAtLocation
// Size: 0x58(Inherited: 0x0) 
struct FPlayDialogueAtLocation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UDialogueWave* Dialogue;  // 0x8(0x8)
	struct FDialogueContext Context;  // 0x10(0x18)
	struct FVector Location;  // 0x28(0xC)
	struct FRotator Rotation;  // 0x34(0xC)
	float VolumeMultiplier;  // 0x40(0x4)
	float PitchMultiplier;  // 0x44(0x4)
	float StartTime;  // 0x48(0x4)
	char pad_76[4];  // 0x4C(0x4)
	struct USoundAttenuation* AttenuationSettings;  // 0x50(0x8)

}; 
// Function Engine.SkeletalMeshComponent.IsClothingSimulationSuspended
// Size: 0x1(Inherited: 0x0) 
struct FIsClothingSimulationSuspended
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SkeletalMeshComponent.SetAllMotorsAngularDriveParams
// Size: 0x10(Inherited: 0x0) 
struct FSetAllMotorsAngularDriveParams
{
	float InSpring;  // 0x0(0x4)
	float InDamping;  // 0x4(0x4)
	float InForceLimit;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bSkipCustomPhysicsType : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.SkeletalMeshComponent.SetAllowRigidBodyAnimNode
// Size: 0x2(Inherited: 0x0) 
struct FSetAllowRigidBodyAnimNode
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInAllow : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bReinitAnim : 1;  // 0x1(0x1)

}; 
// Function Engine.SpringArmComponent.IsCollisionFixApplied
// Size: 0x1(Inherited: 0x0) 
struct FIsCollisionFixApplied
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.SkeletalMeshComponent.SetAngularLimits
// Size: 0x14(Inherited: 0x0) 
struct FSetAngularLimits
{
	struct FName InBoneName;  // 0x0(0x8)
	float Swing1LimitAngle;  // 0x8(0x4)
	float TwistLimitAngle;  // 0xC(0x4)
	float Swing2LimitAngle;  // 0x10(0x4)

}; 
// Function Engine.SkeletalMeshComponent.SetAnimation
// Size: 0x8(Inherited: 0x0) 
struct FSetAnimation
{
	struct UAnimationAsset* NewAnimToPlay;  // 0x0(0x8)

}; 
// Function Engine.SkeletalMeshComponent.SetConstraintProfile
// Size: 0x14(Inherited: 0x0) 
struct FSetConstraintProfile
{
	struct FName JointName;  // 0x0(0x8)
	struct FName ProfileName;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bDefaultIfNotFound : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.SkeletalMeshComponent.SetDisableAnimCurves
// Size: 0x1(Inherited: 0x0) 
struct FSetDisableAnimCurves
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInDisableAnimCurves : 1;  // 0x0(0x1)

}; 
// Function Engine.GameUserSettings.ApplySettings
// Size: 0x1(Inherited: 0x0) 
struct FApplySettings
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bCheckForCommandLineOverrides : 1;  // 0x0(0x1)

}; 
// Function Engine.SkeletalMeshComponent.SetEnableBodyGravity
// Size: 0xC(Inherited: 0x0) 
struct FSetEnableBodyGravity
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnableGravity : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FName BoneName;  // 0x4(0x8)

}; 
// Function Engine.PlayerCameraManager.StartCameraShakeFromSource
// Size: 0x30(Inherited: 0x0) 
struct FStartCameraShakeFromSource
{
	UCameraShakeBase* ShakeClass;  // 0x0(0x8)
	struct UCameraShakeSourceComponent* SourceComponent;  // 0x8(0x8)
	float Scale;  // 0x10(0x4)
	uint8_t  PlaySpace;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)
	struct FRotator UserPlaySpaceRot;  // 0x18(0xC)
	char pad_36[4];  // 0x24(0x4)
	struct UCameraShakeBase* ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.SkeletalMeshComponent.SetPhysicsBlendWeight
// Size: 0x4(Inherited: 0x0) 
struct FSetPhysicsBlendWeight
{
	float PhysicsBlendWeight;  // 0x0(0x4)

}; 
// Function Engine.SkeletalMeshComponent.SetTeleportDistanceThreshold
// Size: 0x4(Inherited: 0x0) 
struct FSetTeleportDistanceThreshold
{
	float Threshold;  // 0x0(0x4)

}; 
// Function Engine.ExponentialHeightFogComponent.SetInscatteringTextureTint
// Size: 0x10(Inherited: 0x0) 
struct FSetInscatteringTextureTint
{
	struct FLinearColor Value;  // 0x0(0x10)

}; 
// Function Engine.SkeletalMeshComponent.TermBodiesBelow
// Size: 0x8(Inherited: 0x0) 
struct FTermBodiesBelow
{
	struct FName ParentBoneName;  // 0x0(0x8)

}; 
// Function Engine.PlayerCameraManager.AddNewCameraModifier
// Size: 0x10(Inherited: 0x0) 
struct FAddNewCameraModifier
{
	UCameraModifier* ModifierClass;  // 0x0(0x8)
	struct UCameraModifier* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Multiply_VectorVector
// Size: 0x24(Inherited: 0x0) 
struct FMultiply_VectorVector
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.PlayerCameraManager.BlueprintUpdateCamera
// Size: 0x28(Inherited: 0x0) 
struct FBlueprintUpdateCamera
{
	struct AActor* CameraTarget;  // 0x0(0x8)
	struct FVector NewCameraLocation;  // 0x8(0xC)
	struct FRotator NewCameraRotation;  // 0x14(0xC)
	float NewCameraFOV;  // 0x20(0x4)
	char pad_36_1 : 7;  // 0x24(0x1)
	bool ReturnValue : 1;  // 0x24(0x1)
	char pad_37[3];  // 0x25(0x3)

}; 
// Function Engine.PlayerCameraManager.GetCameraLocation
// Size: 0xC(Inherited: 0x0) 
struct FGetCameraLocation
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.PlayerCameraManager.PhotographyCameraModify
// Size: 0x30(Inherited: 0x0) 
struct FPhotographyCameraModify
{
	struct FVector NewCameraLocation;  // 0x0(0xC)
	struct FVector PreviousCameraLocation;  // 0xC(0xC)
	struct FVector OriginalCameraLocation;  // 0x18(0xC)
	struct FVector ResultCameraLocation;  // 0x24(0xC)

}; 
// Function Engine.KismetMathLibrary.IsPointInBoxWithTransform
// Size: 0x50(Inherited: 0x0) 
struct FIsPointInBoxWithTransform
{
	struct FVector Point;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct FTransform BoxWorldTransform;  // 0x10(0x30)
	struct FVector BoxExtent;  // 0x40(0xC)
	char pad_76_1 : 7;  // 0x4C(0x1)
	bool ReturnValue : 1;  // 0x4C(0x1)
	char pad_77[3];  // 0x4D(0x3)

}; 
// Function Engine.PlayerCameraManager.PlayCameraAnim
// Size: 0x38(Inherited: 0x0) 
struct FPlayCameraAnim
{
	struct UCameraAnim* Anim;  // 0x0(0x8)
	float Rate;  // 0x8(0x4)
	float Scale;  // 0xC(0x4)
	float BlendInTime;  // 0x10(0x4)
	float BlendOutTime;  // 0x14(0x4)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bLoop : 1;  // 0x18(0x1)
	char pad_25_1 : 7;  // 0x19(0x1)
	bool bRandomStartTime : 1;  // 0x19(0x1)
	char pad_26[2];  // 0x1A(0x2)
	float Duration;  // 0x1C(0x4)
	uint8_t  PlaySpace;  // 0x20(0x1)
	char pad_33[3];  // 0x21(0x3)
	struct FRotator UserPlaySpaceRot;  // 0x24(0xC)
	struct UCameraAnimInst* ReturnValue;  // 0x30(0x8)

}; 
// Function Engine.PlayerCameraManager.RemoveCameraLensEffect
// Size: 0x8(Inherited: 0x0) 
struct FRemoveCameraLensEffect
{
	struct AEmitterCameraLensEffectBase* Emitter;  // 0x0(0x8)

}; 
// Function Engine.PlayerCameraManager.RemoveCameraModifier
// Size: 0x10(Inherited: 0x0) 
struct FRemoveCameraModifier
{
	struct UCameraModifier* ModifierToRemove;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.PlayerCameraManager.SetManualCameraFade
// Size: 0x18(Inherited: 0x0) 
struct FSetManualCameraFade
{
	float InFadeAmount;  // 0x0(0x4)
	struct FLinearColor Color;  // 0x4(0x10)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool bInFadeAudio : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.PlayerCameraManager.StartCameraFade
// Size: 0x20(Inherited: 0x0) 
struct FStartCameraFade
{
	float FromAlpha;  // 0x0(0x4)
	float ToAlpha;  // 0x4(0x4)
	float Duration;  // 0x8(0x4)
	struct FLinearColor Color;  // 0xC(0x10)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bShouldFadeAudio : 1;  // 0x1C(0x1)
	char pad_29_1 : 7;  // 0x1D(0x1)
	bool bHoldWhenFinished : 1;  // 0x1D(0x1)
	char pad_30[2];  // 0x1E(0x2)

}; 
// Function Engine.PlayerCameraManager.StopAllCameraAnims
// Size: 0x1(Inherited: 0x0) 
struct FStopAllCameraAnims
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bImmediate : 1;  // 0x0(0x1)

}; 
// Function Engine.PlayerCameraManager.StopAllCameraShakesFromSource
// Size: 0x10(Inherited: 0x0) 
struct FStopAllCameraShakesFromSource
{
	struct UCameraShakeSourceComponent* SourceComponent;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bImmediately : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.PlayerCameraManager.StopAllInstancesOfCameraShakeFromSource
// Size: 0x18(Inherited: 0x0) 
struct FStopAllInstancesOfCameraShakeFromSource
{
	UCameraShakeBase* Shake;  // 0x0(0x8)
	struct UCameraShakeSourceComponent* SourceComponent;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bImmediately : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.GameModeBase.CanSpectate
// Size: 0x18(Inherited: 0x0) 
struct FCanSpectate
{
	struct APlayerController* Viewer;  // 0x0(0x8)
	struct APlayerState* ViewTarget;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.GameModeBase.ChangeName
// Size: 0x20(Inherited: 0x0) 
struct FChangeName
{
	struct AController* Controller;  // 0x0(0x8)
	struct FString NewName;  // 0x8(0x10)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bNameChange : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetStringTableLibrary.GetMetaDataIdsFromStringTableEntry
// Size: 0x28(Inherited: 0x0) 
struct FGetMetaDataIdsFromStringTableEntry
{
	struct FName TableId;  // 0x0(0x8)
	struct FString Key;  // 0x8(0x10)
	struct TArray<struct FName> ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.GameModeBase.GetDefaultPawnClassForController
// Size: 0x10(Inherited: 0x0) 
struct FGetDefaultPawnClassForController
{
	struct AController* InController;  // 0x0(0x8)
	UObject* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.GameStateBase.HasMatchEnded
// Size: 0x1(Inherited: 0x0) 
struct FHasMatchEnded
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.GameStateBase.HasMatchStarted
// Size: 0x1(Inherited: 0x0) 
struct FHasMatchStarted
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.GameModeBase.InitializeHUDForPlayer
// Size: 0x8(Inherited: 0x0) 
struct FInitializeHUDForPlayer
{
	struct APlayerController* NewPlayer;  // 0x0(0x8)

}; 
// Function Engine.GameModeBase.K2_FindPlayerStart
// Size: 0x20(Inherited: 0x0) 
struct FK2_FindPlayerStart
{
	struct AController* Player;  // 0x0(0x8)
	struct FString IncomingName;  // 0x8(0x10)
	struct AActor* ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.GameModeBase.K2_OnChangeName
// Size: 0x20(Inherited: 0x0) 
struct FK2_OnChangeName
{
	struct AController* Other;  // 0x0(0x8)
	struct FString NewName;  // 0x8(0x10)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bNameChange : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.GameModeBase.K2_OnRestartPlayer
// Size: 0x8(Inherited: 0x0) 
struct FK2_OnRestartPlayer
{
	struct AController* NewPlayer;  // 0x0(0x8)

}; 
// Function Engine.GameModeBase.K2_PostLogin
// Size: 0x8(Inherited: 0x0) 
struct FK2_PostLogin
{
	struct APlayerController* NewPlayer;  // 0x0(0x8)

}; 
// Function Engine.GameModeBase.RestartPlayerAtPlayerStart
// Size: 0x10(Inherited: 0x0) 
struct FRestartPlayerAtPlayerStart
{
	struct AController* NewPlayer;  // 0x0(0x8)
	struct AActor* StartSpot;  // 0x8(0x8)

}; 
// Function Engine.Light.SetBrightness
// Size: 0x4(Inherited: 0x0) 
struct FSetBrightness
{
	float NewBrightness;  // 0x0(0x4)

}; 
// Function Engine.GameModeBase.RestartPlayerAtTransform
// Size: 0x40(Inherited: 0x0) 
struct FRestartPlayerAtTransform
{
	struct AController* NewPlayer;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FTransform SpawnTransform;  // 0x10(0x30)

}; 
// Function Engine.GameModeBase.ShouldReset
// Size: 0x10(Inherited: 0x0) 
struct FShouldReset
{
	struct AActor* ActorToReset;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.GameModeBase.SpawnDefaultPawnAtTransform
// Size: 0x50(Inherited: 0x0) 
struct FSpawnDefaultPawnAtTransform
{
	struct AController* NewPlayer;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FTransform SpawnTransform;  // 0x10(0x30)
	struct APawn* ReturnValue;  // 0x40(0x8)
	char pad_72[8];  // 0x48(0x8)

}; 
// Function Engine.GameModeBase.SpawnDefaultPawnFor
// Size: 0x18(Inherited: 0x0) 
struct FSpawnDefaultPawnFor
{
	struct AController* NewPlayer;  // 0x0(0x8)
	struct AActor* StartSpot;  // 0x8(0x8)
	struct APawn* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.GameMode.GetMatchState
// Size: 0x8(Inherited: 0x0) 
struct FGetMatchState
{
	struct FName ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_TimespanTimespan
// Size: 0x18(Inherited: 0x0) 
struct FEqualEqual_TimespanTimespan
{
	struct FTimespan A;  // 0x0(0x8)
	struct FTimespan B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.GameMode.IsMatchInProgress
// Size: 0x1(Inherited: 0x0) 
struct FIsMatchInProgress
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.RuntimeVirtualTexture.GetTileCount
// Size: 0x4(Inherited: 0x0) 
struct FGetTileCount
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetNodeHelperLibrary.HasMarkedBit
// Size: 0xC(Inherited: 0x0) 
struct FHasMarkedBit
{
	int32_t Data;  // 0x0(0x4)
	int32_t NumBits;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.GameMode.K2_OnSetMatchState
// Size: 0x8(Inherited: 0x0) 
struct FK2_OnSetMatchState
{
	struct FName NewState;  // 0x0(0x8)

}; 
// Function Engine.GameMode.ReadyToEndMatch
// Size: 0x1(Inherited: 0x0) 
struct FReadyToEndMatch
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.CheatManager.ViewClass
// Size: 0x8(Inherited: 0x0) 
struct FViewClass
{
	AActor* DesiredClass;  // 0x0(0x8)

}; 
// Function Engine.AutoDestroySubsystem.OnActorEndPlay
// Size: 0x10(Inherited: 0x0) 
struct FOnActorEndPlay
{
	struct AActor* Actor;  // 0x0(0x8)
	char EEndPlayReason EndPlayReason;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.GameMode.ReadyToStartMatch
// Size: 0x1(Inherited: 0x0) 
struct FReadyToStartMatch
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.GameplayStatics.GetAllActorsWithTag
// Size: 0x20(Inherited: 0x0) 
struct FGetAllActorsWithTag
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FName Tag;  // 0x8(0x8)
	struct TArray<struct AActor*> OutActors;  // 0x10(0x10)

}; 
// Function Engine.GameMode.Say
// Size: 0x10(Inherited: 0x0) 
struct FSay
{
	struct FString Msg;  // 0x0(0x10)

}; 
// Function Engine.GameStateBase.GetPlayerRespawnDelay
// Size: 0x10(Inherited: 0x0) 
struct FGetPlayerRespawnDelay
{
	struct AController* Controller;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.PlayerState.IsOnlyASpectator
// Size: 0x1(Inherited: 0x0) 
struct FIsOnlyASpectator
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.MaxOfIntArray
// Size: 0x18(Inherited: 0x0) 
struct FMaxOfIntArray
{
	struct TArray<int32_t> IntArray;  // 0x0(0x10)
	int32_t IndexOfMaxValue;  // 0x10(0x4)
	int32_t MaxValue;  // 0x14(0x4)

}; 
// Function Engine.PlayerState.ReceiveOverrideWith
// Size: 0x8(Inherited: 0x0) 
struct FReceiveOverrideWith
{
	struct APlayerState* OldPlayerState;  // 0x0(0x8)

}; 
// Function Engine.DefaultPawn.LookUpAtRate
// Size: 0x4(Inherited: 0x0) 
struct FLookUpAtRate
{
	float Rate;  // 0x0(0x4)

}; 
// Function Engine.SkyAtmosphereComponent.SetMieScattering
// Size: 0x10(Inherited: 0x0) 
struct FSetMieScattering
{
	struct FLinearColor NewValue;  // 0x0(0x10)

}; 
// Function Engine.DefaultPawn.MoveRight
// Size: 0x4(Inherited: 0x0) 
struct FMoveRight
{
	float Val;  // 0x0(0x4)

}; 
// Function Engine.DefaultPawn.MoveUp_World
// Size: 0x4(Inherited: 0x0) 
struct FMoveUp_World
{
	float Val;  // 0x0(0x4)

}; 
// Function Engine.CameraActor.GetAutoActivatePlayerIndex
// Size: 0x4(Inherited: 0x0) 
struct FGetAutoActivatePlayerIndex
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.CapsuleComponent.GetScaledCapsuleHalfHeight
// Size: 0x4(Inherited: 0x0) 
struct FGetScaledCapsuleHalfHeight
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.CapsuleComponent.GetScaledCapsuleHalfHeight_WithoutHemisphere
// Size: 0x4(Inherited: 0x0) 
struct FGetScaledCapsuleHalfHeight_WithoutHemisphere
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.CapsuleComponent.GetScaledCapsuleRadius
// Size: 0x4(Inherited: 0x0) 
struct FGetScaledCapsuleRadius
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.SplineMeshComponent.SetBoundaryMax
// Size: 0x8(Inherited: 0x0) 
struct FSetBoundaryMax
{
	float InBoundaryMax;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bUpdateMesh : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.CapsuleComponent.GetScaledCapsuleSize
// Size: 0x8(Inherited: 0x0) 
struct FGetScaledCapsuleSize
{
	float OutRadius;  // 0x0(0x4)
	float OutHalfHeight;  // 0x4(0x4)

}; 
// Function Engine.SphereComponent.GetShapeScale
// Size: 0x4(Inherited: 0x0) 
struct FGetShapeScale
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.CapsuleComponent.GetUnscaledCapsuleHalfHeight
// Size: 0x4(Inherited: 0x0) 
struct FGetUnscaledCapsuleHalfHeight
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.CapsuleComponent.GetUnscaledCapsuleHalfHeight_WithoutHemisphere
// Size: 0x4(Inherited: 0x0) 
struct FGetUnscaledCapsuleHalfHeight_WithoutHemisphere
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.CapsuleComponent.GetUnscaledCapsuleRadius
// Size: 0x4(Inherited: 0x0) 
struct FGetUnscaledCapsuleRadius
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.CapsuleComponent.SetCapsuleSize
// Size: 0xC(Inherited: 0x0) 
struct FSetCapsuleSize
{
	float InRadius;  // 0x0(0x4)
	float InHalfHeight;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bUpdateOverlaps : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.CameraComponent.SetOrthoFarClipPlane
// Size: 0x4(Inherited: 0x0) 
struct FSetOrthoFarClipPlane
{
	float InOrthoFarClipPlane;  // 0x0(0x4)

}; 
// Function Engine.CameraComponent.SetOrthoNearClipPlane
// Size: 0x4(Inherited: 0x0) 
struct FSetOrthoNearClipPlane
{
	float InOrthoNearClipPlane;  // 0x0(0x4)

}; 
// Function Engine.CameraComponent.SetOrthoWidth
// Size: 0x4(Inherited: 0x0) 
struct FSetOrthoWidth
{
	float InOrthoWidth;  // 0x0(0x4)

}; 
// Function Engine.Light.IsEnabled
// Size: 0x1(Inherited: 0x0) 
struct FIsEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.AudioVolume.SetEnabled
// Size: 0x1(Inherited: 0x0) 
struct FSetEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewEnabled : 1;  // 0x0(0x1)

}; 
// Function Engine.BoxComponent.GetScaledBoxExtent
// Size: 0xC(Inherited: 0x0) 
struct FGetScaledBoxExtent
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.BoxComponent.SetBoxExtent
// Size: 0x10(Inherited: 0x0) 
struct FSetBoxExtent
{
	struct FVector InBoxExtent;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bUpdateOverlaps : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.MaterialInterface.GetBaseMaterial
// Size: 0x8(Inherited: 0x0) 
struct FGetBaseMaterial
{
	struct UMaterial* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.MaterialInterface.GetParameterInfo
// Size: 0x28(Inherited: 0x0) 
struct FGetParameterInfo
{
	char EMaterialParameterAssociation Association;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FName ParameterName;  // 0x4(0x8)
	char pad_12[4];  // 0xC(0x4)
	struct UMaterialFunctionInterface* LayerFunction;  // 0x10(0x8)
	struct FMaterialParameterInfo ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.GameUserSettings.IsVSyncEnabled
// Size: 0x1(Inherited: 0x0) 
struct FIsVSyncEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.MaterialInterface.GetPhysicalMaterialFromMap
// Size: 0x10(Inherited: 0x0) 
struct FGetPhysicalMaterialFromMap
{
	int32_t Index;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct UPhysicalMaterial* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.MaterialInterface.GetPhysicalMaterialMask
// Size: 0x8(Inherited: 0x0) 
struct FGetPhysicalMaterialMask
{
	struct UPhysicalMaterialMask* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.Canvas.K2_DrawTriangle
// Size: 0x18(Inherited: 0x0) 
struct FK2_DrawTriangle
{
	struct UTexture* RenderTexture;  // 0x0(0x8)
	struct TArray<struct FCanvasUVTri> Triangles;  // 0x8(0x10)

}; 
// Function Engine.MaterialInterface.SetForceMipLevelsToBeResident
// Size: 0x10(Inherited: 0x0) 
struct FSetForceMipLevelsToBeResident
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool OverrideForceMiplevelsToBeResident : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bForceMiplevelsToBeResidentValue : 1;  // 0x1(0x1)
	char pad_2[2];  // 0x2(0x2)
	float ForceDuration;  // 0x4(0x4)
	int32_t CinematicTextureGroups;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bFastResponse : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.KismetMathLibrary.IntPoint_Zero
// Size: 0x8(Inherited: 0x0) 
struct FIntPoint_Zero
{
	struct FIntPoint ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.MaterialInstanceDynamic.K2_GetScalarParameterValue
// Size: 0xC(Inherited: 0x0) 
struct FK2_GetScalarParameterValue
{
	struct FName ParameterName;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.MaterialInstanceDynamic.K2_GetTextureParameterValue
// Size: 0x10(Inherited: 0x0) 
struct FK2_GetTextureParameterValue
{
	struct FName ParameterName;  // 0x0(0x8)
	struct UTexture* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.MaterialInstanceDynamic.K2_GetVectorParameterValue
// Size: 0x18(Inherited: 0x0) 
struct FK2_GetVectorParameterValue
{
	struct FName ParameterName;  // 0x0(0x8)
	struct FLinearColor ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.StaticMesh.GetMinimumLODForPlatforms
// Size: 0x50(Inherited: 0x0) 
struct FGetMinimumLODForPlatforms
{
	struct TMap<struct FName, int32_t> PlatformMinimumLODs;  // 0x0(0x50)

}; 
// Function Engine.KismetMathLibrary.Divide_Vector2DVector2D
// Size: 0x18(Inherited: 0x0) 
struct FDivide_Vector2DVector2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D B;  // 0x8(0x8)
	struct FVector2D ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.AnimSequenceBase.GetPlayLength
// Size: 0x4(Inherited: 0x0) 
struct FGetPlayLength
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.AnimMontage.GetDefaultBlendOutTime
// Size: 0x4(Inherited: 0x0) 
struct FGetDefaultBlendOutTime
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.Vector_Distance2D
// Size: 0x1C(Inherited: 0x0) 
struct FVector_Distance2D
{
	struct FVector v1;  // 0x0(0xC)
	struct FVector v2;  // 0xC(0xC)
	float ReturnValue;  // 0x18(0x4)

}; 
// Function Engine.KismetMathLibrary.BooleanOR
// Size: 0x3(Inherited: 0x0) 
struct FBooleanOR
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool A : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool B : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool ReturnValue : 1;  // 0x2(0x1)

}; 
// Function Engine.AnimNotifyState_Trail.OverridePSTemplate
// Size: 0x18(Inherited: 0x0) 
struct FOverridePSTemplate
{
	struct USkeletalMeshComponent* MeshComp;  // 0x0(0x8)
	struct UAnimSequenceBase* Animation;  // 0x8(0x8)
	struct UParticleSystem* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.AnimSingleNodeInstance.GetLength
// Size: 0x4(Inherited: 0x0) 
struct FGetLength
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.AnimSingleNodeInstance.SetAnimationAsset
// Size: 0x10(Inherited: 0x0) 
struct FSetAnimationAsset
{
	struct UAnimationAsset* NewAsset;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bIsLooping : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	float InPlayRate;  // 0xC(0x4)

}; 
// Function Engine.AnimSingleNodeInstance.SetBlendSpaceInput
// Size: 0xC(Inherited: 0x0) 
struct FSetBlendSpaceInput
{
	struct FVector InBlendInput;  // 0x0(0xC)

}; 
// Function Engine.TimelineComponent.SetLooping
// Size: 0x1(Inherited: 0x0) 
struct FSetLooping
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewLooping : 1;  // 0x0(0x1)

}; 
// Function Engine.AnimSingleNodeInstance.SetPlaying
// Size: 0x1(Inherited: 0x0) 
struct FSetPlaying
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bIsPlaying : 1;  // 0x0(0x1)

}; 
// Function Engine.AsyncActionHandleSaveGame.AsyncLoadGameFromSlot
// Size: 0x28(Inherited: 0x0) 
struct FAsyncLoadGameFromSlot
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FString SlotName;  // 0x8(0x10)
	int32_t UserIndex;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)
	struct UAsyncActionHandleSaveGame* ReturnValue;  // 0x20(0x8)

}; 
// Function Engine.AsyncActionHandleSaveGame.AsyncSaveGameToSlot
// Size: 0x30(Inherited: 0x0) 
struct FAsyncSaveGameToSlot
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct USaveGame* SaveGameObject;  // 0x8(0x8)
	struct FString SlotName;  // 0x10(0x10)
	int32_t UserIndex;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)
	struct UAsyncActionHandleSaveGame* ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.AsyncActionLoadPrimaryAsset.AsyncLoadPrimaryAsset
// Size: 0x30(Inherited: 0x0) 
struct FAsyncLoadPrimaryAsset
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FPrimaryAssetId PrimaryAsset;  // 0x8(0x10)
	struct TArray<struct FName> LoadBundles;  // 0x18(0x10)
	struct UAsyncActionLoadPrimaryAsset* ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.AsyncActionLoadPrimaryAssetClass.AsyncLoadPrimaryAssetClass
// Size: 0x30(Inherited: 0x0) 
struct FAsyncLoadPrimaryAssetClass
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FPrimaryAssetId PrimaryAsset;  // 0x8(0x10)
	struct TArray<struct FName> LoadBundles;  // 0x18(0x10)
	struct UAsyncActionLoadPrimaryAssetClass* ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.LODSyncComponent.GetLODSyncDebugText
// Size: 0x10(Inherited: 0x0) 
struct FGetLODSyncDebugText
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.Conv_VectorToRotator
// Size: 0x18(Inherited: 0x0) 
struct FConv_VectorToRotator
{
	struct FVector InVec;  // 0x0(0xC)
	struct FRotator ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.CheatManager.BugItStringCreator
// Size: 0x38(Inherited: 0x0) 
struct FBugItStringCreator
{
	struct FVector ViewLocation;  // 0x0(0xC)
	struct FRotator ViewRotation;  // 0xC(0xC)
	struct FString GoString;  // 0x18(0x10)
	struct FString LocString;  // 0x28(0x10)

}; 
// Function Engine.AsyncActionLoadPrimaryAssetClassList.AsyncLoadPrimaryAssetClassList
// Size: 0x30(Inherited: 0x0) 
struct FAsyncLoadPrimaryAssetClassList
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct TArray<struct FPrimaryAssetId> PrimaryAssetList;  // 0x8(0x10)
	struct TArray<struct FName> LoadBundles;  // 0x18(0x10)
	struct UAsyncActionLoadPrimaryAssetClassList* ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.AsyncActionChangePrimaryAssetBundles.AsyncChangeBundleStateForMatchingPrimaryAssets
// Size: 0x30(Inherited: 0x0) 
struct FAsyncChangeBundleStateForMatchingPrimaryAssets
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct TArray<struct FName> NewBundles;  // 0x8(0x10)
	struct TArray<struct FName> OldBundles;  // 0x18(0x10)
	struct UAsyncActionChangePrimaryAssetBundles* ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.AsyncActionChangePrimaryAssetBundles.AsyncChangeBundleStateForPrimaryAssetList
// Size: 0x40(Inherited: 0x0) 
struct FAsyncChangeBundleStateForPrimaryAssetList
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct TArray<struct FPrimaryAssetId> PrimaryAssetList;  // 0x8(0x10)
	struct TArray<struct FName> AddBundles;  // 0x18(0x10)
	struct TArray<struct FName> RemoveBundles;  // 0x28(0x10)
	struct UAsyncActionChangePrimaryAssetBundles* ReturnValue;  // 0x38(0x8)

}; 
// Function Engine.KismetMathLibrary.InRange_IntInt
// Size: 0x10(Inherited: 0x0) 
struct FInRange_IntInt
{
	int32_t Value;  // 0x0(0x4)
	int32_t Min;  // 0x4(0x4)
	int32_t Max;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool InclusiveMin : 1;  // 0xC(0x1)
	char pad_13_1 : 7;  // 0xD(0x1)
	bool InclusiveMax : 1;  // 0xD(0x1)
	char pad_14_1 : 7;  // 0xE(0x1)
	bool ReturnValue : 1;  // 0xE(0x1)
	char pad_15[1];  // 0xF(0x1)

}; 
// Function Engine.KismetMathLibrary.FTruncVector
// Size: 0x18(Inherited: 0x0) 
struct FFTruncVector
{
	struct FVector InVector;  // 0x0(0xC)
	struct FIntVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.AudioVolume.SetInteriorSettings
// Size: 0x24(Inherited: 0x0) 
struct FSetInteriorSettings
{
	struct FInteriorSettings NewInteriorSettings;  // 0x0(0x24)

}; 
// Function Engine.AtmosphericFogComponent.DisableGroundScattering
// Size: 0x1(Inherited: 0x0) 
struct FDisableGroundScattering
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool NewGroundScattering : 1;  // 0x0(0x1)

}; 
// Function Engine.AtmosphericFogComponent.SetDefaultBrightness
// Size: 0x4(Inherited: 0x0) 
struct FSetDefaultBrightness
{
	float NewBrightness;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.ResetRandomStream
// Size: 0x8(Inherited: 0x0) 
struct FResetRandomStream
{
	struct FRandomStream Stream;  // 0x0(0x8)

}; 
// Function Engine.AtmosphericFogComponent.SetDefaultLightColor
// Size: 0x10(Inherited: 0x0) 
struct FSetDefaultLightColor
{
	struct FLinearColor NewLightColor;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.PointsAreCoplanar
// Size: 0x18(Inherited: 0x0) 
struct FPointsAreCoplanar
{
	struct TArray<struct FVector> Points;  // 0x0(0x10)
	float Tolerance;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetFrustumBottomPlane
// Size: 0x60(Inherited: 0x0) 
struct FMatrix_GetFrustumBottomPlane
{
	struct FMatrix M;  // 0x0(0x40)
	struct FPlane OutPlane;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool ReturnValue : 1;  // 0x50(0x1)
	char pad_81[15];  // 0x51(0xF)

}; 
// Function Engine.AtmosphericFogComponent.SetDensityMultiplier
// Size: 0x4(Inherited: 0x0) 
struct FSetDensityMultiplier
{
	float NewDensityMultiplier;  // 0x0(0x4)

}; 
// Function Engine.AtmosphericFogComponent.SetFogMultiplier
// Size: 0x4(Inherited: 0x0) 
struct FSetFogMultiplier
{
	float NewFogMultiplier;  // 0x0(0x4)

}; 
// Function Engine.ExponentialHeightFogComponent.SetStartDistance
// Size: 0x4(Inherited: 0x0) 
struct FSetStartDistance
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.StereoLayerComponent.SetPriority
// Size: 0x4(Inherited: 0x0) 
struct FSetPriority
{
	int32_t InPriority;  // 0x0(0x4)

}; 
// Function Engine.AudioVolume.SetReverbSettings
// Size: 0x20(Inherited: 0x0) 
struct FSetReverbSettings
{
	struct FReverbSettings NewReverbSettings;  // 0x0(0x20)

}; 
// Function Engine.AudioVolume.SetSubmixOverrideSettings
// Size: 0x10(Inherited: 0x0) 
struct FSetSubmixOverrideSettings
{
	struct TArray<struct FAudioVolumeSubmixOverrideSettings> NewSubmixOverrideSettings;  // 0x0(0x10)

}; 
// Function Engine.AvoidanceManager.GetAvoidanceVelocityForComponent
// Size: 0x18(Inherited: 0x0) 
struct FGetAvoidanceVelocityForComponent
{
	struct UMovementComponent* MovementComp;  // 0x0(0x8)
	struct FVector ReturnValue;  // 0x8(0xC)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.AvoidanceManager.GetObjectCount
// Size: 0x4(Inherited: 0x0) 
struct FGetObjectCount
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.AvoidanceManager.RegisterMovementComponent
// Size: 0x10(Inherited: 0x0) 
struct FRegisterMovementComponent
{
	struct UMovementComponent* MovementComp;  // 0x0(0x8)
	float AvoidanceWeight;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool ReturnValue : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.KismetGuidLibrary.EqualEqual_GuidGuid
// Size: 0x24(Inherited: 0x0) 
struct FEqualEqual_GuidGuid
{
	struct FGuid A;  // 0x0(0x10)
	struct FGuid B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[3];  // 0x21(0x3)

}; 
// Function Engine.BillboardComponent.SetSprite
// Size: 0x8(Inherited: 0x0) 
struct FSetSprite
{
	struct UTexture2D* NewSprite;  // 0x0(0x8)

}; 
// Function Engine.BillboardComponent.SetSpriteAndUV
// Size: 0x18(Inherited: 0x0) 
struct FSetSpriteAndUV
{
	struct UTexture2D* NewSprite;  // 0x0(0x8)
	int32_t NewU;  // 0x8(0x4)
	int32_t NewUL;  // 0xC(0x4)
	int32_t NewV;  // 0x10(0x4)
	int32_t NewVL;  // 0x14(0x4)

}; 
// Function Engine.BillboardComponent.SetUV
// Size: 0x10(Inherited: 0x0) 
struct FSetUV
{
	int32_t NewU;  // 0x0(0x4)
	int32_t NewUL;  // 0x4(0x4)
	int32_t NewV;  // 0x8(0x4)
	int32_t NewVL;  // 0xC(0x4)

}; 
// Function Engine.BlueprintMapLibrary.Map_Add
// Size: 0x58(Inherited: 0x0) 
struct FMap_Add
{
	struct TMap<int32_t, int32_t> TargetMap;  // 0x0(0x50)
	int32_t Key;  // 0x50(0x4)
	int32_t Value;  // 0x54(0x4)

}; 
// Function Engine.KismetMathLibrary.MakePlaneFromPointAndNormal
// Size: 0x30(Inherited: 0x0) 
struct FMakePlaneFromPointAndNormal
{
	struct FVector Point;  // 0x0(0xC)
	struct FVector Normal;  // 0xC(0xC)
	char pad_24[8];  // 0x18(0x8)
	struct FPlane ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.BlueprintMapLibrary.Map_Contains
// Size: 0x58(Inherited: 0x0) 
struct FMap_Contains
{
	struct TMap<int32_t, int32_t> TargetMap;  // 0x0(0x50)
	int32_t Key;  // 0x50(0x4)
	char pad_84_1 : 7;  // 0x54(0x1)
	bool ReturnValue : 1;  // 0x54(0x1)
	char pad_85[3];  // 0x55(0x3)

}; 
// Function Engine.BlueprintMapLibrary.Map_Length
// Size: 0x58(Inherited: 0x0) 
struct FMap_Length
{
	struct TMap<int32_t, int32_t> TargetMap;  // 0x0(0x50)
	int32_t ReturnValue;  // 0x50(0x4)
	char pad_84[4];  // 0x54(0x4)

}; 
// Function Engine.KismetMathLibrary.Multiply_MatrixMatrix
// Size: 0xC0(Inherited: 0x0) 
struct FMultiply_MatrixMatrix
{
	struct FMatrix A;  // 0x0(0x40)
	struct FMatrix B;  // 0x40(0x40)
	struct FMatrix ReturnValue;  // 0x80(0x40)

}; 
// Function Engine.BlueprintMapLibrary.Map_Remove
// Size: 0x58(Inherited: 0x0) 
struct FMap_Remove
{
	struct TMap<int32_t, int32_t> TargetMap;  // 0x0(0x50)
	int32_t Key;  // 0x50(0x4)
	char pad_84_1 : 7;  // 0x54(0x1)
	bool ReturnValue : 1;  // 0x54(0x1)
	char pad_85[3];  // 0x55(0x3)

}; 
// Function Engine.KismetMathLibrary.RotateAngleAxis
// Size: 0x28(Inherited: 0x0) 
struct FRotateAngleAxis
{
	struct FVector InVect;  // 0x0(0xC)
	float AngleDeg;  // 0xC(0x4)
	struct FVector Axis;  // 0x10(0xC)
	struct FVector ReturnValue;  // 0x1C(0xC)

}; 
// Function Engine.GameplayStatics.PlaySoundAtLocation
// Size: 0x50(Inherited: 0x0) 
struct FPlaySoundAtLocation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct USoundBase* Sound;  // 0x8(0x8)
	struct FVector Location;  // 0x10(0xC)
	struct FRotator Rotation;  // 0x1C(0xC)
	float VolumeMultiplier;  // 0x28(0x4)
	float PitchMultiplier;  // 0x2C(0x4)
	float StartTime;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)
	struct USoundAttenuation* AttenuationSettings;  // 0x38(0x8)
	struct USoundConcurrency* ConcurrencySettings;  // 0x40(0x8)
	struct AActor* OwningActor;  // 0x48(0x8)

}; 
// Function Engine.BlueprintMapLibrary.Map_Values
// Size: 0x60(Inherited: 0x0) 
struct FMap_Values
{
	struct TMap<int32_t, int32_t> TargetMap;  // 0x0(0x50)
	struct TArray<int32_t> Values;  // 0x50(0x10)

}; 
// Function Engine.BlueprintMapLibrary.SetMapPropertyByName
// Size: 0x60(Inherited: 0x0) 
struct FSetMapPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct TMap<int32_t, int32_t> Value;  // 0x10(0x50)

}; 
// Function Engine.BlueprintPathsLibrary.CollapseRelativeDirectories
// Size: 0x28(Inherited: 0x0) 
struct FCollapseRelativeDirectories
{
	struct FString InPath;  // 0x0(0x10)
	struct FString OutPath;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// Function Engine.BlueprintPathsLibrary.AutomationDir
// Size: 0x10(Inherited: 0x0) 
struct FAutomationDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.AutomationLogDir
// Size: 0x10(Inherited: 0x0) 
struct FAutomationLogDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.BugItDir
// Size: 0x10(Inherited: 0x0) 
struct FBugItDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.SplineMeshComponent.GetStartOffset
// Size: 0x8(Inherited: 0x0) 
struct FGetStartOffset
{
	struct FVector2D ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.BlueprintPathsLibrary.Combine
// Size: 0x20(Inherited: 0x0) 
struct FCombine
{
	struct TArray<struct FString> InPaths;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.ConvertRelativePathToFull
// Size: 0x30(Inherited: 0x0) 
struct FConvertRelativePathToFull
{
	struct FString InPath;  // 0x0(0x10)
	struct FString InBasePath;  // 0x10(0x10)
	struct FString ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.ConvertToSandboxPath
// Size: 0x30(Inherited: 0x0) 
struct FConvertToSandboxPath
{
	struct FString InPath;  // 0x0(0x10)
	struct FString InSandboxName;  // 0x10(0x10)
	struct FString ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.DiffDir
// Size: 0x10(Inherited: 0x0) 
struct FDiffDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.Conv_LinearColorToColor
// Size: 0x18(Inherited: 0x0) 
struct FConv_LinearColorToColor
{
	struct FLinearColor InLinearColor;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool InUseSRGB : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	struct FColor ReturnValue;  // 0x14(0x4)

}; 
// Function Engine.BlueprintPathsLibrary.DirectoryExists
// Size: 0x18(Inherited: 0x0) 
struct FDirectoryExists
{
	struct FString InPath;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.BlueprintPathsLibrary.EngineConfigDir
// Size: 0x10(Inherited: 0x0) 
struct FEngineConfigDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.LinearColorLerpUsingHSV
// Size: 0x34(Inherited: 0x0) 
struct FLinearColorLerpUsingHSV
{
	struct FLinearColor A;  // 0x0(0x10)
	struct FLinearColor B;  // 0x10(0x10)
	float Alpha;  // 0x20(0x4)
	struct FLinearColor ReturnValue;  // 0x24(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.EngineContentDir
// Size: 0x10(Inherited: 0x0) 
struct FEngineContentDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.GetMax2D
// Size: 0xC(Inherited: 0x0) 
struct FGetMax2D
{
	struct FVector2D A;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.BlueprintPathsLibrary.EngineIntermediateDir
// Size: 0x10(Inherited: 0x0) 
struct FEngineIntermediateDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.DateTimeMinValue
// Size: 0x8(Inherited: 0x0) 
struct FDateTimeMinValue
{
	struct FDateTime ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.BlueprintPathsLibrary.EngineSourceDir
// Size: 0x10(Inherited: 0x0) 
struct FEngineSourceDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.EngineUserDir
// Size: 0x10(Inherited: 0x0) 
struct FEngineUserDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.EngineVersionAgnosticUserDir
// Size: 0x10(Inherited: 0x0) 
struct FEngineVersionAgnosticUserDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.EnterpriseDir
// Size: 0x10(Inherited: 0x0) 
struct FEnterpriseDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.SplineMeshComponent.SetEndPosition
// Size: 0x10(Inherited: 0x0) 
struct FSetEndPosition
{
	struct FVector EndPos;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bUpdateMesh : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.BlueprintPathsLibrary.FileExists
// Size: 0x18(Inherited: 0x0) 
struct FFileExists
{
	struct FString InPath;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.BlueprintPathsLibrary.GameAgnosticSavedDir
// Size: 0x10(Inherited: 0x0) 
struct FGameAgnosticSavedDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetNodeHelperLibrary.GetUnmarkedBit
// Size: 0x14(Inherited: 0x0) 
struct FGetUnmarkedBit
{
	int32_t Data;  // 0x0(0x4)
	int32_t StartIdx;  // 0x4(0x4)
	int32_t NumBits;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bRandom : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	int32_t ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.BlueprintPathsLibrary.GameDevelopersDir
// Size: 0x10(Inherited: 0x0) 
struct FGameDevelopersDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.GameUserDeveloperDir
// Size: 0x10(Inherited: 0x0) 
struct FGameUserDeveloperDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.SceneCaptureComponent.ShowOnlyActorComponents
// Size: 0x10(Inherited: 0x0) 
struct FShowOnlyActorComponents
{
	struct AActor* InActor;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bIncludeFromChildActors : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetMathLibrary.NotEqual_BoolBool
// Size: 0x3(Inherited: 0x0) 
struct FNotEqual_BoolBool
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool A : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool B : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool ReturnValue : 1;  // 0x2(0x1)

}; 
// Function Engine.CheatManager.FreezeFrame
// Size: 0x4(Inherited: 0x0) 
struct FFreezeFrame
{
	float Delay;  // 0x0(0x4)

}; 
// Function Engine.BlueprintPathsLibrary.GeneratedConfigDir
// Size: 0x10(Inherited: 0x0) 
struct FGeneratedConfigDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.TwitterIntegrationBase.ShowTweetUI
// Size: 0x38(Inherited: 0x0) 
struct FShowTweetUI
{
	struct FString InitialMessage;  // 0x0(0x10)
	struct FString URL;  // 0x10(0x10)
	struct FString Picture;  // 0x20(0x10)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool ReturnValue : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 
// Function Engine.SkeletalMesh.FindSocketInfo
// Size: 0x50(Inherited: 0x0) 
struct FFindSocketInfo
{
	struct FName InSocketName;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FTransform OutTransform;  // 0x10(0x30)
	int32_t OutBoneIndex;  // 0x40(0x4)
	int32_t OutIndex;  // 0x44(0x4)
	struct USkeletalMeshSocket* ReturnValue;  // 0x48(0x8)

}; 
// Function Engine.ImportanceSamplingLibrary.NextSobolFloat
// Size: 0x10(Inherited: 0x0) 
struct FNextSobolFloat
{
	int32_t Index;  // 0x0(0x4)
	int32_t Dimension;  // 0x4(0x4)
	float PreviousValue;  // 0x8(0x4)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.BlueprintPathsLibrary.GetBaseFilename
// Size: 0x28(Inherited: 0x0) 
struct FGetBaseFilename
{
	struct FString InPath;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bRemovePath : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)
	struct FString ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.GetCleanFilename
// Size: 0x20(Inherited: 0x0) 
struct FGetCleanFilename
{
	struct FString InPath;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.GetEngineLocalizationPaths
// Size: 0x10(Inherited: 0x0) 
struct FGetEngineLocalizationPaths
{
	struct TArray<struct FString> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.GetExtension
// Size: 0x28(Inherited: 0x0) 
struct FGetExtension
{
	struct FString InPath;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bIncludeDot : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)
	struct FString ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.PhysicsConstraintComponent.SetLinearPositionTarget
// Size: 0xC(Inherited: 0x0) 
struct FSetLinearPositionTarget
{
	struct FVector InPosTarget;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.BooleanNAND
// Size: 0x3(Inherited: 0x0) 
struct FBooleanNAND
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool A : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool B : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool ReturnValue : 1;  // 0x2(0x1)

}; 
// Function Engine.BlueprintPathsLibrary.GetGameLocalizationPaths
// Size: 0x10(Inherited: 0x0) 
struct FGetGameLocalizationPaths
{
	struct TArray<struct FString> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.GetInvalidFileSystemChars
// Size: 0x10(Inherited: 0x0) 
struct FGetInvalidFileSystemChars
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.GetProjectFilePath
// Size: 0x10(Inherited: 0x0) 
struct FGetProjectFilePath
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.GetToolTipLocalizationPaths
// Size: 0x10(Inherited: 0x0) 
struct FGetToolTipLocalizationPaths
{
	struct TArray<struct FString> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.ProjectUserDir
// Size: 0x10(Inherited: 0x0) 
struct FProjectUserDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.HasProjectPersistentDownloadDir
// Size: 0x1(Inherited: 0x0) 
struct FHasProjectPersistentDownloadDir
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.BlueprintPathsLibrary.IsDrive
// Size: 0x18(Inherited: 0x0) 
struct FIsDrive
{
	struct FString InPath;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.SphereComponent.SetSphereRadius
// Size: 0x8(Inherited: 0x0) 
struct FSetSphereRadius
{
	float InSphereRadius;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bUpdateOverlaps : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.BlueprintPathsLibrary.IsSamePath
// Size: 0x28(Inherited: 0x0) 
struct FIsSamePath
{
	struct FString PathA;  // 0x0(0x10)
	struct FString PathB;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// Function Engine.BlueprintPathsLibrary.LaunchDir
// Size: 0x10(Inherited: 0x0) 
struct FLaunchDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.MakePathRelativeTo
// Size: 0x38(Inherited: 0x0) 
struct FMakePathRelativeTo
{
	struct FString InPath;  // 0x0(0x10)
	struct FString InRelativeTo;  // 0x10(0x10)
	struct FString OutPath;  // 0x20(0x10)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool ReturnValue : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 
// Function Engine.BlueprintPathsLibrary.NormalizeDirectoryName
// Size: 0x20(Inherited: 0x0) 
struct FNormalizeDirectoryName
{
	struct FString InPath;  // 0x0(0x10)
	struct FString OutPath;  // 0x10(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.ProfilingDir
// Size: 0x10(Inherited: 0x0) 
struct FProfilingDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.Subtract_DateTimeTimespan
// Size: 0x18(Inherited: 0x0) 
struct FSubtract_DateTimeTimespan
{
	struct FDateTime A;  // 0x0(0x8)
	struct FTimespan B;  // 0x8(0x8)
	struct FDateTime ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.BlueprintPathsLibrary.ProjectContentDir
// Size: 0x10(Inherited: 0x0) 
struct FProjectContentDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.PhysicsConstraintComponent.SetAngularTwistLimit
// Size: 0x8(Inherited: 0x0) 
struct FSetAngularTwistLimit
{
	char EAngularConstraintMotion ConstraintType;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float TwistLimitAngle;  // 0x4(0x4)

}; 
// Function Engine.BlueprintPathsLibrary.ProjectDir
// Size: 0x10(Inherited: 0x0) 
struct FProjectDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.Texture2D.Blueprint_GetSizeX
// Size: 0x4(Inherited: 0x0) 
struct FBlueprint_GetSizeX
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.BlueprintPathsLibrary.ProjectModsDir
// Size: 0x10(Inherited: 0x0) 
struct FProjectModsDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.ProjectSavedDir
// Size: 0x10(Inherited: 0x0) 
struct FProjectSavedDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.RemoveDuplicateSlashes
// Size: 0x20(Inherited: 0x0) 
struct FRemoveDuplicateSlashes
{
	struct FString InPath;  // 0x0(0x10)
	struct FString OutPath;  // 0x10(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.SandboxesDir
// Size: 0x10(Inherited: 0x0) 
struct FSandboxesDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintSetLibrary.Set_RemoveItems
// Size: 0x60(Inherited: 0x0) 
struct FSet_RemoveItems
{
	struct TSet<int32_t> TargetSet;  // 0x0(0x50)
	struct TArray<int32_t> Items;  // 0x50(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.ScreenShotDir
// Size: 0x10(Inherited: 0x0) 
struct FScreenShotDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.GreaterEqual_FloatFloat
// Size: 0xC(Inherited: 0x0) 
struct FGreaterEqual_FloatFloat
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.BlueprintPathsLibrary.SetExtension
// Size: 0x30(Inherited: 0x0) 
struct FSetExtension
{
	struct FString InPath;  // 0x0(0x10)
	struct FString InNewExtension;  // 0x10(0x10)
	struct FString ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.KismetMathLibrary.LessEqual_ByteByte
// Size: 0x3(Inherited: 0x0) 
struct FLessEqual_ByteByte
{
	char A;  // 0x0(0x1)
	char B;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool ReturnValue : 1;  // 0x2(0x1)

}; 
// Function Engine.BlueprintPathsLibrary.SetProjectFilePath
// Size: 0x10(Inherited: 0x0) 
struct FSetProjectFilePath
{
	struct FString NewGameProjectFilePath;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPathsLibrary.ShouldSaveToUserDir
// Size: 0x1(Inherited: 0x0) 
struct FShouldSaveToUserDir
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetStringLibrary.Split
// Size: 0x48(Inherited: 0x0) 
struct FSplit
{
	struct FString SourceString;  // 0x0(0x10)
	struct FString InStr;  // 0x10(0x10)
	struct FString LeftS;  // 0x20(0x10)
	struct FString RightS;  // 0x30(0x10)
	char ESearchCase SearchCase;  // 0x40(0x1)
	char ESearchDir SearchDir;  // 0x41(0x1)
	char pad_66_1 : 7;  // 0x42(0x1)
	bool ReturnValue : 1;  // 0x42(0x1)
	char pad_67[5];  // 0x43(0x5)

}; 
// Function Engine.KismetStringLibrary.NotEqual_StrStr
// Size: 0x28(Inherited: 0x0) 
struct FNotEqual_StrStr
{
	struct FString A;  // 0x0(0x10)
	struct FString B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// Function Engine.BlueprintPathsLibrary.VideoCaptureDir
// Size: 0x10(Inherited: 0x0) 
struct FVideoCaptureDir
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.BlueprintPlatformLibrary.CancelLocalNotificationById
// Size: 0x4(Inherited: 0x0) 
struct FCancelLocalNotificationById
{
	int32_t NotificationId;  // 0x0(0x4)

}; 
// Function Engine.CheatManager.DebugCapsuleSweepChannel
// Size: 0x1(Inherited: 0x0) 
struct FDebugCapsuleSweepChannel
{
	char ECollisionChannel Channel;  // 0x0(0x1)

}; 
// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationFromNow
// Size: 0x68(Inherited: 0x0) 
struct FScheduleLocalNotificationFromNow
{
	int32_t inSecondsFromNow;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FText Title;  // 0x8(0x18)
	struct FText Body;  // 0x20(0x18)
	struct FText Action;  // 0x38(0x18)
	struct FString ActivationEvent;  // 0x50(0x10)
	int32_t ReturnValue;  // 0x60(0x4)
	char pad_100[4];  // 0x64(0x4)

}; 
// Function Engine.BlueprintSetLibrary.Set_Add
// Size: 0x58(Inherited: 0x0) 
struct FSet_Add
{
	struct TSet<int32_t> TargetSet;  // 0x0(0x50)
	int32_t NewItem;  // 0x50(0x4)
	char pad_84[4];  // 0x54(0x4)

}; 
// Function Engine.BlueprintSetLibrary.Set_AddItems
// Size: 0x60(Inherited: 0x0) 
struct FSet_AddItems
{
	struct TSet<int32_t> TargetSet;  // 0x0(0x50)
	struct TArray<int32_t> NewItems;  // 0x50(0x10)

}; 
// Function Engine.KismetStringLibrary.RightChop
// Size: 0x28(Inherited: 0x0) 
struct FRightChop
{
	struct FString SourceString;  // 0x0(0x10)
	int32_t Count;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct FString ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.KismetArrayLibrary.Array_Set
// Size: 0x20(Inherited: 0x0) 
struct FArray_Set
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t Index;  // 0x10(0x4)
	int32_t Item;  // 0x14(0x4)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bSizeToFit : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.BlueprintSetLibrary.Set_Clear
// Size: 0x50(Inherited: 0x0) 
struct FSet_Clear
{
	struct TSet<int32_t> TargetSet;  // 0x0(0x50)

}; 
// Function Engine.BlueprintSetLibrary.Set_Contains
// Size: 0x58(Inherited: 0x0) 
struct FSet_Contains
{
	struct TSet<int32_t> TargetSet;  // 0x0(0x50)
	int32_t ItemToFind;  // 0x50(0x4)
	char pad_84_1 : 7;  // 0x54(0x1)
	bool ReturnValue : 1;  // 0x54(0x1)
	char pad_85[3];  // 0x55(0x3)

}; 
// Function Engine.BlueprintSetLibrary.Set_Difference
// Size: 0xF0(Inherited: 0x0) 
struct FSet_Difference
{
	struct TSet<int32_t> A;  // 0x0(0x50)
	struct TSet<int32_t> B;  // 0x50(0x50)
	struct TSet<int32_t> Result;  // 0xA0(0x50)

}; 
// Function Engine.BlueprintSetLibrary.Set_Union
// Size: 0xF0(Inherited: 0x0) 
struct FSet_Union
{
	struct TSet<int32_t> A;  // 0x0(0x50)
	struct TSet<int32_t> B;  // 0x50(0x50)
	struct TSet<int32_t> Result;  // 0xA0(0x50)

}; 
// Function Engine.StaticMesh.GetBounds
// Size: 0x1C(Inherited: 0x0) 
struct FGetBounds
{
	struct FBoxSphereBounds ReturnValue;  // 0x0(0x1C)

}; 
// Function Engine.KismetMathLibrary.Subtract_LinearColorLinearColor
// Size: 0x30(Inherited: 0x0) 
struct FSubtract_LinearColorLinearColor
{
	struct FLinearColor A;  // 0x0(0x10)
	struct FLinearColor B;  // 0x10(0x10)
	struct FLinearColor ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.CameraShakeSourceComponent.GetAttenuationFactor
// Size: 0x10(Inherited: 0x0) 
struct FGetAttenuationFactor
{
	struct FVector Location;  // 0x0(0xC)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.BlueprintSetLibrary.SetSetPropertyByName
// Size: 0x60(Inherited: 0x0) 
struct FSetSetPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct TSet<int32_t> Value;  // 0x10(0x50)

}; 
// Function Engine.KismetArrayLibrary.Array_Remove
// Size: 0x18(Inherited: 0x0) 
struct FArray_Remove
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t IndexToRemove;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.CameraAnimInst.SetDuration
// Size: 0x4(Inherited: 0x0) 
struct FSetDuration
{
	float NewDuration;  // 0x0(0x4)

}; 
// Function Engine.CameraAnimInst.Stop
// Size: 0x1(Inherited: 0x0) 
struct FStop
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bImmediate : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.Sin
// Size: 0x8(Inherited: 0x0) 
struct FSin
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.CameraModifier.BlueprintModifyCamera
// Size: 0x3C(Inherited: 0x0) 
struct FBlueprintModifyCamera
{
	float DeltaTime;  // 0x0(0x4)
	struct FVector ViewLocation;  // 0x4(0xC)
	struct FRotator ViewRotation;  // 0x10(0xC)
	float FOV;  // 0x1C(0x4)
	struct FVector NewViewLocation;  // 0x20(0xC)
	struct FRotator NewViewRotation;  // 0x2C(0xC)
	float NewFOV;  // 0x38(0x4)

}; 
// Function Engine.KismetMathLibrary.LinearColor_SetFromHSV
// Size: 0x20(Inherited: 0x0) 
struct FLinearColor_SetFromHSV
{
	struct FLinearColor InOutColor;  // 0x0(0x10)
	float H;  // 0x10(0x4)
	float S;  // 0x14(0x4)
	float V;  // 0x18(0x4)
	float A;  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.Conv_Vector2DToIntPoint
// Size: 0x10(Inherited: 0x0) 
struct FConv_Vector2DToIntPoint
{
	struct FVector2D InVector2D;  // 0x0(0x8)
	struct FIntPoint ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.CameraModifier.BlueprintModifyPostProcess
// Size: 0x570(Inherited: 0x0) 
struct FBlueprintModifyPostProcess
{
	float DeltaTime;  // 0x0(0x4)
	float PostProcessBlendWeight;  // 0x4(0x4)
	char pad_8[8];  // 0x8(0x8)
	struct FPostProcessSettings PostProcessSettings;  // 0x10(0x560)

}; 
// Function Engine.CameraModifier.DisableModifier
// Size: 0x1(Inherited: 0x0) 
struct FDisableModifier
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bImmediate : 1;  // 0x0(0x1)

}; 
// Function Engine.SplineMeshComponent.GetBoundaryMax
// Size: 0x4(Inherited: 0x0) 
struct FGetBoundaryMax
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.CameraShakeSourceComponent.StopAllCameraShakesOfType
// Size: 0x10(Inherited: 0x0) 
struct FStopAllCameraShakesOfType
{
	UCameraShakeBase* InCameraShake;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bImmediately : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.Canvas.K2_Deproject
// Size: 0x20(Inherited: 0x0) 
struct FK2_Deproject
{
	struct FVector2D screenPosition;  // 0x0(0x8)
	struct FVector WorldOrigin;  // 0x8(0xC)
	struct FVector WorldDirection;  // 0x14(0xC)

}; 
// Function Engine.Canvas.K2_DrawBorder
// Size: 0x88(Inherited: 0x0) 
struct FK2_DrawBorder
{
	struct UTexture* BorderTexture;  // 0x0(0x8)
	struct UTexture* BackgroundTexture;  // 0x8(0x8)
	struct UTexture* LeftBorderTexture;  // 0x10(0x8)
	struct UTexture* RightBorderTexture;  // 0x18(0x8)
	struct UTexture* TopBorderTexture;  // 0x20(0x8)
	struct UTexture* BottomBorderTexture;  // 0x28(0x8)
	struct FVector2D screenPosition;  // 0x30(0x8)
	struct FVector2D ScreenSize;  // 0x38(0x8)
	struct FVector2D CoordinatePosition;  // 0x40(0x8)
	struct FVector2D CoordinateSize;  // 0x48(0x8)
	struct FLinearColor RenderColor;  // 0x50(0x10)
	struct FVector2D BorderScale;  // 0x60(0x8)
	struct FVector2D BackgroundScale;  // 0x68(0x8)
	float Rotation;  // 0x70(0x4)
	struct FVector2D PivotPoint;  // 0x74(0x8)
	struct FVector2D CornerSize;  // 0x7C(0x8)
	char pad_132[4];  // 0x84(0x4)

}; 
// Function Engine.Canvas.K2_DrawBox
// Size: 0x24(Inherited: 0x0) 
struct FK2_DrawBox
{
	struct FVector2D screenPosition;  // 0x0(0x8)
	struct FVector2D ScreenSize;  // 0x8(0x8)
	float Thickness;  // 0x10(0x4)
	struct FLinearColor RenderColor;  // 0x14(0x10)

}; 
// Function Engine.Canvas.K2_DrawMaterialTriangle
// Size: 0x18(Inherited: 0x0) 
struct FK2_DrawMaterialTriangle
{
	struct UMaterialInterface* RenderMaterial;  // 0x0(0x8)
	struct TArray<struct FCanvasUVTri> Triangles;  // 0x8(0x10)

}; 
// Function Engine.Canvas.K2_DrawText
// Size: 0x68(Inherited: 0x0) 
struct FK2_DrawText
{
	struct UFont* RenderFont;  // 0x0(0x8)
	struct FString RenderText;  // 0x8(0x10)
	struct FVector2D screenPosition;  // 0x18(0x8)
	struct FVector2D Scale;  // 0x20(0x8)
	struct FLinearColor RenderColor;  // 0x28(0x10)
	float Kerning;  // 0x38(0x4)
	struct FLinearColor ShadowColor;  // 0x3C(0x10)
	struct FVector2D ShadowOffset;  // 0x4C(0x8)
	char pad_84_1 : 7;  // 0x54(0x1)
	bool bCentreX : 1;  // 0x54(0x1)
	char pad_85_1 : 7;  // 0x55(0x1)
	bool bCentreY : 1;  // 0x55(0x1)
	char pad_86_1 : 7;  // 0x56(0x1)
	bool bOutlined : 1;  // 0x56(0x1)
	char pad_87[1];  // 0x57(0x1)
	struct FLinearColor OutlineColor;  // 0x58(0x10)

}; 
// Function Engine.Canvas.K2_StrLen
// Size: 0x20(Inherited: 0x0) 
struct FK2_StrLen
{
	struct UFont* RenderFont;  // 0x0(0x8)
	struct FString RenderText;  // 0x8(0x10)
	struct FVector2D ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.CanvasRenderTarget2D.CreateCanvasRenderTarget2D
// Size: 0x20(Inherited: 0x0) 
struct FCreateCanvasRenderTarget2D
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	UCanvasRenderTarget2D* CanvasRenderTarget2DClass;  // 0x8(0x8)
	int32_t Width;  // 0x10(0x4)
	int32_t Height;  // 0x14(0x4)
	struct UCanvasRenderTarget2D* ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.GameplayStatics.GetGameState
// Size: 0x10(Inherited: 0x0) 
struct FGetGameState
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct AGameStateBase* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.RuntimeVirtualTexture.GetSize
// Size: 0x4(Inherited: 0x0) 
struct FGetSize
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.CanvasRenderTarget2D.ReceiveUpdate
// Size: 0x10(Inherited: 0x0) 
struct FReceiveUpdate
{
	struct UCanvas* Canvas;  // 0x0(0x8)
	int32_t Width;  // 0x8(0x4)
	int32_t Height;  // 0xC(0x4)

}; 
// Function Engine.CheatManager.CheatScript
// Size: 0x10(Inherited: 0x0) 
struct FCheatScript
{
	struct FString ScriptName;  // 0x0(0x10)

}; 
// Function Engine.CheatManager.DamageTarget
// Size: 0x4(Inherited: 0x0) 
struct FDamageTarget
{
	float damageAmount;  // 0x0(0x4)

}; 
// Function Engine.CheatManager.DebugCapsuleSweepSize
// Size: 0x8(Inherited: 0x0) 
struct FDebugCapsuleSweepSize
{
	float HalfHeight;  // 0x0(0x4)
	float Radius;  // 0x4(0x4)

}; 
// Function Engine.CheatManager.DestroyPawns
// Size: 0x8(Inherited: 0x0) 
struct FDestroyPawns
{
	APawn* aClass;  // 0x0(0x8)

}; 
// Function Engine.KismetTextLibrary.TextIsEmpty
// Size: 0x20(Inherited: 0x0) 
struct FTextIsEmpty
{
	struct FText InText;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.CheatManager.OnlyLoadLevel
// Size: 0x8(Inherited: 0x0) 
struct FOnlyLoadLevel
{
	struct FName PackageName;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector_GetAbsMax
// Size: 0x10(Inherited: 0x0) 
struct FVector_GetAbsMax
{
	struct FVector A;  // 0x0(0xC)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.CheatManager.StreamLevelOut
// Size: 0x8(Inherited: 0x0) 
struct FStreamLevelOut
{
	struct FName PackageName;  // 0x0(0x8)

}; 
// Function Engine.ParticleSystemComponent.SetBeamTargetTangent
// Size: 0x14(Inherited: 0x0) 
struct FSetBeamTargetTangent
{
	int32_t EmitterIndex;  // 0x0(0x4)
	struct FVector NewTangentPoint;  // 0x4(0xC)
	int32_t TargetIndex;  // 0x10(0x4)

}; 
// Function Engine.CheatManager.Summon
// Size: 0x10(Inherited: 0x0) 
struct FSummon
{
	struct FString ClassName;  // 0x0(0x10)

}; 
// Function Engine.CheatManager.ViewActor
// Size: 0x8(Inherited: 0x0) 
struct FViewActor
{
	struct FName ActorName;  // 0x0(0x8)

}; 
// Function Engine.ChildActorComponent.SetChildActorClass
// Size: 0x8(Inherited: 0x0) 
struct FSetChildActorClass
{
	AActor* InClass;  // 0x0(0x8)

}; 
// Function Engine.CurveBase.GetValueRange
// Size: 0x8(Inherited: 0x0) 
struct FGetValueRange
{
	float MinValue;  // 0x0(0x4)
	float MaxValue;  // 0x4(0x4)

}; 
// Function Engine.CurveLinearColor.GetClampedLinearColorValue
// Size: 0x14(Inherited: 0x0) 
struct FGetClampedLinearColorValue
{
	float InTime;  // 0x0(0x4)
	struct FLinearColor ReturnValue;  // 0x4(0x10)

}; 
// Function Engine.CurveLinearColor.GetUnadjustedLinearColorValue
// Size: 0x14(Inherited: 0x0) 
struct FGetUnadjustedLinearColorValue
{
	float InTime;  // 0x0(0x4)
	struct FLinearColor ReturnValue;  // 0x4(0x10)

}; 
// Function Engine.Texture2D.Blueprint_GetSizeY
// Size: 0x4(Inherited: 0x0) 
struct FBlueprint_GetSizeY
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.CurveVector.GetVectorValue
// Size: 0x10(Inherited: 0x0) 
struct FGetVectorValue
{
	float InTime;  // 0x0(0x4)
	struct FVector ReturnValue;  // 0x4(0xC)

}; 
// Function Engine.DataTableFunctionLibrary.DoesDataTableRowExist
// Size: 0x18(Inherited: 0x0) 
struct FDoesDataTableRowExist
{
	struct UDataTable* Table;  // 0x0(0x8)
	struct FName RowName;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.DebugCameraController.ReceiveOnActorSelected
// Size: 0xA8(Inherited: 0x0) 
struct FReceiveOnActorSelected
{
	struct AActor* NewSelectedActor;  // 0x0(0x8)
	struct FVector SelectHitLocation;  // 0x8(0xC)
	struct FVector SelectHitNormal;  // 0x14(0xC)
	struct FHitResult Hit;  // 0x20(0x88)

}; 
// Function Engine.DebugCameraController.SetPawnMovementSpeedScale
// Size: 0x4(Inherited: 0x0) 
struct FSetPawnMovementSpeedScale
{
	float NewSpeedScale;  // 0x0(0x4)

}; 
// Function Engine.DecalComponent.SetDecalMaterial
// Size: 0x8(Inherited: 0x0) 
struct FSetDecalMaterial
{
	struct UMaterialInterface* NewDecalMaterial;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.Percent_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FPercent_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.DecalComponent.GetFadeDuration
// Size: 0x4(Inherited: 0x0) 
struct FGetFadeDuration
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.VisualLoggerKismetLibrary.LogBox
// Size: 0x58(Inherited: 0x0) 
struct FLogBox
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FBox BoxShape;  // 0x8(0x1C)
	char pad_36[4];  // 0x24(0x4)
	struct FString Text;  // 0x28(0x10)
	struct FLinearColor ObjectColor;  // 0x38(0x10)
	struct FName LogCategory;  // 0x48(0x8)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool bAddToMessageLog : 1;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)

}; 
// Function Engine.DecalComponent.GetFadeInDuration
// Size: 0x4(Inherited: 0x0) 
struct FGetFadeInDuration
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.DecalComponent.GetFadeStartDelay
// Size: 0x4(Inherited: 0x0) 
struct FGetFadeStartDelay
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.Quat_Normalized
// Size: 0x30(Inherited: 0x0) 
struct FQuat_Normalized
{
	struct FQuat Q;  // 0x0(0x10)
	float Tolerance;  // 0x10(0x4)
	char pad_20[12];  // 0x14(0xC)
	struct FQuat ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.GameUserSettings.GetLastConfirmedScreenResolution
// Size: 0x8(Inherited: 0x0) 
struct FGetLastConfirmedScreenResolution
{
	struct FIntPoint ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.DecalComponent.SetFadeIn
// Size: 0x8(Inherited: 0x0) 
struct FSetFadeIn
{
	float StartDelay;  // 0x0(0x4)
	float Duaration;  // 0x4(0x4)

}; 
// Function Engine.SplineMeshComponent.SetBoundaryMin
// Size: 0x8(Inherited: 0x0) 
struct FSetBoundaryMin
{
	float InBoundaryMin;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bUpdateMesh : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.DecalComponent.SetFadeOut
// Size: 0xC(Inherited: 0x0) 
struct FSetFadeOut
{
	float StartDelay;  // 0x0(0x4)
	float Duration;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool DestroyOwnerAfterFade : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetMathLibrary.MaxInt64
// Size: 0x18(Inherited: 0x0) 
struct FMaxInt64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	int64_t ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.DecalComponent.SetFadeScreenSize
// Size: 0x4(Inherited: 0x0) 
struct FSetFadeScreenSize
{
	float NewFadeScreenSize;  // 0x0(0x4)

}; 
// Function Engine.DecalComponent.SetSortOrder
// Size: 0x4(Inherited: 0x0) 
struct FSetSortOrder
{
	int32_t Value;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.UtcNow
// Size: 0x8(Inherited: 0x0) 
struct FUtcNow
{
	struct FDateTime ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.DirectionalLightComponent.SetAtmosphereSunLightIndex
// Size: 0x4(Inherited: 0x0) 
struct FSetAtmosphereSunLightIndex
{
	int32_t NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.RandomBoolWithWeightFromStream
// Size: 0x10(Inherited: 0x0) 
struct FRandomBoolWithWeightFromStream
{
	float Weight;  // 0x0(0x4)
	struct FRandomStream RandomStream;  // 0x4(0x8)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool ReturnValue : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.DirectionalLightComponent.SetCascadeDistributionExponent
// Size: 0x4(Inherited: 0x0) 
struct FSetCascadeDistributionExponent
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.DirectionalLightComponent.SetCascadeTransitionFraction
// Size: 0x4(Inherited: 0x0) 
struct FSetCascadeTransitionFraction
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.DirectionalLightComponent.SetDynamicShadowCascades
// Size: 0x4(Inherited: 0x0) 
struct FSetDynamicShadowCascades
{
	int32_t NewValue;  // 0x0(0x4)

}; 
// Function Engine.GameplayStatics.HasLaunchOption
// Size: 0x18(Inherited: 0x0) 
struct FHasLaunchOption
{
	struct FString OptionToCheck;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.DirectionalLightComponent.SetDynamicShadowDistanceMovableLight
// Size: 0x4(Inherited: 0x0) 
struct FSetDynamicShadowDistanceMovableLight
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.NearlyEqual_TransformTransform
// Size: 0x70(Inherited: 0x0) 
struct FNearlyEqual_TransformTransform
{
	struct FTransform A;  // 0x0(0x30)
	struct FTransform B;  // 0x30(0x30)
	float LocationTolerance;  // 0x60(0x4)
	float RotationTolerance;  // 0x64(0x4)
	float Scale3DTolerance;  // 0x68(0x4)
	char pad_108_1 : 7;  // 0x6C(0x1)
	bool ReturnValue : 1;  // 0x6C(0x1)
	char pad_109[3];  // 0x6D(0x3)

}; 
// Function Engine.DirectionalLightComponent.SetEnableLightShaftOcclusion
// Size: 0x1(Inherited: 0x0) 
struct FSetEnableLightShaftOcclusion
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.DirectionalLightComponent.SetOcclusionMaskDarkness
// Size: 0x4(Inherited: 0x0) 
struct FSetOcclusionMaskDarkness
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.DirectionalLightComponent.SetShadowAmount
// Size: 0x4(Inherited: 0x0) 
struct FSetShadowAmount
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.Emitter.OnParticleSystemFinished
// Size: 0x8(Inherited: 0x0) 
struct FOnParticleSystemFinished
{
	struct UParticleSystemComponent* FinishedComponent;  // 0x0(0x8)

}; 
// Function Engine.ParticleSystemComponent.SetMaterialParameter
// Size: 0x10(Inherited: 0x0) 
struct FSetMaterialParameter
{
	struct FName ParameterName;  // 0x0(0x8)
	struct UMaterialInterface* Param;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Matrix_ToQuat
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_ToQuat
{
	struct FMatrix M;  // 0x0(0x40)
	struct FQuat ReturnValue;  // 0x40(0x10)

}; 
// Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringColor
// Size: 0x10(Inherited: 0x0) 
struct FSetDirectionalInscatteringColor
{
	struct FLinearColor Value;  // 0x0(0x10)

}; 
// Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringStartDistance
// Size: 0x4(Inherited: 0x0) 
struct FSetDirectionalInscatteringStartDistance
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.GameplayStatics.PlayWorldCameraShake
// Size: 0x30(Inherited: 0x0) 
struct FPlayWorldCameraShake
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	UCameraShakeBase* Shake;  // 0x8(0x8)
	struct FVector Epicenter;  // 0x10(0xC)
	float InnerRadius;  // 0x1C(0x4)
	float OuterRadius;  // 0x20(0x4)
	float Falloff;  // 0x24(0x4)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bOrientShakeTowardsEpicenter : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// Function Engine.ExponentialHeightFogComponent.SetFogHeightFalloff
// Size: 0x4(Inherited: 0x0) 
struct FSetFogHeightFalloff
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.ExponentialHeightFogComponent.SetFogMaxOpacity
// Size: 0x4(Inherited: 0x0) 
struct FSetFogMaxOpacity
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.ExponentialHeightFogComponent.SetInscatteringColorCubemap
// Size: 0x8(Inherited: 0x0) 
struct FSetInscatteringColorCubemap
{
	struct UTextureCube* Value;  // 0x0(0x8)

}; 
// Function Engine.ExponentialHeightFogComponent.SetInscatteringColorCubemapAngle
// Size: 0x4(Inherited: 0x0) 
struct FSetInscatteringColorCubemapAngle
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.PhysicsHandleComponent.SetInterpolationSpeed
// Size: 0x4(Inherited: 0x0) 
struct FSetInterpolationSpeed
{
	float NewInterpolationSpeed;  // 0x0(0x4)

}; 
// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogDistance
// Size: 0x4(Inherited: 0x0) 
struct FSetVolumetricFogDistance
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.Distance2D
// Size: 0x14(Inherited: 0x0) 
struct FDistance2D
{
	struct FVector2D v1;  // 0x0(0x8)
	struct FVector2D v2;  // 0x8(0x8)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogExtinctionScale
// Size: 0x4(Inherited: 0x0) 
struct FSetVolumetricFogExtinctionScale
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogScatteringDistribution
// Size: 0x4(Inherited: 0x0) 
struct FSetVolumetricFogScatteringDistribution
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.Exporter.RunAssetExportTasks
// Size: 0x18(Inherited: 0x0) 
struct FRunAssetExportTasks
{
	struct TArray<struct UAssetExportTask*> ExportTasks;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.ForceFeedbackComponent.SetForceFeedbackEffect
// Size: 0x8(Inherited: 0x0) 
struct FSetForceFeedbackEffect
{
	struct UForceFeedbackEffect* NewForceFeedbackEffect;  // 0x0(0x8)

}; 
// Function Engine.ForceFeedbackComponent.SetIntensityMultiplier
// Size: 0x4(Inherited: 0x0) 
struct FSetIntensityMultiplier
{
	float NewIntensityMultiplier;  // 0x0(0x4)

}; 
// Function Engine.KismetArrayLibrary.Array_Get
// Size: 0x18(Inherited: 0x0) 
struct FArray_Get
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t Index;  // 0x10(0x4)
	int32_t Item;  // 0x14(0x4)

}; 
// Function Engine.GameplayStatics.ActivateReverbEffect
// Size: 0x28(Inherited: 0x0) 
struct FActivateReverbEffect
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UReverbEffect* ReverbEffect;  // 0x8(0x8)
	struct FName TagName;  // 0x10(0x8)
	float Priority;  // 0x18(0x4)
	float Volume;  // 0x1C(0x4)
	float FadeTime;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.GameplayStatics.AnnounceAccessibleString
// Size: 0x10(Inherited: 0x0) 
struct FAnnounceAccessibleString
{
	struct FString AnnouncementString;  // 0x0(0x10)

}; 
// Function Engine.GameplayStatics.ApplyDamage
// Size: 0x30(Inherited: 0x0) 
struct FApplyDamage
{
	struct AActor* DamagedActor;  // 0x0(0x8)
	float BaseDamage;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct AController* eventInstigator;  // 0x10(0x8)
	struct AActor* DamageCauser;  // 0x18(0x8)
	UDamageType* DamageTypeClass;  // 0x20(0x8)
	float ReturnValue;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)

}; 
// Function Engine.VolumetricCloudComponent.SetGroundAlbedo
// Size: 0x4(Inherited: 0x0) 
struct FSetGroundAlbedo
{
	struct FColor NewValue;  // 0x0(0x4)

}; 
// Function Engine.GameplayStatics.ApplyRadialDamageWithFalloff
// Size: 0x58(Inherited: 0x0) 
struct FApplyRadialDamageWithFalloff
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float BaseDamage;  // 0x8(0x4)
	float MinimumDamage;  // 0xC(0x4)
	struct FVector Origin;  // 0x10(0xC)
	float DamageInnerRadius;  // 0x1C(0x4)
	float DamageOuterRadius;  // 0x20(0x4)
	float DamageFalloff;  // 0x24(0x4)
	UDamageType* DamageTypeClass;  // 0x28(0x8)
	struct TArray<struct AActor*> IgnoreActors;  // 0x30(0x10)
	struct AActor* DamageCauser;  // 0x40(0x8)
	struct AController* InstigatedByController;  // 0x48(0x8)
	char ECollisionChannel DamagePreventionChannel;  // 0x50(0x1)
	char pad_81_1 : 7;  // 0x51(0x1)
	bool ReturnValue : 1;  // 0x51(0x1)
	char pad_82[6];  // 0x52(0x6)

}; 
// Function Engine.GameplayStatics.AreAnyListenersWithinRange
// Size: 0x20(Inherited: 0x0) 
struct FAreAnyListenersWithinRange
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Location;  // 0x8(0xC)
	float MaximumRange;  // 0x14(0x4)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.GameplayStatics.BeginDeferredActorSpawnFromClass
// Size: 0x60(Inherited: 0x0) 
struct FBeginDeferredActorSpawnFromClass
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	AActor* ActorClass;  // 0x8(0x8)
	struct FTransform SpawnTransform;  // 0x10(0x30)
	uint8_t  CollisionHandlingOverride;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)
	struct AActor* Owner;  // 0x48(0x8)
	struct AActor* ReturnValue;  // 0x50(0x8)
	char pad_88[8];  // 0x58(0x8)

}; 
// Function Engine.GameplayStatics.BeginSpawningActorFromBlueprint
// Size: 0x50(Inherited: 0x0) 
struct FBeginSpawningActorFromBlueprint
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UBlueprint* Blueprint;  // 0x8(0x8)
	struct FTransform SpawnTransform;  // 0x10(0x30)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool bNoCollisionFail : 1;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)
	struct AActor* ReturnValue;  // 0x48(0x8)

}; 
// Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_ByTraceChannel
// Size: 0xF8(Inherited: 0x0) 
struct FBlueprint_PredictProjectilePath_ByTraceChannel
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FHitResult OutHit;  // 0x8(0x88)
	struct TArray<struct FVector> OutPathPositions;  // 0x90(0x10)
	struct FVector OutLastTraceDestination;  // 0xA0(0xC)
	struct FVector StartPos;  // 0xAC(0xC)
	struct FVector LaunchVelocity;  // 0xB8(0xC)
	char pad_196_1 : 7;  // 0xC4(0x1)
	bool bTracePath : 1;  // 0xC4(0x1)
	char pad_197[3];  // 0xC5(0x3)
	float ProjectileRadius;  // 0xC8(0x4)
	char ECollisionChannel TraceChannel;  // 0xCC(0x1)
	char pad_205_1 : 7;  // 0xCD(0x1)
	bool bTraceComplex : 1;  // 0xCD(0x1)
	char pad_206[2];  // 0xCE(0x2)
	struct TArray<struct AActor*> ActorsToIgnore;  // 0xD0(0x10)
	char EDrawDebugTrace DrawDebugType;  // 0xE0(0x1)
	char pad_225[3];  // 0xE1(0x3)
	float DrawDebugTime;  // 0xE4(0x4)
	float SimFrequency;  // 0xE8(0x4)
	float MaxSimTime;  // 0xEC(0x4)
	float OverrideGravityZ;  // 0xF0(0x4)
	char pad_244_1 : 7;  // 0xF4(0x1)
	bool ReturnValue : 1;  // 0xF4(0x1)
	char pad_245[3];  // 0xF5(0x3)

}; 
// Function Engine.GameplayStatics.BlueprintSuggestProjectileVelocity
// Size: 0x40(Inherited: 0x0) 
struct FBlueprintSuggestProjectileVelocity
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector TossVelocity;  // 0x8(0xC)
	struct FVector StartLocation;  // 0x14(0xC)
	struct FVector EndLocation;  // 0x20(0xC)
	float LaunchSpeed;  // 0x2C(0x4)
	float OverrideGravityZ;  // 0x30(0x4)
	char ESuggestProjVelocityTraceOption TraceOption;  // 0x34(0x1)
	char pad_53[3];  // 0x35(0x3)
	float CollisionRadius;  // 0x38(0x4)
	char pad_60_1 : 7;  // 0x3C(0x1)
	bool bFavorHighArc : 1;  // 0x3C(0x1)
	char pad_61_1 : 7;  // 0x3D(0x1)
	bool bDrawDebug : 1;  // 0x3D(0x1)
	char pad_62_1 : 7;  // 0x3E(0x1)
	bool ReturnValue : 1;  // 0x3E(0x1)
	char pad_63[1];  // 0x3F(0x1)

}; 
// Function Engine.KismetStringLibrary.MatchesWildcard
// Size: 0x28(Inherited: 0x0) 
struct FMatchesWildcard
{
	struct FString SourceString;  // 0x0(0x10)
	struct FString Wildcard;  // 0x10(0x10)
	char ESearchCase SearchCase;  // 0x20(0x1)
	char pad_33_1 : 7;  // 0x21(0x1)
	bool ReturnValue : 1;  // 0x21(0x1)
	char pad_34[6];  // 0x22(0x6)

}; 
// Function Engine.GameplayStatics.BreakHitResult
// Size: 0x110(Inherited: 0x0) 
struct FBreakHitResult
{
	struct FHitResult Hit;  // 0x0(0x88)
	char pad_136_1 : 7;  // 0x88(0x1)
	bool bBlockingHit : 1;  // 0x88(0x1)
	char pad_137_1 : 7;  // 0x89(0x1)
	bool bInitialOverlap : 1;  // 0x89(0x1)
	char pad_138[2];  // 0x8A(0x2)
	float Time;  // 0x8C(0x4)
	float Distance;  // 0x90(0x4)
	struct FVector Location;  // 0x94(0xC)
	struct FVector ImpactPoint;  // 0xA0(0xC)
	struct FVector Normal;  // 0xAC(0xC)
	struct FVector ImpactNormal;  // 0xB8(0xC)
	char pad_196[4];  // 0xC4(0x4)
	struct UPhysicalMaterial* PhysMat;  // 0xC8(0x8)
	struct AActor* HitActor;  // 0xD0(0x8)
	struct UPrimitiveComponent* HitComponent;  // 0xD8(0x8)
	struct FName HitBoneName;  // 0xE0(0x8)
	int32_t HitItem;  // 0xE8(0x4)
	int32_t ElementIndex;  // 0xEC(0x4)
	int32_t FaceIndex;  // 0xF0(0x4)
	struct FVector TraceStart;  // 0xF4(0xC)
	struct FVector TraceEnd;  // 0x100(0xC)
	char pad_268[4];  // 0x10C(0x4)

}; 
// Function Engine.KismetMathLibrary.Add_FloatFloat
// Size: 0xC(Inherited: 0x0) 
struct FAdd_FloatFloat
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.GameplayStatics.ClearSoundMixModifiers
// Size: 0x8(Inherited: 0x0) 
struct FClearSoundMixModifiers
{
	struct UObject* WorldContextObject;  // 0x0(0x8)

}; 
// Function Engine.GameplayStatics.CreateSaveGameObject
// Size: 0x10(Inherited: 0x0) 
struct FCreateSaveGameObject
{
	USaveGame* SaveGameClass;  // 0x0(0x8)
	struct USaveGame* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.GameplayStatics.DeactivateReverbEffect
// Size: 0x10(Inherited: 0x0) 
struct FDeactivateReverbEffect
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FName TagName;  // 0x8(0x8)

}; 
// Function Engine.GameplayStatics.DeprojectScreenToWorld
// Size: 0x30(Inherited: 0x0) 
struct FDeprojectScreenToWorld
{
	struct APlayerController* Player;  // 0x0(0x8)
	struct FVector2D screenPosition;  // 0x8(0x8)
	struct FVector WorldPosition;  // 0x10(0xC)
	struct FVector WorldDirection;  // 0x1C(0xC)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool ReturnValue : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// Function Engine.GameplayStatics.FindCollisionUV
// Size: 0x98(Inherited: 0x0) 
struct FFindCollisionUV
{
	struct FHitResult Hit;  // 0x0(0x88)
	int32_t UVChannel;  // 0x88(0x4)
	struct FVector2D UV;  // 0x8C(0x8)
	char pad_148_1 : 7;  // 0x94(0x1)
	bool ReturnValue : 1;  // 0x94(0x1)
	char pad_149[3];  // 0x95(0x3)

}; 
// Function Engine.GameplayStatics.FlushLevelStreaming
// Size: 0x8(Inherited: 0x0) 
struct FFlushLevelStreaming
{
	struct UObject* WorldContextObject;  // 0x0(0x8)

}; 
// Function Engine.GameplayStatics.GetActorArrayAverageLocation
// Size: 0x20(Inherited: 0x0) 
struct FGetActorArrayAverageLocation
{
	struct TArray<struct AActor*> Actors;  // 0x0(0x10)
	struct FVector ReturnValue;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.GetPointDistanceToLine
// Size: 0x28(Inherited: 0x0) 
struct FGetPointDistanceToLine
{
	struct FVector Point;  // 0x0(0xC)
	struct FVector LineOrigin;  // 0xC(0xC)
	struct FVector LineDirection;  // 0x18(0xC)
	float ReturnValue;  // 0x24(0x4)

}; 
// Function Engine.GameplayStatics.GetAllActorsOfClass
// Size: 0x20(Inherited: 0x0) 
struct FGetAllActorsOfClass
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	AActor* ActorClass;  // 0x8(0x8)
	struct TArray<struct AActor*> OutActors;  // 0x10(0x10)

}; 
// Function Engine.GameplayStatics.GetAllActorsOfClassWithTag
// Size: 0x28(Inherited: 0x0) 
struct FGetAllActorsOfClassWithTag
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	AActor* ActorClass;  // 0x8(0x8)
	struct FName Tag;  // 0x10(0x8)
	struct TArray<struct AActor*> OutActors;  // 0x18(0x10)

}; 
// Function Engine.GameplayStatics.GetAllActorsWithInterface
// Size: 0x20(Inherited: 0x0) 
struct FGetAllActorsWithInterface
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	UInterface* Interface;  // 0x8(0x8)
	struct TArray<struct AActor*> OutActors;  // 0x10(0x10)

}; 
// Function Engine.SoundSubmix.StopSpectralAnalysis
// Size: 0x8(Inherited: 0x0) 
struct FStopSpectralAnalysis
{
	struct UObject* WorldContextObject;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.WeightedMovingAverage_FVector
// Size: 0x28(Inherited: 0x0) 
struct FWeightedMovingAverage_FVector
{
	struct FVector CurrentSample;  // 0x0(0xC)
	struct FVector PreviousSample;  // 0xC(0xC)
	float Weight;  // 0x18(0x4)
	struct FVector ReturnValue;  // 0x1C(0xC)

}; 
// Function Engine.GameplayStatics.GetAudioTimeSeconds
// Size: 0x10(Inherited: 0x0) 
struct FGetAudioTimeSeconds
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.Vector4_IsNearlyZero3
// Size: 0x20(Inherited: 0x0) 
struct FVector4_IsNearlyZero3
{
	struct FVector4 A;  // 0x0(0x10)
	float Tolerance;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[11];  // 0x15(0xB)

}; 
// Function Engine.GameplayStatics.GetCurrentLevelName
// Size: 0x20(Inherited: 0x0) 
struct FGetCurrentLevelName
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bRemovePrefixString : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetStringLibrary.Mid
// Size: 0x28(Inherited: 0x0) 
struct FMid
{
	struct FString SourceString;  // 0x0(0x10)
	int32_t Start;  // 0x10(0x4)
	int32_t Count;  // 0x14(0x4)
	struct FString ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.GameplayStatics.GetCurrentReverbEffect
// Size: 0x10(Inherited: 0x0) 
struct FGetCurrentReverbEffect
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UReverbEffect* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.GameplayStatics.GetEnableWorldRendering
// Size: 0x10(Inherited: 0x0) 
struct FGetEnableWorldRendering
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.GameplayStatics.GetGameInstance
// Size: 0x10(Inherited: 0x0) 
struct FGetGameInstance
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UGameInstance* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector2DInterpTo
// Size: 0x20(Inherited: 0x0) 
struct FVector2DInterpTo
{
	struct FVector2D Current;  // 0x0(0x8)
	struct FVector2D Target;  // 0x8(0x8)
	float DeltaTime;  // 0x10(0x4)
	float InterpSpeed;  // 0x14(0x4)
	struct FVector2D ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.GameplayStatics.GetKeyValue
// Size: 0x30(Inherited: 0x0) 
struct FGetKeyValue
{
	struct FString Pair;  // 0x0(0x10)
	struct FString Key;  // 0x10(0x10)
	struct FString Value;  // 0x20(0x10)

}; 
// Function Engine.GameplayStatics.GetMaxAudioChannelCount
// Size: 0x10(Inherited: 0x0) 
struct FGetMaxAudioChannelCount
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.GameplayStatics.GetObjectClass
// Size: 0x10(Inherited: 0x0) 
struct FGetObjectClass
{
	struct UObject* Object;  // 0x0(0x8)
	UObject* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.GameplayStatics.GetPlatformName
// Size: 0x10(Inherited: 0x0) 
struct FGetPlatformName
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.TextRenderComponent.SetText
// Size: 0x10(Inherited: 0x0) 
struct FSetText
{
	struct FString Value;  // 0x0(0x10)

}; 
// Function Engine.GameplayStatics.GetPlayerCameraManager
// Size: 0x18(Inherited: 0x0) 
struct FGetPlayerCameraManager
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	int32_t PlayerIndex;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct APlayerCameraManager* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.GameplayStatics.GetPlayerCharacter
// Size: 0x18(Inherited: 0x0) 
struct FGetPlayerCharacter
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	int32_t PlayerIndex;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct ACharacter* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.GameplayStatics.GetPlayerControllerFromID
// Size: 0x18(Inherited: 0x0) 
struct FGetPlayerControllerFromID
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	int32_t ControllerId;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct APlayerController* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.GetAbsMax2D
// Size: 0xC(Inherited: 0x0) 
struct FGetAbsMax2D
{
	struct FVector2D A;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.GameplayStatics.GetPlayerControllerID
// Size: 0x10(Inherited: 0x0) 
struct FGetPlayerControllerID
{
	struct APlayerController* Player;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.GameplayStatics.GetStreamingLevel
// Size: 0x18(Inherited: 0x0) 
struct FGetStreamingLevel
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FName PackageName;  // 0x8(0x8)
	struct ULevelStreaming* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.LinearColor_SetTemperature
// Size: 0x14(Inherited: 0x0) 
struct FLinearColor_SetTemperature
{
	struct FLinearColor InOutColor;  // 0x0(0x10)
	float InTemperature;  // 0x10(0x4)

}; 
// Function Engine.GameplayStatics.GetSurfaceType
// Size: 0x8C(Inherited: 0x0) 
struct FGetSurfaceType
{
	struct FHitResult Hit;  // 0x0(0x88)
	char EPhysicalSurface ReturnValue;  // 0x88(0x1)
	char pad_137[3];  // 0x89(0x3)

}; 
// Function Engine.KismetMaterialLibrary.GetScalarParameterValue
// Size: 0x20(Inherited: 0x0) 
struct FGetScalarParameterValue
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UMaterialParameterCollection* Collection;  // 0x8(0x8)
	struct FName ParameterName;  // 0x10(0x8)
	float ReturnValue;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.GameplayStatics.GetTimeSeconds
// Size: 0x10(Inherited: 0x0) 
struct FGetTimeSeconds
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetRenderingLibrary.BeginDrawCanvasToRenderTarget
// Size: 0x30(Inherited: 0x0) 
struct FBeginDrawCanvasToRenderTarget
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UTextureRenderTarget2D* TextureRenderTarget;  // 0x8(0x8)
	struct UCanvas* Canvas;  // 0x10(0x8)
	struct FVector2D Size;  // 0x18(0x8)
	struct FDrawToRenderTargetContext Context;  // 0x20(0x10)

}; 
// Function Engine.GameplayStatics.GetUnpausedTimeSeconds
// Size: 0x10(Inherited: 0x0) 
struct FGetUnpausedTimeSeconds
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.RandomBool
// Size: 0x1(Inherited: 0x0) 
struct FRandomBool
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.GameplayStatics.GetWorldDeltaSeconds
// Size: 0x10(Inherited: 0x0) 
struct FGetWorldDeltaSeconds
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetNodeHelperLibrary.MarkBit
// Size: 0x8(Inherited: 0x0) 
struct FMarkBit
{
	int32_t Data;  // 0x0(0x4)
	int32_t Index;  // 0x4(0x4)

}; 
// Function Engine.GameplayStatics.LoadGameFromSlot
// Size: 0x20(Inherited: 0x0) 
struct FLoadGameFromSlot
{
	struct FString SlotName;  // 0x0(0x10)
	int32_t UserIndex;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct USaveGame* ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.GameplayStatics.LoadStreamLevel
// Size: 0x30(Inherited: 0x0) 
struct FLoadStreamLevel
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FName LevelName;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bMakeVisibleAfterLoad : 1;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bShouldBlockOnLoad : 1;  // 0x11(0x1)
	char pad_18[6];  // 0x12(0x6)
	struct FLatentActionInfo LatentInfo;  // 0x18(0x18)

}; 
// Function Engine.KismetTextLibrary.AsPercent_Float
// Size: 0x30(Inherited: 0x0) 
struct FAsPercent_Float
{
	float Value;  // 0x0(0x4)
	char ERoundingMode RoundingMode;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bAlwaysSign : 1;  // 0x5(0x1)
	char pad_6_1 : 7;  // 0x6(0x1)
	bool bUseGrouping : 1;  // 0x6(0x1)
	char pad_7[1];  // 0x7(0x1)
	int32_t MinimumIntegralDigits;  // 0x8(0x4)
	int32_t MaximumIntegralDigits;  // 0xC(0x4)
	int32_t MinimumFractionalDigits;  // 0x10(0x4)
	int32_t MaximumFractionalDigits;  // 0x14(0x4)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.GameplayStatics.LoadStreamLevelBySoftObjectPtr
// Size: 0x50(Inherited: 0x0) 
struct FLoadStreamLevelBySoftObjectPtr
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct TSoftObjectPtr<UWorld> Level;  // 0x8(0x28)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bMakeVisibleAfterLoad : 1;  // 0x30(0x1)
	char pad_49_1 : 7;  // 0x31(0x1)
	bool bShouldBlockOnLoad : 1;  // 0x31(0x1)
	char pad_50[6];  // 0x32(0x6)
	struct FLatentActionInfo LatentInfo;  // 0x38(0x18)

}; 
// Function Engine.SpotLightComponent.SetInnerConeAngle
// Size: 0x4(Inherited: 0x0) 
struct FSetInnerConeAngle
{
	float NewInnerConeAngle;  // 0x0(0x4)

}; 
// Function Engine.GameplayStatics.MakeHitResult
// Size: 0x110(Inherited: 0x0) 
struct FMakeHitResult
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bBlockingHit : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bInitialOverlap : 1;  // 0x1(0x1)
	char pad_2[2];  // 0x2(0x2)
	float Time;  // 0x4(0x4)
	float Distance;  // 0x8(0x4)
	struct FVector Location;  // 0xC(0xC)
	struct FVector ImpactPoint;  // 0x18(0xC)
	struct FVector Normal;  // 0x24(0xC)
	struct FVector ImpactNormal;  // 0x30(0xC)
	char pad_60[4];  // 0x3C(0x4)
	struct UPhysicalMaterial* PhysMat;  // 0x40(0x8)
	struct AActor* HitActor;  // 0x48(0x8)
	struct UPrimitiveComponent* HitComponent;  // 0x50(0x8)
	struct FName HitBoneName;  // 0x58(0x8)
	int32_t HitItem;  // 0x60(0x4)
	int32_t ElementIndex;  // 0x64(0x4)
	int32_t FaceIndex;  // 0x68(0x4)
	struct FVector TraceStart;  // 0x6C(0xC)
	struct FVector TraceEnd;  // 0x78(0xC)
	struct FHitResult ReturnValue;  // 0x84(0x88)
	char pad_268[4];  // 0x10C(0x4)

}; 
// Function Engine.GameplayStatics.OpenLevel
// Size: 0x28(Inherited: 0x0) 
struct FOpenLevel
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FName LevelName;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bAbsolute : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)
	struct FString Options;  // 0x18(0x10)

}; 
// Function Engine.GameplayStatics.OpenLevelBySoftObjectPtr
// Size: 0x48(Inherited: 0x0) 
struct FOpenLevelBySoftObjectPtr
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct TSoftObjectPtr<UWorld> Level;  // 0x8(0x28)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bAbsolute : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct FString Options;  // 0x38(0x10)

}; 
// Function Engine.GameplayStatics.ParseOption
// Size: 0x30(Inherited: 0x0) 
struct FParseOption
{
	struct FString Options;  // 0x0(0x10)
	struct FString Key;  // 0x10(0x10)
	struct FString ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.GameplayStatics.PlaySound2D
// Size: 0x38(Inherited: 0x0) 
struct FPlaySound2D
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct USoundBase* Sound;  // 0x8(0x8)
	float VolumeMultiplier;  // 0x10(0x4)
	float PitchMultiplier;  // 0x14(0x4)
	float StartTime;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)
	struct USoundConcurrency* ConcurrencySettings;  // 0x20(0x8)
	struct AActor* OwningActor;  // 0x28(0x8)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bIsUISound : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 
// Function Engine.GameplayStatics.PopSoundMixModifier
// Size: 0x10(Inherited: 0x0) 
struct FPopSoundMixModifier
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct USoundMix* InSoundMixModifier;  // 0x8(0x8)

}; 
// Function Engine.GameplayStatics.PrimeAllSoundsInSoundClass
// Size: 0x8(Inherited: 0x0) 
struct FPrimeAllSoundsInSoundClass
{
	struct USoundClass* InSoundClass;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.Multiply_TimespanFloat
// Size: 0x18(Inherited: 0x0) 
struct FMultiply_TimespanFloat
{
	struct FTimespan A;  // 0x0(0x8)
	float Scalar;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)
	struct FTimespan ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.GameplayStatics.PushSoundMixModifier
// Size: 0x10(Inherited: 0x0) 
struct FPushSoundMixModifier
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct USoundMix* InSoundMixModifier;  // 0x8(0x8)

}; 
// Function Engine.GameplayStatics.RebaseZeroOriginOntoLocal
// Size: 0x20(Inherited: 0x0) 
struct FRebaseZeroOriginOntoLocal
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector WorldLocation;  // 0x8(0xC)
	struct FVector ReturnValue;  // 0x14(0xC)

}; 
// Function Engine.KismetMathLibrary.BooleanAND
// Size: 0x3(Inherited: 0x0) 
struct FBooleanAND
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool A : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool B : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool ReturnValue : 1;  // 0x2(0x1)

}; 
// Function Engine.KismetInternationalizationLibrary.GetSuitableCulture
// Size: 0x40(Inherited: 0x0) 
struct FGetSuitableCulture
{
	struct TArray<struct FString> AvailableCultures;  // 0x0(0x10)
	struct FString CultureToMatch;  // 0x10(0x10)
	struct FString FallbackCulture;  // 0x20(0x10)
	struct FString ReturnValue;  // 0x30(0x10)

}; 
// Function Engine.GameplayStatics.RemovePlayer
// Size: 0x10(Inherited: 0x0) 
struct FRemovePlayer
{
	struct APlayerController* Player;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bDestroyPawn : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.GameplayStatics.SaveGameToSlot
// Size: 0x20(Inherited: 0x0) 
struct FSaveGameToSlot
{
	struct USaveGame* SaveGameObject;  // 0x0(0x8)
	struct FString SlotName;  // 0x8(0x10)
	int32_t UserIndex;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool ReturnValue : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// Function Engine.GameplayStatics.SetEnableWorldRendering
// Size: 0x10(Inherited: 0x0) 
struct FSetEnableWorldRendering
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bEnable : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.GameplayStatics.SetForceDisableSplitscreen
// Size: 0x10(Inherited: 0x0) 
struct FSetForceDisableSplitscreen
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bDisable : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetMathLibrary.SignOfInteger64
// Size: 0x10(Inherited: 0x0) 
struct FSignOfInteger64
{
	int64_t A;  // 0x0(0x8)
	int64_t ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.MultiplyByPi
// Size: 0x8(Inherited: 0x0) 
struct FMultiplyByPi
{
	float Value;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.GameplayStatics.SetGamePaused
// Size: 0x10(Inherited: 0x0) 
struct FSetGamePaused
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bPaused : 1;  // 0x8(0x1)
	char pad_9_1 : 7;  // 0x9(0x1)
	bool ReturnValue : 1;  // 0x9(0x1)
	char pad_10[6];  // 0xA(0x6)

}; 
// Function Engine.GameplayStatics.SetGlobalListenerFocusParameters
// Size: 0x28(Inherited: 0x0) 
struct FSetGlobalListenerFocusParameters
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float FocusAzimuthScale;  // 0x8(0x4)
	float NonFocusAzimuthScale;  // 0xC(0x4)
	float FocusDistanceScale;  // 0x10(0x4)
	float NonFocusDistanceScale;  // 0x14(0x4)
	float FocusVolumeScale;  // 0x18(0x4)
	float NonFocusVolumeScale;  // 0x1C(0x4)
	float FocusPriorityScale;  // 0x20(0x4)
	float NonFocusPriorityScale;  // 0x24(0x4)

}; 
// Function Engine.GameplayStatics.SetGlobalTimeDilation
// Size: 0x10(Inherited: 0x0) 
struct FSetGlobalTimeDilation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float TimeDilation;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.VolumetricCloudComponent.SetLayerBottomAltitude
// Size: 0x4(Inherited: 0x0) 
struct FSetLayerBottomAltitude
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.RadiansToDegrees
// Size: 0x8(Inherited: 0x0) 
struct FRadiansToDegrees
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.GameplayStatics.SetMaxAudioChannelsScaled
// Size: 0x10(Inherited: 0x0) 
struct FSetMaxAudioChannelsScaled
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float MaxChannelCountScale;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.GameplayStatics.SetPlayerControllerID
// Size: 0x10(Inherited: 0x0) 
struct FSetPlayerControllerID
{
	struct APlayerController* Player;  // 0x0(0x8)
	int32_t ControllerId;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.GameplayStatics.SetSoundMixClassOverride
// Size: 0x28(Inherited: 0x0) 
struct FSetSoundMixClassOverride
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct USoundMix* InSoundMixModifier;  // 0x8(0x8)
	struct USoundClass* InSoundClass;  // 0x10(0x8)
	float Volume;  // 0x18(0x4)
	float Pitch;  // 0x1C(0x4)
	float FadeInTime;  // 0x20(0x4)
	char pad_36_1 : 7;  // 0x24(0x1)
	bool bApplyToChildren : 1;  // 0x24(0x1)
	char pad_37[3];  // 0x25(0x3)

}; 
// Function Engine.GameplayStatics.SpawnDecalAtLocation
// Size: 0x40(Inherited: 0x0) 
struct FSpawnDecalAtLocation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UMaterialInterface* DecalMaterial;  // 0x8(0x8)
	struct FVector DecalSize;  // 0x10(0xC)
	struct FVector Location;  // 0x1C(0xC)
	struct FRotator Rotation;  // 0x28(0xC)
	float LifeSpan;  // 0x34(0x4)
	struct UDecalComponent* ReturnValue;  // 0x38(0x8)

}; 
// Function Engine.GameplayStatics.SpawnDecalAttached
// Size: 0x50(Inherited: 0x0) 
struct FSpawnDecalAttached
{
	struct UMaterialInterface* DecalMaterial;  // 0x0(0x8)
	struct FVector DecalSize;  // 0x8(0xC)
	char pad_20[4];  // 0x14(0x4)
	struct USceneComponent* AttachToComponent;  // 0x18(0x8)
	struct FName AttachPointName;  // 0x20(0x8)
	struct FVector Location;  // 0x28(0xC)
	struct FRotator Rotation;  // 0x34(0xC)
	char EAttachLocation LocationType;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)
	float LifeSpan;  // 0x44(0x4)
	struct UDecalComponent* ReturnValue;  // 0x48(0x8)

}; 
// Function Engine.GameplayStatics.SpawnForceFeedbackAtLocation
// Size: 0x50(Inherited: 0x0) 
struct FSpawnForceFeedbackAtLocation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UForceFeedbackEffect* ForceFeedbackEffect;  // 0x8(0x8)
	struct FVector Location;  // 0x10(0xC)
	struct FRotator Rotation;  // 0x1C(0xC)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bLooping : 1;  // 0x28(0x1)
	char pad_41[3];  // 0x29(0x3)
	float IntensityMultiplier;  // 0x2C(0x4)
	float StartTime;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)
	struct UForceFeedbackAttenuation* AttenuationSettings;  // 0x38(0x8)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool bAutoDestroy : 1;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)
	struct UForceFeedbackComponent* ReturnValue;  // 0x48(0x8)

}; 
// Function Engine.GameplayStatics.SpawnForceFeedbackAttached
// Size: 0x58(Inherited: 0x0) 
struct FSpawnForceFeedbackAttached
{
	struct UForceFeedbackEffect* ForceFeedbackEffect;  // 0x0(0x8)
	struct USceneComponent* AttachToComponent;  // 0x8(0x8)
	struct FName AttachPointName;  // 0x10(0x8)
	struct FVector Location;  // 0x18(0xC)
	struct FRotator Rotation;  // 0x24(0xC)
	char EAttachLocation LocationType;  // 0x30(0x1)
	char pad_49_1 : 7;  // 0x31(0x1)
	bool bStopWhenAttachedToDestroyed : 1;  // 0x31(0x1)
	char pad_50_1 : 7;  // 0x32(0x1)
	bool bLooping : 1;  // 0x32(0x1)
	char pad_51[1];  // 0x33(0x1)
	float IntensityMultiplier;  // 0x34(0x4)
	float StartTime;  // 0x38(0x4)
	char pad_60[4];  // 0x3C(0x4)
	struct UForceFeedbackAttenuation* AttenuationSettings;  // 0x40(0x8)
	char pad_72_1 : 7;  // 0x48(0x1)
	bool bAutoDestroy : 1;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	struct UForceFeedbackComponent* ReturnValue;  // 0x50(0x8)

}; 
// Function Engine.GameplayStatics.SpawnObject
// Size: 0x18(Inherited: 0x0) 
struct FSpawnObject
{
	UObject* ObjectClass;  // 0x0(0x8)
	struct UObject* Outer;  // 0x8(0x8)
	struct UObject* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.GameplayStatics.SuggestProjectileVelocity_CustomArc
// Size: 0x38(Inherited: 0x0) 
struct FSuggestProjectileVelocity_CustomArc
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector OutLaunchVelocity;  // 0x8(0xC)
	struct FVector StartPos;  // 0x14(0xC)
	struct FVector EndPos;  // 0x20(0xC)
	float OverrideGravityZ;  // 0x2C(0x4)
	float ArcParam;  // 0x30(0x4)
	char pad_52_1 : 7;  // 0x34(0x1)
	bool ReturnValue : 1;  // 0x34(0x1)
	char pad_53[3];  // 0x35(0x3)

}; 
// Function Engine.KismetMathLibrary.VSizeXYSquared
// Size: 0x10(Inherited: 0x0) 
struct FVSizeXYSquared
{
	struct FVector A;  // 0x0(0xC)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.GameplayStatics.UnloadStreamLevel
// Size: 0x30(Inherited: 0x0) 
struct FUnloadStreamLevel
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FName LevelName;  // 0x8(0x8)
	struct FLatentActionInfo LatentInfo;  // 0x10(0x18)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bShouldBlockOnUnload : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// Function Engine.GameplayStatics.UnloadStreamLevelBySoftObjectPtr
// Size: 0x50(Inherited: 0x0) 
struct FUnloadStreamLevelBySoftObjectPtr
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct TSoftObjectPtr<UWorld> Level;  // 0x8(0x28)
	struct FLatentActionInfo LatentInfo;  // 0x30(0x18)
	char pad_72_1 : 7;  // 0x48(0x1)
	bool bShouldBlockOnUnload : 1;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)

}; 
// Function Engine.GameplayStatics.UnRetainAllSoundsInSoundClass
// Size: 0x8(Inherited: 0x0) 
struct FUnRetainAllSoundsInSoundClass
{
	struct USoundClass* InSoundClass;  // 0x0(0x8)

}; 
// Function Engine.GameUserSettings.ApplyResolutionSettings
// Size: 0x1(Inherited: 0x0) 
struct FApplyResolutionSettings
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bCheckForCommandLineOverrides : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.Sqrt
// Size: 0x8(Inherited: 0x0) 
struct FSqrt
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.GameUserSettings.EnableHDRDisplayOutput
// Size: 0x8(Inherited: 0x0) 
struct FEnableHDRDisplayOutput
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnable : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	int32_t DisplayNits;  // 0x4(0x4)

}; 
// Function Engine.GameUserSettings.GetAudioQualityLevel
// Size: 0x4(Inherited: 0x0) 
struct FGetAudioQualityLevel
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.RectLightComponent.SetSourceWidth
// Size: 0x4(Inherited: 0x0) 
struct FSetSourceWidth
{
	float bNewValue;  // 0x0(0x4)

}; 
// Function Engine.GameUserSettings.GetDefaultResolution
// Size: 0x8(Inherited: 0x0) 
struct FGetDefaultResolution
{
	struct FIntPoint ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.RGBToHSV_Vector
// Size: 0x20(Inherited: 0x0) 
struct FRGBToHSV_Vector
{
	struct FLinearColor RGB;  // 0x0(0x10)
	struct FLinearColor HSV;  // 0x10(0x10)

}; 
// Function Engine.GameUserSettings.GetDefaultResolutionScale
// Size: 0x4(Inherited: 0x0) 
struct FGetDefaultResolutionScale
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.GameUserSettings.GetDefaultWindowPosition
// Size: 0x8(Inherited: 0x0) 
struct FGetDefaultWindowPosition
{
	struct FIntPoint ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.GameUserSettings.GetFramePace
// Size: 0x4(Inherited: 0x0) 
struct FGetFramePace
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.GameUserSettings.GetLastConfirmedFullscreenMode
// Size: 0x1(Inherited: 0x0) 
struct FGetLastConfirmedFullscreenMode
{
	char EWindowMode ReturnValue;  // 0x0(0x1)

}; 
// Function Engine.GameUserSettings.GetOverallScalabilityLevel
// Size: 0x4(Inherited: 0x0) 
struct FGetOverallScalabilityLevel
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.GameUserSettings.GetPreferredFullscreenMode
// Size: 0x1(Inherited: 0x0) 
struct FGetPreferredFullscreenMode
{
	char EWindowMode ReturnValue;  // 0x0(0x1)

}; 
// Function Engine.GameUserSettings.GetResolutionScaleInformationEx
// Size: 0x10(Inherited: 0x0) 
struct FGetResolutionScaleInformationEx
{
	float CurrentScaleNormalized;  // 0x0(0x4)
	float CurrentScaleValue;  // 0x4(0x4)
	float MinScaleValue;  // 0x8(0x4)
	float MaxScaleValue;  // 0xC(0x4)

}; 
// Function Engine.GameUserSettings.GetResolutionScaleNormalized
// Size: 0x4(Inherited: 0x0) 
struct FGetResolutionScaleNormalized
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.GameUserSettings.GetShadowQuality
// Size: 0x4(Inherited: 0x0) 
struct FGetShadowQuality
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.GameUserSettings.GetTextureQuality
// Size: 0x4(Inherited: 0x0) 
struct FGetTextureQuality
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.GameUserSettings.GetViewDistanceQuality
// Size: 0x4(Inherited: 0x0) 
struct FGetViewDistanceQuality
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.GameUserSettings.GetVisualEffectQuality
// Size: 0x4(Inherited: 0x0) 
struct FGetVisualEffectQuality
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetTextLibrary.IsPolyglotDataValid
// Size: 0xD8(Inherited: 0x0) 
struct FIsPolyglotDataValid
{
	struct FPolyglotTextData PolyglotData;  // 0x0(0xB8)
	char pad_184_1 : 7;  // 0xB8(0x1)
	bool IsValid : 1;  // 0xB8(0x1)
	char pad_185[7];  // 0xB9(0x7)
	struct FText errorMessage;  // 0xC0(0x18)

}; 
// Function Engine.GameUserSettings.IsDirty
// Size: 0x1(Inherited: 0x0) 
struct FIsDirty
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PhysicsHandleComponent.SetTargetLocationAndRotation
// Size: 0x18(Inherited: 0x0) 
struct FSetTargetLocationAndRotation
{
	struct FVector NewLocation;  // 0x0(0xC)
	struct FRotator NewRotation;  // 0xC(0xC)

}; 
// Function Engine.KismetMathLibrary.Normal2D
// Size: 0x10(Inherited: 0x0) 
struct FNormal2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.GameUserSettings.IsDynamicResolutionDirty
// Size: 0x1(Inherited: 0x0) 
struct FIsDynamicResolutionDirty
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.GameUserSettings.IsFullscreenModeDirty
// Size: 0x1(Inherited: 0x0) 
struct FIsFullscreenModeDirty
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.GameUserSettings.IsHDREnabled
// Size: 0x1(Inherited: 0x0) 
struct FIsHDREnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.GameUserSettings.IsScreenResolutionDirty
// Size: 0x1(Inherited: 0x0) 
struct FIsScreenResolutionDirty
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.GameUserSettings.SetAntiAliasingQuality
// Size: 0x4(Inherited: 0x0) 
struct FSetAntiAliasingQuality
{
	int32_t Value;  // 0x0(0x4)

}; 
// Function Engine.GameUserSettings.SetDynamicResolutionEnabled
// Size: 0x1(Inherited: 0x0) 
struct FSetDynamicResolutionEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnable : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.GetTotalMilliseconds
// Size: 0x10(Inherited: 0x0) 
struct FGetTotalMilliseconds
{
	struct FTimespan A;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.GameUserSettings.SetFrameRateLimit
// Size: 0x4(Inherited: 0x0) 
struct FSetFrameRateLimit
{
	float NewLimit;  // 0x0(0x4)

}; 
// Function Engine.KismetArrayLibrary.Array_LastIndex
// Size: 0x18(Inherited: 0x0) 
struct FArray_LastIndex
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t ReturnValue;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.GameUserSettings.SetVSyncEnabled
// Size: 0x1(Inherited: 0x0) 
struct FSetVSyncEnabled
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnable : 1;  // 0x0(0x1)

}; 
// Function Engine.GameUserSettings.SetFullscreenMode
// Size: 0x1(Inherited: 0x0) 
struct FSetFullscreenMode
{
	char EWindowMode InFullscreenMode;  // 0x0(0x1)

}; 
// Function Engine.GameUserSettings.SetResolutionScaleNormalized
// Size: 0x4(Inherited: 0x0) 
struct FSetResolutionScaleNormalized
{
	float NewScaleNormalized;  // 0x0(0x4)

}; 
// Function Engine.KismetInputLibrary.PointerEvent_IsMouseButtonDown
// Size: 0x90(Inherited: 0x0) 
struct FPointerEvent_IsMouseButtonDown
{
	struct FPointerEvent Input;  // 0x0(0x70)
	struct FKey MouseButton;  // 0x70(0x18)
	char pad_136_1 : 7;  // 0x88(0x1)
	bool ReturnValue : 1;  // 0x88(0x1)
	char pad_137[7];  // 0x89(0x7)

}; 
// Function Engine.GameUserSettings.SetResolutionScaleValue
// Size: 0x4(Inherited: 0x0) 
struct FSetResolutionScaleValue
{
	int32_t NewScaleValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.IntPoint_Down
// Size: 0x8(Inherited: 0x0) 
struct FIntPoint_Down
{
	struct FIntPoint ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.GameUserSettings.SetScreenResolution
// Size: 0x8(Inherited: 0x0) 
struct FSetScreenResolution
{
	struct FIntPoint Resolution;  // 0x0(0x8)

}; 
// Function Engine.MeshVertexPainterKismetLibrary.PaintVerticesLerpAlongAxis
// Size: 0x30(Inherited: 0x0) 
struct FPaintVerticesLerpAlongAxis
{
	struct UStaticMeshComponent* StaticMeshComponent;  // 0x0(0x8)
	struct FLinearColor StartColor;  // 0x8(0x10)
	struct FLinearColor EndColor;  // 0x18(0x10)
	uint8_t  Axis;  // 0x28(0x1)
	char pad_41_1 : 7;  // 0x29(0x1)
	bool bConvertToSRGB : 1;  // 0x29(0x1)
	char pad_42[6];  // 0x2A(0x6)

}; 
// Function Engine.KismetMathLibrary.Conv_Int64ToInt
// Size: 0x10(Inherited: 0x0) 
struct FConv_Int64ToInt
{
	int64_t inInt;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.GameUserSettings.SetVisualEffectQuality
// Size: 0x4(Inherited: 0x0) 
struct FSetVisualEffectQuality
{
	int32_t Value;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.Vector2D_Unit45Deg
// Size: 0x8(Inherited: 0x0) 
struct FVector2D_Unit45Deg
{
	struct FVector2D ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.Add_VectorFloat
// Size: 0x1C(Inherited: 0x0) 
struct FAdd_VectorFloat
{
	struct FVector A;  // 0x0(0xC)
	float B;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.GameUserSettings.SupportsHDRDisplayOutput
// Size: 0x1(Inherited: 0x0) 
struct FSupportsHDRDisplayOutput
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.GameViewportClient.SetConsoleTarget
// Size: 0x4(Inherited: 0x0) 
struct FSetConsoleTarget
{
	int32_t PlayerIndex;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.Tan
// Size: 0x8(Inherited: 0x0) 
struct FTan
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.SpotLightComponent.SetOuterConeAngle
// Size: 0x4(Inherited: 0x0) 
struct FSetOuterConeAngle
{
	float NewOuterConeAngle;  // 0x0(0x4)

}; 
// Function Engine.ImportanceSamplingLibrary.BreakImportanceTexture
// Size: 0x60(Inherited: 0x0) 
struct FBreakImportanceTexture
{
	struct FImportanceTexture ImportanceTexture;  // 0x0(0x50)
	struct UTexture2D* Texture;  // 0x50(0x8)
	char EImportanceWeight WeightingFunc;  // 0x58(0x1)
	char pad_89[7];  // 0x59(0x7)

}; 
// Function Engine.MeshVertexPainterKismetLibrary.RemovePaintedVertices
// Size: 0x8(Inherited: 0x0) 
struct FRemovePaintedVertices
{
	struct UStaticMeshComponent* StaticMeshComponent;  // 0x0(0x8)

}; 
// Function Engine.ImportanceSamplingLibrary.NextSobolCell2D
// Size: 0x18(Inherited: 0x0) 
struct FNextSobolCell2D
{
	int32_t Index;  // 0x0(0x4)
	int32_t NumCells;  // 0x4(0x4)
	struct FVector2D PreviousValue;  // 0x8(0x8)
	struct FVector2D ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.ImportanceSamplingLibrary.RandomSobolCell2D
// Size: 0x20(Inherited: 0x0) 
struct FRandomSobolCell2D
{
	int32_t Index;  // 0x0(0x4)
	int32_t NumCells;  // 0x4(0x4)
	struct FVector2D Cell;  // 0x8(0x8)
	struct FVector2D Seed;  // 0x10(0x8)
	struct FVector2D ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.ImportanceSamplingLibrary.RandomSobolCell3D
// Size: 0x2C(Inherited: 0x0) 
struct FRandomSobolCell3D
{
	int32_t Index;  // 0x0(0x4)
	int32_t NumCells;  // 0x4(0x4)
	struct FVector Cell;  // 0x8(0xC)
	struct FVector Seed;  // 0x14(0xC)
	struct FVector ReturnValue;  // 0x20(0xC)

}; 
// Function Engine.PhysicsConstraintComponent.SetConstrainedComponents
// Size: 0x20(Inherited: 0x0) 
struct FSetConstrainedComponents
{
	struct UPrimitiveComponent* Component1;  // 0x0(0x8)
	struct FName BoneName1;  // 0x8(0x8)
	struct UPrimitiveComponent* Component2;  // 0x10(0x8)
	struct FName BoneName2;  // 0x18(0x8)

}; 
// Function Engine.ImportanceSamplingLibrary.RandomSobolFloat
// Size: 0x10(Inherited: 0x0) 
struct FRandomSobolFloat
{
	int32_t Index;  // 0x0(0x4)
	int32_t Dimension;  // 0x4(0x4)
	float Seed;  // 0x8(0x4)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.InputComponent.GetControllerVectorKeyState
// Size: 0x28(Inherited: 0x0) 
struct FGetControllerVectorKeyState
{
	struct FKey Key;  // 0x0(0x18)
	struct FVector ReturnValue;  // 0x18(0xC)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.InputComponent.GetTouchState
// Size: 0x10(Inherited: 0x0) 
struct FGetTouchState
{
	int32_t FingerIndex;  // 0x0(0x4)
	float LocationX;  // 0x4(0x4)
	float LocationY;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bIsCurrentlyPressed : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.KismetMathLibrary.Divide_VectorInt
// Size: 0x1C(Inherited: 0x0) 
struct FDivide_VectorInt
{
	struct FVector A;  // 0x0(0xC)
	int32_t B;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.InputComponent.WasControllerKeyJustPressed
// Size: 0x20(Inherited: 0x0) 
struct FWasControllerKeyJustPressed
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.InputComponent.WasControllerKeyJustReleased
// Size: 0x20(Inherited: 0x0) 
struct FWasControllerKeyJustReleased
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetNodeHelperLibrary.GetValidValue
// Size: 0x10(Inherited: 0x0) 
struct FGetValidValue
{
	struct UEnum* Enum;  // 0x0(0x8)
	char EnumeratorValue;  // 0x8(0x1)
	char ReturnValue;  // 0x9(0x1)
	char pad_10[6];  // 0xA(0x6)

}; 
// Function Engine.KismetMathLibrary.GetDays
// Size: 0x10(Inherited: 0x0) 
struct FGetDays
{
	struct FTimespan A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.InputSettings.AddActionMapping
// Size: 0x30(Inherited: 0x0) 
struct FAddActionMapping
{
	struct FInputActionKeyMapping KeyMapping;  // 0x0(0x28)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bForceRebuildKeymaps : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// Function Engine.InputSettings.AddAxisMapping
// Size: 0x30(Inherited: 0x0) 
struct FAddAxisMapping
{
	struct FInputAxisKeyMapping KeyMapping;  // 0x0(0x28)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bForceRebuildKeymaps : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 
// Function Engine.KismetTextLibrary.AsDate_DateTime
// Size: 0x20(Inherited: 0x0) 
struct FAsDate_DateTime
{
	struct FDateTime InDateTime;  // 0x0(0x8)
	struct FText ReturnValue;  // 0x8(0x18)

}; 
// Function Engine.InputSettings.GetActionNames
// Size: 0x10(Inherited: 0x0) 
struct FGetActionNames
{
	struct TArray<struct FName> ActionNames;  // 0x0(0x10)

}; 
// Function Engine.InputSettings.GetAxisMappingByName
// Size: 0x18(Inherited: 0x0) 
struct FGetAxisMappingByName
{
	struct FName InAxisName;  // 0x0(0x8)
	struct TArray<struct FInputAxisKeyMapping> OutMappings;  // 0x8(0x10)

}; 
// Function Engine.KismetRenderingLibrary.MakeSkinWeightInfo
// Size: 0x5C(Inherited: 0x0) 
struct FMakeSkinWeightInfo
{
	int32_t Bone0;  // 0x0(0x4)
	char Weight0;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)
	int32_t Bone1;  // 0x8(0x4)
	char Weight1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)
	int32_t Bone2;  // 0x10(0x4)
	char Weight2;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)
	int32_t Bone3;  // 0x18(0x4)
	char Weight3;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)
	struct FSkelMeshSkinWeightInfo ReturnValue;  // 0x20(0x3C)

}; 
// Function Engine.KismetInputLibrary.GetKey
// Size: 0x50(Inherited: 0x0) 
struct FGetKey
{
	struct FKeyEvent Input;  // 0x0(0x38)
	struct FKey ReturnValue;  // 0x38(0x18)

}; 
// Function Engine.InputSettings.GetAxisNames
// Size: 0x10(Inherited: 0x0) 
struct FGetAxisNames
{
	struct TArray<struct FName> AxisNames;  // 0x0(0x10)

}; 
// Function Engine.KismetTextLibrary.AsDateTime_DateTime
// Size: 0x20(Inherited: 0x0) 
struct FAsDateTime_DateTime
{
	struct FDateTime In;  // 0x0(0x8)
	struct FText ReturnValue;  // 0x8(0x18)

}; 
// Function Engine.InputSettings.GetInputSettings
// Size: 0x8(Inherited: 0x0) 
struct FGetInputSettings
{
	struct UInputSettings* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetTextLibrary.TextTrimTrailing
// Size: 0x30(Inherited: 0x0) 
struct FTextTrimTrailing
{
	struct FText InText;  // 0x0(0x18)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.KismetArrayLibrary.Array_Add
// Size: 0x18(Inherited: 0x0) 
struct FArray_Add
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t NewItem;  // 0x10(0x4)
	int32_t ReturnValue;  // 0x14(0x4)

}; 
// Function Engine.KismetArrayLibrary.Array_AddUnique
// Size: 0x18(Inherited: 0x0) 
struct FArray_AddUnique
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t NewItem;  // 0x10(0x4)
	int32_t ReturnValue;  // 0x14(0x4)

}; 
// Function Engine.KismetArrayLibrary.Array_Append
// Size: 0x20(Inherited: 0x0) 
struct FArray_Append
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	struct TArray<int32_t> SourceArray;  // 0x10(0x10)

}; 
// Function Engine.KismetArrayLibrary.Array_Clear
// Size: 0x10(Inherited: 0x0) 
struct FArray_Clear
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)

}; 
// Function Engine.KismetArrayLibrary.Array_Contains
// Size: 0x18(Inherited: 0x0) 
struct FArray_Contains
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t ItemToFind;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.SkyLightComponent.SetCubemap
// Size: 0x8(Inherited: 0x0) 
struct FSetCubemap
{
	struct UTextureCube* NewCubemap;  // 0x0(0x8)

}; 
// Function Engine.KismetArrayLibrary.Array_Find
// Size: 0x18(Inherited: 0x0) 
struct FArray_Find
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t ItemToFind;  // 0x10(0x4)
	int32_t ReturnValue;  // 0x14(0x4)

}; 
// Function Engine.KismetArrayLibrary.Array_Insert
// Size: 0x18(Inherited: 0x0) 
struct FArray_Insert
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t NewItem;  // 0x10(0x4)
	int32_t Index;  // 0x14(0x4)

}; 
// Function Engine.KismetArrayLibrary.Array_IsValidIndex
// Size: 0x18(Inherited: 0x0) 
struct FArray_IsValidIndex
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t IndexToTest;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.KismetArrayLibrary.Array_Length
// Size: 0x18(Inherited: 0x0) 
struct FArray_Length
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)
	int32_t ReturnValue;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.KismetArrayLibrary.Array_Shuffle
// Size: 0x10(Inherited: 0x0) 
struct FArray_Shuffle
{
	struct TArray<int32_t> TargetArray;  // 0x0(0x10)

}; 
// Function Engine.KismetArrayLibrary.FilterArray
// Size: 0x28(Inherited: 0x0) 
struct FFilterArray
{
	struct TArray<struct AActor*> TargetArray;  // 0x0(0x10)
	AActor* FilterClass;  // 0x10(0x8)
	struct TArray<struct AActor*> FilteredArray;  // 0x18(0x10)

}; 
// Function Engine.KismetArrayLibrary.SetArrayPropertyByName
// Size: 0x20(Inherited: 0x0) 
struct FSetArrayPropertyByName
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)
	struct TArray<int32_t> Value;  // 0x10(0x10)

}; 
// Function Engine.KismetGuidLibrary.Conv_GuidToString
// Size: 0x20(Inherited: 0x0) 
struct FConv_GuidToString
{
	struct FGuid InGuid;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetGuidLibrary.Invalidate_Guid
// Size: 0x10(Inherited: 0x0) 
struct FInvalidate_Guid
{
	struct FGuid InGuid;  // 0x0(0x10)

}; 
// Function Engine.KismetGuidLibrary.IsValid_Guid
// Size: 0x14(Inherited: 0x0) 
struct FIsValid_Guid
{
	struct FGuid InGuid;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.KismetGuidLibrary.NewGuid
// Size: 0x10(Inherited: 0x0) 
struct FNewGuid
{
	struct FGuid ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.SkeletalMesh.SetMeshClothingAssets
// Size: 0x10(Inherited: 0x0) 
struct FSetMeshClothingAssets
{
	struct TArray<struct UClothingAssetBase*> InMeshClothingAssets;  // 0x0(0x10)

}; 
// Function Engine.KismetGuidLibrary.NotEqual_GuidGuid
// Size: 0x24(Inherited: 0x0) 
struct FNotEqual_GuidGuid
{
	struct FGuid A;  // 0x0(0x10)
	struct FGuid B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[3];  // 0x21(0x3)

}; 
// Function Engine.KismetGuidLibrary.Parse_StringToGuid
// Size: 0x28(Inherited: 0x0) 
struct FParse_StringToGuid
{
	struct FString GuidString;  // 0x0(0x10)
	struct FGuid OutGuid;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool Success : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// Function Engine.KismetInputLibrary.GetUserIndex
// Size: 0x40(Inherited: 0x0) 
struct FGetUserIndex
{
	struct FKeyEvent Input;  // 0x0(0x38)
	int32_t ReturnValue;  // 0x38(0x4)
	char pad_60[4];  // 0x3C(0x4)

}; 
// Function Engine.KismetMathLibrary.NotEqual_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FNotEqual_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetInputLibrary.InputEvent_IsAltDown
// Size: 0x20(Inherited: 0x0) 
struct FInputEvent_IsAltDown
{
	struct FInputEvent Input;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.InputEvent_IsCommandDown
// Size: 0x20(Inherited: 0x0) 
struct FInputEvent_IsCommandDown
{
	struct FInputEvent Input;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.InputEvent_IsControlDown
// Size: 0x20(Inherited: 0x0) 
struct FInputEvent_IsControlDown
{
	struct FInputEvent Input;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.InputEvent_IsLeftCommandDown
// Size: 0x20(Inherited: 0x0) 
struct FInputEvent_IsLeftCommandDown
{
	struct FInputEvent Input;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetMathLibrary.Vector_ClampSize2D
// Size: 0x20(Inherited: 0x0) 
struct FVector_ClampSize2D
{
	struct FVector A;  // 0x0(0xC)
	float Min;  // 0xC(0x4)
	float Max;  // 0x10(0x4)
	struct FVector ReturnValue;  // 0x14(0xC)

}; 
// Function Engine.KismetMathLibrary.MakeRotFromZY
// Size: 0x24(Inherited: 0x0) 
struct FMakeRotFromZY
{
	struct FVector Z;  // 0x0(0xC)
	struct FVector Y;  // 0xC(0xC)
	struct FRotator ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetInputLibrary.InputEvent_IsRepeat
// Size: 0x20(Inherited: 0x0) 
struct FInputEvent_IsRepeat
{
	struct FInputEvent Input;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInRadians
// Size: 0x20(Inherited: 0x0) 
struct FRandomUnitVectorInEllipticalConeInRadians
{
	struct FVector ConeDir;  // 0x0(0xC)
	float MaxYawInRadians;  // 0xC(0x4)
	float MaxPitchInRadians;  // 0x10(0x4)
	struct FVector ReturnValue;  // 0x14(0xC)

}; 
// Function Engine.KismetInputLibrary.InputEvent_IsRightAltDown
// Size: 0x20(Inherited: 0x0) 
struct FInputEvent_IsRightAltDown
{
	struct FInputEvent Input;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.InputEvent_IsRightCommandDown
// Size: 0x20(Inherited: 0x0) 
struct FInputEvent_IsRightCommandDown
{
	struct FInputEvent Input;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.InputEvent_IsRightControlDown
// Size: 0x20(Inherited: 0x0) 
struct FInputEvent_IsRightControlDown
{
	struct FInputEvent Input;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.InputEvent_IsRightShiftDown
// Size: 0x20(Inherited: 0x0) 
struct FInputEvent_IsRightShiftDown
{
	struct FInputEvent Input;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.Key_GetNavigationAction
// Size: 0x20(Inherited: 0x0) 
struct FKey_GetNavigationAction
{
	struct FKey InKey;  // 0x0(0x18)
	uint8_t  ReturnValue;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.Key_IsAnalog
// Size: 0x20(Inherited: 0x0) 
struct FKey_IsAnalog
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.Key_IsAxis1D
// Size: 0x20(Inherited: 0x0) 
struct FKey_IsAxis1D
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.Key_IsAxis2D
// Size: 0x20(Inherited: 0x0) 
struct FKey_IsAxis2D
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.Key_IsAxis3D
// Size: 0x20(Inherited: 0x0) 
struct FKey_IsAxis3D
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.Key_IsButtonAxis
// Size: 0x20(Inherited: 0x0) 
struct FKey_IsButtonAxis
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.Key_IsGamepadKey
// Size: 0x20(Inherited: 0x0) 
struct FKey_IsGamepadKey
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.PhysicsConstraintComponent.SetDisableCollision
// Size: 0x1(Inherited: 0x0) 
struct FSetDisableCollision
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bDisableCollision : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetInputLibrary.Key_IsKeyboardKey
// Size: 0x20(Inherited: 0x0) 
struct FKey_IsKeyboardKey
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.Key_IsMouseButton
// Size: 0x20(Inherited: 0x0) 
struct FKey_IsMouseButton
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.Key_IsVectorAxis
// Size: 0x20(Inherited: 0x0) 
struct FKey_IsVectorAxis
{
	struct FKey Key;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetInputLibrary.PointerEvent_GetCursorDelta
// Size: 0x78(Inherited: 0x0) 
struct FPointerEvent_GetCursorDelta
{
	struct FPointerEvent Input;  // 0x0(0x70)
	struct FVector2D ReturnValue;  // 0x70(0x8)

}; 
// Function Engine.KismetInputLibrary.PointerEvent_GetEffectingButton
// Size: 0x88(Inherited: 0x0) 
struct FPointerEvent_GetEffectingButton
{
	struct FPointerEvent Input;  // 0x0(0x70)
	struct FKey ReturnValue;  // 0x70(0x18)

}; 
// Function Engine.KismetInputLibrary.PointerEvent_GetGestureDelta
// Size: 0x78(Inherited: 0x0) 
struct FPointerEvent_GetGestureDelta
{
	struct FPointerEvent Input;  // 0x0(0x70)
	struct FVector2D ReturnValue;  // 0x70(0x8)

}; 
// Function Engine.KismetInputLibrary.PointerEvent_GetScreenSpacePosition
// Size: 0x78(Inherited: 0x0) 
struct FPointerEvent_GetScreenSpacePosition
{
	struct FPointerEvent Input;  // 0x0(0x70)
	struct FVector2D ReturnValue;  // 0x70(0x8)

}; 
// Function Engine.KismetInputLibrary.PointerEvent_GetWheelDelta
// Size: 0x78(Inherited: 0x0) 
struct FPointerEvent_GetWheelDelta
{
	struct FPointerEvent Input;  // 0x0(0x70)
	float ReturnValue;  // 0x70(0x4)
	char pad_116[4];  // 0x74(0x4)

}; 
// Function Engine.KismetMathLibrary.MinInt64
// Size: 0x18(Inherited: 0x0) 
struct FMinInt64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	int64_t ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetInputLibrary.PointerEvent_IsTouchEvent
// Size: 0x78(Inherited: 0x0) 
struct FPointerEvent_IsTouchEvent
{
	struct FPointerEvent Input;  // 0x0(0x70)
	char pad_112_1 : 7;  // 0x70(0x1)
	bool ReturnValue : 1;  // 0x70(0x1)
	char pad_113[7];  // 0x71(0x7)

}; 
// Function Engine.KismetInternationalizationLibrary.ClearCurrentAssetGroupCulture
// Size: 0xC(Inherited: 0x0) 
struct FClearCurrentAssetGroupCulture
{
	struct FName AssetGroup;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool SaveToConfig : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetInternationalizationLibrary.GetCultureDisplayName
// Size: 0x28(Inherited: 0x0) 
struct FGetCultureDisplayName
{
	struct FString Culture;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool Localized : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)
	struct FString ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.KismetStringTableLibrary.GetRegisteredStringTables
// Size: 0x10(Inherited: 0x0) 
struct FGetRegisteredStringTables
{
	struct TArray<struct FName> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetInternationalizationLibrary.GetCurrentAssetGroupCulture
// Size: 0x18(Inherited: 0x0) 
struct FGetCurrentAssetGroupCulture
{
	struct FName AssetGroup;  // 0x0(0x8)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetNodeHelperLibrary.GetEnumeratorUserFriendlyName
// Size: 0x20(Inherited: 0x0) 
struct FGetEnumeratorUserFriendlyName
{
	struct UEnum* Enum;  // 0x0(0x8)
	char EnumeratorValue;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetInternationalizationLibrary.GetCurrentLanguage
// Size: 0x10(Inherited: 0x0) 
struct FGetCurrentLanguage
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.PhysicalAnimationComponent.GetBodyTargetTransform
// Size: 0x40(Inherited: 0x0) 
struct FGetBodyTargetTransform
{
	struct FName BodyName;  // 0x0(0x8)
	char pad_8[8];  // 0x8(0x8)
	struct FTransform ReturnValue;  // 0x10(0x30)

}; 
// Function Engine.KismetInternationalizationLibrary.GetCurrentLocale
// Size: 0x10(Inherited: 0x0) 
struct FGetCurrentLocale
{
	struct FString ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetInternationalizationLibrary.GetLocalizedCultures
// Size: 0x18(Inherited: 0x0) 
struct FGetLocalizedCultures
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool IncludeGame : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool IncludeEngine : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool IncludeEditor : 1;  // 0x2(0x1)
	char pad_3_1 : 7;  // 0x3(0x1)
	bool IncludeAdditional : 1;  // 0x3(0x1)
	char pad_4[4];  // 0x4(0x4)
	struct TArray<struct FString> ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetInternationalizationLibrary.GetNativeCulture
// Size: 0x18(Inherited: 0x0) 
struct FGetNativeCulture
{
	uint8_t  TextCategory;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.StereoLayerComponent.GetTexture
// Size: 0x8(Inherited: 0x0) 
struct FGetTexture
{
	struct UTexture* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.PhysicsConstraintComponent.SetConstraintReferenceFrame
// Size: 0x40(Inherited: 0x0) 
struct FSetConstraintReferenceFrame
{
	char EConstraintFrame Frame;  // 0x0(0x1)
	char pad_1[15];  // 0x1(0xF)
	struct FTransform RefFrame;  // 0x10(0x30)

}; 
// Function Engine.KismetInternationalizationLibrary.SetCurrentLanguage
// Size: 0x18(Inherited: 0x0) 
struct FSetCurrentLanguage
{
	struct FString Culture;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool SaveToConfig : 1;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool ReturnValue : 1;  // 0x11(0x1)
	char pad_18[6];  // 0x12(0x6)

}; 
// Function Engine.KismetMathLibrary.Conv_ByteToInt
// Size: 0x8(Inherited: 0x0) 
struct FConv_ByteToInt
{
	char InByte;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMaterialLibrary.GetVectorParameterValue
// Size: 0x28(Inherited: 0x0) 
struct FGetVectorParameterValue
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UMaterialParameterCollection* Collection;  // 0x8(0x8)
	struct FName ParameterName;  // 0x10(0x8)
	struct FLinearColor ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.MaterialInstanceDynamic.SetScalarParameterValue
// Size: 0xC(Inherited: 0x0) 
struct FSetScalarParameterValue
{
	struct FName ParameterName;  // 0x0(0x8)
	float Value;  // 0x8(0x4)

}; 
// Function Engine.MaterialInstanceDynamic.SetVectorParameterValue
// Size: 0x18(Inherited: 0x0) 
struct FSetVectorParameterValue
{
	struct FName ParameterName;  // 0x0(0x8)
	struct FLinearColor Value;  // 0x8(0x10)

}; 
// Function Engine.KismetMathLibrary.Abs_Int
// Size: 0x8(Inherited: 0x0) 
struct FAbs_Int
{
	int32_t A;  // 0x0(0x4)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.Abs_Int64
// Size: 0x10(Inherited: 0x0) 
struct FAbs_Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Acos
// Size: 0x8(Inherited: 0x0) 
struct FAcos
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.Add_ByteByte
// Size: 0x3(Inherited: 0x0) 
struct FAdd_ByteByte
{
	char A;  // 0x0(0x1)
	char B;  // 0x1(0x1)
	char ReturnValue;  // 0x2(0x1)

}; 
// Function Engine.PhysicalAnimationComponent.SetStrengthMultiplyer
// Size: 0x4(Inherited: 0x0) 
struct FSetStrengthMultiplyer
{
	float InStrengthMultiplyer;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.Add_DateTimeDateTime
// Size: 0x18(Inherited: 0x0) 
struct FAdd_DateTimeDateTime
{
	struct FDateTime A;  // 0x0(0x8)
	struct FDateTime B;  // 0x8(0x8)
	struct FDateTime ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.Add_DateTimeTimespan
// Size: 0x18(Inherited: 0x0) 
struct FAdd_DateTimeTimespan
{
	struct FDateTime A;  // 0x0(0x8)
	struct FTimespan B;  // 0x8(0x8)
	struct FDateTime ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.SkeletalMesh.SetMorphTargets
// Size: 0x10(Inherited: 0x0) 
struct FSetMorphTargets
{
	struct TArray<struct UMorphTarget*> InMorphTargets;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.Add_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FAdd_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.Add_IntPointInt
// Size: 0x14(Inherited: 0x0) 
struct FAdd_IntPointInt
{
	struct FIntPoint A;  // 0x0(0x8)
	int32_t B;  // 0x8(0x4)
	struct FIntPoint ReturnValue;  // 0xC(0x8)

}; 
// Function Engine.KismetMathLibrary.Add_IntPointIntPoint
// Size: 0x18(Inherited: 0x0) 
struct FAdd_IntPointIntPoint
{
	struct FIntPoint A;  // 0x0(0x8)
	struct FIntPoint B;  // 0x8(0x8)
	struct FIntPoint ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.Add_MatrixMatrix
// Size: 0xC0(Inherited: 0x0) 
struct FAdd_MatrixMatrix
{
	struct FMatrix A;  // 0x0(0x40)
	struct FMatrix B;  // 0x40(0x40)
	struct FMatrix ReturnValue;  // 0x80(0x40)

}; 
// Function Engine.KismetMathLibrary.Add_Vector2DFloat
// Size: 0x14(Inherited: 0x0) 
struct FAdd_Vector2DFloat
{
	struct FVector2D A;  // 0x0(0x8)
	float B;  // 0x8(0x4)
	struct FVector2D ReturnValue;  // 0xC(0x8)

}; 
// Function Engine.KismetMathLibrary.Add_Vector2DVector2D
// Size: 0x18(Inherited: 0x0) 
struct FAdd_Vector2DVector2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D B;  // 0x8(0x8)
	struct FVector2D ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.NotEqual_ClassClass
// Size: 0x18(Inherited: 0x0) 
struct FNotEqual_ClassClass
{
	UObject* A;  // 0x0(0x8)
	UObject* B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetMathLibrary.Add_VectorInt
// Size: 0x1C(Inherited: 0x0) 
struct FAdd_VectorInt
{
	struct FVector A;  // 0x0(0xC)
	int32_t B;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.KismetMathLibrary.Asin
// Size: 0x8(Inherited: 0x0) 
struct FAsin
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.Min
// Size: 0xC(Inherited: 0x0) 
struct FMin
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.Atan2
// Size: 0xC(Inherited: 0x0) 
struct FAtan2
{
	float Y;  // 0x0(0x4)
	float X;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.BMax
// Size: 0x3(Inherited: 0x0) 
struct FBMax
{
	char A;  // 0x0(0x1)
	char B;  // 0x1(0x1)
	char ReturnValue;  // 0x2(0x1)

}; 
// Function Engine.LevelStreaming.IsStreamingStatePending
// Size: 0x1(Inherited: 0x0) 
struct FIsStreamingStatePending
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.KismetMathLibrary.BMin
// Size: 0x3(Inherited: 0x0) 
struct FBMin
{
	char A;  // 0x0(0x1)
	char B;  // 0x1(0x1)
	char ReturnValue;  // 0x2(0x1)

}; 
// Function Engine.KismetMathLibrary.BooleanXOR
// Size: 0x3(Inherited: 0x0) 
struct FBooleanXOR
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool A : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool B : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool ReturnValue : 1;  // 0x2(0x1)

}; 
// Function Engine.KismetMathLibrary.BreakColor
// Size: 0x20(Inherited: 0x0) 
struct FBreakColor
{
	struct FLinearColor InColor;  // 0x0(0x10)
	float R;  // 0x10(0x4)
	float G;  // 0x14(0x4)
	float B;  // 0x18(0x4)
	float A;  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.BreakDateTime
// Size: 0x28(Inherited: 0x0) 
struct FBreakDateTime
{
	struct FDateTime InDateTime;  // 0x0(0x8)
	int32_t Year;  // 0x8(0x4)
	int32_t Month;  // 0xC(0x4)
	int32_t Day;  // 0x10(0x4)
	int32_t Hour;  // 0x14(0x4)
	int32_t Minute;  // 0x18(0x4)
	int32_t Second;  // 0x1C(0x4)
	int32_t Millisecond;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.KismetMathLibrary.BreakFrameRate
// Size: 0x10(Inherited: 0x0) 
struct FBreakFrameRate
{
	struct FFrameRate InFrameRate;  // 0x0(0x8)
	int32_t Numerator;  // 0x8(0x4)
	int32_t Denominator;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.BreakQualifiedFrameTime
// Size: 0x20(Inherited: 0x0) 
struct FBreakQualifiedFrameTime
{
	struct FQualifiedFrameTime InFrameTime;  // 0x0(0x10)
	struct FFrameNumber Frame;  // 0x10(0x4)
	struct FFrameRate FrameRate;  // 0x14(0x8)
	float SubFrame;  // 0x1C(0x4)

}; 
// Function Engine.MeshVertexPainterKismetLibrary.PaintVerticesSingleColor
// Size: 0x20(Inherited: 0x0) 
struct FPaintVerticesSingleColor
{
	struct UStaticMeshComponent* StaticMeshComponent;  // 0x0(0x8)
	struct FLinearColor FillColor;  // 0x8(0x10)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bConvertToSRGB : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetMathLibrary.BreakRandomStream
// Size: 0xC(Inherited: 0x0) 
struct FBreakRandomStream
{
	struct FRandomStream InRandomStream;  // 0x0(0x8)
	int32_t InitialSeed;  // 0x8(0x4)

}; 
// Function Engine.TextRenderComponent.GetTextWorldSize
// Size: 0xC(Inherited: 0x0) 
struct FGetTextWorldSize
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.BreakTimespan
// Size: 0x20(Inherited: 0x0) 
struct FBreakTimespan
{
	struct FTimespan InTimespan;  // 0x0(0x8)
	int32_t Days;  // 0x8(0x4)
	int32_t Hours;  // 0xC(0x4)
	int32_t Minutes;  // 0x10(0x4)
	int32_t Seconds;  // 0x14(0x4)
	int32_t Milliseconds;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.BreakTransform
// Size: 0x60(Inherited: 0x0) 
struct FBreakTransform
{
	struct FTransform InTransform;  // 0x0(0x30)
	struct FVector Location;  // 0x30(0xC)
	struct FRotator Rotation;  // 0x3C(0xC)
	struct FVector Scale;  // 0x48(0xC)
	char pad_84[12];  // 0x54(0xC)

}; 
// Function Engine.KismetMathLibrary.BreakVector2D
// Size: 0x10(Inherited: 0x0) 
struct FBreakVector2D
{
	struct FVector2D InVec;  // 0x0(0x8)
	float X;  // 0x8(0x4)
	float Y;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.BreakVector4
// Size: 0x20(Inherited: 0x0) 
struct FBreakVector4
{
	struct FVector4 InVec;  // 0x0(0x10)
	float X;  // 0x10(0x4)
	float Y;  // 0x14(0x4)
	float Z;  // 0x18(0x4)
	float W;  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.ClampAngle
// Size: 0x10(Inherited: 0x0) 
struct FClampAngle
{
	float AngleDegrees;  // 0x0(0x4)
	float MinAngleDegrees;  // 0x4(0x4)
	float MaxAngleDegrees;  // 0x8(0x4)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.ClampAxis
// Size: 0x8(Inherited: 0x0) 
struct FClampAxis
{
	float angle;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.ComposeTransforms
// Size: 0x90(Inherited: 0x0) 
struct FComposeTransforms
{
	struct FTransform A;  // 0x0(0x30)
	struct FTransform B;  // 0x30(0x30)
	struct FTransform ReturnValue;  // 0x60(0x30)

}; 
// Function Engine.KismetMathLibrary.Conv_BoolToInt
// Size: 0x8(Inherited: 0x0) 
struct FConv_BoolToInt
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool InBool : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.Conv_ColorToLinearColor
// Size: 0x14(Inherited: 0x0) 
struct FConv_ColorToLinearColor
{
	struct FColor InColor;  // 0x0(0x4)
	struct FLinearColor ReturnValue;  // 0x4(0x10)

}; 
// Function Engine.KismetMathLibrary.Conv_FloatToLinearColor
// Size: 0x14(Inherited: 0x0) 
struct FConv_FloatToLinearColor
{
	float InFloat;  // 0x0(0x4)
	struct FLinearColor ReturnValue;  // 0x4(0x10)

}; 
// Function Engine.KismetMathLibrary.Conv_FloatToVector
// Size: 0x10(Inherited: 0x0) 
struct FConv_FloatToVector
{
	float InFloat;  // 0x0(0x4)
	struct FVector ReturnValue;  // 0x4(0xC)

}; 
// Function Engine.KismetMathLibrary.Or_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FOr_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.Conv_RotatorToVector
// Size: 0x18(Inherited: 0x0) 
struct FConv_RotatorToVector
{
	struct FRotator InRot;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetMathLibrary.Conv_IntToInt64
// Size: 0x10(Inherited: 0x0) 
struct FConv_IntToInt64
{
	int32_t inInt;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	int64_t ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.GreaterEqual_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FGreaterEqual_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetMathLibrary.GetRotated2D
// Size: 0x14(Inherited: 0x0) 
struct FGetRotated2D
{
	struct FVector2D A;  // 0x0(0x8)
	float AngleDeg;  // 0x8(0x4)
	struct FVector2D ReturnValue;  // 0xC(0x8)

}; 
// Function Engine.KismetMathLibrary.Conv_IntToIntVector
// Size: 0x10(Inherited: 0x0) 
struct FConv_IntToIntVector
{
	int32_t inInt;  // 0x0(0x4)
	struct FIntVector ReturnValue;  // 0x4(0xC)

}; 
// Function Engine.KismetMathLibrary.Conv_IntVectorToVector
// Size: 0x18(Inherited: 0x0) 
struct FConv_IntVectorToVector
{
	struct FIntVector InIntVector;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetMathLibrary.Conv_LinearColorToVector
// Size: 0x1C(Inherited: 0x0) 
struct FConv_LinearColorToVector
{
	struct FLinearColor InLinearColor;  // 0x0(0x10)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.KismetMathLibrary.Conv_MatrixToTransform
// Size: 0x70(Inherited: 0x0) 
struct FConv_MatrixToTransform
{
	struct FMatrix InMatrix;  // 0x0(0x40)
	struct FTransform ReturnValue;  // 0x40(0x30)

}; 
// Function Engine.KismetMathLibrary.Conv_RotatorToTransform
// Size: 0x40(Inherited: 0x0) 
struct FConv_RotatorToTransform
{
	struct FRotator InRotator;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct FTransform ReturnValue;  // 0x10(0x30)

}; 
// Function Engine.KismetMathLibrary.Conv_Vector4ToQuaternion
// Size: 0x20(Inherited: 0x0) 
struct FConv_Vector4ToQuaternion
{
	struct FVector4 InVec;  // 0x0(0x10)
	struct FQuat ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.Conv_Vector4ToRotator
// Size: 0x20(Inherited: 0x0) 
struct FConv_Vector4ToRotator
{
	struct FVector4 InVec;  // 0x0(0x10)
	struct FRotator ReturnValue;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.Conv_Vector4ToVector
// Size: 0x20(Inherited: 0x0) 
struct FConv_Vector4ToVector
{
	struct FVector4 InVector4;  // 0x0(0x10)
	struct FVector ReturnValue;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.Conv_VectorToLinearColor
// Size: 0x1C(Inherited: 0x0) 
struct FConv_VectorToLinearColor
{
	struct FVector InVec;  // 0x0(0xC)
	struct FLinearColor ReturnValue;  // 0xC(0x10)

}; 
// Function Engine.KismetMathLibrary.Conv_VectorToQuaternion
// Size: 0x20(Inherited: 0x0) 
struct FConv_VectorToQuaternion
{
	struct FVector InVec;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct FQuat ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.ConvertTransformToRelative
// Size: 0x90(Inherited: 0x0) 
struct FConvertTransformToRelative
{
	struct FTransform Transform;  // 0x0(0x30)
	struct FTransform ParentTransform;  // 0x30(0x30)
	struct FTransform ReturnValue;  // 0x60(0x30)

}; 
// Function Engine.KismetMathLibrary.CrossProduct2D
// Size: 0x14(Inherited: 0x0) 
struct FCrossProduct2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D B;  // 0x8(0x8)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.KismetMathLibrary.Exp
// Size: 0x8(Inherited: 0x0) 
struct FExp
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.DateTimeFromIsoString
// Size: 0x20(Inherited: 0x0) 
struct FDateTimeFromIsoString
{
	struct FString IsoString;  // 0x0(0x10)
	struct FDateTime Result;  // 0x10(0x8)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetMathLibrary.DateTimeFromString
// Size: 0x20(Inherited: 0x0) 
struct FDateTimeFromString
{
	struct FString DateTimeString;  // 0x0(0x10)
	struct FDateTime Result;  // 0x10(0x8)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetMathLibrary.DaysInMonth
// Size: 0xC(Inherited: 0x0) 
struct FDaysInMonth
{
	int32_t Year;  // 0x0(0x4)
	int32_t Month;  // 0x4(0x4)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.DegAtan2
// Size: 0xC(Inherited: 0x0) 
struct FDegAtan2
{
	float Y;  // 0x0(0x4)
	float X;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.Multiply_ByteByte
// Size: 0x3(Inherited: 0x0) 
struct FMultiply_ByteByte
{
	char A;  // 0x0(0x1)
	char B;  // 0x1(0x1)
	char ReturnValue;  // 0x2(0x1)

}; 
// Function Engine.KismetMathLibrary.LinearColorLerp
// Size: 0x34(Inherited: 0x0) 
struct FLinearColorLerp
{
	struct FLinearColor A;  // 0x0(0x10)
	struct FLinearColor B;  // 0x10(0x10)
	float Alpha;  // 0x20(0x4)
	struct FLinearColor ReturnValue;  // 0x24(0x10)

}; 
// Function Engine.KismetMathLibrary.DegCos
// Size: 0x8(Inherited: 0x0) 
struct FDegCos
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.DegreesToRadians
// Size: 0x8(Inherited: 0x0) 
struct FDegreesToRadians
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.DistanceSquared2D
// Size: 0x14(Inherited: 0x0) 
struct FDistanceSquared2D
{
	struct FVector2D v1;  // 0x0(0x8)
	struct FVector2D v2;  // 0x8(0x8)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.KismetMathLibrary.Divide_FloatFloat
// Size: 0xC(Inherited: 0x0) 
struct FDivide_FloatFloat
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.Divide_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FDivide_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.Divide_Vector2DFloat
// Size: 0x14(Inherited: 0x0) 
struct FDivide_Vector2DFloat
{
	struct FVector2D A;  // 0x0(0x8)
	float B;  // 0x8(0x4)
	struct FVector2D ReturnValue;  // 0xC(0x8)

}; 
// Function Engine.KismetMathLibrary.DynamicWeightedMovingAverage_Float
// Size: 0x18(Inherited: 0x0) 
struct FDynamicWeightedMovingAverage_Float
{
	float CurrentSample;  // 0x0(0x4)
	float PreviousSample;  // 0x4(0x4)
	float MaxDistance;  // 0x8(0x4)
	float MinWeight;  // 0xC(0x4)
	float MaxWeight;  // 0x10(0x4)
	float ReturnValue;  // 0x14(0x4)

}; 
// Function Engine.KismetMathLibrary.DynamicWeightedMovingAverage_FRotator
// Size: 0x30(Inherited: 0x0) 
struct FDynamicWeightedMovingAverage_FRotator
{
	struct FRotator CurrentSample;  // 0x0(0xC)
	struct FRotator PreviousSample;  // 0xC(0xC)
	float MaxDistance;  // 0x18(0x4)
	float MinWeight;  // 0x1C(0x4)
	float MaxWeight;  // 0x20(0x4)
	struct FRotator ReturnValue;  // 0x24(0xC)

}; 
// Function Engine.KismetMathLibrary.LinearColor_GetMin
// Size: 0x14(Inherited: 0x0) 
struct FLinearColor_GetMin
{
	struct FLinearColor InColor;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.KismetMathLibrary.Equal_IntPointIntPoint
// Size: 0x14(Inherited: 0x0) 
struct FEqual_IntPointIntPoint
{
	struct FIntPoint A;  // 0x0(0x8)
	struct FIntPoint B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_BoolBool
// Size: 0x3(Inherited: 0x0) 
struct FEqualEqual_BoolBool
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool A : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool B : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool ReturnValue : 1;  // 0x2(0x1)

}; 
// Function Engine.KismetMathLibrary.Multiply_LinearColorLinearColor
// Size: 0x30(Inherited: 0x0) 
struct FMultiply_LinearColorLinearColor
{
	struct FLinearColor A;  // 0x0(0x10)
	struct FLinearColor B;  // 0x10(0x10)
	struct FLinearColor ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_FloatFloat
// Size: 0xC(Inherited: 0x0) 
struct FEqualEqual_FloatFloat
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.LevelStreaming.GetWorldAssetPackageFName
// Size: 0x8(Inherited: 0x0) 
struct FGetWorldAssetPackageFName
{
	struct FName ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_LinearColorLinearColor
// Size: 0x24(Inherited: 0x0) 
struct FEqualEqual_LinearColorLinearColor
{
	struct FLinearColor A;  // 0x0(0x10)
	struct FLinearColor B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[3];  // 0x21(0x3)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_MatrixMatrix
// Size: 0x90(Inherited: 0x0) 
struct FEqualEqual_MatrixMatrix
{
	struct FMatrix A;  // 0x0(0x40)
	struct FMatrix B;  // 0x40(0x40)
	float Tolerance;  // 0x80(0x4)
	char pad_132_1 : 7;  // 0x84(0x1)
	bool ReturnValue : 1;  // 0x84(0x1)
	char pad_133[11];  // 0x85(0xB)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_NameName
// Size: 0x14(Inherited: 0x0) 
struct FEqualEqual_NameName
{
	struct FName A;  // 0x0(0x8)
	struct FName B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_ObjectObject
// Size: 0x18(Inherited: 0x0) 
struct FEqualEqual_ObjectObject
{
	struct UObject* A;  // 0x0(0x8)
	struct UObject* B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_QuatQuat
// Size: 0x30(Inherited: 0x0) 
struct FEqualEqual_QuatQuat
{
	struct FQuat A;  // 0x0(0x10)
	struct FQuat B;  // 0x10(0x10)
	float Tolerance;  // 0x20(0x4)
	char pad_36_1 : 7;  // 0x24(0x1)
	bool ReturnValue : 1;  // 0x24(0x1)
	char pad_37[11];  // 0x25(0xB)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_RotatorRotator
// Size: 0x20(Inherited: 0x0) 
struct FEqualEqual_RotatorRotator
{
	struct FRotator A;  // 0x0(0xC)
	struct FRotator B;  // 0xC(0xC)
	float ErrorTolerance;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool ReturnValue : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_TransformTransform
// Size: 0x70(Inherited: 0x0) 
struct FEqualEqual_TransformTransform
{
	struct FTransform A;  // 0x0(0x30)
	struct FTransform B;  // 0x30(0x30)
	char pad_96_1 : 7;  // 0x60(0x1)
	bool ReturnValue : 1;  // 0x60(0x1)
	char pad_97[15];  // 0x61(0xF)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_Vector2DVector2D
// Size: 0x18(Inherited: 0x0) 
struct FEqualEqual_Vector2DVector2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D B;  // 0x8(0x8)
	float ErrorTolerance;  // 0x10(0x4)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.KismetMathLibrary.EqualEqual_VectorVector
// Size: 0x20(Inherited: 0x0) 
struct FEqualEqual_VectorVector
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	float ErrorTolerance;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool ReturnValue : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// Function Engine.KismetMathLibrary.EqualExactly_Vector2DVector2D
// Size: 0x14(Inherited: 0x0) 
struct FEqualExactly_Vector2DVector2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.KismetTextLibrary.AsTime_DateTime
// Size: 0x20(Inherited: 0x0) 
struct FAsTime_DateTime
{
	struct FDateTime In;  // 0x0(0x8)
	struct FText ReturnValue;  // 0x8(0x18)

}; 
// Function Engine.KismetMathLibrary.FCeil
// Size: 0x8(Inherited: 0x0) 
struct FFCeil
{
	float A;  // 0x0(0x4)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.SkyLightComponent.SetOcclusionContrast
// Size: 0x4(Inherited: 0x0) 
struct FSetOcclusionContrast
{
	float InOcclusionContrast;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.FCeil64
// Size: 0x10(Inherited: 0x0) 
struct FFCeil64
{
	float A;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	int64_t ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Multiply_IntPointInt
// Size: 0x14(Inherited: 0x0) 
struct FMultiply_IntPointInt
{
	struct FIntPoint A;  // 0x0(0x8)
	int32_t B;  // 0x8(0x4)
	struct FIntPoint ReturnValue;  // 0xC(0x8)

}; 
// Function Engine.KismetMathLibrary.FClamp
// Size: 0x10(Inherited: 0x0) 
struct FFClamp
{
	float Value;  // 0x0(0x4)
	float Min;  // 0x4(0x4)
	float Max;  // 0x8(0x4)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.FindClosestPointOnSegment
// Size: 0x30(Inherited: 0x0) 
struct FFindClosestPointOnSegment
{
	struct FVector Point;  // 0x0(0xC)
	struct FVector SegmentStart;  // 0xC(0xC)
	struct FVector SegmentEnd;  // 0x18(0xC)
	struct FVector ReturnValue;  // 0x24(0xC)

}; 
// Function Engine.SplineMeshComponent.GetStartPosition
// Size: 0xC(Inherited: 0x0) 
struct FGetStartPosition
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.FInterpTo
// Size: 0x14(Inherited: 0x0) 
struct FFInterpTo
{
	float Current;  // 0x0(0x4)
	float Target;  // 0x4(0x4)
	float DeltaTime;  // 0x8(0x4)
	float InterpSpeed;  // 0xC(0x4)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.KismetMathLibrary.FixedTurn
// Size: 0x10(Inherited: 0x0) 
struct FFixedTurn
{
	float InCurrent;  // 0x0(0x4)
	float InDesired;  // 0x4(0x4)
	float InDeltaRate;  // 0x8(0x4)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.FMin
// Size: 0xC(Inherited: 0x0) 
struct FFMin
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.FMod
// Size: 0x10(Inherited: 0x0) 
struct FFMod
{
	float Dividend;  // 0x0(0x4)
	float Divisor;  // 0x4(0x4)
	float Remainder;  // 0x8(0x4)
	int32_t ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.Fraction
// Size: 0x8(Inherited: 0x0) 
struct FFraction
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.FromMilliseconds
// Size: 0x10(Inherited: 0x0) 
struct FFromMilliseconds
{
	float Milliseconds;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FTimespan ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.FromMinutes
// Size: 0x10(Inherited: 0x0) 
struct FFromMinutes
{
	float Minutes;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FTimespan ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetTextLibrary.Conv_ObjectToText
// Size: 0x20(Inherited: 0x0) 
struct FConv_ObjectToText
{
	struct UObject* InObj;  // 0x0(0x8)
	struct FText ReturnValue;  // 0x8(0x18)

}; 
// Function Engine.KismetMathLibrary.MakeQualifiedFrameTime
// Size: 0x20(Inherited: 0x0) 
struct FMakeQualifiedFrameTime
{
	struct FFrameNumber Frame;  // 0x0(0x4)
	struct FFrameRate FrameRate;  // 0x4(0x8)
	float SubFrame;  // 0xC(0x4)
	struct FQualifiedFrameTime ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.FTrunc
// Size: 0x8(Inherited: 0x0) 
struct FFTrunc
{
	float A;  // 0x0(0x4)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.FTrunc64
// Size: 0x10(Inherited: 0x0) 
struct FFTrunc64
{
	float A;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	int64_t ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.FWrap
// Size: 0x10(Inherited: 0x0) 
struct FFWrap
{
	float Value;  // 0x0(0x4)
	float Min;  // 0x4(0x4)
	float Max;  // 0x8(0x4)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetDeterminant
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_GetDeterminant
{
	struct FMatrix M;  // 0x0(0x40)
	float ReturnValue;  // 0x40(0x4)
	char pad_68[12];  // 0x44(0xC)

}; 
// Function Engine.KismetMathLibrary.GetAxes
// Size: 0x30(Inherited: 0x0) 
struct FGetAxes
{
	struct FRotator A;  // 0x0(0xC)
	struct FVector X;  // 0xC(0xC)
	struct FVector Y;  // 0x18(0xC)
	struct FVector Z;  // 0x24(0xC)

}; 
// Function Engine.KismetMathLibrary.GetAzimuthAndElevation
// Size: 0x50(Inherited: 0x0) 
struct FGetAzimuthAndElevation
{
	struct FVector InDirection;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct FTransform ReferenceFrame;  // 0x10(0x30)
	float Azimuth;  // 0x40(0x4)
	float Elevation;  // 0x44(0x4)
	char pad_72[8];  // 0x48(0x8)

}; 
// Function Engine.KismetMathLibrary.GetDate
// Size: 0x10(Inherited: 0x0) 
struct FGetDate
{
	struct FDateTime A;  // 0x0(0x8)
	struct FDateTime ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.GetDay
// Size: 0x10(Inherited: 0x0) 
struct FGetDay
{
	struct FDateTime A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.GetDirectionUnitVector
// Size: 0x24(Inherited: 0x0) 
struct FGetDirectionUnitVector
{
	struct FVector from;  // 0x0(0xC)
	struct FVector To;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetMathLibrary.GetHour
// Size: 0x10(Inherited: 0x0) 
struct FGetHour
{
	struct FDateTime A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.GetHour12
// Size: 0x10(Inherited: 0x0) 
struct FGetHour12
{
	struct FDateTime A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.GetHours
// Size: 0x10(Inherited: 0x0) 
struct FGetHours
{
	struct FTimespan A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.Multiply_RotatorInt
// Size: 0x1C(Inherited: 0x0) 
struct FMultiply_RotatorInt
{
	struct FRotator A;  // 0x0(0xC)
	int32_t B;  // 0xC(0x4)
	struct FRotator ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.KismetMathLibrary.GetMillisecond
// Size: 0x10(Inherited: 0x0) 
struct FGetMillisecond
{
	struct FDateTime A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.StereoLayerComponent.GetQuadSize
// Size: 0x8(Inherited: 0x0) 
struct FGetQuadSize
{
	struct FVector2D ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.GetMilliseconds
// Size: 0x10(Inherited: 0x0) 
struct FGetMilliseconds
{
	struct FTimespan A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.GetMinElement
// Size: 0x10(Inherited: 0x0) 
struct FGetMinElement
{
	struct FVector A;  // 0x0(0xC)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.GetMinutes
// Size: 0x10(Inherited: 0x0) 
struct FGetMinutes
{
	struct FTimespan A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.Vector_HeadingAngle
// Size: 0x10(Inherited: 0x0) 
struct FVector_HeadingAngle
{
	struct FVector A;  // 0x0(0xC)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.GetPointDistanceToSegment
// Size: 0x28(Inherited: 0x0) 
struct FGetPointDistanceToSegment
{
	struct FVector Point;  // 0x0(0xC)
	struct FVector SegmentStart;  // 0xC(0xC)
	struct FVector SegmentEnd;  // 0x18(0xC)
	float ReturnValue;  // 0x24(0x4)

}; 
// Function Engine.KismetMathLibrary.Matrix_Identity
// Size: 0x40(Inherited: 0x0) 
struct FMatrix_Identity
{
	struct FMatrix ReturnValue;  // 0x0(0x40)

}; 
// Function Engine.KismetMathLibrary.GetSecond
// Size: 0x10(Inherited: 0x0) 
struct FGetSecond
{
	struct FDateTime A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.GetSlopeDegreeAngles
// Size: 0x2C(Inherited: 0x0) 
struct FGetSlopeDegreeAngles
{
	struct FVector MyRightYAxis;  // 0x0(0xC)
	struct FVector FloorNormal;  // 0xC(0xC)
	struct FVector UpVector;  // 0x18(0xC)
	float OutSlopePitchDegreeAngle;  // 0x24(0x4)
	float OutSlopeRollDegreeAngle;  // 0x28(0x4)

}; 
// Function Engine.KismetMathLibrary.GetTAU
// Size: 0x4(Inherited: 0x0) 
struct FGetTAU
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.Vector_ToDegrees
// Size: 0x18(Inherited: 0x0) 
struct FVector_ToDegrees
{
	struct FVector A;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetMathLibrary.GetTimeOfDay
// Size: 0x10(Inherited: 0x0) 
struct FGetTimeOfDay
{
	struct FDateTime A;  // 0x0(0x8)
	struct FTimespan ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Matrix_RemoveScaling
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_RemoveScaling
{
	struct FMatrix M;  // 0x0(0x40)
	float Tolerance;  // 0x40(0x4)
	char pad_68[12];  // 0x44(0xC)

}; 
// Function Engine.KismetMathLibrary.GetTotalHours
// Size: 0x10(Inherited: 0x0) 
struct FGetTotalHours
{
	struct FTimespan A;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.GetTotalMinutes
// Size: 0x10(Inherited: 0x0) 
struct FGetTotalMinutes
{
	struct FTimespan A;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.GetTotalSeconds
// Size: 0x10(Inherited: 0x0) 
struct FGetTotalSeconds
{
	struct FTimespan A;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.GetVectorArrayAverage
// Size: 0x20(Inherited: 0x0) 
struct FGetVectorArrayAverage
{
	struct TArray<struct FVector> Vectors;  // 0x0(0x10)
	struct FVector ReturnValue;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.GetYawPitchFromVector
// Size: 0x14(Inherited: 0x0) 
struct FGetYawPitchFromVector
{
	struct FVector InVec;  // 0x0(0xC)
	float Yaw;  // 0xC(0x4)
	float Pitch;  // 0x10(0x4)

}; 
// Function Engine.PhysicsSpringComponent.GetSpringRestingPoint
// Size: 0xC(Inherited: 0x0) 
struct FGetSpringRestingPoint
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.GetYear
// Size: 0x10(Inherited: 0x0) 
struct FGetYear
{
	struct FDateTime A;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.Greater_ByteByte
// Size: 0x3(Inherited: 0x0) 
struct FGreater_ByteByte
{
	char A;  // 0x0(0x1)
	char B;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool ReturnValue : 1;  // 0x2(0x1)

}; 
// Function Engine.KismetMathLibrary.MakeVector
// Size: 0x18(Inherited: 0x0) 
struct FMakeVector
{
	float X;  // 0x0(0x4)
	float Y;  // 0x4(0x4)
	float Z;  // 0x8(0x4)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetMathLibrary.Greater_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FGreater_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetMathLibrary.Greater_TimespanTimespan
// Size: 0x18(Inherited: 0x0) 
struct FGreater_TimespanTimespan
{
	struct FTimespan A;  // 0x0(0x8)
	struct FTimespan B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetMathLibrary.GreaterEqual_DateTimeDateTime
// Size: 0x18(Inherited: 0x0) 
struct FGreaterEqual_DateTimeDateTime
{
	struct FDateTime A;  // 0x0(0x8)
	struct FDateTime B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.TimelineComponent.SetNewTime
// Size: 0x4(Inherited: 0x0) 
struct FSetNewTime
{
	float NewTime;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.GreaterEqual_Int64Int64
// Size: 0x18(Inherited: 0x0) 
struct FGreaterEqual_Int64Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetMathLibrary.GreaterEqual_TimespanTimespan
// Size: 0x18(Inherited: 0x0) 
struct FGreaterEqual_TimespanTimespan
{
	struct FTimespan A;  // 0x0(0x8)
	struct FTimespan B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetMathLibrary.MakeRandomStream
// Size: 0xC(Inherited: 0x0) 
struct FMakeRandomStream
{
	int32_t InitialSeed;  // 0x0(0x4)
	struct FRandomStream ReturnValue;  // 0x4(0x8)

}; 
// Function Engine.KismetMathLibrary.GridSnap_Float
// Size: 0xC(Inherited: 0x0) 
struct FGridSnap_Float
{
	float Location;  // 0x0(0x4)
	float GridSize;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.HSVToRGB
// Size: 0x20(Inherited: 0x0) 
struct FHSVToRGB
{
	float H;  // 0x0(0x4)
	float S;  // 0x4(0x4)
	float V;  // 0x8(0x4)
	float A;  // 0xC(0x4)
	struct FLinearColor ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.Hypotenuse
// Size: 0xC(Inherited: 0x0) 
struct FHypotenuse
{
	float Width;  // 0x0(0x4)
	float Height;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.InRange_Int64Int64
// Size: 0x20(Inherited: 0x0) 
struct FInRange_Int64Int64
{
	int64_t Value;  // 0x0(0x8)
	int64_t Min;  // 0x8(0x8)
	int64_t Max;  // 0x10(0x8)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool InclusiveMin : 1;  // 0x18(0x1)
	char pad_25_1 : 7;  // 0x19(0x1)
	bool InclusiveMax : 1;  // 0x19(0x1)
	char pad_26_1 : 7;  // 0x1A(0x1)
	bool ReturnValue : 1;  // 0x1A(0x1)
	char pad_27[5];  // 0x1B(0x5)

}; 
// Function Engine.KismetMathLibrary.IntPoint_Right
// Size: 0x8(Inherited: 0x0) 
struct FIntPoint_Right
{
	struct FIntPoint ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.LevelStreamingDynamic.LoadLevelInstanceBySoftObjectPtr
// Size: 0x68(Inherited: 0x0) 
struct FLoadLevelInstanceBySoftObjectPtr
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct TSoftObjectPtr<UWorld> Level;  // 0x8(0x28)
	struct FVector Location;  // 0x30(0xC)
	struct FRotator Rotation;  // 0x3C(0xC)
	char pad_72_1 : 7;  // 0x48(0x1)
	bool bOutSuccess : 1;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	struct FString OptionalLevelNameOverride;  // 0x50(0x10)
	struct ULevelStreamingDynamic* ReturnValue;  // 0x60(0x8)

}; 
// Function Engine.KismetMathLibrary.InverseTransformDirection
// Size: 0x50(Inherited: 0x0) 
struct FInverseTransformDirection
{
	struct FTransform T;  // 0x0(0x30)
	struct FVector Direction;  // 0x30(0xC)
	struct FVector ReturnValue;  // 0x3C(0xC)
	char pad_72[8];  // 0x48(0x8)

}; 
// Function Engine.KismetMathLibrary.InverseTransformLocation
// Size: 0x50(Inherited: 0x0) 
struct FInverseTransformLocation
{
	struct FTransform T;  // 0x0(0x30)
	struct FVector Location;  // 0x30(0xC)
	struct FVector ReturnValue;  // 0x3C(0xC)
	char pad_72[8];  // 0x48(0x8)

}; 
// Function Engine.KismetMathLibrary.InverseTransformRotation
// Size: 0x50(Inherited: 0x0) 
struct FInverseTransformRotation
{
	struct FTransform T;  // 0x0(0x30)
	struct FRotator Rotation;  // 0x30(0xC)
	struct FRotator ReturnValue;  // 0x3C(0xC)
	char pad_72[8];  // 0x48(0x8)

}; 
// Function Engine.KismetMathLibrary.InvertTransform
// Size: 0x60(Inherited: 0x0) 
struct FInvertTransform
{
	struct FTransform T;  // 0x0(0x30)
	struct FTransform ReturnValue;  // 0x30(0x30)

}; 
// Function Engine.KismetMathLibrary.IsAfternoon
// Size: 0x10(Inherited: 0x0) 
struct FIsAfternoon
{
	struct FDateTime A;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.KismetMathLibrary.IsNearlyZero2D
// Size: 0x10(Inherited: 0x0) 
struct FIsNearlyZero2D
{
	struct FVector2D A;  // 0x0(0x8)
	float Tolerance;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool ReturnValue : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.KismetMathLibrary.IsPointInBox
// Size: 0x28(Inherited: 0x0) 
struct FIsPointInBox
{
	struct FVector Point;  // 0x0(0xC)
	struct FVector BoxOrigin;  // 0xC(0xC)
	struct FVector BoxExtent;  // 0x18(0xC)
	char pad_36_1 : 7;  // 0x24(0x1)
	bool ReturnValue : 1;  // 0x24(0x1)
	char pad_37[3];  // 0x25(0x3)

}; 
// Function Engine.KismetMathLibrary.Lerp
// Size: 0x10(Inherited: 0x0) 
struct FLerp
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	float Alpha;  // 0x8(0x4)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.Less_ByteByte
// Size: 0x3(Inherited: 0x0) 
struct FLess_ByteByte
{
	char A;  // 0x0(0x1)
	char B;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool ReturnValue : 1;  // 0x2(0x1)

}; 
// Function Engine.KismetMathLibrary.Quat_VectorUp
// Size: 0x20(Inherited: 0x0) 
struct FQuat_VectorUp
{
	struct FQuat Q;  // 0x0(0x10)
	struct FVector ReturnValue;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.Less_DateTimeDateTime
// Size: 0x18(Inherited: 0x0) 
struct FLess_DateTimeDateTime
{
	struct FDateTime A;  // 0x0(0x8)
	struct FDateTime B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetMathLibrary.Less_FloatFloat
// Size: 0xC(Inherited: 0x0) 
struct FLess_FloatFloat
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetMathLibrary.Less_Int64Int64
// Size: 0x18(Inherited: 0x0) 
struct FLess_Int64Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetMathLibrary.LessEqual_TimespanTimespan
// Size: 0x18(Inherited: 0x0) 
struct FLessEqual_TimespanTimespan
{
	struct FTimespan A;  // 0x0(0x8)
	struct FTimespan B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetMathLibrary.LessLess_VectorRotator
// Size: 0x24(Inherited: 0x0) 
struct FLessLess_VectorRotator
{
	struct FVector A;  // 0x0(0xC)
	struct FRotator B;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetMathLibrary.LinearColor_Black
// Size: 0x10(Inherited: 0x0) 
struct FLinearColor_Black
{
	struct FLinearColor ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.LinearColor_Blue
// Size: 0x10(Inherited: 0x0) 
struct FLinearColor_Blue
{
	struct FLinearColor ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.LinearColor_Desaturated
// Size: 0x24(Inherited: 0x0) 
struct FLinearColor_Desaturated
{
	struct FLinearColor InColor;  // 0x0(0x10)
	float InDesaturation;  // 0x10(0x4)
	struct FLinearColor ReturnValue;  // 0x14(0x10)

}; 
// Function Engine.KismetMathLibrary.LinearColor_Distance
// Size: 0x24(Inherited: 0x0) 
struct FLinearColor_Distance
{
	struct FLinearColor C1;  // 0x0(0x10)
	struct FLinearColor C2;  // 0x10(0x10)
	float ReturnValue;  // 0x20(0x4)

}; 
// Function Engine.KismetMathLibrary.LinearColor_GetMax
// Size: 0x14(Inherited: 0x0) 
struct FLinearColor_GetMax
{
	struct FLinearColor InColor;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.KismetMathLibrary.LinearColor_Gray
// Size: 0x10(Inherited: 0x0) 
struct FLinearColor_Gray
{
	struct FLinearColor ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.LinearColor_Quantize
// Size: 0x14(Inherited: 0x0) 
struct FLinearColor_Quantize
{
	struct FLinearColor InColor;  // 0x0(0x10)
	struct FColor ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.KismetMathLibrary.LinearColor_Green
// Size: 0x10(Inherited: 0x0) 
struct FLinearColor_Green
{
	struct FLinearColor ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.LinePlaneIntersection_OriginNormal
// Size: 0x44(Inherited: 0x0) 
struct FLinePlaneIntersection_OriginNormal
{
	struct FVector LineStart;  // 0x0(0xC)
	struct FVector LineEnd;  // 0xC(0xC)
	struct FVector PlaneOrigin;  // 0x18(0xC)
	struct FVector PlaneNormal;  // 0x24(0xC)
	float T;  // 0x30(0x4)
	struct FVector Intersection;  // 0x34(0xC)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool ReturnValue : 1;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)

}; 
// Function Engine.KismetMathLibrary.LinearColor_IsNearEqual
// Size: 0x28(Inherited: 0x0) 
struct FLinearColor_IsNearEqual
{
	struct FLinearColor A;  // 0x0(0x10)
	struct FLinearColor B;  // 0x10(0x10)
	float Tolerance;  // 0x20(0x4)
	char pad_36_1 : 7;  // 0x24(0x1)
	bool ReturnValue : 1;  // 0x24(0x1)
	char pad_37[3];  // 0x25(0x3)

}; 
// Function Engine.KismetMathLibrary.LinearColor_Red
// Size: 0x10(Inherited: 0x0) 
struct FLinearColor_Red
{
	struct FLinearColor ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.RandomFloatFromStream
// Size: 0xC(Inherited: 0x0) 
struct FRandomFloatFromStream
{
	struct FRandomStream Stream;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.LinearColor_SetFromSRGB
// Size: 0x14(Inherited: 0x0) 
struct FLinearColor_SetFromSRGB
{
	struct FLinearColor InOutColor;  // 0x0(0x10)
	struct FColor InSRGB;  // 0x10(0x4)

}; 
// Function Engine.KismetMathLibrary.LinearColor_SetRandomHue
// Size: 0x10(Inherited: 0x0) 
struct FLinearColor_SetRandomHue
{
	struct FLinearColor InOutColor;  // 0x0(0x10)

}; 
// Function Engine.SplineMeshComponent.GetEndScale
// Size: 0x8(Inherited: 0x0) 
struct FGetEndScale
{
	struct FVector2D ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.LinearColor_SetRGBA
// Size: 0x20(Inherited: 0x0) 
struct FLinearColor_SetRGBA
{
	struct FLinearColor InOutColor;  // 0x0(0x10)
	float R;  // 0x10(0x4)
	float G;  // 0x14(0x4)
	float B;  // 0x18(0x4)
	float A;  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.Loge
// Size: 0x8(Inherited: 0x0) 
struct FLoge
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.MakeBox
// Size: 0x34(Inherited: 0x0) 
struct FMakeBox
{
	struct FVector Min;  // 0x0(0xC)
	struct FVector Max;  // 0xC(0xC)
	struct FBox ReturnValue;  // 0x18(0x1C)

}; 
// Function Engine.KismetMathLibrary.MakeBox2D
// Size: 0x24(Inherited: 0x0) 
struct FMakeBox2D
{
	struct FVector2D Min;  // 0x0(0x8)
	struct FVector2D Max;  // 0x8(0x8)
	struct FBox2D ReturnValue;  // 0x10(0x14)

}; 
// Function Engine.KismetMathLibrary.MakeColor
// Size: 0x20(Inherited: 0x0) 
struct FMakeColor
{
	float R;  // 0x0(0x4)
	float G;  // 0x4(0x4)
	float B;  // 0x8(0x4)
	float A;  // 0xC(0x4)
	struct FLinearColor ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.MakeFrameRate
// Size: 0x10(Inherited: 0x0) 
struct FMakeFrameRate
{
	int32_t Numerator;  // 0x0(0x4)
	int32_t Denominator;  // 0x4(0x4)
	struct FFrameRate ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.MakeRelativeTransform
// Size: 0x90(Inherited: 0x0) 
struct FMakeRelativeTransform
{
	struct FTransform A;  // 0x0(0x30)
	struct FTransform RelativeTo;  // 0x30(0x30)
	struct FTransform ReturnValue;  // 0x60(0x30)

}; 
// Function Engine.KismetMathLibrary.MakeRotationFromAxes
// Size: 0x30(Inherited: 0x0) 
struct FMakeRotationFromAxes
{
	struct FVector Forward;  // 0x0(0xC)
	struct FVector Right;  // 0xC(0xC)
	struct FVector Up;  // 0x18(0xC)
	struct FRotator ReturnValue;  // 0x24(0xC)

}; 
// Function Engine.KismetMathLibrary.MakeRotator
// Size: 0x18(Inherited: 0x0) 
struct FMakeRotator
{
	float Roll;  // 0x0(0x4)
	float Pitch;  // 0x4(0x4)
	float Yaw;  // 0x8(0x4)
	struct FRotator ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.SkyAtmosphereComponent.SetRayleighScattering
// Size: 0x10(Inherited: 0x0) 
struct FSetRayleighScattering
{
	struct FLinearColor NewValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.MakeRotFromX
// Size: 0x18(Inherited: 0x0) 
struct FMakeRotFromX
{
	struct FVector X;  // 0x0(0xC)
	struct FRotator ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetMathLibrary.MakeRotFromXZ
// Size: 0x24(Inherited: 0x0) 
struct FMakeRotFromXZ
{
	struct FVector X;  // 0x0(0xC)
	struct FVector Z;  // 0xC(0xC)
	struct FRotator ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetMathLibrary.MakeRotFromYX
// Size: 0x24(Inherited: 0x0) 
struct FMakeRotFromYX
{
	struct FVector Y;  // 0x0(0xC)
	struct FVector X;  // 0xC(0xC)
	struct FRotator ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetMathLibrary.MakeRotFromZ
// Size: 0x18(Inherited: 0x0) 
struct FMakeRotFromZ
{
	struct FVector Z;  // 0x0(0xC)
	struct FRotator ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetMathLibrary.MakeRotFromZX
// Size: 0x24(Inherited: 0x0) 
struct FMakeRotFromZX
{
	struct FVector Z;  // 0x0(0xC)
	struct FVector X;  // 0xC(0xC)
	struct FRotator ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetMathLibrary.MakeTimespan2
// Size: 0x20(Inherited: 0x0) 
struct FMakeTimespan2
{
	int32_t Days;  // 0x0(0x4)
	int32_t Hours;  // 0x4(0x4)
	int32_t Minutes;  // 0x8(0x4)
	int32_t Seconds;  // 0xC(0x4)
	int32_t FractionNano;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct FTimespan ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.KismetMathLibrary.MakeVector4
// Size: 0x20(Inherited: 0x0) 
struct FMakeVector4
{
	float X;  // 0x0(0x4)
	float Y;  // 0x4(0x4)
	float Z;  // 0x8(0x4)
	float W;  // 0xC(0x4)
	struct FVector4 ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.MapRangeClamped
// Size: 0x18(Inherited: 0x0) 
struct FMapRangeClamped
{
	float Value;  // 0x0(0x4)
	float InRangeA;  // 0x4(0x4)
	float InRangeB;  // 0x8(0x4)
	float OutRangeA;  // 0xC(0x4)
	float OutRangeB;  // 0x10(0x4)
	float ReturnValue;  // 0x14(0x4)

}; 
// Function Engine.KismetMathLibrary.MapRangeUnclamped
// Size: 0x18(Inherited: 0x0) 
struct FMapRangeUnclamped
{
	float Value;  // 0x0(0x4)
	float InRangeA;  // 0x4(0x4)
	float InRangeB;  // 0x8(0x4)
	float OutRangeA;  // 0xC(0x4)
	float OutRangeB;  // 0x10(0x4)
	float ReturnValue;  // 0x14(0x4)

}; 
// Function Engine.KismetMathLibrary.Matrix_ConcatenateTranslation
// Size: 0x90(Inherited: 0x0) 
struct FMatrix_ConcatenateTranslation
{
	struct FMatrix M;  // 0x0(0x40)
	struct FVector Translation;  // 0x40(0xC)
	char pad_76[4];  // 0x4C(0x4)
	struct FMatrix ReturnValue;  // 0x50(0x40)

}; 
// Function Engine.LevelScriptActor.RemoteEvent
// Size: 0xC(Inherited: 0x0) 
struct FRemoteEvent
{
	struct FName EventName;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetMathLibrary.RandomUnitVectorInConeInDegreesFromStream
// Size: 0x24(Inherited: 0x0) 
struct FRandomUnitVectorInConeInDegreesFromStream
{
	struct FVector ConeDir;  // 0x0(0xC)
	float ConeHalfAngleInDegrees;  // 0xC(0x4)
	struct FRandomStream Stream;  // 0x10(0x8)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetMathLibrary.Matrix_ContainsNaN
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_ContainsNaN
{
	struct FMatrix M;  // 0x0(0x40)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool ReturnValue : 1;  // 0x40(0x1)
	char pad_65[15];  // 0x41(0xF)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetFrustumFarPlane
// Size: 0x60(Inherited: 0x0) 
struct FMatrix_GetFrustumFarPlane
{
	struct FMatrix M;  // 0x0(0x40)
	struct FPlane OutPlane;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool ReturnValue : 1;  // 0x50(0x1)
	char pad_81[15];  // 0x51(0xF)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetFrustumNearPlane
// Size: 0x60(Inherited: 0x0) 
struct FMatrix_GetFrustumNearPlane
{
	struct FMatrix M;  // 0x0(0x40)
	struct FPlane OutPlane;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool ReturnValue : 1;  // 0x50(0x1)
	char pad_81[15];  // 0x51(0xF)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetFrustumTopPlane
// Size: 0x60(Inherited: 0x0) 
struct FMatrix_GetFrustumTopPlane
{
	struct FMatrix M;  // 0x0(0x40)
	struct FPlane OutPlane;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool ReturnValue : 1;  // 0x50(0x1)
	char pad_81[15];  // 0x51(0xF)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetMatrixWithoutScale
// Size: 0x90(Inherited: 0x0) 
struct FMatrix_GetMatrixWithoutScale
{
	struct FMatrix M;  // 0x0(0x40)
	float Tolerance;  // 0x40(0x4)
	char pad_68[12];  // 0x44(0xC)
	struct FMatrix ReturnValue;  // 0x50(0x40)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetOrigin
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_GetOrigin
{
	struct FMatrix InMatrix;  // 0x0(0x40)
	struct FVector ReturnValue;  // 0x40(0xC)
	char pad_76[4];  // 0x4C(0x4)

}; 
// Function Engine.SkeletalMesh.GetNodeMappingData
// Size: 0x10(Inherited: 0x0) 
struct FGetNodeMappingData
{
	struct TArray<struct UNodeMappingContainer*> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetRotDeterminant
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_GetRotDeterminant
{
	struct FMatrix M;  // 0x0(0x40)
	float ReturnValue;  // 0x40(0x4)
	char pad_68[12];  // 0x44(0xC)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetScaledAxes
// Size: 0x70(Inherited: 0x0) 
struct FMatrix_GetScaledAxes
{
	struct FMatrix M;  // 0x0(0x40)
	struct FVector X;  // 0x40(0xC)
	struct FVector Y;  // 0x4C(0xC)
	struct FVector Z;  // 0x58(0xC)
	char pad_100[12];  // 0x64(0xC)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetTransposeAdjoint
// Size: 0x80(Inherited: 0x0) 
struct FMatrix_GetTransposeAdjoint
{
	struct FMatrix M;  // 0x0(0x40)
	struct FMatrix ReturnValue;  // 0x40(0x40)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetTransposed
// Size: 0x80(Inherited: 0x0) 
struct FMatrix_GetTransposed
{
	struct FMatrix M;  // 0x0(0x40)
	struct FMatrix ReturnValue;  // 0x40(0x40)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetUnitAxes
// Size: 0x70(Inherited: 0x0) 
struct FMatrix_GetUnitAxes
{
	struct FMatrix M;  // 0x0(0x40)
	struct FVector X;  // 0x40(0xC)
	struct FVector Y;  // 0x4C(0xC)
	struct FVector Z;  // 0x58(0xC)
	char pad_100[12];  // 0x64(0xC)

}; 
// Function Engine.KismetMathLibrary.Matrix_GetUnitAxis
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_GetUnitAxis
{
	struct FMatrix M;  // 0x0(0x40)
	char EAxis Axis;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)
	struct FVector ReturnValue;  // 0x44(0xC)

}; 
// Function Engine.KismetMathLibrary.Matrix_Mirror
// Size: 0x90(Inherited: 0x0) 
struct FMatrix_Mirror
{
	struct FMatrix M;  // 0x0(0x40)
	char EAxis MirrorAxis;  // 0x40(0x1)
	char EAxis FlipAxis;  // 0x41(0x1)
	char pad_66[14];  // 0x42(0xE)
	struct FMatrix ReturnValue;  // 0x50(0x40)

}; 
// Function Engine.KismetMathLibrary.Matrix_SetAxis
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_SetAxis
{
	struct FMatrix M;  // 0x0(0x40)
	char EAxis Axis;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)
	struct FVector AxisVector;  // 0x44(0xC)

}; 
// Function Engine.MaterialInstanceDynamic.K2_GetVectorParameterValueByInfo
// Size: 0x20(Inherited: 0x0) 
struct FK2_GetVectorParameterValueByInfo
{
	struct FMaterialParameterInfo ParameterInfo;  // 0x0(0x10)
	struct FLinearColor ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.Matrix_SetColumn
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_SetColumn
{
	struct FMatrix M;  // 0x0(0x40)
	char EMatrixColumns column;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)
	struct FVector Value;  // 0x44(0xC)

}; 
// Function Engine.KismetMathLibrary.Matrix_SetOrigin
// Size: 0x50(Inherited: 0x0) 
struct FMatrix_SetOrigin
{
	struct FMatrix M;  // 0x0(0x40)
	struct FVector NewOrigin;  // 0x40(0xC)
	char pad_76[4];  // 0x4C(0x4)

}; 
// Function Engine.SplineMeshComponent.SetEndRoll
// Size: 0x8(Inherited: 0x0) 
struct FSetEndRoll
{
	float EndRoll;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bUpdateMesh : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.KismetStringLibrary.Conv_ObjectToString
// Size: 0x18(Inherited: 0x0) 
struct FConv_ObjectToString
{
	struct UObject* InObj;  // 0x0(0x8)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetMathLibrary.MinimumAreaRectangle
// Size: 0x48(Inherited: 0x0) 
struct FMinimumAreaRectangle
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct TArray<struct FVector> InVerts;  // 0x8(0x10)
	struct FVector SampleSurfaceNormal;  // 0x18(0xC)
	struct FVector OutRectCenter;  // 0x24(0xC)
	struct FRotator OutRectRotation;  // 0x30(0xC)
	float OutSideLengthX;  // 0x3C(0x4)
	float OutSideLengthY;  // 0x40(0x4)
	char pad_68_1 : 7;  // 0x44(0x1)
	bool bDebugDraw : 1;  // 0x44(0x1)
	char pad_69[3];  // 0x45(0x3)

}; 
// Function Engine.KismetMathLibrary.MinOfByteArray
// Size: 0x18(Inherited: 0x0) 
struct FMinOfByteArray
{
	struct TArray<char> ByteArray;  // 0x0(0x10)
	int32_t IndexOfMinValue;  // 0x10(0x4)
	char MinValue;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.KismetMathLibrary.MinOfIntArray
// Size: 0x18(Inherited: 0x0) 
struct FMinOfIntArray
{
	struct TArray<int32_t> IntArray;  // 0x0(0x10)
	int32_t IndexOfMinValue;  // 0x10(0x4)
	int32_t MinValue;  // 0x14(0x4)

}; 
// Function Engine.KismetMathLibrary.Multiply_IntFloat
// Size: 0xC(Inherited: 0x0) 
struct FMultiply_IntFloat
{
	int32_t A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.Multiply_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FMultiply_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.Multiply_IntPointIntPoint
// Size: 0x18(Inherited: 0x0) 
struct FMultiply_IntPointIntPoint
{
	struct FIntPoint A;  // 0x0(0x8)
	struct FIntPoint B;  // 0x8(0x8)
	struct FIntPoint ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.Multiply_LinearColorFloat
// Size: 0x24(Inherited: 0x0) 
struct FMultiply_LinearColorFloat
{
	struct FLinearColor A;  // 0x0(0x10)
	float B;  // 0x10(0x4)
	struct FLinearColor ReturnValue;  // 0x14(0x10)

}; 
// Function Engine.KismetMathLibrary.Multiply_MatrixFloat
// Size: 0x90(Inherited: 0x0) 
struct FMultiply_MatrixFloat
{
	struct FMatrix A;  // 0x0(0x40)
	float B;  // 0x40(0x4)
	char pad_68[12];  // 0x44(0xC)
	struct FMatrix ReturnValue;  // 0x50(0x40)

}; 
// Function Engine.KismetMathLibrary.Multiply_QuatQuat
// Size: 0x30(Inherited: 0x0) 
struct FMultiply_QuatQuat
{
	struct FQuat A;  // 0x0(0x10)
	struct FQuat B;  // 0x10(0x10)
	struct FQuat ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.KismetMathLibrary.Quat_MakeFromEuler
// Size: 0x20(Inherited: 0x0) 
struct FQuat_MakeFromEuler
{
	struct FVector Euler;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct FQuat ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.Multiply_Vector2DVector2D
// Size: 0x18(Inherited: 0x0) 
struct FMultiply_Vector2DVector2D
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector2D B;  // 0x8(0x8)
	struct FVector2D ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.Multiply_Vector4Vector4
// Size: 0x30(Inherited: 0x0) 
struct FMultiply_Vector4Vector4
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 B;  // 0x10(0x10)
	struct FVector4 ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.KismetMathLibrary.Multiply_VectorFloat
// Size: 0x1C(Inherited: 0x0) 
struct FMultiply_VectorFloat
{
	struct FVector A;  // 0x0(0xC)
	float B;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.SplineMeshComponent.GetForwardAxis
// Size: 0x1(Inherited: 0x0) 
struct FGetForwardAxis
{
	char ESplineMeshAxis ReturnValue;  // 0x0(0x1)

}; 
// Function Engine.KismetTextLibrary.AsTimeZoneDateTime_DateTime
// Size: 0x30(Inherited: 0x0) 
struct FAsTimeZoneDateTime_DateTime
{
	struct FDateTime InDateTime;  // 0x0(0x8)
	struct FString InTimeZone;  // 0x8(0x10)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.KismetMathLibrary.NormalizeAxis
// Size: 0x8(Inherited: 0x0) 
struct FNormalizeAxis
{
	float angle;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.NormalizeToRange
// Size: 0x10(Inherited: 0x0) 
struct FNormalizeToRange
{
	float Value;  // 0x0(0x4)
	float RangeMin;  // 0x4(0x4)
	float RangeMax;  // 0x8(0x4)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.NormalSafe2D
// Size: 0x14(Inherited: 0x0) 
struct FNormalSafe2D
{
	struct FVector2D A;  // 0x0(0x8)
	float Tolerance;  // 0x8(0x4)
	struct FVector2D ReturnValue;  // 0xC(0x8)

}; 
// Function Engine.PhysicsConstraintComponent.SetConstraintReferencePosition
// Size: 0x10(Inherited: 0x0) 
struct FSetConstraintReferencePosition
{
	char EConstraintFrame Frame;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FVector RefPosition;  // 0x4(0xC)

}; 
// Function Engine.KismetMathLibrary.Not_Int64
// Size: 0x10(Inherited: 0x0) 
struct FNot_Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.KismetMathLibrary.Not_PreBool
// Size: 0x2(Inherited: 0x0) 
struct FNot_PreBool
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool A : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool ReturnValue : 1;  // 0x1(0x1)

}; 
// Function Engine.KismetMathLibrary.NotEqual_FloatFloat
// Size: 0xC(Inherited: 0x0) 
struct FNotEqual_FloatFloat
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetMathLibrary.NotEqual_Int64Int64
// Size: 0x18(Inherited: 0x0) 
struct FNotEqual_Int64Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetMathLibrary.NotEqual_IntPointIntPoint
// Size: 0x14(Inherited: 0x0) 
struct FNotEqual_IntPointIntPoint
{
	struct FIntPoint A;  // 0x0(0x8)
	struct FIntPoint B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.KismetRenderingLibrary.RenderTargetCreateStaticTextureCubeEditorOnly
// Size: 0x28(Inherited: 0x0) 
struct FRenderTargetCreateStaticTextureCubeEditorOnly
{
	struct UTextureRenderTargetCube* RenderTarget;  // 0x0(0x8)
	struct FString Name;  // 0x8(0x10)
	char TextureCompressionSettings CompressionSettings;  // 0x18(0x1)
	char TextureMipGenSettings MipSettings;  // 0x19(0x1)
	char pad_26[6];  // 0x1A(0x6)
	struct UTextureCube* ReturnValue;  // 0x20(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector_Right
// Size: 0xC(Inherited: 0x0) 
struct FVector_Right
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.NotEqual_LinearColorLinearColor
// Size: 0x24(Inherited: 0x0) 
struct FNotEqual_LinearColorLinearColor
{
	struct FLinearColor A;  // 0x0(0x10)
	struct FLinearColor B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[3];  // 0x21(0x3)

}; 
// Function Engine.KismetMathLibrary.NotEqual_MatrixMatrix
// Size: 0x90(Inherited: 0x0) 
struct FNotEqual_MatrixMatrix
{
	struct FMatrix A;  // 0x0(0x40)
	struct FMatrix B;  // 0x40(0x40)
	float Tolerance;  // 0x80(0x4)
	char pad_132_1 : 7;  // 0x84(0x1)
	bool ReturnValue : 1;  // 0x84(0x1)
	char pad_133[11];  // 0x85(0xB)

}; 
// Function Engine.KismetMathLibrary.NotEqual_ObjectObject
// Size: 0x18(Inherited: 0x0) 
struct FNotEqual_ObjectObject
{
	struct UObject* A;  // 0x0(0x8)
	struct UObject* B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetMathLibrary.NotEqual_QuatQuat
// Size: 0x30(Inherited: 0x0) 
struct FNotEqual_QuatQuat
{
	struct FQuat A;  // 0x0(0x10)
	struct FQuat B;  // 0x10(0x10)
	float ErrorTolerance;  // 0x20(0x4)
	char pad_36_1 : 7;  // 0x24(0x1)
	bool ReturnValue : 1;  // 0x24(0x1)
	char pad_37[11];  // 0x25(0xB)

}; 
// Function Engine.KismetMathLibrary.NotEqual_RotatorRotator
// Size: 0x20(Inherited: 0x0) 
struct FNotEqual_RotatorRotator
{
	struct FRotator A;  // 0x0(0xC)
	struct FRotator B;  // 0xC(0xC)
	float ErrorTolerance;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool ReturnValue : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// Function Engine.KismetMathLibrary.NotEqual_TimespanTimespan
// Size: 0x18(Inherited: 0x0) 
struct FNotEqual_TimespanTimespan
{
	struct FTimespan A;  // 0x0(0x8)
	struct FTimespan B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetMathLibrary.NotEqual_Vector4Vector4
// Size: 0x30(Inherited: 0x0) 
struct FNotEqual_Vector4Vector4
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 B;  // 0x10(0x10)
	float ErrorTolerance;  // 0x20(0x4)
	char pad_36_1 : 7;  // 0x24(0x1)
	bool ReturnValue : 1;  // 0x24(0x1)
	char pad_37[11];  // 0x25(0xB)

}; 
// Function Engine.KismetMathLibrary.NotEqual_VectorVector
// Size: 0x20(Inherited: 0x0) 
struct FNotEqual_VectorVector
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	float ErrorTolerance;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool ReturnValue : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// Function Engine.KismetMathLibrary.NotEqualExactly_Vector4Vector4
// Size: 0x30(Inherited: 0x0) 
struct FNotEqualExactly_Vector4Vector4
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[15];  // 0x21(0xF)

}; 
// Function Engine.KismetMathLibrary.Now
// Size: 0x8(Inherited: 0x0) 
struct FNow
{
	struct FDateTime ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.Or_Int64Int64
// Size: 0x18(Inherited: 0x0) 
struct FOr_Int64Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	int64_t ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.ViewportStatsSubsystem.RemoveDisplayDelegate
// Size: 0x4(Inherited: 0x0) 
struct FRemoveDisplayDelegate
{
	int32_t IndexToRemove;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.ProjectPointOnToPlane
// Size: 0x30(Inherited: 0x0) 
struct FProjectPointOnToPlane
{
	struct FVector Point;  // 0x0(0xC)
	struct FVector PlaneBase;  // 0xC(0xC)
	struct FVector PlaneNormal;  // 0x18(0xC)
	struct FVector ReturnValue;  // 0x24(0xC)

}; 
// Function Engine.KismetMathLibrary.ProjectVectorOnToPlane
// Size: 0x24(Inherited: 0x0) 
struct FProjectVectorOnToPlane
{
	struct FVector V;  // 0x0(0xC)
	struct FVector PlaneNormal;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetMathLibrary.ProjectVectorOnToVector
// Size: 0x24(Inherited: 0x0) 
struct FProjectVectorOnToVector
{
	struct FVector V;  // 0x0(0xC)
	struct FVector Target;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetMathLibrary.Quat_AngularDistance
// Size: 0x30(Inherited: 0x0) 
struct FQuat_AngularDistance
{
	struct FQuat A;  // 0x0(0x10)
	struct FQuat B;  // 0x10(0x10)
	float ReturnValue;  // 0x20(0x4)
	char pad_36[12];  // 0x24(0xC)

}; 
// Function Engine.KismetMathLibrary.Quat_EnforceShortestArcWith
// Size: 0x20(Inherited: 0x0) 
struct FQuat_EnforceShortestArcWith
{
	struct FQuat A;  // 0x0(0x10)
	struct FQuat B;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.Quat_Euler
// Size: 0x20(Inherited: 0x0) 
struct FQuat_Euler
{
	struct FQuat Q;  // 0x0(0x10)
	struct FVector ReturnValue;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.SplineMeshComponent.SetStartRoll
// Size: 0x8(Inherited: 0x0) 
struct FSetStartRoll
{
	float StartRoll;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bUpdateMesh : 1;  // 0x4(0x1)
	char pad_5[3];  // 0x5(0x3)

}; 
// Function Engine.KismetMathLibrary.Quat_Exp
// Size: 0x20(Inherited: 0x0) 
struct FQuat_Exp
{
	struct FQuat Q;  // 0x0(0x10)
	struct FQuat ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.Quat_GetAngle
// Size: 0x20(Inherited: 0x0) 
struct FQuat_GetAngle
{
	struct FQuat Q;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)
	char pad_20[12];  // 0x14(0xC)

}; 
// Function Engine.KismetMathLibrary.Quat_GetAxisX
// Size: 0x20(Inherited: 0x0) 
struct FQuat_GetAxisX
{
	struct FQuat Q;  // 0x0(0x10)
	struct FVector ReturnValue;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.Quat_GetAxisY
// Size: 0x20(Inherited: 0x0) 
struct FQuat_GetAxisY
{
	struct FQuat Q;  // 0x0(0x10)
	struct FVector ReturnValue;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.Quat_GetRotationAxis
// Size: 0x20(Inherited: 0x0) 
struct FQuat_GetRotationAxis
{
	struct FQuat Q;  // 0x0(0x10)
	struct FVector ReturnValue;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.Quat_IsFinite
// Size: 0x20(Inherited: 0x0) 
struct FQuat_IsFinite
{
	struct FQuat Q;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[15];  // 0x11(0xF)

}; 
// Function Engine.KismetMathLibrary.Quat_IsNonFinite
// Size: 0x20(Inherited: 0x0) 
struct FQuat_IsNonFinite
{
	struct FQuat Q;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[15];  // 0x11(0xF)

}; 
// Function Engine.KismetMathLibrary.Quat_Log
// Size: 0x20(Inherited: 0x0) 
struct FQuat_Log
{
	struct FQuat Q;  // 0x0(0x10)
	struct FQuat ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.Quat_Normalize
// Size: 0x20(Inherited: 0x0) 
struct FQuat_Normalize
{
	struct FQuat Q;  // 0x0(0x10)
	float Tolerance;  // 0x10(0x4)
	char pad_20[12];  // 0x14(0xC)

}; 
// Function Engine.KismetMathLibrary.Quat_RotateVector
// Size: 0x30(Inherited: 0x0) 
struct FQuat_RotateVector
{
	struct FQuat Q;  // 0x0(0x10)
	struct FVector V;  // 0x10(0xC)
	struct FVector ReturnValue;  // 0x1C(0xC)
	char pad_40[8];  // 0x28(0x8)

}; 
// Function Engine.KismetMathLibrary.Quat_SizeSquared
// Size: 0x20(Inherited: 0x0) 
struct FQuat_SizeSquared
{
	struct FQuat Q;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)
	char pad_20[12];  // 0x14(0xC)

}; 
// Function Engine.KismetMathLibrary.Quat_VectorForward
// Size: 0x20(Inherited: 0x0) 
struct FQuat_VectorForward
{
	struct FQuat Q;  // 0x0(0x10)
	struct FVector ReturnValue;  // 0x10(0xC)
	char pad_28[4];  // 0x1C(0x4)

}; 
// Function Engine.KismetMathLibrary.RandomBoolFromStream
// Size: 0xC(Inherited: 0x0) 
struct FRandomBoolFromStream
{
	struct FRandomStream Stream;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetMathLibrary.RandomFloat
// Size: 0x4(Inherited: 0x0) 
struct FRandomFloat
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.RandomFloatInRange
// Size: 0xC(Inherited: 0x0) 
struct FRandomFloatInRange
{
	float Min;  // 0x0(0x4)
	float Max;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.TextRenderComponent.SetYScale
// Size: 0x4(Inherited: 0x0) 
struct FSetYScale
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.RandomFloatInRangeFromStream
// Size: 0x14(Inherited: 0x0) 
struct FRandomFloatInRangeFromStream
{
	float Min;  // 0x0(0x4)
	float Max;  // 0x4(0x4)
	struct FRandomStream Stream;  // 0x8(0x8)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.KismetMathLibrary.RandomInteger
// Size: 0x8(Inherited: 0x0) 
struct FRandomInteger
{
	int32_t Max;  // 0x0(0x4)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.RandomInteger64InRange
// Size: 0x18(Inherited: 0x0) 
struct FRandomInteger64InRange
{
	int64_t Min;  // 0x0(0x8)
	int64_t Max;  // 0x8(0x8)
	int64_t ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.Subtract_Vector4Vector4
// Size: 0x30(Inherited: 0x0) 
struct FSubtract_Vector4Vector4
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 B;  // 0x10(0x10)
	struct FVector4 ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.KismetMathLibrary.RandomIntegerInRange
// Size: 0xC(Inherited: 0x0) 
struct FRandomIntegerInRange
{
	int32_t Min;  // 0x0(0x4)
	int32_t Max;  // 0x4(0x4)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.RandomIntegerInRangeFromStream
// Size: 0x14(Inherited: 0x0) 
struct FRandomIntegerInRangeFromStream
{
	int32_t Min;  // 0x0(0x4)
	int32_t Max;  // 0x4(0x4)
	struct FRandomStream Stream;  // 0x8(0x8)
	int32_t ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.KismetMathLibrary.VSize2DSquared
// Size: 0xC(Inherited: 0x0) 
struct FVSize2DSquared
{
	struct FVector2D A;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.RandomRotator
// Size: 0x10(Inherited: 0x0) 
struct FRandomRotator
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bRoll : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	struct FRotator ReturnValue;  // 0x4(0xC)

}; 
// Function Engine.KismetMathLibrary.RandomUnitVector
// Size: 0xC(Inherited: 0x0) 
struct FRandomUnitVector
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.RandomUnitVectorInConeInDegrees
// Size: 0x1C(Inherited: 0x0) 
struct FRandomUnitVectorInConeInDegrees
{
	struct FVector ConeDir;  // 0x0(0xC)
	float ConeHalfAngleInDegrees;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.KismetMathLibrary.Subtract_QuatQuat
// Size: 0x30(Inherited: 0x0) 
struct FSubtract_QuatQuat
{
	struct FQuat A;  // 0x0(0x10)
	struct FQuat B;  // 0x10(0x10)
	struct FQuat ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.KismetMathLibrary.RandomUnitVectorInConeInRadiansFromStream
// Size: 0x24(Inherited: 0x0) 
struct FRandomUnitVectorInConeInRadiansFromStream
{
	struct FVector ConeDir;  // 0x0(0xC)
	float ConeHalfAngleInRadians;  // 0xC(0x4)
	struct FRandomStream Stream;  // 0x10(0x8)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetMathLibrary.REase
// Size: 0x34(Inherited: 0x0) 
struct FREase
{
	struct FRotator A;  // 0x0(0xC)
	struct FRotator B;  // 0xC(0xC)
	float Alpha;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bShortestPath : 1;  // 0x1C(0x1)
	char EEasingFunc EasingFunc;  // 0x1D(0x1)
	char pad_30[2];  // 0x1E(0x2)
	float BlendExp;  // 0x20(0x4)
	int32_t Steps;  // 0x24(0x4)
	struct FRotator ReturnValue;  // 0x28(0xC)

}; 
// Function Engine.KismetStringLibrary.Conv_MatrixToString
// Size: 0x50(Inherited: 0x0) 
struct FConv_MatrixToString
{
	struct FMatrix InMatrix;  // 0x0(0x40)
	struct FString ReturnValue;  // 0x40(0x10)

}; 
// Function Engine.KismetMathLibrary.RGBLinearToHSV
// Size: 0x20(Inherited: 0x0) 
struct FRGBLinearToHSV
{
	struct FLinearColor RGB;  // 0x0(0x10)
	struct FLinearColor ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetStringLibrary.CullArray
// Size: 0x28(Inherited: 0x0) 
struct FCullArray
{
	struct FString SourceString;  // 0x0(0x10)
	struct TArray<struct FString> inArray;  // 0x10(0x10)
	int32_t ReturnValue;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)

}; 
// Function Engine.KismetMathLibrary.RInterpTo
// Size: 0x2C(Inherited: 0x0) 
struct FRInterpTo
{
	struct FRotator Current;  // 0x0(0xC)
	struct FRotator Target;  // 0xC(0xC)
	float DeltaTime;  // 0x18(0x4)
	float InterpSpeed;  // 0x1C(0x4)
	struct FRotator ReturnValue;  // 0x20(0xC)

}; 
// Function Engine.KismetMathLibrary.RInterpTo_Constant
// Size: 0x2C(Inherited: 0x0) 
struct FRInterpTo_Constant
{
	struct FRotator Current;  // 0x0(0xC)
	struct FRotator Target;  // 0xC(0xC)
	float DeltaTime;  // 0x18(0x4)
	float InterpSpeed;  // 0x1C(0x4)
	struct FRotator ReturnValue;  // 0x20(0xC)

}; 
// Function Engine.KismetMathLibrary.RLerp
// Size: 0x2C(Inherited: 0x0) 
struct FRLerp
{
	struct FRotator A;  // 0x0(0xC)
	struct FRotator B;  // 0xC(0xC)
	float Alpha;  // 0x18(0x4)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool bShortestPath : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)
	struct FRotator ReturnValue;  // 0x20(0xC)

}; 
// Function Engine.KismetMathLibrary.Round
// Size: 0x8(Inherited: 0x0) 
struct FRound
{
	float A;  // 0x0(0x4)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.SafeDivide
// Size: 0xC(Inherited: 0x0) 
struct FSafeDivide
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.ParticleSystemComponent.BeginTrails
// Size: 0x18(Inherited: 0x0) 
struct FBeginTrails
{
	struct FName InFirstSocketName;  // 0x0(0x8)
	struct FName InSecondSocketName;  // 0x8(0x8)
	char ETrailWidthMode InWidthMode;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	float InWidth;  // 0x14(0x4)

}; 
// Function Engine.KismetMathLibrary.SeedRandomStream
// Size: 0x8(Inherited: 0x0) 
struct FSeedRandomStream
{
	struct FRandomStream Stream;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.SelectClass
// Size: 0x20(Inherited: 0x0) 
struct FSelectClass
{
	UObject* A;  // 0x0(0x8)
	UObject* B;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bSelectA : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)
	UObject* ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.KismetMathLibrary.SelectFloat
// Size: 0x10(Inherited: 0x0) 
struct FSelectFloat
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bPickA : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	float ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.SelectInt
// Size: 0x10(Inherited: 0x0) 
struct FSelectInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bPickA : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	int32_t ReturnValue;  // 0xC(0x4)

}; 
// Function Engine.KismetMathLibrary.SelectTransform
// Size: 0xA0(Inherited: 0x0) 
struct FSelectTransform
{
	struct FTransform A;  // 0x0(0x30)
	struct FTransform B;  // 0x30(0x30)
	char pad_96_1 : 7;  // 0x60(0x1)
	bool bPickA : 1;  // 0x60(0x1)
	char pad_97[15];  // 0x61(0xF)
	struct FTransform ReturnValue;  // 0x70(0x30)

}; 
// Function Engine.KismetMathLibrary.SelectVector
// Size: 0x28(Inherited: 0x0) 
struct FSelectVector
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool bPickA : 1;  // 0x18(0x1)
	char pad_25[3];  // 0x19(0x3)
	struct FVector ReturnValue;  // 0x1C(0xC)

}; 
// Function Engine.VOIPStatics.SetMicThreshold
// Size: 0x4(Inherited: 0x0) 
struct FSetMicThreshold
{
	float InThreshold;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.TEase
// Size: 0xA0(Inherited: 0x0) 
struct FTEase
{
	struct FTransform A;  // 0x0(0x30)
	struct FTransform B;  // 0x30(0x30)
	float Alpha;  // 0x60(0x4)
	char EEasingFunc EasingFunc;  // 0x64(0x1)
	char pad_101[3];  // 0x65(0x3)
	float BlendExp;  // 0x68(0x4)
	int32_t Steps;  // 0x6C(0x4)
	struct FTransform ReturnValue;  // 0x70(0x30)

}; 
// Function Engine.KismetMathLibrary.SetRandomStreamSeed
// Size: 0xC(Inherited: 0x0) 
struct FSetRandomStreamSeed
{
	struct FRandomStream Stream;  // 0x0(0x8)
	int32_t NewSeed;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.SignOfInteger
// Size: 0x8(Inherited: 0x0) 
struct FSignOfInteger
{
	int32_t A;  // 0x0(0x4)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.Spherical2DToUnitCartesian
// Size: 0x14(Inherited: 0x0) 
struct FSpherical2DToUnitCartesian
{
	struct FVector2D A;  // 0x0(0x8)
	struct FVector ReturnValue;  // 0x8(0xC)

}; 
// Function Engine.KismetMathLibrary.Square
// Size: 0x8(Inherited: 0x0) 
struct FSquare
{
	float A;  // 0x0(0x4)
	float ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.KismetMathLibrary.Subtract_ByteByte
// Size: 0x3(Inherited: 0x0) 
struct FSubtract_ByteByte
{
	char A;  // 0x0(0x1)
	char B;  // 0x1(0x1)
	char ReturnValue;  // 0x2(0x1)

}; 
// Function Engine.KismetTextLibrary.StringTableIdAndKeyFromText
// Size: 0x38(Inherited: 0x0) 
struct FStringTableIdAndKeyFromText
{
	struct FText Text;  // 0x0(0x18)
	struct FName OutTableId;  // 0x18(0x8)
	struct FString OutKey;  // 0x20(0x10)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool ReturnValue : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 
// Function Engine.KismetMathLibrary.Subtract_DateTimeDateTime
// Size: 0x18(Inherited: 0x0) 
struct FSubtract_DateTimeDateTime
{
	struct FDateTime A;  // 0x0(0x8)
	struct FDateTime B;  // 0x8(0x8)
	struct FTimespan ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.Subtract_FloatFloat
// Size: 0xC(Inherited: 0x0) 
struct FSubtract_FloatFloat
{
	float A;  // 0x0(0x4)
	float B;  // 0x4(0x4)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.Subtract_Int64Int64
// Size: 0x18(Inherited: 0x0) 
struct FSubtract_Int64Int64
{
	int64_t A;  // 0x0(0x8)
	int64_t B;  // 0x8(0x8)
	int64_t ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.Subtract_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FSubtract_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.Subtract_IntPointIntPoint
// Size: 0x18(Inherited: 0x0) 
struct FSubtract_IntPointIntPoint
{
	struct FIntPoint A;  // 0x0(0x8)
	struct FIntPoint B;  // 0x8(0x8)
	struct FIntPoint ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.Subtract_TimespanTimespan
// Size: 0x18(Inherited: 0x0) 
struct FSubtract_TimespanTimespan
{
	struct FTimespan A;  // 0x0(0x8)
	struct FTimespan B;  // 0x8(0x8)
	struct FTimespan ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetMathLibrary.Subtract_Vector2DFloat
// Size: 0x14(Inherited: 0x0) 
struct FSubtract_Vector2DFloat
{
	struct FVector2D A;  // 0x0(0x8)
	float B;  // 0x8(0x4)
	struct FVector2D ReturnValue;  // 0xC(0x8)

}; 
// Function Engine.KismetMathLibrary.Subtract_VectorFloat
// Size: 0x1C(Inherited: 0x0) 
struct FSubtract_VectorFloat
{
	struct FVector A;  // 0x0(0xC)
	float B;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.KismetMathLibrary.Subtract_VectorInt
// Size: 0x1C(Inherited: 0x0) 
struct FSubtract_VectorInt
{
	struct FVector A;  // 0x0(0xC)
	int32_t B;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.WindDirectionalSourceComponent.SetSpeed
// Size: 0x4(Inherited: 0x0) 
struct FSetSpeed
{
	float InNewSpeed;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.Subtract_VectorVector
// Size: 0x24(Inherited: 0x0) 
struct FSubtract_VectorVector
{
	struct FVector A;  // 0x0(0xC)
	struct FVector B;  // 0xC(0xC)
	struct FVector ReturnValue;  // 0x18(0xC)

}; 
// Function Engine.KismetMathLibrary.TimespanFromString
// Size: 0x20(Inherited: 0x0) 
struct FTimespanFromString
{
	struct FString TimespanString;  // 0x0(0x10)
	struct FTimespan Result;  // 0x10(0x8)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetMathLibrary.TimespanMinValue
// Size: 0x8(Inherited: 0x0) 
struct FTimespanMinValue
{
	struct FTimespan ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.TInterpTo
// Size: 0xA0(Inherited: 0x0) 
struct FTInterpTo
{
	struct FTransform Current;  // 0x0(0x30)
	struct FTransform Target;  // 0x30(0x30)
	float DeltaTime;  // 0x60(0x4)
	float InterpSpeed;  // 0x64(0x4)
	char pad_104[8];  // 0x68(0x8)
	struct FTransform ReturnValue;  // 0x70(0x30)

}; 
// Function Engine.KismetMathLibrary.TLerp
// Size: 0xA0(Inherited: 0x0) 
struct FTLerp
{
	struct FTransform A;  // 0x0(0x30)
	struct FTransform B;  // 0x30(0x30)
	float Alpha;  // 0x60(0x4)
	char ELerpInterpolationMode InterpMode;  // 0x64(0x1)
	char pad_101[11];  // 0x65(0xB)
	struct FTransform ReturnValue;  // 0x70(0x30)

}; 
// Function Engine.KismetMathLibrary.Today
// Size: 0x8(Inherited: 0x0) 
struct FToday
{
	struct FDateTime ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.Transform_Determinant
// Size: 0x40(Inherited: 0x0) 
struct FTransform_Determinant
{
	struct FTransform Transform;  // 0x0(0x30)
	float ReturnValue;  // 0x30(0x4)
	char pad_52[12];  // 0x34(0xC)

}; 
// Function Engine.RuntimeVirtualTexture.GetTileBorderSize
// Size: 0x4(Inherited: 0x0) 
struct FGetTileBorderSize
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.KismetMathLibrary.TransformLocation
// Size: 0x50(Inherited: 0x0) 
struct FTransformLocation
{
	struct FTransform T;  // 0x0(0x30)
	struct FVector Location;  // 0x30(0xC)
	struct FVector ReturnValue;  // 0x3C(0xC)
	char pad_72[8];  // 0x48(0x8)

}; 
// Function Engine.KismetMathLibrary.TransformVector4
// Size: 0x60(Inherited: 0x0) 
struct FTransformVector4
{
	struct FMatrix Matrix;  // 0x0(0x40)
	struct FVector4 Vec4;  // 0x40(0x10)
	struct FVector4 ReturnValue;  // 0x50(0x10)

}; 
// Function Engine.KismetMathLibrary.Vector2D_One
// Size: 0x8(Inherited: 0x0) 
struct FVector2D_One
{
	struct FVector2D ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector2DInterpTo_Constant
// Size: 0x20(Inherited: 0x0) 
struct FVector2DInterpTo_Constant
{
	struct FVector2D Current;  // 0x0(0x8)
	struct FVector2D Target;  // 0x8(0x8)
	float DeltaTime;  // 0x10(0x4)
	float InterpSpeed;  // 0x14(0x4)
	struct FVector2D ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector4_Assign
// Size: 0x20(Inherited: 0x0) 
struct FVector4_Assign
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 InVector;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.Vector4_CrossProduct3
// Size: 0x30(Inherited: 0x0) 
struct FVector4_CrossProduct3
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 B;  // 0x10(0x10)
	struct FVector4 ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.KismetMathLibrary.Vector4_DotProduct
// Size: 0x30(Inherited: 0x0) 
struct FVector4_DotProduct
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 B;  // 0x10(0x10)
	float ReturnValue;  // 0x20(0x4)
	char pad_36[12];  // 0x24(0xC)

}; 
// Function Engine.KismetStringLibrary.Conv_IntVectorToString
// Size: 0x20(Inherited: 0x0) 
struct FConv_IntVectorToString
{
	struct FIntVector InIntVec;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetMathLibrary.Vector4_DotProduct3
// Size: 0x30(Inherited: 0x0) 
struct FVector4_DotProduct3
{
	struct FVector4 A;  // 0x0(0x10)
	struct FVector4 B;  // 0x10(0x10)
	float ReturnValue;  // 0x20(0x4)
	char pad_36[12];  // 0x24(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector4_IsNormal3
// Size: 0x20(Inherited: 0x0) 
struct FVector4_IsNormal3
{
	struct FVector4 A;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[15];  // 0x11(0xF)

}; 
// Function Engine.KismetMathLibrary.Vector4_MirrorByVector3
// Size: 0x30(Inherited: 0x0) 
struct FVector4_MirrorByVector3
{
	struct FVector4 Direction;  // 0x0(0x10)
	struct FVector4 SurfaceNormal;  // 0x10(0x10)
	struct FVector4 ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.KismetMathLibrary.Vector4_Normal3
// Size: 0x30(Inherited: 0x0) 
struct FVector4_Normal3
{
	struct FVector4 A;  // 0x0(0x10)
	float Tolerance;  // 0x10(0x4)
	char pad_20[12];  // 0x14(0xC)
	struct FVector4 ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.KismetMathLibrary.Vector4_Size
// Size: 0x20(Inherited: 0x0) 
struct FVector4_Size
{
	struct FVector4 A;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)
	char pad_20[12];  // 0x14(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector4_Size3
// Size: 0x20(Inherited: 0x0) 
struct FVector4_Size3
{
	struct FVector4 A;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)
	char pad_20[12];  // 0x14(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector4_SizeSquared3
// Size: 0x20(Inherited: 0x0) 
struct FVector4_SizeSquared3
{
	struct FVector4 A;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)
	char pad_20[12];  // 0x14(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_Assign
// Size: 0x18(Inherited: 0x0) 
struct FVector_Assign
{
	struct FVector A;  // 0x0(0xC)
	struct FVector InVector;  // 0xC(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_Backward
// Size: 0xC(Inherited: 0x0) 
struct FVector_Backward
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_ClampSizeMax
// Size: 0x1C(Inherited: 0x0) 
struct FVector_ClampSizeMax
{
	struct FVector A;  // 0x0(0xC)
	float Max;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_Distance
// Size: 0x1C(Inherited: 0x0) 
struct FVector_Distance
{
	struct FVector v1;  // 0x0(0xC)
	struct FVector v2;  // 0xC(0xC)
	float ReturnValue;  // 0x18(0x4)

}; 
// Function Engine.ParticleSystemComponent.GetBeamEndPoint
// Size: 0x14(Inherited: 0x0) 
struct FGetBeamEndPoint
{
	int32_t EmitterIndex;  // 0x0(0x4)
	struct FVector OutEndPoint;  // 0x4(0xC)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.KismetMathLibrary.Vector_DistanceSquared
// Size: 0x1C(Inherited: 0x0) 
struct FVector_DistanceSquared
{
	struct FVector v1;  // 0x0(0xC)
	struct FVector v2;  // 0xC(0xC)
	float ReturnValue;  // 0x18(0x4)

}; 
// Function Engine.KismetMathLibrary.Vector_Down
// Size: 0xC(Inherited: 0x0) 
struct FVector_Down
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_Forward
// Size: 0xC(Inherited: 0x0) 
struct FVector_Forward
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_GetSignVector
// Size: 0x18(Inherited: 0x0) 
struct FVector_GetSignVector
{
	struct FVector A;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_IsNearlyZero
// Size: 0x14(Inherited: 0x0) 
struct FVector_IsNearlyZero
{
	struct FVector A;  // 0x0(0xC)
	float Tolerance;  // 0xC(0x4)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.KismetMathLibrary.Vector_IsNormal
// Size: 0x10(Inherited: 0x0) 
struct FVector_IsNormal
{
	struct FVector A;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool ReturnValue : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.KismetMathLibrary.Vector_IsUniform
// Size: 0x14(Inherited: 0x0) 
struct FVector_IsUniform
{
	struct FVector A;  // 0x0(0xC)
	float Tolerance;  // 0xC(0x4)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)

}; 
// Function Engine.KismetMathLibrary.Vector_MirrorByPlane
// Size: 0x30(Inherited: 0x0) 
struct FVector_MirrorByPlane
{
	struct FVector A;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct FPlane InPlane;  // 0x10(0x10)
	struct FVector ReturnValue;  // 0x20(0xC)
	char pad_44[4];  // 0x2C(0x4)

}; 
// Function Engine.KismetMathLibrary.Vector_Normal2D
// Size: 0x1C(Inherited: 0x0) 
struct FVector_Normal2D
{
	struct FVector A;  // 0x0(0xC)
	float Tolerance;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_NormalUnsafe
// Size: 0x18(Inherited: 0x0) 
struct FVector_NormalUnsafe
{
	struct FVector A;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_Reciprocal
// Size: 0x18(Inherited: 0x0) 
struct FVector_Reciprocal
{
	struct FVector A;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_Set
// Size: 0x18(Inherited: 0x0) 
struct FVector_Set
{
	struct FVector A;  // 0x0(0xC)
	float X;  // 0xC(0x4)
	float Y;  // 0x10(0x4)
	float Z;  // 0x14(0x4)

}; 
// Function Engine.SplineMeshComponent.GetStartScale
// Size: 0x8(Inherited: 0x0) 
struct FGetStartScale
{
	struct FVector2D ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector_SnappedToGrid
// Size: 0x1C(Inherited: 0x0) 
struct FVector_SnappedToGrid
{
	struct FVector InVect;  // 0x0(0xC)
	float InGridSize;  // 0xC(0x4)
	struct FVector ReturnValue;  // 0x10(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_ToRadians
// Size: 0x18(Inherited: 0x0) 
struct FVector_ToRadians
{
	struct FVector A;  // 0x0(0xC)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.SkyLightComponent.SetLowerHemisphereColor
// Size: 0x10(Inherited: 0x0) 
struct FSetLowerHemisphereColor
{
	struct FLinearColor InLowerHemisphereColor;  // 0x0(0x10)

}; 
// Function Engine.KismetMathLibrary.Vector_UnitCartesianToSpherical
// Size: 0x14(Inherited: 0x0) 
struct FVector_UnitCartesianToSpherical
{
	struct FVector A;  // 0x0(0xC)
	struct FVector2D ReturnValue;  // 0xC(0x8)

}; 
// Function Engine.KismetMathLibrary.Vector_Up
// Size: 0xC(Inherited: 0x0) 
struct FVector_Up
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.Vector_Zero
// Size: 0xC(Inherited: 0x0) 
struct FVector_Zero
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.KismetMathLibrary.VectorSpringInterp
// Size: 0x4C(Inherited: 0x0) 
struct FVectorSpringInterp
{
	struct FVector Current;  // 0x0(0xC)
	struct FVector Target;  // 0xC(0xC)
	struct FVectorSpringState SpringState;  // 0x18(0x18)
	float Stiffness;  // 0x30(0x4)
	float CriticalDampingFactor;  // 0x34(0x4)
	float DeltaTime;  // 0x38(0x4)
	float Mass;  // 0x3C(0x4)
	struct FVector ReturnValue;  // 0x40(0xC)

}; 
// Function Engine.KismetMathLibrary.VInterpTo
// Size: 0x2C(Inherited: 0x0) 
struct FVInterpTo
{
	struct FVector Current;  // 0x0(0xC)
	struct FVector Target;  // 0xC(0xC)
	float DeltaTime;  // 0x18(0x4)
	float InterpSpeed;  // 0x1C(0x4)
	struct FVector ReturnValue;  // 0x20(0xC)

}; 
// Function Engine.KismetMathLibrary.VInterpTo_Constant
// Size: 0x2C(Inherited: 0x0) 
struct FVInterpTo_Constant
{
	struct FVector Current;  // 0x0(0xC)
	struct FVector Target;  // 0xC(0xC)
	float DeltaTime;  // 0x18(0x4)
	float InterpSpeed;  // 0x1C(0x4)
	struct FVector ReturnValue;  // 0x20(0xC)

}; 
// Function Engine.KismetMathLibrary.VSize2D
// Size: 0xC(Inherited: 0x0) 
struct FVSize2D
{
	struct FVector2D A;  // 0x0(0x8)
	float ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetMathLibrary.WeightedMovingAverage_FRotator
// Size: 0x28(Inherited: 0x0) 
struct FWeightedMovingAverage_FRotator
{
	struct FRotator CurrentSample;  // 0x0(0xC)
	struct FRotator PreviousSample;  // 0xC(0xC)
	float Weight;  // 0x18(0x4)
	struct FRotator ReturnValue;  // 0x1C(0xC)

}; 
// Function Engine.KismetMathLibrary.Xor_IntInt
// Size: 0xC(Inherited: 0x0) 
struct FXor_IntInt
{
	int32_t A;  // 0x0(0x4)
	int32_t B;  // 0x4(0x4)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.KismetNodeHelperLibrary.ClearAllBits
// Size: 0x4(Inherited: 0x0) 
struct FClearAllBits
{
	int32_t Data;  // 0x0(0x4)

}; 
// Function Engine.KismetNodeHelperLibrary.ClearBit
// Size: 0x8(Inherited: 0x0) 
struct FClearBit
{
	int32_t Data;  // 0x0(0x4)
	int32_t Index;  // 0x4(0x4)

}; 
// Function Engine.KismetNodeHelperLibrary.GetEnumeratorValueFromIndex
// Size: 0x10(Inherited: 0x0) 
struct FGetEnumeratorValueFromIndex
{
	struct UEnum* Enum;  // 0x0(0x8)
	char EnumeratorIndex;  // 0x8(0x1)
	char ReturnValue;  // 0x9(0x1)
	char pad_10[6];  // 0xA(0x6)

}; 
// Function Engine.KismetNodeHelperLibrary.HasUnmarkedBit
// Size: 0xC(Inherited: 0x0) 
struct FHasUnmarkedBit
{
	int32_t Data;  // 0x0(0x4)
	int32_t NumBits;  // 0x4(0x4)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool ReturnValue : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.KismetRenderingLibrary.ClearRenderTarget2D
// Size: 0x20(Inherited: 0x0) 
struct FClearRenderTarget2D
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UTextureRenderTarget2D* TextureRenderTarget;  // 0x8(0x8)
	struct FLinearColor ClearColor;  // 0x10(0x10)

}; 
// Function Engine.KismetRenderingLibrary.ConvertRenderTargetToTexture2DEditorOnly
// Size: 0x18(Inherited: 0x0) 
struct FConvertRenderTargetToTexture2DEditorOnly
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UTextureRenderTarget2D* RenderTarget;  // 0x8(0x8)
	struct UTexture2D* Texture;  // 0x10(0x8)

}; 
// Function Engine.KismetRenderingLibrary.CreateRenderTarget2D
// Size: 0x30(Inherited: 0x0) 
struct FCreateRenderTarget2D
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	int32_t Width;  // 0x8(0x4)
	int32_t Height;  // 0xC(0x4)
	char ETextureRenderTargetFormat Format;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	struct FLinearColor ClearColor;  // 0x14(0x10)
	char pad_36_1 : 7;  // 0x24(0x1)
	bool bAutoGenerateMipMaps : 1;  // 0x24(0x1)
	char pad_37[3];  // 0x25(0x3)
	struct UTextureRenderTarget2D* ReturnValue;  // 0x28(0x8)

}; 
// Function Engine.KismetRenderingLibrary.CreateRenderTargetVolume
// Size: 0x38(Inherited: 0x0) 
struct FCreateRenderTargetVolume
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	int32_t Width;  // 0x8(0x4)
	int32_t Height;  // 0xC(0x4)
	int32_t Depth;  // 0x10(0x4)
	char ETextureRenderTargetFormat Format;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)
	struct FLinearColor ClearColor;  // 0x18(0x10)
	char pad_40_1 : 7;  // 0x28(0x1)
	bool bAutoGenerateMipMaps : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)
	struct UTextureRenderTargetVolume* ReturnValue;  // 0x30(0x8)

}; 
// Function Engine.KismetRenderingLibrary.DrawMaterialToRenderTarget
// Size: 0x18(Inherited: 0x0) 
struct FDrawMaterialToRenderTarget
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UTextureRenderTarget2D* TextureRenderTarget;  // 0x8(0x8)
	struct UMaterialInterface* Material;  // 0x10(0x8)

}; 
// Function Engine.KismetRenderingLibrary.EndDrawCanvasToRenderTarget
// Size: 0x18(Inherited: 0x0) 
struct FEndDrawCanvasToRenderTarget
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FDrawToRenderTargetContext Context;  // 0x8(0x10)

}; 
// Function Engine.KismetRenderingLibrary.ExportTexture2D
// Size: 0x30(Inherited: 0x0) 
struct FExportTexture2D
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UTexture2D* Texture;  // 0x8(0x8)
	struct FString FilePath;  // 0x10(0x10)
	struct FString Filename;  // 0x20(0x10)

}; 
// Function Engine.KismetRenderingLibrary.GetSunLightAtmosphereTransmittance
// Size: 0x28(Inherited: 0x0) 
struct FGetSunLightAtmosphereTransmittance
{
	struct FVector Direction;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct USceneComponent* sunFogAtmosphereComponent;  // 0x10(0x8)
	struct FLinearColor ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.KismetTextLibrary.Conv_RotatorToText
// Size: 0x28(Inherited: 0x0) 
struct FConv_RotatorToText
{
	struct FRotator InRot;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct FText ReturnValue;  // 0x10(0x18)

}; 
// Function Engine.KismetRenderingLibrary.ImportBufferAsTexture2D
// Size: 0x20(Inherited: 0x0) 
struct FImportBufferAsTexture2D
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct TArray<char> Buffer;  // 0x8(0x10)
	struct UTexture2D* ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.KismetRenderingLibrary.ImportFileAsTexture2D
// Size: 0x20(Inherited: 0x0) 
struct FImportFileAsTexture2D
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FString Filename;  // 0x8(0x10)
	struct UTexture2D* ReturnValue;  // 0x18(0x8)

}; 
// Function Engine.KismetRenderingLibrary.ReadRenderTargetRawUV
// Size: 0x28(Inherited: 0x0) 
struct FReadRenderTargetRawUV
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct UTextureRenderTarget2D* TextureRenderTarget;  // 0x8(0x8)
	float U;  // 0x10(0x4)
	float V;  // 0x14(0x4)
	struct FLinearColor ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.KismetRenderingLibrary.ReleaseRenderTarget2D
// Size: 0x8(Inherited: 0x0) 
struct FReleaseRenderTarget2D
{
	struct UTextureRenderTarget2D* TextureRenderTarget;  // 0x0(0x8)

}; 
// Function Engine.KismetStringLibrary.BuildString_Color
// Size: 0x50(Inherited: 0x0) 
struct FBuildString_Color
{
	struct FString AppendTo;  // 0x0(0x10)
	struct FString prefix;  // 0x10(0x10)
	struct FLinearColor InColor;  // 0x20(0x10)
	struct FString suffix;  // 0x30(0x10)
	struct FString ReturnValue;  // 0x40(0x10)

}; 
// Function Engine.KismetStringLibrary.BuildString_Float
// Size: 0x48(Inherited: 0x0) 
struct FBuildString_Float
{
	struct FString AppendTo;  // 0x0(0x10)
	struct FString prefix;  // 0x10(0x10)
	float InFloat;  // 0x20(0x4)
	char pad_36[4];  // 0x24(0x4)
	struct FString suffix;  // 0x28(0x10)
	struct FString ReturnValue;  // 0x38(0x10)

}; 
// Function Engine.KismetStringLibrary.BuildString_IntVector
// Size: 0x50(Inherited: 0x0) 
struct FBuildString_IntVector
{
	struct FString AppendTo;  // 0x0(0x10)
	struct FString prefix;  // 0x10(0x10)
	struct FIntVector InIntVector;  // 0x20(0xC)
	char pad_44[4];  // 0x2C(0x4)
	struct FString suffix;  // 0x30(0x10)
	struct FString ReturnValue;  // 0x40(0x10)

}; 
// Function Engine.KismetStringLibrary.BuildString_Vector
// Size: 0x50(Inherited: 0x0) 
struct FBuildString_Vector
{
	struct FString AppendTo;  // 0x0(0x10)
	struct FString prefix;  // 0x10(0x10)
	struct FVector InVector;  // 0x20(0xC)
	char pad_44[4];  // 0x2C(0x4)
	struct FString suffix;  // 0x30(0x10)
	struct FString ReturnValue;  // 0x40(0x10)

}; 
// Function Engine.KismetStringLibrary.BuildString_Vector2d
// Size: 0x48(Inherited: 0x0) 
struct FBuildString_Vector2d
{
	struct FString AppendTo;  // 0x0(0x10)
	struct FString prefix;  // 0x10(0x10)
	struct FVector2D InVector2D;  // 0x20(0x8)
	struct FString suffix;  // 0x28(0x10)
	struct FString ReturnValue;  // 0x38(0x10)

}; 
// Function Engine.KismetStringLibrary.Contains
// Size: 0x28(Inherited: 0x0) 
struct FContains
{
	struct FString SearchIn;  // 0x0(0x10)
	struct FString Substring;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool bUseCase : 1;  // 0x20(0x1)
	char pad_33_1 : 7;  // 0x21(0x1)
	bool bSearchFromEnd : 1;  // 0x21(0x1)
	char pad_34_1 : 7;  // 0x22(0x1)
	bool ReturnValue : 1;  // 0x22(0x1)
	char pad_35[5];  // 0x23(0x5)

}; 
// Function Engine.KismetStringLibrary.Conv_BoolToString
// Size: 0x18(Inherited: 0x0) 
struct FConv_BoolToString
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool InBool : 1;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetStringLibrary.Conv_ByteToString
// Size: 0x18(Inherited: 0x0) 
struct FConv_ByteToString
{
	char InByte;  // 0x0(0x1)
	char pad_1[7];  // 0x1(0x7)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetStringLibrary.Conv_ColorToString
// Size: 0x20(Inherited: 0x0) 
struct FConv_ColorToString
{
	struct FLinearColor InColor;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.WindDirectionalSourceComponent.SetMinimumGustAmount
// Size: 0x4(Inherited: 0x0) 
struct FSetMinimumGustAmount
{
	float InNewMinGust;  // 0x0(0x4)

}; 
// Function Engine.KismetStringLibrary.Conv_FloatToString
// Size: 0x18(Inherited: 0x0) 
struct FConv_FloatToString
{
	float InFloat;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetStringLibrary.Conv_RotatorToString
// Size: 0x20(Inherited: 0x0) 
struct FConv_RotatorToString
{
	struct FRotator InRot;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.SplineMeshComponent.GetEndOffset
// Size: 0x8(Inherited: 0x0) 
struct FGetEndOffset
{
	struct FVector2D ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.KismetStringLibrary.Conv_StringToColor
// Size: 0x28(Inherited: 0x0) 
struct FConv_StringToColor
{
	struct FString inString;  // 0x0(0x10)
	struct FLinearColor OutConvertedColor;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool OutIsValid : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// Function Engine.KismetStringLibrary.Conv_StringToName
// Size: 0x18(Inherited: 0x0) 
struct FConv_StringToName
{
	struct FString inString;  // 0x0(0x10)
	struct FName ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.KismetStringLibrary.Conv_StringToRotator
// Size: 0x20(Inherited: 0x0) 
struct FConv_StringToRotator
{
	struct FString inString;  // 0x0(0x10)
	struct FRotator OutConvertedRotator;  // 0x10(0xC)
	char pad_28_1 : 7;  // 0x1C(0x1)
	bool OutIsValid : 1;  // 0x1C(0x1)
	char pad_29[3];  // 0x1D(0x3)

}; 
// Function Engine.KismetStringLibrary.Conv_TransformToString
// Size: 0x40(Inherited: 0x0) 
struct FConv_TransformToString
{
	struct FTransform InTrans;  // 0x0(0x30)
	struct FString ReturnValue;  // 0x30(0x10)

}; 
// Function Engine.KismetStringLibrary.Conv_VectorToString
// Size: 0x20(Inherited: 0x0) 
struct FConv_VectorToString
{
	struct FVector InVec;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetStringLibrary.EqualEqual_StriStri
// Size: 0x28(Inherited: 0x0) 
struct FEqualEqual_StriStri
{
	struct FString A;  // 0x0(0x10)
	struct FString B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// Function Engine.KismetStringLibrary.EqualEqual_StrStr
// Size: 0x28(Inherited: 0x0) 
struct FEqualEqual_StrStr
{
	struct FString A;  // 0x0(0x10)
	struct FString B;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool ReturnValue : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)

}; 
// Function Engine.KismetStringLibrary.IsNumeric
// Size: 0x18(Inherited: 0x0) 
struct FIsNumeric
{
	struct FString SourceString;  // 0x0(0x10)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool ReturnValue : 1;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.KismetStringLibrary.JoinStringArray
// Size: 0x30(Inherited: 0x0) 
struct FJoinStringArray
{
	struct TArray<struct FString> SourceArray;  // 0x0(0x10)
	struct FString Separator;  // 0x10(0x10)
	struct FString ReturnValue;  // 0x20(0x10)

}; 
// Function Engine.KismetStringLibrary.LeftChop
// Size: 0x28(Inherited: 0x0) 
struct FLeftChop
{
	struct FString SourceString;  // 0x0(0x10)
	int32_t Count;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct FString ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.KismetStringLibrary.ParseIntoArray
// Size: 0x38(Inherited: 0x0) 
struct FParseIntoArray
{
	struct FString SourceString;  // 0x0(0x10)
	struct FString Delimiter;  // 0x10(0x10)
	char pad_32_1 : 7;  // 0x20(0x1)
	bool CullEmptyStrings : 1;  // 0x20(0x1)
	char pad_33[7];  // 0x21(0x7)
	struct TArray<struct FString> ReturnValue;  // 0x28(0x10)

}; 
// Function Engine.KismetStringLibrary.TimeSecondsToString
// Size: 0x18(Inherited: 0x0) 
struct FTimeSecondsToString
{
	float InSeconds;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.ParticleSystemComponent.SetBeamTargetStrength
// Size: 0xC(Inherited: 0x0) 
struct FSetBeamTargetStrength
{
	int32_t EmitterIndex;  // 0x0(0x4)
	float NewTargetStrength;  // 0x4(0x4)
	int32_t TargetIndex;  // 0x8(0x4)

}; 
// Function Engine.KismetStringLibrary.ToUpper
// Size: 0x20(Inherited: 0x0) 
struct FToUpper
{
	struct FString SourceString;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetStringLibrary.Trim
// Size: 0x20(Inherited: 0x0) 
struct FTrim
{
	struct FString SourceString;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetStringLibrary.TrimTrailing
// Size: 0x20(Inherited: 0x0) 
struct FTrimTrailing
{
	struct FString SourceString;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.KismetStringTableLibrary.GetKeysFromStringTable
// Size: 0x18(Inherited: 0x0) 
struct FGetKeysFromStringTable
{
	struct FName TableId;  // 0x0(0x8)
	struct TArray<struct FString> ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetStringTableLibrary.GetTableEntrySourceString
// Size: 0x28(Inherited: 0x0) 
struct FGetTableEntrySourceString
{
	struct FName TableId;  // 0x0(0x8)
	struct FString Key;  // 0x8(0x10)
	struct FString ReturnValue;  // 0x18(0x10)

}; 
// Function Engine.PlayerInput.SetBind
// Size: 0x18(Inherited: 0x0) 
struct FSetBind
{
	struct FName BindName;  // 0x0(0x8)
	struct FString Command;  // 0x8(0x10)

}; 
// Function Engine.KismetStringTableLibrary.GetTableNamespace
// Size: 0x18(Inherited: 0x0) 
struct FGetTableNamespace
{
	struct FName TableId;  // 0x0(0x8)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.KismetStringTableLibrary.IsRegisteredTableEntry
// Size: 0x20(Inherited: 0x0) 
struct FIsRegisteredTableEntry
{
	struct FName TableId;  // 0x0(0x8)
	struct FString Key;  // 0x8(0x10)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetTextLibrary.AsCurrencyBase
// Size: 0x30(Inherited: 0x0) 
struct FAsCurrencyBase
{
	int32_t BaseValue;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FString CurrencyCode;  // 0x8(0x10)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.KismetTextLibrary.AsTimeZoneTime_DateTime
// Size: 0x30(Inherited: 0x0) 
struct FAsTimeZoneTime_DateTime
{
	struct FDateTime InDateTime;  // 0x0(0x8)
	struct FString InTimeZone;  // 0x8(0x10)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.KismetTextLibrary.Conv_ColorToText
// Size: 0x28(Inherited: 0x0) 
struct FConv_ColorToText
{
	struct FLinearColor InColor;  // 0x0(0x10)
	struct FText ReturnValue;  // 0x10(0x18)

}; 
// Function Engine.KismetTextLibrary.Conv_Int64ToText
// Size: 0x30(Inherited: 0x0) 
struct FConv_Int64ToText
{
	int64_t Value;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bAlwaysSign : 1;  // 0x8(0x1)
	char pad_9_1 : 7;  // 0x9(0x1)
	bool bUseGrouping : 1;  // 0x9(0x1)
	char pad_10[2];  // 0xA(0x2)
	int32_t MinimumIntegralDigits;  // 0xC(0x4)
	int32_t MaximumIntegralDigits;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.KismetTextLibrary.Conv_NameToText
// Size: 0x20(Inherited: 0x0) 
struct FConv_NameToText
{
	struct FName InName;  // 0x0(0x8)
	struct FText ReturnValue;  // 0x8(0x18)

}; 
// Function Engine.KismetTextLibrary.Conv_StringToText
// Size: 0x28(Inherited: 0x0) 
struct FConv_StringToText
{
	struct FString inString;  // 0x0(0x10)
	struct FText ReturnValue;  // 0x10(0x18)

}; 
// Function Engine.KismetTextLibrary.Conv_TransformToText
// Size: 0x50(Inherited: 0x0) 
struct FConv_TransformToText
{
	struct FTransform InTrans;  // 0x0(0x30)
	struct FText ReturnValue;  // 0x30(0x18)
	char pad_72[8];  // 0x48(0x8)

}; 
// Function Engine.KismetTextLibrary.FindTextInLocalizationTable
// Size: 0x40(Inherited: 0x0) 
struct FFindTextInLocalizationTable
{
	struct FString Namespace;  // 0x0(0x10)
	struct FString Key;  // 0x10(0x10)
	struct FText OutText;  // 0x20(0x18)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool ReturnValue : 1;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 
// Function Engine.KismetTextLibrary.Conv_VectorToText
// Size: 0x28(Inherited: 0x0) 
struct FConv_VectorToText
{
	struct FVector InVec;  // 0x0(0xC)
	char pad_12[4];  // 0xC(0x4)
	struct FText ReturnValue;  // 0x10(0x18)

}; 
// Function Engine.KismetTextLibrary.Format
// Size: 0x40(Inherited: 0x0) 
struct FFormat
{
	struct FText InPattern;  // 0x0(0x18)
	struct TArray<struct FFormatArgumentData> InArgs;  // 0x18(0x10)
	struct FText ReturnValue;  // 0x28(0x18)

}; 
// Function Engine.KismetTextLibrary.NotEqual_IgnoreCase_TextText
// Size: 0x38(Inherited: 0x0) 
struct FNotEqual_IgnoreCase_TextText
{
	struct FText A;  // 0x0(0x18)
	struct FText B;  // 0x18(0x18)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool ReturnValue : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 
// Function Engine.KismetTextLibrary.NotEqual_TextText
// Size: 0x38(Inherited: 0x0) 
struct FNotEqual_TextText
{
	struct FText A;  // 0x0(0x18)
	struct FText B;  // 0x18(0x18)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool ReturnValue : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 
// Function Engine.KismetTextLibrary.PolyglotDataToText
// Size: 0xD0(Inherited: 0x0) 
struct FPolyglotDataToText
{
	struct FPolyglotTextData PolyglotData;  // 0x0(0xB8)
	struct FText ReturnValue;  // 0xB8(0x18)

}; 
// Function Engine.KismetTextLibrary.TextFromStringTable
// Size: 0x30(Inherited: 0x0) 
struct FTextFromStringTable
{
	struct FName TableId;  // 0x0(0x8)
	struct FString Key;  // 0x8(0x10)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.KismetTextLibrary.TextIsCultureInvariant
// Size: 0x20(Inherited: 0x0) 
struct FTextIsCultureInvariant
{
	struct FText InText;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetTextLibrary.TextIsFromStringTable
// Size: 0x20(Inherited: 0x0) 
struct FTextIsFromStringTable
{
	struct FText Text;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetTextLibrary.TextIsTransient
// Size: 0x20(Inherited: 0x0) 
struct FTextIsTransient
{
	struct FText InText;  // 0x0(0x18)
	char pad_24_1 : 7;  // 0x18(0x1)
	bool ReturnValue : 1;  // 0x18(0x1)
	char pad_25[7];  // 0x19(0x7)

}; 
// Function Engine.KismetTextLibrary.TextTrimPrecedingAndTrailing
// Size: 0x30(Inherited: 0x0) 
struct FTextTrimPrecedingAndTrailing
{
	struct FText InText;  // 0x0(0x18)
	struct FText ReturnValue;  // 0x18(0x18)

}; 
// Function Engine.LevelStreaming.CreateInstance
// Size: 0x18(Inherited: 0x0) 
struct FCreateInstance
{
	struct FString UniqueInstanceName;  // 0x0(0x10)
	struct ULevelStreaming* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.LevelStreaming.GetLoadedLevel
// Size: 0x8(Inherited: 0x0) 
struct FGetLoadedLevel
{
	struct ULevel* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.LevelStreaming.SetIsRequestingUnloadAndRemoval
// Size: 0x1(Inherited: 0x0) 
struct FSetIsRequestingUnloadAndRemoval
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInIsRequestingUnloadAndRemoval : 1;  // 0x0(0x1)

}; 
// Function Engine.LevelStreaming.SetLevelLODIndex
// Size: 0x4(Inherited: 0x0) 
struct FSetLevelLODIndex
{
	int32_t LODIndex;  // 0x0(0x4)

}; 
// Function Engine.LevelStreaming.SetShouldBeLoaded
// Size: 0x1(Inherited: 0x0) 
struct FSetShouldBeLoaded
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInShouldBeLoaded : 1;  // 0x0(0x1)

}; 
// Function Engine.LevelStreaming.SetShouldBeVisible
// Size: 0x1(Inherited: 0x0) 
struct FSetShouldBeVisible
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bInShouldBeVisible : 1;  // 0x0(0x1)

}; 
// Function Engine.LevelStreaming.ShouldBeLoaded
// Size: 0x1(Inherited: 0x0) 
struct FShouldBeLoaded
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.LevelStreamingDynamic.LoadLevelInstance
// Size: 0x50(Inherited: 0x0) 
struct FLoadLevelInstance
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FString LevelName;  // 0x8(0x10)
	struct FVector Location;  // 0x18(0xC)
	struct FRotator Rotation;  // 0x24(0xC)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bOutSuccess : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct FString OptionalLevelNameOverride;  // 0x38(0x10)
	struct ULevelStreamingDynamic* ReturnValue;  // 0x48(0x8)

}; 
// Function Engine.MaterialBillboardComponent.AddElement
// Size: 0x28(Inherited: 0x0) 
struct FAddElement
{
	struct UMaterialInterface* Material;  // 0x0(0x8)
	struct UCurveFloat* DistanceToOpacityCurve;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bSizeIsInScreenSpace : 1;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	float BaseSizeX;  // 0x14(0x4)
	float BaseSizeY;  // 0x18(0x4)
	char pad_28[4];  // 0x1C(0x4)
	struct UCurveFloat* DistanceToSizeCurve;  // 0x20(0x8)

}; 
// Function Engine.StereoLayerComponent.SetUVRect
// Size: 0x14(Inherited: 0x0) 
struct FSetUVRect
{
	struct FBox2D InUVRect;  // 0x0(0x14)

}; 
// Function Engine.MaterialBillboardComponent.SetElements
// Size: 0x10(Inherited: 0x0) 
struct FSetElements
{
	struct TArray<struct FMaterialSpriteElement> NewElements;  // 0x0(0x10)

}; 
// Function Engine.MaterialInstanceDynamic.CopyInterpParameters
// Size: 0x8(Inherited: 0x0) 
struct FCopyInterpParameters
{
	struct UMaterialInstance* Source;  // 0x0(0x8)

}; 
// Function Engine.MaterialInstanceDynamic.K2_CopyMaterialInstanceParameters
// Size: 0x10(Inherited: 0x0) 
struct FK2_CopyMaterialInstanceParameters
{
	struct UMaterialInterface* Source;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bQuickParametersOnly : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.MaterialInstanceDynamic.K2_GetScalarParameterValueByInfo
// Size: 0x14(Inherited: 0x0) 
struct FK2_GetScalarParameterValueByInfo
{
	struct FMaterialParameterInfo ParameterInfo;  // 0x0(0x10)
	float ReturnValue;  // 0x10(0x4)

}; 
// Function Engine.MaterialInstanceDynamic.SetScalarParameterValueByInfo
// Size: 0x14(Inherited: 0x0) 
struct FSetScalarParameterValueByInfo
{
	struct FMaterialParameterInfo ParameterInfo;  // 0x0(0x10)
	float Value;  // 0x10(0x4)

}; 
// Function Engine.MaterialInstanceDynamic.SetVectorParameterValueByInfo
// Size: 0x20(Inherited: 0x0) 
struct FSetVectorParameterValueByInfo
{
	struct FMaterialParameterInfo ParameterInfo;  // 0x0(0x10)
	struct FLinearColor Value;  // 0x10(0x10)

}; 
// Function Engine.NetPushModelHelpers.MarkPropertyDirty
// Size: 0x10(Inherited: 0x0) 
struct FMarkPropertyDirty
{
	struct UObject* Object;  // 0x0(0x8)
	struct FName PropertyName;  // 0x8(0x8)

}; 
// Function Engine.NetPushModelHelpers.MarkPropertyDirtyFromRepIndex
// Size: 0x18(Inherited: 0x0) 
struct FMarkPropertyDirtyFromRepIndex
{
	struct UObject* Object;  // 0x0(0x8)
	int32_t RepIndex;  // 0x8(0x4)
	struct FName PropertyName;  // 0xC(0x8)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.ParticleSystemComponent.GenerateParticleEvent
// Size: 0x30(Inherited: 0x0) 
struct FGenerateParticleEvent
{
	struct FName InEventName;  // 0x0(0x8)
	float InEmitterTime;  // 0x8(0x4)
	struct FVector InLocation;  // 0xC(0xC)
	struct FVector InDirection;  // 0x18(0xC)
	struct FVector InVelocity;  // 0x24(0xC)

}; 
// Function Engine.ParticleSystemComponent.GetBeamSourceStrength
// Size: 0x10(Inherited: 0x0) 
struct FGetBeamSourceStrength
{
	int32_t EmitterIndex;  // 0x0(0x4)
	int32_t SourceIndex;  // 0x4(0x4)
	float OutSourceStrength;  // 0x8(0x4)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool ReturnValue : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.ParticleSystemComponent.GetBeamTargetPoint
// Size: 0x18(Inherited: 0x0) 
struct FGetBeamTargetPoint
{
	int32_t EmitterIndex;  // 0x0(0x4)
	int32_t TargetIndex;  // 0x4(0x4)
	struct FVector OutTargetPoint;  // 0x8(0xC)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.ParticleSystemComponent.GetBeamTargetTangent
// Size: 0x18(Inherited: 0x0) 
struct FGetBeamTargetTangent
{
	int32_t EmitterIndex;  // 0x0(0x4)
	int32_t TargetIndex;  // 0x4(0x4)
	struct FVector OutTangentPoint;  // 0x8(0xC)
	char pad_20_1 : 7;  // 0x14(0x1)
	bool ReturnValue : 1;  // 0x14(0x1)
	char pad_21[3];  // 0x15(0x3)

}; 
// Function Engine.ParticleSystemComponent.SetAutoAttachParams
// Size: 0x18(Inherited: 0x0) 
struct FSetAutoAttachParams
{
	struct USceneComponent* Parent;  // 0x0(0x8)
	struct FName SocketName;  // 0x8(0x8)
	char EAttachLocation LocationType;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.ParticleSystemComponent.SetBeamSourcePoint
// Size: 0x14(Inherited: 0x0) 
struct FSetBeamSourcePoint
{
	int32_t EmitterIndex;  // 0x0(0x4)
	struct FVector NewSourcePoint;  // 0x4(0xC)
	int32_t SourceIndex;  // 0x10(0x4)

}; 
// Function Engine.ParticleSystemComponent.SetBeamSourceTangent
// Size: 0x14(Inherited: 0x0) 
struct FSetBeamSourceTangent
{
	int32_t EmitterIndex;  // 0x0(0x4)
	struct FVector NewTangentPoint;  // 0x4(0xC)
	int32_t SourceIndex;  // 0x10(0x4)

}; 
// Function Engine.ParticleSystemComponent.SetBeamTargetPoint
// Size: 0x14(Inherited: 0x0) 
struct FSetBeamTargetPoint
{
	int32_t EmitterIndex;  // 0x0(0x4)
	struct FVector NewTargetPoint;  // 0x4(0xC)
	int32_t TargetIndex;  // 0x10(0x4)

}; 
// Function Engine.ParticleSystemComponent.SetTrailSourceData
// Size: 0x18(Inherited: 0x0) 
struct FSetTrailSourceData
{
	struct FName InFirstSocketName;  // 0x0(0x8)
	struct FName InSecondSocketName;  // 0x8(0x8)
	char ETrailWidthMode InWidthMode;  // 0x10(0x1)
	char pad_17[3];  // 0x11(0x3)
	float InWidth;  // 0x14(0x4)

}; 
// Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationProfileBelow
// Size: 0x14(Inherited: 0x0) 
struct FApplyPhysicalAnimationProfileBelow
{
	struct FName BodyName;  // 0x0(0x8)
	struct FName ProfileName;  // 0x8(0x8)
	char pad_16_1 : 7;  // 0x10(0x1)
	bool bIncludeSelf : 1;  // 0x10(0x1)
	char pad_17_1 : 7;  // 0x11(0x1)
	bool bClearNotFound : 1;  // 0x11(0x1)
	char pad_18[2];  // 0x12(0x2)

}; 
// Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationSettings
// Size: 0x2C(Inherited: 0x0) 
struct FApplyPhysicalAnimationSettings
{
	struct FName BodyName;  // 0x0(0x8)
	struct FPhysicalAnimationData PhysicalAnimationData;  // 0x8(0x24)

}; 
// Function Engine.PhysicsConstraintComponent.IsBroken
// Size: 0x1(Inherited: 0x0) 
struct FIsBroken
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.PhysicsConstraintComponent.SetAngularDriveParams
// Size: 0xC(Inherited: 0x0) 
struct FSetAngularDriveParams
{
	float PositionStrength;  // 0x0(0x4)
	float VelocityStrength;  // 0x4(0x4)
	float InForceLimit;  // 0x8(0x4)

}; 
// Function Engine.PhysicsConstraintComponent.SetAngularOrientationDrive
// Size: 0x2(Inherited: 0x0) 
struct FSetAngularOrientationDrive
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnableSwingDrive : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bEnableTwistDrive : 1;  // 0x1(0x1)

}; 
// Function Engine.PhysicsConstraintComponent.SetAngularOrientationTarget
// Size: 0xC(Inherited: 0x0) 
struct FSetAngularOrientationTarget
{
	struct FRotator InPosTarget;  // 0x0(0xC)

}; 
// Function Engine.PhysicsConstraintComponent.SetAngularPlasticity
// Size: 0x8(Inherited: 0x0) 
struct FSetAngularPlasticity
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bAngularPlasticity : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float AngularPlasticityThreshold;  // 0x4(0x4)

}; 
// Function Engine.SubsystemBlueprintLibrary.GetLocalPlayerSubsystem
// Size: 0x18(Inherited: 0x0) 
struct FGetLocalPlayerSubsystem
{
	struct UObject* ContextObject;  // 0x0(0x8)
	ULocalPlayerSubsystem* Class;  // 0x8(0x8)
	struct ULocalPlayerSubsystem* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.PhysicsConstraintComponent.SetAngularSwing2Limit
// Size: 0x8(Inherited: 0x0) 
struct FSetAngularSwing2Limit
{
	char EAngularConstraintMotion MotionType;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float Swing2LimitAngle;  // 0x4(0x4)

}; 
// Function Engine.PhysicsConstraintComponent.SetAngularVelocityTarget
// Size: 0xC(Inherited: 0x0) 
struct FSetAngularVelocityTarget
{
	struct FVector InVelTarget;  // 0x0(0xC)

}; 
// Function Engine.PhysicsConstraintComponent.SetLinearPlasticity
// Size: 0x8(Inherited: 0x0) 
struct FSetLinearPlasticity
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bLinearPlasticity : 1;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float LinearPlasticityThreshold;  // 0x4(0x4)

}; 
// Function Engine.PhysicsConstraintComponent.SetLinearPositionDrive
// Size: 0x3(Inherited: 0x0) 
struct FSetLinearPositionDrive
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnableDriveX : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bEnableDriveY : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool bEnableDriveZ : 1;  // 0x2(0x1)

}; 
// Function Engine.PhysicsConstraintComponent.SetLinearVelocityDrive
// Size: 0x3(Inherited: 0x0) 
struct FSetLinearVelocityDrive
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnableDriveX : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bEnableDriveY : 1;  // 0x1(0x1)
	char pad_2_1 : 7;  // 0x2(0x1)
	bool bEnableDriveZ : 1;  // 0x2(0x1)

}; 
// Function Engine.PhysicsConstraintComponent.SetLinearVelocityTarget
// Size: 0xC(Inherited: 0x0) 
struct FSetLinearVelocityTarget
{
	struct FVector InVelTarget;  // 0x0(0xC)

}; 
// Function Engine.PhysicsConstraintComponent.SetLinearYLimit
// Size: 0x8(Inherited: 0x0) 
struct FSetLinearYLimit
{
	char ELinearConstraintMotion ConstraintType;  // 0x0(0x1)
	char pad_1[3];  // 0x1(0x3)
	float LimitSize;  // 0x4(0x4)

}; 
// Function Engine.PhysicsConstraintComponent.SetOrientationDriveSLERP
// Size: 0x1(Inherited: 0x0) 
struct FSetOrientationDriveSLERP
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnableSLERP : 1;  // 0x0(0x1)

}; 
// Function Engine.PhysicsConstraintComponent.SetOrientationDriveTwistAndSwing
// Size: 0x2(Inherited: 0x0) 
struct FSetOrientationDriveTwistAndSwing
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnableTwistDrive : 1;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bEnableSwingDrive : 1;  // 0x1(0x1)

}; 
// Function Engine.PhysicsHandleComponent.GetGrabbedComponent
// Size: 0x8(Inherited: 0x0) 
struct FGetGrabbedComponent
{
	struct UPrimitiveComponent* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.PhysicsHandleComponent.GetTargetLocationAndRotation
// Size: 0x18(Inherited: 0x0) 
struct FGetTargetLocationAndRotation
{
	struct FVector TargetLocation;  // 0x0(0xC)
	struct FRotator TargetRotation;  // 0xC(0xC)

}; 
// Function Engine.PhysicsHandleComponent.GrabComponentAtLocationWithRotation
// Size: 0x28(Inherited: 0x0) 
struct FGrabComponentAtLocationWithRotation
{
	struct UPrimitiveComponent* Component;  // 0x0(0x8)
	struct FName InBoneName;  // 0x8(0x8)
	struct FVector Location;  // 0x10(0xC)
	struct FRotator Rotation;  // 0x1C(0xC)

}; 
// Function Engine.PhysicsHandleComponent.SetTargetLocation
// Size: 0xC(Inherited: 0x0) 
struct FSetTargetLocation
{
	struct FVector NewLocation;  // 0x0(0xC)

}; 
// Function Engine.PhysicsSpringComponent.GetNormalizedCompressionScalar
// Size: 0x4(Inherited: 0x0) 
struct FGetNormalizedCompressionScalar
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.PhysicsSpringComponent.GetSpringDirection
// Size: 0xC(Inherited: 0x0) 
struct FGetSpringDirection
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.SceneCaptureCube.OnInterpToggle
// Size: 0x1(Inherited: 0x0) 
struct FOnInterpToggle
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bEnable : 1;  // 0x0(0x1)

}; 
// Function Engine.SceneCaptureComponent.HideActorComponents
// Size: 0x10(Inherited: 0x0) 
struct FHideActorComponents
{
	struct AActor* InActor;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bIncludeFromChildActors : 1;  // 0x8(0x1)
	char pad_9[7];  // 0x9(0x7)

}; 
// Function Engine.SceneCaptureComponent.RemoveShowOnlyComponent
// Size: 0x8(Inherited: 0x0) 
struct FRemoveShowOnlyComponent
{
	struct UPrimitiveComponent* InComponent;  // 0x0(0x8)

}; 
// Function Engine.SceneCaptureComponent.SetCaptureSortPriority
// Size: 0x4(Inherited: 0x0) 
struct FSetCaptureSortPriority
{
	int32_t NewCaptureSortPriority;  // 0x0(0x4)

}; 
// Function Engine.SceneCaptureComponent.ShowOnlyComponent
// Size: 0x8(Inherited: 0x0) 
struct FShowOnlyComponent
{
	struct UPrimitiveComponent* InComponent;  // 0x0(0x8)

}; 
// Function Engine.PlatformInterfaceWebResponse.GetHeader
// Size: 0x28(Inherited: 0x0) 
struct FGetHeader
{
	int32_t HeaderIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FString Header;  // 0x8(0x10)
	struct FString Value;  // 0x18(0x10)

}; 
// Function Engine.PlatformInterfaceWebResponse.GetHeaderValue
// Size: 0x20(Inherited: 0x0) 
struct FGetHeaderValue
{
	struct FString HeaderName;  // 0x0(0x10)
	struct FString ReturnValue;  // 0x10(0x10)

}; 
// Function Engine.PlatformInterfaceWebResponse.GetNumHeaders
// Size: 0x4(Inherited: 0x0) 
struct FGetNumHeaders
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.WindDirectionalSourceComponent.SetRadius
// Size: 0x4(Inherited: 0x0) 
struct FSetRadius
{
	float InNewRadius;  // 0x0(0x4)

}; 
// Function Engine.PoseableMeshComponent.GetBoneLocationByName
// Size: 0x18(Inherited: 0x0) 
struct FGetBoneLocationByName
{
	struct FName BoneName;  // 0x0(0x8)
	char EBoneSpaces BoneSpace;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)
	struct FVector ReturnValue;  // 0xC(0xC)

}; 
// Function Engine.RadialForceComponent.AddObjectTypeToAffect
// Size: 0x1(Inherited: 0x0) 
struct FAddObjectTypeToAffect
{
	char EObjectTypeQuery ObjectType;  // 0x0(0x1)

}; 
// Function Engine.RectLightComponent.SetBarnDoorAngle
// Size: 0x4(Inherited: 0x0) 
struct FSetBarnDoorAngle
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.SkyAtmosphereComponent.SetAerialPespectiveViewDistanceScale
// Size: 0x4(Inherited: 0x0) 
struct FSetAerialPespectiveViewDistanceScale
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.RectLightComponent.SetSourceTexture
// Size: 0x8(Inherited: 0x0) 
struct FSetSourceTexture
{
	struct UTexture* bNewValue;  // 0x0(0x8)

}; 
// Function Engine.RuntimeVirtualTexture.GetPageTableSize
// Size: 0x4(Inherited: 0x0) 
struct FGetPageTableSize
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.StaticMesh.FindSocket
// Size: 0x10(Inherited: 0x0) 
struct FFindSocket
{
	struct FName InSocketName;  // 0x0(0x8)
	struct UStaticMeshSocket* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.SkeletalMesh.GetDefaultAnimatingRig
// Size: 0x28(Inherited: 0x0) 
struct FGetDefaultAnimatingRig
{
	struct TSoftObjectPtr<UObject> ReturnValue;  // 0x0(0x28)

}; 
// Function Engine.SkeletalMesh.GetImportedBounds
// Size: 0x1C(Inherited: 0x0) 
struct FGetImportedBounds
{
	struct FBoxSphereBounds ReturnValue;  // 0x0(0x1C)

}; 
// Function Engine.SkeletalMesh.GetLODSettings
// Size: 0x8(Inherited: 0x0) 
struct FGetLODSettings
{
	struct USkeletalMeshLODSettings* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.SkeletalMesh.GetMeshClothingAssets
// Size: 0x10(Inherited: 0x0) 
struct FGetMeshClothingAssets
{
	struct TArray<struct UClothingAssetBase*> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.SkeletalMesh.GetNodeMappingContainer
// Size: 0x10(Inherited: 0x0) 
struct FGetNodeMappingContainer
{
	struct UBlueprint* SourceAsset;  // 0x0(0x8)
	struct UNodeMappingContainer* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.SkeletalMesh.GetPhysicsAsset
// Size: 0x8(Inherited: 0x0) 
struct FGetPhysicsAsset
{
	struct UPhysicsAsset* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.SkeletalMesh.GetShadowPhysicsAsset
// Size: 0x8(Inherited: 0x0) 
struct FGetShadowPhysicsAsset
{
	struct UPhysicsAsset* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.TextRenderComponent.SetHorizontalAlignment
// Size: 0x1(Inherited: 0x0) 
struct FSetHorizontalAlignment
{
	char EHorizTextAligment Value;  // 0x0(0x1)

}; 
// Function Engine.SkeletalMesh.IsSectionUsingCloth
// Size: 0x8(Inherited: 0x0) 
struct FIsSectionUsingCloth
{
	int32_t InSectionIndex;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bCheckCorrespondingSections : 1;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool ReturnValue : 1;  // 0x5(0x1)
	char pad_6[2];  // 0x6(0x2)

}; 
// Function Engine.SkeletalMesh.NumSockets
// Size: 0x4(Inherited: 0x0) 
struct FNumSockets
{
	int32_t ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.SkeletalMesh.SetLODSettings
// Size: 0x8(Inherited: 0x0) 
struct FSetLODSettings
{
	struct USkeletalMeshLODSettings* InLODSettings;  // 0x0(0x8)

}; 
// Function Engine.SkyAtmosphereComponent.OverrideAtmosphereLightDirection
// Size: 0x10(Inherited: 0x0) 
struct FOverrideAtmosphereLightDirection
{
	int32_t AtmosphereLightIndex;  // 0x0(0x4)
	struct FVector LightDirection;  // 0x4(0xC)

}; 
// Function Engine.SkyAtmosphereComponent.SetAtmosphereHeight
// Size: 0x4(Inherited: 0x0) 
struct FSetAtmosphereHeight
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.SkyAtmosphereComponent.SetMieAbsorptionScale
// Size: 0x4(Inherited: 0x0) 
struct FSetMieAbsorptionScale
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.SkyAtmosphereComponent.SetMieExponentialDistribution
// Size: 0x4(Inherited: 0x0) 
struct FSetMieExponentialDistribution
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.SkyAtmosphereComponent.SetMieScatteringScale
// Size: 0x4(Inherited: 0x0) 
struct FSetMieScatteringScale
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.SkyAtmosphereComponent.SetMultiScatteringFactor
// Size: 0x4(Inherited: 0x0) 
struct FSetMultiScatteringFactor
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.SkyAtmosphereComponent.SetOtherAbsorption
// Size: 0x10(Inherited: 0x0) 
struct FSetOtherAbsorption
{
	struct FLinearColor NewValue;  // 0x0(0x10)

}; 
// Function Engine.SkyAtmosphereComponent.SetOtherAbsorptionScale
// Size: 0x4(Inherited: 0x0) 
struct FSetOtherAbsorptionScale
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.SkyLightComponent.SetCubemapBlend
// Size: 0x18(Inherited: 0x0) 
struct FSetCubemapBlend
{
	struct UTextureCube* SourceCubemap;  // 0x0(0x8)
	struct UTextureCube* DestinationCubemap;  // 0x8(0x8)
	float InBlendFraction;  // 0x10(0x4)
	char pad_20[4];  // 0x14(0x4)

}; 
// Function Engine.SkyLightComponent.SetMinOcclusion
// Size: 0x4(Inherited: 0x0) 
struct FSetMinOcclusion
{
	float InMinOcclusion;  // 0x0(0x4)

}; 
// Function Engine.SkyLightComponent.SetOcclusionExponent
// Size: 0x4(Inherited: 0x0) 
struct FSetOcclusionExponent
{
	float InOcclusionExponent;  // 0x0(0x4)

}; 
// Function Engine.SkyLightComponent.SetUpperHemisphereColor
// Size: 0x10(Inherited: 0x0) 
struct FSetUpperHemisphereColor
{
	struct FLinearColor InUpperHemisphereColor;  // 0x0(0x10)

}; 
// Function Engine.SoundSubmix.StartRecordingOutput
// Size: 0x10(Inherited: 0x0) 
struct FStartRecordingOutput
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	float ExpectedDuration;  // 0x8(0x4)
	char pad_12[4];  // 0xC(0x4)

}; 
// Function Engine.SoundSubmix.StartSpectralAnalysis
// Size: 0x18(Inherited: 0x0) 
struct FStartSpectralAnalysis
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	uint8_t  FFTSize;  // 0x8(0x1)
	uint8_t  InterpolationMethod;  // 0x9(0x1)
	uint8_t  WindowType;  // 0xA(0x1)
	char pad_11[1];  // 0xB(0x1)
	float HopSize;  // 0xC(0x4)
	uint8_t  SpectrumType;  // 0x10(0x1)
	char pad_17[7];  // 0x11(0x7)

}; 
// Function Engine.SoundSubmix.StopEnvelopeFollowing
// Size: 0x8(Inherited: 0x0) 
struct FStopEnvelopeFollowing
{
	struct UObject* WorldContextObject;  // 0x0(0x8)

}; 
// Function Engine.SplineMeshComponent.GetEndPosition
// Size: 0xC(Inherited: 0x0) 
struct FGetEndPosition
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.SplineMeshComponent.GetEndRoll
// Size: 0x4(Inherited: 0x0) 
struct FGetEndRoll
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.SplineMeshComponent.GetEndTangent
// Size: 0xC(Inherited: 0x0) 
struct FGetEndTangent
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.SplineMeshComponent.GetStartRoll
// Size: 0x4(Inherited: 0x0) 
struct FGetStartRoll
{
	float ReturnValue;  // 0x0(0x4)

}; 
// Function Engine.SplineMeshComponent.GetStartTangent
// Size: 0xC(Inherited: 0x0) 
struct FGetStartTangent
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.SplineMeshComponent.SetEndOffset
// Size: 0xC(Inherited: 0x0) 
struct FSetEndOffset
{
	struct FVector2D EndOffset;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bUpdateMesh : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.SplineMeshComponent.SetEndTangent
// Size: 0x10(Inherited: 0x0) 
struct FSetEndTangent
{
	struct FVector EndTangent;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bUpdateMesh : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.SplineMeshComponent.SetForwardAxis
// Size: 0x2(Inherited: 0x0) 
struct FSetForwardAxis
{
	char ESplineMeshAxis InForwardAxis;  // 0x0(0x1)
	char pad_1_1 : 7;  // 0x1(0x1)
	bool bUpdateMesh : 1;  // 0x1(0x1)

}; 
// Function Engine.SplineMeshComponent.SetSplineUpDir
// Size: 0x10(Inherited: 0x0) 
struct FSetSplineUpDir
{
	struct FVector InSplineUpDir;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bUpdateMesh : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.SplineMeshComponent.SetStartAndEnd
// Size: 0x34(Inherited: 0x0) 
struct FSetStartAndEnd
{
	struct FVector StartPos;  // 0x0(0xC)
	struct FVector StartTangent;  // 0xC(0xC)
	struct FVector EndPos;  // 0x18(0xC)
	struct FVector EndTangent;  // 0x24(0xC)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool bUpdateMesh : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)

}; 
// Function Engine.SplineMeshComponent.SetStartOffset
// Size: 0xC(Inherited: 0x0) 
struct FSetStartOffset
{
	struct FVector2D StartOffset;  // 0x0(0x8)
	char pad_8_1 : 7;  // 0x8(0x1)
	bool bUpdateMesh : 1;  // 0x8(0x1)
	char pad_9[3];  // 0x9(0x3)

}; 
// Function Engine.SplineMeshComponent.SetStartPosition
// Size: 0x10(Inherited: 0x0) 
struct FSetStartPosition
{
	struct FVector StartPos;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bUpdateMesh : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.SplineMeshComponent.SetStartTangent
// Size: 0x10(Inherited: 0x0) 
struct FSetStartTangent
{
	struct FVector StartTangent;  // 0x0(0xC)
	char pad_12_1 : 7;  // 0xC(0x1)
	bool bUpdateMesh : 1;  // 0xC(0x1)
	char pad_13[3];  // 0xD(0x3)

}; 
// Function Engine.StaticMesh.AddSocket
// Size: 0x8(Inherited: 0x0) 
struct FAddSocket
{
	struct UStaticMeshSocket* Socket;  // 0x0(0x8)

}; 
// Function Engine.StaticMesh.GetBoundingBox
// Size: 0x1C(Inherited: 0x0) 
struct FGetBoundingBox
{
	struct FBox ReturnValue;  // 0x0(0x1C)

}; 
// Function Engine.StaticMesh.GetMinimumLODForPlatform
// Size: 0xC(Inherited: 0x0) 
struct FGetMinimumLODForPlatform
{
	struct FName PlatformName;  // 0x0(0x8)
	int32_t ReturnValue;  // 0x8(0x4)

}; 
// Function Engine.StaticMesh.GetNumSections
// Size: 0x8(Inherited: 0x0) 
struct FGetNumSections
{
	int32_t InLOD;  // 0x0(0x4)
	int32_t ReturnValue;  // 0x4(0x4)

}; 
// Function Engine.StaticMesh.GetStaticMaterials
// Size: 0x10(Inherited: 0x0) 
struct FGetStaticMaterials
{
	struct TArray<struct FStaticMaterial> ReturnValue;  // 0x0(0x10)

}; 
// Function Engine.StereoLayerShapeCylinder.SetHeight
// Size: 0x4(Inherited: 0x0) 
struct FSetHeight
{
	int32_t InHeight;  // 0x0(0x4)

}; 
// Function Engine.StereoLayerComponent.GetLeftTexture
// Size: 0x8(Inherited: 0x0) 
struct FGetLeftTexture
{
	struct UTexture* ReturnValue;  // 0x0(0x8)

}; 
// Function Engine.StereoLayerComponent.SetLeftTexture
// Size: 0x8(Inherited: 0x0) 
struct FSetLeftTexture
{
	struct UTexture* InTexture;  // 0x0(0x8)

}; 
// Function Engine.StereoLayerComponent.SetQuadSize
// Size: 0x8(Inherited: 0x0) 
struct FSetQuadSize
{
	struct FVector2D InQuadSize;  // 0x0(0x8)

}; 
// Function Engine.StereoLayerFunctionLibrary.EnableAutoLoadingSplashScreen
// Size: 0x1(Inherited: 0x0) 
struct FEnableAutoLoadingSplashScreen
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool InAutoShowEnabled : 1;  // 0x0(0x1)

}; 
// Function Engine.SubsystemBlueprintLibrary.GetEngineSubsystem
// Size: 0x10(Inherited: 0x0) 
struct FGetEngineSubsystem
{
	UEngineSubsystem* Class;  // 0x0(0x8)
	struct UEngineSubsystem* ReturnValue;  // 0x8(0x8)

}; 
// Function Engine.SubsystemBlueprintLibrary.GetLocalPlayerSubSystemFromPlayerController
// Size: 0x18(Inherited: 0x0) 
struct FGetLocalPlayerSubSystemFromPlayerController
{
	struct APlayerController* PlayerController;  // 0x0(0x8)
	ULocalPlayerSubsystem* Class;  // 0x8(0x8)
	struct ULocalPlayerSubsystem* ReturnValue;  // 0x10(0x8)

}; 
// Function Engine.TextRenderComponent.GetTextLocalSize
// Size: 0xC(Inherited: 0x0) 
struct FGetTextLocalSize
{
	struct FVector ReturnValue;  // 0x0(0xC)

}; 
// Function Engine.TextRenderComponent.SetFont
// Size: 0x8(Inherited: 0x0) 
struct FSetFont
{
	struct UFont* Value;  // 0x0(0x8)

}; 
// Function Engine.TextRenderComponent.SetHorizSpacingAdjust
// Size: 0x4(Inherited: 0x0) 
struct FSetHorizSpacingAdjust
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.TextRenderComponent.SetTextRenderColor
// Size: 0x4(Inherited: 0x0) 
struct FSetTextRenderColor
{
	struct FColor Value;  // 0x0(0x4)

}; 
// Function Engine.TextRenderComponent.SetWorldSize
// Size: 0x4(Inherited: 0x0) 
struct FSetWorldSize
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.TextRenderComponent.SetXScale
// Size: 0x4(Inherited: 0x0) 
struct FSetXScale
{
	float Value;  // 0x0(0x4)

}; 
// Function Engine.TimelineComponent.SetIgnoreTimeDilation
// Size: 0x1(Inherited: 0x0) 
struct FSetIgnoreTimeDilation
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool bNewIgnoreTimeDilation : 1;  // 0x0(0x1)

}; 
// Function Engine.TimelineComponent.SetPlaybackPosition
// Size: 0x8(Inherited: 0x0) 
struct FSetPlaybackPosition
{
	float NewPosition;  // 0x0(0x4)
	char pad_4_1 : 7;  // 0x4(0x1)
	bool bFireEvents : 1;  // 0x4(0x1)
	char pad_5_1 : 7;  // 0x5(0x1)
	bool bFireUpdate : 1;  // 0x5(0x1)
	char pad_6[2];  // 0x6(0x2)

}; 
// Function Engine.TimelineComponent.SetTimelineLength
// Size: 0x4(Inherited: 0x0) 
struct FSetTimelineLength
{
	float NewLength;  // 0x0(0x4)

}; 
// Function Engine.TimelineComponent.SetTimelineLengthMode
// Size: 0x1(Inherited: 0x0) 
struct FSetTimelineLengthMode
{
	char ETimelineLengthMode NewLengthMode;  // 0x0(0x1)

}; 
// Function Engine.TwitterIntegrationBase.AuthorizeAccounts
// Size: 0x1(Inherited: 0x0) 
struct FAuthorizeAccounts
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.TwitterIntegrationBase.CanShowTweetUI
// Size: 0x1(Inherited: 0x0) 
struct FCanShowTweetUI
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool ReturnValue : 1;  // 0x0(0x1)

}; 
// Function Engine.TwitterIntegrationBase.GetAccountName
// Size: 0x18(Inherited: 0x0) 
struct FGetAccountName
{
	int32_t AccountIndex;  // 0x0(0x4)
	char pad_4[4];  // 0x4(0x4)
	struct FString ReturnValue;  // 0x8(0x10)

}; 
// Function Engine.VisualLoggerKismetLibrary.LogLocation
// Size: 0x48(Inherited: 0x0) 
struct FLogLocation
{
	struct UObject* WorldContextObject;  // 0x0(0x8)
	struct FVector Location;  // 0x8(0xC)
	char pad_20[4];  // 0x14(0x4)
	struct FString Text;  // 0x18(0x10)
	struct FLinearColor ObjectColor;  // 0x28(0x10)
	float Radius;  // 0x38(0x4)
	struct FName LogCategory;  // 0x3C(0x8)
	char pad_68_1 : 7;  // 0x44(0x1)
	bool bAddToMessageLog : 1;  // 0x44(0x1)
	char pad_69[3];  // 0x45(0x3)

}; 
// Function Engine.VisualLoggerKismetLibrary.RedirectVislog
// Size: 0x10(Inherited: 0x0) 
struct FRedirectVislog
{
	struct UObject* SourceOwner;  // 0x0(0x8)
	struct UObject* DestinationOwner;  // 0x8(0x8)

}; 
// Function Engine.VOIPTalker.BPOnTalkingBegin
// Size: 0x8(Inherited: 0x0) 
struct FBPOnTalkingBegin
{
	struct UAudioComponent* AudioComponent;  // 0x0(0x8)

}; 
// Function Engine.VOIPTalker.RegisterWithPlayerState
// Size: 0x8(Inherited: 0x0) 
struct FRegisterWithPlayerState
{
	struct APlayerState* OwningState;  // 0x0(0x8)

}; 
// Function Engine.VolumetricCloudComponent.SetbUsePerSampleAtmosphericLightTransmittance
// Size: 0x1(Inherited: 0x0) 
struct FSetbUsePerSampleAtmosphericLightTransmittance
{
	char pad_0_1 : 7;  // 0x0(0x1)
	bool NewValue : 1;  // 0x0(0x1)

}; 
// Function Engine.VolumetricCloudComponent.SetPlanetRadius
// Size: 0x4(Inherited: 0x0) 
struct FSetPlanetRadius
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.VolumetricCloudComponent.SetTracingMaxDistance
// Size: 0x4(Inherited: 0x0) 
struct FSetTracingMaxDistance
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.VolumetricCloudComponent.SetShadowTracingDistance
// Size: 0x4(Inherited: 0x0) 
struct FSetShadowTracingDistance
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.VolumetricCloudComponent.SetSkyLightCloudBottomOcclusion
// Size: 0x4(Inherited: 0x0) 
struct FSetSkyLightCloudBottomOcclusion
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.VolumetricCloudComponent.SetStopTracingTransmittanceThreshold
// Size: 0x4(Inherited: 0x0) 
struct FSetStopTracingTransmittanceThreshold
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.VolumetricCloudComponent.SetTracingStartMaxDistance
// Size: 0x4(Inherited: 0x0) 
struct FSetTracingStartMaxDistance
{
	float NewValue;  // 0x0(0x4)

}; 
// Function Engine.WindDirectionalSourceComponent.SetStrength
// Size: 0x4(Inherited: 0x0) 
struct FSetStrength
{
	float InNewStrength;  // 0x0(0x4)

}; 
// Function Engine.WindDirectionalSourceComponent.SetWindType
// Size: 0x1(Inherited: 0x0) 
struct FSetWindType
{
	uint8_t  InNewType;  // 0x0(0x1)

}; 
