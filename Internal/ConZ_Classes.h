#pragma once 
#include <ConZ_Structs.h>
 
 
 
// Class ConZ.AnimNotify_CharacterActionEnd
// Size: 0x38(Inherited: 0x38) 
struct UAnimNotify_CharacterActionEnd : public UAnimNotify
{

}; 



// Class ConZ.PrisonerActionManipulateTrapDescription
// Size: 0x58(Inherited: 0x38) 
struct UPrisonerActionManipulateTrapDescription : public UPrisonerActionDescription
{
	char pad_56[32];  // 0x38(0x20)

}; 



// Class ConZ.AchievementsManagerClient
// Size: 0x2B8(Inherited: 0x220) 
struct AAchievementsManagerClient : public AActor
{
	char pad_544[152];  // 0x220(0x98)

}; 



// Class ConZ.BombDefusalMinigame
// Size: 0x4F8(Inherited: 0x4E8) 
struct ABombDefusalMinigame : public ABombDefusalMinigameBase
{
	char pad_1256[16];  // 0x4E8(0x10)

}; 



// Class ConZ.BirdTargetPoint
// Size: 0x228(Inherited: 0x220) 
struct ABirdTargetPoint : public AActor
{
	char pad_544_1 : 7;  // 0x220(0x1)
	bool IsOccupied : 1;  // 0x220(0x1)
	char pad_545[7];  // 0x221(0x7)

}; 



// Class ConZ.PracticeLockpickingItem
// Size: 0x930(Inherited: 0x910) 
struct APracticeLockpickingItem : public AItem
{
	char pad_2320[8];  // 0x910(0x8)
	struct TArray<struct ULockData*> _possibleLocks;  // 0x918(0x10)
	char pad_2344[8];  // 0x928(0x8)

}; 



// Class ConZ.AdminCommand_DisablePrisonerBodyEffects
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_DisablePrisonerBodyEffects : public UAdminCommand
{

}; 



// Class ConZ.AdjustableSeparator
// Size: 0x280(Inherited: 0x260) 
struct UAdjustableSeparator : public UUserWidget
{
	struct USizeBox* _slotSizeBox;  // 0x260(0x8)
	struct UNamedSlot* _divider;  // 0x268(0x8)
	float _slotMinHeight;  // 0x270(0x4)
	float _slotMaxHeight;  // 0x274(0x4)
	char pad_632[8];  // 0x278(0x8)

}; 



// Class ConZ.DropdownMenuWidget
// Size: 0x288(Inherited: 0x260) 
struct UDropdownMenuWidget : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct UScrollBox* ScrollPanel;  // 0x270(0x8)
	char pad_632[8];  // 0x278(0x8)
	struct UNamedSlot* _panelSlot;  // 0x280(0x8)

}; 



// Class ConZ.CookingPanelWidget
// Size: 0x2B0(Inherited: 0x260) 
struct UCookingPanelWidget : public UUserWidget
{
	char pad_608[8];  // 0x260(0x8)
	struct UTabContainer* _panelTabsContainer;  // 0x268(0x8)
	struct UWidgetSwitcher* _mainSwitcher;  // 0x270(0x8)
	struct UCookingUtilitySlotsPanel* _cookingUtilitySlotsPanel;  // 0x278(0x8)
	struct UCookingRecipesPanel* _cookingRecipesPanel;  // 0x280(0x8)
	float _checkIngredientsValidityPeriod;  // 0x288(0x4)
	float _checkVicinityHeatSourceItemsPeriod;  // 0x28C(0x4)
	float _updateProgressBarColorsPeriod;  // 0x290(0x4)
	char pad_660[28];  // 0x294(0x1C)

}; 



// Class ConZ.RemoveMagazineInsertMagazine
// Size: 0x90(Inherited: 0x90) 
struct URemoveMagazineInsertMagazine : public UWeaponActionReloadSequence
{

}; 



// Class ConZ.AdminCommand_DestroyVehicle
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_DestroyVehicle : public UAdminCommand
{

}; 



// Class ConZ.EntityComponentSetup
// Size: 0x48(Inherited: 0x40) 
struct UEntityComponentSetup : public UEntitySystemObjectSetup
{
	float BoundsRadius;  // 0x40(0x4)
	char pad_68[4];  // 0x44(0x4)

}; 



// Class ConZ.AdminCommand_DestroyCorpsesWithinRadius
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_DestroyCorpsesWithinRadius : public UAdminCommand
{

}; 



// Class ConZ.GrappleActionParameters
// Size: 0xB0(Inherited: 0x30) 
struct UGrappleActionParameters : public UDataAsset
{
	char pad_48_1 : 7;  // 0x30(0x1)
	bool IsGrappleAttackInWater : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct UAnimMontage* GrapplerInitialGrabMontage;  // 0x38(0x8)
	struct UAkAudioEvent* StartGrappleAudioEvent;  // 0x40(0x8)
	struct UAkAudioEvent* StopGrappleAudioEvent;  // 0x48(0x8)
	struct FName AttackerAttachSocketName;  // 0x50(0x8)
	struct FName DefenderAttachBoneName;  // 0x58(0x8)
	float DefenderReleaseOffset;  // 0x60(0x4)
	float DefensePercentageIncreasePerInput;  // 0x64(0x4)
	float DefensePercentageDecreasePerSecond;  // 0x68(0x4)
	float DefenseBarSweetSpotSizePercentage;  // 0x6C(0x4)
	float ReleaseBarPercentageIncreasePerSecond;  // 0x70(0x4)
	float ReleaseBarPercentageDecreasePerSecond;  // 0x74(0x4)
	char pad_120[8];  // 0x78(0x8)
	struct FTransform CameraSpringArmOffset;  // 0x80(0x30)

}; 



// Class ConZ.Inv2021_VirtualizedInventoryElement
// Size: 0x58(Inherited: 0x28) 
struct UInv2021_VirtualizedInventoryElement : public UObject
{
	char pad_40[48];  // 0x28(0x30)

}; 



// Class ConZ.Building
// Size: 0x328(Inherited: 0x220) 
struct ABuilding : public AActor
{
	char pad_544[16];  // 0x220(0x10)
	struct TArray<struct FLadderMarker> _ladderMarkers;  // 0x230(0x10)
	char pad_576[16];  // 0x240(0x10)
	struct TArray<struct FWindowMarker> _windowMarkers;  // 0x250(0x10)
	struct TArray<struct FWindowMarker> _windowMarkersDynamic;  // 0x260(0x10)
	struct TArray<struct FWindowMarkerModifier> _windowMarkerModifiers;  // 0x270(0x10)
	char pad_640_1 : 7;  // 0x280(0x1)
	bool _isCleared : 1;  // 0x280(0x1)
	char pad_641_1 : 7;  // 0x281(0x1)
	bool _isClaimable : 1;  // 0x281(0x1)
	char pad_642[6];  // 0x282(0x6)
	struct TMap<struct FString, struct ADoor*> _doors;  // 0x288(0x50)
	struct TArray<struct UFortificationComponent*> _fortifications;  // 0x2D8(0x10)
	char pad_744[64];  // 0x2E8(0x40)

	void OnRep_WindowMarkerModifiers(); // Function ConZ.Building.OnRep_WindowMarkerModifiers
	void OnRep_Cleared(); // Function ConZ.Building.OnRep_Cleared
}; 



// Class ConZ.ItemStatusWidget
// Size: 0x2F8(Inherited: 0x2F8) 
struct UItemStatusWidget : public UWaypointWidgetBase
{

	void SetTitleText(struct FString Text); // Function ConZ.ItemStatusWidget.SetTitleText
	void SetNameText(struct FString Text); // Function ConZ.ItemStatusWidget.SetNameText
}; 



// Class ConZ.ServerSettingsUIController
// Size: 0x278(Inherited: 0x1D8) 
struct UServerSettingsUIController : public UConZSettingsUIController
{
	char pad_472[160];  // 0x1D8(0xA0)

}; 



// Class ConZ.AchievementsManagerServer
// Size: 0x298(Inherited: 0x220) 
struct AAchievementsManagerServer : public AActor
{
	char pad_544[120];  // 0x220(0x78)

}; 



// Class ConZ.PrisonerActionDrainVehicleFuelIntoItem
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionDrainVehicleFuelIntoItem : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.AdminCommand_CompleteMission
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_CompleteMission : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_DoorDebug
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_DoorDebug : public UAdminCommand
{

}; 



// Class ConZ.ArchitecturalCategoriesDatabase
// Size: 0x40(Inherited: 0x30) 
struct UArchitecturalCategoriesDatabase : public UDataAsset
{
	struct TArray<struct UArchitecturalCategory*> ArchitecturalCategories;  // 0x30(0x10)

}; 



// Class ConZ.PlaceableActorBase
// Size: 0x4E8(Inherited: 0x220) 
struct APlaceableActorBase : public AActor
{
	char pad_544[8];  // 0x220(0x8)
	struct FDbIntegerId _id;  // 0x228(0x8)
	struct UBoxComponent* _boxCollisionComponent;  // 0x230(0x8)
	char pad_568[8];  // 0x238(0x8)
	struct UPlaceableCraftableItem* _craftableItem;  // 0x240(0x8)
	float _ingredientMultiplier;  // 0x248(0x4)
	char pad_588[4];  // 0x24C(0x4)
	struct USceneComponent* _rootComponent;  // 0x250(0x8)
	struct UStaticMeshComponent* _staticMeshComponent_Main;  // 0x258(0x8)
	struct UStaticMeshComponent* _staticMeshComponent_Outline;  // 0x260(0x8)
	struct UStaticMeshComponent* _staticMeshComponent_Depth;  // 0x268(0x8)
	struct UStaticMeshComponent* _queryStaticMeshComponent;  // 0x270(0x8)
	struct UStaticMeshComponent* _directionIndicatorStaticMeshComponent;  // 0x278(0x8)
	struct UMaterialInstanceDynamic* _primaryMaterialAllowed;  // 0x280(0x8)
	struct UMaterialInstanceDynamic* _primaryMaterialDisallowed;  // 0x288(0x8)
	struct UMaterialInstanceDynamic* _outlineMaterial;  // 0x290(0x8)
	struct UMaterialInstanceDynamic* _depthMaterial;  // 0x298(0x8)
	char pad_672[200];  // 0x2A0(0xC8)
	uint8_t  _statusFlags;  // 0x368(0x1)
	char pad_873[31];  // 0x369(0x1F)
	uint8_t  _placementState;  // 0x388(0x1)
	char pad_905[123];  // 0x389(0x7B)
	int32_t _numTracesX;  // 0x404(0x4)
	int32_t _numTracesY;  // 0x408(0x4)
	float _traceHeightFactor;  // 0x40C(0x4)
	float _maxPlacementAngle;  // 0x410(0x4)
	char pad_1044[4];  // 0x414(0x4)
	struct TArray<struct FPlaceableIngredient> _ingredients;  // 0x418(0x10)
	float _widgetHidingDistance;  // 0x428(0x4)
	float _fullWidgetHidingDistance;  // 0x42C(0x4)
	float _widgetSwitchPeriod;  // 0x430(0x4)
	float _minDistanceToShowWidget;  // 0x434(0x4)
	float _syncPeriod;  // 0x438(0x4)
	float _reachabilityMaxDifference;  // 0x43C(0x4)
	float _directionIndicatorOffset;  // 0x440(0x4)
	char pad_1092[4];  // 0x444(0x4)
	struct FText _destroyInteractionText;  // 0x448(0x18)
	struct FVector _replicatedLocation;  // 0x460(0xC)
	struct FVector _replicatedPlacedLocation;  // 0x46C(0xC)
	struct FRotator _replicatedRotation;  // 0x478(0xC)
	char pad_1156[60];  // 0x484(0x3C)
	struct UMaterialInterface* _placementAllowedMaterialOverride;  // 0x4C0(0x8)
	struct UMaterialInterface* _placementDisallowedMaterialOverride;  // 0x4C8(0x8)
	struct UMaterialInterface* _outlineMaterialOverride;  // 0x4D0(0x8)
	struct UMaterialInterface* _depthMaterialOverride;  // 0x4D8(0x8)
	char pad_1248[8];  // 0x4E0(0x8)

	void Server_UpdateState(struct FPlaceableActorStateReplicationHelper State); // Function ConZ.PlaceableActorBase.Server_UpdateState
	void Server_Place(struct FVector Location, struct FRotator Rotation); // Function ConZ.PlaceableActorBase.Server_Place
	void OnRep_ReplicatedRotation(); // Function ConZ.PlaceableActorBase.OnRep_ReplicatedRotation
	void OnRep_ReplicatedPlacedLocation(); // Function ConZ.PlaceableActorBase.OnRep_ReplicatedPlacedLocation
	void OnRep_ReplicatedLocation(); // Function ConZ.PlaceableActorBase.OnRep_ReplicatedLocation
	void OnRep_PlacementState(); // Function ConZ.PlaceableActorBase.OnRep_PlacementState
	void OnRep_Ingredients(); // Function ConZ.PlaceableActorBase.OnRep_Ingredients
	void OnRep_IngredientMultiplier(); // Function ConZ.PlaceableActorBase.OnRep_IngredientMultiplier
	void OnRep_Id(); // Function ConZ.PlaceableActorBase.OnRep_Id
	void OnRep_CraftableItem(); // Function ConZ.PlaceableActorBase.OnRep_CraftableItem
}; 



// Class ConZ.ContainerItemDescriptor
// Size: 0x248(Inherited: 0x28) 
struct UContainerItemDescriptor : public UObject
{
	char pad_40[56];  // 0x28(0x38)
	UObject* _itemClass;  // 0x60(0x8)
	char pad_104[24];  // 0x68(0x18)
	struct FContainerItemDescriptorData _data;  // 0x80(0x60)
	struct TScriptInterface<IInventoryContainer> _owningContainer;  // 0xE0(0x10)
	struct TScriptInterface<IInventoryNode> _owningNode;  // 0xF0(0x10)
	char pad_256[328];  // 0x100(0x148)

}; 



// Class ConZ.Inv2021_InventoryStatics
// Size: 0x28(Inherited: 0x28) 
struct UInv2021_InventoryStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.ActionProgressWidget
// Size: 0x2B0(Inherited: 0x260) 
struct UActionProgressWidget : public UUserWidget
{
	struct FMulticastInlineDelegate ActionProgressFinishedEvent;  // 0x260(0x10)
	struct FMulticastInlineDelegate ActionProgressCancelledEvent;  // 0x270(0x10)
	char pad_640_1 : 7;  // 0x280(0x1)
	bool CanCancel : 1;  // 0x280(0x1)
	char pad_641[11];  // 0x281(0xB)
	float _currentTime;  // 0x28C(0x4)
	float _duration;  // 0x290(0x4)
	char pad_660_1 : 7;  // 0x294(0x1)
	bool _manualMode : 1;  // 0x294(0x1)
	char pad_661[27];  // 0x295(0x1B)

	void UnPauseProgress(); // Function ConZ.ActionProgressWidget.UnPauseProgress
	void SetProgress(float progress); // Function ConZ.ActionProgressWidget.SetProgress
	void PauseProgress(); // Function ConZ.ActionProgressWidget.PauseProgress
	void OnActionProgressFinishedEvent__DelegateSignature(); // DelegateFunction ConZ.ActionProgressWidget.OnActionProgressFinishedEvent__DelegateSignature
	void OnActionProgressCancelledEvent__DelegateSignature(); // DelegateFunction ConZ.ActionProgressWidget.OnActionProgressCancelledEvent__DelegateSignature
	void ExecuteAction(); // Function ConZ.ActionProgressWidget.ExecuteAction
	void CancelAction(); // Function ConZ.ActionProgressWidget.CancelAction
}; 



// Class ConZ.AttributeMapInterface
// Size: 0x28(Inherited: 0x28) 
struct UAttributeMapInterface : public UInterface
{

	void SetStringAttribute(struct FString Name, struct FString Value); // Function ConZ.AttributeMapInterface.SetStringAttribute
	void SetIntAttribute(struct FString Name, int32_t Value); // Function ConZ.AttributeMapInterface.SetIntAttribute
	void SetFloatAttribute(struct FString Name, float Value); // Function ConZ.AttributeMapInterface.SetFloatAttribute
	void SetBoolAttribute(struct FString Name, bool Value); // Function ConZ.AttributeMapInterface.SetBoolAttribute
	bool HasAttribute(struct FString Name); // Function ConZ.AttributeMapInterface.HasAttribute
	struct FString GetStringAttribute(struct FString Name); // Function ConZ.AttributeMapInterface.GetStringAttribute
	int32_t GetIntAttribute(struct FString Name); // Function ConZ.AttributeMapInterface.GetIntAttribute
	float GetFloatAttribute(struct FString Name); // Function ConZ.AttributeMapInterface.GetFloatAttribute
	bool GetBoolAttribute(struct FString Name); // Function ConZ.AttributeMapInterface.GetBoolAttribute
}; 



// Class ConZ.FoliageAssetData
// Size: 0x98(Inherited: 0x28) 
struct UFoliageAssetData : public UAssetUserData
{
	struct FFoliageGeneralData GeneralData;  // 0x28(0x10)
	struct FFoliageEffectsData EffectsData;  // 0x38(0x18)
	struct FFoliageAIPerceptionData AIPerceptionData;  // 0x50(0x2)
	char pad_82[2];  // 0x52(0x2)
	struct FFoliageCanopyData CanopyData;  // 0x54(0x40)
	char pad_148[4];  // 0x94(0x4)

}; 



// Class ConZ.AdminCommand_ListSquads
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ListSquads : public UAdminCommand
{

}; 



// Class ConZ.PrisonerAppearanceDataAsset
// Size: 0xC8(Inherited: 0x30) 
struct UPrisonerAppearanceDataAsset : public UDataAsset
{
	char pad_48_1 : 7;  // 0x30(0x1)
	bool RequiresGameUpgrade : 1;  // 0x30(0x1)
	uint8_t  GameUpgradeRequired;  // 0x31(0x1)
	char pad_50[6];  // 0x32(0x6)
	struct TArray<struct UCharacterMesh*> CharacterMeshes;  // 0x38(0x10)
	struct TMap<struct FName, struct TSoftObjectPtr<UMaterialInstance>> SkinMaterials;  // 0x48(0x50)
	struct FGameplayTag TypeTag;  // 0x98(0x8)
	struct FGameplayTag RaceTag;  // 0xA0(0x8)
	struct FName CharacterAkSwitchValue;  // 0xA8(0x8)
	struct FName LeftEyeSocketName;  // 0xB0(0x8)
	struct FName RightEyeSocketName;  // 0xB8(0x8)
	int32_t DefaultHairStyleIndex;  // 0xC0(0x4)
	char pad_196[4];  // 0xC4(0x4)

}; 



// Class ConZ.CharacterSlot
// Size: 0x2A8(Inherited: 0x260) 
struct UCharacterSlot : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct UConZStandardButton* _profileButton;  // 0x290(0x8)
	struct UButton* _deleteButton;  // 0x298(0x8)
	char pad_672[8];  // 0x2A0(0x8)

	void OnProfileButtonClicked(); // Function ConZ.CharacterSlot.OnProfileButtonClicked
	void OnDeleteButtonClicked(); // Function ConZ.CharacterSlot.OnDeleteButtonClicked
}; 



// Class ConZ.AdminCommand_EndTournamentMode
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_EndTournamentMode : public UAdminCommand
{

}; 



// Class ConZ.AnimNotify_SpawnDefecationEffects
// Size: 0x38(Inherited: 0x38) 
struct UAnimNotify_SpawnDefecationEffects : public UAnimNotify
{

}; 



// Class ConZ.BaseBuildingComponent
// Size: 0x6F0(Inherited: 0x4E0) 
struct UBaseBuildingComponent : public UStaticMeshComponent
{
	struct FString _name;  // 0x4E0(0x10)
	uint8_t  _baseElementType;  // 0x4F0(0x4)
	char pad_1268_1 : 7;  // 0x4F4(0x1)
	bool _forbidPlacementOfOtherElements : 1;  // 0x4F4(0x1)
	char pad_1269_1 : 7;  // 0x4F5(0x1)
	bool _isClimbable : 1;  // 0x4F5(0x1)
	char pad_1270_1 : 7;  // 0x4F6(0x1)
	bool _isBlockingItemPlacement : 1;  // 0x4F6(0x1)
	char pad_1271[1];  // 0x4F7(0x1)
	struct TArray<struct UStaticMesh*> _staticMeshVariations;  // 0x4F8(0x10)
	struct UChoppingRecipeDataAsset* _choppingRecipeAsset;  // 0x508(0x8)
	float _healthPoints;  // 0x510(0x4)
	char pad_1300_1 : 7;  // 0x514(0x1)
	bool _canBeDamaged : 1;  // 0x514(0x1)
	char pad_1301[3];  // 0x515(0x3)
	float _hoursToDecay;  // 0x518(0x4)
	float _hoursToDecayOutsideFlagArea;  // 0x51C(0x4)
	char pad_1312_1 : 7;  // 0x520(0x1)
	bool _isUsedForRespawn : 1;  // 0x520(0x1)
	char pad_1313[3];  // 0x521(0x3)
	float _explosionResistance;  // 0x524(0x4)
	struct UCurveFloat* _collisionDamageModifierFromEnergy;  // 0x528(0x8)
	struct UStaticMesh* _weatherMaskMesh;  // 0x530(0x8)
	char pad_1336_1 : 7;  // 0x538(0x1)
	bool _canBePlacedWithoutFlag : 1;  // 0x538(0x1)
	char pad_1337_1 : 7;  // 0x539(0x1)
	bool _canBePlacedInBuilding : 1;  // 0x539(0x1)
	char pad_1338_1 : 7;  // 0x53A(0x1)
	bool _canBePlacedInRestrictedArea : 1;  // 0x53A(0x1)
	char pad_1339[1];  // 0x53B(0x1)
	int32_t _maxInstancesPerFlagArea;  // 0x53C(0x4)
	struct UPlaceableCraftableItem* _upgradeRecipe;  // 0x540(0x8)
	char pad_1352_1 : 7;  // 0x548(0x1)
	bool _cascadeDestroySnappedElementsOnUpgrade : 1;  // 0x548(0x1)
	char pad_1353_1 : 7;  // 0x549(0x1)
	bool _ignoreDisabledBaseBuildingFlag : 1;  // 0x549(0x1)
	char pad_1354_1 : 7;  // 0x54A(0x1)
	bool _isTileable : 1;  // 0x54A(0x1)
	char pad_1355_1 : 7;  // 0x54B(0x1)
	bool _mustBePlacedOnFoundation : 1;  // 0x54B(0x1)
	char pad_1356_1 : 7;  // 0x54C(0x1)
	bool _canEverBePlacedOnFoundation : 1;  // 0x54C(0x1)
	char pad_1357_1 : 7;  // 0x54D(0x1)
	bool _canBePlacedOnOtherBaseElements : 1;  // 0x54D(0x1)
	char pad_1358_1 : 7;  // 0x54E(0x1)
	bool _canBePlacedWithoutSnapping : 1;  // 0x54E(0x1)
	char pad_1359_1 : 7;  // 0x54F(0x1)
	bool _shouldIgnoreSelfWhilePlacing : 1;  // 0x54F(0x1)
	char pad_1360_1 : 7;  // 0x550(0x1)
	bool _canBeGroundedOnOtherElements : 1;  // 0x550(0x1)
	char _maxHeightLevel;  // 0x551(0x1)
	char pad_1362[2];  // 0x552(0x2)
	float _maxHeightDifference;  // 0x554(0x4)
	char pad_1368_1 : 7;  // 0x558(0x1)
	bool _addRandomRotation : 1;  // 0x558(0x1)
	char pad_1369_1 : 7;  // 0x559(0x1)
	bool _mustGroundAllPoints : 1;  // 0x559(0x1)
	char pad_1370_1 : 7;  // 0x55A(0x1)
	bool _mustBePlacedUpright : 1;  // 0x55A(0x1)
	uint8_t  _placementHeightType;  // 0x55B(0x1)
	char pad_1372_1 : 7;  // 0x55C(0x1)
	bool _useSimpleCollisionForOverlaps : 1;  // 0x55C(0x1)
	char pad_1373[3];  // 0x55D(0x3)
	struct FRotator _maxRotationWhilePlacing;  // 0x560(0xC)
	char pad_1388_1 : 7;  // 0x56C(0x1)
	bool _useEncapsulationTestWhenSnapping : 1;  // 0x56C(0x1)
	char pad_1389[3];  // 0x56D(0x3)
	struct TArray<struct FElementSnapMarker> _elementSnapMarkers;  // 0x570(0x10)
	struct TArray<struct FBaseBuildingSizeVariation> _sizeVariations;  // 0x580(0x10)
	char pad_1424[4];  // 0x590(0x4)
	float _sizeVariationsSpacing;  // 0x594(0x4)
	float _repairTime;  // 0x598(0x4)
	char pad_1436[4];  // 0x59C(0x4)
	struct FRepairableParams _repairableParams;  // 0x5A0(0x38)
	float _experienceAwardForBuilding;  // 0x5D8(0x4)
	char pad_1500[4];  // 0x5DC(0x4)
	struct TArray<struct UParticleSystem*> _destructionParticles;  // 0x5E0(0x10)
	struct TArray<struct FTransform> _destructionParticlesSpawnTransforms;  // 0x5F0(0x10)
	struct UAkAudioEvent* _destructionSound;  // 0x600(0x8)
	char pad_1544_1 : 7;  // 0x608(0x1)
	bool _isDoor : 1;  // 0x608(0x1)
	char pad_1545[7];  // 0x609(0x7)
	ADoor* _doorClass;  // 0x610(0x8)
	char pad_1560_1 : 7;  // 0x618(0x1)
	bool _hasLadder : 1;  // 0x618(0x1)
	char pad_1561[7];  // 0x619(0x7)
	struct TArray<struct FLadderMarker> _ladderMarkers;  // 0x620(0x10)
	struct TArray<struct FBaseElementDamageZone> _damageZones;  // 0x630(0x10)
	char pad_1600_1 : 7;  // 0x640(0x1)
	bool _shouldDestroyElementsOnTopWhenDestroyed : 1;  // 0x640(0x1)
	char pad_1601[3];  // 0x641(0x3)
	float _destructionTime;  // 0x644(0x4)
	char pad_1608_1 : 7;  // 0x648(0x1)
	bool _shouldRemoveIntersectingElementsOnDestroy : 1;  // 0x648(0x1)
	char pad_1609[7];  // 0x649(0x7)
	struct TArray<struct FBaseElementDestructionZone> _destructionZones;  // 0x650(0x10)
	char pad_1632_1 : 7;  // 0x660(0x1)
	bool _useAsReplenishableResource : 1;  // 0x660(0x1)
	char pad_1633[7];  // 0x661(0x7)
	struct FReplenishableResourceDescription _replenishableResourceDescription;  // 0x668(0x88)

}; 



// Class ConZ.ModularTooltipElementData_Timer
// Size: 0x58(Inherited: 0x28) 
struct UModularTooltipElementData_Timer : public UModularTooltipElementData
{
	char pad_40[48];  // 0x28(0x30)

}; 



// Class ConZ.FoodItem
// Size: 0x9B0(Inherited: 0x910) 
struct AFoodItem : public AItem
{
	float AccumulatedFatigueBonus;  // 0x910(0x4)
	float ThermalConductivityFactor;  // 0x914(0x4)
	float FreezingTemperature;  // 0x918(0x4)
	float RoomTemperature;  // 0x91C(0x4)
	char pad_2336_1 : 7;  // 0x920(0x1)
	bool Spoilable : 1;  // 0x920(0x1)
	char pad_2337[3];  // 0x921(0x3)
	float ShelfLife;  // 0x924(0x4)
	float SpoilageRateFrozen;  // 0x928(0x4)
	float SpoilageRateModifierWhileSealed;  // 0x92C(0x4)
	char pad_2352_1 : 7;  // 0x930(0x1)
	bool IsConsumable : 1;  // 0x930(0x1)
	char pad_2353_1 : 7;  // 0x931(0x1)
	bool CanCheckTaste : 1;  // 0x931(0x1)
	char pad_2354[6];  // 0x932(0x6)
	struct UParticleSystemComponent* SteamComponent;  // 0x938(0x8)
	struct UParticleSystem* SteamParticles;  // 0x940(0x8)
	struct UParticleSystemComponent* SmokeComponent;  // 0x948(0x8)
	struct UParticleSystem* SmokeParticles;  // 0x950(0x8)
	struct UStaticMesh* ItemOpenedMesh;  // 0x958(0x8)
	struct UStaticMesh* ItemEmptyMesh;  // 0x960(0x8)
	struct UAkAudioEvent* StartEatingAudioEvent;  // 0x968(0x8)
	struct UAkAudioEvent* StopEatingAudioEvent;  // 0x970(0x8)
	struct UAkAudioEvent* StartCookingAudioEvent;  // 0x978(0x8)
	struct UAkAudioEvent* StopCookingAudioEvent;  // 0x980(0x8)
	UGameResourceType* _resourceTypeForConsumption;  // 0x988(0x8)
	float _caloriesBonus;  // 0x990(0x4)
	float _catchSicknessModifier;  // 0x994(0x4)
	char pad_2456_1 : 7;  // 0x998(0x1)
	bool _itemOpened : 1;  // 0x998(0x1)
	char pad_2457[3];  // 0x999(0x3)
	float _temperature;  // 0x99C(0x4)
	char pad_2464[16];  // 0x9A0(0x10)

	void OnRep_ItemOpened(); // Function ConZ.FoodItem.OnRep_ItemOpened
	void OnAudioComponentExpired(); // Function ConZ.FoodItem.OnAudioComponentExpired
}; 



// Class ConZ.ActorStatics
// Size: 0x28(Inherited: 0x28) 
struct UActorStatics : public UBlueprintFunctionLibrary
{

	struct UActorComponent* GetActorComponentByName(struct AActor* Actor, struct FName& Name); // Function ConZ.ActorStatics.GetActorComponentByName
	struct FVector GetActorBoundsCenter(struct AActor* Actor, bool onlyCollidingComponents); // Function ConZ.ActorStatics.GetActorBoundsCenter
}; 



// Class ConZ.MetabolismSkillProgressionTab
// Size: 0x298(Inherited: 0x260) 
struct UMetabolismSkillProgressionTab : public UUserWidget
{
	UUserWidget* SkillProgressBarWidgetClass;  // 0x260(0x8)
	struct UWrapBox* _skillsWrapBox;  // 0x268(0x8)
	char pad_624[8];  // 0x270(0x8)
	uint8_t  _skillType;  // 0x278(0x1)
	char pad_633[7];  // 0x279(0x7)
	struct FText _skillAttributeName;  // 0x280(0x18)

}; 



// Class ConZ.AdminCommand_ChangeCurrencyBalanceToAllOnline
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ChangeCurrencyBalanceToAllOnline : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_AddPrisonerBodyEffect
// Size: 0x90(Inherited: 0x88) 
struct UAdminCommand_AddPrisonerBodyEffect : public UAdminCommand
{
	UPrisonerBodyEffect* _bodyEffectClass;  // 0x88(0x8)

}; 



// Class ConZ.BankCardOperationRequest
// Size: 0x40(Inherited: 0x28) 
struct UBankCardOperationRequest : public UPlayerRpcChannelServerRequest
{
	char pad_40[24];  // 0x28(0x18)

}; 



// Class ConZ.PrisonerActionActivateSlotDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionActivateSlotDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.HeatSourceEntityComponentSetup
// Size: 0x178(Inherited: 0x48) 
struct UHeatSourceEntityComponentSetup : public UEntityComponentSetup
{
	UGameResourceType* ResourceType;  // 0x48(0x8)
	float MaxTemperature;  // 0x50(0x4)
	float InnerRadius;  // 0x54(0x4)
	float OuterRadius;  // 0x58(0x4)
	char pad_92_1 : 7;  // 0x5C(0x1)
	bool AutoFindResourceSupplier : 1;  // 0x5C(0x1)
	char pad_93[3];  // 0x5D(0x3)
	struct FName ResourceSupplierName;  // 0x60(0x8)
	struct FRuntimeFloatCurve ResourceSupplierUsageRateVsHeatIntensity;  // 0x68(0x88)
	struct FRuntimeFloatCurve MaxHeatIntensityVsSupplierResourceAmountRatio;  // 0xF0(0x88)

}; 



// Class ConZ.AdminCommandArgumentDataType_Numeric
// Size: 0x110(Inherited: 0x108) 
struct UAdminCommandArgumentDataType_Numeric : public UAdminCommandArgumentDataTypeBase
{
	float _defaultValue;  // 0x108(0x4)
	char pad_268[4];  // 0x10C(0x4)

}; 



// Class ConZ.WeaponStateFiring
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateFiring : public UWeaponState
{

}; 



// Class ConZ.CraftingRecipeWidget
// Size: 0x308(Inherited: 0x260) 
struct UCraftingRecipeWidget : public UUserWidget
{
	struct UItemClassWidget* ItemWidget;  // 0x260(0x8)
	char pad_616[32];  // 0x268(0x20)
	struct UImage* _itemImage;  // 0x288(0x8)
	struct UTextBlock* _additionalText;  // 0x290(0x8)
	struct UCraftableItem* _craftableItem;  // 0x298(0x8)
	char pad_672[16];  // 0x2A0(0x10)
	struct UAkAudioEvent* _clickSound;  // 0x2B0(0x8)
	UTooltipBase* _tooltipClass;  // 0x2B8(0x8)
	struct UMaterial* _greyedOutMaterial;  // 0x2C0(0x8)
	struct UMaterial* _nonGreyedOutMaterial;  // 0x2C8(0x8)
	struct UEmptySlot* EmptySlot;  // 0x2D0(0x8)
	struct URetainerBox* MainRetainerBox;  // 0x2D8(0x8)
	struct UImage* BackgroundImage;  // 0x2E0(0x8)
	struct UImage* SelectionBox;  // 0x2E8(0x8)
	struct UTexture2D* BoxNextLevel;  // 0x2F0(0x8)
	struct UTexture2D* BoxRedNoComponents;  // 0x2F8(0x8)
	struct UTexture2D* BoxYellowComponentsMissing;  // 0x300(0x8)

	void RecipeSelectedDelegate__DelegateSignature(struct UCraftingRecipeWidget* Widget); // DelegateFunction ConZ.CraftingRecipeWidget.RecipeSelectedDelegate__DelegateSignature
	struct FText GetCaption(); // Function ConZ.CraftingRecipeWidget.GetCaption
	uint8_t  GetAvailabilityState(); // Function ConZ.CraftingRecipeWidget.GetAvailabilityState
}; 



// Class ConZ.AdminCommand_GetUserID
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_GetUserID : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_DestroyZombiesWithinRadius
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_DestroyZombiesWithinRadius : public UAdminCommand
{

}; 



// Class ConZ.PlayerManagementMap
// Size: 0x260(Inherited: 0x260) 
struct UPlayerManagementMap : public UUserWidget
{

}; 



// Class ConZ.PrisonerActionClearWeaponMalfunctionDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionClearWeaponMalfunctionDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.CustomZoneSettingsMenu
// Size: 0x2D0(Inherited: 0x260) 
struct UCustomZoneSettingsMenu : public UBaseMenu
{
	char pad_608[24];  // 0x260(0x18)
	struct UCustomZoneSettingsMap* _map;  // 0x278(0x8)
	struct UCustomZoneSettingsConfigurationsList* _configurationsList;  // 0x280(0x8)
	struct UCustomZoneSettingsRegionsList* _regionsList;  // 0x288(0x8)
	struct UCustomZoneSettingsDetailsDisplay* _detailsDisplay;  // 0x290(0x8)
	struct UCustomZoneSettingsApplyNotification* _applyNotification;  // 0x298(0x8)
	struct UVerticalBox* _messageBoxPanel;  // 0x2A0(0x8)
	struct UButton* _buttonBack;  // 0x2A8(0x8)
	struct UButton* _buttonApply;  // 0x2B0(0x8)
	struct UButton* _buttonReset;  // 0x2B8(0x8)
	char pad_704[16];  // 0x2C0(0x10)

	void CloseMenu(); // Function ConZ.CustomZoneSettingsMenu.CloseMenu
}; 



// Class ConZ.AdminCommand_AddOrRemoveWidget
// Size: 0xD8(Inherited: 0x88) 
struct UAdminCommand_AddOrRemoveWidget : public UAdminCommand
{
	struct TMap<struct FName, UUserWidget*> _widgetClassesByName;  // 0x88(0x50)

}; 



// Class ConZ.AdminCommand_SetFamePointsToAll
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetFamePointsToAll : public UAdminCommand
{

}; 



// Class ConZ.BankATMPointingButton
// Size: 0x528(Inherited: 0x260) 
struct UBankATMPointingButton : public UUserWidget
{
	char pad_608[40];  // 0x260(0x28)
	struct FText _titleText;  // 0x288(0x18)
	char pad_672_1 : 7;  // 0x2A0(0x1)
	bool _isPointingRight : 1;  // 0x2A0(0x1)
	char pad_673[7];  // 0x2A1(0x7)
	struct UImage* _backgroundImage;  // 0x2A8(0x8)
	struct UTextBlock* _titleLabel;  // 0x2B0(0x8)
	char pad_696[8];  // 0x2B8(0x8)
	struct FBankATMPointingButtonStateVisual _normalVisuals;  // 0x2C0(0x98)
	struct FBankATMPointingButtonStateVisual _hoveredVisuals;  // 0x358(0x98)
	struct FBankATMPointingButtonStateVisual _pressedVisuals;  // 0x3F0(0x98)
	struct FBankATMPointingButtonStateVisual _disabledVisuals;  // 0x488(0x98)
	struct UAkAudioEvent* _soundOnClicked;  // 0x520(0x8)

}; 



// Class ConZ.AdminCommand_DumpWetnessDebug
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_DumpWetnessDebug : public UAdminCommand
{

}; 



// Class ConZ.CombinationLockGetCombinationResponse
// Size: 0x30(Inherited: 0x28) 
struct UCombinationLockGetCombinationResponse : public UPlayerRpcChannelServerResponse
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.RemoveMagazineRemoveCartridge
// Size: 0x58(Inherited: 0x50) 
struct URemoveMagazineRemoveCartridge : public UWeaponActionUnloadAmmoSequence
{
	struct FName MontageEndSectionName;  // 0x50(0x8)

}; 



// Class ConZ.AdminCommand
// Size: 0x88(Inherited: 0x28) 
struct UAdminCommand : public UObject
{
	struct FString _verb;  // 0x28(0x10)
	struct TArray<struct FAdminCommandArgumentDescription> _argumentDescriptions;  // 0x38(0x10)
	int32_t _numberOfRequiredArguments;  // 0x48(0x4)
	int32_t _numberOfRepeatingArguments;  // 0x4C(0x4)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool _isEnabled : 1;  // 0x50(0x1)
	char pad_81_1 : 7;  // 0x51(0x1)
	bool _isEnabledInShippingBuild : 1;  // 0x51(0x1)
	char pad_82_1 : 7;  // 0x52(0x1)
	bool _isAdminStatusRequired : 1;  // 0x52(0x1)
	char pad_83_1 : 7;  // 0x53(0x1)
	bool _isDeveloperStatusRequired : 1;  // 0x53(0x1)
	char pad_84_1 : 7;  // 0x54(0x1)
	bool _shouldExecuteOnServer : 1;  // 0x54(0x1)
	char pad_85_1 : 7;  // 0x55(0x1)
	bool _shouldExecuteOnClient : 1;  // 0x55(0x1)
	char pad_86_1 : 7;  // 0x56(0x1)
	bool _shouldDisableSingleplayerAchievementsIfExecuted : 1;  // 0x56(0x1)
	char pad_87[1];  // 0x57(0x1)
	struct FText _description;  // 0x58(0x18)
	char pad_112[24];  // 0x70(0x18)

	bool Execute(struct TArray<struct FString>& arguments); // Function ConZ.AdminCommand.Execute
	bool CanEverBeExecuted(struct APlayerController* Controller, struct FString& reasonIfNot); // Function ConZ.AdminCommand.CanEverBeExecuted
	bool CanBeExecuted(struct APlayerController* Controller, struct FString& reasonIfNot); // Function ConZ.AdminCommand.CanBeExecuted
}; 



// Class ConZ.AdminCommand_ListFlags
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ListFlags : public UAdminCommand
{

}; 



// Class ConZ.FishSpawningPreset
// Size: 0x38(Inherited: 0x30) 
struct UFishSpawningPreset : public UDataAsset
{
	float SpawningChance;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)

}; 



// Class ConZ.AdminCommand_AdminLight
// Size: 0x98(Inherited: 0x88) 
struct UAdminCommand_AdminLight : public UAdminCommand
{
	UAdminLight* _adminLightComponent;  // 0x88(0x8)
	float _maxIntensityMultiplier;  // 0x90(0x4)
	char pad_148[4];  // 0x94(0x4)

}; 



// Class ConZ.CheckAssetNamesCommandlet
// Size: 0x80(Inherited: 0x80) 
struct UCheckAssetNamesCommandlet : public UCommandlet
{

}; 



// Class ConZ.AdminCommand_RemovePrisonerBodyEffect
// Size: 0x90(Inherited: 0x88) 
struct UAdminCommand_RemovePrisonerBodyEffect : public UAdminCommand
{
	UPrisonerBodyEffect* _bodyEffectClass;  // 0x88(0x8)

}; 



// Class ConZ.GameEventLocationMarker
// Size: 0x418(Inherited: 0x220) 
struct AGameEventLocationMarker : public AActor
{
	struct FText LocationName;  // 0x220(0x18)
	struct UTexture2D* LocationImage;  // 0x238(0x8)
	struct UTexture2D* LocationImageGrayscale;  // 0x240(0x8)
	char pad_584_1 : 7;  // 0x248(0x1)
	bool EligibleForRandomPick : 1;  // 0x248(0x1)
	char pad_585[7];  // 0x249(0x7)
	AGameEventBase* GameEventClass;  // 0x250(0x8)
	struct FGameEventParameters GameEventParameters;  // 0x258(0x188)
	AGameEventBorder* BorderClass;  // 0x3E0(0x8)
	struct FVector AreaCenterOffset;  // 0x3E8(0xC)
	float Radius;  // 0x3F4(0x4)
	struct TArray<struct FSpawnArea> SpawnAreas;  // 0x3F8(0x10)
	struct USphereComponent* Sphere;  // 0x408(0x8)
	struct UBillboardComponent* Sprite;  // 0x410(0x8)

	struct FVector GetAreaCenter(); // Function ConZ.GameEventLocationMarker.GetAreaCenter
	struct AGameEventBase* CreateGameEvent(); // Function ConZ.GameEventLocationMarker.CreateGameEvent
	struct AGameEventBorder* CreateBorder(); // Function ConZ.GameEventLocationMarker.CreateBorder
}; 



// Class ConZ.RadioCategory
// Size: 0x40(Inherited: 0x28) 
struct URadioCategory : public UObject
{
	struct TArray<struct URadioTrack*> Tracks;  // 0x28(0x10)
	int32_t _index;  // 0x38(0x4)
	char pad_60[4];  // 0x3C(0x4)

	struct URadioTrack* ProvideNextRadioTrack(); // Function ConZ.RadioCategory.ProvideNextRadioTrack
}; 



// Class ConZ.PrisonerBodyConditionInteraction
// Size: 0x80(Inherited: 0x28) 
struct UPrisonerBodyConditionInteraction : public UObject
{
	struct FText _name;  // 0x28(0x18)
	float _actionDurationVsPhysicianSkillLevel[5];  // 0x40(0x14)
	float _experiencePointsToGainVsPhysicianSkillLevel[5];  // 0x54(0x14)
	uint8_t  _beginInteractionMontage;  // 0x68(0x1)
	uint8_t  _endInteractionMontage;  // 0x69(0x1)
	char pad_106[6];  // 0x6A(0x6)
	struct UAkAudioEvent* _beginInteractionPatientAudioEvent;  // 0x70(0x8)
	struct UAkAudioEvent* _endInteractionPatientAudioEvent;  // 0x78(0x8)

}; 



// Class ConZ.MetabolismTitleAndAPB
// Size: 0x2B0(Inherited: 0x260) 
struct UMetabolismTitleAndAPB : public UUserWidget
{
	struct FText Title;  // 0x260(0x18)
	struct UTextBlock* _titleText;  // 0x278(0x8)
	struct UImage* _background;  // 0x280(0x8)
	struct UMetabolismAdvancedProgressBar* _apb_ValueAndProgress;  // 0x288(0x8)
	struct FDataTableRowHandle _backgroundColor;  // 0x290(0x10)
	struct FDataTableRowHandle _titleTextColor;  // 0x2A0(0x10)

}; 



// Class ConZ.BankATMMinigameConfiguration
// Size: 0x60(Inherited: 0x48) 
struct UBankATMMinigameConfiguration : public UMinigameConfiguration
{
	char pad_72[24];  // 0x48(0x18)

}; 



// Class ConZ.AdminCommand_ListSpawnedAnimals
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ListSpawnedAnimals : public UAdminCommand
{

}; 



// Class ConZ.AviationSkill
// Size: 0x5D8(Inherited: 0xB0) 
struct UAviationSkill : public UVehicleHandlingSkill
{
	struct FVehicleHandlingExperienceAwards NoSkillExperienceAwards;  // 0xB0(0x8)
	struct FVehicleHandlingExperienceAwards BasicSkillExperienceAwards;  // 0xB8(0x8)
	struct FVehicleHandlingExperienceAwards MediumSkillExperienceAwards;  // 0xC0(0x8)
	struct FVehicleHandlingExperienceAwards AdvancedSkillExperienceAwards;  // 0xC8(0x8)
	struct FVehicleHandlingExperienceAwards AboveAdvancedSkillExperienceAwards;  // 0xD0(0x8)
	struct FAviationSkillParametersPerSkillLevel NoSkillParameters;  // 0xD8(0x100)
	struct FAviationSkillParametersPerSkillLevel BasicSkillParameters;  // 0x1D8(0x100)
	struct FAviationSkillParametersPerSkillLevel MediumSkillParameters;  // 0x2D8(0x100)
	struct FAviationSkillParametersPerSkillLevel AdvancedSkillParameters;  // 0x3D8(0x100)
	struct FAviationSkillParametersPerSkillLevel AboveAdvancedSkillParameters;  // 0x4D8(0x100)

}; 



// Class ConZ.AdminCommand_Announce
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_Announce : public UAdminCommand
{

}; 



// Class ConZ.BankATMAccountSummary
// Size: 0x288(Inherited: 0x260) 
struct UBankATMAccountSummary : public UUserWidget
{
	struct UTextBlock* _accountBalance;  // 0x260(0x8)
	struct UHorizontalBox* _ATMOperationalTransactionLimitHorizontalBox;  // 0x268(0x8)
	struct UTextBlock* _ATMOperationalTransactionLimit;  // 0x270(0x8)
	struct UHorizontalBox* _cardOperationalTransactionLimitHorizontalBox;  // 0x278(0x8)
	struct UTextBlock* _cardOperationalTransactionLimit;  // 0x280(0x8)

}; 



// Class ConZ.ChatNotification
// Size: 0x30(Inherited: 0x30) 
struct UChatNotification : public UConZNotification
{

}; 



// Class ConZ.BuildingManager
// Size: 0x3F8(Inherited: 0x220) 
struct ABuildingManager : public AActor
{
	char pad_544[72];  // 0x220(0x48)
	struct TMap<struct ABuilding*, struct FBox2D> _buildings;  // 0x268(0x50)
	struct TMap<struct FDbIntegerId, struct FBuildingsArray> _buildingsOwned;  // 0x2B8(0x50)
	char pad_776[8];  // 0x308(0x8)
	struct FBuildingsReplicationHelper _buildingsDataRepHelper;  // 0x310(0x70)
	char pad_896[120];  // 0x380(0x78)

	void NetMulticast_UpdateBuildingFortificationsState(int32_t dataVersion, struct FString buildingId, struct TArray<struct FFortificationData> FortificationData); // Function ConZ.BuildingManager.NetMulticast_UpdateBuildingFortificationsState
	void NetMulticast_UpdateBuildingData(int32_t dataVersion, struct FString runtimeId, struct FBuildingData BuildingData); // Function ConZ.BuildingManager.NetMulticast_UpdateBuildingData
}; 



// Class ConZ.EntitySystemObjectSetup
// Size: 0x40(Inherited: 0x30) 
struct UEntitySystemObjectSetup : public ULWObjectSetup
{
	char pad_48_1 : 7;  // 0x30(0x1)
	bool TickEnabled : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	float TickInterval;  // 0x34(0x4)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool CanEverTickOnServer : 1;  // 0x38(0x1)
	char pad_57_1 : 7;  // 0x39(0x1)
	bool CanEverTickOnClient : 1;  // 0x39(0x1)
	char pad_58[6];  // 0x3A(0x6)

}; 



// Class ConZ.InteractionComponent
// Size: 0x278(Inherited: 0xB0) 
struct UInteractionComponent : public UActorComponent
{
	char pad_176[8];  // 0xB0(0x8)
	float ExamineActionDuration;  // 0xB8(0x4)
	float ExamineReplicationDelay;  // 0xBC(0x4)
	float PickupItemActionDuration;  // 0xC0(0x4)
	float PickupItemReplicationDelay;  // 0xC4(0x4)
	float StoreItemActionDuration;  // 0xC8(0x4)
	float TickFrequency;  // 0xCC(0x4)
	float MinLandscapeInteractionDistanceSquared;  // 0xD0(0x4)
	int32_t SavedGroundSearchLocationsCount;  // 0xD4(0x4)
	AActor* GhostActorToSpawnAfterExamine;  // 0xD8(0x8)
	char pad_224[8];  // 0xE0(0x8)
	int32_t InitialMinNumEmptyContainersToSearchToSpawnGhostActor;  // 0xE8(0x4)
	int32_t InitialMaxNumEmptyContainersToSearchToSpawnGhostActor;  // 0xEC(0x4)
	int32_t MinNumEmptyContainersToSearchToSpawnGhostActor;  // 0xF0(0x4)
	int32_t MaxNumEmptyContainersToSearchToSpawnGhostActor;  // 0xF4(0x4)
	char pad_248_1 : 7;  // 0xF8(0x1)
	bool ShouldSpawnGhostActorRelativeToExaminer : 1;  // 0xF8(0x1)
	char pad_249[3];  // 0xF9(0x3)
	float GhostActorSpawnDistanceToExaminer;  // 0xFC(0x4)
	int64_t ExamineGhostSpawnEndTime;  // 0x100(0x8)
	char pad_264[8];  // 0x108(0x8)
	struct TArray<struct UInteractionAction*> _actions;  // 0x110(0x10)
	char pad_288[240];  // 0x120(0xF0)
	struct FSpawnedItems _replicatedExamineSpawnedItems;  // 0x210(0x18)
	struct FSpawnedItems _replicatedPickupSpawnedItem;  // 0x228(0x18)
	char pad_576[44];  // 0x240(0x2C)
	float _drinkAllowedThreshold;  // 0x26C(0x4)
	float _reexamineFrequency;  // 0x270(0x4)
	char pad_628[4];  // 0x274(0x4)

	void UseItemOnServer(struct AItem* Item, int32_t Usage, float usageWeight, bool Eat); // Function ConZ.InteractionComponent.UseItemOnServer
	void UpdateExistenceOnClient(bool Exists); // Function ConZ.InteractionComponent.UpdateExistenceOnClient
	void UnspawnExaminedItemsOnServer(bool destroyItems); // Function ConZ.InteractionComponent.UnspawnExaminedItemsOnServer
	void UnexamineItemOnServer(struct AItem* Item); // Function ConZ.InteractionComponent.UnexamineItemOnServer
	void UnexamineItemOnClient(struct AItem* Item); // Function ConZ.InteractionComponent.UnexamineItemOnClient
	void UncraftItemOnServer(struct AItem* Item); // Function ConZ.InteractionComponent.UncraftItemOnServer
	void StopExamining(); // Function ConZ.InteractionComponent.StopExamining
	void Server_UpdateLockHPOnServer(struct UObject* Lockpickable, float lockHP); // Function ConZ.InteractionComponent.Server_UpdateLockHPOnServer
	void Server_RemoveLockOnServer(struct UObject* Lockpickable); // Function ConZ.InteractionComponent.Server_RemoveLockOnServer
	void Server_InteractWithBaseElement(uint8_t  interactionType, struct FConZBaseInteractionData baseData, struct FConZBaseElementInteractionData elementData); // Function ConZ.InteractionComponent.Server_InteractWithBaseElement
	void Server_FindOrCreateGardenSlotMeshComponentForInteraction(struct UStaticMesh* PlantMesh); // Function ConZ.InteractionComponent.Server_FindOrCreateGardenSlotMeshComponentForInteraction
	void PickupItemOnServer(struct UMeshComponent* MeshComponent, struct FMeshInstanceId InstanceId, struct UStaticMesh* StaticMesh, struct FVector pickupLocation, uint8_t  Operation); // Function ConZ.InteractionComponent.PickupItemOnServer
	void PickupItemOnClients(struct UMeshComponent* MeshComponent, struct FMeshInstanceId InstanceId, struct UStaticMesh* StaticMesh, struct FVector pickupLocation); // Function ConZ.InteractionComponent.PickupItemOnClients
	void OpenItemOnServer(struct AFoodItem* FoodItem, struct AItem* openingItem); // Function ConZ.InteractionComponent.OpenItemOnServer
	void OnRep_PickupSpawnedItem(); // Function ConZ.InteractionComponent.OnRep_PickupSpawnedItem
	void OnRep_ExamineSpawnedItems(); // Function ConZ.InteractionComponent.OnRep_ExamineSpawnedItems
	void NetMulticast_UpdateLockHPOnClients(struct UObject* Lockpickable, float lockHP); // Function ConZ.InteractionComponent.NetMulticast_UpdateLockHPOnClients
	void FinishPickupItemOnServer(); // Function ConZ.InteractionComponent.FinishPickupItemOnServer
	void FinishExaminePrisonerOnServer(struct APrisoner* Prisoner); // Function ConZ.InteractionComponent.FinishExaminePrisonerOnServer
	void FinishExamineObjectOnServer(); // Function ConZ.InteractionComponent.FinishExamineObjectOnServer
	void FillWaterOnServer(struct AItem* Item, float Ratio, float Salinity, UGameResourceType* ResourceType); // Function ConZ.InteractionComponent.FillWaterOnServer
	void ExecuteInteractionOnServer(struct AItem* interactionItem, uint8_t  Interaction, struct FServerCraftableItem CraftableItem); // Function ConZ.InteractionComponent.ExecuteInteractionOnServer
	void ExaminePrisonerOnServer(struct APrisoner* Prisoner); // Function ConZ.InteractionComponent.ExaminePrisonerOnServer
	void ExamineObjectOnServer(struct UMeshComponent* MeshComponent, struct FMeshInstanceId InstanceId, struct FVector instanceLocation, struct UObject* Spawner); // Function ConZ.InteractionComponent.ExamineObjectOnServer
	void CutObjectOnServer(struct AActor* Actor, struct UMeshComponent* MeshComponent, struct FMeshInstanceId InstanceId, struct FVector Location, bool collectOnly); // Function ConZ.InteractionComponent.CutObjectOnServer
	void CutObjectOnClients(struct UMeshComponent* MeshComponent, struct FMeshInstanceId InstanceId); // Function ConZ.InteractionComponent.CutObjectOnClients
	void CraftItemOnServer(struct FServerCraftableItem CraftableItem); // Function ConZ.InteractionComponent.CraftItemOnServer
	void Client_SendGroundSearchLocation(struct FVector Location); // Function ConZ.InteractionComponent.Client_SendGroundSearchLocation
	void ChopOnServer(struct UObject* choppedObject); // Function ConZ.InteractionComponent.ChopOnServer
	void CheckExistenceOnServer(struct UMeshComponent* MeshComponent, struct FMeshInstanceId InstanceId); // Function ConZ.InteractionComponent.CheckExistenceOnServer
}; 



// Class ConZ.AdminCommand_BanPlayer
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_BanPlayer : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_CancelVote
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_CancelVote : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_ChangeCurrencyBalance
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ChangeCurrencyBalance : public UAdminCommand
{

}; 



// Class ConZ.ExteriorCharacterSpawnerComponent
// Size: 0x240(Inherited: 0x230) 
struct UExteriorCharacterSpawnerComponent : public UCharacterSpawnerComponent
{
	uint8_t  Range;  // 0x230(0x1)
	char pad_561[15];  // 0x231(0xF)

}; 



// Class ConZ.DoorUpgradeWidget
// Size: 0x360(Inherited: 0x2F8) 
struct UDoorUpgradeWidget : public UWaypointWidgetBase
{
	struct UVerticalBox* _lockSlotsBox;  // 0x2F8(0x8)
	struct UVerticalBox* _protectionSlotsBox;  // 0x300(0x8)
	struct UVerticalBox* _sensorSlotsBox;  // 0x308(0x8)
	struct UVerticalBox* _bcuLockSlotBox;  // 0x310(0x8)
	struct ADoor* _door;  // 0x318(0x8)
	char pad_800[64];  // 0x320(0x40)

}; 



// Class ConZ.AdminCommand_ChangeCurrencyBalanceToAll
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ChangeCurrencyBalanceToAll : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_CharacterSpawner
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_CharacterSpawner : public UAdminCommand
{

}; 



// Class ConZ.EntityDebuggerEntitySetup
// Size: 0x90(Inherited: 0x80) 
struct UEntityDebuggerEntitySetup : public UEntitySetup
{
	char pad_128_1 : 7;  // 0x80(0x1)
	bool DrawQuerySphere : 1;  // 0x80(0x1)
	char pad_129_1 : 7;  // 0x81(0x1)
	bool DrawTopLevelEntitiesOnly : 1;  // 0x81(0x1)
	char pad_130_1 : 7;  // 0x82(0x1)
	bool DrawEntityBounds : 1;  // 0x82(0x1)
	char pad_131_1 : 7;  // 0x83(0x1)
	bool DrawEntityDebugStrings : 1;  // 0x83(0x1)
	char pad_132_1 : 7;  // 0x84(0x1)
	bool DrawEntityComponentDebugStrings : 1;  // 0x84(0x1)
	char pad_133[3];  // 0x85(0x3)
	int32_t DebugStringLineBreak;  // 0x88(0x4)
	char pad_140[4];  // 0x8C(0x4)

}; 



// Class ConZ.ExpirableItemComponent
// Size: 0xD8(Inherited: 0xC8) 
struct UExpirableItemComponent : public UItemComponent
{
	int64_t _expirationTimeSeconds;  // 0xC8(0x8)
	int64_t _itemCreatedTimestamp;  // 0xD0(0x8)

}; 



// Class ConZ.VideoSettingsManager
// Size: 0x28(Inherited: 0x28) 
struct UVideoSettingsManager : public UObject
{

}; 



// Class ConZ.AudibleButtonComponent
// Size: 0x78(Inherited: 0x28) 
struct UAudibleButtonComponent : public UObject
{
	struct TMap<uint8_t , struct UAkAudioEvent*> _audioEvents;  // 0x28(0x50)

}; 



// Class ConZ.AdminCommand_ClearFakeName
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ClearFakeName : public UAdminCommand
{

}; 



// Class ConZ.DroneTargetData
// Size: 0x30(Inherited: 0x28) 
struct UDroneTargetData : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.FireworksItemState
// Size: 0x110(Inherited: 0x100) 
struct UFireworksItemState : public UItemState
{
	char pad_256_1 : 7;  // 0x100(0x1)
	bool IsFiring : 1;  // 0x100(0x1)
	char pad_257[3];  // 0x101(0x3)
	int32_t LaunchedShells;  // 0x104(0x4)
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.AdminCommand_CrashMajestically
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_CrashMajestically : public UAdminCommand
{

}; 



// Class ConZ.DropZoneSlot
// Size: 0x250(Inherited: 0x220) 
struct ADropZoneSlot : public AActor
{
	char pad_544[8];  // 0x220(0x8)
	struct UStaticMeshComponent* Mesh;  // 0x228(0x8)
	float ActivationDuration;  // 0x230(0x4)
	char pad_564[4];  // 0x234(0x4)
	struct UStaticMesh* UnlockedMesh;  // 0x238(0x8)
	struct UAkAudioEvent* ActivateSound;  // 0x240(0x8)
	struct ADropZoneGameEvent* _gameEvent;  // 0x248(0x8)

	void SetGameEvent(struct ADropZoneGameEvent* gameEvent); // Function ConZ.DropZoneSlot.SetGameEvent
	void Server_Activate(struct APrisoner* Prisoner); // Function ConZ.DropZoneSlot.Server_Activate
	float GetOpeningDuration(); // Function ConZ.DropZoneSlot.GetOpeningDuration
	struct ADropZoneGameEvent* GetGameEvent(); // Function ConZ.DropZoneSlot.GetGameEvent
}; 



// Class ConZ.AdminCommand_CreateEntity
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_CreateEntity : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_ListSpawnedVehicles
// Size: 0x188(Inherited: 0x88) 
struct UAdminCommand_ListSpawnedVehicles : public UAdminCommand
{
	struct FGameplayTagContainer _vehicleSpawnGroupsByCategory[8];  // 0x88(0x100)

}; 



// Class ConZ.AnimNotifyState_WeaponShowAmmunitionMeshes
// Size: 0x48(Inherited: 0x30) 
struct UAnimNotifyState_WeaponShowAmmunitionMeshes : public UAnimNotifyState
{
	char pad_48_1 : 7;  // 0x30(0x1)
	bool showReversed : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct TArray<int32_t> ammoIndices;  // 0x38(0x10)

}; 



// Class ConZ.AdminCommand_DebugWeapon
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_DebugWeapon : public UAdminCommand
{

}; 



// Class ConZ.InventoryContainerClothes
// Size: 0x90(Inherited: 0x28) 
struct UInventoryContainerClothes : public UObject
{
	char pad_40[8];  // 0x28(0x8)
	struct UInventoryContainerWidget2* _widget;  // 0x30(0x8)
	char pad_56[16];  // 0x38(0x10)
	struct FInventoryContainerClothesData _data;  // 0x48(0x20)
	struct FInventoryContainerClothesData _oldData;  // 0x68(0x20)
	char pad_136[8];  // 0x88(0x8)

	void OnRep_Data(); // Function ConZ.InventoryContainerClothes.OnRep_Data
}; 



// Class ConZ.CargoDropEvent
// Size: 0x310(Inherited: 0x248) 
struct ACargoDropEvent : public AWorldEvent
{
	struct TArray<ACargoDropContainer*> CargoDropClasses;  // 0x248(0x10)
	char pad_600[104];  // 0x258(0x68)
	struct FSpawnCharacterAroundInfo _characterAroundInfo;  // 0x2C0(0x50)

	void Multicast_DisplayNotification(struct FString SectorName, float FallDuration); // Function ConZ.CargoDropEvent.Multicast_DisplayNotification
}; 



// Class ConZ.HeatSourceItemComponent
// Size: 0xE0(Inherited: 0xC8) 
struct UHeatSourceItemComponent : public UItemComponent
{
	struct TArray<struct UFueledHeatSource*> HeatSources;  // 0xC8(0x10)
	char pad_216[8];  // 0xD8(0x8)

}; 



// Class ConZ.AdminCommand_DemolitionSkillDebug
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_DemolitionSkillDebug : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_ListPlayers
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ListPlayers : public UAdminCommand
{

}; 



// Class ConZ.PrisonerBodyConditionUIData_AcuteRadiationSyndrome
// Size: 0x1A8(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_AcuteRadiationSyndrome : public UPrisonerBodyConditionUIData
{
	char pad_416[8];  // 0x1A0(0x8)

}; 



// Class ConZ.AdminCommand_KnockoutPrisoner
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_KnockoutPrisoner : public UAdminCommand
{

}; 



// Class ConZ.BuriableChestItemComponent
// Size: 0x1A0(Inherited: 0x190) 
struct UBuriableChestItemComponent : public UBuriableItemComponent
{
	int64_t _decayInDaysWhenBuried;  // 0x190(0x8)
	char pad_408[8];  // 0x198(0x8)

}; 



// Class ConZ.VicinityPanel3
// Size: 0x540(Inherited: 0x260) 
struct UVicinityPanel3 : public UUserWidget
{
	char pad_608_1 : 7;  // 0x260(0x1)
	bool _isTradingThingy : 1;  // 0x260(0x1)
	char pad_609[7];  // 0x261(0x7)
	struct UWrapBox* _searchedItemsBox;  // 0x268(0x8)
	struct UWrapBox* _vicinityBox;  // 0x270(0x8)
	struct UHorizontalBox* _vicinityContainersBox;  // 0x278(0x8)
	struct UHorizontalBox* _tradingBox;  // 0x280(0x8)
	struct UOverlay* _tradingBoxOverlay;  // 0x288(0x8)
	struct UBadAdjustableSeparator* _adjustableSeparator;  // 0x290(0x8)
	struct TMap<struct UObject*, struct UWidget*> _searchedItems;  // 0x298(0x50)
	struct TMap<struct UObject*, struct UWidget*> _vicinityItems;  // 0x2E8(0x50)
	struct TMap<struct UObject*, struct UWidget*> _vicinityContainers;  // 0x338(0x50)
	struct TMap<struct UObject*, struct UWidget*> _tradingItems;  // 0x388(0x50)
	char pad_984[160];  // 0x3D8(0xA0)
	struct TMap<struct UCheckBox*, struct FClassesArray> _filterCheckboxes;  // 0x478(0x50)
	struct TMap<struct FName, struct FClassesArray> _filterCheckboxesNames;  // 0x4C8(0x50)
	struct FMargin _vicinityContainersPadding;  // 0x518(0x10)
	char pad_1320[24];  // 0x528(0x18)

	void OnVicinityContainerInitialized(struct TScriptInterface<IInventoryNode>& Item, struct UItemWidget2* Widget); // Function ConZ.VicinityPanel3.OnVicinityContainerInitialized
	void OnVicinityContainerClosed(struct UItemWidget2* Widget); // Function ConZ.VicinityPanel3.OnVicinityContainerClosed
	void OnItemActorDestroyed(struct AActor* Actor); // Function ConZ.VicinityPanel3.OnItemActorDestroyed
	void OnCheckBoxCheckedChanged(bool checked); // Function ConZ.VicinityPanel3.OnCheckBoxCheckedChanged
}; 



// Class ConZ.AdminCommand_DestroyAllItemsWithinRadius
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_DestroyAllItemsWithinRadius : public UAdminCommand
{

}; 



// Class ConZ.MetabolismCurrentStatLight
// Size: 0x2B8(Inherited: 0x260) 
struct UMetabolismCurrentStatLight : public UUserWidget
{
	struct FText Title;  // 0x260(0x18)
	struct UImage* _valueBackground;  // 0x278(0x8)
	struct UTextBlock* _title;  // 0x280(0x8)
	struct URichTextBlock* _value;  // 0x288(0x8)
	struct FDataTableRowHandle _normalBackgroundColor;  // 0x290(0x10)
	struct FDataTableRowHandle _alertedBackgroundColor;  // 0x2A0(0x10)
	char pad_688[8];  // 0x2B0(0x8)

}; 



// Class ConZ.FollowsMouseActor
// Size: 0x228(Inherited: 0x220) 
struct AFollowsMouseActor : public AActor
{
	float DistanceFromCamera;  // 0x220(0x4)
	char pad_548[4];  // 0x224(0x4)

}; 



// Class ConZ.AdminCommand_ListPrisonerBodyEffects
// Size: 0x90(Inherited: 0x88) 
struct UAdminCommand_ListPrisonerBodyEffects : public UAdminCommand
{
	UPrisonerBodyEffect* _bodyEffectClass;  // 0x88(0x8)

}; 



// Class ConZ.CookingCategoryButtonWidget
// Size: 0x300(Inherited: 0x260) 
struct UCookingCategoryButtonWidget : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct UTextBlock* _titleTextBlock;  // 0x270(0x8)
	struct UImage* _buttonImageWidget;  // 0x278(0x8)
	struct UImage* _overallBorder;  // 0x280(0x8)
	struct FGameplayTag _cookingCategory;  // 0x288(0x8)
	struct FGameplayTag _navigationTag;  // 0x290(0x8)
	struct FText _titleText;  // 0x298(0x18)
	struct TSoftObjectPtr<UTexture2D> _buttonImage;  // 0x2B0(0x28)
	struct FLinearColor _unHoveredBorderColor;  // 0x2D8(0x10)
	struct FLinearColor _hoveredBorderColor;  // 0x2E8(0x10)
	struct UAudibleButtonComponent* _audibleButtonComponent;  // 0x2F8(0x8)

}; 



// Class ConZ.AdminCommand_DestroyAllVehicles
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_DestroyAllVehicles : public UAdminCommand
{

}; 



// Class ConZ.Bedroll
// Size: 0xA20(Inherited: 0x9C0) 
struct ABedroll : public AClothesItem
{
	struct FDbIntegerId _occupiedUserProfileId;  // 0x9B8(0x8)
	char pad_2504_1 : 7;  // 0x9C8(0x1)
	bool _occupantOnline : 1;  // 0x9C0(0x1)
	struct UStaticMesh* _meshInHands;  // 0x9C8(0x8)
	struct UMaterialInterface* _materialInHands;  // 0x9D0(0x8)
	struct UStaticMesh* _meshOnGround;  // 0x9D8(0x8)
	struct UMaterialInterface* _materialOnGround;  // 0x9E0(0x8)
	float _maxRestHeight;  // 0x9E8(0x4)
	float _damageOverTimeWhenOccupied;  // 0x9EC(0x4)
	float _autoDestructTimeWhenOccupied;  // 0x9F0(0x4)
	char pad_2549[43];  // 0x9F5(0x2B)

	void VirtualizeTimerCallback(); // Function ConZ.Bedroll.VirtualizeTimerCallback
	void SetOccupantOfflineTimerCallback(); // Function ConZ.Bedroll.SetOccupantOfflineTimerCallback
	void OnUserLogout(struct FDbIntegerId UserId); // Function ConZ.Bedroll.OnUserLogout
	void OnUserLogin(struct FDbIntegerId UserId); // Function ConZ.Bedroll.OnUserLogin
	void OnOccupantRemoved(); // Function ConZ.Bedroll.OnOccupantRemoved
	void Multicast_SetVisuals(struct UStaticMesh* StaticMesh, struct UMaterialInterface* Material); // Function ConZ.Bedroll.Multicast_SetVisuals
}; 



// Class ConZ.ItemGroup
// Size: 0x40(Inherited: 0x30) 
struct UItemGroup : public UDataAsset
{
	struct TArray<AItem*> Items;  // 0x30(0x10)

}; 



// Class ConZ.AdminCommand_EnableOrDisableServer
// Size: 0x90(Inherited: 0x88) 
struct UAdminCommand_EnableOrDisableServer : public UAdminCommand
{
	char pad_136_1 : 7;  // 0x88(0x1)
	bool _shouldEnableServer : 1;  // 0x88(0x1)
	char pad_137[7];  // 0x89(0x7)

}; 



// Class ConZ.AdminCommand_DestroyEntity
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_DestroyEntity : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_DistanceDebug
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_DistanceDebug : public UAdminCommand
{

}; 



// Class ConZ.BombDefusalMinigameBase
// Size: 0x4E8(Inherited: 0x2F8) 
struct ABombDefusalMinigameBase : public AMinigame
{
	struct UStaticMeshComponent* _timeBomb;  // 0x2F8(0x8)
	struct UStaticMesh* _splineConnectorMesh;  // 0x300(0x8)
	char pad_776[8];  // 0x308(0x8)
	struct FVector _wireButtonsSize;  // 0x310(0xC)
	char pad_796[4];  // 0x31C(0x4)
	struct USkeletalMeshComponent* _defusalTool;  // 0x320(0x8)
	float _toolMovementSensitivity;  // 0x328(0x4)
	struct FVector _minDefusingToolOffsetFromCenter;  // 0x32C(0xC)
	struct FVector _maxDefusingToolOffsetFromCenter;  // 0x338(0xC)
	char pad_836[4];  // 0x344(0x4)
	struct UMaterialInterface* _greenLedLight;  // 0x348(0x8)
	struct UMaterialInterface* _redLedLight;  // 0x350(0x8)
	struct UMaterialInterface* _yellowLedLight;  // 0x358(0x8)
	struct TArray<struct UStaticMeshComponent*> _ledLights;  // 0x360(0x10)
	struct UStaticMesh* _ledLightMesh;  // 0x370(0x8)
	char pad_888[8];  // 0x378(0x8)
	struct UStaticMesh* _wireMesh;  // 0x380(0x8)
	struct TArray<uint8_t > _wiresEndPositions;  // 0x388(0x10)
	struct TArray<struct FWireDescription> _wires;  // 0x398(0x10)
	char pad_936[16];  // 0x3A8(0x10)
	struct TArray<struct FSplineDescription> _splines;  // 0x3B8(0x10)
	char pad_968[16];  // 0x3C8(0x10)
	int32_t _numberOfWires;  // 0x3D8(0x4)
	int32_t _numberOfWirePoints;  // 0x3DC(0x4)
	int32_t _wiresShuffleIntensity;  // 0x3E0(0x4)
	int32_t _minWiresComplexity;  // 0x3E4(0x4)
	uint8_t  _wiresForwardAxis;  // 0x3E8(0x1)
	char pad_1001[3];  // 0x3E9(0x3)
	float _wiresStartSmoothness;  // 0x3EC(0x4)
	float _wiresEndSmoothness;  // 0x3F0(0x4)
	float _wiresMiddleSmoothness;  // 0x3F4(0x4)
	float _wiresSharpCornerSmoothness;  // 0x3F8(0x4)
	float _maxSegmentSize;  // 0x3FC(0x4)
	float _wirePointsSpreadPositive;  // 0x400(0x4)
	float _wirePointsSpreadNegative;  // 0x404(0x4)
	float _wireHeight;  // 0x408(0x4)
	float _wireVerticalSpacing;  // 0x40C(0x4)
	struct FVector _wirePointsOffset;  // 0x410(0xC)
	float _wireEndOffset;  // 0x41C(0x4)
	struct FVector _additionalWireEndPointOffset;  // 0x420(0xC)
	char pad_1068[4];  // 0x42C(0x4)
	struct UStaticMeshComponent* _cutWireSegment0;  // 0x430(0x8)
	struct UStaticMeshComponent* _cutWireSegment1;  // 0x438(0x8)
	struct UStaticMeshComponent* _cutWireSegment2;  // 0x440(0x8)
	struct UStaticMeshComponent* _cutWireSegment3;  // 0x448(0x8)
	struct UStaticMeshComponent* _cutWireSegment4;  // 0x450(0x8)
	struct UStaticMeshComponent* _cutWireSegment5;  // 0x458(0x8)
	struct UStaticMeshComponent* _uncutWireSegment0;  // 0x460(0x8)
	struct UStaticMeshComponent* _uncutWireSegment1;  // 0x468(0x8)
	struct UStaticMeshComponent* _uncutWireSegment2;  // 0x470(0x8)
	struct UStaticMeshComponent* _uncutWireSegment3;  // 0x478(0x8)
	struct UStaticMeshComponent* _uncutWireSegment4;  // 0x480(0x8)
	struct UStaticMeshComponent* _uncutWireSegment5;  // 0x488(0x8)
	struct UBoxComponent* _wireBox1;  // 0x490(0x8)
	struct UBoxComponent* _wireBox2;  // 0x498(0x8)
	struct UBoxComponent* _wireBox3;  // 0x4A0(0x8)
	struct UBoxComponent* _wireBox4;  // 0x4A8(0x8)
	struct UBoxComponent* _wireBox5;  // 0x4B0(0x8)
	struct UBoxComponent* _wireBox6;  // 0x4B8(0x8)
	struct UAkAudioEvent* _bombDefusalTimerStartSound;  // 0x4C0(0x8)
	struct UAkAudioEvent* _bombDefusalTimerStopSound;  // 0x4C8(0x8)
	struct UAkAudioEvent* _cutWireSound;  // 0x4D0(0x8)
	struct UAkAudioEvent* _bombDefusedSound;  // 0x4D8(0x8)
	char pad_1248[8];  // 0x4E0(0x8)

	void PlayCutWireMontage(); // Function ConZ.BombDefusalMinigameBase.PlayCutWireMontage
}; 



// Class ConZ.BowAttachmentSilencer
// Size: 0x940(Inherited: 0x930) 
struct ABowAttachmentSilencer : public AWeaponAttachment
{
	float _noiseMultiplier;  // 0x930(0x4)
	char pad_2356[12];  // 0x934(0xC)

}; 



// Class ConZ.AdminCommand_DumpAllSquadsInfoList
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_DumpAllSquadsInfoList : public UAdminCommand
{

}; 



// Class ConZ.VehicleServiceRegistry
// Size: 0x110(Inherited: 0xB0) 
struct UVehicleServiceRegistry : public UActorComponent
{
	struct TArray<struct FVehicleServiceData> _serviceData;  // 0xB0(0x10)
	char pad_192[80];  // 0xC0(0x50)

}; 



// Class ConZ.AdminCommand_ScheduleWorldEvent
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ScheduleWorldEvent : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_EnableHuntingClueDebugArrow
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_EnableHuntingClueDebugArrow : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_LogCharacterSpawner
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_LogCharacterSpawner : public UAdminCommand
{

}; 



// Class ConZ.CookingUtilityOverview
// Size: 0x498(Inherited: 0x260) 
struct UCookingUtilityOverview : public UUserWidget
{
	char pad_608[112];  // 0x260(0x70)
	UInteractiveIngredientWidget* _ingredientWidgetClass;  // 0x2D0(0x8)
	UCookingIngredientTooltip* _ingredientWidgetTooltipClass;  // 0x2D8(0x8)
	struct UTextBlock* _utilityTitleText;  // 0x2E0(0x8)
	struct URetainerBox* _recipeTitleTextEffectBox;  // 0x2E8(0x8)
	struct UTextBlock* _recipeTitleText;  // 0x2F0(0x8)
	struct UImage* _heatSourceWarningIcon;  // 0x2F8(0x8)
	struct USizeBox* _mainSwitcherSizeBox;  // 0x300(0x8)
	struct UWidgetSwitcher* _mainSwitcher;  // 0x308(0x8)
	struct UCookingAddRecipeButton* _addRecipeButton;  // 0x310(0x8)
	struct UIngredientsForRecipeWidget* _ingredientsForRecipeWidget;  // 0x318(0x8)
	struct UCookingProgressWidget* _cookingProgressWidget;  // 0x320(0x8)
	struct UCookingFinishedWidget* _cookingFinishedWidget;  // 0x328(0x8)
	struct UTextBlock* _slotOrdinalNumber;  // 0x330(0x8)
	struct UCookingControlButton* _cookAndTimerButton;  // 0x338(0x8)
	struct UCookingControlButton* _cancelButton;  // 0x340(0x8)
	struct USizeBox* _progressBarSizeBox;  // 0x348(0x8)
	struct FLinearColor _hasCookingTimeLeftColor;  // 0x350(0x10)
	struct FLinearColor _cookingTimeOverflowedColor;  // 0x360(0x10)
	struct FSlateBrush _heatSourceWarningIcon_MissingFuel;  // 0x370(0x88)
	struct FSlateBrush _heatSourceWarningIcon_NotTurnedOn;  // 0x3F8(0x88)
	char pad_1152[24];  // 0x480(0x18)

}; 



// Class ConZ.BankATMYesNoConfirmationScreen
// Size: 0x298(Inherited: 0x260) 
struct UBankATMYesNoConfirmationScreen : public UUserWidget
{
	char pad_608[32];  // 0x260(0x20)
	struct UTextBlock* _textDialog;  // 0x280(0x8)
	struct UBankATMPointingButton* _btnCancel;  // 0x288(0x8)
	struct UBankATMPointingButton* _btnYes;  // 0x290(0x8)

}; 



// Class ConZ.CommonCraftingRecipe
// Size: 0x88(Inherited: 0x88) 
struct UCommonCraftingRecipe : public UBaseCraftingRecipe
{

}; 



// Class ConZ.AdminCommand_EquipParachute
// Size: 0x90(Inherited: 0x88) 
struct UAdminCommand_EquipParachute : public UAdminCommand
{
	AClothesItem* _parachuteClass;  // 0x88(0x8)

}; 



// Class ConZ.AdminCommand_SetAirplaneMaxVelocity
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetAirplaneMaxVelocity : public UAdminCommand
{

}; 



// Class ConZ.Inv2021_InventoryPosition2DObject
// Size: 0x40(Inherited: 0x28) 
struct UInv2021_InventoryPosition2DObject : public UInv2021_InventoryPositionObject
{
	char pad_40[24];  // 0x28(0x18)

}; 



// Class ConZ.AdminCommand_SetMountedVehicleProperty
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetMountedVehicleProperty : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_ExecuteConsoleCommand
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ExecuteConsoleCommand : public UAdminCommand
{

}; 



// Class ConZ.ValueProviderInteger
// Size: 0x28(Inherited: 0x28) 
struct UValueProviderInteger : public UInterface
{

}; 



// Class ConZ.AdminCommand_ExecutePrisonerBodyConditionInteraction
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ExecutePrisonerBodyConditionInteraction : public UAdminCommand
{

}; 



// Class ConZ.PrisonerActionDestroyGardenDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionDestroyGardenDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.DecontaminateData
// Size: 0x48(Inherited: 0x30) 
struct UDecontaminateData : public UDataAsset
{
	USkill* SkillToIncrease;  // 0x30(0x8)
	float SkillIncreaseAmount;  // 0x38(0x4)
	float SkillIncreaseModifier;  // 0x3C(0x4)
	float RadiationDecontaminationAmountPerSoapUse;  // 0x40(0x4)
	char pad_68[4];  // 0x44(0x4)

}; 



// Class ConZ.PrisonerBodyCondition_BleedingInjury
// Size: 0x530(Inherited: 0xC0) 
struct UPrisonerBodyCondition_BleedingInjury : public UPrisonerBodyCondition_Injury
{
	char pad_192[8];  // 0xC0(0x8)
	struct FRuntimeFloatCurve _selfStabilizationDurationVsSeverity;  // 0xC8(0x88)
	struct FRuntimeFloatCurve _stabilizationDurationVsBloodLossRatio;  // 0x150(0x88)
	struct FRuntimeFloatCurve _destabilizationActionDifficultyRatioVsSeverity;  // 0x1D8(0x88)
	UNotificationDescription* _destabilizationNotification;  // 0x260(0x8)
	float _destabilizationNotificationCooldown;  // 0x268(0x4)
	char pad_620[4];  // 0x26C(0x4)
	struct FRuntimeFloatCurve _recoveryDurationVsBloodLossRatio;  // 0x270(0x88)
	UPrisonerBodySymptom_Bleeding* _bleedingSymptomClass;  // 0x2F8(0x8)
	struct UPrisonerBodySymptomCause_Bleeding* _bleedingSymptomCause;  // 0x300(0x8)
	UPrisonerBodySymptom_Pain* _painSymptomClass;  // 0x308(0x8)
	struct UPrisonerBodySymptomCause_Pain* _painSymptomCause;  // 0x310(0x8)
	struct FRuntimeFloatCurve _painIntensityVsSeverity;  // 0x318(0x88)
	float _limpingIntensityPerLegsDamageRatio;  // 0x3A0(0x4)
	float _legsBleedingSeverityThresholdToLimp;  // 0x3A4(0x4)
	struct UPrisonerBodyMuscleGroupToInfectionClassMappings* _infectionClassMappings;  // 0x3A8(0x8)
	struct UPrisonerBodyCondition_Infection* _infection;  // 0x3B0(0x8)
	float _contaminationIncreaseBaseRate;  // 0x3B8(0x4)
	char pad_956[4];  // 0x3BC(0x4)
	struct FRuntimeFloatCurve _contaminationIncreaseRateMultiplierVsSeverity;  // 0x3C0(0x88)
	struct FRuntimeFloatCurve _contaminationIncreaseRateMultiplierVsAsepsis;  // 0x448(0x88)
	float _disinfectantContaminationDecreaseRate;  // 0x4D0(0x4)
	float _disinfectantEvaporationRate;  // 0x4D4(0x4)
	uint8_t  _muscleGroup;  // 0x4D8(0x1)
	char pad_1241[3];  // 0x4D9(0x3)
	float _damage;  // 0x4DC(0x4)
	float _damageAtRecoveryStart;  // 0x4E0(0x4)
	float _bloodLoss;  // 0x4E4(0x4)
	float _bloodLossAtRecoveryStart;  // 0x4E8(0x4)
	float _bloodLossRate;  // 0x4EC(0x4)
	float _bloodLossRateAtRecoveryStart;  // 0x4F0(0x4)
	float _selfStabilizationBleedingSuppression;  // 0x4F4(0x4)
	float _stabilizationDurationReductionFromPhysician;  // 0x4F8(0x4)
	char pad_1276[4];  // 0x4FC(0x4)
	struct FBandages _bandages;  // 0x500(0x18)
	float _disinfectantAmount;  // 0x518(0x4)
	uint8_t  _state;  // 0x51C(0x1)
	char pad_1309[11];  // 0x51D(0xB)
	float _timerElapsedTime;  // 0x528(0x4)
	float _timerDuration;  // 0x52C(0x4)

}; 



// Class ConZ.AdminCommand_Location
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_Location : public UAdminCommand
{

}; 



// Class ConZ.PrisonerActionTuneBowDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionTuneBowDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.MissionScheduler
// Size: 0x3E0(Inherited: 0x220) 
struct AMissionScheduler : public AActor
{
	char pad_544_1 : 7;  // 0x220(0x1)
	bool _missionSchedulerEnabled : 1;  // 0x220(0x1)
	char pad_545[7];  // 0x221(0x7)
	struct TMap<AMission*, struct FMissionData> _availableMainStoryMissions;  // 0x228(0x50)
	struct TMap<AMission*, struct FMissionData> _availableSideStoryMissions;  // 0x278(0x50)
	struct TMap<AMission*, struct FMissionData> _availableTutorialMissions;  // 0x2C8(0x50)
	float _missionQueuingInterval;  // 0x318(0x4)
	char pad_796[196];  // 0x31C(0xC4)

	void OnLocationEnter(struct AActor* OverlapedActor, struct AActor* OtherActor); // Function ConZ.MissionScheduler.OnLocationEnter
}; 



// Class ConZ.WeaponDamageStatics
// Size: 0x28(Inherited: 0x28) 
struct UWeaponDamageStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.AdminCommand_ListMutedPlayers
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ListMutedPlayers : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_KickPlayer
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_KickPlayer : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_Teleport
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_Teleport : public UAdminCommand
{

}; 



// Class ConZ.AdminCommandArgumentDataType_Transform
// Size: 0x140(Inherited: 0x108) 
struct UAdminCommandArgumentDataType_Transform : public UAdminCommandArgumentDataTypeBase
{
	char pad_264[8];  // 0x108(0x8)
	struct FTransform _defaultValue;  // 0x110(0x30)

}; 



// Class ConZ.CustomZoneSettingsConfigurationsList
// Size: 0x2C0(Inherited: 0x260) 
struct UCustomZoneSettingsConfigurationsList : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct UTextBlock* _configurationCountDisplay;  // 0x290(0x8)
	struct UButton* _buttonAddConfiguration;  // 0x298(0x8)
	struct UScrollBox* _scrollBox;  // 0x2A0(0x8)
	UCustomZoneSettingsConfiguration* _configurationWidgetClass;  // 0x2A8(0x8)
	char pad_688[16];  // 0x2B0(0x10)

	void UpdateConfiguration(int32_t ConfigurationIndex, struct FCustomZoneConfiguration& configuration); // Function ConZ.CustomZoneSettingsConfigurationsList.UpdateConfiguration
	void RemoveConfiguration(int32_t ConfigurationIndex); // Function ConZ.CustomZoneSettingsConfigurationsList.RemoveConfiguration
	void AddConfiguration(struct FCustomZoneConfiguration& configuration); // Function ConZ.CustomZoneSettingsConfigurationsList.AddConfiguration
}; 



// Class ConZ.VehicleMarkersData
// Size: 0x38(Inherited: 0x28) 
struct UVehicleMarkersData : public UObject
{
	char pad_40[16];  // 0x28(0x10)

}; 



// Class ConZ.MotorcycleSkill
// Size: 0x5D8(Inherited: 0x5D8) 
struct UMotorcycleSkill : public UDrivingSkill
{

}; 



// Class ConZ.AdminCommand_FindSquadMember
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_FindSquadMember : public UAdminCommand
{

}; 



// Class ConZ.TabButton
// Size: 0xC58(Inherited: 0x260) 
struct UTabButton : public UUserWidget
{
	char pad_608[96];  // 0x260(0x60)
	char pad_704_1 : 7;  // 0x2C0(0x1)
	bool PreviewSelectedState : 1;  // 0x2C0(0x1)
	char pad_705[7];  // 0x2C1(0x7)
	struct UButton* _button;  // 0x2C8(0x8)
	struct UTextBlock* _text;  // 0x2D0(0x8)
	struct USizeBox* _sizeBox;  // 0x2D8(0x8)
	struct FText _initialTitle;  // 0x2E0(0x18)
	struct FTabButtonStyle _selectedButtonStyle;  // 0x2F8(0x288)
	struct FTabButtonStyle _selectedUnfocusedButtonStyle;  // 0x580(0x288)
	struct FTabButtonStyle _deselectedButtonStyle;  // 0x808(0x288)
	struct FTabTextStyle _selectedTextStyle;  // 0xA90(0x98)
	struct FTabTextStyle _selectedUnfocusedTextStyle;  // 0xB28(0x98)
	struct FTabTextStyle _deselectedTextStyle;  // 0xBC0(0x98)

	void OnClick(); // Function ConZ.TabButton.OnClick
}; 



// Class ConZ.AdminCommand_GetUserIDByRank
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_GetUserIDByRank : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_SpawnItem
// Size: 0x150(Inherited: 0x108) 
struct UAdminCommand_SpawnItem : public UAdminCommand_SpawnPrimaryActorAsset
{
	char pad_264[72];  // 0x108(0x48)

}; 



// Class ConZ.AdminCommand_LeaveCorpse
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_LeaveCorpse : public UAdminCommand
{

}; 



// Class ConZ.DoubleSlidingDoorStatic
// Size: 0x520(Inherited: 0x4F0) 
struct ADoubleSlidingDoorStatic : public ADoubleDoor
{
	struct USceneComponent* ClosedPositionComponent0;  // 0x4F0(0x8)
	struct USceneComponent* ClosedPositionComponent1;  // 0x4F8(0x8)
	struct USceneComponent* OpenPositionComponent0;  // 0x500(0x8)
	struct USceneComponent* OpenPositionComponent1;  // 0x508(0x8)
	char pad_1296[16];  // 0x510(0x10)

	void AddDoorPartInfo(struct FVector& cloasedPosition, struct FVector& OpenedPosition, struct USceneComponent* moveableComponent); // Function ConZ.DoubleSlidingDoorStatic.AddDoorPartInfo
}; 



// Class ConZ.HandPanel3
// Size: 0x2C8(Inherited: 0x260) 
struct UHandPanel3 : public UUserWidget
{
	struct UHandsHolstersWidget2* _handInventory;  // 0x260(0x8)
	struct UHandsHolstersWidget2* _holsterInventory0;  // 0x268(0x8)
	struct UHandsHolstersWidget2* _holsterInventory1;  // 0x270(0x8)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher0;  // 0x278(0x8)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher3;  // 0x280(0x8)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher4;  // 0x288(0x8)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher5;  // 0x290(0x8)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher6;  // 0x298(0x8)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher7;  // 0x2A0(0x8)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher8;  // 0x2A8(0x8)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher9;  // 0x2B0(0x8)
	struct USizeBox* _mainSizeBox;  // 0x2B8(0x8)
	float _mainPanelWidth;  // 0x2C0(0x4)
	char pad_708[4];  // 0x2C4(0x4)

}; 



// Class ConZ.DamageData
// Size: 0x70(Inherited: 0x30) 
struct UDamageData : public UDataAsset
{
	struct FGameplayTag DamageResponseTag;  // 0x30(0x8)
	struct FGameplayTag GameEventTag;  // 0x38(0x8)
	struct FGameplayTag IgnoreForStatsTag;  // 0x40(0x8)
	struct FGameplayTag CauseHeadExplosionTag;  // 0x48(0x8)
	struct FGameplayTag ApplyBleedingOnlyTag;  // 0x50(0x8)
	struct UDataTable* WeaponDescTable;  // 0x58(0x8)
	struct TArray<struct FDamageTargetTypeMapping> DamageTargetTypeMap;  // 0x60(0x10)

}; 



// Class ConZ.ModularBaseBuildingSocketType
// Size: 0x28(Inherited: 0x28) 
struct UModularBaseBuildingSocketType : public UObject
{

}; 



// Class ConZ.AdminCommand_ListActiveHunts
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ListActiveHunts : public UAdminCommand
{

}; 



// Class ConZ.PrisonerActionChopBaseElementDescription
// Size: 0x98(Inherited: 0x38) 
struct UPrisonerActionChopBaseElementDescription : public UPrisonerActionDescription
{
	char pad_56[96];  // 0x38(0x60)

	struct UStaticMesh* GetBaseElementStaticMesh(); // Function ConZ.PrisonerActionChopBaseElementDescription.GetBaseElementStaticMesh
}; 



// Class ConZ.PrisonerActionRepairBaseElement
// Size: 0x118(Inherited: 0x118) 
struct UPrisonerActionRepairBaseElement : public UPrisonerActionRepair
{

}; 



// Class ConZ.ItemEntitySetup
// Size: 0x88(Inherited: 0x80) 
struct UItemEntitySetup : public UEntitySetup
{
	float MaxHealth;  // 0x80(0x4)
	float MaxHealthRatioAfterReachingBadQuality;  // 0x84(0x4)

}; 



// Class ConZ.AmmunitionBoxItem
// Size: 0x930(Inherited: 0x910) 
struct AAmmunitionBoxItem : public AItem
{
	AAmmunitionItem* AmmunitionItemClass;  // 0x910(0x8)
	AItem* ItemClassToSpawnWhenUnpacked;  // 0x918(0x8)
	int32_t MaxAmmoCount;  // 0x920(0x4)
	int32_t _ammoCount;  // 0x924(0x4)
	char pad_2344[8];  // 0x928(0x8)

	void OnRep_AmmoCount(); // Function ConZ.AmmunitionBoxItem.OnRep_AmmoCount
}; 



// Class ConZ.DialogueData
// Size: 0x80(Inherited: 0x30) 
struct UDialogueData : public UDataAsset
{
	struct TMap<uint8_t , struct FDialogInfoContainer> Dialogs;  // 0x30(0x50)

}; 



// Class ConZ.AdminCommand_ListItemsSpawnLocations
// Size: 0xC8(Inherited: 0x88) 
struct UAdminCommand_ListItemsSpawnLocations : public UAdminCommand
{
	struct FSearchItemSpawnerPresetArray _itemSpawnerPresets[2];  // 0x88(0x20)
	struct FSearchItemClassesArray _itemClasses[2];  // 0xA8(0x20)

}; 



// Class ConZ.AdminCommand_ListPrisonerForeignSubstances
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ListPrisonerForeignSubstances : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_SetDeluxeVersion
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetDeluxeVersion : public UAdminCommand
{

}; 



// Class ConZ.InventorySizeData
// Size: 0x28(Inherited: 0x28) 
struct UInventorySizeData : public UObject
{

}; 



// Class ConZ.PrisonerMovementSettings
// Size: 0x350(Inherited: 0x30) 
struct UPrisonerMovementSettings : public UDataAsset
{
	struct FPrisonerMovementSettings_Ground Ground;  // 0x30(0x16C)
	char pad_412[4];  // 0x19C(0x4)
	struct FPrisonerMovementSettings_Air Air;  // 0x1A0(0x140)
	struct FPrisonerMovementSettings_Water Water;  // 0x2E0(0x54)
	struct FFloatInterval RotationRateMultiplierVsPerformanceRatio;  // 0x334(0x8)
	struct FFloatInterval ClimbingSpeedMultiplierVsPerformanceRatio;  // 0x33C(0x8)
	struct FFloatInterval WindowClimbingSpeedMultiplierVsPerformanceRatio;  // 0x344(0x8)
	char pad_844[4];  // 0x34C(0x4)

}; 



// Class ConZ.WeaponRocketLauncher
// Size: 0x2FC0(Inherited: 0x2F60) 
struct AWeaponRocketLauncher : public AWeapon
{
	struct UWeaponState* ArmState;  // 0x2F58(0x8)
	struct UWeaponState* UnarmState;  // 0x2F60(0x8)
	struct UWeaponState* ArmedState;  // 0x2F68(0x8)
	UWeaponActionRocketLauncherArmSequence* _armActionSequenceClass;  // 0x2F70(0x8)
	UWeaponActionRocketLauncherUnarmSequence* _unarmActionSequenceClass;  // 0x2F78(0x8)
	char pad_12168_1 : 7;  // 0x2F88(0x1)
	bool _needsToBeArmedToFire : 1;  // 0x2F80(0x1)
	char pad_12169_1 : 7;  // 0x2F89(0x1)
	bool _spawnWithLoadedProjectile : 1;  // 0x2F81(0x1)
	struct FName _backMuzzlerSocketName;  // 0x2F84(0x8)
	struct UParticleSystem* _baskMuzzlePS;  // 0x2F90(0x8)
	struct UWeaponActionRocketLauncherArmSequence* _armActionSequence;  // 0x2F98(0x8)
	struct UWeaponActionRocketLauncherUnarmSequence* _unarmActionSequence;  // 0x2FA0(0x8)
	struct UWeaponState* _unarmedState;  // 0x2FA8(0x8)
	char pad_12210_1 : 7;  // 0x2FB2(0x1)
	bool _isArmed : 1;  // 0x2FB0(0x1)
	char pad_12211[13];  // 0x2FB3(0xD)

	void Server_Unarm(); // Function ConZ.WeaponRocketLauncher.Server_Unarm
	void Server_Arm(); // Function ConZ.WeaponRocketLauncher.Server_Arm
	void OnRep_IsArmed(); // Function ConZ.WeaponRocketLauncher.OnRep_IsArmed
	void OnRep_ActiveState(); // Function ConZ.WeaponRocketLauncher.OnRep_ActiveState
	void NetMulticast_Unarm(); // Function ConZ.WeaponRocketLauncher.NetMulticast_Unarm
	void NetMulticast_Arm(); // Function ConZ.WeaponRocketLauncher.NetMulticast_Arm
	bool IsArmed(); // Function ConZ.WeaponRocketLauncher.IsArmed
}; 



// Class ConZ.AdminCommand_ListPrimaryAssets
// Size: 0xE0(Inherited: 0x88) 
struct UAdminCommand_ListPrimaryAssets : public UAdminCommand
{
	struct FPrimaryAssetType _primaryAssetType;  // 0x88(0x8)
	struct TSet<struct FPrimaryAssetId> _primaryAssetsToExclude;  // 0x90(0x50)

}; 



// Class ConZ.BluntMeleeWeaponItemTag
// Size: 0x30(Inherited: 0x30) 
struct UBluntMeleeWeaponItemTag : public UBaseItemTag
{

}; 



// Class ConZ.AdminCommandArgumentCompletion
// Size: 0x38(Inherited: 0x28) 
struct UAdminCommandArgumentCompletion : public UObject
{
	char pad_40_1 : 7;  // 0x28(0x1)
	bool _canCompletionValuesBeCached : 1;  // 0x28(0x1)
	char pad_41[15];  // 0x29(0xF)

	void GetCompletionValues(struct TArray<struct FString>& Result); // Function ConZ.AdminCommandArgumentCompletion.GetCompletionValues
}; 



// Class ConZ.PrisonerForeignSubstance_Antibiotics
// Size: 0x140(Inherited: 0x140) 
struct UPrisonerForeignSubstance_Antibiotics : public UPrisonerForeignSubstance
{

}; 



// Class ConZ.AdminCommand_ListPrisonerBodyConditionInteractions
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ListPrisonerBodyConditionInteractions : public UAdminCommand
{

}; 



// Class ConZ.TraderItemCategoryButton
// Size: 0x328(Inherited: 0x260) 
struct UTraderItemCategoryButton : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UButton* _button;  // 0x278(0x8)
	struct UImage* _icon;  // 0x280(0x8)
	struct UTextBlock* _title;  // 0x288(0x8)
	struct UOverlay* _insufficientFamePointsOverlay;  // 0x290(0x8)
	struct UTextBlock* _requiredFamePointsText;  // 0x298(0x8)
	struct FText _titleValue;  // 0x2A0(0x18)
	struct TSoftObjectPtr<UTexture> _iconTexture;  // 0x2B8(0x28)
	struct UTexture2D* _iconBlankTexture;  // 0x2E0(0x8)
	struct FVector2D _iconSize;  // 0x2E8(0x8)
	struct FGameplayTagContainer _tradeCategories;  // 0x2F0(0x20)
	struct UPanelWidget* _panelToOpenOnClick;  // 0x310(0x8)
	struct UAkAudioEvent* _soundOnHover;  // 0x318(0x8)
	struct UAkAudioEvent* _soundOnClick;  // 0x320(0x8)

	void UpdateIconTexture(); // Function ConZ.TraderItemCategoryButton.UpdateIconTexture
	void OnClick(); // Function ConZ.TraderItemCategoryButton.OnClick
}; 



// Class ConZ.PrisonerBodyConditionUIData_Sepsis
// Size: 0x1B8(Inherited: 0x1B0) 
struct UPrisonerBodyConditionUIData_Sepsis : public UPrisonerBodyConditionWithCausesUIData
{
	char pad_432[8];  // 0x1B0(0x8)

}; 



// Class ConZ.AnimNotify_PlaySoundOnOwner
// Size: 0x40(Inherited: 0x38) 
struct UAnimNotify_PlaySoundOnOwner : public UAnimNotify
{
	struct UAkAudioEvent* AudioEvent;  // 0x38(0x8)

}; 



// Class ConZ.AdminCommand_ListSilencedPlayers
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ListSilencedPlayers : public UAdminCommand
{

}; 



// Class ConZ.MedicalItemTag
// Size: 0x30(Inherited: 0x30) 
struct UMedicalItemTag : public UBaseItemTag
{

}; 



// Class ConZ.ClothesModifierItemTag
// Size: 0x30(Inherited: 0x30) 
struct UClothesModifierItemTag : public UBaseItemTag
{

}; 



// Class ConZ.AdminCommand_ListWeatherControllerOverrides
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ListWeatherControllerOverrides : public UAdminCommand
{

}; 



// Class ConZ.PrisonerActionChangeStanceDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionChangeStanceDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.AdminCommand_ListSquadMembers
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ListSquadMembers : public UAdminCommand
{

}; 



// Class ConZ.BankAccountRegistryResponse
// Size: 0x30(Inherited: 0x28) 
struct UBankAccountRegistryResponse : public UPlayerRpcChannelServerResponse
{
	struct UBankAccountRegistryResponseDataObject* _payload;  // 0x28(0x8)

}; 



// Class ConZ.CustomZoneSettingsConfiguration
// Size: 0x310(Inherited: 0x260) 
struct UCustomZoneSettingsConfiguration : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct UBorder* _border;  // 0x290(0x8)
	struct UTextBlock* _configurationName;  // 0x298(0x8)
	struct UButton* _buttonRemove;  // 0x2A0(0x8)
	struct FLinearColor _unhighlightedColor;  // 0x2A8(0x10)
	struct FLinearColor _highlightedColor;  // 0x2B8(0x10)
	char pad_712[72];  // 0x2C8(0x48)

	void HandleRemoveButtonClicked(); // Function ConZ.CustomZoneSettingsConfiguration.HandleRemoveButtonClicked
}; 



// Class ConZ.AdminCommand_Loot
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_Loot : public UAdminCommand
{

}; 



// Class ConZ.AnimNotifyState_WeaponRevolverDrumRotationDirection
// Size: 0x38(Inherited: 0x30) 
struct UAnimNotifyState_WeaponRevolverDrumRotationDirection : public UAnimNotifyState
{
	uint8_t  RotationDirection;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 



// Class ConZ.BankAccountRegistryStatics
// Size: 0x28(Inherited: 0x28) 
struct UBankAccountRegistryStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.AdminCommand_SetCurrencyBalanceToAllOnline
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetCurrencyBalanceToAllOnline : public UAdminCommand
{

}; 



// Class ConZ.PrisonerBodySymptomCause_Unconsciousness
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_Unconsciousness : public UPrisonerBodySymptomCause
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.AdminCommand_MutePlayer
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_MutePlayer : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_PlacementDebug
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_PlacementDebug : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_PrintEntities
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_PrintEntities : public UAdminCommand
{

}; 



// Class ConZ.EffectOverTimeDealer
// Size: 0x270(Inherited: 0x220) 
struct AEffectOverTimeDealer : public AActor
{
	struct TArray<struct FDamageOverTimeUpdateGroup> _updateGroups;  // 0x220(0x10)
	int32_t _actorLimitPerTick;  // 0x230(0x4)
	char pad_564[4];  // 0x234(0x4)
	float _timeDilation;  // 0x238(0x4)
	char pad_572[52];  // 0x23C(0x34)

}; 



// Class ConZ.CircularMenuSegmentWidget
// Size: 0x2E0(Inherited: 0x260) 
struct UCircularMenuSegmentWidget : public UUserWidget
{
	UGenericTooltip* _genericTooltipClass;  // 0x260(0x8)
	float _nonSelectableAlpha;  // 0x268(0x4)
	struct FLinearColor _highlightedColour;  // 0x26C(0x10)
	struct FLinearColor _unHighlightedColour;  // 0x27C(0x10)
	char pad_652[4];  // 0x28C(0x4)
	struct UCircularMenuSegmentInfo* _info;  // 0x290(0x8)
	struct UCircularMenuSegmentWidget* _parentSegmentWidget;  // 0x298(0x8)
	struct UImage* _segment;  // 0x2A0(0x8)
	struct UOverlay* _iconsOverlay;  // 0x2A8(0x8)
	struct USizeBox* _iconSizeBox;  // 0x2B0(0x8)
	struct UImage* _icon;  // 0x2B8(0x8)
	struct USizeBox* _overlayIconSizeBox;  // 0x2C0(0x8)
	struct UImage* _overlayIcon;  // 0x2C8(0x8)
	char pad_720[16];  // 0x2D0(0x10)

	void UpdateVisualParameters(int32_t numberOfSegments, int32_t Index, float Offset, float middleCutoffPercentage, float Size); // Function ConZ.CircularMenuSegmentWidget.UpdateVisualParameters
	bool IsTooltipEnabled(); // Function ConZ.CircularMenuSegmentWidget.IsTooltipEnabled
	struct FText GetTooltipText(); // Function ConZ.CircularMenuSegmentWidget.GetTooltipText
	struct UCircularMenuSegmentWidget* CreateFromInfo(struct UCircularMenuSegmentInfo* Info); // Function ConZ.CircularMenuSegmentWidget.CreateFromInfo
}; 



// Class ConZ.AdminCommand_ShouldShowOtherPlayerInfo
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ShouldShowOtherPlayerInfo : public UAdminCommand
{

}; 



// Class ConZ.InventoryContainerWidget2
// Size: 0x260(Inherited: 0x260) 
struct UInventoryContainerWidget2 : public UUserWidget
{

}; 



// Class ConZ.AdminCommand_RandomizePriceDeltas
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_RandomizePriceDeltas : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_ReloadCustomMapConfig
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ReloadCustomMapConfig : public UAdminCommand
{

}; 



// Class ConZ.PrisonerBodySymptomCause_Bleeding
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_Bleeding : public UPrisonerBodySymptomCause
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.AdminCommand_RenameVehicle
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_RenameVehicle : public UAdminCommand
{

}; 



// Class ConZ.PrisonerActionCheckThermalSensor
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionCheckThermalSensor : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.WeaponStateRocketLauncherArm
// Size: 0x38(Inherited: 0x30) 
struct UWeaponStateRocketLauncherArm : public UWeaponState
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.RunningSkill
// Size: 0x110(Inherited: 0xC8) 
struct URunningSkill : public UConstitutionSkill
{
	struct FRunningSkillParametersPerSkillLevel NoSkillParameters;  // 0xC8(0x10)
	struct FRunningSkillParametersPerSkillLevel BasicSkillParameters;  // 0xD8(0x10)
	struct FRunningSkillParametersPerSkillLevel MediumSkillParameters;  // 0xE8(0x10)
	struct FRunningSkillParametersPerSkillLevel AdvancedSkillParameters;  // 0xF8(0x10)
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.AdminCommand_ResetAchievements
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ResetAchievements : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_VisualizeZombieLocation
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_VisualizeZombieLocation : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_ResetEconomy
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ResetEconomy : public UAdminCommand
{

}; 



// Class ConZ.PrisonerBodyConditionUIData
// Size: 0x1A0(Inherited: 0x90) 
struct UPrisonerBodyConditionUIData : public UPrisonerBodyConditionOrSymptomUIData
{
	char pad_144[272];  // 0x90(0x110)

}; 



// Class ConZ.SoundReducingItemTag
// Size: 0x30(Inherited: 0x30) 
struct USoundReducingItemTag : public UBaseItemTag
{

}; 



// Class ConZ.AdminCommand_SpawnRandomPrimaryActorAsset
// Size: 0x108(Inherited: 0x108) 
struct UAdminCommand_SpawnRandomPrimaryActorAsset : public UAdminCommand_SpawnPrimaryActorAsset
{

}; 



// Class ConZ.PostItemsSpawnedActions_SetAmmoAmount
// Size: 0x40(Inherited: 0x28) 
struct UPostItemsSpawnedActions_SetAmmoAmount : public UPostItemsSpawnedActions
{
	char pad_40_1 : 7;  // 0x28(0x1)
	bool _useAbsoluteAmount : 1;  // 0x28(0x1)
	char pad_41[3];  // 0x29(0x3)
	struct FInt32Interval _absoluteAmount;  // 0x2C(0x8)
	char pad_52_1 : 7;  // 0x34(0x1)
	bool _useAmountRatio : 1;  // 0x34(0x1)
	char pad_53[3];  // 0x35(0x3)
	struct FFloatInterval _amountRatio;  // 0x38(0x8)

}; 



// Class ConZ.AdminCommand_ResetMissionEnabled
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ResetMissionEnabled : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_ResetSquadInfo
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ResetSquadInfo : public UAdminCommand
{

}; 



// Class ConZ.PlayerRpcChannelServerRequest
// Size: 0x28(Inherited: 0x28) 
struct UPlayerRpcChannelServerRequest : public UObject
{

}; 



// Class ConZ.LargeAquaticAnimal
// Size: 0x800(Inherited: 0x7A0) 
struct ALargeAquaticAnimal : public AConZCharacter
{
	char pad_1952[24];  // 0x7A0(0x18)
	float _maxHealth;  // 0x7B8(0x4)
	float _health;  // 0x7BC(0x4)
	char pad_1984[16];  // 0x7C0(0x10)
	float _maxTimeWithoutRelevantPrisoners;  // 0x7D0(0x4)
	char pad_2004[4];  // 0x7D4(0x4)
	uint8_t  _behavior;  // 0x7D8(0x1)
	char pad_2009[7];  // 0x7D9(0x7)
	struct UAnimMontage* _deathAnimation;  // 0x7E0(0x8)
	float _deathSinkingSpeed;  // 0x7E8(0x4)
	float _capsuleRadiusAndHalfHeightOnDeath;  // 0x7EC(0x4)
	char pad_2032[16];  // 0x7F0(0x10)

	void OnRep_Health(float oldValue); // Function ConZ.LargeAquaticAnimal.OnRep_Health
	void OnRep_Behavior(uint8_t  oldValue); // Function ConZ.LargeAquaticAnimal.OnRep_Behavior
}; 



// Class ConZ.WindowFortificationsType
// Size: 0x80(Inherited: 0x30) 
struct UWindowFortificationsType : public UDataAsset
{
	struct TMap<UObject*, struct UStaticMesh*> MeshForFortification;  // 0x30(0x50)

}; 



// Class ConZ.PrisonerActionApplyFlagElementsExpansionDescription
// Size: 0x60(Inherited: 0x38) 
struct UPrisonerActionApplyFlagElementsExpansionDescription : public UPrisonerActionDescription
{
	char pad_56[40];  // 0x38(0x28)

}; 



// Class ConZ.ConZPlayerController
// Size: 0x9D8(Inherited: 0x570) 
struct AConZPlayerController : public APlayerController
{
	char pad_1392[16];  // 0x570(0x10)
	struct TArray<struct UPrimitiveComponent*> ComponentsToHide;  // 0x580(0x10)
	struct FMulticastInlineDelegate OnPrisonerSpawned;  // 0x590(0x10)
	char pad_1440[136];  // 0x5A0(0x88)
	struct UInteractionContainerUserWidget* CurrentInteractionContainerWidget;  // 0x628(0x8)
	char pad_1584_1 : 7;  // 0x630(0x1)
	bool IsTalkButtonPressed : 1;  // 0x630(0x1)
	char pad_1585[87];  // 0x631(0x57)
	struct UPlayerRpcChannel* _playerRpcChannel;  // 0x688(0x8)
	char pad_1680[64];  // 0x690(0x40)
	struct UUserProfile* _userProfile;  // 0x6D0(0x8)
	char pad_1752[16];  // 0x6D8(0x10)
	struct FString _userFakeName;  // 0x6E8(0x10)
	int64_t _bankAccountNumber;  // 0x6F8(0x8)
	struct APawn* _spawnedPawn;  // 0x700(0x8)
	char pad_1800[40];  // 0x708(0x28)
	struct APawn* _possessedPawn;  // 0x730(0x8)
	APrisoner* _prisonerClass;  // 0x738(0x8)
	char pad_1856[8];  // 0x740(0x8)
	struct UPawnNoiseEmitterComponent* _noiseEmitterComponent;  // 0x748(0x8)
	char pad_1872[16];  // 0x750(0x10)
	float _teleportWorldStreamingLocationChangeDelay;  // 0x760(0x4)
	float _teleportWorldStreamingTriggerLag;  // 0x764(0x4)
	char pad_1896[108];  // 0x768(0x6C)
	int32_t _repFamePoints;  // 0x7D4(0x4)
	char pad_2008[8];  // 0x7D8(0x8)
	int64_t _moneyBalanceRep;  // 0x7E0(0x8)
	int64_t _goldBalanceRep;  // 0x7E8(0x8)
	char pad_2032[144];  // 0x7F0(0x90)
	float _weatherHeightUpdatePeriod;  // 0x880(0x4)
	char pad_2180[4];  // 0x884(0x4)
	struct AAchievementsManagerClient* _achievementsManagerClient;  // 0x888(0x8)
	AAchievementsManagerClient* _achievementsManagerClientClass;  // 0x890(0x8)
	AMissionManager* _missionManagerClass;  // 0x898(0x8)
	struct AMissionManager* _missionManager;  // 0x8A0(0x8)
	AMissionDialogueManager* _missionDialogueManagerClass;  // 0x8A8(0x8)
	char pad_2224[8];  // 0x8B0(0x8)
	float _isReadyForPlayDelay;  // 0x8B8(0x4)
	char pad_2236[12];  // 0x8BC(0xC)
	float _reportPlayTimeInterval;  // 0x8C8(0x4)
	char pad_2252[4];  // 0x8CC(0x4)
	struct FDateTime _replicatedServerUtcNow;  // 0x8D0(0x8)
	char pad_2264[96];  // 0x8D8(0x60)
	struct UPathFollowingComponent* _pathFollowingComponent;  // 0x938(0x8)
	char pad_2368_1 : 7;  // 0x940(0x1)
	bool _forceSpawnAsDrone : 1;  // 0x940(0x1)
	char pad_2369_1 : 7;  // 0x941(0x1)
	bool _mpSpawnDroneAndPrisoner : 1;  // 0x941(0x1)
	char pad_2370[14];  // 0x942(0xE)
	APhotoModePawn* _photoModePawnClass;  // 0x950(0x8)
	char pad_2392[20];  // 0x958(0x14)
	float _refreshTimeForPawnLocationOnMap;  // 0x96C(0x4)
	char pad_2416[8];  // 0x970(0x8)
	struct UMaterialParameterCollection* _mainMPC;  // 0x978(0x8)
	char pad_2432[28];  // 0x980(0x1C)
	int32_t _numTrySpawnsForTimeout;  // 0x99C(0x4)
	char pad_2464[28];  // 0x9A0(0x1C)
	float _serverHeartbeatSendPeriod;  // 0x9BC(0x4)
	float _heartbeatTimeout;  // 0x9C0(0x4)
	char pad_2500[20];  // 0x9C4(0x14)

	void UpdateUserProfileDeletionMarkStatus(); // Function ConZ.ConZPlayerController.UpdateUserProfileDeletionMarkStatus
	void Teleport(struct FTeleportRequest& request); // Function ConZ.ConZPlayerController.Teleport
	void ShowWarningMessage(struct FString Message, float Duration, struct FLinearColor TextColor); // Function ConZ.ConZPlayerController.ShowWarningMessage
	void ShowLevelUpMessageFromClass(USkill* skillClass, uint8_t  skillLevel); // Function ConZ.ConZPlayerController.ShowLevelUpMessageFromClass
	void ShowLevelUpMessage(struct USkill* Skill, uint8_t  skillLevel); // Function ConZ.ConZPlayerController.ShowLevelUpMessage
	void ShowKillFeedNotificationOnClient(struct FString prefix, struct FString characterName, struct FString suffix, bool ping); // Function ConZ.ConZPlayerController.ShowKillFeedNotificationOnClient
	void ShowKillFeedMessage(struct FString prefix, struct FString characterName, struct FString suffix, bool ping); // Function ConZ.ConZPlayerController.ShowKillFeedMessage
	void SetTeleportWorldStreamingLocationChangeDelay(float Value); // Function ConZ.ConZPlayerController.SetTeleportWorldStreamingLocationChangeDelay
	void SetRespawnOptionTime(uint8_t  option, float Time, bool force); // Function ConZ.ConZPlayerController.SetRespawnOptionTime
	void SetGameEventCooldown(float cooldown); // Function ConZ.ConZPlayerController.SetGameEventCooldown
	void SetFamePoints(float Value); // Function ConZ.ConZPlayerController.SetFamePoints
	void SetCurrencyBalanceRep(uint8_t  CurrencyType, int64_t currencyBalance); // Function ConZ.ConZPlayerController.SetCurrencyBalanceRep
	void SetCommitSuicideOptionTime(float Time); // Function ConZ.ConZPlayerController.SetCommitSuicideOptionTime
	void Server_SetRefreshPawnLocationForMap(bool Value); // Function ConZ.ConZPlayerController.Server_SetRefreshPawnLocationForMap
	void Server_SelfKickFromGameSession(struct FString reason); // Function ConZ.ConZPlayerController.Server_SelfKickFromGameSession
	void Server_RequestSurvivalStats(uint32_t ID, struct FDbIntegerId UserProfileId); // Function ConZ.ConZPlayerController.Server_RequestSurvivalStats
	void Server_RequestSquadRankingData(uint32_t ID, struct FDbIntegerId squadId, int32_t Count); // Function ConZ.ConZPlayerController.Server_RequestSquadRankingData
	void Server_RequestSquadMemberInfo(uint32_t ID, struct FDbIntegerId squadId); // Function ConZ.ConZPlayerController.Server_RequestSquadMemberInfo
	void Server_RequestRespawnWaitTime(); // Function ConZ.ConZPlayerController.Server_RequestRespawnWaitTime
	void Server_RequestGameEventTeamChange(int32_t preferredTeam); // Function ConZ.ConZPlayerController.Server_RequestGameEventTeamChange
	void Server_RequestEventsRankingStats(uint32_t ID, struct FDbIntegerId UserProfileId, int32_t Count, uint8_t  orderByField, uint8_t  sortOrder); // Function ConZ.ConZPlayerController.Server_RequestEventsRankingStats
	void Server_ReportStartLeavingGame(); // Function ConZ.ConZPlayerController.Server_ReportStartLeavingGame
	void Server_ReportPlayPreparationsSucceeded(); // Function ConZ.ConZPlayerController.Server_ReportPlayPreparationsSucceeded
	void Server_ReportCancelLeavingGame(); // Function ConZ.ConZPlayerController.Server_ReportCancelLeavingGame
	void Server_ProcessCharacterModificationTransaction(int32_t transactionId, struct FCharacterTemplate CharacterTemplate); // Function ConZ.ConZPlayerController.Server_ProcessCharacterModificationTransaction
	void Server_MountedActorHasBegunPlay(struct AActor* Actor); // Function ConZ.ConZPlayerController.Server_MountedActorHasBegunPlay
	void Server_LeaveGameEvent(); // Function ConZ.ConZPlayerController.Server_LeaveGameEvent
	void Server_JoinGameEvent(struct AGameEventBase* gameEvent, int32_t preferredTeam); // Function ConZ.ConZPlayerController.Server_JoinGameEvent
	void Server_HeartbeatResponse(uint32_t code); // Function ConZ.ConZPlayerController.Server_HeartbeatResponse
	void Server_ExitPhotoMode(); // Function ConZ.ConZPlayerController.Server_ExitPhotoMode
	void Server_EnterPhotoMode(); // Function ConZ.ConZPlayerController.Server_EnterPhotoMode
	void Server_AllowCertainInventoryInteractions(); // Function ConZ.ConZPlayerController.Server_AllowCertainInventoryInteractions
	void SendHUDMessageToClient(struct FString Message, struct UAkAudioEvent* AudioEvent); // Function ConZ.ConZPlayerController.SendHUDMessageToClient
	void SendHUDMessageToAll(struct FString Message, struct UAkAudioEvent* AudioEvent); // Function ConZ.ConZPlayerController.SendHUDMessageToAll
	void SaveState(); // Function ConZ.ConZPlayerController.SaveState
	void RepossesOriginalPrisoner(); // Function ConZ.ConZPlayerController.RepossesOriginalPrisoner
	void RemoveServerFromFavorites(); // Function ConZ.ConZPlayerController.RemoveServerFromFavorites
	void RegisterRespawn(uint8_t  option); // Function ConZ.ConZPlayerController.RegisterRespawn
	void RegisterCommitSuicide(); // Function ConZ.ConZPlayerController.RegisterCommitSuicide
	void PrisonerSpawnedDelegate__DelegateSignature(struct APrisoner* spawnedPrisoner); // DelegateFunction ConZ.ConZPlayerController.PrisonerSpawnedDelegate__DelegateSignature
	void OnRep_UserFakeName(); // Function ConZ.ConZPlayerController.OnRep_UserFakeName
	void OnRep_ReplicatedServerUtcNow(); // Function ConZ.ConZPlayerController.OnRep_ReplicatedServerUtcNow
	void OnRep_PossessedPawn(); // Function ConZ.ConZPlayerController.OnRep_PossessedPawn
	void OnRep_MoneyBalance(); // Function ConZ.ConZPlayerController.OnRep_MoneyBalance
	void OnRep_FamePoints(); // Function ConZ.ConZPlayerController.OnRep_FamePoints
	void OnPhotoModeTransitionTimerElapsed(); // Function ConZ.ConZPlayerController.OnPhotoModeTransitionTimerElapsed
	void OnFadeOutFinished(); // Function ConZ.ConZPlayerController.OnFadeOutFinished
	void LoadState(); // Function ConZ.ConZPlayerController.LoadState
	void LeaveGameEvent(); // Function ConZ.ConZPlayerController.LeaveGameEvent
	void JoinGameEvent(struct AGameEventBase* gameEvent, int32_t preferredTeam); // Function ConZ.ConZPlayerController.JoinGameEvent
	bool IsUserAdmin(); // Function ConZ.ConZPlayerController.IsUserAdmin
	bool IsTeleportInProgress(); // Function ConZ.ConZPlayerController.IsTeleportInProgress
	bool IsPushToTalkPressed(); // Function ConZ.ConZPlayerController.IsPushToTalkPressed
	void InitializePathFollowingComponent(struct APrisoner* Prisoner); // Function ConZ.ConZPlayerController.InitializePathFollowingComponent
	struct FString GetUserProfileName(); // Function ConZ.ConZPlayerController.GetUserProfileName
	struct FDbIntegerId GetUserProfileId(); // Function ConZ.ConZPlayerController.GetUserProfileId
	struct UUserProfile* GetUserProfile(); // Function ConZ.ConZPlayerController.GetUserProfile
	struct FString GetUserName2(); // Function ConZ.ConZPlayerController.GetUserName2
	struct FString GetUserId(); // Function ConZ.ConZPlayerController.GetUserId
	float GetTeleportWorldStreamingLocationChangeDelay(); // Function ConZ.ConZPlayerController.GetTeleportWorldStreamingLocationChangeDelay
	struct FDbIntegerId GetServerUserProfileId(); // Function ConZ.ConZPlayerController.GetServerUserProfileId
	float GetRespawnWaitTime(); // Function ConZ.ConZPlayerController.GetRespawnWaitTime
	float GetRespawnOptionTimeLeft(uint8_t  option); // Function ConZ.ConZPlayerController.GetRespawnOptionTimeLeft
	float GetRespawnOptionTime(uint8_t  option); // Function ConZ.ConZPlayerController.GetRespawnOptionTime
	struct APrisoner* GetPrisoner(); // Function ConZ.ConZPlayerController.GetPrisoner
	struct UPlayerRpcChannel* GetPlayerRpcChannel(); // Function ConZ.ConZPlayerController.GetPlayerRpcChannel
	struct UPawnNoiseEmitterComponent* GetNoiseEmitterComponent(); // Function ConZ.ConZPlayerController.GetNoiseEmitterComponent
	struct AMissionDialogueManager* GetMissionDialogueManager(); // Function ConZ.ConZPlayerController.GetMissionDialogueManager
	float GetGameEventCooldown(); // Function ConZ.ConZPlayerController.GetGameEventCooldown
	int32_t GetFamePointsRounded(); // Function ConZ.ConZPlayerController.GetFamePointsRounded
	float GetFamePoints(); // Function ConZ.ConZPlayerController.GetFamePoints
	float GetFameMultiplier(); // Function ConZ.ConZPlayerController.GetFameMultiplier
	int32_t GetFameLevel(); // Function ConZ.ConZPlayerController.GetFameLevel
	struct AMissionDialogueManager* GetDialogueManager(); // Function ConZ.ConZPlayerController.GetDialogueManager
	struct FText GetCurrencyBalanceText(uint8_t  CurrencyType); // Function ConZ.ConZPlayerController.GetCurrencyBalanceText
	float GetCommitSuicideOptionTimeLeft(); // Function ConZ.ConZPlayerController.GetCommitSuicideOptionTimeLeft
	struct AConZCameraManager* GetCameraManager(); // Function ConZ.ConZPlayerController.GetCameraManager
	struct AAchievementsManagerClient* GetAchievementsManagerClient(); // Function ConZ.ConZPlayerController.GetAchievementsManagerClient
	void Crash(); // Function ConZ.ConZPlayerController.Crash
	int32_t ComputeFameLevel(float FamePoints); // Function ConZ.ConZPlayerController.ComputeFameLevel
	void Client_UpdateRespawnSettings(struct FRespawnParameters parameters); // Function ConZ.ConZPlayerController.Client_UpdateRespawnSettings
	void Client_TestPingLockStuff(float averageDelta, float averagePing, float counter); // Function ConZ.ConZPlayerController.Client_TestPingLockStuff
	void Client_SetRespawnWaitTime(float Seconds); // Function ConZ.ConZPlayerController.Client_SetRespawnWaitTime
	void Client_SetRespawnOptionTime(uint8_t  option, float Time); // Function ConZ.ConZPlayerController.Client_SetRespawnOptionTime
	void Client_SetIsServerSettingsAdmin(bool Value); // Function ConZ.ConZPlayerController.Client_SetIsServerSettingsAdmin
	void Client_SetIsAdmin(bool Value); // Function ConZ.ConZPlayerController.Client_SetIsAdmin
	void Client_SetGameEventCooldown(float cooldown); // Function ConZ.ConZPlayerController.Client_SetGameEventCooldown
	void Client_SetCommitSuicideOptionTime(float Time); // Function ConZ.ConZPlayerController.Client_SetCommitSuicideOptionTime
	void Client_SendPackedPlayerLocationsForMap(struct TArray<struct AConZPlayerState*> playerStates, struct TArray<uint32_t> packedMapLocations); // Function ConZ.ConZPlayerController.Client_SendPackedPlayerLocationsForMap
	void Client_SaveState(); // Function ConZ.ConZPlayerController.Client_SaveState
	void Client_ReceiveSurvivalStats(uint32_t ID, struct FSurvivalStats stats); // Function ConZ.ConZPlayerController.Client_ReceiveSurvivalStats
	void Client_ReceiveSquadRankingData(uint32_t ID, struct TArray<struct FString> names, struct TArray<struct FString> information, struct TArray<uint64_t> emblems, struct TArray<float> scores, int32_t squadRank, int32_t squadIndex); // Function ConZ.ConZPlayerController.Client_ReceiveSquadRankingData
	void Client_ReceiveSquadMemberInfo(uint32_t ID, struct TArray<struct FDbIntegerId> userProfileIds, struct TArray<struct FString> names, struct TArray<uint8_t > ranks, struct TArray<float> FamePoints, struct TArray<bool> online); // Function ConZ.ConZPlayerController.Client_ReceiveSquadMemberInfo
	void Client_ReceiveEventsRankingStats(uint32_t ID, struct TArray<struct FEventsRankingStatsItem> stats, int32_t playerRank); // Function ConZ.ConZPlayerController.Client_ReceiveEventsRankingStats
	void Client_ReceiveBytesFromStream(int32_t streamId, struct TArray<char> bytes); // Function ConZ.ConZPlayerController.Client_ReceiveBytesFromStream
	void Client_Login(struct FPlayerLoginInfo serverLoginInfo); // Function ConZ.ConZPlayerController.Client_Login
	void Client_InitializeCharacterModificationTransaction(int32_t transactionId, struct FTransform roomTransform, uint8_t  Type); // Function ConZ.ConZPlayerController.Client_InitializeCharacterModificationTransaction
	void Client_HeartbeatRequest(uint32_t code); // Function ConZ.ConZPlayerController.Client_HeartbeatRequest
	void Client_HasMountedActorBegunPlay(struct AActor* Actor); // Function ConZ.ConZPlayerController.Client_HasMountedActorBegunPlay
	void Client_EndByteStream(int32_t streamId); // Function ConZ.ConZPlayerController.Client_EndByteStream
	void Client_EnableRespawnOption(uint8_t  option); // Function ConZ.ConZPlayerController.Client_EnableRespawnOption
	void Client_CancelCharacterModificationTransaction(); // Function ConZ.ConZPlayerController.Client_CancelCharacterModificationTransaction
	void Client_BeginByteStream(int32_t streamId, uint8_t  streamType); // Function ConZ.ConZPlayerController.Client_BeginByteStream
	void Client_AllowCertainInventoryInteractions(); // Function ConZ.ConZPlayerController.Client_AllowCertainInventoryInteractions
	void ClearRespawnOptionTimers(); // Function ConZ.ConZPlayerController.ClearRespawnOptionTimers
	void CheckPhotoModeTransitionFailed(); // Function ConZ.ConZPlayerController.CheckPhotoModeTransitionFailed
	bool CanAddServerToFavorites(); // Function ConZ.ConZPlayerController.CanAddServerToFavorites
	void AddServerToFavorites(); // Function ConZ.ConZPlayerController.AddServerToFavorites
}; 



// Class ConZ.AdminCommand_SendNotification
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SendNotification : public UAdminCommand
{

}; 



// Class ConZ.ItemObstructionTestCapsuleComponent
// Size: 0x470(Inherited: 0x470) 
struct UItemObstructionTestCapsuleComponent : public UCapsuleComponent
{

}; 



// Class ConZ.HasLadderMarkersInterface
// Size: 0x28(Inherited: 0x28) 
struct UHasLadderMarkersInterface : public UInterface
{

	void GetLadderMarkers(struct TArray<struct FLadderMarker>& Result); // Function ConZ.HasLadderMarkersInterface.GetLadderMarkers
}; 



// Class ConZ.CookingCommonData
// Size: 0x190(Inherited: 0x30) 
struct UCookingCommonData : public UDataAsset
{
	struct UCurveFloat* MassReductionByPeakTemperature_Fiber;  // 0x30(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Starch;  // 0x38(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Sugars;  // 0x40(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_OtherCarbohydrates;  // 0x48(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_SaturatedFat;  // 0x50(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_OtherFats;  // 0x58(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Protein;  // 0x60(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminA;  // 0x68(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminC;  // 0x70(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminD;  // 0x78(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminE;  // 0x80(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminK;  // 0x88(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB1;  // 0x90(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB2;  // 0x98(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB3;  // 0xA0(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB6;  // 0xA8(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB9;  // 0xB0(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB12;  // 0xB8(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB5;  // 0xC0(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB4;  // 0xC8(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Calcium;  // 0xD0(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Iron;  // 0xD8(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Magnesium;  // 0xE0(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Phosphorus;  // 0xE8(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Potassium;  // 0xF0(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Sodium;  // 0xF8(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Zinc;  // 0x100(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Copper;  // 0x108(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Manganese;  // 0x110(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Selenium;  // 0x118(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Alcohol;  // 0x120(0x8)
	struct UCurveFloat* MassReductionByPeakTemperature_Water;  // 0x128(0x8)
	struct UCurveFloat* _cookQualityVsCookAmount;  // 0x130(0x8)
	struct UCurveFloat* _cookQualityVsCookTimeRelativeError_NoSkill;  // 0x138(0x8)
	struct UCurveFloat* _cookQualityVsCookTimeRelativeError_Basic;  // 0x140(0x8)
	struct UCurveFloat* _cookQualityVsCookTimeRelativeError_Medium;  // 0x148(0x8)
	struct UCurveFloat* _cookQualityVsCookTimeRelativeError_Advanced;  // 0x150(0x8)
	struct UCurveFloat* _cookQualityVsCookTimeRelativeError_AboveAdvanced;  // 0x158(0x8)
	float _recipeMemorizationChancePerSkillLevel;  // 0x160(0x4)
	float _recipeMemorizationChancePerCookQuality;  // 0x164(0x4)
	float _baseExperienceGainPerRecipe;  // 0x168(0x4)
	float _experienceGainPerRecipeCookTimeInMinutes;  // 0x16C(0x4)
	float _experienceGainPerRecipeCookTemperatureInDegrees;  // 0x170(0x4)
	float _experienceGainMultiplier_Ruined;  // 0x174(0x4)
	float _experienceGainMultiplier_Bad;  // 0x178(0x4)
	float _experienceGainMultiplier_Poor;  // 0x17C(0x4)
	float _experienceGainMultiplier_Good;  // 0x180(0x4)
	float _experienceGainMultiplier_Excellent;  // 0x184(0x4)
	float _experienceGainMultiplier_Perfect;  // 0x188(0x4)
	char pad_396[4];  // 0x18C(0x4)

}; 



// Class ConZ.AdminCommand_SetAchievementUnlocked
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetAchievementUnlocked : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_SetDecayTimeDilation
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetDecayTimeDilation : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_SetAllInventoryAccess
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetAllInventoryAccess : public UAdminCommand
{

}; 



// Class ConZ.CircularMenuSegmentGenericInfo
// Size: 0x90(Inherited: 0x80) 
struct UCircularMenuSegmentGenericInfo : public UCircularMenuSegmentInfo
{
	struct FDelegate Action;  // 0x80(0x10)

}; 



// Class ConZ.AdminCommand_SetCraftingSearch
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetCraftingSearch : public UAdminCommand
{

}; 



// Class ConZ.ChatSpamProtectionRules
// Size: 0xD8(Inherited: 0x30) 
struct UChatSpamProtectionRules : public UDataAsset
{
	float OffenceDuration;  // 0x30(0x4)
	int32_t MessageRepetitions;  // 0x34(0x4)
	struct TMap<uint8_t , struct FSpamSeverityConditions> _conditions;  // 0x38(0x50)
	struct TMap<uint8_t , struct FSpamConsequences> _consequences;  // 0x88(0x50)

}; 



// Class ConZ.RemoteKeyItemState
// Size: 0x100(Inherited: 0x100) 
struct URemoteKeyItemState : public UItemState
{

}; 



// Class ConZ.CharacterPainSoundsData
// Size: 0x38(Inherited: 0x30) 
struct UCharacterPainSoundsData : public UDataAsset
{
	struct UAkAudioEvent* AudioEvent;  // 0x30(0x8)

}; 



// Class ConZ.WeaponStateBowDraw
// Size: 0x50(Inherited: 0x30) 
struct UWeaponStateBowDraw : public UWeaponState
{
	char pad_48[32];  // 0x30(0x20)

}; 



// Class ConZ.AdminCommand_SetCurrencyBalance
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetCurrencyBalance : public UAdminCommand
{

}; 



// Class ConZ.PrisonerBodyConditionWithCausesUIData
// Size: 0x1B0(Inherited: 0x1A0) 
struct UPrisonerBodyConditionWithCausesUIData : public UPrisonerBodyConditionUIData
{
	struct TArray<struct UPrisonerBodyConditionCauseUIData*> _causes;  // 0x1A0(0x10)

}; 



// Class ConZ.AmmunitionBoneListAssetData
// Size: 0x38(Inherited: 0x28) 
struct UAmmunitionBoneListAssetData : public UAssetUserData
{
	struct TArray<struct FName> CartridgeBoneNames;  // 0x28(0x10)

}; 



// Class ConZ.AdminCommand_SetCurrencyBalanceToAll
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetCurrencyBalanceToAll : public UAdminCommand
{

}; 



// Class ConZ.TraderManagingComponent
// Size: 0x108(Inherited: 0xB0) 
struct UTraderManagingComponent : public UActorComponent
{
	char pad_176[32];  // 0xB0(0x20)
	float _pawnRelevancyRange;  // 0xD0(0x4)
	float _tradeOutpostsUpdateTime;  // 0xD4(0x4)
	char pad_216[4];  // 0xD8(0x4)
	float _outpostEconomyResetTimeHours;  // 0xDC(0x4)
	float _outpostPriceDeltasRandomizationTimeHours;  // 0xE0(0x4)
	float _tradeableRotationTimeIngameHoursMin;  // 0xE4(0x4)
	float _tradeableRotationTimeIngameHoursMax;  // 0xE8(0x4)
	float _tradeableRotationTimeOfDayMin;  // 0xEC(0x4)
	float _tradeableRotationTimeOfDayMax;  // 0xF0(0x4)
	char pad_244[20];  // 0xF4(0x14)

}; 



// Class ConZ.EntitySystemSettingsProvider
// Size: 0x28(Inherited: 0x28) 
struct UEntitySystemSettingsProvider : public UInterface
{

}; 



// Class ConZ.AdminCommand_SetFacialHairLength
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetFacialHairLength : public UAdminCommand
{

}; 



// Class ConZ.PrisonerBodySymptomCause_Burping
// Size: 0x38(Inherited: 0x38) 
struct UPrisonerBodySymptomCause_Burping : public UPrisonerBodySymptomCause_PeriodicSound
{

}; 



// Class ConZ.PrisonerActionTakeItemInHands
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionTakeItemInHands : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.AnimNotifyState_WeaponHideMagazine
// Size: 0x40(Inherited: 0x30) 
struct UAnimNotifyState_WeaponHideMagazine : public UAnimNotifyState
{
	char pad_48[16];  // 0x30(0x10)

}; 



// Class ConZ.ItemActionSequence
// Size: 0x88(Inherited: 0x50) 
struct UItemActionSequence : public UItemAction
{
	char pad_80_1 : 7;  // 0x50(0x1)
	bool _canBeCanceled : 1;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)
	struct FCharacterAndItemAnimation _animations;  // 0x58(0x10)
	char pad_104[32];  // 0x68(0x20)

	void StopAnimation(); // Function ConZ.ItemActionSequence.StopAnimation
	void SetNextAnimationSectionFromPrevious(struct FName& previousSection, struct FName& NextSection); // Function ConZ.ItemActionSequence.SetNextAnimationSectionFromPrevious
	void SetNextAnimationSection(struct FName& Section, bool allowLoop); // Function ConZ.ItemActionSequence.SetNextAnimationSection
	float PlayAnimation(struct ACharacter* Character, float PlayRate, struct FName& startSection, bool assignCallbacks); // Function ConZ.ItemActionSequence.PlayAnimation
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.ItemActionSequence.OnMontageEnded
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.ItemActionSequence.OnMontageBlendingOutStarted
	void OnAnimNotify(uint8_t  notifyType); // Function ConZ.ItemActionSequence.OnAnimNotify
	void JumpToAnimationSection(struct FName& Section); // Function ConZ.ItemActionSequence.JumpToAnimationSection
	bool IsPlayingAnimation(); // Function ConZ.ItemActionSequence.IsPlayingAnimation
	struct FCharacterActionAnimationDescription GetPlayingAnimations(); // Function ConZ.ItemActionSequence.GetPlayingAnimations
	int32_t GetNumberOfPendingNotifiesInCurrentSection(uint8_t  notifyType); // Function ConZ.ItemActionSequence.GetNumberOfPendingNotifiesInCurrentSection
	struct FCharacterAndItemAnimation GetAnimations(); // Function ConZ.ItemActionSequence.GetAnimations
	bool CanEverBeCanceled(); // Function ConZ.ItemActionSequence.CanEverBeCanceled
	void Cancel(bool Regular); // Function ConZ.ItemActionSequence.Cancel
	bool CanBeCanceled(); // Function ConZ.ItemActionSequence.CanBeCanceled
}; 



// Class ConZ.CuttingObjective
// Size: 0x360(Inherited: 0x330) 
struct ACuttingObjective : public ARequirementObjective
{
	struct TArray<struct TSoftClassPtr<UObject>> _targetMeshes;  // 0x330(0x10)
	char pad_832_1 : 7;  // 0x340(0x1)
	bool _specificItem : 1;  // 0x340(0x1)
	char pad_833[7];  // 0x341(0x7)
	AItem* _itemToFound;  // 0x348(0x8)
	int32_t _itemAmount;  // 0x350(0x4)
	char pad_852[12];  // 0x354(0xC)

}; 



// Class ConZ.AdminCommand_SetFakeName
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetFakeName : public UAdminCommand
{

}; 



// Class ConZ.RadioItem
// Size: 0x920(Inherited: 0x910) 
struct ARadioItem : public AItem
{
	struct URadioComponent* _radioComponent;  // 0x910(0x8)
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent;  // 0x918(0x8)

	void OnComponentDeactivated(struct UActorComponent* Component); // Function ConZ.RadioItem.OnComponentDeactivated
	void OnComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.RadioItem.OnComponentActivated
}; 



// Class ConZ.MedicationItem
// Size: 0x930(Inherited: 0x910) 
struct AMedicationItem : public AItem
{
	uint8_t  Usage;  // 0x910(0x1)
	uint8_t  Type;  // 0x911(0x1)
	char pad_2322[2];  // 0x912(0x2)
	float DailyDoses;  // 0x914(0x4)
	float TimeToAbsorbSeconds;  // 0x918(0x4)
	float EffectTimeMultiplier;  // 0x91C(0x4)
	float ReuseEffectTimeIncrease;  // 0x920(0x4)
	float MaxEffectTime;  // 0x924(0x4)
	uint8_t  RepeatedAbuseReaction;  // 0x928(0x1)
	char pad_2345[7];  // 0x929(0x7)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_GroundMovementSpeedModifier
// Size: 0x30(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_GroundMovementSpeedModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{

}; 



// Class ConZ.AdminCommand_SetFamePoints
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetFamePoints : public UAdminCommand
{

}; 



// Class ConZ.AnimNotify_WeaponActionNotify
// Size: 0x40(Inherited: 0x38) 
struct UAnimNotify_WeaponActionNotify : public UAnimNotify
{
	uint8_t  WeaponActionNotifyType;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 



// Class ConZ.InventoryItemData2D
// Size: 0x38(Inherited: 0x30) 
struct UInventoryItemData2D : public UInventoryItemData
{
	int32_t SizeX;  // 0x30(0x4)
	int32_t SizeY;  // 0x34(0x4)

}; 



// Class ConZ.AirplaneAnimInstance
// Size: 0x330(Inherited: 0x2C0) 
struct UAirplaneAnimInstance : public UAnimInstance
{
	char pad_704_1 : 7;  // 0x2C0(0x1)
	bool IsAnyoneMounted : 1;  // 0x2B8(0x1)
	float Speed;  // 0x2BC(0x4)
	float SpeedKph;  // 0x2C0(0x4)
	float PropellerRotationAngle;  // 0x2C4(0x4)
	float LeftAileronsAngle;  // 0x2C8(0x4)
	float RightAileronsAngle;  // 0x2CC(0x4)
	float ElevatorsAngle;  // 0x2D0(0x4)
	float RudderAngle;  // 0x2D4(0x4)
	char pad_733_1 : 7;  // 0x2DD(0x1)
	bool IsMounteeDriver : 1;  // 0x2D8(0x1)
	float clockMinuteRotation;  // 0x2DC(0x4)
	float clockHourRotation;  // 0x2E0(0x4)
	float altimeterTensRotation;  // 0x2E4(0x4)
	float altimeterHundredsRotation;  // 0x2E8(0x4)
	float altimeterThousandsRotation;  // 0x2EC(0x4)
	float airSpeedRotation;  // 0x2F0(0x4)
	float rpmRotation;  // 0x2F4(0x4)
	float verticalSpeedRotation;  // 0x2F8(0x4)
	float throttleLeverRotation;  // 0x2FC(0x4)
	float leftYawPedalRotation;  // 0x300(0x4)
	float rightYawPedalRotation;  // 0x304(0x4)
	struct FRotator stickRotator;  // 0x308(0xC)
	struct FRotator headingRotator;  // 0x314(0xC)
	char pad_802_1 : 7;  // 0x322(0x1)
	bool shouldHidePropellerBone : 1;  // 0x320(0x1)
	char pad_803[13];  // 0x323(0xD)

}; 



// Class ConZ.PlayerRpcChannelServerResponse
// Size: 0x28(Inherited: 0x28) 
struct UPlayerRpcChannelServerResponse : public UObject
{

}; 



// Class ConZ.AdminCommand_SetFamePointsToAllOnline
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetFamePointsToAllOnline : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_ShowFlagInfo
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ShowFlagInfo : public UAdminCommand
{

}; 



// Class ConZ.GameEventBase
// Size: 0x560(Inherited: 0x220) 
struct AGameEventBase : public AActor
{
	struct FText EventName;  // 0x220(0x18)
	UGameEventParticipantStats* ParticipantStatsClass;  // 0x238(0x8)
	UGameEventRoundInfoWidget* RoundInfoWidgetClass;  // 0x240(0x8)
	UGameEventTeamHeaderWidget* TeamHeaderWidgetClass;  // 0x248(0x8)
	UGameEventParticipantStatsWidget* StatWidgetClass;  // 0x250(0x8)
	UGameEventParticipantStatsWidget* MiniStatWidgetClass;  // 0x258(0x8)
	AGameEventTransport* TransportClass;  // 0x260(0x8)
	struct UAkAudioEvent* TimesUpAnnouncement;  // 0x268(0x8)
	struct UAkAudioEvent* BlueTeamWonRoundAnnouncement;  // 0x270(0x8)
	struct UAkAudioEvent* RedTeamWonRoundAnnouncement;  // 0x278(0x8)
	struct UAkAudioEvent* RoundDrawAnnouncement;  // 0x280(0x8)
	struct UAkAudioEvent* BlueTeamWonEventAnnouncement;  // 0x288(0x8)
	struct UAkAudioEvent* RedTeamWonEventAnnouncement;  // 0x290(0x8)
	struct UAkAudioEvent* EventDrawAnnouncement;  // 0x298(0x8)
	struct UAkAudioEvent* Time30sAnnouncement;  // 0x2A0(0x8)
	struct UAkAudioEvent* Time15sAnnouncement;  // 0x2A8(0x8)
	struct UAkAudioEvent* Time10sCountdownAnnouncement;  // 0x2B0(0x8)
	struct UAkAudioEvent* TensionMusicStart;  // 0x2B8(0x8)
	struct UAkAudioEvent* TensionMusicStop;  // 0x2C0(0x8)
	uint8_t  _state;  // 0x2C8(0x1)
	char pad_713[3];  // 0x2C9(0x3)
	int32_t _activeParticipantCount;  // 0x2CC(0x4)
	int32_t _numberOfTeams;  // 0x2D0(0x4)
	char pad_724[4];  // 0x2D4(0x4)
	struct TArray<int32_t> _teamMemberCount;  // 0x2D8(0x10)
	struct TArray<int32_t> _teamScores;  // 0x2E8(0x10)
	struct TArray<int32_t> _roundWinningTeam;  // 0x2F8(0x10)
	int32_t _round;  // 0x308(0x4)
	float _roundTimeLeft;  // 0x30C(0x4)
	float _cancelTimeLeft;  // 0x310(0x4)
	char pad_788[28];  // 0x314(0x1C)
	struct AGameEventLocationMarker* _marker;  // 0x330(0x8)
	struct AGameEventBorder* _border;  // 0x338(0x8)
	struct AGameEventManager* _manager;  // 0x340(0x8)
	struct TArray<struct FGameEventParticipantInfo> _participantInfo;  // 0x348(0x10)
	struct FGameEventParameters _parameters;  // 0x358(0x188)
	struct UGameEventCardWidget* _cardWidget;  // 0x4E0(0x8)
	struct UGameEventScoreboardWidget* _scoreboardWidget;  // 0x4E8(0x8)
	struct UGameEventScoreboardWidget* _miniScoreboardWidget;  // 0x4F0(0x8)
	struct TArray<int32_t> _rankings;  // 0x4F8(0x10)
	char pad_1288[32];  // 0x508(0x20)
	struct UAkComponent* _lastAnnouncement;  // 0x528(0x8)
	struct UAkComponent* _lastCountdownAnnouncement;  // 0x530(0x8)
	char pad_1336[40];  // 0x538(0x28)

	void UpdateTeamMemberCount(); // Function ConZ.GameEventBase.UpdateTeamMemberCount
	void UpdateRanking(int32_t Index); // Function ConZ.GameEventBase.UpdateRanking
	void SetTeamScore(int32_t TeamIndex, float Score); // Function ConZ.GameEventBase.SetTeamScore
	void SetParticipantTeam(struct APrisoner* Prisoner, int32_t TeamIndex); // Function ConZ.GameEventBase.SetParticipantTeam
	void SetParameters(struct FGameEventParameters& parameters); // Function ConZ.GameEventBase.SetParameters
	void SetNumberOfTeams(int32_t Value); // Function ConZ.GameEventBase.SetNumberOfTeams
	bool ScheduleEvent(); // Function ConZ.GameEventBase.ScheduleEvent
	void SavePrisonerState(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.SavePrisonerState
	bool SameTeam(struct APrisoner* prisonerA, struct APrisoner* prisonerB); // Function ConZ.GameEventBase.SameTeam
	void ResetGameEventArea(); // Function ConZ.GameEventBase.ResetGameEventArea
	void RegisterParticipant(struct APrisoner* Prisoner, int32_t preferredTeam); // Function ConZ.GameEventBase.RegisterParticipant
	void PresentSpawnScreen(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.PresentSpawnScreen
	void ParticipantEnter(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.ParticipantEnter
	void OnRep_Rankings(); // Function ConZ.GameEventBase.OnRep_Rankings
	void OnRep_ParticipantInfo(); // Function ConZ.GameEventBase.OnRep_ParticipantInfo
	void NetMulticast_UpdateScoreboard(int32_t victimIndex, int32_t killerIndex, bool IsHeadShot); // Function ConZ.GameEventBase.NetMulticast_UpdateScoreboard
	void Multicast_StopMusic(struct UAkAudioEvent* StopAudioEvent); // Function ConZ.GameEventBase.Multicast_StopMusic
	void Multicast_StopCountdownAnnouncement(); // Function ConZ.GameEventBase.Multicast_StopCountdownAnnouncement
	void Multicast_ShowScoreboardForEveryone(); // Function ConZ.GameEventBase.Multicast_ShowScoreboardForEveryone
	void Multicast_ShowEventNotification(uint8_t  Type, struct FString auxString); // Function ConZ.GameEventBase.Multicast_ShowEventNotification
	void Multicast_PlayMusic(struct UAkAudioEvent* StartAudioEvent); // Function ConZ.GameEventBase.Multicast_PlayMusic
	void Multicast_PlayCountdownAnnouncement(struct UAkAudioEvent* Sound); // Function ConZ.GameEventBase.Multicast_PlayCountdownAnnouncement
	void Multicast_PlayAnnouncementToTeam(int32_t TeamIndex, struct UAkAudioEvent* Sound); // Function ConZ.GameEventBase.Multicast_PlayAnnouncementToTeam
	void Multicast_PlayAnnouncementToParticipant(struct APrisoner* Prisoner, struct UAkAudioEvent* Sound); // Function ConZ.GameEventBase.Multicast_PlayAnnouncementToParticipant
	void Multicast_PlayAnnouncementToAllParticipants(struct UAkAudioEvent* Sound); // Function ConZ.GameEventBase.Multicast_PlayAnnouncementToAllParticipants
	void Multicast_HideScoreboardForEveryone(); // Function ConZ.GameEventBase.Multicast_HideScoreboardForEveryone
	void KickParticipant(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.KickParticipant
	bool IsTeamFull(int32_t TeamIndex); // Function ConZ.GameEventBase.IsTeamFull
	bool IsParticipating(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.IsParticipating
	void InitEvent(struct AGameEventLocationMarker* marker, struct AGameEventManager* manager); // Function ConZ.GameEventBase.InitEvent
	struct TArray<int32_t> GetWinningTeamsPerRound(); // Function ConZ.GameEventBase.GetWinningTeamsPerRound
	float GetTeamScore(int32_t TeamIndex); // Function ConZ.GameEventBase.GetTeamScore
	int32_t GetTeamMemberCount(int32_t TeamIndex); // Function ConZ.GameEventBase.GetTeamMemberCount
	float GetStatusTime(); // Function ConZ.GameEventBase.GetStatusTime
	struct FRotator GetSpawnRotationForLocation(struct FVector Location); // Function ConZ.GameEventBase.GetSpawnRotationForLocation
	struct UGameEventScoreboardWidget* GetScoreboardWidget(); // Function ConZ.GameEventBase.GetScoreboardWidget
	float GetRoundTimeLeft(); // Function ConZ.GameEventBase.GetRoundTimeLeft
	void GetPossibleLoadout(struct APrisoner* Prisoner, struct TArray<struct UItemSelection*>& primaryWeapons, struct TArray<struct UItemSelection*>& secondaryWeapons, struct TArray<struct UItemSelection*>& tertiaryWeapons, struct TArray<struct UItemSelection*>& outfits, struct TArray<struct UItemSelection*>& support, struct TArray<struct UItemSelection*>& Gear); // Function ConZ.GameEventBase.GetPossibleLoadout
	int32_t GetParticipantTeam(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.GetParticipantTeam
	struct FVector GetParticipantJoinLocation(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.GetParticipantJoinLocation
	struct TArray<struct FGameEventParticipantInfo> GetParticipantInfo(); // Function ConZ.GameEventBase.GetParticipantInfo
	int32_t GetParticipantAtRank(int32_t Rank); // Function ConZ.GameEventBase.GetParticipantAtRank
	struct FGameEventParameters GetParameters(); // Function ConZ.GameEventBase.GetParameters
	int32_t GetNumberOfTeams(); // Function ConZ.GameEventBase.GetNumberOfTeams
	int32_t GetNumberOfParticipants(); // Function ConZ.GameEventBase.GetNumberOfParticipants
	int32_t GetNumberOfActiveParticipants(); // Function ConZ.GameEventBase.GetNumberOfActiveParticipants
	struct UGameEventScoreboardWidget* GetMiniScoreboardWidget(); // Function ConZ.GameEventBase.GetMiniScoreboardWidget
	float GetMaxDurationLeft(); // Function ConZ.GameEventBase.GetMaxDurationLeft
	struct AGameEventLocationMarker* GetMarker(); // Function ConZ.GameEventBase.GetMarker
	uint8_t  GetEventState(); // Function ConZ.GameEventBase.GetEventState
	struct FDbIntegerId GetDatabaseEventId(); // Function ConZ.GameEventBase.GetDatabaseEventId
	struct FDbIntegerId GetCurrentRoundDatabaseId(); // Function ConZ.GameEventBase.GetCurrentRoundDatabaseId
	int32_t GetCurrentRound(); // Function ConZ.GameEventBase.GetCurrentRound
	struct UGameEventCardWidget* GetCardWidget(); // Function ConZ.GameEventBase.GetCardWidget
	float GetCancelTimeLeft(); // Function ConZ.GameEventBase.GetCancelTimeLeft
	struct AGameEventBorder* GetBorder(); // Function ConZ.GameEventBase.GetBorder
	void ForceParticipantStatsRep(int32_t Index); // Function ConZ.GameEventBase.ForceParticipantStatsRep
	int32_t FindParticipantIndex(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.FindParticipantIndex
	void EquipParticipantLoadout(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.EquipParticipantLoadout
	int32_t DeclareWinningTeam(); // Function ConZ.GameEventBase.DeclareWinningTeam
	void ConvertScoreToFame(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.ConvertScoreToFame
	void ClearTeamScores(); // Function ConZ.GameEventBase.ClearTeamScores
	struct FVector ChooseSpawnLocation(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.ChooseSpawnLocation
	void CheckParticipatingPrisoners(); // Function ConZ.GameEventBase.CheckParticipatingPrisoners
	bool CanStart(); // Function ConZ.GameEventBase.CanStart
	bool CanSchedule(); // Function ConZ.GameEventBase.CanSchedule
	bool CanJoin(struct APrisoner* Prisoner, int32_t preferredTeam); // Function ConZ.GameEventBase.CanJoin
	void CancelEvent(bool force); // Function ConZ.GameEventBase.CancelEvent
	void CallInParticipant(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.CallInParticipant
	void AwardParticipant(int32_t Index, struct FGameEventRewardPoints& reward); // Function ConZ.GameEventBase.AwardParticipant
	int32_t AssignParticipantTeam(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.AssignParticipantTeam
}; 



// Class ConZ.ZombieImpersonatingItemTag
// Size: 0x30(Inherited: 0x30) 
struct UZombieImpersonatingItemTag : public UBaseItemTag
{

}; 



// Class ConZ.AdminCommand_TeleportToMe
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_TeleportToMe : public UAdminCommand
{

}; 



// Class ConZ.GrapplingWidget
// Size: 0x288(Inherited: 0x260) 
struct UGrapplingWidget : public UUserWidget
{
	struct UImage* _gameProgress;  // 0x260(0x8)
	struct UImage* _grapplingValue;  // 0x268(0x8)
	struct UTextBlock* _instructionText;  // 0x270(0x8)
	char pad_632[16];  // 0x278(0x10)

}; 



// Class ConZ.ItemTooltipPanelElement
// Size: 0x268(Inherited: 0x260) 
struct UItemTooltipPanelElement : public UUserWidget
{
	struct FName _elementName;  // 0x260(0x8)

	void OnTextDataChanged(struct FText& Value); // Function ConZ.ItemTooltipPanelElement.OnTextDataChanged
	void OnNumberDataChanged(float Value); // Function ConZ.ItemTooltipPanelElement.OnNumberDataChanged
}; 



// Class ConZ.InsertMagazineInsertCartridge
// Size: 0xA0(Inherited: 0x90) 
struct UInsertMagazineInsertCartridge : public UWeaponActionReloadSequence
{
	struct FName MontageEndSectionName;  // 0x90(0x8)
	char pad_152[8];  // 0x98(0x8)

}; 



// Class ConZ.AdminCommand_SetFarmingSimulationSpeed
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetFarmingSimulationSpeed : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_SetGodMode
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetGodMode : public UAdminCommand
{

}; 



// Class ConZ.PrisonerBodySimulationUIController
// Size: 0x1E8(Inherited: 0x28) 
struct UPrisonerBodySimulationUIController : public UObject
{
	char pad_40[448];  // 0x28(0x1C0)

}; 



// Class ConZ.PrisonerBodySymptomCause_Diarrhea
// Size: 0x40(Inherited: 0x40) 
struct UPrisonerBodySymptomCause_Diarrhea : public UPrisonerBodySymptomCause_PeriodicAffect
{

}; 



// Class ConZ.BrokenArrow
// Size: 0x910(Inherited: 0x910) 
struct ABrokenArrow : public AItem
{

}; 



// Class ConZ.CharacterSpawnerSpawnee
// Size: 0x28(Inherited: 0x28) 
struct UCharacterSpawnerSpawnee : public UInterface
{

	void SetupCharacter(struct FCharacterSpawneeInfo& spawneeInfo); // Function ConZ.CharacterSpawnerSpawnee.SetupCharacter
}; 



// Class ConZ.DropdownMenuTextureSelectionWidget
// Size: 0x2B0(Inherited: 0x2A8) 
struct UDropdownMenuTextureSelectionWidget : public UDropdownMenuSelectionWidget
{
	struct UTexture2D* Texture;  // 0x2A8(0x8)

}; 



// Class ConZ.AdminCommand_SetHairLength
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetHairLength : public UAdminCommand
{

}; 



// Class ConZ.HaircutAndMakeupService
// Size: 0x38(Inherited: 0x38) 
struct UHaircutAndMakeupService : public UTraderService
{

}; 



// Class ConZ.AdminCommand_SetHealthToItemInHands
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetHealthToItemInHands : public UAdminCommand
{

}; 



// Class ConZ.ArrayStatics
// Size: 0x28(Inherited: 0x28) 
struct UArrayStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.WeaponAttachmentAutoCrossbowMagazine
// Size: 0x9E0(Inherited: 0x9E0) 
struct AWeaponAttachmentAutoCrossbowMagazine : public AWeaponAttachmentMagazine
{

	float GetFollowerBoneLocationOffset(); // Function ConZ.WeaponAttachmentAutoCrossbowMagazine.GetFollowerBoneLocationOffset
}; 



// Class ConZ.PrisonerActionRemovePlant
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionRemovePlant : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerBodySymptomUIData_Pain
// Size: 0xC0(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_Pain : public UPrisonerBodySymptomUIData
{
	char pad_168[24];  // 0xA8(0x18)

}; 



// Class ConZ.BreathingBarLungsWidget
// Size: 0x280(Inherited: 0x260) 
struct UBreathingBarLungsWidget : public UUserWidget
{
	char pad_608[8];  // 0x260(0x8)
	struct UImage* _lungs;  // 0x268(0x8)
	struct UImage* _lungsCritical;  // 0x270(0x8)
	struct UWidgetAnimation* _criticalStateAnimation;  // 0x278(0x8)

}; 



// Class ConZ.IgnitableExplosiveItemComponent
// Size: 0x208(Inherited: 0x1A0) 
struct UIgnitableExplosiveItemComponent : public UIgnitableItemComponent
{
	float _explosionDamage;  // 0x1A0(0x4)
	float _explosionOuterRadius;  // 0x1A4(0x4)
	float _explosionInnerRadius;  // 0x1A8(0x4)
	float _explosionFalloff;  // 0x1AC(0x4)
	float _explosionForce;  // 0x1B0(0x4)
	char pad_436[4];  // 0x1B4(0x4)
	struct FTargetTypeDamageMultiplier _targetTypeMultiplier;  // 0x1B8(0x10)
	char pad_456[8];  // 0x1C8(0x8)
	struct UParticleSystem* _explosionParticle;  // 0x1D0(0x8)
	struct UAkAudioEvent* _explosionAudioEvent;  // 0x1D8(0x8)
	UMatineeCameraShake* _explosionCameraShakeClass;  // 0x1E0(0x8)
	float _hearingDamageRadius;  // 0x1E8(0x4)
	float _activeNetCullDistanceSquaredMeters;  // 0x1EC(0x4)
	char pad_496_1 : 7;  // 0x1F0(0x1)
	bool _canExplodeUnderwater : 1;  // 0x1F0(0x1)
	char pad_497[23];  // 0x1F1(0x17)

	void Multicast_OnDetonate(struct FVector zeroBasedLocation); // Function ConZ.IgnitableExplosiveItemComponent.Multicast_OnDetonate
}; 



// Class ConZ.AdminCommand_SetInfiniteAmmo
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetInfiniteAmmo : public UAdminCommand
{

}; 



// Class ConZ.VehiclePowertrainComponent
// Size: 0xB0(Inherited: 0xB0) 
struct UVehiclePowertrainComponent : public UActorComponent
{

}; 



// Class ConZ.Inv2021_InventoryPositionClothesObject
// Size: 0x38(Inherited: 0x28) 
struct UInv2021_InventoryPositionClothesObject : public UInv2021_InventoryPositionObject
{
	char pad_40[16];  // 0x28(0x10)

}; 



// Class ConZ.ConZBaseElement
// Size: 0x328(Inherited: 0x220) 
struct AConZBaseElement : public AActor
{
	char pad_544[48];  // 0x220(0x30)
	USceneComponent* _weatherMaskComponentClass;  // 0x250(0x8)
	char pad_600[8];  // 0x258(0x8)
	struct TMap<struct UStaticMesh*, struct UIndexedHierarchicalInstancedStaticMeshComponent*> _elementClassMap;  // 0x260(0x50)
	char pad_688[120];  // 0x2B0(0x78)

}; 



// Class ConZ.ClearSearchButton
// Size: 0x280(Inherited: 0x260) 
struct UClearSearchButton : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct UWidgetAnimation* _hoverAnimation;  // 0x270(0x8)
	struct UWidgetAnimation* _clickAnimation;  // 0x278(0x8)

}; 



// Class ConZ.PrisonerBodySymptomUIData_Weakness
// Size: 0xB8(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_Weakness : public UPrisonerBodySymptomUIData
{
	char pad_168[16];  // 0xA8(0x10)

}; 



// Class ConZ.WeaponDamageGroup
// Size: 0x50(Inherited: 0x30) 
struct UWeaponDamageGroup : public UDataAsset
{
	float Head;  // 0x30(0x4)
	float Neck;  // 0x34(0x4)
	float Torso;  // 0x38(0x4)
	float ArmUpper;  // 0x3C(0x4)
	float Abdomen;  // 0x40(0x4)
	float LegUpper;  // 0x44(0x4)
	float OtherLimbs;  // 0x48(0x4)
	char pad_76[4];  // 0x4C(0x4)

}; 



// Class ConZ.CustomZoneSettingsHandlingMethodSelector
// Size: 0x2C0(Inherited: 0x260) 
struct UCustomZoneSettingsHandlingMethodSelector : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct FText _description;  // 0x278(0x18)
	struct UTextBlock* _nameText;  // 0x290(0x8)
	struct UButton* _buttonSkip;  // 0x298(0x8)
	struct UButton* _buttonAllow;  // 0x2A0(0x8)
	struct UButton* _buttonBlock;  // 0x2A8(0x8)
	struct UCustomZoneDataAsset* _customZoneData;  // 0x2B0(0x8)
	char pad_696_1 : 7;  // 0x2B8(0x1)
	bool _showSkipOption : 1;  // 0x2B8(0x1)
	char pad_697[7];  // 0x2B9(0x7)

	void HandleSelectionSkip(); // Function ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionSkip
	void HandleSelectionBlock(); // Function ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionBlock
	void HandleSelectionAllow(); // Function ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionAllow
	struct FText GetHandlingMethodDescription(uint8_t  Method); // Function ConZ.CustomZoneSettingsHandlingMethodSelector.GetHandlingMethodDescription
}; 



// Class ConZ.WheeledVehicle2WAnimInstance
// Size: 0xA50(Inherited: 0xA50) 
struct UWheeledVehicle2WAnimInstance : public UWheeledVehicleBaseAnimInstance
{

}; 



// Class ConZ.AnimNotifyState_WeaponRevolverIgnoreDrumRotation
// Size: 0x30(Inherited: 0x30) 
struct UAnimNotifyState_WeaponRevolverIgnoreDrumRotation : public UAnimNotifyState
{

}; 



// Class ConZ.BedrollVirtualizedItemUserData
// Size: 0x48(Inherited: 0x28) 
struct UBedrollVirtualizedItemUserData : public UVirtualizedItemUserData
{
	struct FDbIntegerId Occupant;  // 0x28(0x8)
	struct FDateTime TimerStart;  // 0x30(0x8)
	struct FTimespan TimerDuration;  // 0x38(0x8)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool ShouldLoad : 1;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)

}; 



// Class ConZ.AdminCommand_SetItemDebugMode
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetItemDebugMode : public UAdminCommand
{

}; 



// Class ConZ.PrisonerActionTuneBow
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionTuneBow : public UPrisonerAction
{
	struct UAkAudioEvent* _tuneBowAudioEvent;  // 0x108(0x8)

}; 



// Class ConZ.FishSchoolActor
// Size: 0x480(Inherited: 0x220) 
struct AFishSchoolActor : public AActor
{
	uint8_t  _currentState;  // 0x220(0x1)
	char pad_545[47];  // 0x221(0x2F)
	struct UCapsuleComponent* _capsuleComponent;  // 0x250(0x8)
	struct UFishInstancedStaticMeshComponent* _schoolInstancedStaticMeshComponent;  // 0x258(0x8)
	char pad_608[44];  // 0x260(0x2C)
	float _minDistanceToTarget;  // 0x28C(0x4)
	float _boundsInflation;  // 0x290(0x4)
	float _findPathBypassMultiplier;  // 0x294(0x4)
	int32_t _maxTimesSameDestinationAllowed;  // 0x298(0x4)
	float _maxTimePerDestinationMultiplier;  // 0x29C(0x4)
	char pad_672[4];  // 0x2A0(0x4)
	float _schoolMovementRecoveryTurningSpeed;  // 0x2A4(0x4)
	float _schoolMovementRecoveryAcceleration;  // 0x2A8(0x4)
	float _schoolMovementRecoveryDeceleration;  // 0x2AC(0x4)
	float _schoolCloseToSurfaceTurningSpeed;  // 0x2B0(0x4)
	float _schoolCloseToSurfaceAcceleration;  // 0x2B4(0x4)
	float _schoolCloseToSurfaceDeceleration;  // 0x2B8(0x4)
	float _surfaceOffset;  // 0x2BC(0x4)
	char pad_704[4];  // 0x2C0(0x4)
	float _upperForbiddenZoneDepthPercentage;  // 0x2C4(0x4)
	float _swimmingDepthPercentage;  // 0x2C8(0x4)
	float _lowerForbiddenZoneDepthPercentage;  // 0x2CC(0x4)
	struct UParticleSystem* _waterParticles;  // 0x2D0(0x8)
	float _waterParticlesInterval;  // 0x2D8(0x4)
	char pad_732[4];  // 0x2DC(0x4)
	struct UParticleSystemComponent* _waterParticlesComponent;  // 0x2E0(0x8)
	char pad_744[4];  // 0x2E8(0x4)
	int32_t _forcedNumberOfGroups;  // 0x2EC(0x4)
	float _groupSpeed;  // 0x2F0(0x4)
	float _groupSeparationSpeed;  // 0x2F4(0x4)
	float _groupCatchUpSpeed;  // 0x2F8(0x4)
	float _groupSeparationDistance;  // 0x2FC(0x4)
	char pad_768[4];  // 0x300(0x4)
	float _groupSeparationTime;  // 0x304(0x4)
	int32_t _minNumberOfFish;  // 0x308(0x4)
	int32_t _maxNumberOfFish;  // 0x30C(0x4)
	char pad_784[4];  // 0x310(0x4)
	float _maxFishDistance;  // 0x314(0x4)
	char pad_792[4];  // 0x318(0x4)
	float _fishSeparationDistance;  // 0x31C(0x4)
	float _fishSeparationTime;  // 0x320(0x4)
	char pad_804[4];  // 0x324(0x4)
	float _fishTurnSpeedRangeModifier;  // 0x328(0x4)
	float _fishMinScale;  // 0x32C(0x4)
	float _fishMaxScale;  // 0x330(0x4)
	float _fishNormalSpeed;  // 0x334(0x4)
	float _fishSeparationSpeed;  // 0x338(0x4)
	float _fishCatchUpSpeed;  // 0x33C(0x4)
	float _fishMaxSpeed;  // 0x340(0x4)
	float _fishAcceleration;  // 0x344(0x4)
	float _fishDeceleration;  // 0x348(0x4)
	char pad_844[76];  // 0x34C(0x4C)
	struct FVector _moveToLocationRep;  // 0x398(0xC)
	char pad_932[12];  // 0x3A4(0xC)
	struct TMap<uint8_t , struct FFishStateParameters> _behaviorMap;  // 0x3B0(0x50)
	struct FVector _randomMovementExtent;  // 0x400(0xC)
	float _fleeingDistanceFromEnemy;  // 0x40C(0x4)
	float _fleeingPathLength;  // 0x410(0x4)
	float _returnToNormalBehaviorDistance;  // 0x414(0x4)
	float _schoolInternalMovementRelevancyDistanceSquared;  // 0x418(0x4)
	char pad_1052[16];  // 0x41C(0x10)
	float _fadeInTime;  // 0x42C(0x4)
	char pad_1072[4];  // 0x430(0x4)
	float _fadeOutTime;  // 0x434(0x4)
	char pad_1080[72];  // 0x438(0x48)

	void OnRep_MoveToLocationRep(); // Function ConZ.FishSchoolActor.OnRep_MoveToLocationRep
	void OnRep_CurrentState(); // Function ConZ.FishSchoolActor.OnRep_CurrentState
}; 



// Class ConZ.AdminCommand_SetMalfunctionProbability
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetMalfunctionProbability : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_SetPrisonerAttributes
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetPrisonerAttributes : public UAdminCommand
{

}; 



// Class ConZ.MissionResult
// Size: 0x280(Inherited: 0x260) 
struct UMissionResult : public UUserWidget
{
	struct UOverlay* _resultTitleOverlay;  // 0x260(0x8)
	struct UTextBlock* _resultTitleDescription;  // 0x268(0x8)
	struct UOverlay* _resultRewardContainerOverlay;  // 0x270(0x8)
	struct UVerticalBox* _resultRewardContainer;  // 0x278(0x8)

	void PlayShowMissionResultAnimation(); // Function ConZ.MissionResult.PlayShowMissionResultAnimation
}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Weakness
// Size: 0xD8(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_Weakness : public UPrisonerBodyConditionOrSymptomSideEffect
{
	UPrisonerBodySymptom_Weakness* _symptomClass;  // 0x30(0x8)
	struct UPrisonerBodySymptomCause_Weakness* _symptomCause;  // 0x38(0x8)
	struct FRuntimeFloatCurve _performanceScoreModifierVsSeverity;  // 0x40(0x88)
	float _strengthModifierPerPerformanceScoreModifier;  // 0xC8(0x4)
	float _constitutionModifierPerPerformanceScoreModifier;  // 0xCC(0x4)
	float _dexterityModifierPerPerformanceScoreModifier;  // 0xD0(0x4)
	char pad_212[4];  // 0xD4(0x4)

}; 



// Class ConZ.CustomZoneRegistry
// Size: 0x200(Inherited: 0xB0) 
struct UCustomZoneRegistry : public UActorComponent
{
	char pad_176[16];  // 0xB0(0x10)
	struct UMaterialInterface* _mapMaterial;  // 0xC0(0x8)
	struct FCustomZoneConfiguration _defaultGlobalConfiguration;  // 0xC8(0x40)
	struct FCustomZoneConfiguration _defaultConfiguration;  // 0x108(0x40)
	struct TMap<struct FName, struct FCustomZoneRegion> _defaultRegions;  // 0x148(0x50)
	struct UCanvasRenderTarget2D* _mapTexture;  // 0x198(0x8)
	char pad_416[96];  // 0x1A0(0x60)

	void NetMulticast_ReceiveCustomZoneData(struct FCustomZoneConfiguration globalConfiguration, struct TArray<struct FCustomZoneConfiguration> configurations, struct TArray<struct FCustomZoneRegion> Regions); // Function ConZ.CustomZoneRegistry.NetMulticast_ReceiveCustomZoneData
}; 



// Class ConZ.ConZButton
// Size: 0x28(Inherited: 0x28) 
struct UConZButton : public UInterface
{

}; 



// Class ConZ.PrisonerVehicleAction_SetupCarJack
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerVehicleAction_SetupCarJack : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerActionStartPlayingInstrument
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionStartPlayingInstrument : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerActionSearchGroundDescription
// Size: 0x68(Inherited: 0x38) 
struct UPrisonerActionSearchGroundDescription : public UPrisonerActionDescription
{
	char pad_56[48];  // 0x38(0x30)

}; 



// Class ConZ.CombinationLockGetCombinationRequest
// Size: 0x40(Inherited: 0x28) 
struct UCombinationLockGetCombinationRequest : public UPlayerRpcChannelServerRequest
{
	char pad_40[24];  // 0x28(0x18)

}; 



// Class ConZ.InstrumentItem
// Size: 0xB10(Inherited: 0x910) 
struct AInstrumentItem : public AItem
{
	char pad_2320[12];  // 0x910(0xC)
	int32_t _numberOfOctaves;  // 0x91C(0x4)
	struct UAnimMontage* _playInstrumentStartMontageFP;  // 0x920(0x8)
	struct UAnimMontage* _playInstrumentStartMontageTP;  // 0x928(0x8)
	struct UAnimMontage* _playInstrumentStopMontageFP;  // 0x930(0x8)
	struct UAnimMontage* _playInstrumentStopMontageTP;  // 0x938(0x8)
	struct UAnimSequenceBase* _playInstrumentIdleAnimationFP;  // 0x940(0x8)
	struct UAnimSequenceBase* _playInstrumentPlayingAnimationFP;  // 0x948(0x8)
	struct UAnimSequenceBase* _playInstrumentIdleAnimationTP;  // 0x950(0x8)
	struct UAnimSequenceBase* _playInstrumentPlayingAnimationTP;  // 0x958(0x8)
	float _playingPoseHoldTime;  // 0x960(0x4)
	char pad_2404[4];  // 0x964(0x4)
	struct TArray<struct UAkAudioEvent*> _noteCStart;  // 0x968(0x10)
	struct TArray<struct UAkAudioEvent*> _noteCStop;  // 0x978(0x10)
	struct TArray<struct UAkAudioEvent*> _noteDStart;  // 0x988(0x10)
	struct TArray<struct UAkAudioEvent*> _noteDStop;  // 0x998(0x10)
	struct TArray<struct UAkAudioEvent*> _noteDbStart;  // 0x9A8(0x10)
	struct TArray<struct UAkAudioEvent*> _noteDbStop;  // 0x9B8(0x10)
	struct TArray<struct UAkAudioEvent*> _noteEStart;  // 0x9C8(0x10)
	struct TArray<struct UAkAudioEvent*> _noteEStop;  // 0x9D8(0x10)
	struct TArray<struct UAkAudioEvent*> _noteEbStart;  // 0x9E8(0x10)
	struct TArray<struct UAkAudioEvent*> _noteEbStop;  // 0x9F8(0x10)
	struct TArray<struct UAkAudioEvent*> _noteFStart;  // 0xA08(0x10)
	struct TArray<struct UAkAudioEvent*> _noteFStop;  // 0xA18(0x10)
	struct TArray<struct UAkAudioEvent*> _noteGStart;  // 0xA28(0x10)
	struct TArray<struct UAkAudioEvent*> _noteGStop;  // 0xA38(0x10)
	struct TArray<struct UAkAudioEvent*> _noteGbStart;  // 0xA48(0x10)
	struct TArray<struct UAkAudioEvent*> _noteGbStop;  // 0xA58(0x10)
	struct TArray<struct UAkAudioEvent*> _noteAStart;  // 0xA68(0x10)
	struct TArray<struct UAkAudioEvent*> _noteAStop;  // 0xA78(0x10)
	struct TArray<struct UAkAudioEvent*> _noteAbStart;  // 0xA88(0x10)
	struct TArray<struct UAkAudioEvent*> _noteAbStop;  // 0xA98(0x10)
	struct TArray<struct UAkAudioEvent*> _noteBStart;  // 0xAA8(0x10)
	struct TArray<struct UAkAudioEvent*> _noteBStop;  // 0xAB8(0x10)
	struct TArray<struct UAkAudioEvent*> _noteBbStart;  // 0xAC8(0x10)
	struct TArray<struct UAkAudioEvent*> _noteBbStop;  // 0xAD8(0x10)
	struct TArray<struct UAkAudioEvent*> _noteC2Start;  // 0xAE8(0x10)
	struct TArray<struct UAkAudioEvent*> _noteC2Stop;  // 0xAF8(0x10)
	char pad_2824[8];  // 0xB08(0x8)

}; 



// Class ConZ.AdminCommand_SetPrisonerExhaustion
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetPrisonerExhaustion : public UAdminCommand
{

}; 



// Class ConZ.TabModeTabsContainer
// Size: 0x2A8(Inherited: 0x260) 
struct UTabModeTabsContainer : public UUserWidget
{
	struct UHorizontalBox* _mainHorizontalBox;  // 0x260(0x8)
	struct UTabModeTab* _inventoryTab;  // 0x268(0x8)
	struct UTabModeTab* _craftingTab;  // 0x270(0x8)
	struct UTabModeTab* _buildingTab;  // 0x278(0x8)
	struct UTabModeTab* _metabolismTab;  // 0x280(0x8)
	struct UTabModeTab* _journalTab;  // 0x288(0x8)
	struct UTabModeTab* _squadTab;  // 0x290(0x8)
	struct UTabModeTab* _eventsTab;  // 0x298(0x8)
	struct UTabModeTab* _cookingTab;  // 0x2A0(0x8)

}; 



// Class ConZ.AdminCommandArgumentDataType_Bool
// Size: 0x110(Inherited: 0x108) 
struct UAdminCommandArgumentDataType_Bool : public UAdminCommandArgumentDataTypeBase
{
	char pad_264_1 : 7;  // 0x108(0x1)
	bool _defaultValue : 1;  // 0x108(0x1)
	char pad_265[7];  // 0x109(0x7)

}; 



// Class ConZ.RainCollectorComponent
// Size: 0xF8(Inherited: 0xC8) 
struct URainCollectorComponent : public UItemComponent
{
	struct FDbIntegerId _collectorID;  // 0xC8(0x8)
	char pad_208[4];  // 0xD0(0x4)
	float _fillRate;  // 0xD4(0x4)
	float _maxAmount;  // 0xD8(0x4)
	char pad_220[12];  // 0xDC(0xC)
	struct UAkAudioEvent* _collectingStartSound;  // 0xE8(0x8)
	struct UAkAudioEvent* _collectingStopSound;  // 0xF0(0x8)

	void OnResourceAmountChanged(struct UBasicGameResourceContainerComponent* containerComponent, float newAmount); // Function ConZ.RainCollectorComponent.OnResourceAmountChanged
	void OnRep_CollectorID(); // Function ConZ.RainCollectorComponent.OnRep_CollectorID
}; 



// Class ConZ.AdminCommand_SetPrisonerImmortality
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetPrisonerImmortality : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_SetPrisonerInfiniteOxygen
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetPrisonerInfiniteOxygen : public UAdminCommand
{

}; 



// Class ConZ.BasicItemDecayEntityComponentSetup
// Size: 0x50(Inherited: 0x48) 
struct UBasicItemDecayEntityComponentSetup : public UEntityComponentSetup
{
	float LifeTime;  // 0x48(0x4)
	char pad_76[4];  // 0x4C(0x4)

}; 



// Class ConZ.EventInsertCartridge
// Size: 0xA0(Inherited: 0x90) 
struct UEventInsertCartridge : public UWeaponActionReloadSequence
{
	struct FName MontageEndSectionName;  // 0x90(0x8)
	char pad_152[8];  // 0x98(0x8)

}; 



// Class ConZ.PrisonerActionApplyFlagElementsExpansion
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionApplyFlagElementsExpansion : public UPrisonerAction
{

}; 



// Class ConZ.AnimNotifyState_ShowAmmunitionMeshes
// Size: 0x60(Inherited: 0x30) 
struct UAnimNotifyState_ShowAmmunitionMeshes : public UAnimNotifyState
{
	char pad_48_1 : 7;  // 0x30(0x1)
	bool GenerateCustomMeshComponents : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct TArray<struct FName> CustomMeshComponentsBoneNames;  // 0x38(0x10)
	char pad_72_1 : 7;  // 0x48(0x1)
	bool showReversed : 1;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	struct TArray<int32_t> ammoIndices;  // 0x50(0x10)

}; 



// Class ConZ.BaseItemContainerWidget
// Size: 0x298(Inherited: 0x260) 
struct UBaseItemContainerWidget : public UUserWidget
{
	struct FMulticastInlineDelegate ObjectAddedToContainer;  // 0x260(0x10)
	char pad_624[4];  // 0x270(0x4)
	int32_t Columns;  // 0x274(0x4)
	int32_t Rows;  // 0x278(0x4)
	char pad_636[4];  // 0x27C(0x4)
	struct UGridPanel* GridPanel;  // 0x280(0x8)
	struct UUserWidget* HighlightBorder;  // 0x288(0x8)
	char pad_656[8];  // 0x290(0x8)

	void RefreshSize(); // Function ConZ.BaseItemContainerWidget.RefreshSize
	void OnObjectAddedToContainerEvent__DelegateSignature(struct UObject* Object); // DelegateFunction ConZ.BaseItemContainerWidget.OnObjectAddedToContainerEvent__DelegateSignature
	void OnDropEvent(struct UInventorySlotUserWidget* inventorySlot, struct UBaseItemWidget* Item); // Function ConZ.BaseItemContainerWidget.OnDropEvent
	void OnDragStartEvent(struct UBaseItemWidget* Widget, struct FGeometry& Geometry); // Function ConZ.BaseItemContainerWidget.OnDragStartEvent
	void OnDragLeaveEvent(struct UInventorySlotUserWidget* inventorySlot, struct UBaseItemWidget* Widget); // Function ConZ.BaseItemContainerWidget.OnDragLeaveEvent
	void OnDragEnterEvent(struct UInventorySlotUserWidget* inventorySlot, struct UBaseItemWidget* Widget); // Function ConZ.BaseItemContainerWidget.OnDragEnterEvent
	void OnDragCancelledEvent(struct UBaseItemWidget* Widget); // Function ConZ.BaseItemContainerWidget.OnDragCancelledEvent
	void InitGrid(struct FMargin& gridPadding); // Function ConZ.BaseItemContainerWidget.InitGrid
	bool GetSlotsForPanel(struct UGridSlot* GridSlot, int32_t Width, int32_t Height, struct TArray<struct UInventorySlotUserWidget*>& Slots, struct UGridPanel* panel, int32_t numColumns, int32_t numRows); // Function ConZ.BaseItemContainerWidget.GetSlotsForPanel
	bool GetSlots(struct UGridSlot* GridSlot, int32_t Width, int32_t Height, struct TArray<struct UInventorySlotUserWidget*>& Slots); // Function ConZ.BaseItemContainerWidget.GetSlots
	struct TArray<struct UItemUserWidget*> GetItemWidgets(); // Function ConZ.BaseItemContainerWidget.GetItemWidgets
}; 



// Class ConZ.AdminCommand_SetPrisonerInfiniteStamina
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetPrisonerInfiniteStamina : public UAdminCommand
{

}; 



// Class ConZ.ImageSlotWidget
// Size: 0x3D8(Inherited: 0x260) 
struct UImageSlotWidget : public UUserWidget
{
	char pad_608[72];  // 0x260(0x48)
	struct UImage* _availabilityGrid;  // 0x2A8(0x8)
	struct UImage* _backgroundImage;  // 0x2B0(0x8)
	struct UImage* _displayedImage;  // 0x2B8(0x8)
	struct FSlateBrush _defaultImageBrush;  // 0x2C0(0x88)
	char pad_840[8];  // 0x348(0x8)
	struct FLinearColor _regularColor;  // 0x350(0x10)
	struct FLinearColor _dropUnavailableColor;  // 0x360(0x10)
	struct FLinearColor _dropAvailableColor;  // 0x370(0x10)
	float _defaultBackgroundOpacity;  // 0x380(0x4)
	float _slottedBackgroundOpacity;  // 0x384(0x4)
	struct FSlateColor _defaultIconTint;  // 0x388(0x28)
	struct FSlateColor _slottedIconTint;  // 0x3B0(0x28)

}; 



// Class ConZ.PrisonerActionOperateBondage
// Size: 0x120(Inherited: 0x108) 
struct UPrisonerActionOperateBondage : public UPrisonerAction
{
	char pad_264[24];  // 0x108(0x18)

}; 



// Class ConZ.AdminCommand_SetPrisonerMetabolismSimulationSpeed
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetPrisonerMetabolismSimulationSpeed : public UAdminCommand
{

}; 



// Class ConZ.InventoryPositionDataSelection
// Size: 0x30(Inherited: 0x28) 
struct UInventoryPositionDataSelection : public UInventoryPositionData
{
	int32_t position;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)

}; 



// Class ConZ.PrisonerAnimInstance
// Size: 0x1150(Inherited: 0x2C0) 
struct UPrisonerAnimInstance : public UAnimInstance
{
	float SlowPaceLoopAnimSpeeds[16];  // 0x2B8(0x58)
	float MediumPaceLoopAnimSpeeds[16];  // 0x310(0x58)
	float FastPaceLoopAnimSpeeds[16];  // 0x368(0x58)
	float MeleeCombatWalkUsageRadius;  // 0x3C0(0x4)
	float MeleeExhaustionFactorInterpSpeed;  // 0x3C4(0x4)
	float UpperEyelidsLookLeftFactor;  // 0x3C8(0x4)
	float LowerEyelidsLookLeftFactor;  // 0x3CC(0x4)
	float UpperEyelidsLookRightFactor;  // 0x3D0(0x4)
	float LowerEyelidsLookRightFactor;  // 0x3D4(0x4)
	float UpperEyelidsLookUpFactor;  // 0x3D8(0x4)
	float LowerEyelidsLookUpFactor;  // 0x3DC(0x4)
	float UpperEyelidsLookDownFactor;  // 0x3E0(0x4)
	float LowerEyelidsLookDownFactor;  // 0x3E4(0x4)
	char pad_1008_1 : 7;  // 0x3F0(0x1)
	bool AutoBlinkEnabled : 1;  // 0x3E8(0x1)
	char pad_1009[151];  // 0x3F1(0x97)
	char pad_1160_1 : 7;  // 0x488(0x1)
	bool _isPrisonerCompletelyInitialized : 1;  // 0x488(0x1)
	char pad_1161_1 : 7;  // 0x489(0x1)
	bool _isOwnerLocallyControlled : 1;  // 0x489(0x1)
	char pad_1162_1 : 7;  // 0x48A(0x1)
	bool _isOwnerPlayerControlled : 1;  // 0x48A(0x1)
	char pad_1163_1 : 7;  // 0x48B(0x1)
	bool _isFemale : 1;  // 0x48B(0x1)
	char pad_1164_1 : 7;  // 0x48C(0x1)
	bool _isInFirstPersonView : 1;  // 0x48C(0x1)
	char pad_1165_1 : 7;  // 0x48D(0x1)
	bool _shouldOverrideIsInFirstPersonView : 1;  // 0x48D(0x1)
	char pad_1166_1 : 7;  // 0x48E(0x1)
	bool _isInFirstPersonViewOverride : 1;  // 0x48E(0x1)
	char pad_1167_1 : 7;  // 0x48F(0x1)
	bool _isInFirstPersonViewAndIsFemale : 1;  // 0x48F(0x1)
	char pad_1168_1 : 7;  // 0x490(0x1)
	bool _isInThirdPersonViewAndIsFemale : 1;  // 0x490(0x1)
	char pad_1169_1 : 7;  // 0x491(0x1)
	bool _isAimingWeapon : 1;  // 0x491(0x1)
	char pad_1170_1 : 7;  // 0x492(0x1)
	bool _isAbleToFireWeapon : 1;  // 0x492(0x1)
	uint8_t  _weaponAimingType;  // 0x493(0x1)
	struct FVector _supportingHandIKLocation;  // 0x494(0xC)
	float _weaponAimYaw;  // 0x4A0(0x4)
	float _weaponAimPitch;  // 0x4A4(0x4)
	struct UAnimSequenceBase* _meleeSkill_PrimaryIdleAnimationTP;  // 0x4A8(0x8)
	struct UAnimSequenceBase* _meleeSkill_PrimaryIdleAnimationFP;  // 0x4B0(0x8)
	struct UAnimSequenceBase* _meleeSkill_TiredIdleAnimationTP;  // 0x4B8(0x8)
	struct UAnimSequenceBase* _meleeSkill_TiredIdleAnimationFP;  // 0x4C0(0x8)
	struct UAnimSequenceBase* _meleeSkill_WalkingIdleAnimationTP;  // 0x4C8(0x8)
	struct UAnimSequenceBase* _meleeSkill_WalkingIdleAnimationFP;  // 0x4D0(0x8)
	struct UAnimSequenceBase* _meleeSkill_BlockIdleAnimationTP;  // 0x4D8(0x8)
	struct UAnimSequenceBase* _meleeSkill_BlockIdleAnimationFP;  // 0x4E0(0x8)
	struct UBlendSpace* _meleeSkill_AimOffsetBlendSpaceTP;  // 0x4E8(0x8)
	struct UBlendSpace* _meleeSkill_AimOffsetBlendSpaceFP;  // 0x4F0(0x8)
	float _meleeSkill_IdleToBlockBlendDuration;  // 0x4F8(0x4)
	float _meleeSkill_BlockToIdleBlendDuration;  // 0x4FC(0x4)
	float _meleeSkill_ExhaustionFactor;  // 0x500(0x4)
	char pad_1284_1 : 7;  // 0x504(0x1)
	bool _shouldUseUnarmedCombatWalk : 1;  // 0x504(0x1)
	char pad_1285_1 : 7;  // 0x505(0x1)
	bool _isHoldingBlock : 1;  // 0x505(0x1)
	char pad_1286[2];  // 0x506(0x2)
	float _stamina;  // 0x508(0x4)
	float _bellyJiggleAmount;  // 0x50C(0x4)
	float _breastJiggleAmount;  // 0x510(0x4)
	struct FRotator _eyesRotationDelta;  // 0x514(0xC)
	float _minEyesRotationPitch;  // 0x520(0x4)
	float _maxEyesRotationPitch;  // 0x524(0x4)
	char pad_1320_1 : 7;  // 0x528(0x1)
	bool _shouldUseWeaponAnimationPose : 1;  // 0x528(0x1)
	char pad_1321[231];  // 0x529(0xE7)
	char pad_1552_1 : 7;  // 0x610(0x1)
	bool _shouldIgnoreSupportingHandIK : 1;  // 0x610(0x1)
	char pad_1553[3];  // 0x611(0x3)
	float _firstPersonAimPitch;  // 0x614(0x4)
	float _firstPersonAimYawDelta;  // 0x618(0x4)
	char pad_1564_1 : 7;  // 0x61C(0x1)
	bool _shouldAimDownTheSights : 1;  // 0x61C(0x1)
	char pad_1565[3];  // 0x61D(0x3)
	struct FVector _aimingDownTheSightsLocationOffset;  // 0x620(0xC)
	struct FVector _scopeViewArmDislocationOffset;  // 0x62C(0xC)
	struct FRotator _armsLagRotation;  // 0x638(0xC)
	float _armsLagPitch;  // 0x644(0x4)
	float _armsLagYaw;  // 0x648(0x4)
	uint8_t  _stance;  // 0x64C(0x1)
	char pad_1613[3];  // 0x64D(0x3)
	float _crouchStage;  // 0x650(0x4)
	float _targetCrouchStage;  // 0x654(0x4)
	char pad_1624_1 : 7;  // 0x658(0x1)
	bool _isFreeLookEnabled : 1;  // 0x658(0x1)
	char pad_1625_1 : 7;  // 0x659(0x1)
	bool _shouldIgnoreHeadTurning : 1;  // 0x659(0x1)
	char pad_1626[2];  // 0x65A(0x2)
	struct FRotator _aimOffset;  // 0x65C(0xC)
	float _leanAmount;  // 0x668(0x4)
	char pad_1644_1 : 7;  // 0x66C(0x1)
	bool _shouldLookAtMeleeTarget : 1;  // 0x66C(0x1)
	char pad_1645[3];  // 0x66D(0x3)
	struct FRotator _lookAtMeleeTargetAimOffset;  // 0x670(0xC)
	uint8_t  _animationSet;  // 0x67C(0x1)
	char pad_1661_1 : 7;  // 0x67D(0x1)
	bool _isInRagdoll : 1;  // 0x67D(0x1)
	char pad_1662_1 : 7;  // 0x67E(0x1)
	bool _isMovingOnGround : 1;  // 0x67E(0x1)
	char pad_1663_1 : 7;  // 0x67F(0x1)
	bool _isFalling : 1;  // 0x67F(0x1)
	char pad_1664_1 : 7;  // 0x680(0x1)
	bool _isSwimming : 1;  // 0x680(0x1)
	char pad_1665[3];  // 0x681(0x3)
	struct FVector _acceleration;  // 0x684(0xC)
	char pad_1680_1 : 7;  // 0x690(0x1)
	bool _wantsToMove : 1;  // 0x690(0x1)
	char pad_1681_1 : 7;  // 0x691(0x1)
	bool _wantsToMoveHorizontallyOnly : 1;  // 0x691(0x1)
	char pad_1682_1 : 7;  // 0x692(0x1)
	bool _wantsToMoveVerticallyOnly : 1;  // 0x692(0x1)
	char pad_1683_1 : 7;  // 0x693(0x1)
	bool _wantsToWalk : 1;  // 0x693(0x1)
	char pad_1684_1 : 7;  // 0x694(0x1)
	bool _wantsToJog : 1;  // 0x694(0x1)
	char pad_1685_1 : 7;  // 0x695(0x1)
	bool _wantsToRun : 1;  // 0x695(0x1)
	char pad_1686[2];  // 0x696(0x2)
	struct FVector _velocity;  // 0x698(0xC)
	char pad_1700[4];  // 0x6A4(0x4)
	float _speed;  // 0x6A8(0x4)
	float _speedXY;  // 0x6AC(0x4)
	float _maxSpeed;  // 0x6B0(0x4)
	float _stoppingDistance;  // 0x6B4(0x4)
	char pad_1720[124];  // 0x6B8(0x7C)
	float _leftHandIKAmount;  // 0x734(0x4)
	float _desiredCourseAngle;  // 0x738(0x4)
	float _desiredCoursePitchAngle;  // 0x73C(0x4)
	float _actualCourseAngle;  // 0x740(0x4)
	uint8_t  _desiredMovementPace;  // 0x744(0x1)
	uint8_t  _clampedDesiredMovementPace;  // 0x745(0x1)
	uint8_t  _movementPaceBeforeGroundStart;  // 0x746(0x1)
	char pad_1863[1];  // 0x747(0x1)
	float _groundStartAnimPlayRate;  // 0x748(0x4)
	float _legsPoseBeforeGroundStop;  // 0x74C(0x4)
	uint8_t  _movementDirectionBeforeGroundStop;  // 0x750(0x1)
	uint8_t  _movementPaceBeforeGroundStop;  // 0x751(0x1)
	uint8_t  _animationSetBeforeGroundStop;  // 0x752(0x1)
	char pad_1875_1 : 7;  // 0x753(0x1)
	bool _shouldUseLUGroundStopAnimation : 1;  // 0x753(0x1)
	uint8_t  _hitReactState;  // 0x754(0x1)
	char pad_1877[3];  // 0x755(0x3)
	float _weightLoadFactor;  // 0x758(0x4)
	char pad_1884_1 : 7;  // 0x75C(0x1)
	bool _shouldUseJogStartForRunStart : 1;  // 0x75C(0x1)
	char pad_1885_1 : 7;  // 0x75D(0x1)
	bool _useLocomotionAdditiveAnimations : 1;  // 0x75D(0x1)
	char pad_1886[2];  // 0x75E(0x2)
	float _disorientation;  // 0x760(0x4)
	float _disorientationMultiplier;  // 0x764(0x4)
	char pad_1896_1 : 7;  // 0x768(0x1)
	bool _isLimping : 1;  // 0x768(0x1)
	char pad_1897_1 : 7;  // 0x769(0x1)
	bool _shouldRotateBonesWithFirstPersonAimPitch : 1;  // 0x769(0x1)
	char pad_1898[6];  // 0x76A(0x6)
	float _jumpApex;  // 0x770(0x4)
	float _distanceToJumpApex;  // 0x774(0x4)
	float _legsPoseBeforeJump;  // 0x778(0x4)
	uint8_t  _movementPaceBeforeJump;  // 0x77C(0x1)
	uint8_t  _animationSetBeforeJump;  // 0x77D(0x1)
	char pad_1918_1 : 7;  // 0x77E(0x1)
	bool _shouldJumpGoToFallingLoop : 1;  // 0x77E(0x1)
	char pad_1919[1];  // 0x77F(0x1)
	float _waterImmersionDepth;  // 0x780(0x4)
	struct FVector _meshOffsetWhenInWater;  // 0x784(0xC)
	char pad_1936_1 : 7;  // 0x790(0x1)
	bool _wantsToDiveIn : 1;  // 0x790(0x1)
	char pad_1937[211];  // 0x791(0xD3)
	char pad_2148_1 : 7;  // 0x864(0x1)
	bool _isClimbing : 1;  // 0x864(0x1)
	char pad_2149_1 : 7;  // 0x865(0x1)
	bool _isClimbingAnchoring : 1;  // 0x865(0x1)
	char pad_2150[138];  // 0x866(0x8A)
	struct UAnimSequenceBase* _climbAnchoringAnimation;  // 0x8F0(0x8)
	float _climbAnchoringAnimationTime;  // 0x8F8(0x4)
	char pad_2300_1 : 7;  // 0x8FC(0x1)
	bool _isClimbingLadder : 1;  // 0x8FC(0x1)
	char pad_2301[179];  // 0x8FD(0xB3)
	struct FVector _ladderClimbingRootBoneOffset;  // 0x9B0(0xC)
	float _ladderClimbingLoopState;  // 0x9BC(0x4)
	float _ladderClimbingLoopStateForPeeking;  // 0x9C0(0x4)
	float _ladderClimbingPeekState;  // 0x9C4(0x4)
	char pad_2504_1 : 7;  // 0x9C8(0x1)
	bool _isClimbingWindow : 1;  // 0x9C8(0x1)
	char pad_2505_1 : 7;  // 0x9C9(0x1)
	bool _isClimbingWindowAnchoring : 1;  // 0x9C9(0x1)
	char pad_2506[6];  // 0x9CA(0x6)
	struct UAnimSequenceBase* _windowClimbingAnchoringAnimation;  // 0x9D0(0x8)
	float _windowClimbingAnchoringAnimationTime;  // 0x9D8(0x4)
	uint8_t  _weaponType;  // 0x9DC(0x1)
	char pad_2525_1 : 7;  // 0x9DD(0x1)
	bool _isDedicatedServer : 1;  // 0x9DD(0x1)
	char pad_2526[842];  // 0x9DE(0x34A)
	struct UAnimSequenceBase* _itemFirstPersonUpperBodyStandIdle;  // 0xD28(0x8)
	struct UBlendSpace1D* _itemFirstPersonUpperBodyStandWalk;  // 0xD30(0x8)
	struct UBlendSpace1D* _itemFirstPersonUpperBodyStandWalkLimping;  // 0xD38(0x8)
	struct UBlendSpace1D* _itemFirstPersonUpperBodyStandJog;  // 0xD40(0x8)
	struct UBlendSpace1D* _itemFirstPersonUpperBodyStandJogLimping;  // 0xD48(0x8)
	struct UAnimSequenceBase* _itemFirstPersonUpperBodyStandRun;  // 0xD50(0x8)
	struct UAnimSequenceBase* _itemFirstPersonUpperBodyCrouchIdle;  // 0xD58(0x8)
	struct UBlendSpace1D* _itemFirstPersonUpperBodyCrouchWalk;  // 0xD60(0x8)
	struct UBlendSpace1D* _itemFirstPersonUpperBodyCrouchWalkLimping;  // 0xD68(0x8)
	struct UAnimSequenceBase* _itemFirstPersonUpperBodyProneIdle;  // 0xD70(0x8)
	struct UAnimSequenceBase* _weaponAimingHipFirstPersonUpperBodyStandIdle;  // 0xD78(0x8)
	struct UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyStandWalk;  // 0xD80(0x8)
	struct UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyStandWalkLimping;  // 0xD88(0x8)
	struct UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyStandJog;  // 0xD90(0x8)
	struct UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyStandJogLimping;  // 0xD98(0x8)
	struct UAnimSequenceBase* _weaponAimingHipFirstPersonUpperBodyStandRun;  // 0xDA0(0x8)
	struct UAnimSequenceBase* _weaponAimingHipFirstPersonUpperBodyCrouchIdle;  // 0xDA8(0x8)
	struct UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyCrouchWalk;  // 0xDB0(0x8)
	struct UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyCrouchWalkLimping;  // 0xDB8(0x8)
	struct UAnimSequenceBase* _weaponAimingHipFirstPersonUpperBodyProneIdle;  // 0xDC0(0x8)
	char pad_3528_1 : 7;  // 0xDC8(0x1)
	bool _shouldUseItemFirstPersonAimOffsets : 1;  // 0xDC8(0x1)
	char pad_3529[7];  // 0xDC9(0x7)
	struct UBlendSpace* _itemFirstPersonAimOffsetStanding;  // 0xDD0(0x8)
	struct UBlendSpace* _itemFirstPersonAimOffsetCrouching;  // 0xDD8(0x8)
	struct UBlendSpace* _itemFirstPersonAimOffsetProne;  // 0xDE0(0x8)
	struct UAnimSequenceBase* _rightHandCorrectionPoseStanding;  // 0xDE8(0x8)
	struct UAnimSequenceBase* _rightHandCorrectionPoseCrouching;  // 0xDF0(0x8)
	struct UAnimSequenceBase* _rightHandCorrectionPoseProne;  // 0xDF8(0x8)
	struct UAnimSequenceBase* _rightFistCorrectionPoseStanding;  // 0xE00(0x8)
	struct UAnimSequenceBase* _rightFistCorrectionPoseStandingInCombatMode;  // 0xE08(0x8)
	struct UAnimSequenceBase* _rightFistCorrectionPoseCrouching;  // 0xE10(0x8)
	struct UAnimSequenceBase* _rightFistCorrectionPoseProne;  // 0xE18(0x8)
	float _rightHandToIdleBlendAlphaStanding;  // 0xE20(0x4)
	float _rightHandToIdleBlendAlphaCrouching;  // 0xE24(0x4)
	struct UAnimSequenceBase* _leftHandCorrectionPoseStanding;  // 0xE28(0x8)
	struct UAnimSequenceBase* _leftHandCorrectionPoseCrouching;  // 0xE30(0x8)
	struct UAnimSequenceBase* _leftHandCorrectionPoseProne;  // 0xE38(0x8)
	struct UAnimSequenceBase* _leftFistCorrectionPoseStanding;  // 0xE40(0x8)
	struct UAnimSequenceBase* _leftFistCorrectionPoseStandingInCombatMode;  // 0xE48(0x8)
	struct UAnimSequenceBase* _leftFistCorrectionPoseCrouching;  // 0xE50(0x8)
	struct UAnimSequenceBase* _leftFistCorrectionPoseProne;  // 0xE58(0x8)
	float _leftHandToIdleBlendAlphaStanding;  // 0xE60(0x4)
	float _leftHandToIdleBlendAlphaCrouching;  // 0xE64(0x4)
	char pad_3688[8];  // 0xE68(0x8)
	char pad_3696_1 : 7;  // 0xE70(0x1)
	bool _hasItemInHands : 1;  // 0xE70(0x1)
	char pad_3697[3];  // 0xE71(0x3)
	struct FVector _itemInHandsLeftHandLocationInRightHandSpace;  // 0xE74(0xC)
	struct FRotator _itemInHandsLeftHandRotationInRightHandSpace;  // 0xE80(0xC)
	float _itemInHandsObstructionDepth;  // 0xE8C(0x4)
	float _itemInHandsObstructionDepthSmoothed;  // 0xE90(0x4)
	char pad_3732_1 : 7;  // 0xE94(0x1)
	bool _isItemInHandsObstructed : 1;  // 0xE94(0x1)
	char pad_3733_1 : 7;  // 0xE95(0x1)
	bool _isItemInHandsCompletelyObstructed : 1;  // 0xE95(0x1)
	char pad_3734[2];  // 0xE96(0x2)
	float _itemInHandsObstructionSide;  // 0xE98(0x4)
	char pad_3740[4];  // 0xE9C(0x4)
	struct UAnimSequenceBase* _itemInHandsLeftObstructedIdleFP;  // 0xEA0(0x8)
	struct UAnimSequenceBase* _itemInHandsRightObstructedIdleFP;  // 0xEA8(0x8)
	struct UAnimSequenceBase* _itemInHandsObstructedIdleTP;  // 0xEB0(0x8)
	struct UAnimSequenceBase* _itemInHandsObstructedIdleProneTP;  // 0xEB8(0x8)
	char pad_3776_1 : 7;  // 0xEC0(0x1)
	bool _isInCombatMode : 1;  // 0xEC0(0x1)
	char pad_3777_1 : 7;  // 0xEC1(0x1)
	bool _shouldUseHandCorrections : 1;  // 0xEC1(0x1)
	char pad_3778_1 : 7;  // 0xEC2(0x1)
	bool _shouldUseFistCorrections : 1;  // 0xEC2(0x1)
	char pad_3779_1 : 7;  // 0xEC3(0x1)
	bool _overrideFingersOnlyInProne : 1;  // 0xEC3(0x1)
	char pad_3780_1 : 7;  // 0xEC4(0x1)
	bool _ignoreAimOffsets : 1;  // 0xEC4(0x1)
	uint8_t  _prisonerMontageBlendType;  // 0xEC5(0x1)
	char pad_3782_1 : 7;  // 0xEC6(0x1)
	bool _isAimingBow : 1;  // 0xEC6(0x1)
	char pad_3783[1];  // 0xEC7(0x1)
	float _bowArmsShakeValue;  // 0xEC8(0x4)
	char pad_3788_1 : 7;  // 0xECC(0x1)
	bool _isScoping : 1;  // 0xECC(0x1)
	char pad_3789[83];  // 0xECD(0x53)
	struct TSet<UPrisonerResponseIdle*> _responseIdleClassReferences;  // 0xF20(0x50)
	char pad_3952[48];  // 0xF70(0x30)
	char pad_4000_1 : 7;  // 0xFA0(0x1)
	bool _shouldUpperBodyBeUsedAsFullBodyInIdle : 1;  // 0xFA0(0x1)
	char pad_4001_1 : 7;  // 0xFA1(0x1)
	bool _isPlayingInstrument : 1;  // 0xFA1(0x1)
	char pad_4002[6];  // 0xFA2(0x6)
	struct UAnimSequenceBase* _playingInstrumentIdleAnimation;  // 0xFA8(0x8)
	struct UAnimSequenceBase* _playingInstrumentPlayAnimation;  // 0xFB0(0x8)
	uint8_t  _playingInstrumentState;  // 0xFB8(0x1)
	char pad_4025_1 : 7;  // 0xFB9(0x1)
	bool _isCarryingItem : 1;  // 0xFB9(0x1)
	char pad_4026[6];  // 0xFBA(0x6)
	struct UAnimSequenceBase* _carryingItemIdleFPAnimation;  // 0xFC0(0x8)
	struct UAnimSequenceBase* _carryingItemIdleTPAnimation;  // 0xFC8(0x8)
	uint8_t  _carryingItemState;  // 0xFD0(0x1)
	char pad_4049_1 : 7;  // 0xFD1(0x1)
	bool _isMounted : 1;  // 0xFD1(0x1)
	char pad_4050[6];  // 0xFD2(0x6)
	struct UAnimSequenceBase* _mountedAnimation;  // 0xFD8(0x8)
	char pad_4064_1 : 7;  // 0xFE0(0x1)
	bool _isVehicleDriver : 1;  // 0xFE0(0x1)
	char pad_4065[7];  // 0xFE1(0x7)
	struct UBlendSpace* _vehicleDriverForwardIdleAnimation;  // 0xFE8(0x8)
	struct UAnimSequenceBase* _vehicleDriverForwardSteeringAnimation;  // 0xFF0(0x8)
	struct UAnimSequenceBase* _vehicleDriverForwardSteeringAnimationFP;  // 0xFF8(0x8)
	struct UBlendSpace* _vehicleDriverReverseIdleAnimation;  // 0x1000(0x8)
	struct UAnimSequenceBase* _vehicleDriverReverseSteeringAnimation;  // 0x1008(0x8)
	struct UAnimSequenceBase* _vehicleDriverReverseSteeringAnimationFP;  // 0x1010(0x8)
	struct UBlendSpace* _vehiclePassengerIdleAnimation;  // 0x1018(0x8)
	float _vehicleSpeed;  // 0x1020(0x4)
	float _vehicleSpeedKph;  // 0x1024(0x4)
	float _vehicleBumpiness;  // 0x1028(0x4)
	float _vehicleDriverSteeringAnimationTime;  // 0x102C(0x4)
	float _vehicleDriverSteeringAnimationTimeInterpSpeed;  // 0x1030(0x4)
	float _vehicleThrottleAmount;  // 0x1034(0x4)
	float _vehicleBrakeAmount;  // 0x1038(0x4)
	float _vehicleHandbrakeAmount;  // 0x103C(0x4)
	float _vehicleSteerAmount;  // 0x1040(0x4)
	char pad_4164_1 : 7;  // 0x1044(0x1)
	bool _isSledgeAcceleratingForward : 1;  // 0x1044(0x1)
	char pad_4165_1 : 7;  // 0x1045(0x1)
	bool _isSledgeAcceleratingBackward : 1;  // 0x1045(0x1)
	char pad_4166[2];  // 0x1046(0x2)
	float _sledgeSlidingThresholdSpeed;  // 0x1048(0x4)
	char pad_4172_1 : 7;  // 0x104C(0x1)
	bool _isSledgeSliding : 1;  // 0x104C(0x1)
	char pad_4173[3];  // 0x104D(0x3)
	struct UAnimSequenceBase* _bowArmsShakeAnimation;  // 0x1050(0x8)
	float _weaponBreathFactor;  // 0x1058(0x4)
	float _weaponAimDownTheSightsStillBlendFactor;  // 0x105C(0x4)
	char pad_4192_1 : 7;  // 0x1060(0x1)
	bool _areHandsBound : 1;  // 0x1060(0x1)
	char pad_4193[7];  // 0x1061(0x7)
	struct UAnimSequenceBase* _handsBoundIdleFPAnimation;  // 0x1068(0x8)
	struct UAnimSequenceBase* _handsBoundIdleTPAnimation;  // 0x1070(0x8)
	char pad_4216_1 : 7;  // 0x1078(0x1)
	bool _isResting : 1;  // 0x1078(0x1)
	char pad_4217[7];  // 0x1079(0x7)
	struct UAnimSequenceBase* _restingAnimation;  // 0x1080(0x8)
	float _restingFeetOffset;  // 0x1088(0x4)
	float _cameraToActorRotationDeltaYaw;  // 0x108C(0x4)
	float _cameraToActorRotationDeltaPitch;  // 0x1090(0x4)
	uint8_t  _vehicleWeaponAimingStance;  // 0x1094(0x1)
	char pad_4245_1 : 7;  // 0x1095(0x1)
	bool _useMountedFirstPersonWeaponAimingParameters : 1;  // 0x1095(0x1)
	char pad_4246[2];  // 0x1096(0x2)
	struct FVector _vehicleWAPLocationOffsetDefaultStanceFP;  // 0x1098(0xC)
	struct FVector _vehicleWAPLocationOffsetLeaningStanceFP;  // 0x10A4(0xC)
	char pad_4272_1 : 7;  // 0x10B0(0x1)
	bool _useMountedThirdPersonWeaponAimingParameters : 1;  // 0x10B0(0x1)
	char pad_4273[7];  // 0x10B1(0x7)
	struct UBlendSpace* _vehicleWAPAimOffsetTP;  // 0x10B8(0x8)
	char pad_4288_1 : 7;  // 0x10C0(0x1)
	bool _useVehicleWAPAimOffsetTP : 1;  // 0x10C0(0x1)
	char pad_4289[7];  // 0x10C1(0x7)
	struct UBlendSpace* _vehicleWAPAimOffsetDefaultStanceTP;  // 0x10C8(0x8)
	char pad_4304_1 : 7;  // 0x10D0(0x1)
	bool _useVehicleWAPAimOffsetDefaultStanceTP : 1;  // 0x10D0(0x1)
	char pad_4305[7];  // 0x10D1(0x7)
	struct UBlendSpace* _vehicleWAPAimOffsetLeaningStanceTP;  // 0x10D8(0x8)
	char pad_4320_1 : 7;  // 0x10E0(0x1)
	bool _useVehicleWAPAimOffsetLeaningStanceTP : 1;  // 0x10E0(0x1)
	char pad_4321_1 : 7;  // 0x10E1(0x1)
	bool _useVehicleWAPUpperBodyIdleTP : 1;  // 0x10E1(0x1)
	char pad_4322[6];  // 0x10E2(0x6)
	struct UAnimSequenceBase* _vehicleWAPUpperBodyIdleRelaxedTP;  // 0x10E8(0x8)
	struct UAnimSequenceBase* _vehicleWAPUpperBodyIdleAimingTP;  // 0x10F0(0x8)
	char pad_4344_1 : 7;  // 0x10F8(0x1)
	bool _useVehicleWAPLowerBodyIdleTP : 1;  // 0x10F8(0x1)
	char pad_4345[7];  // 0x10F9(0x7)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedTP;  // 0x1100(0x8)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingTP;  // 0x1108(0x8)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedDefaultTP;  // 0x1110(0x8)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingDefaultTP;  // 0x1118(0x8)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedLeaningTP;  // 0x1120(0x8)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingLeaningTP;  // 0x1128(0x8)
	char pad_4400_1 : 7;  // 0x1130(0x1)
	bool _isPlayingWAPStanceTransitionMontage : 1;  // 0x1130(0x1)
	char pad_4401_1 : 7;  // 0x1131(0x1)
	bool _isActivelyFishing : 1;  // 0x1131(0x1)
	char pad_4402_1 : 7;  // 0x1132(0x1)
	bool _isBaitingFish : 1;  // 0x1132(0x1)
	char pad_4403_1 : 7;  // 0x1133(0x1)
	bool _isGrappled : 1;  // 0x1133(0x1)
	char pad_4404_1 : 7;  // 0x1134(0x1)
	bool _useWeaponAimingDownTheSightsZeroRangeBlendSpace : 1;  // 0x1134(0x1)
	char pad_4405[3];  // 0x1135(0x3)
	struct UBlendSpace1D* _weaponAimingDownTheSightsZeroRangeBlendSpace;  // 0x1138(0x8)
	float _weaponZeroRange;  // 0x1140(0x4)
	char pad_4420_1 : 7;  // 0x1144(0x1)
	bool _isInPhotoMode : 1;  // 0x1144(0x1)
	char pad_4421_1 : 7;  // 0x1145(0x1)
	bool _hasHighHeels : 1;  // 0x1145(0x1)
	char pad_4422[10];  // 0x1146(0xA)

	void TakePenis(); // Function ConZ.PrisonerAnimInstance.TakePenis
	void ReleasePenis(); // Function ConZ.PrisonerAnimInstance.ReleasePenis
	void OnIdleStateExit(struct FAnimNode_StateMachine& Machine, int32_t prevStateIndex, int32_t nextStateIndex); // Function ConZ.PrisonerAnimInstance.OnIdleStateExit
	void OnIdleStateEntry(struct FAnimNode_StateMachine& Machine, int32_t prevStateIndex, int32_t nextStateIndex); // Function ConZ.PrisonerAnimInstance.OnIdleStateEntry
	bool IsCourseAngleSupportedByStartAndStopAnimations(float courseAngle); // Function ConZ.PrisonerAnimInstance.IsCourseAngleSupportedByStartAndStopAnimations
	bool IsAnyStanceTransitionActive(); // Function ConZ.PrisonerAnimInstance.IsAnyStanceTransitionActive
	float GetWeaponRelatedIdleStateAnimationPlayRateOnGameThread(); // Function ConZ.PrisonerAnimInstance.GetWeaponRelatedIdleStateAnimationPlayRateOnGameThread
	struct UAnimSequenceBase* GetWeaponAnimationPoseOnWorkerThread(uint8_t  animationPose, uint8_t  stance); // Function ConZ.PrisonerAnimInstance.GetWeaponAnimationPoseOnWorkerThread
	struct UBlendSpace* GetWeaponAimOffsetOnGameThread(uint8_t  prisonerAimOffsetType); // Function ConZ.PrisonerAnimInstance.GetWeaponAimOffsetOnGameThread
	float GetWeaponAimingNoisePlayRateOnGameThread(); // Function ConZ.PrisonerAnimInstance.GetWeaponAimingNoisePlayRateOnGameThread
	float GetWeaponAimingNoiseBlendValueOnGameThread(); // Function ConZ.PrisonerAnimInstance.GetWeaponAimingNoiseBlendValueOnGameThread
	float GetVehicleThrottleAmount(); // Function ConZ.PrisonerAnimInstance.GetVehicleThrottleAmount
	float GetVehicleSteerAmount(); // Function ConZ.PrisonerAnimInstance.GetVehicleSteerAmount
	float GetVehicleSpeedKph(); // Function ConZ.PrisonerAnimInstance.GetVehicleSpeedKph
	float GetVehicleSpeed(); // Function ConZ.PrisonerAnimInstance.GetVehicleSpeed
	struct UBlendSpace* GetVehiclePassengerIdleAnimation(); // Function ConZ.PrisonerAnimInstance.GetVehiclePassengerIdleAnimation
	float GetVehicleHandbrakeAmount(); // Function ConZ.PrisonerAnimInstance.GetVehicleHandbrakeAmount
	struct UBlendSpace* GetVehicleDriverForwardIdleAnimation(); // Function ConZ.PrisonerAnimInstance.GetVehicleDriverForwardIdleAnimation
	float GetVehicleBumpiness(); // Function ConZ.PrisonerAnimInstance.GetVehicleBumpiness
	float GetVehicleBrakeAmount(); // Function ConZ.PrisonerAnimInstance.GetVehicleBrakeAmount
	struct FRotator GetUpperEyelidRotationDelta(); // Function ConZ.PrisonerAnimInstance.GetUpperEyelidRotationDelta
	float GetStandLookBlendAlpha(); // Function ConZ.PrisonerAnimInstance.GetStandLookBlendAlpha
	float GetPlayRateFromSpeed(float speedInAnimation, float MinPlayRate, float MaxPlayRate); // Function ConZ.PrisonerAnimInstance.GetPlayRateFromSpeed
	float GetPenisSize(); // Function ConZ.PrisonerAnimInstance.GetPenisSize
	struct FRotator GetLowerEyelidRotationDelta(); // Function ConZ.PrisonerAnimInstance.GetLowerEyelidRotationDelta
	float GetLocomotionStateWeight(uint8_t  State); // Function ConZ.PrisonerAnimInstance.GetLocomotionStateWeight
	void GetLeanBlendWeights(float& Left, float& Right, float Multiplier, struct UCurveFloat* strengthBySpeedCurve); // Function ConZ.PrisonerAnimInstance.GetLeanBlendWeights
	float GetKnownCurveValueOnWorkerThread(uint8_t  Curve); // Function ConZ.PrisonerAnimInstance.GetKnownCurveValueOnWorkerThread
	bool GetIsVehicleDriver(); // Function ConZ.PrisonerAnimInstance.GetIsVehicleDriver
	float GetInPlaceTurningElapsedTimeRight(uint8_t  stance); // Function ConZ.PrisonerAnimInstance.GetInPlaceTurningElapsedTimeRight
	float GetInPlaceTurningElapsedTimeLeft(uint8_t  stance); // Function ConZ.PrisonerAnimInstance.GetInPlaceTurningElapsedTimeLeft
	float GetInPlaceTurningDirectionBlendAlpha(uint8_t  stance); // Function ConZ.PrisonerAnimInstance.GetInPlaceTurningDirectionBlendAlpha
	float GetInPlaceTurningBlendAlpha(uint8_t  stance); // Function ConZ.PrisonerAnimInstance.GetInPlaceTurningBlendAlpha
	struct FVector GetIKLegsRootOffsetVectorFromCardinalDirection(uint8_t  Value); // Function ConZ.PrisonerAnimInstance.GetIKLegsRootOffsetVectorFromCardinalDirection
	float GetFacialExpressionBlendWeightOnWorkerThread(uint8_t  facialExpression); // Function ConZ.PrisonerAnimInstance.GetFacialExpressionBlendWeightOnWorkerThread
	float GetFacialExpressionBlendWeightOnGameThread(uint8_t  facialExpression); // Function ConZ.PrisonerAnimInstance.GetFacialExpressionBlendWeightOnGameThread
	float GetCurrentLocomotionStateElapsedTime(); // Function ConZ.PrisonerAnimInstance.GetCurrentLocomotionStateElapsedTime
	uint8_t  GetCurrentLocomotionState(); // Function ConZ.PrisonerAnimInstance.GetCurrentLocomotionState
	uint8_t  GetCardinalDirectionFromCourseAngle(float Value); // Function ConZ.PrisonerAnimInstance.GetCardinalDirectionFromCourseAngle
	float GetBoxingTurnAngle(); // Function ConZ.PrisonerAnimInstance.GetBoxingTurnAngle
	float GetBoxingInPlaceTurningElapsedTimeRight(); // Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningElapsedTimeRight
	float GetBoxingInPlaceTurningElapsedTimeLeft(); // Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningElapsedTimeLeft
	float GetBoxingInPlaceTurningDirectionBlendAlpha(); // Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningDirectionBlendAlpha
	float GetBoxingInPlaceTurningBlendAlpha(); // Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningBlendAlpha
	struct UAnimSequenceBase* GetBowArmsShakeAnimationOnGameThread(uint8_t  stance); // Function ConZ.PrisonerAnimInstance.GetBowArmsShakeAnimationOnGameThread
	float FindTimeBeforeJumpApex(struct UAnimSequenceBase* AnimSequence, float distanceToApex); // Function ConZ.PrisonerAnimInstance.FindTimeBeforeJumpApex
	float FindTimeAtStoppingDistance(struct UAnimSequenceBase* AnimSequence, float stoppingDistance); // Function ConZ.PrisonerAnimInstance.FindTimeAtStoppingDistance
	float FindTimeAfterJumpApex(struct UAnimSequenceBase* AnimSequence, float distanceToApex); // Function ConZ.PrisonerAnimInstance.FindTimeAfterJumpApex
	void DeactivateFacialExpressionOnGameThread(uint8_t  facialExpression); // Function ConZ.PrisonerAnimInstance.DeactivateFacialExpressionOnGameThread
	void DeactivateAllFacialExpressionsOnGameThread(); // Function ConZ.PrisonerAnimInstance.DeactivateAllFacialExpressionsOnGameThread
	void Blink(); // Function ConZ.PrisonerAnimInstance.Blink
	void AnimNotify_TakePenis(); // Function ConZ.PrisonerAnimInstance.AnimNotify_TakePenis
	void AnimNotify_TakeItemInHands(struct UAnimNotify* Notify); // Function ConZ.PrisonerAnimInstance.AnimNotify_TakeItemInHands
	void AnimNotify_RFootDown(); // Function ConZ.PrisonerAnimInstance.AnimNotify_RFootDown
	void AnimNotify_RemoveItemFromHands(struct UAnimNotify* Notify); // Function ConZ.PrisonerAnimInstance.AnimNotify_RemoveItemFromHands
	void AnimNotify_ReleasePenis(); // Function ConZ.PrisonerAnimInstance.AnimNotify_ReleasePenis
	void AnimNotify_LFootDown(); // Function ConZ.PrisonerAnimInstance.AnimNotify_LFootDown
	void AnimNotify_EnableCapsuleCollision(struct UAnimNotify* Notify); // Function ConZ.PrisonerAnimInstance.AnimNotify_EnableCapsuleCollision
	void AnimNotify_DisableCapsuleCollision(struct UAnimNotify* Notify); // Function ConZ.PrisonerAnimInstance.AnimNotify_DisableCapsuleCollision
	void ActivateFacialExpressionOnGameThread(uint8_t  facialExpression, float BlendInDuration, float Duration, float BlendOutDuration, float blendWeightMultiplier); // Function ConZ.PrisonerAnimInstance.ActivateFacialExpressionOnGameThread
}; 



// Class ConZ.VehicleAttachment
// Size: 0x310(Inherited: 0x28) 
struct UVehicleAttachment : public UObject
{
	char pad_40[16];  // 0x28(0x10)
	struct FName ParentSocket;  // 0x38(0x8)
	struct FVehicleAttachmentMeshSetup MeshSetup;  // 0x40(0x90)
	char pad_208[16];  // 0xD0(0x10)
	struct FVehicleAttachmentMeshSetup QueryMeshSetup;  // 0xE0(0x90)
	char pad_368[8];  // 0x170(0x8)
	struct TArray<struct FVehicleAttachmentAdditionalSocket> AdditionalSockets;  // 0x178(0x10)
	float InstallDuration;  // 0x188(0x4)
	float RepairDuration;  // 0x18C(0x4)
	float RemoveDuration;  // 0x190(0x4)
	char pad_404[4];  // 0x194(0x4)
	struct UWidgetComponent* HealthDisplay;  // 0x198(0x8)
	struct FText _displayName;  // 0x1A0(0x18)
	char pad_440_1 : 7;  // 0x1B8(0x1)
	bool _canEverBeRemoved : 1;  // 0x1B8(0x1)
	char pad_441[7];  // 0x1B9(0x7)
	struct TArray<struct FVehicleAttachmentSlot> _slots;  // 0x1C0(0x10)
	char pad_464_1 : 7;  // 0x1D0(0x1)
	bool _isIndestructible : 1;  // 0x1D0(0x1)
	char pad_465_1 : 7;  // 0x1D1(0x1)
	bool _shouldBeRemovedFromVehicleWhenDestroyed : 1;  // 0x1D1(0x1)
	char pad_466[2];  // 0x1D2(0x2)
	struct FGameplayTag _requiredServiceToolTag;  // 0x1D4(0x8)
	char pad_476[20];  // 0x1DC(0x14)
	int32_t _parentId;  // 0x1F0(0x4)
	int32_t _parentSlotIndex;  // 0x1F4(0x4)
	struct UMaterialInstanceDynamic* _serviceModeMaterial;  // 0x1F8(0x8)
	double _mileage;  // 0x200(0x8)
	char pad_520[1];  // 0x208(0x1)
	char pad_521_1 : 7;  // 0x209(0x1)
	bool _isSupportedForNetworking : 1;  // 0x209(0x1)
	char pad_522[2];  // 0x20A(0x2)
	int32_t _id;  // 0x20C(0x4)
	char pad_528[8];  // 0x210(0x8)
	struct TArray<struct UMaterialInterface*> _cachedMeshMaterials;  // 0x218(0x10)
	float _maxHealth;  // 0x228(0x4)
	float _health;  // 0x22C(0x4)
	float _hardness;  // 0x230(0x4)
	char pad_564[4];  // 0x234(0x4)
	uint64_t _miscState;  // 0x238(0x8)
	float _energyLossMultiplier;  // 0x240(0x4)
	char pad_580[4];  // 0x244(0x4)
	struct TMap<UVehicleAttachment*, struct FDamageAdjacentAttachment> _damageAdjacentAttachments;  // 0x248(0x50)
	char pad_664[16];  // 0x298(0x10)
	float _maximumCollisionDamageAccumulation;  // 0x2A8(0x4)
	char pad_684[4];  // 0x2AC(0x4)
	struct TSoftClassPtr<UObject> AttachmentItemClass;  // 0x2B0(0x28)
	char pad_728[32];  // 0x2D8(0x20)
	char pad_760_1 : 7;  // 0x2F8(0x1)
	bool _isServiceRestrictedToAcceptableModes : 1;  // 0x2F8(0x1)
	char pad_761[7];  // 0x2F9(0x7)
	struct TArray<struct FGameplayTag> _acceptableServiceModes;  // 0x300(0x10)

	void OnRep_MiscState(); // Function ConZ.VehicleAttachment.OnRep_MiscState
	void OnRep_Health(); // Function ConZ.VehicleAttachment.OnRep_Health
	void OnHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function ConZ.VehicleAttachment.OnHit
}; 



// Class ConZ.AdminCommand_SetPrisonerStamina
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetPrisonerStamina : public UAdminCommand
{

}; 



// Class ConZ.AdminCommandsStatics
// Size: 0x28(Inherited: 0x28) 
struct UAdminCommandsStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.AnimStatics
// Size: 0x28(Inherited: 0x28) 
struct UAnimStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.DcxWheeledVehicleAnimInstance
// Size: 0xA90(Inherited: 0xA50) 
struct UDcxWheeledVehicleAnimInstance : public UDcxVehicleAnimInstance
{
	uint8_t  EngineState;  // 0xA48(0x1)
	char pad_2641_1 : 7;  // 0xA51(0x1)
	bool IsEngineRunning : 1;  // 0xA49(0x1)
	float EngineRpm;  // 0xA4C(0x4)
	float EngineRpmInterpSpeed;  // 0xA50(0x4)
	float Speed;  // 0xA54(0x4)
	float SpeedKph;  // 0xA58(0x4)
	float MaxSteeringWheelSteerAngle;  // 0xA5C(0x4)
	float SteeringWheelSteerAngleInterpSpeed;  // 0xA60(0x4)
	float CurrentSteeringWheelSteerAngle;  // 0xA64(0x4)
	struct TArray<float> DoorOpenPercentage;  // 0xA68(0x10)
	struct TArray<float> DoorWindowOpenPercentage;  // 0xA78(0x10)
	char pad_2702[2];  // 0xA8E(0x2)

}; 



// Class ConZ.GameResourceContainer
// Size: 0x28(Inherited: 0x28) 
struct UGameResourceContainer : public UInterface
{

}; 



// Class ConZ.AdminCommand_SetReplishableResourceAmount
// Size: 0x98(Inherited: 0x88) 
struct UAdminCommand_SetReplishableResourceAmount : public UAdminCommand
{
	float _defaultAreaOfEffect;  // 0x88(0x4)
	float _minAreaOfEffect;  // 0x8C(0x4)
	float _maxAreaOfEffect;  // 0x90(0x4)
	char pad_148[4];  // 0x94(0x4)

}; 



// Class ConZ.PrisonerActionResuscitate
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionResuscitate : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.CookingIngredientInfoWidget
// Size: 0x2C0(Inherited: 0x260) 
struct UCookingIngredientInfoWidget : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct FLinearColor _unselectedBorderColor;  // 0x270(0x10)
	struct FLinearColor _selectedBorderColor;  // 0x280(0x10)
	struct UCookingInfoButton* _infoButton;  // 0x290(0x8)
	struct UTextBlock* _amountText;  // 0x298(0x8)
	struct UImage* _ingredientIcon;  // 0x2A0(0x8)
	struct UTextBlock* _titleText;  // 0x2A8(0x8)
	struct UImage* _border;  // 0x2B0(0x8)
	char pad_696[8];  // 0x2B8(0x8)

}; 



// Class ConZ.AdminCommand_SetSkillLevel
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetSkillLevel : public UAdminCommand
{

}; 



// Class ConZ.Mechanic
// Size: 0x9C0(Inherited: 0x930) 
struct AMechanic : public ATrader
{
	struct UMechanicCommonData* _commonData;  // 0x928(0x8)
	float _clientUpdatePeriod;  // 0x930(0x4)
	int32_t _clientUpdateMaxSize;  // 0x934(0x4)
	char pad_2368[128];  // 0x940(0x80)

}; 



// Class ConZ.AdminCommand_SetSuperJump
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetSuperJump : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_SetTime
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetTime : public UAdminCommand
{

}; 



// Class ConZ.HUDNotificationDescription
// Size: 0x60(Inherited: 0x40) 
struct UHUDNotificationDescription : public UNotificationDescription
{
	struct FText Message;  // 0x40(0x18)
	struct UAkAudioEvent* AudioEvent;  // 0x58(0x8)

}; 



// Class ConZ.AdminCommand_SetTimeSpeed
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetTimeSpeed : public UAdminCommand
{

}; 



// Class ConZ.PrisonerActionTreatPatientDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionTreatPatientDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.PrisonerFishingComponent
// Size: 0xD0(Inherited: 0xC0) 
struct UPrisonerFishingComponent : public UCharacterActionComponent
{
	uint8_t  _fishingState;  // 0xC0(0x1)
	char pad_193[15];  // 0xC1(0xF)

	void OnRep_FishingState(); // Function ConZ.PrisonerFishingComponent.OnRep_FishingState
}; 



// Class ConZ.AdminCommand_SetWeather
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetWeather : public UAdminCommand
{

}; 



// Class ConZ.PrisonerActionRemoveWeedDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionRemoveWeedDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.TrapItemState
// Size: 0x150(Inherited: 0x100) 
struct UTrapItemState : public UItemState
{
	char pad_256_1 : 7;  // 0x100(0x1)
	bool IsArmed : 1;  // 0x100(0x1)
	char pad_257_1 : 7;  // 0x101(0x1)
	bool CanBeTriggered : 1;  // 0x101(0x1)
	uint8_t  CurrentTrigger;  // 0x102(0x1)
	char pad_259[5];  // 0x103(0x5)
	struct FDbIntegerId LastTriggerOwner;  // 0x108(0x8)
	struct FDbIntegerId LastArmerId;  // 0x110(0x8)
	float Quality;  // 0x118(0x4)
	char pad_284_1 : 7;  // 0x11C(0x1)
	bool WasTriggered : 1;  // 0x11C(0x1)
	char pad_285[3];  // 0x11D(0x3)
	int32_t NumRemainingDefuseAttempts;  // 0x120(0x4)
	float OwnerlessElapsedTime;  // 0x124(0x4)
	char pad_296_1 : 7;  // 0x128(0x1)
	bool PendingDestroy : 1;  // 0x128(0x1)
	char pad_297[7];  // 0x129(0x7)
	struct UTriggerComponentState* Trigger;  // 0x130(0x8)
	struct TArray<char> TriggerData;  // 0x138(0x10)
	char pad_328[8];  // 0x148(0x8)

}; 



// Class ConZ.PlaceableActorModularBaseBuildingFoundation
// Size: 0x668(Inherited: 0x658) 
struct APlaceableActorModularBaseBuildingFoundation : public APlaceableActorModularBaseBuilding
{
	struct TArray<struct FLineTraceSocketPair> _lineTraceSockets;  // 0x658(0x10)

}; 



// Class ConZ.FishingAttachmentWire
// Size: 0x9A0(Inherited: 0x930) 
struct AFishingAttachmentWire : public AFishingAttachment
{
	struct FName ReelSocketName;  // 0x930(0x8)
	struct UFishingWireComponent* _wireComponent;  // 0x938(0x8)
	UFishingWireComponent* _wireComponentClass;  // 0x940(0x8)
	struct UParticleSystemComponent* _rippleParticleSystemComponent;  // 0x948(0x8)
	float _visibilityFactor;  // 0x950(0x4)
	float _wireWeightThreshold;  // 0x954(0x4)
	float _wireThickness;  // 0x958(0x4)
	float _minWireLength;  // 0x95C(0x4)
	float _maxWireLength;  // 0x960(0x4)
	float _reelInTensionThreshold;  // 0x964(0x4)
	float _wireBreakThreshold;  // 0x968(0x4)
	float _instantWireBreakThreshold;  // 0x96C(0x4)
	float _wireBreakTimerThreshold;  // 0x970(0x4)
	float _wireStrength;  // 0x974(0x4)
	char pad_2424_1 : 7;  // 0x978(0x1)
	bool _simulate : 1;  // 0x978(0x1)
	char pad_2425[39];  // 0x979(0x27)

}; 



// Class ConZ.AdminCommand_SetWeatherControllerOverrideActive
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetWeatherControllerOverrideActive : public UAdminCommand
{

}; 



// Class ConZ.AmbientSounds
// Size: 0x2F8(Inherited: 0x220) 
struct AAmbientSounds : public AActor
{
	float MinCameraLocationDeltaForUpdate;  // 0x220(0x4)
	struct FGameplayTag ForestMask;  // 0x224(0x8)
	float ForestMaskSearchRadius;  // 0x22C(0x4)
	struct UAkAudioEvent* CoastalForestAudioEvent;  // 0x230(0x8)
	struct UAkAudioEvent* ContinentalForest1AudioEvent;  // 0x238(0x8)
	struct UAkAudioEvent* ContinentalForest2AudioEvent;  // 0x240(0x8)
	struct UAkAudioEvent* ContinentalForest3AudioEvent;  // 0x248(0x8)
	struct UAkAudioEvent* UndergroundAudioEvent;  // 0x250(0x8)
	struct FGameplayTag CityMask;  // 0x258(0x8)
	float CityMaskSearchRadius;  // 0x260(0x4)
	char pad_612[4];  // 0x264(0x4)
	struct UAkAudioEvent* CityAudioEvent;  // 0x268(0x8)
	struct UAkAudioEvent* LargeVillageAudioEvent;  // 0x270(0x8)
	struct UAkAudioEvent* SmallVillageAudioEvent;  // 0x278(0x8)
	struct UAkAudioEvent* IndustrialAreaAudioEvent;  // 0x280(0x8)
	char pad_648[112];  // 0x288(0x70)

}; 



// Class ConZ.AdminCommand_SetWeatherControllerOverrideValue
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetWeatherControllerOverrideValue : public UAdminCommand
{

}; 



// Class ConZ.HandheldLightItemState
// Size: 0x110(Inherited: 0x100) 
struct UHandheldLightItemState : public UItemState
{
	int32_t CurrentLightAngleIndex;  // 0x100(0x4)
	float CurrentLightIntensity;  // 0x104(0x4)
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.DcxBicycle
// Size: 0xE30(Inherited: 0xDB0) 
struct ADcxBicycle : public ADcxBike
{
	float _baseStrengthChangeRate;  // 0xDA8(0x4)
	struct UCurveFloat* _strengthChangeRateFactorVsVehicleSpeedKmh;  // 0xDB0(0x8)
	struct UCurveFloat* _strengthChangeRateFactorVsGroundSlope;  // 0xDB8(0x8)
	float _baseConstitutionChangeRate;  // 0xDC0(0x4)
	struct UCurveFloat* _constitutionChangeRateFactorVsVehicleSpeedKmh;  // 0xDC8(0x8)
	struct UCurveFloat* _constitutionChangeRateFactorVsGroundSlope;  // 0xDD0(0x8)
	float _baseRunningSkillExperienceGainRate;  // 0xDD8(0x4)
	char pad_3548[4];  // 0xDDC(0x4)
	struct UCurveFloat* _runningSkillExperienceGainRateFactorVsVehicleSpeedKmh;  // 0xDE0(0x8)
	struct UCurveFloat* _runningSkillExperienceGainRateFactorVsGroundSlope;  // 0xDE8(0x8)
	float _baseEnduranceSkillExperienceGainRate;  // 0xDF0(0x4)
	char pad_3572[4];  // 0xDF4(0x4)
	struct UCurveFloat* _enduranceSkillExperienceGainRateFactorVsVehicleSpeedKmh;  // 0xDF8(0x8)
	struct UCurveFloat* _enduranceSkillExperienceGainRateFactorVsGroundSlope;  // 0xE00(0x8)
	float _baseActionDifficulty;  // 0xE08(0x4)
	char pad_3596[4];  // 0xE0C(0x4)
	struct UCurveFloat* _actionDifficultyFactorVsVehicleSpeedKmh;  // 0xE10(0x8)
	struct UCurveFloat* _actionDifficultyFactorVsGroundSlope;  // 0xE18(0x8)
	float _speedThresholdForAINoise;  // 0xE20(0x4)
	char pad_3620[12];  // 0xE24(0xC)

}; 



// Class ConZ.VehicleHudWidget
// Size: 0x310(Inherited: 0x260) 
struct UVehicleHudWidget : public UUserWidget
{
	struct UVehicleMountSlotIndicators* _mountSlotIndicators;  // 0x260(0x8)
	char pad_616[8];  // 0x268(0x8)
	struct UTextBlock* Speed1s;  // 0x270(0x8)
	struct UTextBlock* Speed10s;  // 0x278(0x8)
	struct UTextBlock* Speed100s;  // 0x280(0x8)
	struct UTextBlock* Gear;  // 0x288(0x8)
	struct UProgressBar* HealthBar;  // 0x290(0x8)
	struct UProgressBar* FuelBar;  // 0x298(0x8)
	struct UProgressBar* BatteryBar;  // 0x2A0(0x8)
	struct UImage* EngineBrokenIndicator;  // 0x2A8(0x8)
	struct UWidgetAnimation* Blink;  // 0x2B0(0x8)
	struct UOverlay* Overlay_1;  // 0x2B8(0x8)
	struct UTextBlock* TextBlock_2;  // 0x2C0(0x8)
	struct UTextBlock* TextBlock_3;  // 0x2C8(0x8)
	struct USizeBox* SizeBox_3;  // 0x2D0(0x8)
	struct USizeBox* SizeBox_4;  // 0x2D8(0x8)
	struct UImage* Image_1;  // 0x2E0(0x8)
	struct UImage* Image_2;  // 0x2E8(0x8)
	struct UImage* Image_3;  // 0x2F0(0x8)
	struct UImage* Image_4;  // 0x2F8(0x8)
	struct UImage* Image_5;  // 0x300(0x8)
	struct UTextBlock* kmh;  // 0x308(0x8)

}; 



// Class ConZ.AdminCommand_ShouldChainTeleportToVehicles
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ShouldChainTeleportToVehicles : public UAdminCommand
{

}; 



// Class ConZ.BaseBuildingStatics
// Size: 0x28(Inherited: 0x28) 
struct UBaseBuildingStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.AdminCommand_ShouldShowOtherPlayerLocations
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ShouldShowOtherPlayerLocations : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_ShowBaseBuildingDebug
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ShowBaseBuildingDebug : public UAdminCommand
{

}; 



// Class ConZ.FishingAttachment
// Size: 0x930(Inherited: 0x910) 
struct AFishingAttachment : public AItem
{
	struct UStaticMesh* _staticMeshWhenAttached;  // 0x910(0x8)
	char pad_2328[24];  // 0x918(0x18)

	void Unequip(); // Function ConZ.FishingAttachment.Unequip
	struct UStaticMesh* GetStaticMeshWhenAttached(); // Function ConZ.FishingAttachment.GetStaticMeshWhenAttached
	struct USkeletalMesh* GetSkeletalMeshWhenAttached(); // Function ConZ.FishingAttachment.GetSkeletalMeshWhenAttached
	struct AFishingRod* GetOwningFishingRod(); // Function ConZ.FishingAttachment.GetOwningFishingRod
	void Equip(struct AFishingRod* FishingRod); // Function ConZ.FishingAttachment.Equip
}; 



// Class ConZ.AdvancedCraftingObjective
// Size: 0x368(Inherited: 0x348) 
struct AAdvancedCraftingObjective : public ACraftingObjective
{
	struct UCraftableItem* _craftableItem;  // 0x348(0x8)
	struct AMissionDialogueManager* _dialogueManager;  // 0x350(0x8)
	struct UDialogueData* _dialogueData;  // 0x358(0x8)
	char pad_864[8];  // 0x360(0x8)

	void OnTabMenuOpenedHandler(uint8_t  tabMode); // Function ConZ.AdvancedCraftingObjective.OnTabMenuOpenedHandler
}; 



// Class ConZ.AdminCommand_ShowFlagLocations
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ShowFlagLocations : public UAdminCommand
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_PerformanceScoreModifier
// Size: 0xC0(Inherited: 0xC0) 
struct UPrisonerBodyConditionOrSymptomSideEffect_PerformanceScoreModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{

}; 



// Class ConZ.GardenCraftableItem
// Size: 0x230(Inherited: 0x1F0) 
struct UGardenCraftableItem : public UPlaceableCraftableItem
{
	UObject* PlaceableItemClass;  // 0x1F0(0x8)
	struct UTexture2D* Icon;  // 0x1F8(0x8)
	struct FText Caption;  // 0x200(0x18)
	struct FText Description;  // 0x218(0x18)

}; 



// Class ConZ.Metabolism_ICU_SPO2_Stats
// Size: 0x290(Inherited: 0x278) 
struct UMetabolism_ICU_SPO2_Stats : public UMetabolism_ICU_Expandable_Stats
{
	struct UTextBlock* _spo2MinMax;  // 0x278(0x8)
	struct UTextBlock* _spo2TextValue;  // 0x280(0x8)
	struct UProgressBar* _spo2ProgBar;  // 0x288(0x8)

}; 



// Class ConZ.AdminCommand_ShowNameplates
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ShowNameplates : public UAdminCommand
{

}; 



// Class ConZ.AnimNotify_PlaySoundBySurface
// Size: 0x48(Inherited: 0x38) 
struct UAnimNotify_PlaySoundBySurface : public UAnimNotify
{
	struct UAkAudioEvent* AudioEvent;  // 0x38(0x8)
	char ECollisionChannel TraceChannel;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)

}; 



// Class ConZ.CleaningItemTag
// Size: 0x30(Inherited: 0x30) 
struct UCleaningItemTag : public UBaseItemTag
{

}; 



// Class ConZ.DropZoneEquipmentTable
// Size: 0x238(Inherited: 0x220) 
struct ADropZoneEquipmentTable : public AActor
{
	struct TArray<struct AItem*> _trackedItems;  // 0x220(0x10)
	char pad_560[8];  // 0x230(0x8)

	void UntrackItem(struct AItem* Item); // Function ConZ.DropZoneEquipmentTable.UntrackItem
	void TrackItem(struct AItem* Item); // Function ConZ.DropZoneEquipmentTable.TrackItem
	void PerformItemCleanup(); // Function ConZ.DropZoneEquipmentTable.PerformItemCleanup
	void OnTrackedItemDestroyed(struct AActor* Actor); // Function ConZ.DropZoneEquipmentTable.OnTrackedItemDestroyed
	void BeginCleaningItems(); // Function ConZ.DropZoneEquipmentTable.BeginCleaningItems
}; 



// Class ConZ.FireworksTrapItem
// Size: 0xA90(Inherited: 0xA60) 
struct AFireworksTrapItem : public ATrapItem
{
	struct UAkAudioEvent* _triggerSound;  // 0xA60(0x8)
	int32_t _numShells;  // 0xA68(0x4)
	float _shellLaunchPeriod;  // 0xA6C(0x4)
	float _detonationDelay;  // 0xA70(0x4)
	char pad_2676[13];  // 0xA74(0xD)
	char pad_2689_1 : 7;  // 0xA81(0x1)
	bool _isFiring : 1;  // 0xA81(0x1)
	char pad_2690[14];  // 0xA82(0xE)

	void OnRep_IsFiring(); // Function ConZ.FireworksTrapItem.OnRep_IsFiring
	void LaunchShell(); // Function ConZ.FireworksTrapItem.LaunchShell
	void Detonate(); // Function ConZ.FireworksTrapItem.Detonate
}; 



// Class ConZ.AdminCommand_ShowRespawnTimes
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ShowRespawnTimes : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_ShowVehicleDebug
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ShowVehicleDebug : public UAdminCommand
{

}; 



// Class ConZ.CheckOccludedDetectablePlayersAction
// Size: 0xA8(Inherited: 0xA0) 
struct UCheckOccludedDetectablePlayersAction : public USkillAction
{
	char pad_160[8];  // 0xA0(0x8)

}; 



// Class ConZ.ClearStovePipe
// Size: 0xC0(Inherited: 0xB8) 
struct UClearStovePipe : public UWeaponActionClearMalfunctionSequence
{
	struct FName MontageEndSectionName;  // 0xB8(0x8)

}; 



// Class ConZ.WarningNotification
// Size: 0x30(Inherited: 0x30) 
struct UWarningNotification : public UConZNotification
{

}; 



// Class ConZ.AdminCommand_ShowVehicleInfo
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ShowVehicleInfo : public UAdminCommand
{

}; 



// Class ConZ.CentralBuildingPanel
// Size: 0x268(Inherited: 0x260) 
struct UCentralBuildingPanel : public UUserWidget
{
	struct UPlacedPlaceableWidget* _placedPlaceableWidget;  // 0x260(0x8)

}; 



// Class ConZ.StartLocation
// Size: 0x258(Inherited: 0x250) 
struct AStartLocation : public APlayerStart
{
	char TypeFlags;  // 0x250(0x1)
	char pad_593_1 : 7;  // 0x251(0x1)
	bool IsDisabled : 1;  // 0x251(0x1)
	char pad_594[6];  // 0x252(0x6)

}; 



// Class ConZ.AnimNotify_ClimbingFinished
// Size: 0x38(Inherited: 0x38) 
struct UAnimNotify_ClimbingFinished : public UAnimNotify
{

}; 



// Class ConZ.ComboBoxStringWithIndexing
// Size: 0xE10(Inherited: 0xE00) 
struct UComboBoxStringWithIndexing : public UComboBoxString
{
	char pad_3584[16];  // 0xE00(0x10)

}; 



// Class ConZ.AdminCommand_ShowVehicleLocations
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ShowVehicleLocations : public UAdminCommand
{

}; 



// Class ConZ.ItemActionSequenceLoadMagazine_RPKDrum
// Size: 0x98(Inherited: 0x90) 
struct UItemActionSequenceLoadMagazine_RPKDrum : public UItemActionSequenceLoadMagazine
{
	char pad_144[8];  // 0x90(0x8)

}; 



// Class ConZ.PrisonerActionSearchGardenSlot
// Size: 0x118(Inherited: 0x118) 
struct UPrisonerActionSearchGardenSlot : public UPrisonerActionSearchObject
{

}; 



// Class ConZ.TrashNamedCarouselWidget
// Size: 0x3C0(Inherited: 0x260) 
struct UTrashNamedCarouselWidget : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct FMulticastInlineDelegate ValueChangedTemp_DONOTUSE;  // 0x290(0x10)
	struct USizeBox* _nameBox;  // 0x2A0(0x8)
	struct UTextBlock* _name;  // 0x2A8(0x8)
	struct UTrashCarouselWidget* _carousel;  // 0x2B0(0x8)
	struct USelectionOverlayWidget* _focusBackground;  // 0x2B8(0x8)
	struct FString _label;  // 0x2C0(0x10)
	struct FText _mainLabel;  // 0x2D0(0x18)
	struct FSlateFontInfo _defaultFont;  // 0x2E8(0x58)
	char pad_832[88];  // 0x340(0x58)
	struct TArray<struct FString> _possibleValues;  // 0x398(0x10)
	struct TArray<struct FText> _carouselValues;  // 0x3A8(0x10)
	char pad_952[8];  // 0x3B8(0x8)

	void SetValue(int32_t Value); // Function ConZ.TrashNamedCarouselWidget.SetValue
	void SetName(struct FText Name); // Function ConZ.TrashNamedCarouselWidget.SetName
	void OnValueChanged(int32_t NewValue); // Function ConZ.TrashNamedCarouselWidget.OnValueChanged
	int32_t GetValue(); // Function ConZ.TrashNamedCarouselWidget.GetValue
}; 



// Class ConZ.IngredientsForRecipeWidget
// Size: 0x280(Inherited: 0x260) 
struct UIngredientsForRecipeWidget : public UUserWidget
{
	char pad_608[8];  // 0x260(0x8)
	struct UWrapBox* _ingredientsWrapBox;  // 0x268(0x8)
	UInteractiveIngredientWidget* _interactiveIngredientWidgetClass;  // 0x270(0x8)
	char pad_632[8];  // 0x278(0x8)

}; 



// Class ConZ.PrisonerActionDrinkFromReplenishableResource
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionDrinkFromReplenishableResource : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionFillVehicleFuelWithItem
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionFillVehicleFuelWithItem : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.MotionTriggerComponent
// Size: 0x520(Inherited: 0x4D0) 
struct UMotionTriggerComponent : public UTriggerComponent
{
	struct FVector TriggerForwardVector;  // 0x4D0(0xC)
	float TriggerAngle;  // 0x4DC(0x4)
	float MotionDetectionSensitivity;  // 0x4E0(0x4)
	float MotionDetectionDepletionSpeed;  // 0x4E4(0x4)
	float _motionDetector;  // 0x4E8(0x4)
	char pad_1260[4];  // 0x4EC(0x4)
	struct UAkAudioEvent* _motionDetectorStartSound;  // 0x4F0(0x8)
	struct UAkAudioEvent* _motionDetectorEndSound;  // 0x4F8(0x8)
	char pad_1280[32];  // 0x500(0x20)

}; 



// Class ConZ.ConZAssetManager
// Size: 0x688(Inherited: 0x478) 
struct UConZAssetManager : public UAssetManager
{
	struct TArray<struct FImageAssetToLoad> _imageAssetsToLoad;  // 0x478(0x10)
	char pad_1160[80];  // 0x488(0x50)
	struct TMap<struct FName, struct ULWObjectSetup*> _lwobjectSetupByPrimaryAssetName;  // 0x4D8(0x50)
	char pad_1320[240];  // 0x528(0xF0)
	struct TArray<struct UPrisonerResponseIdle*> _prisonerResponseIdleCDOs;  // 0x618(0x10)
	struct TArray<struct UPrisonerBodyEffect*> _autoAddablePrisonerBodyEffectCDOs;  // 0x628(0x10)
	char pad_1592[80];  // 0x638(0x50)

}; 



// Class ConZ.AdminCommand_ShowWeaponInfo
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_ShowWeaponInfo : public UAdminCommand
{

}; 



// Class ConZ.TradeOutpostBuilding
// Size: 0x398(Inherited: 0x328) 
struct ATradeOutpostBuilding : public ABuilding
{
	char pad_808[48];  // 0x328(0x30)
	float _sedentaryNPCRelevancyDistance;  // 0x358(0x4)
	char pad_860[4];  // 0x35C(0x4)
	struct TArray<struct FSedentaryNPCMarker> _sedentaryNPCMarkers;  // 0x360(0x10)
	struct TArray<struct ASedentaryNPC*> _spawnedSedentaryNPCs;  // 0x370(0x10)
	char pad_896[24];  // 0x380(0x18)

}; 



// Class ConZ.AdminCommand_SpawnInventoryFullOf
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SpawnInventoryFullOf : public UAdminCommand
{

}; 



// Class ConZ.AmmunitionItem
// Size: 0x960(Inherited: 0x910) 
struct AAmmunitionItem : public AItem
{
	struct FGameplayTag AmmunitionTag;  // 0x910(0x8)
	struct FString AmmunitionTypeString;  // 0x918(0x10)
	AProjectile* projectileClass;  // 0x928(0x8)
	struct UStaticMesh* CartridgeMesh;  // 0x930(0x8)
	struct UStaticMesh* CasingMesh;  // 0x938(0x8)
	struct UStaticMesh* UsedBadRoundMesh;  // 0x940(0x8)
	float WeaponSpreadMultiplier;  // 0x948(0x4)
	int32_t MaxAmmoCount;  // 0x94C(0x4)
	int32_t _ammoCount;  // 0x950(0x4)
	int32_t _ammoCountOwnerHelper;  // 0x954(0x4)
	char pad_2392[8];  // 0x958(0x8)

	void SetAmmoCount(int32_t Count, uint8_t  broadcastRPCType); // Function ConZ.AmmunitionItem.SetAmmoCount
	void OnRep_AmmoCountOwnerHelper(); // Function ConZ.AmmunitionItem.OnRep_AmmoCountOwnerHelper
	void OnRep_AmmoCount(); // Function ConZ.AmmunitionItem.OnRep_AmmoCount
	void NetMulticast_SetAmmoCount(int32_t Count); // Function ConZ.AmmunitionItem.NetMulticast_SetAmmoCount
	float GetSpreadMultiplierForWeapon(struct AWeapon* Weapon); // Function ConZ.AmmunitionItem.GetSpreadMultiplierForWeapon
	int32_t GetAmmoCount(); // Function ConZ.AmmunitionItem.GetAmmoCount
	void Client_SetAmmoCount(int32_t Count); // Function ConZ.AmmunitionItem.Client_SetAmmoCount
}; 



// Class ConZ.AdminCommand_SilencePlayer
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SilencePlayer : public UAdminCommand
{

}; 



// Class ConZ.FogSphere
// Size: 0x230(Inherited: 0x220) 
struct AFogSphere : public AActor
{
	char pad_544_1 : 7;  // 0x220(0x1)
	bool _shouldExistOnDedicatedServer : 1;  // 0x220(0x1)
	char pad_545[7];  // 0x221(0x7)
	struct UCurveFloat* _densityVersusTimeOfDay;  // 0x228(0x8)

	void SetFogDensity(float Density); // Function ConZ.FogSphere.SetFogDensity
	void OnTimeOfDayChanged(struct AWeatherController2* sender); // Function ConZ.FogSphere.OnTimeOfDayChanged
}; 



// Class ConZ.InventoryItemComponent
// Size: 0x180(Inherited: 0xC8) 
struct UInventoryItemComponent : public UItemComponent
{
	char pad_200[8];  // 0xC8(0x8)
	int32_t _sizeX;  // 0xD0(0x4)
	int32_t _sizeY;  // 0xD4(0x4)
	int32_t _maxRowsPerPage;  // 0xD8(0x4)
	char pad_220[20];  // 0xDC(0x14)
	struct TArray<struct UInventoryItemComponentReplicatedPage*> _replicatedPages;  // 0xF0(0x10)
	char pad_256[128];  // 0x100(0x80)

	void OnRep_ReplicatedPages(); // Function ConZ.InventoryItemComponent.OnRep_ReplicatedPages
}; 



// Class ConZ.AdminCommand_Sleep
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_Sleep : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_SpawnAllItems
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SpawnAllItems : public UAdminCommand
{

}; 



// Class ConZ.HeatSourceLinkUserData
// Size: 0x38(Inherited: 0x28) 
struct UHeatSourceLinkUserData : public UAssetUserData
{
	int32_t _heatSourceIndex;  // 0x28(0x4)
	int32_t _cookingSlotIndex;  // 0x2C(0x4)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool _sameHeatSourceCookingSlotIndex : 1;  // 0x30(0x1)
	char pad_49_1 : 7;  // 0x31(0x1)
	bool _linkAllCookingSlotsToHeatSource : 1;  // 0x31(0x1)
	char pad_50[6];  // 0x32(0x6)

}; 



// Class ConZ.AdminCommand_SpawnPrimaryActorAsset
// Size: 0x108(Inherited: 0x88) 
struct UAdminCommand_SpawnPrimaryActorAsset : public UAdminCommand
{
	struct FPrimaryAssetType _primaryAssetType;  // 0x88(0x8)
	struct TSet<struct FPrimaryAssetId> _primaryAssetsToExclude;  // 0x90(0x50)
	int32_t _countArgumentMinValue;  // 0xE0(0x4)
	int32_t _countArgumentMaxValue;  // 0xE4(0x4)
	struct FVector _spawnOffset;  // 0xE8(0xC)
	char pad_244[20];  // 0xF4(0x14)

}; 



// Class ConZ.ItemContainer
// Size: 0x350(Inherited: 0x220) 
struct AItemContainer : public AActor
{
	char pad_544[48];  // 0x220(0x30)
	struct USceneComponent* _rootComponent;  // 0x250(0x8)
	char pad_600_1 : 7;  // 0x258(0x1)
	bool _canBeForceUnlocked : 1;  // 0x258(0x1)
	char pad_601[3];  // 0x259(0x3)
	float _forceUnlockTime;  // 0x25C(0x4)
	float _forceUnlockMovementAcceptanceRadius;  // 0x260(0x4)
	char pad_612[12];  // 0x264(0xC)
	struct FUnlockLocation _unlockPositionMarker;  // 0x270(0x30)
	char pad_672[8];  // 0x2A0(0x8)
	struct TArray<UObject*> _upgradeItemsClasses;  // 0x2A8(0x10)
	struct TArray<struct ULockData*> _lockData;  // 0x2B8(0x10)
	char pad_712[16];  // 0x2C8(0x10)
	struct TArray<UObject*> _originalUpgradeItemClasses;  // 0x2D8(0x10)
	struct TArray<struct ULockData*> _originalLockData;  // 0x2E8(0x10)
	char pad_760_1 : 7;  // 0x2F8(0x1)
	bool _ignoreServerSettings : 1;  // 0x2F8(0x1)
	char pad_761[40];  // 0x2F9(0x28)
	char pad_801_1 : 7;  // 0x321(0x1)
	bool _disableSerialization : 1;  // 0x321(0x1)
	char pad_802_1 : 7;  // 0x322(0x1)
	bool _shouldBeResetOnNewSession : 1;  // 0x322(0x1)
	char pad_803[1];  // 0x323(0x1)
	struct FGameplayTag _famePointAwardTag;  // 0x324(0x8)
	char pad_812[36];  // 0x32C(0x24)

}; 



// Class ConZ.AdminCommand_SpawnAnimal
// Size: 0x108(Inherited: 0x108) 
struct UAdminCommand_SpawnAnimal : public UAdminCommand_SpawnPrimaryActorAsset
{

}; 



// Class ConZ.AdminCommand_SpawnDebugAnimalTrack
// Size: 0x90(Inherited: 0x88) 
struct UAdminCommand_SpawnDebugAnimalTrack : public UAdminCommand
{
	struct FPrimaryAssetType _primaryAssetType;  // 0x88(0x8)

}; 



// Class ConZ.ModularTooltipElement_Title
// Size: 0x2F0(Inherited: 0x2E8) 
struct UModularTooltipElement_Title : public UModularTooltipElement
{
	struct UTextBlock* _titleTextBlock;  // 0x2E8(0x8)

}; 



// Class ConZ.PrisonerBodySymptom_Disorientation
// Size: 0xC0(Inherited: 0xB8) 
struct UPrisonerBodySymptom_Disorientation : public UPrisonerBodySymptom
{
	float _maxSeverity;  // 0xB8(0x4)
	char pad_188[4];  // 0xBC(0x4)

}; 



// Class ConZ.WaypointWidgetBase
// Size: 0x2F8(Inherited: 0x260) 
struct UWaypointWidgetBase : public UUserWidget
{
	struct UTexture2D* IconTexture;  // 0x260(0x8)
	struct UTexture2D* AccentTexture;  // 0x268(0x8)
	struct FLinearColor AccentColor;  // 0x270(0x10)
	float BarValue;  // 0x280(0x4)
	struct FLinearColor BarColor;  // 0x284(0x10)
	float HeightOffset;  // 0x294(0x4)
	char pad_664_1 : 7;  // 0x298(0x1)
	bool Emphasized : 1;  // 0x298(0x1)
	char pad_665[3];  // 0x299(0x3)
	struct FLinearColor EmphasisColor;  // 0x29C(0x10)
	char pad_684[4];  // 0x2AC(0x4)
	struct FString LabelText;  // 0x2B0(0x10)
	char pad_704[56];  // 0x2C0(0x38)

	void OnLifetimeTiedActorDestroyed(struct AActor* Actor); // Function ConZ.WaypointWidgetBase.OnLifetimeTiedActorDestroyed
	bool IsOnScreen(); // Function ConZ.WaypointWidgetBase.IsOnScreen
	bool IsAttached(); // Function ConZ.WaypointWidgetBase.IsAttached
	struct AActor* GetTargetActor(); // Function ConZ.WaypointWidgetBase.GetTargetActor
	float GetDistance(); // Function ConZ.WaypointWidgetBase.GetDistance
	float GetAngle(); // Function ConZ.WaypointWidgetBase.GetAngle
}; 



// Class ConZ.AdminCommand_SpawnRandomAnimal
// Size: 0x108(Inherited: 0x108) 
struct UAdminCommand_SpawnRandomAnimal : public UAdminCommand_SpawnAnimal
{

}; 



// Class ConZ.AdminCommand_SpawnReflectionSphere
// Size: 0x90(Inherited: 0x88) 
struct UAdminCommand_SpawnReflectionSphere : public UAdminCommand
{
	UObject* _actorClass;  // 0x88(0x8)

}; 



// Class ConZ.PrisonerBodySymptom_Hallucinations
// Size: 0x228(Inherited: 0xB8) 
struct UPrisonerBodySymptom_Hallucinations : public UPrisonerBodySymptom
{
	struct TArray<struct FPrisonerHallucinationSymptomSeverityLevelParams> _severityLevelParams;  // 0xB8(0x10)
	UPrisonerHallucinationEpisode* _hallucinationEpisodeClass;  // 0xC8(0x8)
	struct TArray<struct FPrisonerHallucinationIllusionInfo> _hallucinationIllusionInfosSP;  // 0xD0(0x10)
	struct TArray<struct FPrisonerHallucinationIllusionInfo> _hallucinationIllusionInfosMP;  // 0xE0(0x10)
	char pad_240[16];  // 0xF0(0x10)
	struct FRuntimeFloatCurve _effectsIntensityVsElapsedTimePeriod;  // 0x100(0x88)
	float _effectsBlendInDuration;  // 0x188(0x4)
	float _effectsFrequencyMultiplier;  // 0x18C(0x4)
	struct FRuntimeFloatCurve _effectsIntensityScaleVsSeverityRatio;  // 0x190(0x88)
	float _visualEffectsIntensityScale;  // 0x218(0x4)
	float _soundEffectsIntensityScale;  // 0x21C(0x4)
	char pad_544[8];  // 0x220(0x8)

}; 



// Class ConZ.InteractionAction
// Size: 0xA8(Inherited: 0x28) 
struct UInteractionAction : public UObject
{
	char pad_40[128];  // 0x28(0x80)

	void OnActionFinished(); // Function ConZ.InteractionAction.OnActionFinished
	void OnActionCanceled(); // Function ConZ.InteractionAction.OnActionCanceled
}; 



// Class ConZ.AdminCommand_SpawnVehicle
// Size: 0x110(Inherited: 0x108) 
struct UAdminCommand_SpawnVehicle : public UAdminCommand_SpawnPrimaryActorAsset
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerBodySymptomCause_Farting
// Size: 0x38(Inherited: 0x38) 
struct UPrisonerBodySymptomCause_Farting : public UPrisonerBodySymptomCause_PeriodicSound
{

}; 



// Class ConZ.AdminCommand_StartTournamentMode
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_StartTournamentMode : public UAdminCommand
{

}; 



// Class ConZ.PrisonerBuryComponent
// Size: 0xC8(Inherited: 0xC0) 
struct UPrisonerBuryComponent : public UCharacterActionComponent
{
	uint8_t  _buryState;  // 0xC0(0x1)
	char pad_193[7];  // 0xC1(0x7)

	void OnRep_BuryState(); // Function ConZ.PrisonerBuryComponent.OnRep_BuryState
}; 



// Class ConZ.SoundNotificationDescription
// Size: 0x58(Inherited: 0x40) 
struct USoundNotificationDescription : public UNotificationDescription
{
	struct UAkAudioEvent* AudioEvent;  // 0x40(0x8)
	struct AActor* Actor;  // 0x48(0x8)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool stopWhenAttachedToDestroyed : 1;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)

}; 



// Class ConZ.InventoryItemDataIcon
// Size: 0x38(Inherited: 0x30) 
struct UInventoryItemDataIcon : public UInventoryItemData
{
	struct UTexture2D* Icon;  // 0x30(0x8)

}; 



// Class ConZ.AdminCommand_TeleportTo
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_TeleportTo : public UAdminCommand
{

}; 



// Class ConZ.FishingRodAnimInstance
// Size: 0x2F0(Inherited: 0x2C0) 
struct UFishingRodAnimInstance : public UAnimInstance
{
	char pad_704_1 : 7;  // 0x2C0(0x1)
	bool IsInMinigame : 1;  // 0x2B8(0x1)
	struct FVector RodTipLocation;  // 0x2BC(0xC)
	struct FVector BentRodTipLocation;  // 0x2C8(0xC)
	struct FVector BendDirection;  // 0x2D4(0xC)
	float BendAmount;  // 0x2E0(0x4)
	char pad_745[7];  // 0x2E9(0x7)

}; 



// Class ConZ.BoxMotionTriggerComponent
// Size: 0x530(Inherited: 0x520) 
struct UBoxMotionTriggerComponent : public UMotionTriggerComponent
{
	struct UBoxComponent* BoxCollisionComponent;  // 0x518(0x8)
	struct FVector _triggerSize;  // 0x520(0xC)

	void BoxComponent_OnComponentEndOverlap(struct UPrimitiveComponent* activatedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function ConZ.BoxMotionTriggerComponent.BoxComponent_OnComponentEndOverlap
	void BoxComponent_OnComponentBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function ConZ.BoxMotionTriggerComponent.BoxComponent_OnComponentBeginOverlap
}; 



// Class ConZ.PrisonerActionAlignTransformDescription
// Size: 0x90(Inherited: 0x38) 
struct UPrisonerActionAlignTransformDescription : public UPrisonerActionDescription
{
	char pad_56[88];  // 0x38(0x58)

}; 



// Class ConZ.PrisonerActionGestureDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionGestureDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.SearchForItemsAssetData
// Size: 0x38(Inherited: 0x30) 
struct USearchForItemsAssetData : public UInteractionAssetData
{
	struct USearchItemDataAsset* SearchAsset;  // 0x30(0x8)

}; 



// Class ConZ.AdminCommand_TeleportTo3pm
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_TeleportTo3pm : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_TeleportToVehicle
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_TeleportToVehicle : public UAdminCommand
{

}; 



// Class ConZ.StrengthSkill
// Size: 0xB0(Inherited: 0xB0) 
struct UStrengthSkill : public USkill
{

}; 



// Class ConZ.PrisonerActionChargeVehicleBatteryDescription
// Size: 0x70(Inherited: 0x38) 
struct UPrisonerActionChargeVehicleBatteryDescription : public UPrisonerActionDescription
{
	char pad_56[56];  // 0x38(0x38)

}; 



// Class ConZ.CharacterSelectionWidget
// Size: 0x2B8(Inherited: 0x260) 
struct UCharacterSelectionWidget : public UBaseMenu
{
	char pad_608[8];  // 0x260(0x8)
	UCharacterSlot* _characterSlotClass;  // 0x268(0x8)
	struct UScrollBox* _mainScrollBox;  // 0x270(0x8)
	struct UConZStandardButton* _buttonCreate;  // 0x278(0x8)
	struct UConZStandardButton* _buttonLoad;  // 0x280(0x8)
	struct UOverlay* _characterSlotsOverlay;  // 0x288(0x8)
	struct UVerticalBox* _characterSlotsVerticalBox;  // 0x290(0x8)
	struct UConZStandardButton* _buttonBack;  // 0x298(0x8)
	struct UOverlay* _criminalRecordOverlay;  // 0x2A0(0x8)
	struct UCriminalRecord* _criminalRecord;  // 0x2A8(0x8)
	struct UYesNoDialog* _deleteCharacterConfirmation;  // 0x2B0(0x8)

	void UpdatePreviewPrisonersInternal(struct UUserProfile* profile); // Function ConZ.CharacterSelectionWidget.UpdatePreviewPrisonersInternal
	void OnLoadButtonClicked(); // Function ConZ.CharacterSelectionWidget.OnLoadButtonClicked
	void OnCreateButtonClicked(); // Function ConZ.CharacterSelectionWidget.OnCreateButtonClicked
	void OnBackButtonClicked(); // Function ConZ.CharacterSelectionWidget.OnBackButtonClicked
	void GoBack(); // Function ConZ.CharacterSelectionWidget.GoBack
	void DeleteCharacter(struct UUserProfile* UserProfile); // Function ConZ.CharacterSelectionWidget.DeleteCharacter
}; 



// Class ConZ.KillNotificationWidget
// Size: 0x278(Inherited: 0x260) 
struct UKillNotificationWidget : public UUserWidget
{
	struct UTextBlock* _prefix;  // 0x260(0x8)
	struct UTextBlock* _name;  // 0x268(0x8)
	struct UTextBlock* _suffix;  // 0x270(0x8)

}; 



// Class ConZ.FlashbangItem
// Size: 0x9F0(Inherited: 0x9E0) 
struct AFlashbangItem : public AGrenadeItem
{
	AFlashbangItemEffects* _flashbangEffectsClass;  // 0x9D8(0x8)
	char pad_2536[8];  // 0x9E8(0x8)

}; 



// Class ConZ.AdminCommand_SetTattooIndex
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetTattooIndex : public UAdminCommand
{

}; 



// Class ConZ.SquadLeftPanel
// Size: 0x3B8(Inherited: 0x260) 
struct USquadLeftPanel : public UUserWidget
{
	char pad_608[216];  // 0x260(0xD8)
	struct UTextBlock* SquadName;  // 0x338(0x8)
	struct UTextBlock* SquadMessage;  // 0x340(0x8)
	struct UTextBlock* MemberCount;  // 0x348(0x8)
	struct USquadEmblemWidget* SquadEmblem;  // 0x350(0x8)
	struct UBorder* EmblemBox;  // 0x358(0x8)
	struct USizeBox* MessageBoxPanel;  // 0x360(0x8)
	struct UVerticalBox* MembersList;  // 0x368(0x8)
	struct UButton* EditButton;  // 0x370(0x8)
	struct UButton* LeaveButton;  // 0x378(0x8)
	struct UButton* CreateButton;  // 0x380(0x8)
	struct UScrollBox* MemberListBox;  // 0x388(0x8)
	UGenericTooltip* _genericTooltipClass;  // 0x390(0x8)
	USquadMemberPanel* _squadMemberPanelClass;  // 0x398(0x8)
	struct USquadRightPanel* _squadRightPanel;  // 0x3A0(0x8)
	struct UTabMenuReborn* _tabMenuReborn;  // 0x3A8(0x8)
	char pad_944[8];  // 0x3B0(0x8)

	void OnReleasedLeaveButton(); // Function ConZ.SquadLeftPanel.OnReleasedLeaveButton
	void OnReleasedEditButton(); // Function ConZ.SquadLeftPanel.OnReleasedEditButton
	void OnReleasedCreateButton(); // Function ConZ.SquadLeftPanel.OnReleasedCreateButton
}; 



// Class ConZ.CTFFlagStand
// Size: 0x240(Inherited: 0x220) 
struct ACTFFlagStand : public AActor
{
	struct UStaticMeshComponent* Mesh;  // 0x220(0x8)
	struct UPointLightComponent* Light;  // 0x228(0x8)
	struct FLinearColor _lightColor;  // 0x230(0x10)

	void OnRep_LightColor(); // Function ConZ.CTFFlagStand.OnRep_LightColor
}; 



// Class ConZ.PrisonerActionDecontaminateDescription
// Size: 0x58(Inherited: 0x38) 
struct UPrisonerActionDecontaminateDescription : public UPrisonerActionDescription
{
	char pad_56[32];  // 0x38(0x20)

}; 



// Class ConZ.DropZoneDroppable
// Size: 0x280(Inherited: 0x220) 
struct ADropZoneDroppable : public AActor
{
	struct UStaticMeshComponent* Mesh;  // 0x220(0x8)
	struct UAkAudioEvent* LandSound;  // 0x228(0x8)
	struct ADropZoneGameEvent* _gameEvent;  // 0x230(0x8)
	char pad_568[8];  // 0x238(0x8)
	struct UParticleSystemComponent* _flareParticles0;  // 0x240(0x8)
	struct UParticleSystemComponent* _flareParticles1;  // 0x248(0x8)
	struct UParticleSystemComponent* _flareParticles2;  // 0x250(0x8)
	char pad_600[8];  // 0x258(0x8)
	struct FVector _endLocation;  // 0x260(0xC)
	float _fallingSpeed;  // 0x26C(0x4)
	char pad_624_1 : 7;  // 0x270(0x1)
	bool _flareParticlesEnabled : 1;  // 0x270(0x1)
	char pad_625[3];  // 0x271(0x3)
	int32_t _flareParticlesTeam;  // 0x274(0x4)
	char pad_632[8];  // 0x278(0x8)

	void SetGameEvent(struct ADropZoneGameEvent* gameEvent); // Function ConZ.DropZoneDroppable.SetGameEvent
	void OnRep_FlareParticlesTeam(); // Function ConZ.DropZoneDroppable.OnRep_FlareParticlesTeam
	void OnRep_FlareParticlesEnabled(); // Function ConZ.DropZoneDroppable.OnRep_FlareParticlesEnabled
	struct ADropZoneGameEvent* GetGameEvent(); // Function ConZ.DropZoneDroppable.GetGameEvent
}; 



// Class ConZ.AdminCommand_SetPrivatePartsSize
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_SetPrivatePartsSize : public UAdminCommand
{

}; 



// Class ConZ.ListUnreferencedAssetsCommandlet
// Size: 0x80(Inherited: 0x80) 
struct UListUnreferencedAssetsCommandlet : public UCommandlet
{

}; 



// Class ConZ.AdminCommand_ToggleFamePointsDebugVisualization
// Size: 0x90(Inherited: 0x88) 
struct UAdminCommand_ToggleFamePointsDebugVisualization : public UAdminCommand
{
	UFamePointDebugComponent* _famePointDebugComponentClass;  // 0x88(0x8)

}; 



// Class ConZ.AnimNotifyState_DrainStamina
// Size: 0x48(Inherited: 0x30) 
struct UAnimNotifyState_DrainStamina : public UAnimNotifyState
{
	uint8_t  DrainType;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	float AmountToDrain;  // 0x34(0x4)
	float Duration;  // 0x38(0x4)
	float RecoveryDelay;  // 0x3C(0x4)
	float RatioToRecover;  // 0x40(0x4)
	float RecoveryTime;  // 0x44(0x4)

}; 



// Class ConZ.PrisonerActionSearchPrisoner
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionSearchPrisoner : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.AdminCommand_TrackShotsFired
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_TrackShotsFired : public UAdminCommand
{

}; 



// Class ConZ.Metabolism_ICU_GraphWidget_SPO2
// Size: 0x230(Inherited: 0x218) 
struct UMetabolism_ICU_GraphWidget_SPO2 : public UMetabolism_ICU_GraphWidget
{
	struct UCurveFloat* TimeStretchCurveCurve;  // 0x218(0x8)
	char pad_544[16];  // 0x220(0x10)

}; 



// Class ConZ.CookingRecipeButtonWidget
// Size: 0x320(Inherited: 0x260) 
struct UCookingRecipeButtonWidget : public UUserWidget
{
	char pad_608[112];  // 0x260(0x70)
	struct UTextBlock* _titleText;  // 0x2D0(0x8)
	struct UImage* _buttonIcon;  // 0x2D8(0x8)
	struct UCookingFavouriteButton* _favouritesButton;  // 0x2E0(0x8)
	struct UCookingInfoButton* _infoButton;  // 0x2E8(0x8)
	struct UImage* _overallBorder;  // 0x2F0(0x8)
	struct FLinearColor _unHoveredBorderColor;  // 0x2F8(0x10)
	struct FLinearColor _hoveredBorderColor;  // 0x308(0x10)
	char pad_792[8];  // 0x318(0x8)

}; 



// Class ConZ.CircularMenuWidget
// Size: 0x2A8(Inherited: 0x260) 
struct UCircularMenuWidget : public UUserWidget
{
	struct TArray<struct FCircularLayerData> _layerData;  // 0x260(0x10)
	float _centerSize;  // 0x270(0x4)
	char pad_628_1 : 7;  // 0x274(0x1)
	bool _constrainMouseToWidget : 1;  // 0x274(0x1)
	char pad_629_1 : 7;  // 0x275(0x1)
	bool _unboundOuterRadiusOnFirstInteractionLayer : 1;  // 0x275(0x1)
	char pad_630[2];  // 0x276(0x2)
	struct TArray<struct FCircularSegmentContainer> _segmentsByLayer;  // 0x278(0x10)
	struct UOverlay* _mainOverlay;  // 0x288(0x8)
	struct UTextBlock* _actionText;  // 0x290(0x8)
	char pad_664[16];  // 0x298(0x10)

	void InitializeThrowingLayer(int32_t Layer, float Offset, struct TArray<struct UCircularMenuSegmentThrowingInfo*> SegmentInfo, int32_t countParameterOverride); // Function ConZ.CircularMenuWidget.InitializeThrowingLayer
	void InitializeLayer(int32_t Layer, float Offset, struct TArray<struct UCircularMenuSegmentInfo*> SegmentInfo, int32_t countParameterOverride, bool createAdditionalDummySegments); // Function ConZ.CircularMenuWidget.InitializeLayer
	int32_t GetSegmentIdForCoordinatesAndLayer(struct FVector2D Coordinates, int32_t Layer); // Function ConZ.CircularMenuWidget.GetSegmentIdForCoordinatesAndLayer
	int32_t GetSegmentIdForCoordinates(struct FVector2D Coordinates, int32_t& Layer); // Function ConZ.CircularMenuWidget.GetSegmentIdForCoordinates
	struct UCircularMenuWidget* CreateThrowingMenuWidget(struct UObject* WorldContextObject, struct TArray<struct UCircularMenuSegmentThrowingInfo*> throwingSegmentInfo); // Function ConZ.CircularMenuWidget.CreateThrowingMenuWidget
	struct UCircularMenuWidget* Create(struct UObject* WorldContextObject, struct TArray<struct UCircularMenuSegmentInfo*> SegmentInfo); // Function ConZ.CircularMenuWidget.Create
}; 



// Class ConZ.PlaceableActorItems
// Size: 0x4F0(Inherited: 0x4E8) 
struct APlaceableActorItems : public APlaceableActorBase
{
	char pad_1256[8];  // 0x4E8(0x8)

}; 



// Class ConZ.TriggerComponent
// Size: 0x4D0(Inherited: 0x450) 
struct UTriggerComponent : public UPrimitiveComponent
{
	char pad_1104[112];  // 0x450(0x70)
	struct FObjectConditionContainer _triggeringActorConditions;  // 0x4C0(0x10)

}; 



// Class ConZ.PrisonerUIDataController
// Size: 0x138(Inherited: 0x28) 
struct UPrisonerUIDataController : public UObject
{
	struct UPrisonerBodySimulationUIController* BodySimulationUIController;  // 0x28(0x8)
	struct UPrisonerSkillComponentUIController* SkillComponentUIController;  // 0x30(0x8)
	struct UPrisonerTreatmentUIController* TreatmentUIController;  // 0x38(0x8)
	char pad_64[72];  // 0x40(0x48)
	struct UPrisonerUIData* _prisonerUIData;  // 0x88(0x8)
	struct UPrisonerUITooltipCache* _tooltipCache;  // 0x90(0x8)
	char pad_152[160];  // 0x98(0xA0)

}; 



// Class ConZ.Graph2DWidget
// Size: 0x1F0(Inherited: 0x108) 
struct UGraph2DWidget : public UWidget
{
	struct FSlateBrush Brush;  // 0x108(0x88)
	struct FDelegate BrushDelegate;  // 0x190(0x10)
	struct FLinearColor ColorAndOpacity;  // 0x1A0(0x10)
	struct FDelegate ColorAndOpacityDelegate;  // 0x1B0(0x10)
	float GraphLineThickness;  // 0x1C0(0x4)
	float GraphLineSpriteSpacing;  // 0x1C4(0x4)
	struct FVector2D GraphSize;  // 0x1C8(0x8)
	char pad_464_1 : 7;  // 0x1D0(0x1)
	bool InitializeGraphWithDefaultValue : 1;  // 0x1D0(0x1)
	char pad_465[3];  // 0x1D1(0x3)
	int32_t SampleMax;  // 0x1D4(0x4)
	float DefaultSampleValue;  // 0x1D8(0x4)
	char pad_476_1 : 7;  // 0x1DC(0x1)
	bool UseLineAntialiasing : 1;  // 0x1DC(0x1)
	char pad_477[19];  // 0x1DD(0x13)

}; 



// Class ConZ.RackItem
// Size: 0xA40(Inherited: 0xA20) 
struct ARackItem : public AChestItem
{
	struct UStaticMesh* _lockStaticMesh;  // 0xA20(0x8)
	char pad_2600[24];  // 0xA28(0x18)

}; 



// Class ConZ.AdminCommand_TrapsDebug
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_TrapsDebug : public UAdminCommand
{

}; 



// Class ConZ.EnvironmentDescriptionComponent
// Size: 0x4F0(Inherited: 0x4E0) 
struct UEnvironmentDescriptionComponent : public UStaticMeshComponent
{
	uint8_t  EnvironmentClass;  // 0x4E0(0x1)
	char pad_1249_1 : 7;  // 0x4E1(0x1)
	bool IsUnderground : 1;  // 0x4E1(0x1)
	char pad_1250_1 : 7;  // 0x4E2(0x1)
	bool ShouldBlockWeatherEffects : 1;  // 0x4E2(0x1)
	char pad_1251[13];  // 0x4E3(0xD)

}; 



// Class ConZ.ConZSpectatorPawn
// Size: 0x2C0(Inherited: 0x2A8) 
struct AConZSpectatorPawn : public ASpectatorPawn
{
	char pad_680[8];  // 0x2A8(0x8)
	float DefaultFOV;  // 0x2B0(0x4)
	char pad_692[12];  // 0x2B4(0xC)

}; 



// Class ConZ.PrisonerBodySymptom_Fatigue
// Size: 0xC0(Inherited: 0xB8) 
struct UPrisonerBodySymptom_Fatigue : public UPrisonerBodySymptom
{
	float _maxSeverity;  // 0xB8(0x4)
	float _maxSeverityMaxStaminaModifier;  // 0xBC(0x4)

}; 



// Class ConZ.AdminCommandExecutor
// Size: 0x28(Inherited: 0x28) 
struct UAdminCommandExecutor : public UInterface
{

}; 



// Class ConZ.BankAccountRegistry
// Size: 0x178(Inherited: 0xB0) 
struct UBankAccountRegistry : public UActorComponent
{
	char pad_176[200];  // 0xB0(0xC8)

	void ResetDailyTransactionLimitsOnAllAccounts(); // Function ConZ.BankAccountRegistry.ResetDailyTransactionLimitsOnAllAccounts
}; 



// Class ConZ.CarouselWithLabel
// Size: 0x2358(Inherited: 0x1DF0) 
struct UCarouselWithLabel : public UCarousel
{
	char pad_7664[24];  // 0x1DF0(0x18)
	struct UTextBlock* _name;  // 0x1E08(0x8)
	struct UImage* _focusBackgroundImage;  // 0x1E10(0x8)
	struct FText _label;  // 0x1E18(0x18)
	struct FCarouselWithLabelStyle _selectedAndFocusedCWLStyle;  // 0x1E30(0x108)
	struct FCarouselWithLabelStyle _selectedAndUnfocusedCWLStyle;  // 0x1F38(0x108)
	struct FCarouselWithLabelStyle _unselectedCWLStyle;  // 0x2040(0x108)
	struct FCarouselWithLabelStyle _highlightedCWLStyle;  // 0x2148(0x108)
	struct FCarouselWithLabelStyle _disabledCWLStyle;  // 0x2250(0x108)

}; 



// Class ConZ.AdminCommand_UnbanPlayer
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_UnbanPlayer : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_UnmutePlayer
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_UnmutePlayer : public UAdminCommand
{

}; 



// Class ConZ.PrisonerActionSearchGardenSlotDescription
// Size: 0x78(Inherited: 0x70) 
struct UPrisonerActionSearchGardenSlotDescription : public UPrisonerActionSearchObjectDescription
{
	char pad_112[8];  // 0x70(0x8)

}; 



// Class ConZ.AdminCommand_UnsilencePlayer
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_UnsilencePlayer : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_VisualizeBulletTrajectories
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_VisualizeBulletTrajectories : public UAdminCommand
{

}; 



// Class ConZ.AdminCommand_VisualizePlayerAiming
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_VisualizePlayerAiming : public UAdminCommand
{

}; 



// Class ConZ.PrisonerActionRemoveItemFromHandsDescription
// Size: 0x70(Inherited: 0x38) 
struct UPrisonerActionRemoveItemFromHandsDescription : public UPrisonerActionDescription
{
	char pad_56[56];  // 0x38(0x38)

}; 



// Class ConZ.AnimNotify_CharacterActionNotify
// Size: 0x40(Inherited: 0x38) 
struct UAnimNotify_CharacterActionNotify : public UAnimNotify
{
	uint8_t  CharacterActionNotifyType;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 



// Class ConZ.PrisonerBodyCondition_NutrientDeficiency
// Size: 0x170(Inherited: 0xC0) 
struct UPrisonerBodyCondition_NutrientDeficiency : public UPrisonerBodyCondition
{
	uint8_t  _nutrient;  // 0xC0(0x1)
	char pad_193[7];  // 0xC1(0x7)
	struct FRuntimeFloatCurve _severityVsNutrientDeficiencyRatio;  // 0xC8(0x88)
	float _maxRatioOfAbsorbedNutrientCapacityToBeRecovered;  // 0x150(0x4)
	float _artificialAbsorbedNutrientAccumulationScale;  // 0x154(0x4)
	float _nutrientDeficiency;  // 0x158(0x4)
	float _nutrientDeficiencyToRecover;  // 0x15C(0x4)
	float _artificialAbsorbedNutrient;  // 0x160(0x4)
	char pad_356[12];  // 0x164(0xC)

}; 



// Class ConZ.AdminCommand_Vote
// Size: 0x88(Inherited: 0x88) 
struct UAdminCommand_Vote : public UAdminCommand
{

}; 



// Class ConZ.AnimNotify_WeaponEjectCasing
// Size: 0x48(Inherited: 0x38) 
struct UAnimNotify_WeaponEjectCasing : public UAnimNotify
{
	struct FName EmitterSocketName;  // 0x38(0x8)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool AttachEmitter : 1;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)

}; 



// Class ConZ.Metabolism_ICU_GraphWidget_RR
// Size: 0x220(Inherited: 0x218) 
struct UMetabolism_ICU_GraphWidget_RR : public UMetabolism_ICU_GraphWidget
{
	char pad_536[8];  // 0x218(0x8)

}; 



// Class ConZ.MechanicCommonData
// Size: 0xD0(Inherited: 0x30) 
struct UMechanicCommonData : public UDataAsset
{
	struct TMap<struct TSoftClassPtr<UObject>, struct FVehicleAttachmentAssociatedTradeables> VehicleAttachmentAssociatedTradeablesMap;  // 0x30(0x50)
	struct TMap<struct TSoftClassPtr<UObject>, struct TSoftClassPtr<UObject>> VehicleAttachmentToTradeableInStockClassRedirectors;  // 0x80(0x50)

}; 



// Class ConZ.AdminCommandArgumentCompletion_Achievements
// Size: 0x38(Inherited: 0x38) 
struct UAdminCommandArgumentCompletion_Achievements : public UAdminCommandArgumentCompletion
{

}; 



// Class ConZ.SmokeGrenadeItem
// Size: 0xA10(Inherited: 0x9E0) 
struct ASmokeGrenadeItem : public AGrenadeItem
{
	struct UParticleSystem* _smokeParticle;  // 0x9D8(0x8)
	struct UAkAudioEvent* _smokeStartedAudioEvent;  // 0x9E0(0x8)
	struct UAkAudioEvent* _smokeStoppedAudioEvent;  // 0x9E8(0x8)
	float _smokeSoundDuration;  // 0x9F0(0x4)
	struct UAkComponent* _smokeAudioComponent;  // 0x9F8(0x8)
	char pad_2564[12];  // 0xA04(0xC)

}; 



// Class ConZ.CharacterSoundComponent
// Size: 0xD8(Inherited: 0xB0) 
struct UCharacterSoundComponent : public UActorComponent
{
	struct FName AttachedSoundsAttachPointName;  // 0xB0(0x8)
	struct UCharacterImpactSoundsData* ImpactSounds;  // 0xB8(0x8)
	struct UCharacterPainSoundsData* PainSounds;  // 0xC0(0x8)
	float MinDurationBetweenPainSounds;  // 0xC8(0x4)
	float MaxDurationBetweenPainSounds;  // 0xCC(0x4)
	char pad_208[8];  // 0xD0(0x8)

}; 



// Class ConZ.AdminCommandArgumentCompletion_Constant
// Size: 0x48(Inherited: 0x38) 
struct UAdminCommandArgumentCompletion_Constant : public UAdminCommandArgumentCompletion
{
	struct TArray<struct FString> _completionValues;  // 0x38(0x10)

}; 



// Class ConZ.VehicleMountSlot
// Size: 0x28(Inherited: 0x28) 
struct UVehicleMountSlot : public UMountSlot
{

}; 



// Class ConZ.AdminCommandArgumentCompletion_Enum
// Size: 0x98(Inherited: 0x38) 
struct UAdminCommandArgumentCompletion_Enum : public UAdminCommandArgumentCompletion
{
	struct FName _enum;  // 0x38(0x8)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool _excludeNoneEnumerator : 1;  // 0x40(0x1)
	char pad_65_1 : 7;  // 0x41(0x1)
	bool _excludeCountEnumerator : 1;  // 0x41(0x1)
	char pad_66_1 : 7;  // 0x42(0x1)
	bool _excludeAutoGeneratedEnumerator : 1;  // 0x42(0x1)
	char pad_67[5];  // 0x43(0x5)
	struct TSet<struct FName> _additionalEnumeratorsToExclude;  // 0x48(0x50)

}; 



// Class ConZ.CompanionCrow
// Size: 0x228(Inherited: 0x220) 
struct ACompanionCrow : public AActor
{
	struct USkeletalMeshComponent* _mesh;  // 0x220(0x8)

}; 



// Class ConZ.PrisonerAIController
// Size: 0x350(Inherited: 0x328) 
struct APrisonerAIController : public AAIController
{
	struct APrisoner* _prisoner;  // 0x328(0x8)
	struct UPrisonerMovementComponent* _prisonerMovementComponent;  // 0x330(0x8)
	char pad_824[24];  // 0x338(0x18)

}; 



// Class ConZ.AdminCommandArgumentCompletion_Player
// Size: 0x38(Inherited: 0x38) 
struct UAdminCommandArgumentCompletion_Player : public UAdminCommandArgumentCompletion
{

}; 



// Class ConZ.Bird2AIController
// Size: 0x380(Inherited: 0x328) 
struct ABird2AIController : public AAIController
{
	float FlyDurationMin;  // 0x328(0x4)
	float FlyDurationMax;  // 0x32C(0x4)
	float RemainOnGroundDurationMin;  // 0x330(0x4)
	float RemainOnGroundDurationMax;  // 0x334(0x4)
	float TurnSpeed;  // 0x338(0x4)
	float FlightSegmentDistance;  // 0x33C(0x4)
	float LandingDistance;  // 0x340(0x4)
	char pad_836[60];  // 0x344(0x3C)

	void UpdatePerception(struct TArray<struct AActor*>& actorsPercepted); // Function ConZ.Bird2AIController.UpdatePerception
}; 



// Class ConZ.AdminCommandArgumentCompletion_PrimaryAsset
// Size: 0x90(Inherited: 0x38) 
struct UAdminCommandArgumentCompletion_PrimaryAsset : public UAdminCommandArgumentCompletion
{
	struct FPrimaryAssetType _primaryAssetType;  // 0x38(0x8)
	struct TSet<struct FPrimaryAssetId> _primaryAssetsToExclude;  // 0x40(0x50)

}; 



// Class ConZ.AmmunitionItemState
// Size: 0x110(Inherited: 0x100) 
struct UAmmunitionItemState : public UItemState
{
	int32_t AmmoCount;  // 0x100(0x4)
	char pad_260[12];  // 0x104(0xC)

}; 



// Class ConZ.MeleeSkillAnimationsPreset
// Size: 0x4C8(Inherited: 0x30) 
struct UMeleeSkillAnimationsPreset : public UDataAsset
{
	struct FMeleeSkillAnimations NoSkillAnimations;  // 0x30(0x98)
	struct FMeleeSkillAnimations BasicSkillAnimations;  // 0xC8(0x98)
	struct FMeleeSkillAnimations MediumSkillAnimations;  // 0x160(0x98)
	struct FMeleeSkillAnimations AdvancedSkillAnimations;  // 0x1F8(0x98)
	struct FMeleeSkillParametersPerSkillLevel NoSkillParameters;  // 0x290(0x88)
	struct FMeleeSkillParametersPerSkillLevel BasicSkillParameters;  // 0x318(0x88)
	struct FMeleeSkillParametersPerSkillLevel MediumSkillParameters;  // 0x3A0(0x88)
	struct FMeleeSkillParametersPerSkillLevel AdvancedSkillParameters;  // 0x428(0x88)
	float NoSkillDamageMultiplier;  // 0x4B0(0x4)
	float BasicSkillDamageMultiplier;  // 0x4B4(0x4)
	float MediumSkillDamageMultiplier;  // 0x4B8(0x4)
	float AdvancedSkillDamageMultiplier;  // 0x4BC(0x4)
	float AboveAdvancedSkillDamageMultiplier;  // 0x4C0(0x4)
	char pad_1220[4];  // 0x4C4(0x4)

}; 



// Class ConZ.AudioDeviceDisplay
// Size: 0x268(Inherited: 0x260) 
struct UAudioDeviceDisplay : public UUserWidget
{
	struct UTextBlock* _deviceName;  // 0x260(0x8)

}; 



// Class ConZ.MugshotRoom
// Size: 0x240(Inherited: 0x220) 
struct AMugshotRoom : public AActor
{
	struct USceneComponent* _sceneRoot;  // 0x220(0x8)
	struct UChildActorComponent* _previewPrisoner;  // 0x228(0x8)
	struct USceneCaptureComponent2D* _mugshotCapture;  // 0x230(0x8)
	struct UChildActorComponent* _inmateShirt;  // 0x238(0x8)

}; 



// Class ConZ.AdminCommandArgumentCompletion_Skill
// Size: 0x38(Inherited: 0x38) 
struct UAdminCommandArgumentCompletion_Skill : public UAdminCommandArgumentCompletion
{

}; 



// Class ConZ.CraftingAvailableItemWidget
// Size: 0x2D8(Inherited: 0x260) 
struct UCraftingAvailableItemWidget : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct AItem* _item;  // 0x278(0x8)
	struct UAkAudioEvent* _clickSound;  // 0x280(0x8)
	UTooltipBase* _tooltipClass;  // 0x288(0x8)
	struct UTexture2D* _selectedTexture;  // 0x290(0x8)
	struct UTexture2D* _unselectedTexture;  // 0x298(0x8)
	struct UTexture2D* _componentAddTexture;  // 0x2A0(0x8)
	struct UTexture2D* _componentRemoveTexture;  // 0x2A8(0x8)
	struct URetainerBox* MainRetainerBox;  // 0x2B0(0x8)
	struct UImage* _itemImage;  // 0x2B8(0x8)
	struct UImage* BackgroundImage;  // 0x2C0(0x8)
	struct UImage* AdditionalComponentImage;  // 0x2C8(0x8)
	struct UTextBlock* CountText;  // 0x2D0(0x8)

}; 



// Class ConZ.ChainsawAnimInstance
// Size: 0x2E0(Inherited: 0x2D0) 
struct UChainsawAnimInstance : public UItemAnimInstance
{
	char pad_720_1 : 7;  // 0x2D0(0x1)
	bool _isTurnedOn : 1;  // 0x2D0(0x1)
	char pad_721[15];  // 0x2D1(0xF)

}; 



// Class ConZ.ObstuctsMouthItemTag
// Size: 0x30(Inherited: 0x30) 
struct UObstuctsMouthItemTag : public UBaseItemTag
{

}; 



// Class ConZ.AdminCommandArgumentCompletion_Squad
// Size: 0x38(Inherited: 0x38) 
struct UAdminCommandArgumentCompletion_Squad : public UAdminCommandArgumentCompletion
{

}; 



// Class ConZ.PrisonerActionCutObject
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionCutObject : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.RangedResourceConsumerEntityComponentSetup
// Size: 0x68(Inherited: 0x48) 
struct URangedResourceConsumerEntityComponentSetup : public UEntityComponentSetup
{
	UGameResourceType* ResourceType;  // 0x48(0x8)
	float ResourceAmount;  // 0x50(0x4)
	float RequiredResourceAmount;  // 0x54(0x4)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool AutoFindResourceSupplier : 1;  // 0x58(0x1)
	char pad_89[3];  // 0x59(0x3)
	struct FName ResourceSupplierName;  // 0x5C(0x8)
	char pad_100[4];  // 0x64(0x4)

}; 



// Class ConZ.AdminCommandArgumentCompletion_Widget
// Size: 0x40(Inherited: 0x38) 
struct UAdminCommandArgumentCompletion_Widget : public UAdminCommandArgumentCompletion
{
	UAdminCommand_AddOrRemoveWidget* _commandClass;  // 0x38(0x8)

}; 



// Class ConZ.WheeledVehicleBase
// Size: 0xDC0(Inherited: 0xAE0) 
struct AWheeledVehicleBase : public AVehicleBase
{
	char pad_2784[72];  // 0xAE0(0x48)
	struct UTireToSurfaceAudioData* _tireToSurfaceAudioData;  // 0xB28(0x8)
	char pad_2864[16];  // 0xB30(0x10)
	struct UVehicleGearedEnginePowertrainComponent* _powertrainComponent;  // 0xB40(0x8)
	struct UVehicleDoorsComponent* _doorsComponent;  // 0xB48(0x8)
	char pad_2896[40];  // 0xB50(0x28)
	float _brakeStrength;  // 0xB78(0x4)
	char pad_2940[4];  // 0xB7C(0x4)
	struct UCurveFloat* _engineAccelerationCurve;  // 0xB80(0x8)
	struct UCurveFloat* _engineTorqueCurve;  // 0xB88(0x8)
	float _maxPushForce;  // 0xB90(0x4)
	char pad_2964[4];  // 0xB94(0x4)
	float _minPushForce;  // 0xB98(0x4)
	float _maxPushForcePerPusher;  // 0xB9C(0x4)
	float _minPushStartForce;  // 0xBA0(0x4)
	char pad_2980[4];  // 0xBA4(0x4)
	struct UCurveFloat* _speedToPushForceCurve;  // 0xBA8(0x8)
	float _maxLinearVelocityWhenPushing;  // 0xBB0(0x4)
	float _maxAllowedDistanceFromPushStartingPlayer;  // 0xBB4(0x4)
	float _steeringResetSpeed;  // 0xBB8(0x4)
	char pad_3004[4];  // 0xBBC(0x4)
	struct UCurveFloat* _steeringSpeedCurve;  // 0xBC0(0x8)
	struct UStaticMesh* _steeringStaticMesh;  // 0xBC8(0x8)
	float _dragCoefficient;  // 0xBD0(0x4)
	float _airDensity;  // 0xBD4(0x4)
	float _additionalGravityFactor;  // 0xBD8(0x4)
	float _antiDriftMultiplier;  // 0xBDC(0x4)
	float _antiRollMultiplier;  // 0xBE0(0x4)
	float _antiPitchMultiplier;  // 0xBE4(0x4)
	char pad_3048[20];  // 0xBE8(0x14)
	int32_t _minimumNumberOfWheelsToBeDriven;  // 0xBFC(0x4)
	int32_t _minimumNumberOfWheelsToBePushed;  // 0xC00(0x4)
	char pad_3076[4];  // 0xC04(0x4)
	struct UAkAudioEvent* _hornStartAudioEvent;  // 0xC08(0x8)
	struct UAkAudioEvent* _hornStopAudioEvent;  // 0xC10(0x8)
	char pad_3096[8];  // 0xC18(0x8)
	struct FRuntimeFloatCurve _pusherActionDifficultyVsSpeed;  // 0xC20(0x88)
	struct FRuntimeFloatCurve _pusherBaseStrengthChangeRateSpeedInfluenceVsSpeed;  // 0xCA8(0x88)
	struct FRuntimeFloatCurve _pusherBaseConstitutionChangeRateModifierVsSpeed;  // 0xD30(0x88)
	char pad_3512[8];  // 0xDB8(0x8)

	void UpdateHandlingParametersOnClient(float WheelSteeringLerpSpeedMultiplier, float engineIgnitionDurationMultiplier, float engineIgnitionFailureChance, float gearboxGearChangeDelayMultiplier, float gearboxGearUpRatioMultiplier, float gearboxGearDownRatioMultiplier); // Function ConZ.WheeledVehicleBase.UpdateHandlingParametersOnClient
}; 



// Class ConZ.InteractionUserWidget
// Size: 0x2F0(Inherited: 0x260) 
struct UInteractionUserWidget : public UUserWidget
{
	struct UTextBlock* _actionText;  // 0x260(0x8)
	struct UButton* _actionButton;  // 0x268(0x8)
	char pad_624[128];  // 0x270(0x80)

	void Interact(); // Function ConZ.InteractionUserWidget.Interact
}; 



// Class ConZ.ChatNotificationDescription
// Size: 0x58(Inherited: 0x40) 
struct UChatNotificationDescription : public UNotificationDescription
{
	struct FString Message;  // 0x40(0x10)
	uint8_t  ChatType;  // 0x50(0x1)
	char pad_81_1 : 7;  // 0x51(0x1)
	bool ShouldCopyToClientClipboard : 1;  // 0x51(0x1)
	char pad_82[6];  // 0x52(0x6)

}; 



// Class ConZ.PrisonerActionPlaceItemOnRack
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionPlaceItemOnRack : public UPrisonerAction
{

}; 



// Class ConZ.FireFanningItemTag
// Size: 0x68(Inherited: 0x30) 
struct UFireFanningItemTag : public UBaseItemTag
{
	struct UAnimMontage* BlowAirIntoFireMontage;  // 0x30(0x8)
	struct UAnimMontage* BlowAirIntoLowFireMontage;  // 0x38(0x8)
	struct UAnimMontage* ItemSwingAnimOpen;  // 0x40(0x8)
	struct FName ItemSwingAnimOpenSection;  // 0x48(0x8)
	struct UAnimMontage* ItemSwingAnimClose;  // 0x50(0x8)
	struct FName ItemSwingAnimCloseSection;  // 0x58(0x8)
	float AirAmountMultiplier;  // 0x60(0x4)
	char pad_100[4];  // 0x64(0x4)

}; 



// Class ConZ.AdminCommandArgumentDataTypeBase
// Size: 0x108(Inherited: 0x30) 
struct UAdminCommandArgumentDataTypeBase : public UDataAsset
{
	struct FText DataTypeName;  // 0x30(0x18)
	UAdminCommandArgumentCompletion* ArgumentCompletion;  // 0x48(0x8)
	char pad_80[184];  // 0x50(0xB8)

}; 



// Class ConZ.InsertMagazine
// Size: 0x90(Inherited: 0x90) 
struct UInsertMagazine : public UWeaponActionReloadSequence
{

	bool IsMagazineToLoadEmpty(struct FWeaponReloadData& Data); // Function ConZ.InsertMagazine.IsMagazineToLoadEmpty
}; 



// Class ConZ.MeshHitZones
// Size: 0xD0(Inherited: 0xB0) 
struct UMeshHitZones : public UActorComponent
{
	char pad_176[16];  // 0xB0(0x10)
	struct UMaterialInterface* _deactivationMaterial;  // 0xC0(0x8)
	char pad_200[8];  // 0xC8(0x8)

	bool IsHitZoneActive(int32_t zoneIndex); // Function ConZ.MeshHitZones.IsHitZoneActive
}; 



// Class ConZ.SharkAnimInstance
// Size: 0x360(Inherited: 0x2C0) 
struct USharkAnimInstance : public UAnimInstance
{
	char pad_704[8];  // 0x2C0(0x8)
	struct FName _mouthTargetName;  // 0x2C8(0x8)
	float _mouthMorphValueChangePerSecond;  // 0x2D0(0x4)
	struct FName _teethTargetName;  // 0x2D4(0x8)
	float _teethMorphValueChangePerSecond;  // 0x2DC(0x4)
	struct FName _eyesTargetName;  // 0x2E0(0x8)
	float _eyesMorphValueChangePerSecond;  // 0x2E8(0x4)
	struct FVector _velocity;  // 0x2EC(0xC)
	float _angularVelocityYaw;  // 0x2F8(0x4)
	float _angularVelocityPitch;  // 0x2FC(0x4)
	uint8_t  _behaviorMode;  // 0x300(0x1)
	char pad_769_1 : 7;  // 0x301(0x1)
	bool _isAlive : 1;  // 0x301(0x1)
	char pad_770[94];  // 0x302(0x5E)

	bool IsAlive(); // Function ConZ.SharkAnimInstance.IsAlive
}; 



// Class ConZ.AdminCommandArgumentDataType_Location
// Size: 0x118(Inherited: 0x108) 
struct UAdminCommandArgumentDataType_Location : public UAdminCommandArgumentDataTypeBase
{
	struct FVector _defaultValue;  // 0x108(0xC)
	char pad_276[4];  // 0x114(0x4)

}; 



// Class ConZ.Choppable
// Size: 0x28(Inherited: 0x28) 
struct UChoppable : public UInterface
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_MaxMovementPace
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_MaxMovementPace : public UPrisonerBodyConditionOrSymptomSideEffectUIData
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.CookingUtilitySlotButton
// Size: 0x2E8(Inherited: 0x260) 
struct UCookingUtilitySlotButton : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct UTextBlock* _titleText;  // 0x270(0x8)
	struct UImage* _utilityIcon;  // 0x278(0x8)
	struct UImage* _borderImage;  // 0x280(0x8)
	struct UImage* _ordinalNumberBorderImage;  // 0x288(0x8)
	struct UTextBlock* _slotOrdinalNumber;  // 0x290(0x8)
	struct UImage* _cookingInProgressIcon;  // 0x298(0x8)
	char pad_672_1 : 7;  // 0x2A0(0x1)
	bool _selected : 1;  // 0x2A0(0x1)
	char pad_673[3];  // 0x2A1(0x3)
	struct FLinearColor _selectedBorderColor;  // 0x2A4(0x10)
	struct FLinearColor _deselectedBorderColor;  // 0x2B4(0x10)
	struct FLinearColor _selectedTextColor;  // 0x2C4(0x10)
	struct FLinearColor _deselectedTextColor;  // 0x2D4(0x10)
	char pad_740[4];  // 0x2E4(0x4)

}; 



// Class ConZ.AdminCommandArgumentDataType_String
// Size: 0x120(Inherited: 0x108) 
struct UAdminCommandArgumentDataType_String : public UAdminCommandArgumentDataTypeBase
{
	struct FString _defaultValue;  // 0x108(0x10)
	char pad_280_1 : 7;  // 0x118(0x1)
	bool _caseSensitive : 1;  // 0x118(0x1)
	char pad_281[7];  // 0x119(0x7)

}; 



// Class ConZ.MalfunctionWidget
// Size: 0x270(Inherited: 0x260) 
struct UMalfunctionWidget : public UUserWidget
{
	char pad_608[8];  // 0x260(0x8)
	struct UTextBlock* _descriptionWidget;  // 0x268(0x8)

	void ExecuteAction(); // Function ConZ.MalfunctionWidget.ExecuteAction
}; 



// Class ConZ.CraftingInfoWidget
// Size: 0x360(Inherited: 0x260) 
struct UCraftingInfoWidget : public UUserWidget
{
	struct UInspectedItemWidget* ItemWidget;  // 0x260(0x8)
	struct UGridPanel* ComponentsGridPanel;  // 0x268(0x8)
	struct UGridPanel* CraftingGridPanel;  // 0x270(0x8)
	struct UUserWidget* ComponentsMinimizableWidget;  // 0x278(0x8)
	struct UUserWidget* CraftingMinimizableWidget;  // 0x280(0x8)
	char pad_648[88];  // 0x288(0x58)
	struct TArray<struct UPreviousNextSwitchWidget*> _switchWidgets;  // 0x2E0(0x10)
	struct TWeakObjectPtr<UPrisonerInventoryComponent> _inventoryComponent;  // 0x2F0(0x8)
	struct FCraftingRecipe _craftingRecipe;  // 0x2F8(0x38)
	char pad_816[32];  // 0x330(0x20)
	struct UTextBlock* TitleText;  // 0x350(0x8)
	struct UTextBlock* DescriptionText;  // 0x358(0x8)

	void SwapIngredient(int32_t widgetIndex, int32_t orderIndex); // Function ConZ.CraftingInfoWidget.SwapIngredient
}; 



// Class ConZ.AdminCommandArgumentDataType_TransformOrLocation
// Size: 0x118(Inherited: 0x108) 
struct UAdminCommandArgumentDataType_TransformOrLocation : public UAdminCommandArgumentDataTypeBase
{
	struct FVector _defaultLocationValue;  // 0x108(0xC)
	char pad_276[4];  // 0x114(0x4)

}; 



// Class ConZ.PrisonerBodyConditionInteractionQueryResults
// Size: 0xA0(Inherited: 0x28) 
struct UPrisonerBodyConditionInteractionQueryResults : public UObject
{
	char pad_40[120];  // 0x28(0x78)

}; 



// Class ConZ.CircularMenuSegmentThrowingInfo
// Size: 0x98(Inherited: 0x80) 
struct UCircularMenuSegmentThrowingInfo : public UCircularMenuSegmentInfo
{
	struct FDelegate Action;  // 0x80(0x10)
	int32_t Index;  // 0x90(0x4)
	char pad_148[4];  // 0x94(0x4)

}; 



// Class ConZ.InventoryCentralPanel
// Size: 0x278(Inherited: 0x260) 
struct UInventoryCentralPanel : public UUserWidget
{
	struct UVicinityPanel3* _vicinityPanel;  // 0x260(0x8)
	struct UVicinityContainer3* _vicinityContainer;  // 0x268(0x8)
	struct UScrollBox* _vicinityContainerScrollBox;  // 0x270(0x8)

}; 



// Class ConZ.PlaceableOnWallRackItemTag
// Size: 0x38(Inherited: 0x38) 
struct UPlaceableOnWallRackItemTag : public UPlaceableOnRackItemTag
{

}; 



// Class ConZ.AdminCommandCompletionManager
// Size: 0x1E0(Inherited: 0x28) 
struct UAdminCommandCompletionManager : public UObject
{
	struct TMap<struct FString, UAdminCommand*> _commands;  // 0x28(0x50)
	char pad_120[360];  // 0x78(0x168)

}; 



// Class ConZ.BuriableItemComponent
// Size: 0x190(Inherited: 0xC8) 
struct UBuriableItemComponent : public UItemComponent
{
	char pad_200[8];  // 0xC8(0x8)
	char pad_208_1 : 7;  // 0xD0(0x1)
	bool _canEverShowMarker : 1;  // 0xD0(0x1)
	char pad_209[15];  // 0xD1(0xF)
	char pad_224_1 : 7;  // 0xE0(0x1)
	bool _canBeBuried : 1;  // 0xE0(0x1)
	char pad_225[7];  // 0xE1(0x7)
	struct FBurialInformation _repBurialInformation;  // 0xE8(0x18)
	char pad_256[8];  // 0x100(0x8)
	struct UStaticMesh* _buriedMesh;  // 0x108(0x8)
	struct FVector _buriedMeshScale;  // 0x110(0xC)
	struct FVector _buriedMeshRelativeLocation;  // 0x11C(0xC)
	char pad_296[16];  // 0x128(0x10)
	struct UMaterialBillboardComponent* _spriteMarkerBillboard;  // 0x138(0x8)
	struct FMaterialSpriteElement _spriteMarkerData;  // 0x140(0x28)
	struct FVector _spriteMarkerRelativeLocation;  // 0x168(0xC)
	char pad_372_1 : 7;  // 0x174(0x1)
	bool _applyBuryMaterial : 1;  // 0x174(0x1)
	char pad_373[3];  // 0x175(0x3)
	float _startMeshFadeDistance;  // 0x178(0x4)
	float _endMeshFadeDistance;  // 0x17C(0x4)
	USkill* _skillToIncrease;  // 0x180(0x8)
	float _skillIncreaseAmount;  // 0x188(0x4)
	float _skillIncreaseModifier;  // 0x18C(0x4)

	void OnRep_UpdateBurialInformation(); // Function ConZ.BuriableItemComponent.OnRep_UpdateBurialInformation
}; 



// Class ConZ.AdminCommandRegistry
// Size: 0x88(Inherited: 0x28) 
struct UAdminCommandRegistry : public UObject
{
	struct TArray<UAdminCommand*> _commands;  // 0x28(0x10)
	char pad_56[80];  // 0x38(0x50)

}; 



// Class ConZ.CargoDropShip
// Size: 0x220(Inherited: 0x220) 
struct ACargoDropShip : public AActor
{

}; 



// Class ConZ.AdminLight
// Size: 0x370(Inherited: 0x360) 
struct UAdminLight : public UPointLightComponent
{
	struct UCurveFloat* _intensityVersusTimeOfDay;  // 0x360(0x8)
	char pad_872[8];  // 0x368(0x8)

}; 



// Class ConZ.RadioStation
// Size: 0x298(Inherited: 0x220) 
struct ARadioStation : public AActor
{
	char pad_544[48];  // 0x220(0x30)
	struct FName _stationName;  // 0x250(0x8)
	struct TArray<struct FRadioProgramData> _programsData;  // 0x258(0x10)
	int32_t _maxTracksToQueue;  // 0x268(0x4)
	int32_t _currentIndex;  // 0x26C(0x4)
	struct TArray<struct URadioTrack*> _playlist;  // 0x270(0x10)
	float _elapsedTime;  // 0x280(0x4)
	char pad_644[20];  // 0x284(0x14)

	void StartTrack(); // Function ConZ.RadioStation.StartTrack
	void OnTrackEnded(); // Function ConZ.RadioStation.OnTrackEnded
	void OnRep_Playlist(); // Function ConZ.RadioStation.OnRep_Playlist
	void Multicast_SendNextTrack(struct URadioTrack* Track); // Function ConZ.RadioStation.Multicast_SendNextTrack
}; 



// Class ConZ.CCGameUpgradeConditionDisplayWidget
// Size: 0x2C8(Inherited: 0x260) 
struct UCCGameUpgradeConditionDisplayWidget : public UUserWidget
{
	struct UBorder* _border;  // 0x260(0x8)
	struct UTextBlock* _text;  // 0x268(0x8)
	struct TMap<uint8_t , struct FText> _requirementTextPerGameUpgrade;  // 0x270(0x50)
	char pad_704[8];  // 0x2C0(0x8)

}; 



// Class ConZ.BaseCraftingRecipe
// Size: 0x88(Inherited: 0x28) 
struct UBaseCraftingRecipe : public UObject
{
	struct FString RecipeName;  // 0x28(0x10)
	uint8_t  RecipeCategory;  // 0x38(0x1)
	char pad_57[3];  // 0x39(0x3)
	int32_t RecipeOrder;  // 0x3C(0x4)
	struct UAnimMontage* CustomCraftingMontage;  // 0x40(0x8)
	struct UAkAudioEvent* CustomStartCraftingAudioEvent;  // 0x48(0x8)
	struct UAkAudioEvent* CustomStopCraftingAudioEvent;  // 0x50(0x8)
	struct TArray<struct UCraftingCondition*> GlobalConditions;  // 0x58(0x10)
	struct TArray<struct FCraftingSlot> IngredientSlots;  // 0x68(0x10)
	struct TArray<struct FCraftingProductDescription> PossibleProducts;  // 0x78(0x10)

	bool Process(struct FCraftingRecipeParams& Params, struct UCraftingResult* Result); // Function ConZ.BaseCraftingRecipe.Process
	struct UObject* Finalize(struct UObject* WorldContextObject, struct UCraftingResult* Result); // Function ConZ.BaseCraftingRecipe.Finalize
}; 



// Class ConZ.AdminPlantPanel
// Size: 0x2B0(Inherited: 0x260) 
struct UAdminPlantPanel : public UUserWidget
{
	char pad_608[8];  // 0x260(0x8)
	struct UButton* _seedingButton;  // 0x268(0x8)
	struct UButton* _vegetatingButton;  // 0x270(0x8)
	struct UButton* _floweringButton;  // 0x278(0x8)
	struct UButton* _ripeningButton;  // 0x280(0x8)
	struct UButton* _killButton;  // 0x288(0x8)
	struct UButton* _addWeedButton;  // 0x290(0x8)
	struct UButton* _removeWeedButton;  // 0x298(0x8)
	struct UButton* _removePlantButton;  // 0x2A0(0x8)
	struct UButton* _addWaterButton;  // 0x2A8(0x8)

	void OnClickVegetating(); // Function ConZ.AdminPlantPanel.OnClickVegetating
	void OnClickSeeding(); // Function ConZ.AdminPlantPanel.OnClickSeeding
	void OnClickRipening(); // Function ConZ.AdminPlantPanel.OnClickRipening
	void OnClickRemoveWeed(); // Function ConZ.AdminPlantPanel.OnClickRemoveWeed
	void OnClickRemovePlant(); // Function ConZ.AdminPlantPanel.OnClickRemovePlant
	void OnClickKill(); // Function ConZ.AdminPlantPanel.OnClickKill
	void OnClickFlowering(); // Function ConZ.AdminPlantPanel.OnClickFlowering
	void OnClickAddWeed(); // Function ConZ.AdminPlantPanel.OnClickAddWeed
	void OnClickAddWater(); // Function ConZ.AdminPlantPanel.OnClickAddWater
}; 



// Class ConZ.PrisonerBodySymptom_DoubleVision
// Size: 0xC0(Inherited: 0xB8) 
struct UPrisonerBodySymptom_DoubleVision : public UPrisonerBodySymptom
{
	float _maxSeverity;  // 0xB8(0x4)
	char pad_188[4];  // 0xBC(0x4)

}; 



// Class ConZ.CustomZoneSettingsApplyNotification
// Size: 0x270(Inherited: 0x260) 
struct UCustomZoneSettingsApplyNotification : public UUserWidget
{
	struct UTextBlock* _text;  // 0x260(0x8)
	char pad_616[8];  // 0x268(0x8)

}; 



// Class ConZ.Objective
// Size: 0x320(Inherited: 0x220) 
struct AObjective : public AActor
{
	char pad_544[144];  // 0x220(0x90)
	struct TArray<struct FDialogueInfo> _objectivesIntroDialogues;  // 0x2B0(0x10)
	struct TArray<struct FDialogueInfo> _objectivesOutroSuccessDialogues;  // 0x2C0(0x10)
	struct TArray<struct FDialogueInfo> _objectivesOutroFailDialogues;  // 0x2D0(0x10)
	uint8_t  _objectiveState;  // 0x2E0(0x1)
	char pad_737[3];  // 0x2E1(0x3)
	struct TWeakObjectPtr<AMission> _parentMission;  // 0x2E4(0x8)
	char pad_748[4];  // 0x2EC(0x4)
	struct FText _description;  // 0x2F0(0x18)
	char pad_776[17];  // 0x308(0x11)
	char pad_793_1 : 7;  // 0x319(0x1)
	bool _canInterruptDialogue : 1;  // 0x319(0x1)
	char pad_794_1 : 7;  // 0x31A(0x1)
	bool _playUISounds : 1;  // 0x31A(0x1)
	char pad_795[5];  // 0x31B(0x5)

	void SetObjectiveState(uint8_t  Value, bool silent); // Function ConZ.Objective.SetObjectiveState
	void Server_ActiveObjectiveInitialized(); // Function ConZ.Objective.Server_ActiveObjectiveInitialized
	void OnRep_ObjectiveStateChanged(); // Function ConZ.Objective.OnRep_ObjectiveStateChanged
	bool IsStarted(); // Function ConZ.Objective.IsStarted
	bool IsCompleted(); // Function ConZ.Objective.IsCompleted
	struct FText GetDescription(); // Function ConZ.Objective.GetDescription
	void FailObjective(bool forceFail); // Function ConZ.Objective.FailObjective
	void CompleteObjective(); // Function ConZ.Objective.CompleteObjective
	void Client_ShowWaypointWidget(struct AActor* targetActor, struct AActor* actorToTieLifetime); // Function ConZ.Objective.Client_ShowWaypointWidget
	void Client_RemoveWaypointWidget(); // Function ConZ.Objective.Client_RemoveWaypointWidget
	void Client_BroadcastTrackedItemAmount(int32_t currentAmount); // Function ConZ.Objective.Client_BroadcastTrackedItemAmount
	bool CanInterruptDialogue(); // Function ConZ.Objective.CanInterruptDialogue
}; 



// Class ConZ.DbStatics
// Size: 0x28(Inherited: 0x28) 
struct UDbStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.PrisonerBodyCondition_StomachEmpty
// Size: 0xE0(Inherited: 0xC0) 
struct UPrisonerBodyCondition_StomachEmpty : public UPrisonerBodyCondition
{
	float _stomachEmptinessToExist;  // 0xC0(0x4)
	float _energyRatioToExist;  // 0xC4(0x4)
	UPrisonerBodySymptom_StomachGrowling* _stomachGrowlingSymptomClass;  // 0xC8(0x8)
	struct UPrisonerBodySymptomCause_StomachGrowling* _stomachGrowlingSymptomCause;  // 0xD0(0x8)
	float _stomachGrowlingSymptomSoundInterval;  // 0xD8(0x4)
	char pad_220[4];  // 0xDC(0x4)

}; 



// Class ConZ.AnimNotifyState_ChamberWeapon
// Size: 0x30(Inherited: 0x30) 
struct UAnimNotifyState_ChamberWeapon : public UAnimNotifyState
{

}; 



// Class ConZ.SedentaryNPC
// Size: 0x900(Inherited: 0x7A0) 
struct ASedentaryNPC : public AConZCharacter
{
	char pad_1952[8];  // 0x7A0(0x8)
	struct FVector _originalLocation;  // 0x7A8(0xC)
	char pad_1972[4];  // 0x7B4(0x4)
	struct ATradeOutpostBuilding* _tradeOutpostBuilding;  // 0x7B8(0x8)
	char pad_1984[24];  // 0x7C0(0x18)
	struct FVector _animationHeadScale;  // 0x7D8(0xC)
	char pad_2020[4];  // 0x7E4(0x4)
	struct UAnimSequenceBase* _faceIdleAnimation;  // 0x7E8(0x8)
	struct FFloatRange _headYawClampValues;  // 0x7F0(0x10)
	struct FFloatRange _headPitchClampValues;  // 0x800(0x10)
	float _headPitchClampCorrectionValueLower;  // 0x810(0x4)
	float _headPitchClampCorrectionValueUpper;  // 0x814(0x4)
	float _headRotationSpeedLerpFactor;  // 0x818(0x4)
	struct FFloatRange _eyesYawAngleRange;  // 0x81C(0x10)
	struct FFloatRange _eyesPitchAngleRange;  // 0x82C(0x10)
	float _eyesPitchClampCorrectionValueLower;  // 0x83C(0x4)
	float _eyesPitchClampCorrectionValueUpper;  // 0x840(0x4)
	float _eyesRotationSpeedLerpFactor;  // 0x844(0x4)
	struct FFloatRange _blinkingPeriodRange;  // 0x848(0x10)
	float _timeToBlinkInSeconds;  // 0x858(0x4)
	char pad_2140[4];  // 0x85C(0x4)
	struct TArray<USedentaryNPCBackgroundInteraction*> _backgroundInteractions;  // 0x860(0x10)
	struct USedentaryNPCBackgroundInteraction* _activeBackgroundInteraction;  // 0x870(0x8)
	float _interactionDistance;  // 0x878(0x4)
	float _timeWithoutFocusPawnToClearBackgroundInteractions;  // 0x87C(0x4)
	char pad_2176[88];  // 0x880(0x58)
	float _backgroundInteractionCooldownTime;  // 0x8D8(0x4)
	char pad_2268[36];  // 0x8DC(0x24)

}; 



// Class ConZ.RequirementObjective
// Size: 0x330(Inherited: 0x320) 
struct ARequirementObjective : public AObjective
{
	char pad_800[16];  // 0x320(0x10)

}; 



// Class ConZ.FireSourceItemTag
// Size: 0x30(Inherited: 0x30) 
struct UFireSourceItemTag : public UCraftingItemTag
{

}; 



// Class ConZ.BlueprintableItemObjective
// Size: 0x368(Inherited: 0x330) 
struct ABlueprintableItemObjective : public ARequirementObjective
{
	uint8_t  _actionType;  // 0x330(0x1)
	char pad_817[7];  // 0x331(0x7)
	AActor* _targetBlueprintActor;  // 0x338(0x8)
	struct TArray<AActor*> _itemsToFill;  // 0x340(0x10)
	char pad_848[24];  // 0x350(0x18)

}; 



// Class ConZ.Airplane
// Size: 0xCC0(Inherited: 0xAE0) 
struct AAirplane : public AVehicleBase
{
	char pad_2784[16];  // 0xAE0(0x10)
	struct ULiftComponent* _physicsLiftComponent;  // 0xAF0(0x8)
	char pad_2808[40];  // 0xAF8(0x28)
	struct TMap<uint8_t , struct FAerodynamicSurfaceControlData> _aerodynamicSurfaceMap;  // 0xB20(0x50)
	char pad_2928[16];  // 0xB70(0x10)
	float _airFlowParticlesSpeedKmhThreshold;  // 0xB80(0x4)
	float _reverseTaxiingForce;  // 0xB84(0x4)
	float _maxReverseTaxiingVelocity;  // 0xB88(0x4)
	float _airplaneHeightToStallInMeters;  // 0xB8C(0x4)
	float _propellerForce;  // 0xB90(0x4)
	float _maxVelocity;  // 0xB94(0x4)
	char pad_2968[4];  // 0xB98(0x4)
	struct FInt32Range _throttleLevelRange;  // 0xB9C(0x10)
	char pad_2988[4];  // 0xBAC(0x4)
	struct FRuntimeFloatCurve _throttlePerLevel;  // 0xBB0(0x88)
	char pad_3128[4];  // 0xC38(0x4)
	float _throttleLerpAmount;  // 0xC3C(0x4)
	char pad_3136[8];  // 0xC40(0x8)
	float _brakeLerpAmount;  // 0xC48(0x4)
	char pad_3148[8];  // 0xC4C(0x8)
	float _rollLerpAmount;  // 0xC54(0x4)
	char pad_3160[8];  // 0xC58(0x8)
	float _yawLerpAmount;  // 0xC60(0x4)
	char pad_3172[8];  // 0xC64(0x8)
	float _pitchLerpAmount;  // 0xC6C(0x4)
	char pad_3184[8];  // 0xC70(0x8)
	float _controlResetLerp;  // 0xC78(0x4)
	char pad_3196[44];  // 0xC7C(0x2C)
	struct UStaticMeshComponent* _propellerMesh;  // 0xCA8(0x8)
	struct UMaterialInterface* _propellerMaterial;  // 0xCB0(0x8)
	struct UMaterialInstanceDynamic* _propellerMaterialDynamic;  // 0xCB8(0x8)

	void UpdateHandlingParametersOnClient(bool ShouldHaveMouseInput, float engineIgnitionDurationMultiplier, float engineIgnitionFailureChance); // Function ConZ.Airplane.UpdateHandlingParametersOnClient
	void OnPropellerHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComponent, struct FVector NormalImpulse, struct FHitResult& Hit); // Function ConZ.Airplane.OnPropellerHit
}; 



// Class ConZ.PrisonerActionRemovePlantDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionRemovePlantDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.WeaponActionReloadSequence
// Size: 0x90(Inherited: 0x28) 
struct UWeaponActionReloadSequence : public UWeaponAction
{
	struct FBodyWeaponAnimation AnimationStandAndCrouch;  // 0x28(0x10)
	struct FBodyWeaponAnimation AnimationProne;  // 0x38(0x10)
	char pad_72_1 : 7;  // 0x48(0x1)
	bool CanBeInterrupted : 1;  // 0x48(0x1)
	char pad_73[71];  // 0x49(0x47)

	void SetNextMontageSectionFromPrevious(struct FName previousSection, struct FName NextSection); // Function ConZ.WeaponActionReloadSequence.SetNextMontageSectionFromPrevious
	void SetNextMontageSection(struct FName NextSection); // Function ConZ.WeaponActionReloadSequence.SetNextMontageSection
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionReloadSequence.OnMontageEnded
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionReloadSequence.OnMontageBlendingOutStarted
	bool IgnoreChamberBulletOnEnd(); // Function ConZ.WeaponActionReloadSequence.IgnoreChamberBulletOnEnd
	struct FWeaponReloadData GetReloadData(); // Function ConZ.WeaponActionReloadSequence.GetReloadData
	struct UAnimMontage* GetActiveAnimationWeapon(); // Function ConZ.WeaponActionReloadSequence.GetActiveAnimationWeapon
	struct UAnimMontage* GetActiveAnimationBody(); // Function ConZ.WeaponActionReloadSequence.GetActiveAnimationBody
	float ExecuteUsingData(struct FWeaponReloadData& Data); // Function ConZ.WeaponActionReloadSequence.ExecuteUsingData
	void End(bool Regular); // Function ConZ.WeaponActionReloadSequence.End
	bool CanInterrupt(); // Function ConZ.WeaponActionReloadSequence.CanInterrupt
	bool CanExecuteUsingData(struct FWeaponReloadData& Data); // Function ConZ.WeaponActionReloadSequence.CanExecuteUsingData
}; 



// Class ConZ.AdvancedBlueprintableItemObjective
// Size: 0x378(Inherited: 0x368) 
struct AAdvancedBlueprintableItemObjective : public ABlueprintableItemObjective
{
	struct AMissionDialogueManager* _dialogueManager;  // 0x368(0x8)
	struct UDialogueData* _dialogueData;  // 0x370(0x8)

	void OnTabMenuOpenedHandler(uint8_t  tabMode); // Function ConZ.AdvancedBlueprintableItemObjective.OnTabMenuOpenedHandler
}; 



// Class ConZ.BankATMGoldTrading
// Size: 0x378(Inherited: 0x260) 
struct UBankATMGoldTrading : public UUserWidget
{
	char pad_608[88];  // 0x260(0x58)
	struct UConZCustomInteractionButton* _btnEjectCard;  // 0x2B8(0x8)
	struct UWidgetSwitcher* _buttonSwitcher;  // 0x2C0(0x8)
	struct UBankATMPointingButton* _btnReturn;  // 0x2C8(0x8)
	struct UBankATMPointingButton* _btnSubmit;  // 0x2D0(0x8)
	struct UBankATMPointingButton* _btnNo;  // 0x2D8(0x8)
	struct UBankATMPointingButton* _btnYes;  // 0x2E0(0x8)
	struct UWidgetSwitcher* _subsectionSwitcher;  // 0x2E8(0x8)
	struct UTextBlock* _goldBuyConversionLabel;  // 0x2F0(0x8)
	struct UBankATMVirtualEditbox* _editBuyAmount;  // 0x2F8(0x8)
	struct UTextBlock* _creditsLostLabel;  // 0x300(0x8)
	struct UTextBlock* _goldSellConversionLabel;  // 0x308(0x8)
	struct UBankATMVirtualEditbox* _editSellAmount;  // 0x310(0x8)
	struct UTextBlock* _creditsGainedLabel;  // 0x318(0x8)
	struct UTextBlock* _questionLabel;  // 0x320(0x8)
	struct UTextBlock* _errorLabel;  // 0x328(0x8)
	struct UBankATMGoldValueGraph* _goldValueGraph;  // 0x330(0x8)
	struct UTextBlock* _goldBalanceTextBlock;  // 0x338(0x8)
	struct UTextBlock* _fundsSourceWarning;  // 0x340(0x8)
	struct UAkAudioEvent* _soundSuccess;  // 0x348(0x8)
	struct UAkAudioEvent* _errorSuccess;  // 0x350(0x8)
	char pad_856[32];  // 0x358(0x20)

	void HandleOnEjectClicked(); // Function ConZ.BankATMGoldTrading.HandleOnEjectClicked
}; 



// Class ConZ.AdvancedBuoyancyComponent
// Size: 0x540(Inherited: 0x4E0) 
struct UAdvancedBuoyancyComponent : public UStaticMeshComponent
{
	char pad_1248[12];  // 0x4E0(0xC)
	float _waterKinematicViscosity;  // 0x4EC(0x4)
	float _cPD1;  // 0x4F0(0x4)
	float _cPD2;  // 0x4F4(0x4)
	float _fP;  // 0x4F8(0x4)
	float _cSD1;  // 0x4FC(0x4)
	float _cSD2;  // 0x500(0x4)
	float _fS;  // 0x504(0x4)
	float _maxAcceleration;  // 0x508(0x4)
	float _p;  // 0x50C(0x4)
	float _maxHydrodynamicVelocity;  // 0x510(0x4)
	char pad_1300[44];  // 0x514(0x2C)

}; 



// Class ConZ.CraftingObjective
// Size: 0x348(Inherited: 0x330) 
struct ACraftingObjective : public ARequirementObjective
{
	struct TArray<struct TSoftClassPtr<UObject>> _targetItems;  // 0x330(0x10)
	char pad_832[8];  // 0x340(0x8)

}; 



// Class ConZ.WeaponStateRocketLauncherUnarm
// Size: 0x38(Inherited: 0x30) 
struct UWeaponStateRocketLauncherUnarm : public UWeaponState
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.WashClothesData
// Size: 0x90(Inherited: 0x30) 
struct UWashClothesData : public UDataAsset
{
	struct TMap<AItem*, struct FWashItemData> WashClothes;  // 0x30(0x50)
	USkill* SkillToIncrease;  // 0x80(0x8)
	float SkillIncreaseAmount;  // 0x88(0x4)
	float SkillIncreaseModifier;  // 0x8C(0x4)

}; 



// Class ConZ.DeathmatchParticipantStats
// Size: 0x58(Inherited: 0x48) 
struct UDeathmatchParticipantStats : public UGameEventParticipantStats
{
	float LongestHeadshot;  // 0x48(0x4)
	int32_t MeleeKills;  // 0x4C(0x4)
	float LongestLife;  // 0x50(0x4)
	char pad_84[4];  // 0x54(0x4)

}; 



// Class ConZ.VehicleAttachmentItem
// Size: 0x920(Inherited: 0x910) 
struct AVehicleAttachmentItem : public AItem
{
	char pad_2320[16];  // 0x910(0x10)

}; 



// Class ConZ.AudioSettingsManager
// Size: 0x28(Inherited: 0x28) 
struct UAudioSettingsManager : public UObject
{

}; 



// Class ConZ.AIDetectionTimerHandler
// Size: 0x270(Inherited: 0x220) 
struct AAIDetectionTimerHandler : public AActor
{
	char pad_544[80];  // 0x220(0x50)

	void OnDestroyedEvent(struct AActor* DestroyedActor); // Function ConZ.AIDetectionTimerHandler.OnDestroyedEvent
}; 



// Class ConZ.PrisonerActionDecontaminateWithReplenishableResourceDescription
// Size: 0x88(Inherited: 0x38) 
struct UPrisonerActionDecontaminateWithReplenishableResourceDescription : public UCharacterActionDescription
{
	char pad_56[72];  // 0x38(0x48)
	struct UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;  // 0x80(0x8)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Hallucinations
// Size: 0xC8(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_Hallucinations : public UPrisonerBodyConditionOrSymptomSideEffect
{
	UPrisonerBodySymptom_Hallucinations* _symptomClass;  // 0x30(0x8)
	struct UPrisonerBodySymptomCause_Hallucinations* _symptomCause;  // 0x38(0x8)
	struct FRuntimeFloatCurve _hallucinationsSeverityVsSeverity;  // 0x40(0x88)

}; 



// Class ConZ.CookingRecipeRegistry
// Size: 0x40(Inherited: 0x30) 
struct UCookingRecipeRegistry : public UDataAsset
{
	struct TArray<struct FCookingRecipeRegistryEntry> _entries;  // 0x30(0x10)

}; 



// Class ConZ.VehicleBase
// Size: 0xAE0(Inherited: 0x280) 
struct AVehicleBase : public APawn
{
	char pad_640[408];  // 0x280(0x198)
	struct UVehicleMeshComponent* _vehicleMeshComponent;  // 0x418(0x8)
	char pad_1056[28];  // 0x420(0x1C)
	char pad_1084_1 : 7;  // 0x43C(0x1)
	bool _shouldApplyWaterDrag : 1;  // 0x43C(0x1)
	char pad_1085[3];  // 0x43D(0x3)
	float _waterDragForceCoefficient;  // 0x440(0x4)
	struct FFloatInterval _submergedInWaterDamagePerSecond;  // 0x444(0x8)
	char pad_1100[84];  // 0x44C(0x54)
	struct AVehicleItemContainer* _itemContainer;  // 0x4A0(0x8)
	struct TArray<struct UVehicleAttachment*> _vehicleAttachments;  // 0x4A8(0x10)
	struct TArray<struct UVehicleAttachment*> _repVehicleAttachments;  // 0x4B8(0x10)
	char pad_1224[16];  // 0x4C8(0x10)
	struct FVehicleAttachmentSlot _chassisSlot;  // 0x4D8(0x48)
	char pad_1312[8];  // 0x520(0x8)
	struct FGameplayTagContainer _lockInfluencingAttachmentSlotTags;  // 0x528(0x20)
	struct FGameplayTagContainer _lockingAttachmentSlotTags;  // 0x548(0x20)
	char pad_1384[24];  // 0x568(0x18)
	struct FPackedEntitySetupAndId _repServerEntitySetupAndId;  // 0x580(0x8)
	struct UVehicleForcePushComponent* _forcePushComponent;  // 0x588(0x8)
	struct TMap<struct UVehicleAttachment*, struct UWidgetComponent*> _attachmentHealthWidgets;  // 0x590(0x50)
	UVehicleAttachmentHealthWidget* _attachmentHealthWidget;  // 0x5E0(0x8)
	struct UNetworkPredictionComponent* _networkPrediction;  // 0x5E8(0x8)
	struct FGameplayTag SpawnGroup;  // 0x5F0(0x8)
	char pad_1528[8];  // 0x5F8(0x8)
	AVehicleItemContainer* _itemContainerClass;  // 0x600(0x8)
	struct FRepairableParams _repairableParams;  // 0x608(0x38)
	char pad_1600[1];  // 0x640(0x1)
	char pad_1601_1 : 7;  // 0x641(0x1)
	bool _repIsSimulatingPhysics : 1;  // 0x641(0x1)
	char pad_1602[2];  // 0x642(0x2)
	struct FVector _repLocationWhenNotSimulatingPhysics;  // 0x644(0xC)
	struct FRotator _repRotationWhenNotSimulatingPhysics;  // 0x650(0xC)
	char pad_1628[4];  // 0x65C(0x4)
	float _physicsDormancyTimeout;  // 0x660(0x4)
	char pad_1636[28];  // 0x664(0x1C)
	struct UVehicleServiceComponent* _serviceComponent;  // 0x680(0x8)
	char pad_1672_1 : 7;  // 0x688(0x1)
	bool _isInQuickService : 1;  // 0x688(0x1)
	char pad_1673[191];  // 0x689(0xBF)
	struct UVehicleCameraStabilizerComponent* _cameraStabilizer;  // 0x748(0x8)
	struct TMap<uint8_t , float> _collisionDamageMultipliers;  // 0x750(0x50)
	float _explosiveDamageMultiplier;  // 0x7A0(0x4)
	char pad_1956[4];  // 0x7A4(0x4)
	struct UCurveFloat* _collisionDamageToMultiplierCurve;  // 0x7A8(0x8)
	char pad_1968[4];  // 0x7B0(0x4)
	uint32_t _previewMeshTimePerMesh;  // 0x7B4(0x4)
	char pad_1976[8];  // 0x7B8(0x8)
	struct FText _healthBarCaption;  // 0x7C0(0x18)
	float _collisionDamageReplicationPeriodCooldownThreshold;  // 0x7D8(0x4)
	float _collisionDamageReplicationPeriodTimeoutThreshold;  // 0x7DC(0x4)
	char pad_2016[24];  // 0x7E0(0x18)
	struct FVehicleImpactEffects _impactEffects[5];  // 0x7F8(0x118)
	char pad_2320[96];  // 0x910(0x60)
	float _maxSpeedForInteraction;  // 0x970(0x4)
	float _maxTiltAngleForMounting;  // 0x974(0x4)
	char pad_2424[8];  // 0x978(0x8)
	float _maxSubmergedTime;  // 0x980(0x4)
	float _maxSubmersionFactor;  // 0x984(0x4)
	char pad_2440[8];  // 0x988(0x8)
	UUserWidget* _mountSlotIndicatorsWidget;  // 0x990(0x8)
	char pad_2456[8];  // 0x998(0x8)
	float _inWaterDestructionTimeInSeconds;  // 0x9A0(0x4)
	float _outOfWaterDestructionTimeInSeconds;  // 0x9A4(0x4)
	uint8_t  _repLightsCategoryStates;  // 0x9A8(0x1)
	char pad_2473[23];  // 0x9A9(0x17)
	UVehicleHandlingSkill* _vehicleHandlingSkill;  // 0x9C0(0x8)
	float _timeUntilDestructionInSeconds;  // 0x9C8(0x4)
	char pad_2508_1 : 7;  // 0x9CC(0x1)
	bool _isInWater : 1;  // 0x9CC(0x1)
	char pad_2509[3];  // 0x9CD(0x3)
	float _navigationRelevancyVelocitySquared;  // 0x9D0(0x4)
	char pad_2516[28];  // 0x9D4(0x1C)
	struct UParticleSystem* _smokeParticlesLow;  // 0x9F0(0x8)
	struct UParticleSystem* _smokeParticlesMedium;  // 0x9F8(0x8)
	struct UParticleSystem* _smokeParticlesHigh;  // 0xA00(0x8)
	char pad_2568[8];  // 0xA08(0x8)
	struct UParticleSystemComponent* _smokeParticleSystemComponent;  // 0xA10(0x8)
	struct FVector _smokeParticlesOffset;  // 0xA18(0xC)
	uint8_t  _physicsDominanceGroup;  // 0xA24(0x1)
	char pad_2597[3];  // 0xA25(0x3)
	float _aiNoiseFrequencyPerHour;  // 0xA28(0x4)
	uint8_t  _aiNoiseLevel;  // 0xA2C(0x1)
	char pad_2605[7];  // 0xA2D(0x7)
	struct FVector _aiNoiseOffset;  // 0xA34(0xC)
	struct TArray<struct FGameplayTag> _mountSlotsBySwitchSeatIndex;  // 0xA40(0x10)
	struct FTransform _unlockTransform;  // 0xA50(0x30)
	float _forceUnlockMovementAcceptanceRadius;  // 0xA80(0x4)
	float _absoluteSpeedLimitKmh;  // 0xA84(0x4)
	uint8_t  _aiTeam;  // 0xA88(0x1)
	char pad_2697[87];  // 0xA89(0x57)

	void OnRep_VehicleAttachments(); // Function ConZ.VehicleBase.OnRep_VehicleAttachments
	void OnRep_ServiceComponent(); // Function ConZ.VehicleBase.OnRep_ServiceComponent
	void OnRep_ServerEntitySetupAndId(); // Function ConZ.VehicleBase.OnRep_ServerEntitySetupAndId
	void OnRep_LightsCategoryStates(); // Function ConZ.VehicleBase.OnRep_LightsCategoryStates
	void OnRep_ItemContainer(); // Function ConZ.VehicleBase.OnRep_ItemContainer
}; 



// Class ConZ.CCSkillSliderWidget
// Size: 0x308(Inherited: 0x260) 
struct UCCSkillSliderWidget : public UUserWidget
{
	struct FMulticastInlineDelegate OnSliderChanged;  // 0x260(0x10)
	struct FMulticastInlineDelegate OnSliderSelected;  // 0x270(0x10)
	struct FMulticastInlineDelegate OnSliderDeselected;  // 0x280(0x10)
	struct UTextBlock* _skillName;  // 0x290(0x8)
	struct UCCNonSelectableTextWidget* _nonSelectableText;  // 0x298(0x8)
	struct UTrashSliderWidget* _slider;  // 0x2A0(0x8)
	char pad_680_1 : 7;  // 0x2A8(0x1)
	bool _enabled : 1;  // 0x2A8(0x1)
	char pad_681[7];  // 0x2A9(0x7)
	struct FSkillTemplate _skillTemplate;  // 0x2B0(0x38)
	struct FLinearColor _enabledColor;  // 0x2E8(0x10)
	struct FLinearColor _disabledColor;  // 0x2F8(0x10)

	void HandleValueChanged(float Value); // Function ConZ.CCSkillSliderWidget.HandleValueChanged
}; 



// Class ConZ.AIStatics
// Size: 0x28(Inherited: 0x28) 
struct UAIStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.DropZoneKey
// Size: 0x920(Inherited: 0x910) 
struct ADropZoneKey : public AItem
{
	struct USphereComponent* SphereComponent;  // 0x910(0x8)
	struct ADropZoneGameEvent* _gameEvent;  // 0x918(0x8)

	void SphereOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function ConZ.DropZoneKey.SphereOverlap
	void SetGameEvent(struct ADropZoneGameEvent* gameEvent); // Function ConZ.DropZoneKey.SetGameEvent
	struct ADropZoneGameEvent* GetGameEvent(); // Function ConZ.DropZoneKey.GetGameEvent
}; 



// Class ConZ.Vehicle
// Size: 0x28(Inherited: 0x28) 
struct UVehicle : public UMountable
{

	bool VehicleHasFuel(); // Function ConZ.Vehicle.VehicleHasFuel
	bool VehicleHasEngine(); // Function ConZ.Vehicle.VehicleHasEngine
	bool VehicleHasBattery(); // Function ConZ.Vehicle.VehicleHasBattery
	void UpdateNavigationMeshes(); // Function ConZ.Vehicle.UpdateNavigationMeshes
	void StopVehicleEngine(); // Function ConZ.Vehicle.StopVehicleEngine
	void StartVehicleEngine(); // Function ConZ.Vehicle.StartVehicleEngine
	bool ShouldShowVehicleHud(); // Function ConZ.Vehicle.ShouldShowVehicleHud
	bool ShouldShowAviationHud(); // Function ConZ.Vehicle.ShouldShowAviationHud
	void SetVehicleWheelTireDeflated(int32_t WheelIndex, bool isDeflated); // Function ConZ.Vehicle.SetVehicleWheelTireDeflated
	void SetVehicleThrottleAmount(float Value); // Function ConZ.Vehicle.SetVehicleThrottleAmount
	void SetVehicleSteerAmount(float Value); // Function ConZ.Vehicle.SetVehicleSteerAmount
	void SetVehicleLightsActive(bool Value); // Function ConZ.Vehicle.SetVehicleLightsActive
	void SetVehicleHornActive(bool Value); // Function ConZ.Vehicle.SetVehicleHornActive
	void SetVehicleHealth(float Value); // Function ConZ.Vehicle.SetVehicleHealth
	void SetVehicleHandbrakeAmount(float Value); // Function ConZ.Vehicle.SetVehicleHandbrakeAmount
	void SetVehicleGearUp(bool Value); // Function ConZ.Vehicle.SetVehicleGearUp
	void SetVehicleGearDown(bool Value); // Function ConZ.Vehicle.SetVehicleGearDown
	void SetVehicleFuelAmount(float Value); // Function ConZ.Vehicle.SetVehicleFuelAmount
	void SetVehicleFreeLookEnabled(bool Value); // Function ConZ.Vehicle.SetVehicleFreeLookEnabled
	void SetVehicleEngineBlockHealth(float Value); // Function ConZ.Vehicle.SetVehicleEngineBlockHealth
	void SetVehicleDoorWindowCollisionAttached(int32_t doorIndex, bool Value); // Function ConZ.Vehicle.SetVehicleDoorWindowCollisionAttached
	void SetVehicleDoorCollisionAttached(int32_t doorIndex, bool Value); // Function ConZ.Vehicle.SetVehicleDoorCollisionAttached
	void SetVehicleBrakeAmount(float Value); // Function ConZ.Vehicle.SetVehicleBrakeAmount
	void SetVehicleBatteryAmount(float Value); // Function ConZ.Vehicle.SetVehicleBatteryAmount
	void SetCurrentVehicleGear(int32_t Value); // Function ConZ.Vehicle.SetCurrentVehicleGear
	struct FDbIntegerId SaveState(struct FDbIntegerId ID); // Function ConZ.Vehicle.SaveState
	void ResetVehicle(); // Function ConZ.Vehicle.ResetVehicle
	bool RepairVehicle(float healthToRepair); // Function ConZ.Vehicle.RepairVehicle
	void LoadState(struct FDbIntegerId ID); // Function ConZ.Vehicle.LoadState
	bool IsVehicleWheelTireDeflated(int32_t WheelIndex); // Function ConZ.Vehicle.IsVehicleWheelTireDeflated
	bool IsVehicleUpright(); // Function ConZ.Vehicle.IsVehicleUpright
	bool IsVehicleInteriorExposed(); // Function ConZ.Vehicle.IsVehicleInteriorExposed
	bool IsVehicleInAir(); // Function ConZ.Vehicle.IsVehicleInAir
	bool IsVehicleHornActive(); // Function ConZ.Vehicle.IsVehicleHornActive
	bool IsVehicleFreeLookEnabled(); // Function ConZ.Vehicle.IsVehicleFreeLookEnabled
	bool IsVehicleDoorWindowCollisionAttached(int32_t doorIndex); // Function ConZ.Vehicle.IsVehicleDoorWindowCollisionAttached
	bool IsVehicleDoorCollisionAttached(int32_t doorIndex); // Function ConZ.Vehicle.IsVehicleDoorCollisionAttached
	bool IsRadioTurnedOn(); // Function ConZ.Vehicle.IsRadioTurnedOn
	float GetVehicleWheelsSteerAmount(); // Function ConZ.Vehicle.GetVehicleWheelsSteerAmount
	struct FVector GetVehicleVelocity(); // Function ConZ.Vehicle.GetVehicleVelocity
	float GetVehicleThrottleAmount(); // Function ConZ.Vehicle.GetVehicleThrottleAmount
	float GetVehicleSteerAmount(); // Function ConZ.Vehicle.GetVehicleSteerAmount
	float GetVehicleHealthRatio(); // Function ConZ.Vehicle.GetVehicleHealthRatio
	struct FText GetVehicleHealthBarCaption(); // Function ConZ.Vehicle.GetVehicleHealthBarCaption
	float GetVehicleHealth(); // Function ConZ.Vehicle.GetVehicleHealth
	float GetVehicleHandbrakeAmount(); // Function ConZ.Vehicle.GetVehicleHandbrakeAmount
	UGameResourceType* GetVehicleFuelResourceType(); // Function ConZ.Vehicle.GetVehicleFuelResourceType
	float GetVehicleFuelAmountRatio(); // Function ConZ.Vehicle.GetVehicleFuelAmountRatio
	float GetVehicleFuelAmount(); // Function ConZ.Vehicle.GetVehicleFuelAmount
	uint8_t  GetVehicleEngineState(); // Function ConZ.Vehicle.GetVehicleEngineState
	float GetVehicleEngineRpm(); // Function ConZ.Vehicle.GetVehicleEngineRpm
	float GetVehicleEngineBlockHealth(); // Function ConZ.Vehicle.GetVehicleEngineBlockHealth
	float GetVehicleBrakeAmount(); // Function ConZ.Vehicle.GetVehicleBrakeAmount
	UGameResourceType* GetVehicleBatteryResourceType(); // Function ConZ.Vehicle.GetVehicleBatteryResourceType
	float GetVehicleBatteryAmountRatio(); // Function ConZ.Vehicle.GetVehicleBatteryAmountRatio
	float GetVehicleBatteryAmount(); // Function ConZ.Vehicle.GetVehicleBatteryAmount
	struct UAnimInstance* GetVehicleAnimInstance(); // Function ConZ.Vehicle.GetVehicleAnimInstance
	int32_t GetNumVehicleReverseGears(); // Function ConZ.Vehicle.GetNumVehicleReverseGears
	int32_t GetNumVehicleForwardGears(); // Function ConZ.Vehicle.GetNumVehicleForwardGears
	int32_t GetNumVehicleDoorWindows(); // Function ConZ.Vehicle.GetNumVehicleDoorWindows
	int32_t GetNumVehicleDoors(); // Function ConZ.Vehicle.GetNumVehicleDoors
	int32_t GetNumMountees(); // Function ConZ.Vehicle.GetNumMountees
	UUserWidget* GetMountSlotIndicatorsWidget(); // Function ConZ.Vehicle.GetMountSlotIndicatorsWidget
	float GetMaxVehicleHealth(); // Function ConZ.Vehicle.GetMaxVehicleHealth
	float GetMaxVehicleFuelAmount(); // Function ConZ.Vehicle.GetMaxVehicleFuelAmount
	float GetMaxVehicleEngineBlockHealth(); // Function ConZ.Vehicle.GetMaxVehicleEngineBlockHealth
	float GetMaxVehicleBatteryAmount(); // Function ConZ.Vehicle.GetMaxVehicleBatteryAmount
	float GetMass(); // Function ConZ.Vehicle.GetMass
	struct AVehicleItemContainer* GetItemContainer(); // Function ConZ.Vehicle.GetItemContainer
	int32_t GetCurrentVehicleGear(); // Function ConZ.Vehicle.GetCurrentVehicleGear
	bool AreVehicleLightsActive(); // Function ConZ.Vehicle.AreVehicleLightsActive
	void ApplyImpactDamage(float Damage, struct FHitResult& HitResult, struct AActor* OtherActor); // Function ConZ.Vehicle.ApplyImpactDamage
}; 



// Class ConZ.WeaponAction
// Size: 0x28(Inherited: 0x28) 
struct UWeaponAction : public UObject
{

	void RemoveCartridgeFromWeapon(); // Function ConZ.WeaponAction.RemoveCartridgeFromWeapon
	void RemoveAttachmentFromWeapon(struct AWeapon* Weapon, struct AWeaponAttachment* Attachment); // Function ConZ.WeaponAction.RemoveAttachmentFromWeapon
	void OnWeaponActionAnimNotify(uint8_t  notifyType); // Function ConZ.WeaponAction.OnWeaponActionAnimNotify
	void OnActionAnimNotify(uint8_t  notifyType); // Function ConZ.WeaponAction.OnActionAnimNotify
	bool IsCharacterOwnerMountedAsDriver(); // Function ConZ.WeaponAction.IsCharacterOwnerMountedAsDriver
	void InsertCartridgeIntoWeaponAtLocation(struct AWeapon* Weapon, struct AAmmunitionItem* ammo, bool backLocation); // Function ConZ.WeaponAction.InsertCartridgeIntoWeaponAtLocation
	void InsertCartridgeIntoWeapon(struct AWeapon* Weapon, struct AAmmunitionItem* ammo); // Function ConZ.WeaponAction.InsertCartridgeIntoWeapon
	void InsertCartridgeIntoMagazine(struct AWeaponAttachmentMagazine* magazine, struct AAmmunitionItem* ammo); // Function ConZ.WeaponAction.InsertCartridgeIntoMagazine
	struct AWeapon* GetWeapon(); // Function ConZ.WeaponAction.GetWeapon
	void AddAttachmentToWeapon(struct AWeapon* Weapon, struct AWeaponAttachment* Attachment); // Function ConZ.WeaponAction.AddAttachmentToWeapon
}; 



// Class ConZ.RemoveCartridge
// Size: 0x58(Inherited: 0x50) 
struct URemoveCartridge : public UWeaponActionUnloadAmmoSequence
{
	struct FName MontageEndSectionName;  // 0x50(0x8)

}; 



// Class ConZ.VehicleMountSlotsWidget
// Size: 0x270(Inherited: 0x260) 
struct UVehicleMountSlotsWidget : public UUserWidget
{
	struct UCanvasPanel* _mountSlotsCanvas;  // 0x260(0x8)
	char pad_616[8];  // 0x268(0x8)

}; 



// Class ConZ.PrisonerActionSearchObject
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionSearchObject : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.Biome
// Size: 0x270(Inherited: 0x220) 
struct ABiome : public AActor
{
	struct USceneComponent* _root;  // 0x220(0x8)
	struct UStaticMeshComponent* _visualizationSphere;  // 0x228(0x8)
	float _radius;  // 0x230(0x4)
	char pad_564[4];  // 0x234(0x4)
	struct FHuntingBiomeParameters _parameters;  // 0x238(0x38)

}; 



// Class ConZ.AkComponentClientOnly
// Size: 0x3E0(Inherited: 0x3E0) 
struct UAkComponentClientOnly : public UAkComponent
{

}; 



// Class ConZ.ArchitecturalCategory
// Size: 0x58(Inherited: 0x30) 
struct UArchitecturalCategory : public UDataAsset
{
	struct FText CategoryName;  // 0x30(0x18)
	struct TArray<struct UBaseBuildingBlockCraftableItem*> BaseBuildingModules;  // 0x48(0x10)

}; 



// Class ConZ.BasicNotificationDescription
// Size: 0x78(Inherited: 0x40) 
struct UBasicNotificationDescription : public UNotificationDescription
{
	struct FText Message;  // 0x40(0x18)
	int32_t FontSize;  // 0x58(0x4)
	char pad_92[4];  // 0x5C(0x4)
	struct UTexture2D* Icon;  // 0x60(0x8)
	int32_t IconSize;  // 0x68(0x4)
	float Duration;  // 0x6C(0x4)
	char pad_112_1 : 7;  // 0x70(0x1)
	bool ping : 1;  // 0x70(0x1)
	char pad_113[7];  // 0x71(0x7)

}; 



// Class ConZ.ConZWorldSettings
// Size: 0x558(Inherited: 0x380) 
struct AConZWorldSettings : public AWorldSettings
{
	char pad_896[8];  // 0x380(0x8)
	struct AWeatherController2* WeatherController2;  // 0x388(0x8)
	struct AWetnessManager* WetnessManager;  // 0x390(0x8)
	struct AGameEventManager* GameEventManager;  // 0x398(0x8)
	struct AWorldEventManager* WorldEventManager;  // 0x3A0(0x8)
	struct ABuildingManager* BuildingManager;  // 0x3A8(0x8)
	struct AItemContainerManager* ItemContainerManager;  // 0x3B0(0x8)
	struct AConZEconomyManager* EconomyManager;  // 0x3B8(0x8)
	struct AGardenManager* FarmingGardenManager;  // 0x3C0(0x8)
	struct ARadiationManager* RadiationManager;  // 0x3C8(0x8)
	struct AHuntingManager* HuntingManager;  // 0x3D0(0x8)
	struct ACookingManager* CookingManager;  // 0x3D8(0x8)
	struct AMugshotRoom* MugshotRoom;  // 0x3E0(0x8)
	struct TArray<struct ARadioStation*> RadioStations;  // 0x3E8(0x10)
	struct UAkAudioEvent* RadioNoiseStartEvent;  // 0x3F8(0x8)
	struct UAkAudioEvent* RadioNoiseStopEvent;  // 0x400(0x8)
	struct UAkAudioEvent* RadioStopEvent;  // 0x408(0x8)
	struct UAkAudioEvent* RadioStationChangeNoiseEvent;  // 0x410(0x8)
	struct UEntitySystemSettings* EntitySystemSettings;  // 0x418(0x8)
	struct FItemSpawningSettings ItemSpawningSettings;  // 0x420(0x44)
	char pad_1124[4];  // 0x464(0x4)
	struct AVolume* IslandBoundsVolume;  // 0x468(0x8)
	char pad_1136_1 : 7;  // 0x470(0x1)
	bool UseVirtualizationSystem : 1;  // 0x470(0x1)
	char pad_1137[3];  // 0x471(0x3)
	struct FBox2D WorldBounds;  // 0x474(0x14)
	struct FGameplayTag HeightMapGameplayTag;  // 0x488(0x8)
	struct FGameplayTag MapPropertiesGameplayTag;  // 0x490(0x8)
	struct FGameplayTag GerstnerWaveOcclusionPropertiesGameplayTag;  // 0x498(0x8)
	struct FGameplayTag OceanOpacityGameplayTag;  // 0x4A0(0x8)
	struct TArray<struct FConZPrisonerSpawnEquipmentProperties> PrisonerSpawnEquipment;  // 0x4A8(0x10)
	char pad_1208_1 : 7;  // 0x4B8(0x1)
	bool SpawnInAir : 1;  // 0x4B8(0x1)
	char pad_1209[3];  // 0x4B9(0x3)
	float FirstSpawnAltitude;  // 0x4BC(0x4)
	float RespawnAltitude;  // 0x4C0(0x4)
	struct FFloatInterval MapMinMaxElevation;  // 0x4C4(0x8)
	char pad_1228[4];  // 0x4CC(0x4)
	struct UAvailabilityGrid* AvailabilityGrid;  // 0x4D0(0x8)
	char pad_1240[104];  // 0x4D8(0x68)
	UAvailabilityGrid* _availabilityGridClass;  // 0x540(0x8)
	struct TArray<struct FVehicleSpawnPointData> _vehicleSpawnPoints;  // 0x548(0x10)

}; 



// Class ConZ.Item
// Size: 0x910(Inherited: 0x220) 
struct AItem : public AActor
{
	char pad_544[160];  // 0x220(0xA0)
	struct FMulticastInlineDelegate DebugTextChanged;  // 0x2C0(0x10)
	struct FMulticastInlineDelegate PickedUpState;  // 0x2D0(0x10)
	struct FMulticastInlineDelegate OnStaticMeshChanged;  // 0x2E0(0x10)
	struct FMulticastInlineDelegate OnSkeletalMeshChanged;  // 0x2F0(0x10)
	char pad_768[16];  // 0x300(0x10)
	struct UStaticMeshComponent* Mesh;  // 0x310(0x8)
	char pad_792[272];  // 0x318(0x110)
	struct UThrowingComponent* ThrowingComponent;  // 0x428(0x8)
	struct FText _caption;  // 0x430(0x18)
	struct FText _description;  // 0x448(0x18)
	int32_t _uses;  // 0x460(0x4)
	float _health;  // 0x464(0x4)
	float _maxHealth;  // 0x468(0x4)
	float _maxHealthPercentageAfterReachingBadQuality;  // 0x46C(0x4)
	float _weight;  // 0x470(0x4)
	float _initialWeightUsed;  // 0x474(0x4)
	float _maxWaterWeightAsRatioOfWeight;  // 0x478(0x4)
	float _radiationDecreaseRate;  // 0x47C(0x4)
	float _maxRadiationAmountPerWeight;  // 0x480(0x4)
	float _baseRadiationPropagationFactor;  // 0x484(0x4)
	char pad_1160_1 : 7;  // 0x488(0x1)
	bool _canEverDecontaminate : 1;  // 0x488(0x1)
	char pad_1161[7];  // 0x489(0x7)
	struct UChoppingRecipeDataAsset* _choppingRecipeDataAsset;  // 0x490(0x8)
	char pad_1176_1 : 7;  // 0x498(0x1)
	bool _shouldBeMaintained : 1;  // 0x498(0x1)
	char pad_1177_1 : 7;  // 0x499(0x1)
	bool _canBeDropped : 1;  // 0x499(0x1)
	char pad_1178_1 : 7;  // 0x49A(0x1)
	bool _canTakeInHands : 1;  // 0x49A(0x1)
	char pad_1179_1 : 7;  // 0x49B(0x1)
	bool _canBeVisibleInVicinity : 1;  // 0x49B(0x1)
	char pad_1180_1 : 7;  // 0x49C(0x1)
	bool _canPlaceItemsOn : 1;  // 0x49C(0x1)
	char pad_1181_1 : 7;  // 0x49D(0x1)
	bool _canPlaceBlueprintsOn : 1;  // 0x49D(0x1)
	char pad_1182[2];  // 0x49E(0x2)
	struct USkeletalMesh* _overrideSkeletalMesh;  // 0x4A0(0x8)
	char pad_1192[8];  // 0x4A8(0x8)
	struct FTransform _overrideSkeletalMeshRelativeTransform;  // 0x4B0(0x30)
	uint8_t  _ifExhausted;  // 0x4E0(0x1)
	char pad_1249[3];  // 0x4E1(0x3)
	float _resourceAmountUsedPerWash;  // 0x4E4(0x4)
	struct UTexture2D* _inventoryIcon;  // 0x4E8(0x8)
	struct UTexture2D* _inventoryIconInHands;  // 0x4F0(0x8)
	struct UTexture2D* _outsideInventoryIcon;  // 0x4F8(0x8)
	uint32_t _sizeX;  // 0x500(0x4)
	uint32_t _sizeY;  // 0x504(0x4)
	struct TArray<struct UBaseItemTag*> _inventoryWhiteList;  // 0x508(0x10)
	struct TArray<struct UBaseItemTag*> _inventoryBlackList;  // 0x518(0x10)
	float _maxContainedWeight;  // 0x528(0x4)
	char pad_1324_1 : 7;  // 0x52C(0x1)
	bool _canContainNonEmptyItems : 1;  // 0x52C(0x1)
	char pad_1325_1 : 7;  // 0x52D(0x1)
	bool _canBeContainedIfNonEmpty : 1;  // 0x52D(0x1)
	char pad_1326_1 : 7;  // 0x52E(0x1)
	bool _isIgnoredBySpawners : 1;  // 0x52E(0x1)
	char pad_1327[1];  // 0x52F(0x1)
	struct FFloatInterval _spawnTimeoutPerPlayer;  // 0x530(0x8)
	struct FItemLocation _itemLocation;  // 0x538(0xF)
	uint8_t  _rarity;  // 0x547(0x1)
	struct FGameplayTagContainer _itemSpawnTypes;  // 0x548(0x20)
	struct FGameplayTag _itemSpawnGroup;  // 0x568(0x8)
	struct FVector _spawnLocationOffset;  // 0x570(0xC)
	struct FRotator _spawnRotationOffset;  // 0x57C(0xC)
	float _spawnRotationRandomization;  // 0x588(0x4)
	float _placementCollisionUpOffset;  // 0x58C(0x4)
	char pad_1424_1 : 7;  // 0x590(0x1)
	bool _shouldOverrideUsageWhenSpawnedBySpawners : 1;  // 0x590(0x1)
	char pad_1425[3];  // 0x591(0x3)
	float _initialUsageWhenSpawnedBySpawners;  // 0x594(0x4)
	float _randomizeUsageWhenSpawnedBySpawners;  // 0x598(0x4)
	char pad_1436[4];  // 0x59C(0x4)
	struct TArray<struct UBaseItemTag*> _itemTags;  // 0x5A0(0x10)
	struct TArray<struct UBaseItemTag*> _ownedItemTags;  // 0x5B0(0x10)
	uint8_t  _noiseLevel;  // 0x5C0(0x1)
	char pad_1473[7];  // 0x5C1(0x7)
	struct FItemMotionNoise _motionNoise;  // 0x5C8(0x8)
	struct UAkAudioEvent* _inventoryHandlingSound;  // 0x5D0(0x8)
	struct UAkAudioEvent* _destroyedSound;  // 0x5D8(0x8)
	struct TArray<UCraftingIngredientType*> _craftingIngredientTypes;  // 0x5E0(0x10)
	uint8_t  _craftingInteraction;  // 0x5F0(0x1)
	char pad_1521[7];  // 0x5F1(0x7)
	struct TArray<struct FCraftingPart> _defaultCraftingParts;  // 0x5F8(0x10)
	float _damageOnUse;  // 0x608(0x4)
	float _damageOverTime;  // 0x60C(0x4)
	float _autoDestructTime;  // 0x610(0x4)
	char pad_1556_1 : 7;  // 0x614(0x1)
	bool _allowContainedItemsDecay : 1;  // 0x614(0x1)
	char pad_1557[7];  // 0x615(0x7)
	char pad_1564_1 : 7;  // 0x61C(0x1)
	bool _shouldDestroyContainedItemsOnDestroyEvent : 1;  // 0x61C(0x1)
	char pad_1565[3];  // 0x61D(0x3)
	float _minTemperatureForHeatDamage;  // 0x620(0x4)
	float _containedDamageStartPercentage;  // 0x624(0x4)
	float _damageResponseFactor;  // 0x628(0x4)
	char pad_1580[4];  // 0x62C(0x4)
	UAttachmentSocketMountType* _attachmentSocketMountType;  // 0x630(0x8)
	struct TArray<struct FAttachmentSocket> _attachmentSockets;  // 0x638(0x10)
	UAttachmentSocketMountType* _holsterAttachmentSocketMountType;  // 0x648(0x8)
	struct TMap<UAttachmentSocketMountType*, struct FAttachmentSocketOffset> _attachmentSocketsOffset;  // 0x650(0x50)
	char pad_1696_1 : 7;  // 0x6A0(0x1)
	bool _enableGlowOnBeginPlay : 1;  // 0x6A0(0x1)
	char pad_1697_1 : 7;  // 0x6A1(0x1)
	bool _enableAwarenessGlow : 1;  // 0x6A1(0x1)
	char pad_1698_1 : 7;  // 0x6A2(0x1)
	bool _enableHoverGlow : 1;  // 0x6A2(0x1)
	char pad_1699[5];  // 0x6A3(0x5)
	struct UStaticMesh* _placementMeshOverride;  // 0x6A8(0x8)
	struct UStaticMesh* _staticMeshHolsterOverride;  // 0x6B0(0x8)
	struct USkeletalMesh* _skeletalMeshHolsterOverride;  // 0x6B8(0x8)
	char pad_1728_1 : 7;  // 0x6C0(0x1)
	bool _hasHighLoadPriorityInVirtualization : 1;  // 0x6C0(0x1)
	char pad_1729[3];  // 0x6C1(0x3)
	float _virtualizationDistanceOffset;  // 0x6C4(0x4)
	char pad_1736_1 : 7;  // 0x6C8(0x1)
	bool _canEverBeVirtualized : 1;  // 0x6C8(0x1)
	char pad_1737[1];  // 0x6C9(0x1)
	char pad_1738_1 : 7;  // 0x6CA(0x1)
	bool _isSubjectToAllowMinesConfig : 1;  // 0x6CA(0x1)
	char pad_1739[1];  // 0x6CB(0x1)
	float _resultHealthMultiplierWhenCraftingIngredient;  // 0x6CC(0x4)
	float _preferredDamagePerUpdate;  // 0x6D0(0x4)
	char pad_1748_1 : 7;  // 0x6D4(0x1)
	bool _useHandCorrections : 1;  // 0x6D4(0x1)
	char pad_1749[3];  // 0x6D5(0x3)
	float _vicinityCheckDistance;  // 0x6D8(0x4)
	float _reachabilityTestZOffset;  // 0x6DC(0x4)
	struct TArray<UObject*> _stackableClasses;  // 0x6E0(0x10)
	int32_t _maxNumOfStacks;  // 0x6F0(0x4)
	float _bloodDryingSpeed;  // 0x6F4(0x4)
	struct FItemStackData _stackData;  // 0x6F8(0x10)
	char pad_1800[8];  // 0x708(0x8)
	struct TArray<struct UItemStateBase*> _craftingPartsData;  // 0x710(0x10)
	char pad_1824[8];  // 0x720(0x8)
	struct USkeletalMeshComponent* _skeletalMeshComponent;  // 0x728(0x8)
	char pad_1840[4];  // 0x730(0x4)
	float _weightUsed;  // 0x734(0x4)
	char pad_1848[24];  // 0x738(0x18)
	struct FPackedEntitySetupAndId _repServerEntitySetupAndId;  // 0x750(0x8)
	struct TArray<struct UItemComponent*> _itemComponents;  // 0x758(0x10)
	struct AActor* _attachParentObject;  // 0x768(0x8)
	struct FVisibilityReplication _visibilityReplication;  // 0x770(0x8)
	char pad_1912[60];  // 0x778(0x3C)
	float _radiationAmount;  // 0x7B4(0x4)
	float _uncraftTime;  // 0x7B8(0x4)
	char pad_1980[4];  // 0x7BC(0x4)
	uint64_t _replicatedState;  // 0x7C0(0x8)
	char pad_1992[1];  // 0x7C8(0x1)
	char _flagsReplicated;  // 0x7C9(0x1)
	char pad_1994[38];  // 0x7CA(0x26)
	struct USceneComponent* _tempSceneComponent;  // 0x7F0(0x8)
	char pad_2040[8];  // 0x7F8(0x8)
	int64_t _expirationTime;  // 0x800(0x8)
	struct TArray<struct FInventoryStackData> _stacks;  // 0x808(0x10)
	struct AItem* _stackExhaustedSuccessorItem;  // 0x818(0x8)
	struct TScriptInterface<IInventoryContainer> _parentContainer;  // 0x820(0x10)
	struct TScriptInterface<IInventoryNode> _parentInventoryNode;  // 0x830(0x10)
	char pad_2112[128];  // 0x840(0x80)
	struct TArray<struct FCraftingPart> _craftingParts;  // 0x8C0(0x10)
	char pad_2256[64];  // 0x8D0(0x40)

	bool Use(struct APrisoner* Prisoner, int32_t Usage, float usageWeight, bool Eat, float DamageMultiplier); // Function ConZ.Item.Use
	void UpdateVisuals(bool shouldHandleAging); // Function ConZ.Item.UpdateVisuals
	void UpdateMaterialsPaniniAmount(); // Function ConZ.Item.UpdateMaterialsPaniniAmount
	void StopBlinking(); // Function ConZ.Item.StopBlinking
	void StaticMeshChangedDelegate__DelegateSignature(struct AItem* Item); // DelegateFunction ConZ.Item.StaticMeshChangedDelegate__DelegateSignature
	void StateChangedDelegate__DelegateSignature(struct AItem* Item); // DelegateFunction ConZ.Item.StateChangedDelegate__DelegateSignature
	void SkeletalMeshChangedDelegate__DelegateSignature(struct AItem* Item); // DelegateFunction ConZ.Item.SkeletalMeshChangedDelegate__DelegateSignature
	void SetWeight(float Value); // Function ConZ.Item.SetWeight
	void SetOutsideInventoryIcon(struct UTexture2D* Value); // Function ConZ.Item.SetOutsideInventoryIcon
	void SetMaxHealth(float MaxHealth); // Function ConZ.Item.SetMaxHealth
	void SetInventoryIconInHands(struct UTexture2D* Value); // Function ConZ.Item.SetInventoryIconInHands
	void SetInventoryIcon(struct UTexture2D* Value); // Function ConZ.Item.SetInventoryIcon
	void SetHealthAndUsage(float health, int32_t Usage); // Function ConZ.Item.SetHealthAndUsage
	void SetHealth(float health); // Function ConZ.Item.SetHealth
	void SetCaption(struct FText& Value); // Function ConZ.Item.SetCaption
	void Server_Throw(struct FVector ZeroBasedStartPosition, struct FRotator StartRotation, struct FVector StartVelocity); // Function ConZ.Item.Server_Throw
	void Repair(float healthToRepair); // Function ConZ.Item.Repair
	struct TScriptInterface<IInventoryNode> RemoveStacks(int32_t stacksToSplit); // Function ConZ.Item.RemoveStacks
	void PickedUpStateDelegate__DelegateSignature(struct AItem* Item, bool pickedUp); // DelegateFunction ConZ.Item.PickedUpStateDelegate__DelegateSignature
	void OnRightClicked(); // Function ConZ.Item.OnRightClicked
	void OnRep_WeightUsed(); // Function ConZ.Item.OnRep_WeightUsed
	void OnRep_Visibility(); // Function ConZ.Item.OnRep_Visibility
	void OnRep_Stacks(); // Function ConZ.Item.OnRep_Stacks
	void OnRep_StackData(); // Function ConZ.Item.OnRep_StackData
	void OnRep_ServerEntitySetupAndId(); // Function ConZ.Item.OnRep_ServerEntitySetupAndId
	void OnRep_ReplicatedState(); // Function ConZ.Item.OnRep_ReplicatedState
	void OnRep_Health(); // Function ConZ.Item.OnRep_Health
	void OnRep_FlagsReplicated(); // Function ConZ.Item.OnRep_FlagsReplicated
	void OnProjectileStop(struct FHitResult& ImpactResult); // Function ConZ.Item.OnProjectileStop
	void OnDetachedFromItem(struct AItem* Item); // Function ConZ.Item.OnDetachedFromItem
	void OnDestroyedEvent(struct AActor* Self); // Function ConZ.Item.OnDestroyedEvent
	void OnContainedItemDestroyed(struct AActor* containedItem); // Function ConZ.Item.OnContainedItemDestroyed
	void OnAttachedToItem(struct AItem* Item); // Function ConZ.Item.OnAttachedToItem
	void NetMulticast_SpawnDestroyedEffects(); // Function ConZ.Item.NetMulticast_SpawnDestroyedEffects
	void NetMulticast_SetActorDropLocationAndRotation(struct FVector Location, struct FRotator Rotation); // Function ConZ.Item.NetMulticast_SetActorDropLocationAndRotation
	void NetMulticast_EnsureSpawned(); // Function ConZ.Item.NetMulticast_EnsureSpawned
	void Multicast_Throw(struct FVector ZeroBasedStartPosition, struct FRotator StartRotation, struct FVector StartVelocity); // Function ConZ.Item.Multicast_Throw
	bool HasPriorityForContainerItem(struct AItem* containerItem); // Function ConZ.Item.HasPriorityForContainerItem
	struct FWidgetDisplayInfo GetWidgetDisplayInfo(); // Function ConZ.Item.GetWidgetDisplayInfo
	float GetWetness(); // Function ConZ.Item.GetWetness
	float GetWeightUsed(); // Function ConZ.Item.GetWeightUsed
	float GetWeightRemained(); // Function ConZ.Item.GetWeightRemained
	float GetWeightPerUse(); // Function ConZ.Item.GetWeightPerUse
	float GetWeight(); // Function ConZ.Item.GetWeight
	float GetWaterWeight(); // Function ConZ.Item.GetWaterWeight
	int32_t GetUsedSlots(); // Function ConZ.Item.GetUsedSlots
	float GetUsedMass(); // Function ConZ.Item.GetUsedMass
	struct TArray<UCraftingIngredientType*> GetTypes(); // Function ConZ.Item.GetTypes
	float GetTotalWeight(); // Function ConZ.Item.GetTotalWeight
	int32_t GetTotalUses(); // Function ConZ.Item.GetTotalUses
	struct FVector GetSupportingHandIKLocation(); // Function ConZ.Item.GetSupportingHandIKLocation
	int32_t GetStacksCount(); // Function ConZ.Item.GetStacksCount
	int32_t GetSizeY(); // Function ConZ.Item.GetSizeY
	int32_t GetSizeX(); // Function ConZ.Item.GetSizeX
	uint8_t  GetPrisonerAnimationSet(); // Function ConZ.Item.GetPrisonerAnimationSet
	struct UTexture2D* GetOutsideInventoryIcon(); // Function ConZ.Item.GetOutsideInventoryIcon
	void GetObstructionTestCapsules(struct TArray<struct FItemObstructionTestCapsule>& capsules); // Function ConZ.Item.GetObstructionTestCapsules
	float GetNormalizedMaxHealth(); // Function ConZ.Item.GetNormalizedMaxHealth
	float GetNormalizedHealth(); // Function ConZ.Item.GetNormalizedHealth
	float GetNoiseLoudnessWhenPickedUp(); // Function ConZ.Item.GetNoiseLoudnessWhenPickedUp
	float GetNoiseLoudnessWhenDropped(); // Function ConZ.Item.GetNoiseLoudnessWhenDropped
	float GetNoiseLoudnessOnGroundImpact(); // Function ConZ.Item.GetNoiseLoudnessOnGroundImpact
	struct UMeshComponent* GetMeshComponentForAttachmentToItem(struct AItem* Item); // Function ConZ.Item.GetMeshComponentForAttachmentToItem
	struct UMeshComponent* GetMeshComponent(); // Function ConZ.Item.GetMeshComponent
	float GetMaxHealth(); // Function ConZ.Item.GetMaxHealth
	struct UTexture2D* GetInventoryIconInHands(); // Function ConZ.Item.GetInventoryIconInHands
	struct UTexture2D* GetInventoryIcon(); // Function ConZ.Item.GetInventoryIcon
	int32_t GetInventoryGridSizeY(); // Function ConZ.Item.GetInventoryGridSizeY
	int32_t GetInventoryGridSizeX(); // Function ConZ.Item.GetInventoryGridSizeX
	bool GetIgnoreSupportingHandIK(); // Function ConZ.Item.GetIgnoreSupportingHandIK
	float GetHealth(); // Function ConZ.Item.GetHealth
	struct FText GetDescription(); // Function ConZ.Item.GetDescription
	float GetDefaultMaxHealth(); // Function ConZ.Item.GetDefaultMaxHealth
	float GetContainerDamagePercentage(); // Function ConZ.Item.GetContainerDamagePercentage
	struct FText GetCaption(); // Function ConZ.Item.GetCaption
	struct TArray<struct AItem*> GetAllContainedItems(bool recursive); // Function ConZ.Item.GetAllContainedItems
	struct FCharacterAndItemAnimation FindCharacterAndItemAnimation(struct UObject* Context, uint8_t  prisonerMontageType); // Function ConZ.Item.FindCharacterAndItemAnimation
	struct UAnimMontage* FindAnimationMontage(struct UObject* Context, uint8_t  prisonerMontageType); // Function ConZ.Item.FindAnimationMontage
	bool DropAt(struct FVector dropLocation, struct FRotator dropRotation); // Function ConZ.Item.DropAt
	bool DropAround(struct AActor* Actor, float Radius); // Function ConZ.Item.DropAround
	void Drop(bool wasThrown, bool dropDown); // Function ConZ.Item.Drop
	void DetachFromAll(); // Function ConZ.Item.DetachFromAll
	void DestroyInternal(); // Function ConZ.Item.DestroyInternal
	void DebugTextChangedDelegate__DelegateSignature(struct AItem* Item); // DelegateFunction ConZ.Item.DebugTextChangedDelegate__DelegateSignature
	bool CanStackWith(struct UObject* Item); // Function ConZ.Item.CanStackWith
	bool CanStack(); // Function ConZ.Item.CanStack
	bool CanBeMeleeWeapon(); // Function ConZ.Item.CanBeMeleeWeapon
	bool CanBeDroppedBy(struct AConZCharacter* Character); // Function ConZ.Item.CanBeDroppedBy
	bool CanBeCraftedByCharactrer(struct ACharacter* Character); // Function ConZ.Item.CanBeCraftedByCharactrer
	bool CanAutoAddItem(struct AItem* Item, char& column, char& row); // Function ConZ.Item.CanAutoAddItem
	bool CanAddItem(struct AItem* Item, char column, char row); // Function ConZ.Item.CanAddItem
	void Blink(float Duration); // Function ConZ.Item.Blink
	bool AutoAddItemToInventoryNode(struct TScriptInterface<IInventoryNode> Item); // Function ConZ.Item.AutoAddItemToInventoryNode
	bool AttachToCharacterHands(struct AConZCharacter* Character); // Function ConZ.Item.AttachToCharacterHands
	void AddStack(struct TScriptInterface<IInventoryNode> Item); // Function ConZ.Item.AddStack
}; 



// Class ConZ.ModularTooltipElementData_Value
// Size: 0x60(Inherited: 0x28) 
struct UModularTooltipElementData_Value : public UModularTooltipElementData
{
	char pad_40[56];  // 0x28(0x38)

}; 



// Class ConZ.VicinityContainer3
// Size: 0x2A8(Inherited: 0x260) 
struct UVicinityContainer3 : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct UItemInventoryWidget2* _container;  // 0x290(0x8)
	struct UScrollBox* _containerScrollBox;  // 0x298(0x8)
	char pad_672[8];  // 0x2A0(0x8)

	void OnContainerScrollBoxScrolled(float CurrentOffset); // Function ConZ.VicinityContainer3.OnContainerScrollBoxScrolled
}; 



// Class ConZ.DepotItemState
// Size: 0x120(Inherited: 0x100) 
struct UDepotItemState : public UItemState
{
	struct FDbIntegerId OwnerUserProfileId;  // 0x100(0x8)
	struct FString TraderPersistentId;  // 0x108(0x10)
	char pad_280[8];  // 0x118(0x8)

}; 



// Class ConZ.TabButtonInterface
// Size: 0x28(Inherited: 0x28) 
struct UTabButtonInterface : public UConZButton
{

}; 



// Class ConZ.InventoryContainer2DLight
// Size: 0x148(Inherited: 0x148) 
struct UInventoryContainer2DLight : public UInventoryContainer2D
{

}; 



// Class ConZ.AmmunitionArrow
// Size: 0x980(Inherited: 0x960) 
struct AAmmunitionArrow : public AAmmunitionItem
{
	char pad_2400_1 : 7;  // 0x960(0x1)
	bool DestroyOnHit : 1;  // 0x960(0x1)
	char pad_2401[7];  // 0x961(0x7)
	ABrokenArrow* BrokenArrowClass;  // 0x968(0x8)
	float _muzzleVelocityMultiplier;  // 0x970(0x4)
	float _stiffnessFactor;  // 0x974(0x4)
	float _flightRotationCorrectionSpeed;  // 0x978(0x4)
	float _elasticityFactorSpread;  // 0x97C(0x4)

}; 



// Class ConZ.CTFGameEvent
// Size: 0x688(Inherited: 0x560) 
struct ACTFGameEvent : public AGameEventBase
{
	ACTFFlag* FlagClass;  // 0x560(0x8)
	ACTFBase* CaptureBaseClass;  // 0x568(0x8)
	ACTFFlagStand* FlagStandClass;  // 0x570(0x8)
	struct UTexture2D* FlagIconTexture;  // 0x578(0x8)
	struct UTexture2D* FlagAccentTexture;  // 0x580(0x8)
	struct UTexture2D* BaseIconTexture;  // 0x588(0x8)
	struct UTexture2D* BaseAccentTexture;  // 0x590(0x8)
	struct UTexture2D* EmptyBaseIconTexture;  // 0x598(0x8)
	struct UTexture2D* EmptyBaseAccentTexture;  // 0x5A0(0x8)
	struct FLinearColor TeamColorA;  // 0x5A8(0x10)
	struct FLinearColor TeamColorB;  // 0x5B8(0x10)
	struct UAkAudioEvent* BlueTeamPickedUpFlagAnnouncement;  // 0x5C8(0x8)
	struct UAkAudioEvent* BlueTeamCapturedFlagAnnouncement;  // 0x5D0(0x8)
	struct UAkAudioEvent* BlueTeamFlagDroppedAnnouncement;  // 0x5D8(0x8)
	struct UAkAudioEvent* BlueTeamFlagReturnedAnnouncement;  // 0x5E0(0x8)
	struct UAkAudioEvent* RedTeamPickedUpFlagAnnouncement;  // 0x5E8(0x8)
	struct UAkAudioEvent* RedTeamCapturedFlagAnnouncement;  // 0x5F0(0x8)
	struct UAkAudioEvent* RedTeamFlagDroppedAnnouncement;  // 0x5F8(0x8)
	struct UAkAudioEvent* RedTeamFlagReturnedAnnouncement;  // 0x600(0x8)
	struct FCTFParameters _CTFParameters;  // 0x608(0x30)
	struct ACTFFlag* _flagA;  // 0x638(0x8)
	struct ACTFFlag* _flagB;  // 0x640(0x8)
	struct ACTFBase* _baseA;  // 0x648(0x8)
	struct ACTFBase* _baseB;  // 0x650(0x8)
	char pad_1624[48];  // 0x658(0x30)

	void SetCTFParameters(struct FCTFParameters& Params); // Function ConZ.CTFGameEvent.SetCTFParameters
	void OnParticipantDied(struct APrisoner* victim, struct FDamageEvent& DamageEvent, struct AController* eventInstigator, struct AActor* causer); // Function ConZ.CTFGameEvent.OnParticipantDied
	struct ACTFFlag* GetFlagB(); // Function ConZ.CTFGameEvent.GetFlagB
	struct ACTFFlag* GetFlagA(); // Function ConZ.CTFGameEvent.GetFlagA
	struct FCTFParameters GetCTFParameters(); // Function ConZ.CTFGameEvent.GetCTFParameters
}; 



// Class ConZ.SmokableTag
// Size: 0x30(Inherited: 0x30) 
struct USmokableTag : public UBaseItemTag
{

}; 



// Class ConZ.PrisonerActionRepairVehicle
// Size: 0x118(Inherited: 0x118) 
struct UPrisonerActionRepairVehicle : public UPrisonerActionRepair
{

}; 



// Class ConZ.ItemStateBase
// Size: 0x80(Inherited: 0x28) 
struct UItemStateBase : public UObject
{
	UObject* ItemClass;  // 0x28(0x8)
	struct FEntityId ID;  // 0x30(0x8)
	char pad_56[8];  // 0x38(0x8)
	struct FTransform Transform;  // 0x40(0x30)
	struct TArray<struct UItemComponentStateBase*> Components;  // 0x70(0x10)

}; 



// Class ConZ.ComplexAnimalAIController
// Size: 0x4E8(Inherited: 0x328) 
struct AComplexAnimalAIController : public AAIController
{
	uint8_t  Agressivness;  // 0x328(0x1)
	char pad_809[3];  // 0x329(0x3)
	float SightIntimidateRadius;  // 0x32C(0x4)
	float SightAttackRadius;  // 0x330(0x4)
	float FoeChargeVelocity;  // 0x334(0x4)
	char pad_824_1 : 7;  // 0x338(0x1)
	bool ShouldForceChargeRotation : 1;  // 0x338(0x1)
	char pad_825[3];  // 0x339(0x3)
	float AnimalVelocityThatMakesThisAnimalFlee;  // 0x33C(0x4)
	float FleeDistance;  // 0x340(0x4)
	float FleeTime;  // 0x344(0x4)
	float TrotTime;  // 0x348(0x4)
	float TimeToAttackWhenAggro;  // 0x34C(0x4)
	float TimeToQuitObserve;  // 0x350(0x4)
	float MinReactionTime;  // 0x354(0x4)
	float MaxReactionTime;  // 0x358(0x4)
	float MovingUpdateInterval;  // 0x35C(0x4)
	float AttackingUpdateInetrval;  // 0x360(0x4)
	float PathSegmentLength_OBSOLETE;  // 0x364(0x4)
	float MinPaceDuration_OBSOLETE;  // 0x368(0x4)
	int32_t MaxNumWalks_OBSOLETE;  // 0x36C(0x4)
	int32_t MaxNumTrots_OBSOLETE;  // 0x370(0x4)
	float PathDirectionCounterResetTime_OBOLETE;  // 0x374(0x4)
	float MoveSegmentLength;  // 0x378(0x4)
	float BackOffDistance;  // 0x37C(0x4)
	float AttackTrackingDistance;  // 0x380(0x4)
	float PredictionFactor;  // 0x384(0x4)
	char pad_904_1 : 7;  // 0x388(0x1)
	bool BackAndForthStuckCheck : 1;  // 0x388(0x1)
	char AttackAttempts;  // 0x389(0x1)
	char pad_906[2];  // 0x38A(0x2)
	float ActionChangedDelay;  // 0x38C(0x4)
	float CloseAttackRepeatDelay;  // 0x390(0x4)
	float AttackChainDelay;  // 0x394(0x4)
	int32_t BlockedPathRetryAttempts;  // 0x398(0x4)
	float DirectionLockTime;  // 0x39C(0x4)
	float MinWalkTimeDuringRoaming;  // 0x3A0(0x4)
	float MaxWalkTimeDuringRoaming;  // 0x3A4(0x4)
	float MinStandTimeDuringRoaming;  // 0x3A8(0x4)
	float MaxStandTimeDuringRoaming;  // 0x3AC(0x4)
	float IntimidateTime;  // 0x3B0(0x4)
	float IntimidateAnimationEndTime;  // 0x3B4(0x4)
	float AlertActionTime;  // 0x3B8(0x4)
	float AlertStartupTime;  // 0x3BC(0x4)
	float AlertAllowedAgainTime;  // 0x3C0(0x4)
	float DoNotDespawnTime;  // 0x3C4(0x4)
	struct UAISenseConfig_Sight* NormalAISenseSight;  // 0x3C8(0x8)
	struct UAISenseConfig_Hearing* NormalAISenseHearing;  // 0x3D0(0x8)
	struct UAISenseConfig_Hearing* RelaxedAISenseHearing;  // 0x3D8(0x8)
	struct UAISenseConfig_Hearing* AlertedAISenseHearing;  // 0x3E0(0x8)
	struct UAISenseConfig_Sight* SleepAISenseSight;  // 0x3E8(0x8)
	struct AComplexAnimal2* _animal;  // 0x3F0(0x8)
	char pad_1016[120];  // 0x3F8(0x78)
	float _roamRadius;  // 0x470(0x4)
	float _healthPercentageToFlee;  // 0x474(0x4)
	float _damageMagnitudeHealthPercentageToFlee;  // 0x478(0x4)
	float _distanceFromFoeToStartIgnoring;  // 0x47C(0x4)
	char pad_1152[104];  // 0x480(0x68)

	void UpdatePerception(struct TArray<struct AActor*>& actorsPerceived); // Function ConZ.ComplexAnimalAIController.UpdatePerception
	void StartFullAlert(); // Function ConZ.ComplexAnimalAIController.StartFullAlert
	void QuitObserve(); // Function ConZ.ComplexAnimalAIController.QuitObserve
	void OnTakeDamageHandler(struct AActor* damageActor, float Damage, struct FVector HitLocation, struct APawn* eventInstigator); // Function ConZ.ComplexAnimalAIController.OnTakeDamageHandler
	void OnActionChangedHandler(uint8_t  CurrentAction, uint8_t  PrevAction); // Function ConZ.ComplexAnimalAIController.OnActionChangedHandler
	uint8_t  GetMode(); // Function ConZ.ComplexAnimalAIController.GetMode
	void ChangeMode(uint8_t  NewMode); // Function ConZ.ComplexAnimalAIController.ChangeMode
}; 



// Class ConZ.Metabolism_ICU_GraphWidget
// Size: 0x218(Inherited: 0x1F0) 
struct UMetabolism_ICU_GraphWidget : public UGraph2DWidget
{
	struct UCurveFloat* BaseCurve;  // 0x1F0(0x8)
	float CurvePeriodBaseDuration;  // 0x1F8(0x4)
	int32_t MinSamplesForSingleCurvePeriod;  // 0x1FC(0x4)
	char pad_512[24];  // 0x200(0x18)

}; 



// Class ConZ.ClearRoundNotLoaded
// Size: 0xC0(Inherited: 0xB8) 
struct UClearRoundNotLoaded : public UWeaponActionClearMalfunctionSequence
{
	struct FName MontageEndSectionName;  // 0xB8(0x8)

}; 



// Class ConZ.ItemState
// Size: 0x100(Inherited: 0x80) 
struct UItemState : public UItemStateBase
{
	float normalizedHealth;  // 0x80(0x4)
	float MaxHealth;  // 0x84(0x4)
	float Weight;  // 0x88(0x4)
	float WeightUsed;  // 0x8C(0x4)
	float NormalizedRadiation;  // 0x90(0x4)
	char pad_148_1 : 7;  // 0x94(0x1)
	bool IsCrafted : 1;  // 0x94(0x1)
	char pad_149[3];  // 0x95(0x3)
	float UncraftTime;  // 0x98(0x4)
	char pad_156[4];  // 0x9C(0x4)
	int64_t LastAccessTime;  // 0xA0(0x8)
	char pad_168_1 : 7;  // 0xA8(0x1)
	bool IsPartOfEvent : 1;  // 0xA8(0x1)
	char pad_169[3];  // 0xA9(0x3)
	float WaterWeight;  // 0xAC(0x4)
	float Uses;  // 0xB0(0x4)
	char pad_180_1 : 7;  // 0xB4(0x1)
	bool IsInHands : 1;  // 0xB4(0x1)
	uint8_t  HolsterSide;  // 0xB5(0x1)
	char pad_182[2];  // 0xB6(0x2)
	int32_t QuickAccessBarIndex;  // 0xB8(0x4)
	char pad_188[4];  // 0xBC(0x4)
	struct TArray<struct UItemStateBase*> CraftingParts;  // 0xC0(0x10)
	struct TArray<struct UItemStateBase*> Stacks;  // 0xD0(0x10)
	struct TArray<struct FEntityId> _craftingPartsIds;  // 0xE0(0x10)
	struct TArray<struct FEntityId> _stacksIds;  // 0xF0(0x10)

}; 



// Class ConZ.PlaceableActorGardenReplicatedState
// Size: 0x68(Inherited: 0x50) 
struct UPlaceableActorGardenReplicatedState : public UPlaceableActorBaseReplicatedState
{
	char pad_80[24];  // 0x50(0x18)

}; 



// Class ConZ.WeaponItemState
// Size: 0x100(Inherited: 0x100) 
struct UWeaponItemState : public UItemState
{

}; 



// Class ConZ.SedentaryNPCAnimInstance
// Size: 0x2D0(Inherited: 0x2C0) 
struct USedentaryNPCAnimInstance : public UAnimInstance
{
	struct FRotator _headTurningRotator;  // 0x2C0(0xC)
	char pad_716[4];  // 0x2CC(0x4)

}; 



// Class ConZ.AmmunitionBoxItemState
// Size: 0x110(Inherited: 0x100) 
struct UAmmunitionBoxItemState : public UItemState
{
	int32_t AmmoCount;  // 0x100(0x4)
	char pad_260[12];  // 0x104(0xC)

}; 



// Class ConZ.EquipItemObjective
// Size: 0x380(Inherited: 0x378) 
struct AEquipItemObjective : public AObtainItemObjective
{
	char pad_888[8];  // 0x378(0x8)

}; 



// Class ConZ.ChamberCartridge
// Size: 0x90(Inherited: 0x90) 
struct UChamberCartridge : public UWeaponActionReloadSequence
{

}; 



// Class ConZ.AmmunitionExplosiveArrow
// Size: 0x9F0(Inherited: 0x980) 
struct AAmmunitionExplosiveArrow : public AAmmunitionArrow
{
	struct UAkAudioEvent* _startBeepingEvent;  // 0x980(0x8)
	struct UAkAudioEvent* _stopBeepingEvent;  // 0x988(0x8)
	float _startOfBeepingBeforeDetonation;  // 0x990(0x4)
	float _innerExplosionRadius;  // 0x994(0x4)
	float _outerExplosionRadius;  // 0x998(0x4)
	float _explosionBaseDamage;  // 0x99C(0x4)
	float _explosionMinDamage;  // 0x9A0(0x4)
	float _explosionDistanceFalloff;  // 0x9A4(0x4)
	float _explosionTimerTime;  // 0x9A8(0x4)
	float _explosionForce;  // 0x9AC(0x4)
	struct FTargetTypeDamageMultiplier _targetTypeMultiplier;  // 0x9B0(0x10)
	struct FName _detonationPointSocketName;  // 0x9C0(0x8)
	AReplicatedExplosionEffectsActor* _effectsActorClass;  // 0x9C8(0x8)
	char pad_2512[16];  // 0x9D0(0x10)
	char pad_2528_1 : 7;  // 0x9E0(0x1)
	bool _shouldStartCountdown : 1;  // 0x9E0(0x1)
	char pad_2529[15];  // 0x9E1(0xF)

	void Server_Explode(); // Function ConZ.AmmunitionExplosiveArrow.Server_Explode
}; 



// Class ConZ.ShelterItemState
// Size: 0x110(Inherited: 0x100) 
struct UShelterItemState : public UItemState
{
	struct FDbIntegerId ShelterId;  // 0x100(0x8)
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionRemoveWeaponAttachment
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionRemoveWeaponAttachment : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.SentryFirstPersonViewComponent
// Size: 0xD0(Inherited: 0xD0) 
struct USentryFirstPersonViewComponent : public UPrisonerViewComponent
{

}; 



// Class ConZ.BankTransactionAssetData
// Size: 0x38(Inherited: 0x30) 
struct UBankTransactionAssetData : public UInteractionAssetData
{
	ABankATMMinigame* BankATMMinigame;  // 0x30(0x8)

}; 



// Class ConZ.ConZSettingsMenu
// Size: 0x628(Inherited: 0x260) 
struct UConZSettingsMenu : public UBaseMenu
{
	struct UTabGroup* _categorySelector;  // 0x260(0x8)
	struct UWidgetSwitcher* _categorySwitcher;  // 0x268(0x8)
	struct UPanelWidget* _controlButtonsPanel;  // 0x270(0x8)
	UUserWidget* _tabButtonClass;  // 0x278(0x8)
	UCarouselWithLabel* _subcategoryCarouselClass;  // 0x280(0x8)
	UTextOnlyTooltip* _tooltipClass;  // 0x288(0x8)
	char pad_656[432];  // 0x290(0x1B0)
	struct UMenuButton* _apply;  // 0x440(0x8)
	struct UMenuButton* _reset;  // 0x448(0x8)
	struct UMenuButton* _resetAll;  // 0x450(0x8)
	struct UMenuButton* _back;  // 0x458(0x8)
	struct UVerticalBox* _messageBoxPanel;  // 0x460(0x8)
	float _maxDesiredSubcategoryHeight;  // 0x468(0x4)
	char pad_1132[260];  // 0x46C(0x104)
	float _tooltipDelayInSeconds;  // 0x570(0x4)
	char pad_1396[4];  // 0x574(0x4)
	struct FSlateFontInfo _requiresServerRestartFont;  // 0x578(0x58)
	char pad_1488[88];  // 0x5D0(0x58)

	struct UWidget* MoveFocusUp(uint8_t  UINavigation); // Function ConZ.ConZSettingsMenu.MoveFocusUp
	struct UWidget* MoveFocusDown(uint8_t  UINavigation); // Function ConZ.ConZSettingsMenu.MoveFocusDown
}; 



// Class ConZ.PBCIQR_ApplyBandagesOrDisinfect_ApplyBandages
// Size: 0xC0(Inherited: 0xA0) 
struct UPBCIQR_ApplyBandagesOrDisinfect_ApplyBandages : public UPrisonerBodyConditionInteractionQueryResults
{
	char pad_160[32];  // 0xA0(0x20)

}; 



// Class ConZ.TargetObjective
// Size: 0x400(Inherited: 0x330) 
struct ATargetObjective : public ARequirementObjective
{
	struct TMap<struct TSoftClassPtr<UObject>, struct FObjectiveItem> _targetClasses;  // 0x330(0x50)
	char pad_896_1 : 7;  // 0x380(0x1)
	bool _specificTarget : 1;  // 0x380(0x1)
	char pad_897[7];  // 0x381(0x7)
	struct TMap<struct TSoftObjectPtr<AConZCharacter>, struct FObjectiveItem> _targetMeshes;  // 0x388(0x50)
	struct TArray<struct TSoftClassPtr<UObject>> _targetItems;  // 0x3D8(0x10)
	char pad_1000[24];  // 0x3E8(0x18)

}; 



// Class ConZ.ConZCharacter
// Size: 0x7A0(Inherited: 0x4D0) 
struct AConZCharacter : public ACharacter
{
	char pad_1232[40];  // 0x4D0(0x28)
	ACorpse* CorpseClass;  // 0x4F8(0x8)
	struct UChoppingRecipeDataAsset* ChoppingRecipeDataAsset;  // 0x500(0x8)
	char pad_1288_1 : 7;  // 0x508(0x1)
	bool IterativeChopping : 1;  // 0x508(0x1)
	char pad_1289[7];  // 0x509(0x7)
	AItem* ItemRepresentation;  // 0x510(0x8)
	struct FName HeadBoneName;  // 0x518(0x8)
	struct TMap<struct FName, uint8_t > BodyPartByBoneName;  // 0x520(0x50)
	float HeadHeight;  // 0x570(0x4)
	float TorsoHeight;  // 0x574(0x4)
	char pad_1400_1 : 7;  // 0x578(0x1)
	bool ShouldAutoUpdateEnvironmentDescription : 1;  // 0x578(0x1)
	char pad_1401[3];  // 0x579(0x3)
	float EnvironmentDescriptionAutoUpdateInterval;  // 0x57C(0x4)
	struct UAkAudioEvent* EnteredIndoorEnvironmentAudioEvent;  // 0x580(0x8)
	struct UAkAudioEvent* EnteredOutdoorEnvironmentAudioEvent;  // 0x588(0x8)
	struct UAkAudioEvent* EnteredUndergroundAudioEvent;  // 0x590(0x8)
	struct UAkAudioEvent* LeftUndergroundAudioEvent;  // 0x598(0x8)
	char pad_1440[24];  // 0x5A0(0x18)
	struct UVoiceChatComponent* VoiceChatComponent;  // 0x5B8(0x8)
	char pad_1472[8];  // 0x5C0(0x8)
	float _kockoutChanceModifier;  // 0x5C8(0x4)
	char pad_1484[4];  // 0x5CC(0x4)
	struct UCharacterSoundComponent* SoundComponent;  // 0x5D0(0x8)
	char pad_1496[24];  // 0x5D8(0x18)
	uint8_t  _gender;  // 0x5F0(0x1)
	char pad_1521[31];  // 0x5F1(0x1F)
	uint8_t  _physicsDominanceGroup;  // 0x610(0x1)
	char pad_1553[3];  // 0x611(0x3)
	float _activeHitTimeToLive;  // 0x614(0x4)
	struct UCurveFloat* _hitDamageVsVehicleSpeedInKph;  // 0x618(0x8)
	struct FHitEffects _effectsOnVehicleHit[5];  // 0x620(0x118)
	char pad_1848[16];  // 0x738(0x10)
	char pad_1864_1 : 7;  // 0x748(0x1)
	bool _allowMultipleDamageReportsFromProjectile : 1;  // 0x748(0x1)
	char pad_1865[7];  // 0x749(0x7)
	struct UPhysicsAsset* _physicsAssetOnServer;  // 0x750(0x8)
	uint8_t  _aiTeam;  // 0x758(0x1)
	char pad_1881[7];  // 0x759(0x7)
	struct TArray<struct UCharacterAction*> _actionsList;  // 0x760(0x10)
	char pad_1904[32];  // 0x770(0x20)
	float _characterActionPlayRateMultiplier;  // 0x790(0x4)
	char pad_1940[4];  // 0x794(0x4)
	struct UGrappleActionComponent* _grappleActionComponent;  // 0x798(0x8)

	void SetGender(uint8_t  Value); // Function ConZ.ConZCharacter.SetGender
	void SetEnvironmentDescription(struct FEnvironmentDescription& Value); // Function ConZ.ConZCharacter.SetEnvironmentDescription
	void Server_SetEnvironmentDescription(struct FEnvironmentDescription Value); // Function ConZ.ConZCharacter.Server_SetEnvironmentDescription
	void Server_RequestCharacterAction(struct FCharacterActionReplicationHelper Value); // Function ConZ.ConZCharacter.Server_RequestCharacterAction
	void Server_HandleMeleeAttackCapsuleHit(struct AConZCharacter* attacker, struct FMeleeAttackCapsuleHitInfo HitInfo); // Function ConZ.ConZCharacter.Server_HandleMeleeAttackCapsuleHit
	void Server_CharacterActionAck(struct FCharacterActionAck ack); // Function ConZ.ConZCharacter.Server_CharacterActionAck
	void ReceiveBeginHit(struct UPrimitiveComponent* MyComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, bool selfMoved, struct FVector HitLocation, struct FVector HitNormal, struct FVector NormalImpulse, struct FHitResult& Hit); // Function ConZ.ConZCharacter.ReceiveBeginHit
	void OnRep_Gender(uint8_t  oldGender); // Function ConZ.ConZCharacter.OnRep_Gender
	void NetMulticast_RequestCharacterAction(struct FCharacterActionReplicationHelper Value, bool ignoreAutonomousProxy); // Function ConZ.ConZCharacter.NetMulticast_RequestCharacterAction
	void NetMulticast_HandleMeleeAttackCapsuleHit(struct AConZCharacter* attacker, struct FMeleeAttackCapsuleHitInfo HitInfo); // Function ConZ.ConZCharacter.NetMulticast_HandleMeleeAttackCapsuleHit
	void NetMulticast_CharacterActionAck(struct FCharacterActionAck ack, bool ignoreAutonomousProxy); // Function ConZ.ConZCharacter.NetMulticast_CharacterActionAck
	struct ACorpse* LeaveCorpse(); // Function ConZ.ConZCharacter.LeaveCorpse
	bool IsHeadBone(struct FName BoneName); // Function ConZ.ConZCharacter.IsHeadBone
	bool IsConscious(); // Function ConZ.ConZCharacter.IsConscious
	bool IsAlive(); // Function ConZ.ConZCharacter.IsAlive
	bool HasCharacterAction(); // Function ConZ.ConZCharacter.HasCharacterAction
	struct UCharacterSoundComponent* GetSoundComponent(); // Function ConZ.ConZCharacter.GetSoundComponent
	uint8_t  GetHitReactBodyPartFromHitResult(struct FHitResult& HitResult); // Function ConZ.ConZCharacter.GetHitReactBodyPartFromHitResult
	uint8_t  GetHitReactBodyPartFromBodyPart(uint8_t  Value); // Function ConZ.ConZCharacter.GetHitReactBodyPartFromBodyPart
	uint8_t  GetGender(); // Function ConZ.ConZCharacter.GetGender
	struct FEnvironmentDescription GetEnvironmentDescription(); // Function ConZ.ConZCharacter.GetEnvironmentDescription
	struct UCharacterAction* GetCharacterAction(); // Function ConZ.ConZCharacter.GetCharacterAction
	uint8_t  GetBodyPartFromBoneName(struct FName BoneName); // Function ConZ.ConZCharacter.GetBodyPartFromBoneName
	void Client_RequestCharacterAction(struct FCharacterActionReplicationHelper Value, bool cancelExecutingAction); // Function ConZ.ConZCharacter.Client_RequestCharacterAction
	void CharacterAction_EndHandle(struct UCharacterAction* Action); // Function ConZ.ConZCharacter.CharacterAction_EndHandle
	void ActorHitCallback(struct AActor* Actor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function ConZ.ConZCharacter.ActorHitCallback
}; 



// Class ConZ.BondageComponent
// Size: 0xEE0(Inherited: 0xED0) 
struct UBondageComponent : public USkeletalMeshComponent
{
	struct AItem* _bondageItem;  // 0xEC8(0x8)
	uint8_t  _boundBodyPart;  // 0xED0(0x1)
	float _tightness;  // 0xED4(0x4)
	char pad_3805[3];  // 0xEDD(0x3)

	void UpdateVisuals(); // Function ConZ.BondageComponent.UpdateVisuals
	void OnRep_BoundBodyPart(); // Function ConZ.BondageComponent.OnRep_BoundBodyPart
	void OnRep_BondageItem(); // Function ConZ.BondageComponent.OnRep_BondageItem
	struct AItem* GetBondageItem(); // Function ConZ.BondageComponent.GetBondageItem
}; 



// Class ConZ.BasicLadder
// Size: 0x248(Inherited: 0x220) 
struct ABasicLadder : public AActor
{
	struct UStaticMeshComponent* _mesh;  // 0x220(0x8)
	struct TArray<struct FLadderMarker> _ladderMarkers;  // 0x228(0x10)
	char pad_568[16];  // 0x238(0x10)

}; 



// Class ConZ.DcxBikePassengerMountSlot
// Size: 0x140(Inherited: 0x140) 
struct UDcxBikePassengerMountSlot : public UVehicleBaseMountSlot
{

}; 



// Class ConZ.Animal2
// Size: 0x980(Inherited: 0x7A0) 
struct AAnimal2 : public AConZCharacter
{
	char pad_1952[32];  // 0x7A0(0x20)
	struct FText SpeciesName;  // 0x7C0(0x18)
	uint8_t  SpeciesType;  // 0x7D8(0x1)
	uint8_t  ActivityCycle;  // 0x7D9(0x1)
	char pad_2010[2];  // 0x7DA(0x2)
	float MaxHealth;  // 0x7DC(0x4)
	struct UHitReactComponent* HitReactComponent;  // 0x7E0(0x8)
	struct FGameplayTag HitReactType;  // 0x7E8(0x8)
	struct FName EyesViewPointSocketName;  // 0x7F0(0x8)
	ATrackingMarker2* TrackingMarker;  // 0x7F8(0x8)
	ATrackingMarker2* BloodTrailMarker;  // 0x800(0x8)
	float TrackingMarkerFrequency;  // 0x808(0x4)
	float TrackingMarkerDistance;  // 0x80C(0x4)
	float TrackingMarkerRadius;  // 0x810(0x4)
	float TrackingMarkerDuration;  // 0x814(0x4)
	float BleedingSpeed;  // 0x818(0x4)
	float LightWoundDamageAmount;  // 0x81C(0x4)
	float MeleeBleedingThreshold;  // 0x820(0x4)
	float StuckCheckDuration;  // 0x824(0x4)
	float StuckRadius;  // 0x828(0x4)
	char UnstuckMode;  // 0x82C(0x1)
	char pad_2093[3];  // 0x82D(0x3)
	struct FMulticastInlineDelegate OnDamageTaken;  // 0x830(0x10)
	float HeadBoneRotationSendToServerInterval;  // 0x840(0x4)
	float SightRange;  // 0x844(0x4)
	char pad_2120_1 : 7;  // 0x848(0x1)
	bool TiltMeshOnSlopes : 1;  // 0x848(0x1)
	char pad_2121_1 : 7;  // 0x849(0x1)
	bool AdjustMeshHeightOnSlopes : 1;  // 0x849(0x1)
	char pad_2122[2];  // 0x84A(0x2)
	float MeshPositionLerpSpeed;  // 0x84C(0x4)
	float BleedInterval;  // 0x850(0x4)
	char pad_2132_1 : 7;  // 0x854(0x1)
	bool ShouldGoToRagdolIfTakenDamage : 1;  // 0x854(0x1)
	char pad_2133[3];  // 0x855(0x3)
	float RagdollDuration;  // 0x858(0x4)
	float _health;  // 0x85C(0x4)
	float _woundDamage;  // 0x860(0x4)
	char pad_2148[8];  // 0x864(0x8)
	int32_t _packSizeMin;  // 0x86C(0x4)
	int32_t _packSizeMax;  // 0x870(0x4)
	char pad_2164[52];  // 0x874(0x34)
	uint8_t  _animalStance;  // 0x8A8(0x1)
	char pad_2217[7];  // 0x8A9(0x7)
	char pad_2224_1 : 7;  // 0x8B0(0x1)
	bool _shouldUpdateMovementSpeedRTPCValue : 1;  // 0x8B0(0x1)
	char pad_2225[87];  // 0x8B1(0x57)
	char pad_2312_1 : 7;  // 0x908(0x1)
	bool _doNotCrumble : 1;  // 0x908(0x1)
	char pad_2313[3];  // 0x909(0x3)
	float _collisionDamageMultiplierPerBodyPart[c];  // 0x90C(0x30)
	char pad_2364[4];  // 0x93C(0x4)
	float _delayBetweenTakeDamageSounds;  // 0x940(0x4)
	char pad_2372_1 : 7;  // 0x944(0x1)
	bool _canDrown : 1;  // 0x944(0x1)
	char pad_2373[3];  // 0x945(0x3)
	float _drownDamageCycleLength;  // 0x948(0x4)
	float _drownDamagePerCycle;  // 0x94C(0x4)
	char pad_2384[4];  // 0x950(0x4)
	float _baseEyeForwardDistance;  // 0x954(0x4)
	char pad_2392_1 : 7;  // 0x958(0x1)
	bool _isSearched : 1;  // 0x958(0x1)
	char pad_2393[3];  // 0x959(0x3)
	float _corpseSearchDuration;  // 0x95C(0x4)
	float _corpseMaxLifeTimeInMinutes;  // 0x960(0x4)
	float _destroyCorpseTimerInterval;  // 0x964(0x4)
	float _minDistanceToPlayerPawnOrSpectatorToDestroyCorpse;  // 0x968(0x4)
	char pad_2412[20];  // 0x96C(0x14)

	void UnpackUint8(char pack, struct TArray<bool>& B); // Function ConZ.Animal2.UnpackUint8
	char PackBoolsIntoUint8(struct TArray<bool>& B); // Function ConZ.Animal2.PackBoolsIntoUint8
	void OnRep_WoundDamage(); // Function ConZ.Animal2.OnRep_WoundDamage
	void OnRep_Health(); // Function ConZ.Animal2.OnRep_Health
	void NetMulticast_PlaySoundOnClients(uint8_t  SoundToPlay); // Function ConZ.Animal2.NetMulticast_PlaySoundOnClients
	void GenerateBloodMarkerRPC(); // Function ConZ.Animal2.GenerateBloodMarkerRPC
	struct APrisoner* ClosestPrisoner(); // Function ConZ.Animal2.ClosestPrisoner
}; 



// Class ConZ.PrisonerBodySymptom_BreathingObstructed
// Size: 0xC0(Inherited: 0xB8) 
struct UPrisonerBodySymptom_BreathingObstructed : public UPrisonerBodySymptom
{
	float _maxSeverity;  // 0xB8(0x4)
	char pad_188[4];  // 0xBC(0x4)

}; 



// Class ConZ.PrisonerBodySymptomCause_DoubleVision
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_DoubleVision : public UPrisonerBodySymptomCause
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.PrisonerBodySymptomCauseUIData_Leukopenia
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCauseUIData_Leukopenia : public UPrisonerBodySymptomCauseUIData
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.WeaponStateChamberBullet
// Size: 0x38(Inherited: 0x30) 
struct UWeaponStateChamberBullet : public UWeaponState
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.ConZCharacterMovementComponent
// Size: 0xC10(Inherited: 0xAF0) 
struct UConZCharacterMovementComponent : public UCharacterMovementComponent
{
	char ECollisionResponse _navWalkingCollisionResponseToWorldStatic;  // 0xAF0(0x1)
	char ECollisionResponse _navWalkingCollisionResponseToWorldDynamic;  // 0xAF1(0x1)
	char pad_2802[2];  // 0xAF2(0x2)
	float _maxClimbHeight;  // 0xAF4(0x4)
	char pad_2808_1 : 7;  // 0xAF8(0x1)
	bool _queryWaterSplinesEveryFrame : 1;  // 0xAF8(0x1)
	char pad_2809[247];  // 0xAF9(0xF7)
	float _angularVelocityFilteringInterpolationSpeed;  // 0xBF0(0x4)
	char pad_3060[28];  // 0xBF4(0x1C)

}; 



// Class ConZ.Animal2MovementComponent
// Size: 0xC20(Inherited: 0xC10) 
struct UAnimal2MovementComponent : public UConZCharacterMovementComponent
{
	float GroundSlopeRotationSpeedDegrees;  // 0xC08(0x4)
	char pad_3092_1 : 7;  // 0xC14(0x1)
	bool CorrectServerReceivedZ : 1;  // 0xC0C(0x1)
	char pad_3093[11];  // 0xC15(0xB)

}; 



// Class ConZ.GameEventRoundInfoWidget
// Size: 0x260(Inherited: 0x260) 
struct UGameEventRoundInfoWidget : public UUserWidget
{

	void SetGameEvent(struct AGameEventBase* gameEvent); // Function ConZ.GameEventRoundInfoWidget.SetGameEvent
}; 



// Class ConZ.ModularTooltipElementData_Title
// Size: 0x48(Inherited: 0x28) 
struct UModularTooltipElementData_Title : public UModularTooltipElementData
{
	char pad_40[32];  // 0x28(0x20)

}; 



// Class ConZ.Animal2SoundComponent
// Size: 0x150(Inherited: 0xD8) 
struct UAnimal2SoundComponent : public UCharacterSoundComponent
{
	struct UAkAudioEvent* IdleAudioEvent;  // 0xD8(0x8)
	struct UAkAudioEvent* AngryAudioEvent;  // 0xE0(0x8)
	struct UAkAudioEvent* AttackAudioEvent;  // 0xE8(0x8)
	struct UAkAudioEvent* ScaredAudioEvent;  // 0xF0(0x8)
	struct UAkAudioEvent* AlertedAudioEvent;  // 0xF8(0x8)
	struct UAkAudioEvent* TakeDamageAudioEvent;  // 0x100(0x8)
	struct UAkAudioEvent* KillAudioEvent;  // 0x108(0x8)
	struct UAkAudioEvent* AnimalFootstep;  // 0x110(0x8)
	float FootstepSoundOverlap;  // 0x118(0x4)
	float FixedFootstepVolume;  // 0x11C(0x4)
	float SpeedFootstepVolume;  // 0x120(0x4)
	float MinSilenceTimeout;  // 0x124(0x4)
	float MaxSilenceTimeout;  // 0x128(0x4)
	char pad_300[36];  // 0x12C(0x24)

}; 



// Class ConZ.EnduranceSkill
// Size: 0x138(Inherited: 0xC8) 
struct UEnduranceSkill : public UConstitutionSkill
{
	struct FEnduranceSkillParametersPerSkillLevel NoSkillParameters;  // 0xC8(0x18)
	struct FEnduranceSkillParametersPerSkillLevel BasicSkillParameters;  // 0xE0(0x18)
	struct FEnduranceSkillParametersPerSkillLevel MediumSkillParameters;  // 0xF8(0x18)
	struct FEnduranceSkillParametersPerSkillLevel AdvancedSkillParameters;  // 0x110(0x18)
	char pad_296[16];  // 0x128(0x10)

}; 



// Class ConZ.CollisionDamageType
// Size: 0x40(Inherited: 0x40) 
struct UCollisionDamageType : public UDamageType
{

}; 



// Class ConZ.Animal2AnimInstance
// Size: 0x2F0(Inherited: 0x2C0) 
struct UAnimal2AnimInstance : public UAnimInstance
{
	struct UCurveFloat* InverseLocomotionBias;  // 0x2B8(0x8)
	float MaximumLeaningAngle;  // 0x2C0(0x4)
	int32_t IdleStanceIndex;  // 0x2C4(0x4)
	uint8_t  stance;  // 0x2C8(0x1)
	struct FRotator SlopeRootTiltRotation;  // 0x2CC(0xC)
	float ABPSpeed;  // 0x2D8(0x4)
	float ABPTurn;  // 0x2DC(0x4)
	float MoveVelocity;  // 0x2E0(0x4)
	char pad_745[3];  // 0x2E9(0x3)
	char pad_748_1 : 7;  // 0x2EC(0x1)
	bool _isRagdolled : 1;  // 0x2EC(0x1)
	char pad_749[3];  // 0x2ED(0x3)

	void AnimNotify_RFootDownRear(); // Function ConZ.Animal2AnimInstance.AnimNotify_RFootDownRear
	void AnimNotify_RFootDown(); // Function ConZ.Animal2AnimInstance.AnimNotify_RFootDown
	void AnimNotify_LFootDownRear(); // Function ConZ.Animal2AnimInstance.AnimNotify_LFootDownRear
	void AnimNotify_LFootDown(); // Function ConZ.Animal2AnimInstance.AnimNotify_LFootDown
	void AnimNotify_IntroEnd(); // Function ConZ.Animal2AnimInstance.AnimNotify_IntroEnd
	void AnimNotify_IdleEnd(); // Function ConZ.Animal2AnimInstance.AnimNotify_IdleEnd
}; 



// Class ConZ.GameEventCardWidget
// Size: 0x3A0(Inherited: 0x260) 
struct UGameEventCardWidget : public UUserWidget
{
	struct AGameEventBase* _gameEvent;  // 0x260(0x8)
	struct UButton* JoinButton;  // 0x268(0x8)
	struct UButton* JoinBlueButton;  // 0x270(0x8)
	struct UButton* JoinRedButton;  // 0x278(0x8)
	struct UButton* SwitchTeamButton;  // 0x280(0x8)
	struct UGameEventInfoWidget* UI_GameEventInfoWidget;  // 0x288(0x8)
	struct UOverlay* ScoreboardSlot;  // 0x290(0x8)
	struct UTextBlock* TextBlock_3;  // 0x298(0x8)
	struct UTextBlock* TextBlock_4;  // 0x2A0(0x8)
	struct UTextBlock* TextBlock_1;  // 0x2A8(0x8)
	struct UTextBlock* TextBlock_6;  // 0x2B0(0x8)
	struct UTextBlock* TextBlock_7;  // 0x2B8(0x8)
	struct UImage* Screenshot;  // 0x2C0(0x8)
	struct UTextBlock* LocationText;  // 0x2C8(0x8)
	struct UTextBlock* EntryFeeTag;  // 0x2D0(0x8)
	struct UOverlay* Buttons;  // 0x2D8(0x8)
	struct UHorizontalBox* HorizontalBox_1;  // 0x2E0(0x8)
	struct UButton* LeaveButton;  // 0x2E8(0x8)
	struct UTextBlock* TeamSwitchFee;  // 0x2F0(0x8)
	struct UTextBlock* TextBlock_471;  // 0x2F8(0x8)
	struct UBorder* JoinDisabledMsgBorder;  // 0x300(0x8)
	struct UBorder* CooldownThrobber;  // 0x308(0x8)
	struct FSlateBrush _defaultScreenshotBrush;  // 0x310(0x88)
	struct UAkAudioEvent* _menuButtonClick;  // 0x398(0x8)

	void OnSwitchTeamButtonClicked(); // Function ConZ.GameEventCardWidget.OnSwitchTeamButtonClicked
	void OnLeaveButtonClicked(); // Function ConZ.GameEventCardWidget.OnLeaveButtonClicked
	void OnJoinRedButtonClicked(); // Function ConZ.GameEventCardWidget.OnJoinRedButtonClicked
	void OnJoinButtonClicked(); // Function ConZ.GameEventCardWidget.OnJoinButtonClicked
	void OnJoinBlueButtonClicked(); // Function ConZ.GameEventCardWidget.OnJoinBlueButtonClicked
	struct AGameEventBase* GetGameEvent(); // Function ConZ.GameEventCardWidget.GetGameEvent
}; 



// Class ConZ.AnimalContinuousChargeAttackAIController
// Size: 0x500(Inherited: 0x4E8) 
struct AAnimalContinuousChargeAttackAIController : public AComplexAnimalAIController
{
	float LockAttackDirectionDistance;  // 0x4E8(0x4)
	float ContinueAttackDistance;  // 0x4EC(0x4)
	char pad_1264[16];  // 0x4F0(0x10)

}; 



// Class ConZ.PrisonerBodySymptom_PhoenixTearsPresence
// Size: 0xB8(Inherited: 0xB8) 
struct UPrisonerBodySymptom_PhoenixTearsPresence : public UPrisonerBodySymptom
{

}; 



// Class ConZ.InventoryCompletePanel
// Size: 0x280(Inherited: 0x260) 
struct UInventoryCompletePanel : public UUserWidget
{
	struct USizeBox* _inventoryPanelSizeBox;  // 0x260(0x8)
	struct UInventoryPanelThirdIteration* _inventoryPanelThirdIteration;  // 0x268(0x8)
	struct UInventoryCentralPanel* _inventoryCentralPanel;  // 0x270(0x8)
	struct UHandPanel3* _handPanel;  // 0x278(0x8)

}; 



// Class ConZ.CraftingIngredient
// Size: 0x28(Inherited: 0x28) 
struct UCraftingIngredient : public UInterface
{

}; 



// Class ConZ.BaseItemTag
// Size: 0x30(Inherited: 0x30) 
struct UBaseItemTag : public UDataAsset
{

}; 



// Class ConZ.Metabolism
// Size: 0x1108(Inherited: 0x28) 
struct UMetabolism : public UObject
{
	char pad_40[3200];  // 0x28(0xC80)
	struct FMetabolismConfiguration _configuration;  // 0xCA8(0x460)

}; 



// Class ConZ.KeyboardIllumination
// Size: 0x28(Inherited: 0x28) 
struct UKeyboardIllumination : public UBlueprintFunctionLibrary
{

	void PrintSCUM(struct FColor Color); // Function ConZ.KeyboardIllumination.PrintSCUM
	void InitIllumination(); // Function ConZ.KeyboardIllumination.InitIllumination
	void FlashAllKeys(struct FColor Color, float Duration, float Interval); // Function ConZ.KeyboardIllumination.FlashAllKeys
	void DeInitIllumination(); // Function ConZ.KeyboardIllumination.DeInitIllumination
}; 



// Class ConZ.AnimalHandlingItemTag
// Size: 0x30(Inherited: 0x30) 
struct UAnimalHandlingItemTag : public UBaseItemTag
{

}; 



// Class ConZ.MusicPlayerSegmentSubmenuInfo
// Size: 0x98(Inherited: 0x98) 
struct UMusicPlayerSegmentSubmenuInfo : public UCircularMenuSegmentSubmenuInfo
{

}; 



// Class ConZ.Switch
// Size: 0x268(Inherited: 0x220) 
struct ASwitch : public AActor
{
	char pad_544[40];  // 0x220(0x28)
	struct UStaticMeshComponent* Mesh;  // 0x248(0x8)
	struct FText _interactionText;  // 0x250(0x18)

}; 



// Class ConZ.Skill
// Size: 0xB0(Inherited: 0x30) 
struct USkill : public UDataAsset
{
	struct FText Caption;  // 0x30(0x18)
	uint8_t  ReplicationID;  // 0x48(0x1)
	char pad_73[3];  // 0x49(0x3)
	float ComboBonus;  // 0x4C(0x4)
	float NoSkillBonus;  // 0x50(0x4)
	float BasicBonus;  // 0x54(0x4)
	float MediumBonus;  // 0x58(0x4)
	float AdvancedBonus;  // 0x5C(0x4)
	float DisplayActionMessages;  // 0x60(0x4)
	char pad_100_1 : 7;  // 0x64(0x1)
	bool IsAvailableInCharacterCreation : 1;  // 0x64(0x1)
	char pad_101[3];  // 0x65(0x3)
	struct UTexture2D* _skillIcon;  // 0x68(0x8)
	char pad_112[52];  // 0x70(0x34)
	float _skillFamePointsMultiplier;  // 0xA4(0x4)
	UPrisonerSkillUIData* _uiDataClass;  // 0xA8(0x8)

}; 



// Class ConZ.HasWindowMarkersInterface
// Size: 0x28(Inherited: 0x28) 
struct UHasWindowMarkersInterface : public UInterface
{

	void GetWindowMarkers(struct TArray<struct FWindowMarker>& Result); // Function ConZ.HasWindowMarkersInterface.GetWindowMarkers
}; 



// Class ConZ.PrisonerActionChopItemDescription
// Size: 0x58(Inherited: 0x38) 
struct UPrisonerActionChopItemDescription : public UPrisonerActionDescription
{
	char pad_56[32];  // 0x38(0x20)

}; 



// Class ConZ.SentryAnimInstance2
// Size: 0x3F0(Inherited: 0x2C0) 
struct USentryAnimInstance2 : public UAnimInstance
{
	char pad_704_1 : 7;  // 0x2C0(0x1)
	bool ShouldUseLUWalkStopAnimation : 1;  // 0x2B8(0x1)
	float stoppingDistance;  // 0x2BC(0x4)
	char pad_709[11];  // 0x2C5(0xB)
	struct FInPlaceTurningData _turnInPlaceData;  // 0x2D0(0x2C)
	char pad_764[16];  // 0x2FC(0x10)
	float _stoppingDistance;  // 0x30C(0x4)
	float _upperBodyRotationLerpFactor;  // 0x310(0x4)
	float _grenadeLauncherUpperFlapMaxPitch;  // 0x314(0x4)
	float _grenadeLauncherLowerFlapMaxPitch;  // 0x318(0x4)
	float _grenadeLauncherFlapsTimeToOpenFlaps;  // 0x31C(0x4)
	int32_t _glitchingVaritionsNum;  // 0x320(0x4)
	float _glitchingUpdateTimeMin;  // 0x324(0x4)
	float _glitchingUpdateTimeMax;  // 0x328(0x4)
	float _chanceToGlitchPerHealthState[6];  // 0x32C(0x18)
	int32_t _miningunBonesNum;  // 0x344(0x4)
	float _minigunRotationSpeed;  // 0x348(0x4)
	float _minigunRotationAcceleration;  // 0x34C(0x4)
	float _minigunRotationDeceleration;  // 0x350(0x4)
	char pad_852[4];  // 0x354(0x4)
	char pad_856_1 : 7;  // 0x358(0x1)
	bool _isSentryCompletelyInitialized : 1;  // 0x358(0x1)
	char pad_857_1 : 7;  // 0x359(0x1)
	bool _wantsToMove : 1;  // 0x359(0x1)
	char pad_858_1 : 7;  // 0x35A(0x1)
	bool _previousWantsToMove : 1;  // 0x35A(0x1)
	uint8_t  _movementPace;  // 0x35B(0x1)
	float _actualCourseAngle;  // 0x35C(0x4)
	float _desiredCourseAngle;  // 0x360(0x4)
	float _desiredCoursePitchAngle;  // 0x364(0x4)
	float _angularVelocity;  // 0x368(0x4)
	struct FVector _velocity;  // 0x36C(0xC)
	float _speed;  // 0x378(0x4)
	float _walkSpeedMultiplier;  // 0x37C(0x4)
	struct FVector _forwardVector;  // 0x380(0xC)
	char pad_908_1 : 7;  // 0x38C(0x1)
	bool _isFalling : 1;  // 0x38C(0x1)
	char pad_909_1 : 7;  // 0x38D(0x1)
	bool _isDead : 1;  // 0x38D(0x1)
	uint8_t  _sentryStance;  // 0x38E(0x1)
	uint8_t  _sentryHealthState;  // 0x38F(0x1)
	uint8_t  _combatVariation;  // 0x390(0x1)
	char pad_913_1 : 7;  // 0x391(0x1)
	bool _shouldAimLongRangeWeapon : 1;  // 0x391(0x1)
	char pad_914[2];  // 0x392(0x2)
	struct FVector _longRangeGunLookAtLocation;  // 0x394(0xC)
	char pad_928_1 : 7;  // 0x3A0(0x1)
	bool _shouldAimHighPrecisionWeapon : 1;  // 0x3A0(0x1)
	char pad_929[3];  // 0x3A1(0x3)
	struct FVector _highPrecisionGunLookAtLocation;  // 0x3A4(0xC)
	char pad_944_1 : 7;  // 0x3B0(0x1)
	bool _hasUpperBodyFocusLocation : 1;  // 0x3B0(0x1)
	char pad_945[3];  // 0x3B1(0x3)
	float _upperBodyFocusRotationYaw;  // 0x3B4(0x4)
	float _grenadeLauncherUpperFlapCurrentPitch;  // 0x3B8(0x4)
	float _grenadeLauncherLowerFlapCurrentPitch;  // 0x3BC(0x4)
	char pad_960_1 : 7;  // 0x3C0(0x1)
	bool _isFiring : 1;  // 0x3C0(0x1)
	char pad_961[7];  // 0x3C1(0x7)
	struct TArray<struct FSentryGlitchingPartInfo> _partGlitchingInfo;  // 0x3C8(0x10)
	struct TArray<float> _minigunRotationAngles;  // 0x3D8(0x10)
	char pad_1000[8];  // 0x3E8(0x8)

	float GetTurnInPlaceElapsedTimeRight(); // Function ConZ.SentryAnimInstance2.GetTurnInPlaceElapsedTimeRight
	float GetTurnInPlaceElapsedTimeLeft(); // Function ConZ.SentryAnimInstance2.GetTurnInPlaceElapsedTimeLeft
	float GetTurnInPlaceDirectionBlendAlpha(); // Function ConZ.SentryAnimInstance2.GetTurnInPlaceDirectionBlendAlpha
	float GetTurnInPlaceBlendAlpha(); // Function ConZ.SentryAnimInstance2.GetTurnInPlaceBlendAlpha
	float FindTimeAtStoppingDistance(struct UAnimSequenceBase* AnimSequence, float stoppingDistance); // Function ConZ.SentryAnimInstance2.FindTimeAtStoppingDistance
	void AnimNotify_SentryPlayLongRangeWeaponMuzzleFlash(); // Function ConZ.SentryAnimInstance2.AnimNotify_SentryPlayLongRangeWeaponMuzzleFlash
	void AnimNotify_SentryJump(); // Function ConZ.SentryAnimInstance2.AnimNotify_SentryJump
	void AnimNotify_SentryHighPrecisionWeaponStartCharging(); // Function ConZ.SentryAnimInstance2.AnimNotify_SentryHighPrecisionWeaponStartCharging
	void AnimNotify_SentryHighPrecisionAttackFired(); // Function ConZ.SentryAnimInstance2.AnimNotify_SentryHighPrecisionAttackFired
	void AnimNotify_RFootDown(); // Function ConZ.SentryAnimInstance2.AnimNotify_RFootDown
	void AnimNotify_LFootDown(); // Function ConZ.SentryAnimInstance2.AnimNotify_LFootDown
}; 



// Class ConZ.PriceCategory
// Size: 0x38(Inherited: 0x30) 
struct UPriceCategory : public UDataAsset
{
	float Price;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)

}; 



// Class ConZ.IntelligenceSkill
// Size: 0xB0(Inherited: 0xB0) 
struct UIntelligenceSkill : public USkill
{

}; 



// Class ConZ.AnimNotify_MakeNoise
// Size: 0x40(Inherited: 0x38) 
struct UAnimNotify_MakeNoise : public UAnimNotify
{
	uint8_t  noiseLevel;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 



// Class ConZ.AnimNotifyState_NoScopingAllowed
// Size: 0x38(Inherited: 0x30) 
struct UAnimNotifyState_NoScopingAllowed : public UAnimNotifyState
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.SwingItemComponent
// Size: 0x338(Inherited: 0xC8) 
struct USwingItemComponent : public UItemComponent
{
	char pad_200[24];  // 0xC8(0x18)
	struct FRuntimeFloatCurve _swingSpeedLevelVsInputSpeed;  // 0xE0(0x88)
	struct FRuntimeFloatCurve _prisonerActionDifficultyVsSwingSpeedLevel;  // 0x168(0x88)
	uint8_t  _maxAllowedPrisonerMovementPaceWhenInHands;  // 0x1F0(0x1)
	char pad_497_1 : 7;  // 0x1F1(0x1)
	bool _shouldCoolDownPrisonerWhileSwinging : 1;  // 0x1F1(0x1)
	char pad_498[6];  // 0x1F2(0x6)
	struct FRuntimeFloatCurve _bodyTemperatureCoolingRatesVsSwingSpeedLevel;  // 0x1F8(0x88)
	struct UAnimMontage* _itemSwingAnimMontage;  // 0x280(0x8)
	struct UAnimMontage* _prisonerSwingAnimMontage;  // 0x288(0x8)
	struct FName _prisonerSwingAnimMontageStartSectionName;  // 0x290(0x8)
	struct FName _prisonerSwingAnimMontageLoopSectionName;  // 0x298(0x8)
	struct FName _prisonerSwingAnimMontageEndSectionName;  // 0x2A0(0x8)
	float _prisonerSwingAnimMontageInterpolationSpeed;  // 0x2A8(0x4)
	char pad_684[4];  // 0x2AC(0x4)
	struct FRuntimeFloatCurve _animMontagePlayRateVsSwingSpeedLevel;  // 0x2B0(0x88)

	void Server_SetSwingSpeedLevel(int32_t Value, bool shouldPlaySwingMontageEndSection); // Function ConZ.SwingItemComponent.Server_SetSwingSpeedLevel
	void NetMulticast_SetSwingSpeedLevel(int32_t Value, bool shouldPlaySwingMontageEndSection); // Function ConZ.SwingItemComponent.NetMulticast_SetSwingSpeedLevel
}; 



// Class ConZ.AnimalHandlingSkill
// Size: 0xC0(Inherited: 0xB0) 
struct UAnimalHandlingSkill : public UIntelligenceSkill
{
	char pad_176[16];  // 0xB0(0x10)

}; 



// Class ConZ.AnimNotify_BoatRow
// Size: 0x40(Inherited: 0x38) 
struct UAnimNotify_BoatRow : public UAnimNotify
{
	uint32_t Flags;  // 0x38(0x4)
	float _rowCycleLength;  // 0x3C(0x4)

}; 



// Class ConZ.SlidingDoorStatic
// Size: 0x500(Inherited: 0x4F0) 
struct ASlidingDoorStatic : public ADoor
{
	struct USceneComponent* ClosedPositionComponent;  // 0x4E8(0x8)
	struct USceneComponent* OpenPositionComponent;  // 0x4F0(0x8)
	char pad_1280_1 : 7;  // 0x500(0x1)
	bool _shouldAllowRotation : 1;  // 0x4F8(0x1)
	char pad_1281_1 : 7;  // 0x501(0x1)
	bool _shouldAllowScaling : 1;  // 0x4F9(0x1)

}; 



// Class ConZ.ConZEconomyManager
// Size: 0xA88(Inherited: 0x220) 
struct AConZEconomyManager : public AActor
{
	char pad_544[192];  // 0x220(0xC0)
	struct UTraderManagingComponent* _traderManagingComponent;  // 0x2E0(0x8)
	char pad_744[4];  // 0x2E8(0x4)
	float _autoSaveInterval;  // 0x2EC(0x4)
	char pad_752[4];  // 0x2F0(0x4)
	char pad_756_1 : 7;  // 0x2F4(0x1)
	bool _shouldIgnoreDatabaseSerialization : 1;  // 0x2F4(0x1)
	char pad_757[27];  // 0x2F5(0x1B)
	struct FTradeOutpostProsperityLevelInfo _prosperityLevelInfoPerLevel[6];  // 0x310(0xF0)
	char pad_1024[8];  // 0x400(0x8)
	struct TMap<float, int32_t> _expensiveTradeablesSpawnChanceMap;  // 0x408(0x50)
	struct UCurveFloat* _playerPurchasePriceDeltaVsChanceCurve;  // 0x458(0x8)
	float _betterPurchasePricesChance;  // 0x460(0x4)
	float _maxOutpostBuyingCapability;  // 0x464(0x4)
	int32_t _maxOutpostGoldBuyingCapability;  // 0x468(0x4)
	int32_t _goldBasePrice;  // 0x46C(0x4)
	float _playerGoldSalePriceModifier;  // 0x470(0x4)
	float _goldPriceChangePercentageStep;  // 0x474(0x4)
	float _goldPriceChangePerStep;  // 0x478(0x4)
	char pad_1148[132];  // 0x47C(0x84)
	struct UDataTable* _tradeableDescTable;  // 0x500(0x8)
	char pad_1288[976];  // 0x508(0x3D0)
	struct FString _economyOverrideJSONFileName;  // 0x8D8(0x10)
	struct FGameplayTag _vehicleSpawnGroupParentTag;  // 0x8E8(0x8)
	char pad_2288[292];  // 0x8F0(0x124)
	int32_t _defaultMaxPerGroup;  // 0xA14(0x4)
	float _maxSaleDistance;  // 0xA18(0x4)
	char pad_2588[20];  // 0xA1C(0x14)
	struct UCurveFloat* _tradeableBuyPriceMultiplierVsNumberOfPlayersCurve;  // 0xA30(0x8)
	struct UCurveFloat* _tradeableSellPriceMultiplierVsNumberOfPlayersCurve;  // 0xA38(0x8)
	char pad_2624[12];  // 0xA40(0xC)
	float _priceMultiplierBasedOnNumberOfPlayersInterval;  // 0xA4C(0x4)
	char pad_2640[8];  // 0xA50(0x8)
	char pad_2648_1 : 7;  // 0xA58(0x1)
	bool _tradersUnlimitedStock : 1;  // 0xA58(0x1)
	char pad_2649[2];  // 0xA59(0x2)
	char pad_2651_1 : 7;  // 0xA5B(0x1)
	bool _isFamePointRequirementEnabled : 1;  // 0xA5B(0x1)
	char pad_2652[4];  // 0xA5C(0x4)
	struct TArray<struct FPendingTraderPersonalityDataHelperStruct> _pendingTraderPersonalities;  // 0xA60(0x10)
	char pad_2672[16];  // 0xA70(0x10)
	char pad_2688_1 : 7;  // 0xA80(0x1)
	bool _shouldCommunicateWithMasterServer : 1;  // 0xA80(0x1)
	char pad_2689[7];  // 0xA81(0x7)

	void NetMulticast_UpdateTradeablePriceMultiplierFactor(int32_t dataVersion, int32_t tradeablePriceMultiplierFactor); // Function ConZ.ConZEconomyManager.NetMulticast_UpdateTradeablePriceMultiplierFactor
	void NetMulticast_UpdateTradeableClassMapHelperOverrides(int32_t dataVersion, struct FTradeableClassDataOverrideReplicationHelper overrideUpdates); // Function ConZ.ConZEconomyManager.NetMulticast_UpdateTradeableClassMapHelperOverrides
	void NetMulticast_UpdateGoldPriceMasterMultiplier(int32_t dataVersion, float goldPriceMasterMultiplier); // Function ConZ.ConZEconomyManager.NetMulticast_UpdateGoldPriceMasterMultiplier
	void NetMulticast_UpdateDateVsGoldPriceMasterMultiplierMap(int32_t dataVersion, struct TArray<struct FDateTime> dates, struct TArray<float> multipliers); // Function ConZ.ConZEconomyManager.NetMulticast_UpdateDateVsGoldPriceMasterMultiplierMap
}; 



// Class ConZ.AnimNotify_CharacterActionMarker
// Size: 0x38(Inherited: 0x38) 
struct UAnimNotify_CharacterActionMarker : public UAnimNotify
{

}; 



// Class ConZ.AnimNotify_ConditionalPlayParticleEffectForItem
// Size: 0x90(Inherited: 0x38) 
struct UAnimNotify_ConditionalPlayParticleEffectForItem : public UAnimNotify
{
	struct UParticleSystem* PSTemplate;  // 0x38(0x8)
	struct FVector LocationOffset;  // 0x40(0xC)
	struct FRotator RotationOffset;  // 0x4C(0xC)
	struct FVector Scale;  // 0x58(0xC)
	char pad_100[28];  // 0x64(0x1C)
	char Attached : 1;  // 0x80(0x1)
	char pad_128_1 : 7;  // 0x80(0x1)
	char pad_129[4];  // 0x81(0x4)
	struct FName SocketName;  // 0x84(0x8)
	char pad_140[4];  // 0x8C(0x4)

	bool ShouldPlayParticleEffectForItem(struct AItem* Item); // Function ConZ.AnimNotify_ConditionalPlayParticleEffectForItem.ShouldPlayParticleEffectForItem
}; 



// Class ConZ.AnimNotify_FishingActionNotify
// Size: 0x40(Inherited: 0x38) 
struct UAnimNotify_FishingActionNotify : public UAnimNotify
{
	uint8_t  FishingActionNotifyType;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 



// Class ConZ.AnimNotify_SpawnDiarrheaEffects
// Size: 0x38(Inherited: 0x38) 
struct UAnimNotify_SpawnDiarrheaEffects : public UAnimNotify
{

}; 



// Class ConZ.ComplexAnimal2
// Size: 0xB00(Inherited: 0x980) 
struct AComplexAnimal2 : public AAnimal2
{
	float EnergyDepletionRate;  // 0x978(0x4)
	float HungerDepletionRate;  // 0x97C(0x4)
	float HungerDepletionRateWhenResting;  // 0x980(0x4)
	float EnergyRefillRate;  // 0x984(0x4)
	float HungerRefillRate;  // 0x988(0x4)
	float HealthRegenerationRate;  // 0x98C(0x4)
	float HealthDepletionRate;  // 0x990(0x4)
	struct FAnimalPaceSettings MovementPaceSettings;  // 0x994(0x10)
	struct FAnimalStationaryRotationRateSettings RotationRateSettings;  // 0x9A4(0x3C)
	struct FMulticastInlineDelegate OnActionChanged;  // 0x9E0(0x10)
	struct TArray<struct FChargeAttackData> ChargeAttacks;  // 0x9F0(0x10)
	struct TArray<struct FCloseRangeAttackData> CloseRangeAttacks;  // 0xA00(0x10)
	struct FTurnMontages TurnMonatges;  // 0xA10(0x10)
	struct FAnimalActionMontageData AnimalActions;  // 0xA20(0x18)
	float AttackRotationRate;  // 0xA38(0x4)
	float MinActionTime;  // 0xA3C(0x4)
	struct FGameplayTag HitReactTypeResting;  // 0xA40(0x8)
	struct FGameplayTag HitReactTypeIntimidate;  // 0xA48(0x8)
	uint16_t _hungerAndEnergyReplicated;  // 0xA58(0x2)
	char pad_2650[6];  // 0xA5A(0x6)
	struct FVector _lookAtPoint;  // 0xA60(0xC)
	char pad_2668[80];  // 0xA6C(0x50)
	float _maxLookUpAngle;  // 0xABC(0x4)
	float _maxLookRightAngle;  // 0xAC0(0x4)
	float _headMovementLerpSpeed;  // 0xAC4(0x4)
	char pad_2760[56];  // 0xAC8(0x38)

	void Wait(float Time); // Function ConZ.ComplexAnimal2.Wait
	float TurnTowardLocation(struct FVector Location); // Function ConZ.ComplexAnimal2.TurnTowardLocation
	float TurnTowardActor(struct AActor* foe); // Function ConZ.ComplexAnimal2.TurnTowardActor
	float TurnAwayFromActor(struct AActor* foe); // Function ConZ.ComplexAnimal2.TurnAwayFromActor
	float Turn(bool directionLeft); // Function ConZ.ComplexAnimal2.Turn
	void StopAction_Multicast(); // Function ConZ.ComplexAnimal2.StopAction_Multicast
	void StartAction_Multicast(struct FRepActionData newAction); // Function ConZ.ComplexAnimal2.StartAction_Multicast
	void Sit(float Time); // Function ConZ.ComplexAnimal2.Sit
	void Rest(float Time); // Function ConZ.ComplexAnimal2.Rest
	void ResetRotationRate(); // Function ConZ.ComplexAnimal2.ResetRotationRate
	bool PreformChargeAttack(int32_t attackIndex, float Time); // Function ConZ.ComplexAnimal2.PreformChargeAttack
	void OnRep_HungerAndEnergy(); // Function ConZ.ComplexAnimal2.OnRep_HungerAndEnergy
	void OnRep_ActionData(); // Function ConZ.ComplexAnimal2.OnRep_ActionData
	void NetMulticast_ForceSetAnimalRotation(struct FRotator NewRotation); // Function ConZ.ComplexAnimal2.NetMulticast_ForceSetAnimalRotation
	bool IsAttacking(); // Function ConZ.ComplexAnimal2.IsAttacking
	void Intimidate(float Time, struct AActor* foe); // Function ConZ.ComplexAnimal2.Intimidate
	struct FVector GetSpeed(); // Function ConZ.ComplexAnimal2.GetSpeed
	float GetAngularVelocity(); // Function ConZ.ComplexAnimal2.GetAngularVelocity
	void ForceRoattionRate(struct FRotator RotationRate); // Function ConZ.ComplexAnimal2.ForceRoattionRate
	void Eat(float Time); // Function ConZ.ComplexAnimal2.Eat
	bool ChargeAttackFoe(struct AActor* foe); // Function ConZ.ComplexAnimal2.ChargeAttackFoe
	void ChangeSpeed(float pace); // Function ConZ.ComplexAnimal2.ChangeSpeed
	void ChangePace(uint8_t  pace); // Function ConZ.ComplexAnimal2.ChangePace
	void Alert(float Time); // Function ConZ.ComplexAnimal2.Alert
}; 



// Class ConZ.AnimNotify_MagazineUpdateAmmunitionMeshes
// Size: 0x50(Inherited: 0x38) 
struct UAnimNotify_MagazineUpdateAmmunitionMeshes : public UAnimNotify
{
	char pad_56_1 : 7;  // 0x38(0x1)
	bool showReversed : 1;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)
	struct TArray<int32_t> ammoIndices;  // 0x40(0x10)

}; 



// Class ConZ.CharacterAction
// Size: 0xF8(Inherited: 0x28) 
struct UCharacterAction : public UObject
{
	char pad_40[48];  // 0x28(0x30)
	struct TArray<struct UCharacterActionDescription*> PreActionsDescriptions;  // 0x58(0x10)
	struct TArray<struct UCharacterActionDescription*> PostActionsDescriptions;  // 0x68(0x10)
	struct UCharacterAction* ParentAction;  // 0x78(0x8)
	struct TArray<struct UCharacterAction*> _preActions;  // 0x80(0x10)
	struct TArray<struct UCharacterAction*> _postActions;  // 0x90(0x10)
	struct UActionProgressWidget* _progressWidget;  // 0xA0(0x8)
	char pad_168[8];  // 0xA8(0x8)
	struct UCharacterActionDescription* _description;  // 0xB0(0x8)
	char pad_184[64];  // 0xB8(0x40)

	float PlayMontage(struct UAnimMontage* Montage, float PlayRate, struct FName& startSection, bool assignCallbacks); // Function ConZ.CharacterAction.PlayMontage
	void OnProgressWidgetFinished(); // Function ConZ.CharacterAction.OnProgressWidgetFinished
	void OnProgressWidgetCanceled(); // Function ConZ.CharacterAction.OnProgressWidgetCanceled
	void OnPreActionEnd(struct UCharacterAction* Action); // Function ConZ.CharacterAction.OnPreActionEnd
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.CharacterAction.OnMontageEnded
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.CharacterAction.OnMontageBlendingOutStarted
}; 



// Class ConZ.AnimNotify_SmokableItemEquip
// Size: 0x38(Inherited: 0x38) 
struct UAnimNotify_SmokableItemEquip : public UAnimNotify
{

}; 



// Class ConZ.CompanionCrowAnimInstance
// Size: 0x2D0(Inherited: 0x2C0) 
struct UCompanionCrowAnimInstance : public UAnimInstance
{
	char pad_704_1 : 7;  // 0x2C0(0x1)
	bool _isIdle : 1;  // 0x2B8(0x1)
	char pad_705_1 : 7;  // 0x2C1(0x1)
	bool _isFlyingOff : 1;  // 0x2B9(0x1)
	char pad_706_1 : 7;  // 0x2C2(0x1)
	bool _isCruising : 1;  // 0x2BA(0x1)
	char pad_707_1 : 7;  // 0x2C3(0x1)
	bool _isLanding : 1;  // 0x2BB(0x1)
	float _landedRatio;  // 0x2BC(0x4)
	float _speed;  // 0x2C0(0x4)
	float _prisonerSpeed;  // 0x2C4(0x4)

}; 



// Class ConZ.MeleeWeaponsSkill
// Size: 0x108(Inherited: 0x108) 
struct UMeleeWeaponsSkill : public UMeleeSkill
{

}; 



// Class ConZ.AnimNotify_SmokableItemSwitchMeshParent
// Size: 0x40(Inherited: 0x38) 
struct UAnimNotify_SmokableItemSwitchMeshParent : public UAnimNotify
{
	uint8_t  DesiredParentSocket;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 



// Class ConZ.InteractionGroupUserWidget
// Size: 0x280(Inherited: 0x260) 
struct UInteractionGroupUserWidget : public UUserWidget
{
	struct UTextBlock* _groupText;  // 0x260(0x8)
	struct UBorder* _groupBorder;  // 0x268(0x8)
	char pad_624[16];  // 0x270(0x10)

}; 



// Class ConZ.SharkAIController
// Size: 0x4F0(Inherited: 0x328) 
struct ASharkAIController : public AAIController
{
	float _sharkTurningSpeed;  // 0x328(0x4)
	float _minDistanceToMovementTarget;  // 0x32C(0x4)
	float _boundsInflation;  // 0x330(0x4)
	struct FVector _randomMovementExtent;  // 0x334(0xC)
	float _findPathBypassMultiplier;  // 0x340(0x4)
	int32_t _maxMovementAttemptsAllowed;  // 0x344(0x4)
	char pad_840[4];  // 0x348(0x4)
	float _maxTimePerDestinationMultiplier;  // 0x34C(0x4)
	char pad_848[8];  // 0x350(0x8)
	float _minDistanceBetweenTargetGeneratedPath;  // 0x358(0x4)
	float _surfaceOffset;  // 0x35C(0x4)
	float _movementRecoveryTurningSpeed;  // 0x360(0x4)
	float _movementRecoveryAcceleration;  // 0x364(0x4)
	float _movementRecoveryDeceleration;  // 0x368(0x4)
	float _aboveWaterRecoveryTurningSpeed;  // 0x36C(0x4)
	float _moveToTargetUpdatePeriod;  // 0x370(0x4)
	char pad_884[4];  // 0x374(0x4)
	float _minVictimDepth;  // 0x378(0x4)
	float _beginPursuitTimeMin;  // 0x37C(0x4)
	float _beginPursuitTimeMax;  // 0x380(0x4)
	char pad_900[4];  // 0x384(0x4)
	float _aggressiveBehaviorChance;  // 0x388(0x4)
	float _aggressiveBehaviorChanceWhenTargetBleeding;  // 0x38C(0x4)
	float _distanceToAdjustAttackAngle;  // 0x390(0x4)
	float _desiredAttackAngleDegrees;  // 0x394(0x4)
	char pad_920[4];  // 0x398(0x4)
	float _desiredAttackAngleTime;  // 0x39C(0x4)
	float _returnToWanderingTime;  // 0x3A0(0x4)
	char pad_932[4];  // 0x3A4(0x4)
	float _dealDamageTime;  // 0x3A8(0x4)
	char pad_940[4];  // 0x3AC(0x4)
	float _damagePerInterval;  // 0x3B0(0x4)
	char pad_948[4];  // 0x3B4(0x4)
	int32_t _numOfIntervals;  // 0x3B8(0x4)
	char pad_956[4];  // 0x3BC(0x4)
	float _startMovingAfterBiteTime;  // 0x3C0(0x4)
	char pad_964[12];  // 0x3C4(0xC)
	float _changeDirectionChance;  // 0x3D0(0x4)
	float _circlingAngleDegrees;  // 0x3D4(0x4)
	float _circlingDistanceMin;  // 0x3D8(0x4)
	float _circlingDistanceMax;  // 0x3DC(0x4)
	float _circlingAggressionCheckInterval;  // 0x3E0(0x4)
	char pad_996[4];  // 0x3E4(0x4)
	float _minDamageToReact;  // 0x3E8(0x4)
	float _fleeingDuration;  // 0x3EC(0x4)
	char pad_1008[80];  // 0x3F0(0x50)
	float _maxTimeAboveWater;  // 0x440(0x4)
	char pad_1092[4];  // 0x444(0x4)
	float _minDistanceToNextPrimaryTarget;  // 0x448(0x4)
	float _changePrimaryTargetTime;  // 0x44C(0x4)
	char pad_1104[16];  // 0x450(0x10)
	struct TMap<uint8_t , struct FFishStateParameters> _behaviorMap;  // 0x460(0x50)
	char pad_1200[56];  // 0x4B0(0x38)
	struct UGrappleActionParameters* _grappleActionParameter;  // 0x4E8(0x8)

	void SetReadyForNextPrimaryTarget(); // Function ConZ.SharkAIController.SetReadyForNextPrimaryTarget
}; 



// Class ConZ.AnimNotify_SmokableItemUnequip
// Size: 0x38(Inherited: 0x38) 
struct UAnimNotify_SmokableItemUnequip : public UAnimNotify
{

}; 



// Class ConZ.InventoryPanelWidget2
// Size: 0x260(Inherited: 0x260) 
struct UInventoryPanelWidget2 : public UUserWidget
{

}; 



// Class ConZ.CTFBase
// Size: 0x250(Inherited: 0x220) 
struct ACTFBase : public AActor
{
	struct USphereComponent* SphereComponent;  // 0x220(0x8)
	struct UStaticMeshComponent* Mesh;  // 0x228(0x8)
	struct TArray<struct UMaterialInstance*> TeamMaterials;  // 0x230(0x10)
	struct ACTFGameEvent* _gameEvent;  // 0x240(0x8)
	int32_t _team;  // 0x248(0x4)
	float _radius;  // 0x24C(0x4)

	void SphereOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function ConZ.CTFBase.SphereOverlap
	void OnRep_Team(); // Function ConZ.CTFBase.OnRep_Team
	void OnRep_Radius(); // Function ConZ.CTFBase.OnRep_Radius
}; 



// Class ConZ.PrisonerBodyCondition_HeavyInjuries
// Size: 0xE0(Inherited: 0xC0) 
struct UPrisonerBodyCondition_HeavyInjuries : public UPrisonerBodyCondition
{
	struct FFloatInterval _injuriesDamageRatioToExistVsConstitution;  // 0xC0(0x8)
	float _painSymptomOverallIntensity;  // 0xC8(0x4)
	float _painSymptomLimpingIntensity;  // 0xCC(0x4)
	UPrisonerBodySymptom_Pain* _painSymptomClass;  // 0xD0(0x8)
	struct UPrisonerBodySymptomCause_Pain* _painSymptomCause;  // 0xD8(0x8)

}; 



// Class ConZ.AnimNotify_VehicleDoorOpenOrClose
// Size: 0x38(Inherited: 0x38) 
struct UAnimNotify_VehicleDoorOpenOrClose : public UAnimNotify
{

}; 



// Class ConZ.AnimNotify_WaterPaddle
// Size: 0x60(Inherited: 0x38) 
struct UAnimNotify_WaterPaddle : public UAnimNotify
{
	struct UParticleSystem* ParticleSystem;  // 0x38(0x8)
	struct UAkAudioEvent* AudioEvent;  // 0x40(0x8)
	float VolumeMultiplier;  // 0x48(0x4)
	float PitchMultiplier;  // 0x4C(0x4)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool IsUnderwater : 1;  // 0x50(0x1)
	char pad_81_1 : 7;  // 0x51(0x1)
	bool IsAttached : 1;  // 0x51(0x1)
	char pad_82[2];  // 0x52(0x2)
	struct FName AttachPointName;  // 0x54(0x8)
	char pad_92_1 : 7;  // 0x5C(0x1)
	bool DebugMode : 1;  // 0x5C(0x1)
	char pad_93[3];  // 0x5D(0x3)

}; 



// Class ConZ.JournalObjectiveContainer
// Size: 0x340(Inherited: 0x260) 
struct UJournalObjectiveContainer : public UUserWidget
{
	struct UVerticalBox* _objectiveContainer;  // 0x260(0x8)
	struct UHorizontalBox* _rewardContainer;  // 0x268(0x8)
	struct UTextBlock* _headerNameText;  // 0x270(0x8)
	struct UTextBlock* _missionDescriptionText;  // 0x278(0x8)
	struct UImage* _missionBanner;  // 0x280(0x8)
	struct UTextBlock* _noDescriptionText;  // 0x288(0x8)
	struct UTextBlock* _noRewardsText;  // 0x290(0x8)
	struct UButton* _activateMissionButton;  // 0x298(0x8)
	struct UButton* _untrackMissionButton;  // 0x2A0(0x8)
	struct UButton* _resetMissionButton;  // 0x2A8(0x8)
	struct UButton* _restartMissionButton;  // 0x2B0(0x8)
	struct UOverlay* _activateButtonOverlay;  // 0x2B8(0x8)
	struct UOverlay* _untrackButtonOverlay;  // 0x2C0(0x8)
	struct UOverlay* _resetButtonOverlay;  // 0x2C8(0x8)
	struct UOverlay* _restartButtonOverlay;  // 0x2D0(0x8)
	float _objectiveItemBottomPadding;  // 0x2D8(0x4)
	float _objectiveItemFontSize;  // 0x2DC(0x4)
	char pad_736[16];  // 0x2E0(0x10)
	struct TMap<struct FString, struct TWeakObjectPtr<UObjectiveItemWidget>> _objectiveItemWidgets;  // 0x2F0(0x50)

}; 



// Class ConZ.AnimNotify_WeaponChamberBullet
// Size: 0x38(Inherited: 0x38) 
struct UAnimNotify_WeaponChamberBullet : public UAnimNotify
{

}; 



// Class ConZ.GameEventNotificationPanel
// Size: 0x2C0(Inherited: 0x260) 
struct UGameEventNotificationPanel : public UUserWidget
{
	char pad_608[8];  // 0x260(0x8)
	struct UBorder* _nextEventBox;  // 0x268(0x8)
	struct UTextBlock* _nextEventText;  // 0x270(0x8)
	struct UTextBlock* _nextEventCountdown;  // 0x278(0x8)
	struct UBorder* _eventCancelBox;  // 0x280(0x8)
	struct UTextBlock* _eventCancelTime;  // 0x288(0x8)
	struct UBorder* _eventTimeBox;  // 0x290(0x8)
	struct UTextBlock* _eventTimeText;  // 0x298(0x8)
	struct FLinearColor _nonAlertedColor;  // 0x2A0(0x10)
	struct FLinearColor _alertedColor;  // 0x2B0(0x10)

}; 



// Class ConZ.ConZGameMode
// Size: 0x950(Inherited: 0x308) 
struct AConZGameMode : public AGameMode
{
	char pad_776[96];  // 0x308(0x60)
	struct UDoorLockingRegistry* _doorLockingRegistry;  // 0x368(0x8)
	struct UVehicleServiceRegistry* _vehicleServiceRegistry;  // 0x370(0x8)
	APrisoner* _prisonerClassToSpawn;  // 0x378(0x8)
	ADrone* _droneClassToSpawn;  // 0x380(0x8)
	char pad_904[264];  // 0x388(0x108)
	AItemSpawningManager* _itemSpawningManagerClass;  // 0x490(0x8)
	struct AItemSpawningManager* _itemSpawningManager;  // 0x498(0x8)
	AItemVirtualizationManager* _itemVirtualizationManagerClass;  // 0x4A0(0x8)
	struct AItemVirtualizationManager* _itemVirtualizationManager;  // 0x4A8(0x8)
	AVehicleSpawningManager2* _vehicleSpawningManagerClass2;  // 0x4B0(0x8)
	struct AVehicleSpawningManager2* _vehicleSpawningManager2;  // 0x4B8(0x8)
	AReportingManager* _reportingManagerClass;  // 0x4C0(0x8)
	struct AReportingManager* _reportingManager;  // 0x4C8(0x8)
	ACharacterSpawningManager* _characterSpawningManagerClass;  // 0x4D0(0x8)
	struct ACharacterSpawningManager* _characterSpawningManager;  // 0x4D8(0x8)
	AGlobalAquaticLifeManager* _globalAquaticLifeManagerClass;  // 0x4E0(0x8)
	struct AGlobalAquaticLifeManager* _globalAquaticLifeManager;  // 0x4E8(0x8)
	AGlobalGuardedZoneManager* _globalGuardedZoneManagerClass;  // 0x4F0(0x8)
	struct AGlobalGuardedZoneManager* _globalGuardedZoneManager;  // 0x4F8(0x8)
	AAchievementsManagerServer* _achievementsManagerServerClass;  // 0x500(0x8)
	struct AAchievementsManagerServer* _achievementsManagerServer;  // 0x508(0x8)
	AMissionLevelManager* _missionLevelManagerClass;  // 0x510(0x8)
	struct AMissionLevelManager* _missionLevelManager;  // 0x518(0x8)
	AMissionScheduler* _missionSchedulerClass;  // 0x520(0x8)
	struct AMissionScheduler* _missionScheduler;  // 0x528(0x8)
	ASurvivalStatsHandler* _survivalStatsHandlerClass;  // 0x530(0x8)
	struct ASurvivalStatsHandler* _survivalStatsHandler;  // 0x538(0x8)
	AHeatSourceManager* _heatSourceManagerClass;  // 0x540(0x8)
	struct AHeatSourceManager* _heatSourceManager;  // 0x548(0x8)
	AConZBaseManager* _baseManagerClass;  // 0x550(0x8)
	struct AConZBaseManager* _baseManager;  // 0x558(0x8)
	struct URainCollectionManager* _rainCollectionManager;  // 0x560(0x8)
	ALadderMarkersReplicator* _ladderMarkersReplicatorClass;  // 0x568(0x8)
	struct ALadderMarkersReplicator* _ladderMarkersReplicator;  // 0x570(0x8)
	AEffectOverTimeDealer* _effectOverTimeDealerClass;  // 0x578(0x8)
	struct AEffectOverTimeDealer* _effectOverTimeDealer;  // 0x580(0x8)
	ANotificationsManager* _notificationManagerClass;  // 0x588(0x8)
	struct ANotificationsManager* _notificationManager;  // 0x590(0x8)
	AVoteSystemManager* _voteSystemManagerClass;  // 0x598(0x8)
	struct AVoteSystemManager* _voteSystemManager;  // 0x5A0(0x8)
	AServerAnalyticsManager* _serverAnalyticsManagerClass;  // 0x5A8(0x8)
	struct AServerAnalyticsManager* _serverAnalyticsManager;  // 0x5B0(0x8)
	AAIDetectionTimerHandler* _aiDetectionTimerHandlerClass;  // 0x5B8(0x8)
	ABCULockRegistry* _bcuLockRegistryClass;  // 0x5C0(0x8)
	struct ABCULockRegistry* _bcuLockRegistry;  // 0x5C8(0x8)
	struct UWorldDoorOwnershipManager* _worldDoorOwnershipManager;  // 0x5D0(0x8)
	struct AAIDetectionTimerHandler* _aiDetectionTimerHandler;  // 0x5D8(0x8)
	struct UDedicatedServerResponse* _serverResponse;  // 0x5E0(0x8)
	struct UChatSpamProtectionRules* _chatSpamProtectionRules;  // 0x5E8(0x8)
	struct TArray<struct UPrisonerSpawnEquipment*> _spawnEquipment;  // 0x5F0(0x10)
	struct FGameplayTag _spawnParameterTag_AerialSpawn;  // 0x600(0x8)
	struct FGameplayTag _spawnParameterTag_ColdClimate;  // 0x608(0x8)
	struct FGameplayTag _spawnParameterTag_SupporterPack1;  // 0x610(0x8)
	struct FGameplayTag _spawnParameterTag_Tournament;  // 0x618(0x8)
	float _maxSpawningAdjustmentDistance;  // 0x620(0x4)
	int32_t _spawningAdjustmentRadialIterations;  // 0x624(0x4)
	int32_t _spawningAdjustmentVerticalIterations;  // 0x628(0x4)
	int32_t _spawningAdjustmentCheckingFrequency;  // 0x62C(0x4)
	float _localChatDistance;  // 0x630(0x4)
	char pad_1588[796];  // 0x634(0x31C)

	void SendHUDMessageToAll(struct FString Message, bool beep); // Function ConZ.ConZGameMode.SendHUDMessageToAll
	bool KickPlayer(struct AConZPlayerController* Player, struct FString KickReason); // Function ConZ.ConZGameMode.KickPlayer
	struct AVehicleSpawningManager2* GetVehicleSpawningManager2(); // Function ConZ.ConZGameMode.GetVehicleSpawningManager2
	struct ASurvivalStatsHandler* GetSurvivalStatsHandler(); // Function ConZ.ConZGameMode.GetSurvivalStatsHandler
	struct AReportingManager* GetReportingManager(); // Function ConZ.ConZGameMode.GetReportingManager
	struct AMissionScheduler* GetMissionScheduler(); // Function ConZ.ConZGameMode.GetMissionScheduler
	struct AMissionLevelManager* GetMissionLevelManager(); // Function ConZ.ConZGameMode.GetMissionLevelManager
	struct ALadderMarkersReplicator* GetLadderMarkersReplicator(); // Function ConZ.ConZGameMode.GetLadderMarkersReplicator
	struct AItemVirtualizationManager* GetItemVirtualizationManager(); // Function ConZ.ConZGameMode.GetItemVirtualizationManager
	struct AItemSpawningManager* GetItemSpawningManager(); // Function ConZ.ConZGameMode.GetItemSpawningManager
	struct AHeatSourceManager* GetHeatSourceManager(); // Function ConZ.ConZGameMode.GetHeatSourceManager
	struct AGlobalGuardedZoneManager* GetGlobalGuardedZoneManager(); // Function ConZ.ConZGameMode.GetGlobalGuardedZoneManager
	struct AGlobalAquaticLifeManager* GetGlobalAquaticLifeManager(); // Function ConZ.ConZGameMode.GetGlobalAquaticLifeManager
	struct AEffectOverTimeDealer* GetEffectOverTimeDealer(); // Function ConZ.ConZGameMode.GetEffectOverTimeDealer
	struct ACharacterSpawningManager* GetCharacterSpawningManager(); // Function ConZ.ConZGameMode.GetCharacterSpawningManager
	struct AConZBaseManager* GetBaseManager(); // Function ConZ.ConZGameMode.GetBaseManager
	struct AAIDetectionTimerHandler* GetAIDetectionTimerHandler(); // Function ConZ.ConZGameMode.GetAIDetectionTimerHandler
	struct AAchievementsManagerServer* GetAchievementsManagerServer(); // Function ConZ.ConZGameMode.GetAchievementsManagerServer
}; 



// Class ConZ.InventoryContainer
// Size: 0x28(Inherited: 0x28) 
struct UInventoryContainer : public UInterface
{

}; 



// Class ConZ.EmptySlot
// Size: 0x268(Inherited: 0x260) 
struct UEmptySlot : public UUserWidget
{
	struct UImage* MainImage;  // 0x260(0x8)

}; 



// Class ConZ.AnimNotify_WeaponChamberBulletInternal
// Size: 0x38(Inherited: 0x38) 
struct UAnimNotify_WeaponChamberBulletInternal : public UAnimNotify
{

}; 



// Class ConZ.ConZVehicleSpringArmComponent
// Size: 0x2E0(Inherited: 0x290) 
struct UConZVehicleSpringArmComponent : public USpringArmComponent
{
	float _ownerAccelerationDirectionInterpSpeed;  // 0x290(0x4)
	struct FVector _maxCameraOffset;  // 0x294(0xC)
	struct FVector _cameraOffsetInterpSpeed;  // 0x2A0(0xC)
	float _maxCameraPitch;  // 0x2AC(0x4)
	char pad_688[48];  // 0x2B0(0x30)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_PerformanceScoreModifier
// Size: 0x30(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_PerformanceScoreModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{

}; 



// Class ConZ.AnimNotify_WeaponUpdateAmmunitionMeshes
// Size: 0x50(Inherited: 0x38) 
struct UAnimNotify_WeaponUpdateAmmunitionMeshes : public UAnimNotify
{
	char pad_56_1 : 7;  // 0x38(0x1)
	bool showReversed : 1;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)
	struct TArray<int32_t> ammoIndices;  // 0x40(0x10)

}; 



// Class ConZ.CharacterCreationMenu
// Size: 0x4E0(Inherited: 0x260) 
struct UCharacterCreationMenu : public UBaseMenu
{
	struct UCanvasPanel* _canvasMain;  // 0x260(0x8)
	struct UCanvasPanel* _canvasContent;  // 0x268(0x8)
	struct UOverlay* _overlayMenu;  // 0x270(0x8)
	char pad_632[8];  // 0x278(0x8)
	struct UWidgetSwitcher* _widgetSwitcher;  // 0x280(0x8)
	struct UEditableTextBox* _editableTextNameCharacterPanel;  // 0x288(0x8)
	struct UBorder* _borderNameCharacterPanel;  // 0x290(0x8)
	struct UCCNonSelectableTextWidget* _availableAttributePointsDisplay;  // 0x298(0x8)
	struct UTrashNamedSliderWidget* _sliderStrength;  // 0x2A0(0x8)
	struct UTrashNamedSliderWidget* _sliderConstitution;  // 0x2A8(0x8)
	struct UTrashNamedSliderWidget* _sliderDexterity;  // 0x2B0(0x8)
	struct UTrashNamedSliderWidget* _sliderIntelligence;  // 0x2B8(0x8)
	struct UTrashNamedCarouselWidget* _carouselGender;  // 0x2C0(0x8)
	struct UTrashNamedSliderWidget* _sliderHead;  // 0x2C8(0x8)
	struct UCCGameUpgradeConditionDisplayWidget* _appearanceUpgradeConditionDisplay;  // 0x2D0(0x8)
	struct UTrashNamedSliderWidget* _sliderAge;  // 0x2D8(0x8)
	struct UTrashNamedCarouselWidget* _carouselTattoos;  // 0x2E0(0x8)
	struct UTrashNamedSliderWidget* _sliderTattooStyle;  // 0x2E8(0x8)
	struct UCCGameUpgradeConditionDisplayWidget* _tattooUpgradeConditionDisplay;  // 0x2F0(0x8)
	struct UTrashNamedCarouselWidget* _carouselConcealedMode;  // 0x2F8(0x8)
	struct UTrashNamedSliderWidget* _sliderPenisBreastSize;  // 0x300(0x8)
	struct UConZStandardButton* _buttonRandomizeAttributes;  // 0x308(0x8)
	struct UConZStandardButton* _buttonCancelToMainMenu;  // 0x310(0x8)
	struct UConZStandardButton* _buttonNextToFace;  // 0x318(0x8)
	struct UOverlay* _overlayAttributeConfirmation;  // 0x320(0x8)
	struct UConZStandardButton* _buttonCancelCharacter;  // 0x328(0x8)
	struct UConZStandardButton* _buttonContinueCharacter;  // 0x330(0x8)
	struct UEditableTextBox* _editableTextNameFacePanel;  // 0x338(0x8)
	struct UBorder* _borderNameFacePanel;  // 0x340(0x8)
	struct UConZStandardButton* _buttonRandomizeFace;  // 0x348(0x8)
	struct UConZStandardButton* _buttonBackToCharacter;  // 0x350(0x8)
	struct UConZStandardButton* _buttonNextToSkills;  // 0x358(0x8)
	struct UTrashNamedSliderWidget* _sliderFaceType;  // 0x360(0x8)
	struct UPresetColorPicker* _presetColorPickerSkinTone;  // 0x368(0x8)
	struct UTrashNamedSliderWidget* _sliderHairStyle;  // 0x370(0x8)
	struct UCCGameUpgradeConditionDisplayWidget* _hairStyleUpgradeConditionDisplay;  // 0x378(0x8)
	struct UPresetColorPicker* _presetColorPickerHairColor;  // 0x380(0x8)
	struct UTrashNamedSliderWidget* _sliderFacialHairStyle;  // 0x388(0x8)
	struct UCCGameUpgradeConditionDisplayWidget* _facialHairStyleUpgradeConditionDisplay;  // 0x390(0x8)
	struct UPresetColorPicker* _presetColorPickerEyeColor;  // 0x398(0x8)
	struct UTrashNamedSliderWidget* _sliderIrisType;  // 0x3A0(0x8)
	struct UEditableTextBox* _editableTextNameSkillsPanel;  // 0x3A8(0x8)
	struct UBorder* _borderNameSkillsPanel;  // 0x3B0(0x8)
	struct UCCNonSelectableTextWidget* _attributeDisplayConstitution;  // 0x3B8(0x8)
	struct UCCNonSelectableTextWidget* _attributeDisplayDexterity;  // 0x3C0(0x8)
	struct UCCNonSelectableTextWidget* _attributeDisplayIntelligence;  // 0x3C8(0x8)
	struct UCCNonSelectableTextWidget* _attributeDisplayStrength;  // 0x3D0(0x8)
	struct UCCNonSelectableTextWidget* _skillPointDisplayConstitution;  // 0x3D8(0x8)
	struct UCCNonSelectableTextWidget* _skillPointDisplayDexterity;  // 0x3E0(0x8)
	struct UCCNonSelectableTextWidget* _skillPointDisplayIntelligence;  // 0x3E8(0x8)
	struct UCCNonSelectableTextWidget* _skillPointDisplayStrength;  // 0x3F0(0x8)
	struct UVerticalBox* _skillBoxStrength;  // 0x3F8(0x8)
	struct UVerticalBox* _skillBoxConstitution;  // 0x400(0x8)
	struct UVerticalBox* _skillBoxDexterity;  // 0x408(0x8)
	struct UVerticalBox* _skillBoxIntelligence;  // 0x410(0x8)
	struct UConZStandardButton* _buttonRandomizeSkills;  // 0x418(0x8)
	struct UTextBlock* _textNameAlreadyTaken;  // 0x420(0x8)
	struct UConZStandardButton* _buttonBackToFace;  // 0x428(0x8)
	struct UConZStandardButton* _buttonSwitchToCriminalRecord;  // 0x430(0x8)
	struct UScrollBox* _faceOptionsScrollbox;  // 0x438(0x8)
	struct UOverlay* _overlaySkillConfirmation;  // 0x440(0x8)
	struct UConZStandardButton* _buttonCancelSkills;  // 0x448(0x8)
	struct UConZStandardButton* _buttonContinueSkills;  // 0x450(0x8)
	struct UCriminalRecord* _criminalRecord;  // 0x458(0x8)
	struct UVerticalBox* _errorDialogPanel;  // 0x460(0x8)
	struct TArray<struct FCCNonImplementedSkill> _nonImplementedSkills;  // 0x468(0x10)
	struct FLinearColor _pointDisplayAvailableColor;  // 0x478(0x10)
	struct FLinearColor _pointDisplayDepletedColor;  // 0x488(0x10)
	UCCSkillSliderWidget* _skillSliderClass;  // 0x498(0x8)
	char pad_1184[64];  // 0x4A0(0x40)

	void StartGame(); // Function ConZ.CharacterCreationMenu.StartGame
	void OnUserProfileCreated(); // Function ConZ.CharacterCreationMenu.OnUserProfileCreated
	void OnTextNameCommittedInSkillsPanel(struct FText& NewValue, char ETextCommit CommitMethod); // Function ConZ.CharacterCreationMenu.OnTextNameCommittedInSkillsPanel
	void OnTextNameCommittedInFacePanel(struct FText& NewValue, char ETextCommit CommitMethod); // Function ConZ.CharacterCreationMenu.OnTextNameCommittedInFacePanel
	void OnTextNameCommittedInCharacterPanel(struct FText& NewValue, char ETextCommit CommitMethod); // Function ConZ.CharacterCreationMenu.OnTextNameCommittedInCharacterPanel
	void OnTextNameChanged(struct FText& Text); // Function ConZ.CharacterCreationMenu.OnTextNameChanged
	void OnSwitchToCriminalRecordClicked(); // Function ConZ.CharacterCreationMenu.OnSwitchToCriminalRecordClicked
	void OnRandomizeSkillsClicked(); // Function ConZ.CharacterCreationMenu.OnRandomizeSkillsClicked
	void OnRandomizeFaceClicked(); // Function ConZ.CharacterCreationMenu.OnRandomizeFaceClicked
	void OnRandomizeAttributesClicked(); // Function ConZ.CharacterCreationMenu.OnRandomizeAttributesClicked
	void OnNextToSkillsClicked(); // Function ConZ.CharacterCreationMenu.OnNextToSkillsClicked
	void OnNextToFaceClicked(); // Function ConZ.CharacterCreationMenu.OnNextToFaceClicked
	void OnContinueClickedInSkillsConfirmationPanel(); // Function ConZ.CharacterCreationMenu.OnContinueClickedInSkillsConfirmationPanel
	void OnContinueClickedInCharacterConfirmationPanel(); // Function ConZ.CharacterCreationMenu.OnContinueClickedInCharacterConfirmationPanel
	void OnCancelToMainMenuClicked(); // Function ConZ.CharacterCreationMenu.OnCancelToMainMenuClicked
	void OnCancelClickedInSkillsConfirmationPanel(); // Function ConZ.CharacterCreationMenu.OnCancelClickedInSkillsConfirmationPanel
	void OnCancelClickedInCharacterConfirmationPanel(); // Function ConZ.CharacterCreationMenu.OnCancelClickedInCharacterConfirmationPanel
	void OnBackToFaceClicked(); // Function ConZ.CharacterCreationMenu.OnBackToFaceClicked
	void OnBackToCharacterClicked(); // Function ConZ.CharacterCreationMenu.OnBackToCharacterClicked
	void HandleSkillSliderValueChanged(struct UCCSkillSliderWidget* Slider, uint8_t  Attribute); // Function ConZ.CharacterCreationMenu.HandleSkillSliderValueChanged
	void CreateUserProfile(); // Function ConZ.CharacterCreationMenu.CreateUserProfile
}; 



// Class ConZ.FueledHeatSource
// Size: 0x220(Inherited: 0x28) 
struct UFueledHeatSource : public UObject
{
	char pad_40[8];  // 0x28(0x8)
	struct FHeatSourceParameters _heatSourceParams;  // 0x30(0x24)
	char pad_84[4];  // 0x54(0x4)
	struct UStaticMeshComponent* _interactionHitComponent;  // 0x58(0x8)
	char pad_96[8];  // 0x60(0x8)
	struct UParticleSystemComponent* _fireParticlesComponent;  // 0x68(0x8)
	struct UNiagaraComponent* _niagaraFireParticlesComponent;  // 0x70(0x8)
	struct TArray<struct FParameterInt32> _particleParametersInt32;  // 0x78(0x10)
	struct TArray<struct FParameterFloat> _particleParametersFloat;  // 0x88(0x10)
	struct TArray<struct FParameterVector> _particleParametersVector;  // 0x98(0x10)
	struct TArray<struct FParameterVector4> _particleParametersVector4;  // 0xA8(0x10)
	struct UPointLightComponent* _fireLightComponent;  // 0xB8(0x8)
	float _maxFireLightIntensity;  // 0xC0(0x4)
	char pad_196[4];  // 0xC4(0x4)
	struct UAkAudioEvent* _startBurningAudioEvent;  // 0xC8(0x8)
	struct UAkAudioEvent* _stopBurningAudioEvent;  // 0xD0(0x8)
	struct UAkComponent* _fireAudioComponent;  // 0xD8(0x8)
	struct FTransform _fireTransform;  // 0xE0(0x30)
	char pad_272[8];  // 0x110(0x8)
	struct UStaticMeshComponent* _meshComponent;  // 0x118(0x8)
	struct TArray<struct UStaticMesh*> _swapMeshes;  // 0x120(0x10)
	int32_t _materialSwitchIndex;  // 0x130(0x4)
	char pad_308[4];  // 0x134(0x4)
	struct UMaterialInterface* _litMaterial;  // 0x138(0x8)
	struct UMaterialInterface* _unlitMaterial;  // 0x140(0x8)
	char pad_328[8];  // 0x148(0x8)
	struct FTransform _meshTransform;  // 0x150(0x30)
	char pad_384[4];  // 0x180(0x4)
	float _fireDamageProcessingPeriod;  // 0x184(0x4)
	char pad_392[4];  // 0x188(0x4)
	float _fireBaseDamageToItemsPerSecond;  // 0x18C(0x4)
	uint16_t _repTemperature;  // 0x190(0x2)
	char pad_402[6];  // 0x192(0x6)
	char _isAvailableForCooking;  // 0x198(0x1)
	char pad_409[11];  // 0x199(0xB)
	float _temperatureReplicationInterval;  // 0x1A4(0x4)
	char pad_424[4];  // 0x1A8(0x4)
	float _temperatureReplicationRadius;  // 0x1AC(0x4)
	char pad_432[112];  // 0x1B0(0x70)

	void OnRep_Temperature(); // Function ConZ.FueledHeatSource.OnRep_Temperature
}; 



// Class ConZ.NameableItemComponent
// Size: 0x110(Inherited: 0xC8) 
struct UNameableItemComponent : public UItemComponent
{
	char pad_200[32];  // 0xC8(0x20)
	struct FString _name;  // 0xE8(0x10)
	struct TWeakObjectPtr<UItemStatusWidget> _nameWidget;  // 0xF8(0x8)
	struct TWeakObjectPtr<UChangeTextWidget> _editNameWidget;  // 0x100(0x8)
	char pad_264[8];  // 0x108(0x8)

	void OnRep_Name(); // Function ConZ.NameableItemComponent.OnRep_Name
	void OnLocalPrisonerPanelsClosed(); // Function ConZ.NameableItemComponent.OnLocalPrisonerPanelsClosed
	void OnLocalPrisonerHoveredActorChanged(struct AActor* hoveredActor); // Function ConZ.NameableItemComponent.OnLocalPrisonerHoveredActorChanged
	void OnEditTextWidgetTextAccepted(struct APrisoner* User, struct FText& Text); // Function ConZ.NameableItemComponent.OnEditTextWidgetTextAccepted
}; 



// Class ConZ.AnimNotifyState_Fade
// Size: 0x50(Inherited: 0x30) 
struct UAnimNotifyState_Fade : public UAnimNotifyState
{
	float _fadeOutRatio;  // 0x30(0x4)
	float _fadeInRatio;  // 0x34(0x4)
	uint8_t  _forAction;  // 0x38(0x1)
	char pad_57[23];  // 0x39(0x17)

}; 



// Class ConZ.CustomZoneSettingsRegion
// Size: 0x3B0(Inherited: 0x260) 
struct UCustomZoneSettingsRegion : public UUserWidget
{
	char pad_608[96];  // 0x260(0x60)
	struct UBorder* _border;  // 0x2C0(0x8)
	struct UTextBlock* _regionName;  // 0x2C8(0x8)
	struct UTextBlock* _regionData;  // 0x2D0(0x8)
	struct UButton* _buttonIncreasePriority;  // 0x2D8(0x8)
	struct UButton* _buttonDecreasePriority;  // 0x2E0(0x8)
	struct UButton* _buttonRemove;  // 0x2E8(0x8)
	struct FLinearColor _unhighlightedColor;  // 0x2F0(0x10)
	struct FLinearColor _highlightedColor;  // 0x300(0x10)
	struct FLinearColor _defaultZoneUnmodifiedUnhighlightedColor;  // 0x310(0x10)
	struct FLinearColor _defaultZoneUnmodifiedHighlightedColor;  // 0x320(0x10)
	struct FLinearColor _defaultZoneModifiedUnhighlightedColor;  // 0x330(0x10)
	struct FLinearColor _defaultZoneModifiedHighlightedColor;  // 0x340(0x10)
	struct FLinearColor _defaultZoneDeletedUnhighlightedColor;  // 0x350(0x10)
	struct FLinearColor _defaultZoneDeletedHighlightedColor;  // 0x360(0x10)
	char pad_880[64];  // 0x370(0x40)

	void HandleRemoveButtonClicked(); // Function ConZ.CustomZoneSettingsRegion.HandleRemoveButtonClicked
	void HandleIncreasePriorityButtonClicked(); // Function ConZ.CustomZoneSettingsRegion.HandleIncreasePriorityButtonClicked
	void HandleDecreasePriorityButtonClicked(); // Function ConZ.CustomZoneSettingsRegion.HandleDecreasePriorityButtonClicked
	uint8_t  GetDefaultZoneState(); // Function ConZ.CustomZoneSettingsRegion.GetDefaultZoneState
}; 



// Class ConZ.FamePointDebugComponent
// Size: 0xC8(Inherited: 0xB0) 
struct UFamePointDebugComponent : public UActorComponent
{
	UFamePointDebugWidget* _widgetClass;  // 0xB0(0x8)
	struct UFamePointDebugWidget* _widget;  // 0xB8(0x8)
	float _famePoints;  // 0xC0(0x4)
	char pad_196[4];  // 0xC4(0x4)

	void OnRep_FamePoints(); // Function ConZ.FamePointDebugComponent.OnRep_FamePoints
}; 



// Class ConZ.VoteTopic_SetWeather
// Size: 0x50(Inherited: 0x48) 
struct UVoteTopic_SetWeather : public UVoteTopic
{
	char pad_72[8];  // 0x48(0x8)

}; 



// Class ConZ.PrisonerBodyEffectUIData_ExhaustionChange
// Size: 0x70(Inherited: 0x38) 
struct UPrisonerBodyEffectUIData_ExhaustionChange : public UPrisonerBodyEffectUIData
{
	char pad_56[8];  // 0x38(0x8)
	struct FText _name;  // 0x40(0x18)
	struct FText _suffix;  // 0x58(0x18)

}; 



// Class ConZ.AnimNotifyState_IgnoreUsingHandCorrections
// Size: 0x38(Inherited: 0x30) 
struct UAnimNotifyState_IgnoreUsingHandCorrections : public UAnimNotifyState
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.ProjectileExplosiveArrow
// Size: 0x478(Inherited: 0x478) 
struct AProjectileExplosiveArrow : public AProjectileArrow
{

}; 



// Class ConZ.AnimNotifyState_Melee
// Size: 0x70(Inherited: 0x30) 
struct UAnimNotifyState_Melee : public UAnimNotifyState
{
	struct FGameplayTag _attackCapsuleAttachment;  // 0x30(0x8)
	float _damageMultiplier;  // 0x38(0x4)
	uint8_t  _hitSeverity;  // 0x3C(0x1)
	char pad_61_1 : 7;  // 0x3D(0x1)
	bool _stopOnHit : 1;  // 0x3D(0x1)
	char pad_62_1 : 7;  // 0x3E(0x1)
	bool _ignoreLandscape : 1;  // 0x3E(0x1)
	uint8_t  _attackType;  // 0x3F(0x1)
	struct FName _hitDetectionMarkersRootBoneParentName;  // 0x40(0x8)
	struct TArray<struct FMeleeHitDetectionMarker> _hitDetectionMarkers;  // 0x48(0x10)
	int32_t _hitDetectionSamplingRate;  // 0x58(0x4)
	char pad_92[20];  // 0x5C(0x14)

}; 



// Class ConZ.GhostTrailComponent
// Size: 0xB0(Inherited: 0xB0) 
struct UGhostTrailComponent : public UActorComponent
{

	void SetTrailActive(bool Active); // Function ConZ.GhostTrailComponent.SetTrailActive
	bool GetTrailActive(); // Function ConZ.GhostTrailComponent.GetTrailActive
}; 



// Class ConZ.PrisonerBodySimulationUIData
// Size: 0x58(Inherited: 0x28) 
struct UPrisonerBodySimulationUIData : public UObject
{
	char pad_40[48];  // 0x28(0x30)

}; 



// Class ConZ.AnimNotifyState_PaniniOverride
// Size: 0x30(Inherited: 0x30) 
struct UAnimNotifyState_PaniniOverride : public UAnimNotifyState
{

}; 



// Class ConZ.AnimNotifyState_PhysicalAnimation
// Size: 0x60(Inherited: 0x30) 
struct UAnimNotifyState_PhysicalAnimation : public UAnimNotifyState
{
	char pad_48_1 : 7;  // 0x30(0x1)
	bool GotoRagdollOnEnd : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	struct FName BodyProfileName;  // 0x34(0x8)
	struct FName ConstraintProfileName;  // 0x3C(0x8)
	struct FName BoneName;  // 0x44(0x8)
	struct FName StrengthBlendCurveName;  // 0x4C(0x8)
	struct FName PhysicsBlendCurveName;  // 0x54(0x8)
	char pad_92[4];  // 0x5C(0x4)

}; 



// Class ConZ.PrisonerActionLoadAmmoIntoMagazine
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionLoadAmmoIntoMagazine : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)
	struct UItemActionSequenceLoadMagazine* _itemActionSequence;  // 0x110(0x8)

}; 



// Class ConZ.AnimNotifyState_PlaySoundOnOwnerRanged
// Size: 0x40(Inherited: 0x30) 
struct UAnimNotifyState_PlaySoundOnOwnerRanged : public UAnimNotifyState
{
	struct UAkAudioEvent* BeginAudioEvent;  // 0x30(0x8)
	struct UAkAudioEvent* EndAudioEvent;  // 0x38(0x8)

}; 



// Class ConZ.PrisonerActionRemoveWeaponAttachmentDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionRemoveWeaponAttachmentDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.PrisonerActionIgniteItem
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionIgniteItem : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.AquaticLifeSpawningVolume
// Size: 0x2A8(Inherited: 0x258) 
struct AAquaticLifeSpawningVolume : public AVolume
{
	uint8_t  _waterZoneType;  // 0x258(0x1)
	char pad_601[7];  // 0x259(0x7)
	struct UFishSpeciesPreset* _fishSpeciesPreset;  // 0x260(0x8)
	struct UFishSpawningPreset* _fishSpawningPreset;  // 0x268(0x8)
	float _requiredDepthForSpawning;  // 0x270(0x4)
	float _fishSchoolManagerSpawningExtent;  // 0x274(0x4)
	int32_t _maxSchoolsPerFishSchoolManager;  // 0x278(0x4)
	float _fishingZoneIndicatorMinSpawnTime;  // 0x27C(0x4)
	float _fishingZoneIndicatorMaxSpawnTime;  // 0x280(0x4)
	float _fishingZoneIndicatorMinLifetime;  // 0x284(0x4)
	float _fishingZoneIndicatorMaxLifetime;  // 0x288(0x4)
	int32_t _maxFishingZoneIndicatorPerPlayer;  // 0x28C(0x4)
	float _fishingZoneIndicatorMinSpawningExtent;  // 0x290(0x4)
	float _fishingZoneIndicatorMaxSpawningExtent;  // 0x294(0x4)
	float _fishingZoneIndicatorMinRadius;  // 0x298(0x4)
	float _fishingZoneIndicatorMaxRadius;  // 0x29C(0x4)
	float _requiredDepthForFishingIndicator;  // 0x2A0(0x4)
	char pad_676[4];  // 0x2A4(0x4)

}; 



// Class ConZ.RecastNavMesh_SmallAnimals
// Size: 0x4D8(Inherited: 0x4D8) 
struct ARecastNavMesh_SmallAnimals : public ARecastNavMesh
{

}; 



// Class ConZ.SphereMotionTriggerComponent
// Size: 0x540(Inherited: 0x520) 
struct USphereMotionTriggerComponent : public UMotionTriggerComponent
{
	struct USphereComponent* SphereCollisionComponent;  // 0x518(0x8)
	struct UStaticMeshComponent* VisualizationMeshComponent;  // 0x520(0x8)
	float _triggerRadius;  // 0x528(0x4)
	struct UStaticMesh* _visualizationMesh;  // 0x530(0x8)
	char pad_1340[4];  // 0x53C(0x4)

	void SphereComponent_OnComponentEndOverlap(struct UPrimitiveComponent* activatedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function ConZ.SphereMotionTriggerComponent.SphereComponent_OnComponentEndOverlap
	void SphereComponent_OnComponentBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function ConZ.SphereMotionTriggerComponent.SphereComponent_OnComponentBeginOverlap
}; 



// Class ConZ.VehicleBaseMountSlot
// Size: 0x140(Inherited: 0x28) 
struct UVehicleBaseMountSlot : public UObject
{
	char pad_40[8];  // 0x28(0x8)
	struct UVehicleAttachment* AttachmentOwner;  // 0x30(0x8)
	struct FName MountSocketName;  // 0x38(0x8)
	struct FName MountedCollisionShapeName;  // 0x40(0x8)
	uint8_t  Type;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	struct UPhysicalMaterial* InteractionMaterial;  // 0x50(0x8)
	UAnimInstance* MountedAnimInstanceClass;  // 0x58(0x8)
	struct UAnimSequenceBase* MountedAnimation;  // 0x60(0x8)
	struct UBlendSpace* MountedBlendspace;  // 0x68(0x8)
	struct FPrisonerRestingParameters DefaultPrisonerRestingParameters;  // 0x70(0x60)
	struct FGameplayTag SlotId;  // 0xD0(0x8)
	struct UObject* _mountee;  // 0xD8(0x8)
	struct UObject* _reservee;  // 0xE0(0x8)
	char pad_232[8];  // 0xE8(0x8)
	UVehicleWeaponAimingParameters* _weaponAimingParametersClass;  // 0xF0(0x8)
	float _forceUnmountAngle;  // 0xF8(0x4)
	char pad_252_1 : 7;  // 0xFC(0x1)
	bool _isReachableFromSky : 1;  // 0xFC(0x1)
	char pad_253_1 : 7;  // 0xFD(0x1)
	bool _shouldHideAttachedItems : 1;  // 0xFD(0x1)
	char pad_254[2];  // 0xFE(0x2)
	struct FVector _prisonerViewpointOffset;  // 0x100(0xC)
	struct FVector _prisonerFeetOffset;  // 0x10C(0xC)
	struct TArray<struct UExternalMountPath*> _externalMountPaths;  // 0x118(0x10)
	struct TArray<struct UInternalMountPath*> _internalMountPaths;  // 0x128(0x10)
	char pad_312[8];  // 0x138(0x8)

	void OnRep_AttachmentOwner(struct UVehicleAttachment* oldAttachmentOwner); // Function ConZ.VehicleBaseMountSlot.OnRep_AttachmentOwner
}; 



// Class ConZ.RangedWeaponsSkill
// Size: 0xF0(Inherited: 0xB0) 
struct URangedWeaponsSkill : public UStrengthSkill
{
	char pad_176[16];  // 0xB0(0x10)
	float _clearMalfunctionBadRound;  // 0xC0(0x4)
	float _clearMalfunctionStovePipe;  // 0xC4(0x4)
	float _clearMalfunctionRoundNotLoaded;  // 0xC8(0x4)
	float _clearMalfunctionDoubleFeed;  // 0xCC(0x4)
	float _clearMalfunctionStuckBullet;  // 0xD0(0x4)
	float _clearMalfunctionClipPartiallyEjected;  // 0xD4(0x4)
	struct FRangedWeaponSkillParametersPerSkillLevel NoSkillParameters;  // 0xD8(0x4)
	struct FRangedWeaponSkillParametersPerSkillLevel BasicSkillParameters;  // 0xDC(0x4)
	struct FRangedWeaponSkillParametersPerSkillLevel MediumSkillParameters;  // 0xE0(0x4)
	struct FRangedWeaponSkillParametersPerSkillLevel AdvancedSkillParameters;  // 0xE4(0x4)
	struct FRangedWeaponSkillParametersPerSkillLevel AboveAdvancedSkillParameters;  // 0xE8(0x4)
	char pad_236[4];  // 0xEC(0x4)

}; 



// Class ConZ.DcxWheeledVehicleEffectsComponent
// Size: 0x128(Inherited: 0xB0) 
struct UDcxWheeledVehicleEffectsComponent : public UActorComponent
{
	float _soundCullDistance;  // 0xB0(0x4)
	char pad_180[4];  // 0xB4(0x4)
	struct UAkAudioEvent* _chassisStartedMovingAudioEvent;  // 0xB8(0x8)
	struct UAkAudioEvent* _chassisStoppedMovingAudioEvent;  // 0xC0(0x8)
	float _speedOfSoundMultiplerForDoppler;  // 0xC8(0x4)
	char pad_204[4];  // 0xCC(0x4)
	struct UTireToSurfaceAudioData* _tireToSurfaceAudioData;  // 0xD0(0x8)
	int32_t _numAudioObjectsForTires;  // 0xD8(0x4)
	char pad_220[36];  // 0xDC(0x24)
	float _tireEffectUpdateRange;  // 0x100(0x4)
	char pad_260[4];  // 0x104(0x4)
	struct TArray<struct FDcxWheeledVehicleTireEffectProperties> _tireEffectProperties;  // 0x108(0x10)
	char pad_280[16];  // 0x118(0x10)

}; 



// Class ConZ.FoodItemEntitySetup
// Size: 0x88(Inherited: 0x88) 
struct UFoodItemEntitySetup : public UItemEntitySetup
{

}; 



// Class ConZ.CharacterActionDescription
// Size: 0x38(Inherited: 0x28) 
struct UCharacterActionDescription : public UObject
{
	char pad_40[16];  // 0x28(0x10)

}; 



// Class ConZ.PrisonerAnimInstance_PrisonerCreation
// Size: 0x2E0(Inherited: 0x2C0) 
struct UPrisonerAnimInstance_PrisonerCreation : public UAnimInstance
{
	uint8_t  _gender;  // 0x2B8(0x1)
	char pad_705_1 : 7;  // 0x2C1(0x1)
	bool _isCameraFocusedOnFace : 1;  // 0x2B9(0x1)
	struct UAnimMontage* _femaleCloseUpIdle;  // 0x2C0(0x8)
	char pad_714[22];  // 0x2CA(0x16)

}; 



// Class ConZ.ArcherySkill
// Size: 0x158(Inherited: 0xF0) 
struct UArcherySkill : public URangedWeaponsSkill
{
	float _drawWeightNoSkillValue;  // 0xF0(0x4)
	float _drawWeightBasicSkillValue;  // 0xF4(0x4)
	float _drawWeightMediumSkillValue;  // 0xF8(0x4)
	float _drawWeightAdvancedSkillValue;  // 0xFC(0x4)
	float _drawWeightAboveAvancedSkillValue;  // 0x100(0x4)
	float _holdTimeInFullDrawNoSkillValue;  // 0x104(0x4)
	float _holdTimeInFullDrawBasicSkillValue;  // 0x108(0x4)
	float _holdTimeInFullDrawMediumSkillValue;  // 0x10C(0x4)
	float _holdTimeInFullDrawAdvancedSkillValue;  // 0x110(0x4)
	float _holdTimeInFullDrawAboveAvancedSkillValue;  // 0x114(0x4)
	float _armsShakeMultiplierNoSkillValue;  // 0x118(0x4)
	float _armsShakeMultiplierBasicSkillValue;  // 0x11C(0x4)
	float _armsShakeMultiplierMediumSkillValue;  // 0x120(0x4)
	float _armsShakeMultiplierAdvancedSkillValue;  // 0x124(0x4)
	float _armsShakeMultiplierAboveAvancedSkillValue;  // 0x128(0x4)
	float _tuneBowDurationNoSkillValue;  // 0x12C(0x4)
	float _tuneBowDurationBasicSkillValue;  // 0x130(0x4)
	float _tuneBowDurationMediumSkillValue;  // 0x134(0x4)
	float _tuneBowDurationAdvancedSkillValue;  // 0x138(0x4)
	float _tuneBowDurationAboveAvancedSkillValue;  // 0x13C(0x4)
	float _drawCenterDotExtraTimeLimitNoSkillValue;  // 0x140(0x4)
	float _drawCenterDotExtraTimeLimitBasicSkillValue;  // 0x144(0x4)
	float _drawCenterDotExtraTimeLimitMediumSkillValue;  // 0x148(0x4)
	float _drawCenterDotExtraTimeLimitAdvancedSkillValue;  // 0x14C(0x4)
	float _drawCenterDotExtraTimeLimitAboveAvancedSkillValue;  // 0x150(0x4)
	char pad_340[4];  // 0x154(0x4)

}; 



// Class ConZ.ReplenishableResourceBaseComponent
// Size: 0x620(Inherited: 0x590) 
struct UReplenishableResourceBaseComponent : public UInstancedStaticMeshComponent
{
	struct FReplenishableResourceDescription _replenishableResourceDescription;  // 0x590(0x88)
	struct FName _replenishableResourceAmountMaterialParameterName;  // 0x618(0x8)

}; 



// Class ConZ.ATMReplenishableResourceComponent
// Size: 0x620(Inherited: 0x620) 
struct UATMReplenishableResourceComponent : public UReplenishableResourceBaseComponent
{

}; 



// Class ConZ.PrisonerActionFillVehicleFuelWithReplenishableResource
// Size: 0x140(Inherited: 0x108) 
struct UPrisonerActionFillVehicleFuelWithReplenishableResource : public UPrisonerAction
{
	char pad_264[56];  // 0x108(0x38)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_EyePressure
// Size: 0xD0(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_EyePressure : public UPrisonerBodyConditionOrSymptomSideEffect
{
	UPrisonerBodySymptom_EyePressure* _symptomClass;  // 0x30(0x8)
	struct UPrisonerBodySymptomCause_EyePressure* _symptomCause;  // 0x38(0x8)
	struct FRuntimeFloatCurve _intensityVsSeverity;  // 0x40(0x88)
	char pad_200[8];  // 0xC8(0x8)

}; 



// Class ConZ.ItemComponent
// Size: 0xC8(Inherited: 0xB0) 
struct UItemComponent : public UActorComponent
{
	char pad_176[24];  // 0xB0(0x18)

}; 



// Class ConZ.AttachableItemComponent
// Size: 0x160(Inherited: 0xC8) 
struct UAttachableItemComponent : public UItemComponent
{
	char pad_200[24];  // 0xC8(0x18)
	struct FTransform _attachRelativeTransform;  // 0xE0(0x30)
	float _damage;  // 0x110(0x4)
	char pad_276[4];  // 0x114(0x4)
	struct FText _interactionText;  // 0x118(0x18)
	char pad_304[48];  // 0x130(0x30)

	void OnBaseElementDestroyed(struct FDbIntegerId BaseElementId); // Function ConZ.AttachableItemComponent.OnBaseElementDestroyed
	void NetMulticast_OnBaseElementDestroyed(); // Function ConZ.AttachableItemComponent.NetMulticast_OnBaseElementDestroyed
}; 



// Class ConZ.AttachmentSocketMountType
// Size: 0x28(Inherited: 0x28) 
struct UAttachmentSocketMountType : public UObject
{

}; 



// Class ConZ.SurgeryRoom
// Size: 0x278(Inherited: 0x278) 
struct ASurgeryRoom : public ACharacterModificationRoom
{

}; 



// Class ConZ.AttachmentSocketMountTypePrisonerHand
// Size: 0x28(Inherited: 0x28) 
struct UAttachmentSocketMountTypePrisonerHand : public UAttachmentSocketMountType
{

}; 



// Class ConZ.BuriableTrapItemComponent
// Size: 0x190(Inherited: 0x190) 
struct UBuriableTrapItemComponent : public UBuriableItemComponent
{

}; 



// Class ConZ.VehicleAttachment_DcxWheel
// Size: 0x370(Inherited: 0x360) 
struct UVehicleAttachment_DcxWheel : public UVehicleAttachment_Wheel
{
	struct TArray<int32_t> WheelIndices;  // 0x360(0x10)

}; 



// Class ConZ.PrisonerCommonData
// Size: 0xF40(Inherited: 0x30) 
struct UPrisonerCommonData : public UDataAsset
{
	UAnimInstance* FemaleAnimationInstance;  // 0x30(0x8)
	UAnimInstance* MaleAnimationInstance;  // 0x38(0x8)
	struct FFloatInterval ExhaustionRange;  // 0x40(0x8)
	float ExhaustionDamageMultiplier;  // 0x48(0x4)
	float SkinHardness;  // 0x4C(0x4)
	float LastDamageDealerResetTime;  // 0x50(0x4)
	struct FFloatInterval StrengthMeleeDamageMultiplierRange;  // 0x54(0x8)
	float ExhaustionMeleeDamageMultiplier;  // 0x5C(0x4)
	struct TMap<struct FGameplayTag, uint8_t > ClothesPartUsedByMeleeAttackCapsuleAttachment;  // 0x60(0x50)
	struct TMap<struct FGameplayTag, struct FName> AttackerBoneByMeleeAttackCapsuleAttachment;  // 0xB0(0x50)
	float UnarmedAttackBaseEnergy;  // 0x100(0x4)
	struct FFloatInterval StrengthThrowingDamageMultiplierRange;  // 0x104(0x8)
	float ExhaustionThrowingDamageMultiplier;  // 0x10C(0x4)
	float NoSkillThrowingDamageMultiplier;  // 0x110(0x4)
	float BasicSkillThrowingDamageMultiplier;  // 0x114(0x4)
	float MediumSkillThrowingDamageMultiplier;  // 0x118(0x4)
	float AdvancedSkillThrowingDamageMultiplier;  // 0x11C(0x4)
	float AboveAdvancedSkillThrowingDamageMultiplier;  // 0x120(0x4)
	struct FFloatInterval ThrowEnergyRange;  // 0x124(0x8)
	float MaxActorEyesOffsetWhenLeaning;  // 0x12C(0x4)
	struct FTransform DefaultMeshTransform;  // 0x130(0x30)
	int32_t NumberOfCrouchStages;  // 0x160(0x4)
	float CrouchStagesInterpSpeed;  // 0x164(0x4)
	struct UCurveFloat* CrouchViewsAdditionalGlobalOffsetZVsCrouchStage;  // 0x168(0x8)
	float ProneEyeHeight;  // 0x170(0x4)
	float ProneEyeForwardOffset;  // 0x174(0x4)
	float SittingOnGroundEyeHeight;  // 0x178(0x4)
	float LyingOnGroundEyeHeight;  // 0x17C(0x4)
	float RestingOnGroundBackwardOffset;  // 0x180(0x4)
	uint8_t  DefaultPace;  // 0x184(0x1)
	char pad_389[3];  // 0x185(0x3)
	struct UPrisonerMovementSettings* MovementSettings;  // 0x188(0x8)
	float DefaultViewBlendDuration;  // 0x190(0x4)
	float MinEyesRotationYaw;  // 0x194(0x4)
	float MaxEyesRotationYaw;  // 0x198(0x4)
	float MinEyesRotationPitch;  // 0x19C(0x4)
	float MaxEyesRotationPitch;  // 0x1A0(0x4)
	char pad_420[4];  // 0x1A4(0x4)
	struct UCurveFloat* MinEyesRotationPitchCurve;  // 0x1A8(0x8)
	struct UCurveFloat* MaxEyesRotationPitchCurve;  // 0x1B0(0x8)
	float EyesRotationSpeed;  // 0x1B8(0x4)
	char pad_444_1 : 7;  // 0x1BC(0x1)
	bool DebugEyesRotation : 1;  // 0x1BC(0x1)
	char pad_445[3];  // 0x1BD(0x3)
	struct UAkAudioEvent* ComaAudioEvent;  // 0x1C0(0x8)
	struct UAkAudioEvent* ComaScreamAudioEvent;  // 0x1C8(0x8)
	struct UAkAudioEvent* DeathAudioEvent;  // 0x1D0(0x8)
	struct UAkAudioEvent* DeathScreamAudioEvent;  // 0x1D8(0x8)
	struct UParticleSystem* ColdBreathParticles;  // 0x1E0(0x8)
	struct FName ColdBreathParticlesAttachPointName;  // 0x1E8(0x8)
	struct UMaterialInstance* StandardUndershirtMaterial;  // 0x1F0(0x8)
	struct UMaterialInstance* DeluxeUndershirtMaterial;  // 0x1F8(0x8)
	struct UAkAudioEvent* JumpAudioEvent;  // 0x200(0x8)
	float LandingImpactHorizontalSpeedWeight;  // 0x208(0x4)
	float LandingImpactVerticalSpeedWeight;  // 0x20C(0x4)
	struct UCurveFloat* LandingStaminaDrainCurve;  // 0x210(0x8)
	struct ULandingEffects* LandingEffects;  // 0x218(0x8)
	struct UParticleSystem* WaterParticlesWhenIdle;  // 0x220(0x8)
	struct UParticleSystem* WaterParticlesWhenIdleInOcean;  // 0x228(0x8)
	struct UParticleSystem* WaterParticlesWhenMoving;  // 0x230(0x8)
	struct UParticleSystem* WaterParticlesWhenMovingInOcean;  // 0x238(0x8)
	struct UParticleSystem* WaterParticlesWhenDiving;  // 0x240(0x8)
	struct FName WaterParticlesWhenDivingAttachPointName;  // 0x248(0x8)
	struct UParticleSystem* WaterContactParticles;  // 0x250(0x8)
	struct FName WaterContactParticlesAttachPointName;  // 0x258(0x8)
	float MinVelocityZToSpawnWaterContactParticles;  // 0x260(0x4)
	char pad_612[4];  // 0x264(0x4)
	struct UCurveFloat* BuoyancyMultiplierVsGearWeightLimitDeviation;  // 0x268(0x8)
	struct UAkAudioEvent* StartedDivingAudioEvent;  // 0x270(0x8)
	struct UAkAudioEvent* StoppedDivingAudioEvent;  // 0x278(0x8)
	struct UAkAudioEvent* EndDivingOnPlayAudioEvent;  // 0x280(0x8)
	float MaxHeadWaterWeight;  // 0x288(0x4)
	float MaxUpperBodyWaterWeight;  // 0x28C(0x4)
	float MaxLowerBodyWaterWeight;  // 0x290(0x4)
	float MaxFeetWaterWeight;  // 0x294(0x4)
	float OutwardsWaterPropagationFactor;  // 0x298(0x4)
	float InwardsWaterPropagationRate;  // 0x29C(0x4)
	float OutwardsWaterPropagationRate;  // 0x2A0(0x4)
	char pad_676[4];  // 0x2A4(0x4)
	struct UCurveFloat* GettingDryRateVsSpeed;  // 0x2A8(0x8)
	struct UParticleSystem* SmallBleedingEffect;  // 0x2B0(0x8)
	struct UParticleSystem* LargeBleedingEffect;  // 0x2B8(0x8)
	struct UParticleSystem* UrineParticles;  // 0x2C0(0x8)
	struct FName UrineParticlesAttachPointName;  // 0x2C8(0x8)
	struct FName UrineParticlesAttachPointSmallestName;  // 0x2D0(0x8)
	struct FName UrineParticlesAttachPointBiggestName;  // 0x2D8(0x8)
	struct FName UrineParticlesAttachPointFemaleName;  // 0x2E0(0x8)
	struct FName UrineParticlesAttachPointMaleName;  // 0x2E8(0x8)
	float DetectNearbyFoliageRadius;  // 0x2F0(0x4)
	float MinLocationDeltaToUpdateNearbyFoliage;  // 0x2F4(0x4)
	float MinSpeedToTriggerMovingThroughFoliageEffects;  // 0x2F8(0x4)
	float MinAngularSpeedToTriggerMovingThroughFoliageEffects;  // 0x2FC(0x4)
	float ShouldAutomaticallyBeSeenInFoliageByAIDistance;  // 0x300(0x4)
	char pad_772[4];  // 0x304(0x4)
	struct UAkAudioEvent* OpenInventoryAudioEvent;  // 0x308(0x8)
	struct UAkAudioEvent* CloseInventoryAudioEvent;  // 0x310(0x8)
	struct UAkAudioEvent* OpenOceanAudioEvent;  // 0x318(0x8)
	float CharacterDetectionRadiusForIngameMusic;  // 0x320(0x4)
	float BulletFlybyDangerCooldown;  // 0x324(0x4)
	float HeadExplodeDamageThreshold;  // 0x328(0x4)
	float MeleeDangerCooldown;  // 0x32C(0x4)
	float MeleeDangerRadius;  // 0x330(0x4)
	float MeleeDangerAngle;  // 0x334(0x4)
	float PostReviveStateDuration;  // 0x338(0x4)
	struct FGameplayTag HitReactTypeWhenStanding;  // 0x33C(0x8)
	struct FGameplayTag HitReactTypeWhenStandingInCombatMode;  // 0x344(0x8)
	struct FGameplayTag HitReactTypeWhenStandingInCombatModeAndHoldingBlock;  // 0x34C(0x8)
	struct FGameplayTag HitReactTypeWhenCrouching;  // 0x354(0x8)
	struct FGameplayTag HitReactTypeWhenProne;  // 0x35C(0x8)
	struct FGameplayTag HitReactTypeWhenCaptured;  // 0x364(0x8)
	char pad_876[4];  // 0x36C(0x4)
	struct TMap<uint8_t , struct UHitReactLandingParams*> HitReactLandingParamsMap;  // 0x370(0x50)
	struct FGameplayTag MeleeAttackCapsulesAttachmentForItemInLHand;  // 0x3C0(0x8)
	struct FGameplayTag MeleeAttackCapsulesAttachmentForItemInRHand;  // 0x3C8(0x8)
	struct FPrisonerMeleeAttackTypes MeleeAttackTypes;  // 0x3D0(0x88)
	float MeleeTargetMaxDistance;  // 0x458(0x4)
	float MeleeTargetMaxHeightDifference;  // 0x45C(0x4)
	struct UCurveFloat* MeleeTargetMaxConeHalfAngleVsDistanceToTarget;  // 0x460(0x8)
	float TimeSpanAfterWhichMeleeAttacksBecomeInitial;  // 0x468(0x4)
	char pad_1132[4];  // 0x46C(0x4)
	struct TMap<uint8_t , float> MeleeHitRagdollImpulseByDamageMagnitudeType;  // 0x470(0x50)
	float DefaultMeleeHitRagdollImpulse;  // 0x4C0(0x4)
	float ThrowModeActivationDelay;  // 0x4C4(0x4)
	struct FName ThrowLaunchLocationSocketName;  // 0x4C8(0x8)
	struct UCurveFloat* ThrowingPathBrightnessFromTimeCurve;  // 0x4D0(0x8)
	float IslandBoundsCheckInterval;  // 0x4D8(0x4)
	char pad_1244[4];  // 0x4DC(0x4)
	struct UPhysicalSurfacesData* PhysicalSurfacesData;  // 0x4E0(0x8)
	AWristwatch* DeluxeWristwatchClass;  // 0x4E8(0x8)
	UWeaponScopeWidget* ScopeWidget;  // 0x4F0(0x8)
	APlaceableActorItems* PlaceableActorItemsClass;  // 0x4F8(0x8)
	APlaceableActorFortifications* PlaceableActorFortificationsClass;  // 0x500(0x8)
	APlaceableActorBaseBuilding* PlaceableActorBaseBuildingClass;  // 0x508(0x8)
	APlaceableActorBaseUpgrade* PlaceableActorBaseUpgradeClass;  // 0x510(0x8)
	APlaceableActorGarden* PlaceableActorGardenClass;  // 0x518(0x8)
	APlaceableActorModularBaseBuilding* PlaceableActorModularBaseBuildingClass;  // 0x520(0x8)
	int32_t MaxPossiblePlacedBlueprints;  // 0x528(0x4)
	float OpenOceanRange;  // 0x52C(0x4)
	struct FGameplayTag FeetSlot;  // 0x530(0x8)
	struct FGameplayTag HairSlot;  // 0x538(0x8)
	struct FGameplayTag HeadSlot;  // 0x540(0x8)
	struct FGameplayTag NeckSlot;  // 0x548(0x8)
	struct FGameplayTag FacialHairSlot;  // 0x550(0x8)
	struct FGameplayTag PenisSlot;  // 0x558(0x8)
	struct FGameplayTag ChipSlot;  // 0x560(0x8)
	struct FGameplayTag LEyeSlot;  // 0x568(0x8)
	struct FGameplayTag REyeSlot;  // 0x570(0x8)
	struct FGameplayTag EyewearSlot;  // 0x578(0x8)
	struct FGameplayTag HandsSlot;  // 0x580(0x8)
	struct FGameplayTag MaskSlot;  // 0x588(0x8)
	struct FGameplayTag CensorshipActiveTag;  // 0x590(0x8)
	struct FGameplayTag PrisonerMountedTag;  // 0x598(0x8)
	struct FGameplayTag HeadHiddenTag;  // 0x5A0(0x8)
	struct FGameplayTag HeadExplodedTag;  // 0x5A8(0x8)
	struct FGameplayTag ShowGenitalsOverrideTag;  // 0x5B0(0x8)
	UCharacterMesh* BodyCharacterMeshClass;  // 0x5B8(0x8)
	UCharacterMesh* ClothesCharacterMeshClass;  // 0x5C0(0x8)
	UCharacterMesh* CensorshipCharacterMeshClass;  // 0x5C8(0x8)
	struct TArray<UCharacterMesh*> ShoesCharacterMeshClasses;  // 0x5D0(0x10)
	struct TArray<UCharacterMesh*> FaceCoveringCharacterMeshClasses;  // 0x5E0(0x10)
	struct FGameplayTagContainer GearSlotsCausingUpperBodyNoise;  // 0x5F0(0x20)
	struct TMap<uint8_t , float> LeavingTheIslandPenaltyTimes;  // 0x610(0x50)
	float GameEventOutOfBoundsDamage;  // 0x660(0x4)
	char pad_1636[4];  // 0x664(0x4)
	struct UMaterialInstance* ItemPlacingMaterialAllowed;  // 0x668(0x8)
	struct UMaterialInstance* ItemPlacingMaterialDisallowed;  // 0x670(0x8)
	struct UMaterialInstance* VehicleServiceMaterial;  // 0x678(0x8)
	float IkInterpSpeed;  // 0x680(0x4)
	char pad_1668[4];  // 0x684(0x4)
	struct UMaterialParameterCollection* CommonParameterCollection;  // 0x688(0x8)
	struct FName WeaponSocketName;  // 0x690(0x8)
	struct FName WeaponHolsterSocketName;  // 0x698(0x8)
	struct UAnimMontage* SwapWeapons;  // 0x6A0(0x8)
	struct UAnimMontage* SwapItemsThrowingItemToWeapon;  // 0x6A8(0x8)
	struct UAnimMontage* SwapItemsWeaponToThrowingItem;  // 0x6B0(0x8)
	struct UAnimMontage* SwapItemsNotWeaponToNotWeapon;  // 0x6B8(0x8)
	struct UAnimMontage* SwapItemsWeaponToWeapon;  // 0x6C0(0x8)
	struct UAnimMontage* SwapItemsNotWeaponToWeapon;  // 0x6C8(0x8)
	struct UAnimMontage* SwapItemsWeaponToNotWeapon;  // 0x6D0(0x8)
	struct UAnimMontage* EquipRifleStanding;  // 0x6D8(0x8)
	struct UAnimMontage* UnequipRifleStanding;  // 0x6E0(0x8)
	struct UAnimMontage* EquipHandgunStanding;  // 0x6E8(0x8)
	struct UAnimMontage* UnequipHadgunStanding;  // 0x6F0(0x8)
	struct UAnimMontage* UrinateMaleMontage;  // 0x6F8(0x8)
	struct UAnimMontage* UrinateFemaleMontage;  // 0x700(0x8)
	struct UAnimMontage* UrinateMaleForcedMontage;  // 0x708(0x8)
	struct UAnimMontage* UrinateFemaleForcedMontage;  // 0x710(0x8)
	struct UAnimMontage* DefecateMontage;  // 0x718(0x8)
	struct UAnimMontage* DefecateForcedMontage;  // 0x720(0x8)
	struct UAnimMontage* VomitMontage;  // 0x728(0x8)
	struct UAnimMontage* VomitForcedMontage;  // 0x730(0x8)
	struct UAnimMontage* SearchObject;  // 0x738(0x8)
	struct UAnimMontage* SearchObjectWhileItemInHands;  // 0x740(0x8)
	struct UAnimMontage* SearchObjectWhileWeaponInHands;  // 0x748(0x8)
	struct UAnimMontage* SearchObjectWhenSwimming;  // 0x750(0x8)
	struct UAnimMontage* SearchPrisoner;  // 0x758(0x8)
	struct UAnimMontage* PatchWoundsStanding;  // 0x760(0x8)
	struct UAnimMontage* PatchWoundsCrouching;  // 0x768(0x8)
	struct UAnimMontage* PatchWoundsProne;  // 0x770(0x8)
	struct UAnimMontage* PatchWoundsStandingEnd;  // 0x778(0x8)
	struct UAnimMontage* PatchWoundsCrouchingEnd;  // 0x780(0x8)
	struct UAnimMontage* PatchWoundsProneEnd;  // 0x788(0x8)
	struct UAnimMontage* EatGeneric;  // 0x790(0x8)
	struct UAnimMontage* EatCan;  // 0x798(0x8)
	struct UAnimMontage* DrinkFromBottleStanding;  // 0x7A0(0x8)
	struct UAnimMontage* DrinkFromBottleCrouching;  // 0x7A8(0x8)
	struct UAnimMontage* DrinkInteraction;  // 0x7B0(0x8)
	struct UAnimMontage* DefaultLongThrowMontage;  // 0x7B8(0x8)
	struct UAnimMontage* DefaultLongThrowLoopMontage;  // 0x7C0(0x8)
	struct UAnimMontage* DefaultShortThrowMontage;  // 0x7C8(0x8)
	struct UAnimMontage* DefaultThrowbackGrenadeMontage;  // 0x7D0(0x8)
	struct UAnimMontage* ChopTreeStanding;  // 0x7D8(0x8)
	struct UAnimMontage* ChopTreeStandingEnd;  // 0x7E0(0x8)
	struct UAnimMontage* ChopLogStanding;  // 0x7E8(0x8)
	struct UAnimMontage* ChopLogStandingEnd;  // 0x7F0(0x8)
	struct UAnimMontage* BreakStone;  // 0x7F8(0x8)
	struct UAnimMontage* BreakStoneEnd;  // 0x800(0x8)
	struct UAnimMontage* CraftStanding;  // 0x808(0x8)
	struct UAnimMontage* CraftCrouching;  // 0x810(0x8)
	struct UAnimMontage* CraftProne;  // 0x818(0x8)
	struct UAnimMontage* UncraftStanding;  // 0x820(0x8)
	struct UAnimMontage* UncraftCrouching;  // 0x828(0x8)
	struct UAnimMontage* UncraftProne;  // 0x830(0x8)
	struct UAnimMontage* CheckTime;  // 0x838(0x8)
	struct UAnimMontage* CheckTimeFemale;  // 0x840(0x8)
	struct UAnimMontage* CheckTimeWhileItemInHands;  // 0x848(0x8)
	struct UAnimMontage* CheckTimeWhileItemInHandsFemale;  // 0x850(0x8)
	struct UAnimMontage* CheckTimeWhileWeaponInHands;  // 0x858(0x8)
	struct UAnimMontage* CheckTimeWhileWeaponInHandsFemale;  // 0x860(0x8)
	struct UAnimMontage* CheckTemperature;  // 0x868(0x8)
	struct UAnimMontage* ForceUnlockStanding;  // 0x870(0x8)
	struct UAnimMontage* ForceUnlockStandingEnd;  // 0x878(0x8)
	struct UAnimMontage* ForceUnlockStandingStop;  // 0x880(0x8)
	struct UAnimMontage* SpillMontage;  // 0x888(0x8)
	struct UAnimMontage* StompOutFireMontage;  // 0x890(0x8)
	struct UAnimMontage* BlowAirIntoFireMontage;  // 0x898(0x8)
	struct UAnimMontage* BlowAirIntoLowFireMontage;  // 0x8A0(0x8)
	struct UAnimMontage* GestureShowFinger;  // 0x8A8(0x8)
	struct UAnimMontage* GestureStandSurrender;  // 0x8B0(0x8)
	struct UAnimMontage* GestureWaveHi;  // 0x8B8(0x8)
	struct UAnimMontage* GestureYouAreDead;  // 0x8C0(0x8)
	struct UAnimMontage* GestureFY;  // 0x8C8(0x8)
	struct UAnimMontage* GesturePoint;  // 0x8D0(0x8)
	struct UAnimMontage* GestureHeart;  // 0x8D8(0x8)
	struct UAnimMontage* GestureBallpalm;  // 0x8E0(0x8)
	struct UAnimMontage* GestureFacepalm;  // 0x8E8(0x8)
	struct UAnimMontage* GestureFingerGun;  // 0x8F0(0x8)
	struct UAnimMontage* GestureLaughing;  // 0x8F8(0x8)
	struct UAnimMontage* GestureSmellWave;  // 0x900(0x8)
	struct UAnimMontage* GestureSquat;  // 0x908(0x8)
	struct UAnimMontage* GestureCharge;  // 0x910(0x8)
	struct UAnimMontage* GestureChargeCombat;  // 0x918(0x8)
	struct UAnimMontage* GestureFreeze;  // 0x920(0x8)
	struct UAnimMontage* GestureFreezeCombat;  // 0x928(0x8)
	struct UAnimMontage* GestureGetDown;  // 0x930(0x8)
	struct UAnimMontage* GestureGetDownCombat;  // 0x938(0x8)
	struct UAnimMontage* GestureGetUp;  // 0x940(0x8)
	struct UAnimMontage* GestureGetUpCombat;  // 0x948(0x8)
	struct UAnimMontage* GestureHalt;  // 0x950(0x8)
	struct UAnimMontage* GestureHaltCombat;  // 0x958(0x8)
	struct UAnimMontage* GestureHurryUp;  // 0x960(0x8)
	struct UAnimMontage* GestureHurryUpCombat;  // 0x968(0x8)
	struct UAnimMontage* GesturePointMe;  // 0x970(0x8)
	struct UAnimMontage* GesturePointMeCombat;  // 0x978(0x8)
	struct UAnimMontage* GesturePointYou;  // 0x980(0x8)
	struct UAnimMontage* GesturePointYouCombat;  // 0x988(0x8)
	struct UAnimMontage* GestureRally;  // 0x990(0x8)
	struct UAnimMontage* GestureRallyCombat;  // 0x998(0x8)
	struct UAnimMontage* GestureThumbsUp;  // 0x9A0(0x8)
	struct UAnimMontage* GestureThumbsUpCombat;  // 0x9A8(0x8)
	struct UAnimMontage* GestureThumbsDown;  // 0x9B0(0x8)
	struct UAnimMontage* GestureThumbsDownCombat;  // 0x9B8(0x8)
	struct UAnimMontage* GestureUnderstandNot;  // 0x9C0(0x8)
	struct UAnimMontage* GestureUnderstandNotCombat;  // 0x9C8(0x8)
	struct UAnimMontage* GestureUnderstandYes;  // 0x9D0(0x8)
	struct UAnimMontage* GestureUnderstandYesCombat;  // 0x9D8(0x8)
	struct UAnimMontage* CommitSuicideStanding;  // 0x9E0(0x8)
	struct UAnimMontage* CommitSuicideCrouching;  // 0x9E8(0x8)
	struct UAnimMontage* CommitSuicideRareStanding;  // 0x9F0(0x8)
	struct UAnimMontage* LockpickRegular;  // 0x9F8(0x8)
	struct UAnimMontage* WhistleMontageMale;  // 0xA00(0x8)
	struct UAnimMontage* WhistleMontageFemale;  // 0xA08(0x8)
	struct UAnimMontage* TuneBowMontage;  // 0xA10(0x8)
	struct UAnimMontage* RepairVehicleMontage;  // 0xA18(0x8)
	struct UAnimMontage* WashClothMontage;  // 0xA20(0x8)
	struct UAnimMontage* BuryStandingMontage;  // 0xA28(0x8)
	struct UAnimMontage* BuryRestStandingMontage;  // 0xA30(0x8)
	struct UAnimMontage* BuryResumeStandingMontage;  // 0xA38(0x8)
	struct UAnimMontage* BuryCrouchingMontage;  // 0xA40(0x8)
	struct UAnimMontage* BuryRestCrouchingMontage;  // 0xA48(0x8)
	struct UAnimMontage* SitOnGroundStandingStartMontage;  // 0xA50(0x8)
	struct UAnimMontage* SitOnGroundStandingEndMontage;  // 0xA58(0x8)
	struct UAnimMontage* SitOnGroundCrouchingStartMontage;  // 0xA60(0x8)
	struct UAnimMontage* SitOnGroundCrouchingEndMontage;  // 0xA68(0x8)
	struct UAnimMontage* LayOnGroundStandingStartMontage;  // 0xA70(0x8)
	struct UAnimMontage* LayOnGroundStandingEndMontage;  // 0xA78(0x8)
	struct UAnimMontage* LayOnGroundCrouchingStartMontage;  // 0xA80(0x8)
	struct UAnimMontage* LayOnGroundCrouchingEndMontage;  // 0xA88(0x8)
	struct UAnimSequenceBase* SittingOnGroundAnimation;  // 0xA90(0x8)
	struct UAnimSequenceBase* LyingOnGroundAnimation;  // 0xA98(0x8)
	struct UAnimMontage* LightFlareMontage;  // 0xAA0(0x8)
	struct UAnimMontage* ArmTrapMontage;  // 0xAA8(0x8)
	struct UAnimMontage* FishingEnterMontage;  // 0xAB0(0x8)
	struct UAnimMontage* FishingLeaveMontage;  // 0xAB8(0x8)
	struct UAnimMontage* FishingCastMontage;  // 0xAC0(0x8)
	struct UAnimMontage* FishingLongCastEndMontage;  // 0xAC8(0x8)
	struct UAnimMontage* FishingShortCastEndMontage;  // 0xAD0(0x8)
	struct UAnimMontage* FishingPullStartMontage;  // 0xAD8(0x8)
	struct UAnimMontage* FishingPullEndMontage;  // 0xAE0(0x8)
	struct UAnimMontage* FishingFishCaughtMontage;  // 0xAE8(0x8)
	struct UAnimMontage* FishingKeepFishMontage;  // 0xAF0(0x8)
	struct UAnimMontage* FishingDiscardFishMontage;  // 0xAF8(0x8)
	struct UAnimMontage* FishingWireBreakMontage;  // 0xB00(0x8)
	struct UAnimMontage* BasicDance1Montage;  // 0xB08(0x8)
	struct UAnimMontage* BasicDance2Montage;  // 0xB10(0x8)
	struct UAnimMontage* BasicDance3Montage;  // 0xB18(0x8)
	struct UAnimMontage* BasicDance4Montage;  // 0xB20(0x8)
	struct UAnimMontage* BasicDance5Montage;  // 0xB28(0x8)
	struct UAnimMontage* AdvanceDance1Montage;  // 0xB30(0x8)
	struct UAnimMontage* AdvanceDance2Montage;  // 0xB38(0x8)
	struct UAnimMontage* AdvanceDance3Montage;  // 0xB40(0x8)
	struct UAnimMontage* AdvanceDance4Montage;  // 0xB48(0x8)
	struct UAnimMontage* AdvanceDance5Montage;  // 0xB50(0x8)
	struct UAnimMontage* AdvanceDance6Montage;  // 0xB58(0x8)
	struct UAnimMontage* AdvanceDance7Montage;  // 0xB60(0x8)
	struct UAnimMontage* InjectSelfMontage;  // 0xB68(0x8)
	struct UAnimMontage* InjectOtherMontage;  // 0xB70(0x8)
	struct UAnimMontage* HalloweenGesture1Montage;  // 0xB78(0x8)
	struct UAnimMontage* HalloweenGesture2Montage;  // 0xB80(0x8)
	struct UAnimMontage* HalloweenGesture3Montage;  // 0xB88(0x8)
	struct UAnimMontage* HalloweenGesture4Montage;  // 0xB90(0x8)
	struct UAnimMontage* RemoveWeedMontage;  // 0xB98(0x8)
	struct UAnimMontage* RemoveWeedWithHoeMontage;  // 0xBA0(0x8)
	struct UAnimMontage* ApplyPesticideMontage;  // 0xBA8(0x8)
	struct UAnimMontage* AddFertilizerMontage;  // 0xBB0(0x8)
	struct UAnimMontage* PlantSeedMontage;  // 0xBB8(0x8)
	struct UAnimMontage* RemovePlantMontage;  // 0xBC0(0x8)
	struct UAnimMontage* DestroyGardenMontage;  // 0xBC8(0x8)
	struct UAnimMontage* WashEyesMontage;  // 0xBD0(0x8)
	struct FPrisonerTurnMontageDescription TurnMontageDescription;  // 0xBD8(0x30)
	float MinThrowItemSpeed;  // 0xC08(0x4)
	float MaxThrowItemSpeed;  // 0xC0C(0x4)
	float MinScreenCenterDotOpacityDecreaseDelay;  // 0xC10(0x4)
	float MaxScreenCenterDotOpacityDecreaseDelay;  // 0xC14(0x4)
	float ScreenCenterDotOpacityDecrease;  // 0xC18(0x4)
	float ScreenCenterDotOpacityIncrease;  // 0xC1C(0x4)
	float ShortThrowReductionMultiplier;  // 0xC20(0x4)
	float ThrowingObstacleCheckOffset;  // 0xC24(0x4)
	float ThrowingObstacleOffset;  // 0xC28(0x4)
	char pad_3116[4];  // 0xC2C(0x4)
	struct TMap<uint8_t , struct FThrowingAnimationSet> ThrowingAnimationSets;  // 0xC30(0x50)
	float RespawnTime;  // 0xC80(0x4)
	char pad_3204[4];  // 0xC84(0x4)
	struct UCurveFloat* FocusModeZoomEffectCurve;  // 0xC88(0x8)
	float FocusModeZoomSpeed;  // 0xC90(0x4)
	char pad_3220[4];  // 0xC94(0x4)
	struct TArray<struct UCircularMenuSegmentInfo*> SelfInteractionSegmentInfo;  // 0xC98(0x10)
	struct UCircularMenuSegmentIcons* SelfInteractionVoicelineIcons;  // 0xCA8(0x8)
	struct TArray<struct UCharacterVoiceline*> CharacterVoicelines;  // 0xCB0(0x10)
	struct TSoftClassPtr<UObject> PrisonWalletComponentClass;  // 0xCC0(0x28)
	UPrisonerMusicPlayerComponent* MusicPlayerComponentClass;  // 0xCE8(0x8)
	float WetnessReachableFromSkyChecksInterval;  // 0xCF0(0x4)
	float DedicatedServerHandleFootstepInterval;  // 0xCF4(0x4)
	float PlayInstrumentEventNetworkDelay;  // 0xCF8(0x4)
	float PlayInstrumentExitStateDuration;  // 0xCFC(0x4)
	UPrisonerBodyCompositionMorphsComputer* BodyCompositionMorphsComputer;  // 0xD00(0x8)
	struct FVector PenisLocationLean;  // 0xD08(0xC)
	struct FVector PenisLocationFat;  // 0xD14(0xC)
	struct FVector PenisHandleLocationLean;  // 0xD20(0xC)
	struct FVector PenisHandleLocationFat;  // 0xD2C(0xC)
	float PenisMinSizeHandleZ;  // 0xD38(0x4)
	float PenisMaxSizeHandleZ;  // 0xD3C(0x4)
	float PenisGrowOverTimeThreshold;  // 0xD40(0x4)
	float UnmountSpeedThresholdForRagdoll;  // 0xD44(0x4)
	float MountTiltAngleForRagdoll;  // 0xD48(0x4)
	float RareSuicideAnimationChance;  // 0xD4C(0x4)
	struct UCurveFloat* FaceAgingIntensityCurve;  // 0xD50(0x8)
	float HairGrowthTotalTime;  // 0xD58(0x4)
	float FacialHairGrowthTotalTime;  // 0xD5C(0x4)
	float HairUpdateRate;  // 0xD60(0x4)
	char pad_3428[4];  // 0xD64(0x4)
	struct UCurveFloat* ShortHairCurve;  // 0xD68(0x8)
	struct UCurveFloat* MediumHairCurve;  // 0xD70(0x8)
	struct UCurveFloat* MediumHairPDOCurve;  // 0xD78(0x8)
	struct UCurveFloat* MediumHairTopOpacityCurve;  // 0xD80(0x8)
	struct UCurveFloat* LongHairCurve;  // 0xD88(0x8)
	struct UCurveFloat* LongHairPDOCurve;  // 0xD90(0x8)
	struct UCurveFloat* LongHairTopOpacityCurve;  // 0xD98(0x8)
	struct UCurveFloat* AfroHairCurve;  // 0xDA0(0x8)
	struct UCurveFloat* ShortFacialHairCurve;  // 0xDA8(0x8)
	struct UCurveFloat* MediumFacialHairCurve;  // 0xDB0(0x8)
	struct UCurveFloat* MediumFacialHairPDOCurve;  // 0xDB8(0x8)
	struct UCurveFloat* MediumFacialHairTopOpacityCurve;  // 0xDC0(0x8)
	struct UCurveFloat* LongFacialHairCurve;  // 0xDC8(0x8)
	struct UCurveFloat* LongFacialHairPDOCurve;  // 0xDD0(0x8)
	struct UCurveFloat* LongFacialHairTopOpacityCurve;  // 0xDD8(0x8)
	float MaxRestingAngle;  // 0xDE0(0x4)
	float GenericAcceptanceRadius;  // 0xDE4(0x4)
	float DistanceWhereRotationStarts;  // 0xDE8(0x4)
	char pad_3564[4];  // 0xDEC(0x4)
	UNotificationDescription* AutoTriggeredVomitingNotification;  // 0xDF0(0x8)
	UNotificationDescription* AutoTriggeredUrinationNotification;  // 0xDF8(0x8)
	UNotificationDescription* AutoTriggeredDefecationNotification;  // 0xE00(0x8)
	UPrisonerUIDataImpl* UIDataClass;  // 0xE08(0x8)
	struct UAkAudioEvent* DefecateNakedForcedAudioEvent;  // 0xE10(0x8)
	struct UAkAudioEvent* DefecateClothedForcedAudioEvent;  // 0xE18(0x8)
	struct UAkAudioEvent* DefecateNakedForcedDiarrheaAudioEvent;  // 0xE20(0x8)
	struct UAkAudioEvent* DefecateClothedForcedDiarrheaAudioEvent;  // 0xE28(0x8)
	struct UAkAudioEvent* UrinateForcedAudioEvent;  // 0xE30(0x8)
	struct UAkAudioEvent* StartBlowingAirAudioEvent;  // 0xE38(0x8)
	struct UAkAudioEvent* StopBlowingAirAudioEvent;  // 0xE40(0x8)
	struct UAkAudioEvent* PhoenixTearsEffectSound;  // 0xE48(0x8)
	struct UParticleSystem* DiarrheaParticleSystem;  // 0xE50(0x8)
	AActor* FecesClass;  // 0xE58(0x8)
	struct FName FecesSocketName;  // 0xE60(0x8)
	struct FPrisonerCommonData_ResponseIdles ResponseIdles;  // 0xE68(0x8)
	struct FBasicNotificationDescriptionData ParachutingMoveInputNotificationData;  // 0xE70(0x38)
	struct FBasicNotificationDescriptionData ParachutingChangePoseInputNotificationData;  // 0xEA8(0x38)
	struct FBasicNotificationDescriptionData ParachutingOpenParachuteInputNotificationData;  // 0xEE0(0x38)
	struct UAkAudioEvent* SkydivingStartAudioEvent;  // 0xF18(0x8)
	struct UAkAudioEvent* SkydivingStopAudioEvent;  // 0xF20(0x8)
	struct UAkAudioEvent* IntroCinematicScreamAudioEvent;  // 0xF28(0x8)
	float MaxSpeedWhileMountedToBeRelevantForHunting;  // 0xF30(0x4)
	char pad_3892[12];  // 0xF34(0xC)

}; 



// Class ConZ.GameResourceType_Money
// Size: 0xA0(Inherited: 0xA0) 
struct UGameResourceType_Money : public UGameResourceType
{

}; 



// Class ConZ.PrisonerActionDestroyGarden
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionDestroyGarden : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.ItemActionDescriptionLoadMagazine
// Size: 0x48(Inherited: 0x30) 
struct UItemActionDescriptionLoadMagazine : public UItemActionSequenceDescription
{
	int32_t RequestedAmmoCount;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)
	struct AAmmunitionItem* ammoItem;  // 0x38(0x8)
	float PlayRate;  // 0x40(0x4)
	char pad_68[4];  // 0x44(0x4)

}; 



// Class ConZ.CharacterVoiceline
// Size: 0x58(Inherited: 0x30) 
struct UCharacterVoiceline : public UDataAsset
{
	struct FText Name;  // 0x30(0x18)
	struct FGameplayTag CharacterTypeTag;  // 0x48(0x8)
	struct UAkAudioEvent* AudioEvent;  // 0x50(0x8)

}; 



// Class ConZ.VehicleAttachmentTag
// Size: 0x38(Inherited: 0x30) 
struct UVehicleAttachmentTag : public UBaseItemTag
{
	UVehicleAttachment* AttachmentClass;  // 0x30(0x8)

}; 



// Class ConZ.ConZWorldBoundsVolume
// Size: 0x258(Inherited: 0x258) 
struct AConZWorldBoundsVolume : public AVolume
{

}; 



// Class ConZ.ItemAnimInstance
// Size: 0x2D0(Inherited: 0x2C0) 
struct UItemAnimInstance : public UAnimInstance
{
	uint8_t  _owningPrisonerStance;  // 0x2C0(0x1)
	char pad_705_1 : 7;  // 0x2C1(0x1)
	bool _isOwningPrisonerInFirstPersonView : 1;  // 0x2C1(0x1)
	char pad_706[14];  // 0x2C2(0xE)

}; 



// Class ConZ.ConZCustomInteractionMultilineEditableText
// Size: 0x478(Inherited: 0x470) 
struct UConZCustomInteractionMultilineEditableText : public UMultiLineEditableText
{
	char pad_1136[8];  // 0x470(0x8)

}; 



// Class ConZ.AudioStatics
// Size: 0x28(Inherited: 0x28) 
struct UAudioStatics : public UBlueprintFunctionLibrary
{

	void StopAkActor(struct AActor* Actor); // Function ConZ.AudioStatics.StopAkActor
	void SetAkRTPCValue(struct FName RTPC, float Value, int32_t InterpolationTimeMs, struct AActor* Actor); // Function ConZ.AudioStatics.SetAkRTPCValue
	int32_t PostAndWaitForEndOfAkEvent(struct UAkAudioEvent* akEvent, struct AActor* Actor, bool bStopWhenAttachedToDestroyed, struct TArray<struct FAkExternalSourceInfo>& ExternalSources, struct FString EventName, struct FLatentActionInfo LatentInfo); // Function ConZ.AudioStatics.PostAndWaitForEndOfAkEvent
	int32_t PostAkEventAttached(struct UAkAudioEvent* akEvent, struct AActor* Actor, struct FName AttachPointName, bool bStopWhenAttachedToDestroyed, struct FString EventName); // Function ConZ.AudioStatics.PostAkEventAttached
	int32_t PostAkEventAtLocation(struct UAkAudioEvent* akEvent, struct FVector Location, struct FRotator Orientation, struct FString EventName, struct UObject* WorldContextObject); // Function ConZ.AudioStatics.PostAkEventAtLocation
	int32_t PostAkAudioEvent(struct UAkAudioEvent* akEvent, struct AActor* Actor, bool bStopWhenAttachedToDestroyed, struct FString EventName); // Function ConZ.AudioStatics.PostAkAudioEvent
	struct FName GetMovementPaceSwitchValue(uint8_t  Value); // Function ConZ.AudioStatics.GetMovementPaceSwitchValue
	struct FName GetMovementPaceSwitchName(); // Function ConZ.AudioStatics.GetMovementPaceSwitchName
	struct FName GetMotionIntensitySwitchValue(uint8_t  Value); // Function ConZ.AudioStatics.GetMotionIntensitySwitchValue
	struct FName GetMotionIntensitySwitchName(); // Function ConZ.AudioStatics.GetMotionIntensitySwitchName
	struct FName GetMaterialSwitchValue(char EPhysicalSurface Value); // Function ConZ.AudioStatics.GetMaterialSwitchValue
	struct FName GetMaterialSwitchName(); // Function ConZ.AudioStatics.GetMaterialSwitchName
	struct FName GetImpactSeveritySwitchName(); // Function ConZ.AudioStatics.GetImpactSeveritySwitchName
	struct FName GetHitSeveritySwitchValue(uint8_t  Value); // Function ConZ.AudioStatics.GetHitSeveritySwitchValue
	struct FName GetGenderSwitchValue(uint8_t  Value); // Function ConZ.AudioStatics.GetGenderSwitchValue
	struct FName GetGenderSwitchName(); // Function ConZ.AudioStatics.GetGenderSwitchName
	struct FName GetEnvironmentSwitchValue(uint8_t  Value); // Function ConZ.AudioStatics.GetEnvironmentSwitchValue
	struct FName GetEnvironmentSwitchName(); // Function ConZ.AudioStatics.GetEnvironmentSwitchName
	struct FName GetCharacterPainSeveritySwitchValue(uint8_t  Value); // Function ConZ.AudioStatics.GetCharacterPainSeveritySwitchValue
	struct FName GetCharacterPainSeveritySwitchName(); // Function ConZ.AudioStatics.GetCharacterPainSeveritySwitchName
	void GetAkRTPCValue(struct FName RTPC, float& OutValue, uint8_t & outValueType, struct AActor* Actor); // Function ConZ.AudioStatics.GetAkRTPCValue
}; 



// Class ConZ.ItemWithTextState
// Size: 0x120(Inherited: 0x100) 
struct UItemWithTextState : public UItemState
{
	struct FDbIntegerId OwningUserProfileId;  // 0x100(0x8)
	struct FString Text;  // 0x108(0x10)
	char pad_280[8];  // 0x118(0x8)

}; 



// Class ConZ.WeaponAttachmentMagazineAnimInstance
// Size: 0x2E0(Inherited: 0x2D0) 
struct UWeaponAttachmentMagazineAnimInstance : public UItemAnimInstance
{
	int32_t _ammoCount;  // 0x2D0(0x4)
	char pad_724_1 : 7;  // 0x2D4(0x1)
	bool _hasAmmo : 1;  // 0x2D4(0x1)
	char pad_725_1 : 7;  // 0x2D5(0x1)
	bool _isAttachedToWeapon : 1;  // 0x2D5(0x1)
	uint8_t  _ammoCountType;  // 0x2D6(0x1)
	char pad_727_1 : 7;  // 0x2D7(0x1)
	bool ShouldPlayIdleEmpty : 1;  // 0x2D7(0x1)
	char pad_728[8];  // 0x2D8(0x8)

}; 



// Class ConZ.MissionTabWidget
// Size: 0x2F8(Inherited: 0x260) 
struct UMissionTabWidget : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UTextBlock* _tabNameText;  // 0x278(0x8)
	struct UImage* _backgroundImage;  // 0x280(0x8)
	struct USizeBox* _sizeBox;  // 0x288(0x8)
	struct FText _tabName;  // 0x290(0x18)
	float _activeTabHeight;  // 0x2A8(0x4)
	float _inactiveTabHeight;  // 0x2AC(0x4)
	float _activeFontSize;  // 0x2B0(0x4)
	float _inactiveFontSize;  // 0x2B4(0x4)
	struct UTexture2D* _activeBackgroundTexture;  // 0x2B8(0x8)
	struct UTexture2D* _inactiveBackgroundTexture;  // 0x2C0(0x8)
	struct FLinearColor _activeFontColor;  // 0x2C8(0x10)
	struct FLinearColor _inactiveFontColor;  // 0x2D8(0x10)
	struct UAkAudioEvent* _menuButtonClickAudioEvent;  // 0x2E8(0x8)
	char pad_752[8];  // 0x2F0(0x8)

}; 



// Class ConZ.DoorUnlockItemComponent
// Size: 0xE8(Inherited: 0xD8) 
struct UDoorUnlockItemComponent : public UExpirableItemComponent
{
	uint8_t  _unlockDataType;  // 0xD8(0x1)
	char pad_217[7];  // 0xD9(0x7)
	UDoorUnlockData* _doorUnlockData;  // 0xE0(0x8)

	void OnRep_DoorLockingDescriptor(); // Function ConZ.DoorUnlockItemComponent.OnRep_DoorLockingDescriptor
}; 



// Class ConZ.AutoCrossbowMagazineAnimInstance
// Size: 0x2F0(Inherited: 0x2E0) 
struct UAutoCrossbowMagazineAnimInstance : public UWeaponAttachmentMagazineAnimInstance
{
	float _followerBoneLocationOffset;  // 0x2E0(0x4)
	char pad_740[12];  // 0x2E4(0xC)

}; 



// Class ConZ.PrisonerActionApplyPesticideDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionApplyPesticideDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.VirtualizedItemUserData
// Size: 0x28(Inherited: 0x28) 
struct UVirtualizedItemUserData : public UObject
{

}; 



// Class ConZ.TearGasGrenadeItem
// Size: 0xA40(Inherited: 0xA10) 
struct ATearGasGrenadeItem : public ASmokeGrenadeItem
{
	float _gasInfluenceMaxRadius;  // 0xA08(0x4)
	float _gasInfluenceFullRadiusTime;  // 0xA0C(0x4)
	float _gasInfluenceDurationTime;  // 0xA10(0x4)
	char pad_2588[36];  // 0xA1C(0x24)

}; 



// Class ConZ.CustomBorder
// Size: 0x298(Inherited: 0x260) 
struct UCustomBorder : public UUserWidget
{
	struct UImage* Left;  // 0x260(0x8)
	struct UImage* Right;  // 0x268(0x8)
	struct UImage* Top;  // 0x270(0x8)
	struct UImage* Bottom;  // 0x278(0x8)
	float BorderThickness;  // 0x280(0x4)
	struct FLinearColor BorderColor;  // 0x284(0x10)
	char pad_660[4];  // 0x294(0x4)

}; 



// Class ConZ.ConZNotification
// Size: 0x30(Inherited: 0x28) 
struct UConZNotification : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.PrisonerShotsFiredTrackerComponent
// Size: 0xC0(Inherited: 0xB0) 
struct UPrisonerShotsFiredTrackerComponent : public UActorComponent
{
	char pad_176[4];  // 0xB0(0x4)
	int32_t _repNumShotsFired;  // 0xB4(0x4)
	char pad_184[8];  // 0xB8(0x8)

	void OnRep_NumShotsFired(); // Function ConZ.PrisonerShotsFiredTrackerComponent.OnRep_NumShotsFired
	void Client_SetWidgetVisibilityAndReset(bool Visibility); // Function ConZ.PrisonerShotsFiredTrackerComponent.Client_SetWidgetVisibilityAndReset
}; 



// Class ConZ.CraftingComponentWidget
// Size: 0x2B8(Inherited: 0x260) 
struct UCraftingComponentWidget : public UUserWidget
{
	struct UItemClassWidget* ItemWidget;  // 0x260(0x8)
	char pad_616[8];  // 0x268(0x8)
	struct UTextBlock* CountText;  // 0x270(0x8)
	struct UTextBlock* OrderNumberText;  // 0x278(0x8)
	struct UImage* TypeImage;  // 0x280(0x8)
	char pad_648[8];  // 0x288(0x8)
	struct UTexture2D* Component_Main;  // 0x290(0x8)
	struct UTexture2D* Component_Tool;  // 0x298(0x8)
	struct UTexture2D* Component_Bonus;  // 0x2A0(0x8)
	UUserWidget* _craftingComponentWidget;  // 0x2A8(0x8)
	char pad_688[8];  // 0x2B0(0x8)

}; 



// Class ConZ.BombDefusalMinigameConfiguration
// Size: 0x60(Inherited: 0x48) 
struct UBombDefusalMinigameConfiguration : public UMinigameConfiguration
{
	char pad_72[24];  // 0x48(0x18)

}; 



// Class ConZ.ItemUserWidget
// Size: 0x2A0(Inherited: 0x280) 
struct UItemUserWidget : public UBaseItemWidget
{
	struct FMulticastInlineDelegate OnClicked;  // 0x280(0x10)
	struct UUserWidget* _uiBorder;  // 0x290(0x8)
	char pad_664_1 : 7;  // 0x298(0x1)
	bool _isSelected : 1;  // 0x298(0x1)
	char pad_665_1 : 7;  // 0x299(0x1)
	bool _isHovered : 1;  // 0x299(0x1)
	char pad_666[6];  // 0x29A(0x6)

	void UpdateHighlightStatus(); // Function ConZ.ItemUserWidget.UpdateHighlightStatus
	void SetItem(struct AItem* Item); // Function ConZ.ItemUserWidget.SetItem
	void SetImage(struct UTexture2D* Image); // Function ConZ.ItemUserWidget.SetImage
	void OnItemSelectionChanged(bool selected); // Function ConZ.ItemUserWidget.OnItemSelectionChanged
	void OnClicked__DelegateSignature(struct UItemUserWidget* clickedWidget); // DelegateFunction ConZ.ItemUserWidget.OnClicked__DelegateSignature
	void MarkAsWeaponWidget(); // Function ConZ.ItemUserWidget.MarkAsWeaponWidget
	void ItemPickedUpStateChanged(struct AItem* Item, bool pickedUp); // Function ConZ.ItemUserWidget.ItemPickedUpStateChanged
	void InteractableDestroyed(struct AActor* interactable); // Function ConZ.ItemUserWidget.InteractableDestroyed
	struct AItem* GetItem(); // Function ConZ.ItemUserWidget.GetItem
	struct UItemUserWidget* CreateFromItem(struct AItem* Item); // Function ConZ.ItemUserWidget.CreateFromItem
	void BlinkItemContainer(); // Function ConZ.ItemUserWidget.BlinkItemContainer
}; 



// Class ConZ.TraderService
// Size: 0x38(Inherited: 0x28) 
struct UTraderService : public UObject
{
	char pad_40[8];  // 0x28(0x8)
	struct UTexture2D* _storeIcon;  // 0x30(0x8)

}; 



// Class ConZ.AvailabilityGrid
// Size: 0x225558(Inherited: 0x28) 
struct UAvailabilityGrid : public UObject
{
	struct FGameplayTag _waterImageAssetTag;  // 0x28(0x8)
	char pad_48[2250024];  // 0x30(0x225528)

}; 



// Class ConZ.DexteritySkill
// Size: 0xB0(Inherited: 0xB0) 
struct UDexteritySkill : public USkill
{

}; 



// Class ConZ.HalloweenSacrificePit
// Size: 0x4C0(Inherited: 0x220) 
struct AHalloweenSacrificePit : public AActor
{
	int64_t _deactivationTime;  // 0x220(0x8)
	struct FVector _sacrificePitCenter;  // 0x228(0xC)
	float _sacrificePitRadius;  // 0x234(0x4)
	struct TArray<struct FHalloweenSacrificePitRequiredItemVariants> _requiredItemsInSacrificePit;  // 0x238(0x10)
	float _giftSpawningTimeWindowDuration;  // 0x248(0x4)
	char pad_588[4];  // 0x24C(0x4)
	struct TSoftClassPtr<UObject> _giftItem;  // 0x250(0x28)
	char pad_632[8];  // 0x278(0x8)
	struct FTransform _giftItemSpawnTransform;  // 0x280(0x30)
	float _giftItemAlreadySpawnedCheckRadius;  // 0x2B0(0x4)
	char pad_692[4];  // 0x2B4(0x4)
	struct TSoftObjectPtr<UAkAudioEvent> _giftSpawningPreludeAudioEvent;  // 0x2B8(0x28)
	struct TSoftObjectPtr<UParticleSystem> _giftSpawningPreludeParticleSystem;  // 0x2E0(0x28)
	char pad_776[8];  // 0x308(0x8)
	struct FTransform _giftSpawningPreludeParticlesTransform;  // 0x310(0x30)
	struct TSoftObjectPtr<UAkAudioEvent> _giftSpawningFinishedAudioEvent;  // 0x340(0x28)
	struct TSoftObjectPtr<UParticleSystem> _giftSpawningFinishedParticleSystem;  // 0x368(0x28)
	struct FTransform _giftSpawningFinishedParticlesTransform;  // 0x390(0x30)
	struct ADecalActor* _demonicSigilDecal;  // 0x3C0(0x8)
	struct FName _demonicSigilDecalEmissiveColorParameterName;  // 0x3C8(0x8)
	struct FRuntimeFloatCurve _demonicSigilDecalEmissiveColorMultiplierVsTime;  // 0x3D0(0x88)
	int32_t _numZombiesToSpawn;  // 0x458(0x4)
	char pad_1116[4];  // 0x45C(0x4)
	struct TArray<struct TSoftClassPtr<UObject>> _possibleZombies;  // 0x460(0x10)
	struct TArray<struct FTransform> _zombieSpawnTransforms;  // 0x470(0x10)
	float _zombieSpawnAreaSlack;  // 0x480(0x4)
	char pad_1156[60];  // 0x484(0x3C)

	void NetMulticast_StartLoadingAssets(struct TArray<struct FSoftObjectPath> AssetPaths); // Function ConZ.HalloweenSacrificePit.NetMulticast_StartLoadingAssets
	void NetMulticast_SpawnGiftSpawningPreludeEffects(struct UAkAudioEvent* AudioEvent, struct UParticleSystem* Particles); // Function ConZ.HalloweenSacrificePit.NetMulticast_SpawnGiftSpawningPreludeEffects
	void NetMulticast_SpawnGiftSpawningFinishedEffects(struct UAkAudioEvent* AudioEvent, struct UParticleSystem* Particles); // Function ConZ.HalloweenSacrificePit.NetMulticast_SpawnGiftSpawningFinishedEffects
}; 



// Class ConZ.PrisonerDebugUI_BodyConditionEntryWidget
// Size: 0x270(Inherited: 0x260) 
struct UPrisonerDebugUI_BodyConditionEntryWidget : public UUserWidget
{
	char pad_608[8];  // 0x260(0x8)
	struct UTextBlock* _nameTextBlock;  // 0x268(0x8)

}; 



// Class ConZ.VehicleWithEngineBlock
// Size: 0x28(Inherited: 0x28) 
struct UVehicleWithEngineBlock : public UInterface
{

}; 



// Class ConZ.TraderPersonalityDataAsset
// Size: 0x68(Inherited: 0x30) 
struct UTraderPersonalityDataAsset : public UDataAsset
{
	struct FGuid TraderPersistentId;  // 0x30(0x10)
	struct FString HumanReadableTraderName;  // 0x40(0x10)
	uint8_t  TraderType;  // 0x50(0x1)
	char pad_81[7];  // 0x51(0x7)
	struct TArray<struct FTraderMarkerTradeableOverrideStruct> PurchasableTradeablesClassesOverride;  // 0x58(0x10)

}; 



// Class ConZ.BuildingCraftingPanelBase
// Size: 0x298(Inherited: 0x260) 
struct UBuildingCraftingPanelBase : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UCraftingRecipeDescriptionPanel* _craftingRecipeDescriptionPanel;  // 0x278(0x8)
	struct UButton* _craftButton;  // 0x280(0x8)
	int32_t _craftingWidgetsPerRow;  // 0x288(0x4)
	char pad_652[4];  // 0x28C(0x4)
	struct UAkAudioEvent* _craftClickSound;  // 0x290(0x8)

	void OnRecipeClicked(struct UCraftingRecipeWidget* Widget); // Function ConZ.BuildingCraftingPanelBase.OnRecipeClicked
	void OnCraftingButtonReleased(); // Function ConZ.BuildingCraftingPanelBase.OnCraftingButtonReleased
}; 



// Class ConZ.WeaponActionClearMalfunctionSequence
// Size: 0xB8(Inherited: 0x28) 
struct UWeaponActionClearMalfunctionSequence : public UWeaponAction
{
	int32_t SortIndex;  // 0x28(0x4)
	uint8_t  MalfunctionType;  // 0x2C(0x1)
	char pad_45[3];  // 0x2D(0x3)
	struct FText Description;  // 0x30(0x18)
	struct UCircularMenuSegmentWeaponMalfunctionInfo* CircularMenuSegmentInfo;  // 0x48(0x8)
	struct TMap<uint8_t , struct FClearMalfunctionData> Malfunctions;  // 0x50(0x50)
	char pad_160_1 : 7;  // 0xA0(0x1)
	bool CanBeInterrupted : 1;  // 0xA0(0x1)
	char pad_161_1 : 7;  // 0xA1(0x1)
	bool AllowBeginFiringSequence : 1;  // 0xA1(0x1)
	char pad_162[22];  // 0xA2(0x16)

	bool ShowOnUI(); // Function ConZ.WeaponActionClearMalfunctionSequence.ShowOnUI
	bool ShouldClearMalfunctionOnEvent(uint8_t  malfunction, uint8_t  malfunctionEvent); // Function ConZ.WeaponActionClearMalfunctionSequence.ShouldClearMalfunctionOnEvent
	void SetNextMontageSectionFromPrevious(struct FName previousSection, struct FName NextSection); // Function ConZ.WeaponActionClearMalfunctionSequence.SetNextMontageSectionFromPrevious
	void SetNextMontageSection(struct FName NextSection); // Function ConZ.WeaponActionClearMalfunctionSequence.SetNextMontageSection
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionClearMalfunctionSequence.OnMontageEnded
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionClearMalfunctionSequence.OnMontageBlendingOutStarted
	void HandleMalfunctionEvent(uint8_t  malfunctionEvent, struct FWeaponMalfunctionEventDescription& desc); // Function ConZ.WeaponActionClearMalfunctionSequence.HandleMalfunctionEvent
	struct UAnimMontage* GetActiveAnimationWeapon(); // Function ConZ.WeaponActionClearMalfunctionSequence.GetActiveAnimationWeapon
	struct UAnimMontage* GetActiveAnimationBody(); // Function ConZ.WeaponActionClearMalfunctionSequence.GetActiveAnimationBody
	float Execute(); // Function ConZ.WeaponActionClearMalfunctionSequence.Execute
	void End(bool Regular); // Function ConZ.WeaponActionClearMalfunctionSequence.End
	bool CanInterrupt(); // Function ConZ.WeaponActionClearMalfunctionSequence.CanInterrupt
	bool CanExecute(uint8_t  malfunction); // Function ConZ.WeaponActionClearMalfunctionSequence.CanExecute
}; 



// Class ConZ.PrisonerBodySymptomCause_BloodshotEyes
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_BloodshotEyes : public UPrisonerBodySymptomCause
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.VehicleHandlingSkill
// Size: 0xB0(Inherited: 0xB0) 
struct UVehicleHandlingSkill : public UDexteritySkill
{

}; 



// Class ConZ.CraftingCondition
// Size: 0x28(Inherited: 0x28) 
struct UCraftingCondition : public UObject
{

}; 



// Class ConZ.AwarenessSkill
// Size: 0x328(Inherited: 0xB0) 
struct UAwarenessSkill : public UIntelligenceSkill
{
	char pad_176[16];  // 0xB0(0x10)
	float StaminaConsumption;  // 0xC0(0x4)
	char pad_196[4];  // 0xC4(0x4)
	struct UAkAudioEvent* EnterFocusModeAudioEvent;  // 0xC8(0x8)
	struct UAkAudioEvent* LeaveFocusModeAudioEvent;  // 0xD0(0x8)
	float _updateTime;  // 0xD8(0x4)
	float _serverUpdateTime;  // 0xDC(0x4)
	float _basicWatchingDetectionChance;  // 0xE0(0x4)
	float _mediumWatchingDetectionChance;  // 0xE4(0x4)
	float _advancedWatchingDetectionChance;  // 0xE8(0x4)
	float _aboveAdvancedWatchingDetectionChance;  // 0xEC(0x4)
	float _noSkillItemDetectionTime;  // 0xF0(0x4)
	float _basicItemDetectionTime;  // 0xF4(0x4)
	float _mediumItemDetectionTime;  // 0xF8(0x4)
	float _advancedItemDetectionTime;  // 0xFC(0x4)
	float _aboveAdvancedItemDetectionTime;  // 0x100(0x4)
	float _noSkillItemDetectionRadius;  // 0x104(0x4)
	float _basicItemDetectionRadius;  // 0x108(0x4)
	float _mediumItemDetectionRadius;  // 0x10C(0x4)
	float _advancedItemDetectionRadius;  // 0x110(0x4)
	float _aboveAdvancedItemDetectionRadius;  // 0x114(0x4)
	float _noSkillItemDetectionChance;  // 0x118(0x4)
	float _basicItemDetectionChance;  // 0x11C(0x4)
	float _mediumItemDetectionChance;  // 0x120(0x4)
	float _advancedItemDetectionChance;  // 0x124(0x4)
	float _aboveAdvancedItemDetectionChance;  // 0x128(0x4)
	float _noSkillItemHighlightByDayRadius;  // 0x12C(0x4)
	float _basicItemHighlightByDayRadius;  // 0x130(0x4)
	float _mediumItemHighlightByDayRadius;  // 0x134(0x4)
	float _advancedItemHighlightByDayRadius;  // 0x138(0x4)
	float _aboveAdvancedItemHighlightByDayRadius;  // 0x13C(0x4)
	float _noSkillItemHighlightByNightRadius;  // 0x140(0x4)
	float _basicItemHighlightByNightRadius;  // 0x144(0x4)
	float _mediumItemHighlightByNightRadius;  // 0x148(0x4)
	float _advancedItemHighlightByNightRadius;  // 0x14C(0x4)
	float _aboveAdvancedItemHighlightByNightRadius;  // 0x150(0x4)
	float _noSkillWatchingDetectionRadius;  // 0x154(0x4)
	float _basicWatchingDetectionRadius;  // 0x158(0x4)
	float _mediumWatchingDetectionRadius;  // 0x15C(0x4)
	float _advancedWatchingDetectionRadius;  // 0x160(0x4)
	float _aboveAdvancedWatchingDetectionRadius;  // 0x164(0x4)
	float _characterDetectionAngle;  // 0x168(0x4)
	float _characterDetectionTime;  // 0x16C(0x4)
	float _characterDetectionRange;  // 0x170(0x4)
	float _characterDetectionPeriodicRangeIncrement;  // 0x174(0x4)
	float _noSkillHiddenCharacterDetectionRange;  // 0x178(0x4)
	float _basicHiddenCharacterDetectionRange;  // 0x17C(0x4)
	float _mediumHiddenCharacterDetectionRange;  // 0x180(0x4)
	float _advancedHiddenCharacterDetectionRange;  // 0x184(0x4)
	float _aboveAdvancedHiddenCharacterDetectionRange;  // 0x188(0x4)
	float _noSkillHotSpotHiddenCharacterDetectionRange;  // 0x18C(0x4)
	float _basicHotSpotHiddenCharacterDetectionRange;  // 0x190(0x4)
	float _mediumHotSpotHiddenCharacterDetectionRange;  // 0x194(0x4)
	float _advancedHotSpotHiddenCharacterDetectionRange;  // 0x198(0x4)
	float _aboveAdvancedHotSpotHiddenCharacterDetectionRange;  // 0x19C(0x4)
	float _noSkillSoundDetectionRange;  // 0x1A0(0x4)
	float _basicSoundDetectionRange;  // 0x1A4(0x4)
	float _mediumSoundDetectionRange;  // 0x1A8(0x4)
	float _advancedSoundDetectionRange;  // 0x1AC(0x4)
	float _aboveAdvancedSoundDetectionRange;  // 0x1B0(0x4)
	float _notMovingFocusRangeMultiplier;  // 0x1B4(0x4)
	float _slowMovingFocusRangeMultiplier;  // 0x1B8(0x4)
	float _mediumMovingFocusRangeMultiplier;  // 0x1BC(0x4)
	float _fastMovingFocusRangeMultiplier;  // 0x1C0(0x4)
	float _noSkillFocusModeActivationTime;  // 0x1C4(0x4)
	float _basicFocusModeActivationTime;  // 0x1C8(0x4)
	float _mediumFocusModeActivationTime;  // 0x1CC(0x4)
	float _advancedFocusModeActivationTime;  // 0x1D0(0x4)
	float _aboveAdvancedFocusModeActivationTime;  // 0x1D4(0x4)
	float _trackDetectionRangePerSkillLevel[5];  // 0x1D8(0x14)
	float _noSkillTrapDetectionRange;  // 0x1EC(0x4)
	float _basicTrapDetectionRange;  // 0x1F0(0x4)
	float _mediumTrapDetectionRange;  // 0x1F4(0x4)
	float _advancedTrapDetectionRange;  // 0x1F8(0x4)
	float _aboveAdvancedTrapDetectionRange;  // 0x1FC(0x4)
	float _noSkillFlashFadeOutDurationMultiplier;  // 0x200(0x4)
	float _basicFlashFadeOutDurationMultiplier;  // 0x204(0x4)
	float _mediumFlashFadeOutDurationMultiplier;  // 0x208(0x4)
	float _advancedFlashFadeOutDurationMultiplier;  // 0x20C(0x4)
	float _aboveAdvancedFlashFadeOutDurationMultiplier;  // 0x210(0x4)
	float _noSkillContainerItemSpawnProbabilityModifier;  // 0x214(0x4)
	float _basicContainerItemSpawnProbabilityModifier;  // 0x218(0x4)
	float _mediumContainerItemSpawnProbabilityModifier;  // 0x21C(0x4)
	float _advancedContainerItemSpawnProbabilityModifier;  // 0x220(0x4)
	float _aboveAdvancedContainerItemSpawnProbabilityModifier;  // 0x224(0x4)
	char pad_552[256];  // 0x228(0x100)

	void EnterFocusMode(); // Function ConZ.AwarenessSkill.EnterFocusMode
}; 



// Class ConZ.VehicleEnginePowertrainComponent
// Size: 0xC8(Inherited: 0xB0) 
struct UVehicleEnginePowertrainComponent : public UVehiclePowertrainComponent
{
	char pad_176[24];  // 0xB0(0x18)

	void BeginIgnitionAttempt(uint32_t ignitionAttempts, bool willRecoverFromStall); // Function ConZ.VehicleEnginePowertrainComponent.BeginIgnitionAttempt
}; 



// Class ConZ.CriminalRecordText
// Size: 0x3F0(Inherited: 0x260) 
struct UCriminalRecordText : public UUserWidget
{
	struct UBorder* _mainBorder;  // 0x260(0x8)
	struct UTextBlock* _textTitle;  // 0x268(0x8)
	struct UTextBlock* _textValue;  // 0x270(0x8)
	char pad_632_1 : 7;  // 0x278(0x1)
	bool _hasLeftBorder : 1;  // 0x278(0x1)
	char pad_633[7];  // 0x279(0x7)
	struct FSlateBrush _leftAndBottomBorder;  // 0x280(0x88)
	struct FSlateBrush _bottomBorder;  // 0x308(0x88)
	struct FText _title;  // 0x390(0x18)
	int32_t _titleFontSize;  // 0x3A8(0x4)
	struct FMargin _titlePadding;  // 0x3AC(0x10)
	char pad_956[4];  // 0x3BC(0x4)
	struct FText _value;  // 0x3C0(0x18)
	int32_t _valueFontSize;  // 0x3D8(0x4)
	struct FMargin _valuePadding;  // 0x3DC(0x10)
	char EHorizontalAlignment _horizontalAlignment;  // 0x3EC(0x1)
	char pad_1005[3];  // 0x3ED(0x3)

}; 



// Class ConZ.FoliageInstancedTree
// Size: 0x6B0(Inherited: 0x6B0) 
struct UFoliageInstancedTree : public UFoliageInstancedStaticMeshComponent
{

}; 



// Class ConZ.BarberShop
// Size: 0x288(Inherited: 0x278) 
struct ABarberShop : public ACharacterModificationRoom
{
	struct TArray<struct UCharacterMesh*> _characterMeshesToAddOntoPrisoner;  // 0x278(0x10)

}; 



// Class ConZ.BadAdjustableSeparator
// Size: 0x270(Inherited: 0x260) 
struct UBadAdjustableSeparator : public UUserWidget
{
	struct USizeBox* UpperSizeBox;  // 0x260(0x8)
	float HeightOverride;  // 0x268(0x4)
	char pad_620_1 : 7;  // 0x26C(0x1)
	bool TradingRelated : 1;  // 0x26C(0x1)
	char pad_621[3];  // 0x26D(0x3)

}; 



// Class ConZ.PrisonerActionCheckWeaponAmmoDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionCheckWeaponAmmoDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.BankAccountRegistryRequest
// Size: 0x48(Inherited: 0x28) 
struct UBankAccountRegistryRequest : public UPlayerRpcChannelServerRequest
{
	char pad_40[32];  // 0x28(0x20)

}; 



// Class ConZ.QuickAccessBarWidget
// Size: 0x2D0(Inherited: 0x260) 
struct UQuickAccessBarWidget : public UUserWidget
{
	struct TArray<struct UQuickAccessItemWidget*> _quickAccessItemContainers;  // 0x260(0x10)
	struct UHorizontalBox* _horizontalBox;  // 0x270(0x8)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_2;  // 0x278(0x8)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_3;  // 0x280(0x8)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_4;  // 0x288(0x8)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_5;  // 0x290(0x8)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_6;  // 0x298(0x8)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_7;  // 0x2A0(0x8)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_8;  // 0x2A8(0x8)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_9;  // 0x2B0(0x8)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_10;  // 0x2B8(0x8)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_1;  // 0x2C0(0x8)
	char pad_712[8];  // 0x2C8(0x8)

}; 



// Class ConZ.BankAccountRegistryResponseDataObject
// Size: 0xA0(Inherited: 0x28) 
struct UBankAccountRegistryResponseDataObject : public UObject
{
	char pad_40[120];  // 0x28(0x78)

}; 



// Class ConZ.DataSingleton
// Size: 0xD90(Inherited: 0x28) 
struct UDataSingleton : public UObject
{
	struct TArray<struct FProjectileImpulseMultiplier> ImpulseMultipliers;  // 0x28(0x10)
	struct FCanvasIcon CrosshairIconUp;  // 0x38(0x18)
	struct FCanvasIcon CrosshairIconDown;  // 0x50(0x18)
	struct FCanvasIcon CrosshairIconLeft;  // 0x68(0x18)
	struct FCanvasIcon CrosshairIconRight;  // 0x80(0x18)
	struct FCanvasIcon CrosshairIconCenter;  // 0x98(0x18)
	struct FCanvasIcon CrosshairIconCenterThrowing;  // 0xB0(0x18)
	struct FCanvasIcon CrosshairBlockedIcon;  // 0xC8(0x18)
	struct FCanvasIcon BowSpreadCircle;  // 0xE0(0x18)
	struct UTexture2D* SingleFireIcon;  // 0xF8(0x8)
	struct UTexture2D* AutoFireIcon;  // 0x100(0x8)
	struct UTexture2D* BurstFireIcon;  // 0x108(0x8)
	float WeaponSpreadBase;  // 0x110(0x4)
	struct FWeaponSpreadData WeaponSpreadData[9];  // 0x114(0x240)
	float BowArrowDeviationDegreesAngleByStep;  // 0x354(0x4)
	struct FWeaponViewKickData WeaponViewKickData[9];  // 0x358(0xD8)
	float WeaponAimingAutoCorrectAngle;  // 0x430(0x4)
	char pad_1076[4];  // 0x434(0x4)
	struct FWeaponMalfunctionProbabilityCurves WeaponMalfunctionProbabilityCurves;  // 0x438(0x3B8)
	float UpperBoundStaminaAmountToDrain;  // 0x7F0(0x4)
	float LowerBoundWeaponWeightForStaminaDrain;  // 0x7F4(0x4)
	float UpperBoundWeaponWeightForStaminaDrain;  // 0x7F8(0x4)
	struct FFloatInterval FOVFirstPersonMultiplierRange;  // 0x7FC(0x8)
	struct FFloatInterval FOVThirdPersonMultiplierRange;  // 0x804(0x8)
	struct FFloatInterval FOVFirstPersonDrivingMultiplierRange;  // 0x80C(0x8)
	struct FFloatInterval FOVThirdPersonDrivingMultiplierRange;  // 0x814(0x8)
	float WeaponFOVWhileScoping;  // 0x81C(0x4)
	struct UCurveFloat* DownTheSightsModeLerpCurve;  // 0x820(0x8)
	struct UMaterialParameterCollection* WeaponFOVParameterCollection;  // 0x828(0x8)
	struct FFloatInterval LoadMagazineSpeedModifierSkillFactor;  // 0x830(0x8)
	struct FFloatInterval LoadMagazineSpeedModifierDexterityFactor;  // 0x838(0x8)
	struct FCanvasIcon InteractIcon;  // 0x840(0x18)
	struct FCanvasIcon BondageIcon;  // 0x858(0x18)
	struct UInputDataAsset* DefaultInputData;  // 0x870(0x8)
	struct UDerivedWidgetsData* Widgets;  // 0x878(0x8)
	struct UMaterialInterface* PlaceablePrimaryMatValid;  // 0x880(0x8)
	struct UMaterialInterface* PlaceablePrimaryMatInvalid;  // 0x888(0x8)
	struct UMaterialInterface* PlaceablePrimaryMatFriendlyFlag;  // 0x890(0x8)
	struct UMaterialInterface* PlaceableOutlineMat;  // 0x898(0x8)
	struct UMaterialInterface* PlaceableDepthMat;  // 0x8A0(0x8)
	struct UMaterialInterface* PlaceableMaterialRadiusSphere;  // 0x8A8(0x8)
	struct UMaterialInterface* ItemPlacementMatValid;  // 0x8B0(0x8)
	struct UMaterialInterface* ItemPlacementMatInvalid;  // 0x8B8(0x8)
	struct UMaterialInterface* WidgetMaterial;  // 0x8C0(0x8)
	struct UBaseItemTag* ToolBoxItemTag;  // 0x8C8(0x8)
	struct UBaseItemTag* MushroomItemTag;  // 0x8D0(0x8)
	struct UBaseItemTag* AlcoholItemTag;  // 0x8D8(0x8)
	struct UBaseItemTag* SoapItemTag;  // 0x8E0(0x8)
	struct TSoftClassPtr<UObject> AnimalSkinItemClass;  // 0x8E8(0x28)
	struct UTrapData* TrapData;  // 0x910(0x8)
	struct TSoftClassPtr<UObject> DogTagItemClass;  // 0x918(0x28)
	struct TMap<struct TSoftClassPtr<UObject>, struct TSoftClassPtr<UObject>> ClothesItemChoppingRecipeIngredientsClassesToReplaceWhenDirty;  // 0x940(0x50)
	struct UDataTable* ItemGeneralParametersDataTable;  // 0x990(0x8)
	struct TSoftObjectPtr<UDataTable> ItemSpawningParametersTable;  // 0x998(0x28)
	char ECollisionChannel ItemObstructionCollisionChannel;  // 0x9C0(0x1)
	char pad_2497_1 : 7;  // 0x9C1(0x1)
	bool ShouldTraceComplexCollisionForItemObstruction : 1;  // 0x9C1(0x1)
	char pad_2498[6];  // 0x9C2(0x6)
	struct TSet<struct FPrimaryAssetId> AssetsHiddenFromAdminCommands;  // 0x9C8(0x50)
	struct UMissionDataGroup* MissonDataGroup;  // 0xA18(0x8)
	struct UDialogueData* DialogueData;  // 0xA20(0x8)
	struct USoundClass* VoiceSoundClass;  // 0xA28(0x8)
	struct UNetworkDataIdAsset* NetworkDataIdAsset;  // 0xA30(0x8)
	struct UWashClothesData* WashClothesData;  // 0xA38(0x8)
	struct UDecontaminateData* DecontaminateData;  // 0xA40(0x8)
	struct UBuryData* BuryData;  // 0xA48(0x8)
	struct UEmblemData* SquadEmblemData;  // 0xA50(0x8)
	struct UMaterialInterface* ItemTetrisMaterial;  // 0xA58(0x8)
	struct UPhysicalSurfacesEffectsData* PhysicalSurfaceEffectsData;  // 0xA60(0x8)
	struct UTexture2D* ChestLockedIcon;  // 0xA68(0x8)
	struct UTexture2D* ChestUnlockedIcon;  // 0xA70(0x8)
	struct UAkAudioEvent* ChestLockingSound;  // 0xA78(0x8)
	UGlobalUIData* UIData;  // 0xA80(0x8)
	struct UParticleSystem* WaterSplashParticleSystem;  // 0xA88(0x8)
	struct UAkAudioEvent* WaterSplashAudioEvent;  // 0xA90(0x8)
	struct USurfaceHardnessData* SurfaceHardnessData;  // 0xA98(0x8)
	struct UDamageData* DamageData;  // 0xAA0(0x8)
	UDamageCustomization* DefaultDamageCustomizationClass;  // 0xAA8(0x8)
	UDamageCustomization* LandingDamageCustomizationClass;  // 0xAB0(0x8)
	struct TSoftClassPtr<UObject> BackpackCharacterMeshClass;  // 0xAB8(0x28)
	UGameResourceType* RainWaterResourceClass;  // 0xAE0(0x8)
	struct TArray<struct FGameResourceMixingRule> GameResourceMixingRules;  // 0xAE8(0x10)
	char EPhysicalSurface WaterSurfaceType;  // 0xAF8(0x1)
	char pad_2809[7];  // 0xAF9(0x7)
	struct UAkAudioEvent* TransactionCompleteSound;  // 0xB00(0x8)
	char pad_2824[232];  // 0xB08(0xE8)
	struct FGameplayTag GenderEnumVsGenderTagMapping[3];  // 0xBF0(0x18)
	ASurgeryRoom* SurgeryRoomClass;  // 0xC08(0x8)
	ABarberShop* BarberShopClass;  // 0xC10(0x8)
	UPrisonerCommonData* DefaultPrisonerCommonData;  // 0xC18(0x8)
	struct UPrisonerAppearanceSetDataAsset* PrisonerAppearanceSet;  // 0xC20(0x8)
	struct UCookingCommonData* CookingCommonData;  // 0xC28(0x8)
	struct UCookingRecipeRegistry* CookingRecipeRegistry;  // 0xC30(0x8)
	struct TSoftObjectPtr<UDataTable> CookingUtilityUIDataTable;  // 0xC38(0x28)
	struct UFamePointSettings* FamePointSettings;  // 0xC60(0x8)
	struct TArray<struct FPrimaryAssetId> AlwaysFunctioningVehicles;  // 0xC68(0x10)
	UEntitySystemSettings* DefaultEntitySystemSettings;  // 0xC78(0x8)
	char pad_3200[88];  // 0xC80(0x58)
	struct UDataTable* _cookingUtilityTagToUIDataTable;  // 0xCD8(0x8)
	float _noiseLevelValues[6];  // 0xCE0(0x18)
	struct FAITeamAttitudeData _teamAttitudes[7];  // 0xCF8(0x31)
	char pad_3369[87];  // 0xD29(0x57)
	struct UDataTable* _economyTradeablesDataTable;  // 0xD80(0x8)
	struct UEconomySpecificData* _economySpecificData;  // 0xD88(0x8)

}; 



// Class ConZ.BankATMPinSlot
// Size: 0x2B0(Inherited: 0x260) 
struct UBankATMPinSlot : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct UWidgetSwitcher* _pinNumberTypeSwitcher;  // 0x270(0x8)
	struct UTextBlock* _pinNumber;  // 0x278(0x8)
	struct UImage* _animatedEntryBar;  // 0x280(0x8)
	struct UWidgetAnimation* _enterNumber;  // 0x288(0x8)
	struct UWidgetAnimation* _enterNumberLast;  // 0x290(0x8)
	char pad_664[16];  // 0x298(0x10)
	float _caretBlinkSeconds;  // 0x2A8(0x4)
	char pad_684[4];  // 0x2AC(0x4)

	void OnCaretSettles(); // Function ConZ.BankATMPinSlot.OnCaretSettles
	void OnCaretCoversNumber(); // Function ConZ.BankATMPinSlot.OnCaretCoversNumber
}; 



// Class ConZ.FishingAttachmentReel
// Size: 0x9E0(Inherited: 0x930) 
struct AFishingAttachmentReel : public AFishingAttachment
{
	struct USkeletalMeshComponent* SkeletalMesh;  // 0x930(0x8)
	struct FName ReelHandIK;  // 0x938(0x8)
	float _reelHandleAcceleration;  // 0x940(0x4)
	float _fastReelHandleAcceleration;  // 0x944(0x4)
	float _reelFriction;  // 0x948(0x4)
	float _fastReelFriction;  // 0x94C(0x4)
	float _reelVelocityThreshold;  // 0x950(0x4)
	float _reelVelocityLimit;  // 0x954(0x4)
	float _reelAccelerationModifier;  // 0x958(0x4)
	char pad_2396[4];  // 0x95C(0x4)
	struct FTransform _leftHandOffset;  // 0x960(0x30)
	struct UAnimMontage* _lockAfterLongCastAnimMontage;  // 0x990(0x8)
	struct UAnimMontage* _lockAfterShortCastAnimMontage;  // 0x998(0x8)
	struct UAnimMontage* _reelCastAnimMontage;  // 0x9A0(0x8)
	struct UAnimSequenceBase* _reelingAnimSequence;  // 0x9A8(0x8)
	struct UAkAudioEvent* _reelingStartAudioEvent;  // 0x9B0(0x8)
	struct UAkAudioEvent* _reelingEndAudioEvent;  // 0x9B8(0x8)
	char pad_2496[12];  // 0x9C0(0xC)
	struct FVector _leftHandIKLocationCache;  // 0x9CC(0xC)
	char pad_2520[8];  // 0x9D8(0x8)

}; 



// Class ConZ.PrisonerUITooltipCache
// Size: 0x1B8(Inherited: 0x28) 
struct UPrisonerUITooltipCache : public UObject
{
	char pad_40[400];  // 0x28(0x190)

}; 



// Class ConZ.GameResourceType_Solid
// Size: 0xA0(Inherited: 0xA0) 
struct UGameResourceType_Solid : public UGameResourceType
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Leukopenia
// Size: 0xD0(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_Leukopenia : public UPrisonerBodyConditionOrSymptomSideEffect
{
	UPrisonerBodySymptom_Leukopenia* _symptomClass;  // 0x30(0x8)
	struct UPrisonerBodySymptomCause_Leukopenia* _symptomCause;  // 0x38(0x8)
	struct FRuntimeFloatCurve _immuneSystemEfficiencyModifierVsSeverity;  // 0x40(0x88)
	char pad_200[8];  // 0xC8(0x8)

}; 



// Class ConZ.ItemSpawnerEvaluationResultEntityComponentSetup
// Size: 0x48(Inherited: 0x48) 
struct UItemSpawnerEvaluationResultEntityComponentSetup : public UEntityComponentSetup
{

}; 



// Class ConZ.BankATMAccountInfo
// Size: 0x300(Inherited: 0x260) 
struct UBankATMAccountInfo : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UTextBlock* _accountNumber;  // 0x278(0x8)
	struct UTextBlock* _accountName;  // 0x280(0x8)
	struct UTextBlock* _cardType;  // 0x288(0x8)
	struct UTextBlock* _renewalAmount;  // 0x290(0x8)
	struct UHorizontalBox* _goldAmountHorizontalBox;  // 0x298(0x8)
	struct UTextBlock* _goldAmount;  // 0x2A0(0x8)
	struct UBankATMPointingButton* _btnReturn;  // 0x2A8(0x8)
	struct TMap<uint8_t , struct FSlateColor> _cardTypeFontColor;  // 0x2B0(0x50)

}; 



// Class ConZ.BankATMBoughtCard
// Size: 0x3C0(Inherited: 0x260) 
struct UBankATMBoughtCard : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	uint8_t  _cardQualityType;  // 0x278(0x1)
	char pad_633[7];  // 0x279(0x7)
	struct TMap<uint8_t , struct FSlateBrush> _cardBrushes;  // 0x280(0x50)
	struct FBankATMBoughtCardStateVisual _normalVisuals;  // 0x2D0(0x40)
	struct FBankATMBoughtCardStateVisual _hoveredVisuals;  // 0x310(0x40)
	struct FBankATMBoughtCardStateVisual _pressedVisuals;  // 0x350(0x40)
	struct UOverlay* _visualOverlay;  // 0x390(0x8)
	struct UImage* _imgCardBackground;  // 0x398(0x8)
	struct UTextBlock* _textCardType;  // 0x3A0(0x8)
	struct UTextBlock* _textCardNumber;  // 0x3A8(0x8)
	struct UWidgetSwitcher* _optionsCircleSwitcher;  // 0x3B0(0x8)
	char pad_952[8];  // 0x3B8(0x8)

}; 



// Class ConZ.PrisonerAppearanceSetDataAsset
// Size: 0x170(Inherited: 0x30) 
struct UPrisonerAppearanceSetDataAsset : public UDataAsset
{
	float BreastSizeMin;  // 0x30(0x4)
	float BreastSizeMax;  // 0x34(0x4)
	float BreastSizeMaxInCharacterCreation;  // 0x38(0x4)
	float BreastSizeDeluxeModifier;  // 0x3C(0x4)
	float PenisSizeMin;  // 0x40(0x4)
	float PenisSizeMax;  // 0x44(0x4)
	float PenisSizeMaxInCharacterCreation;  // 0x48(0x4)
	float PenisSizeDeluxeModifier;  // 0x4C(0x4)
	struct TArray<struct UPrisonerAppearanceDataAsset*> _femaleAppearanceData;  // 0x50(0x10)
	struct TArray<struct UPrisonerAppearanceDataAsset*> _maleAppearanceData;  // 0x60(0x10)
	struct TArray<struct FPrisonerAppearance_HairStyle> _maleHairStyles;  // 0x70(0x10)
	struct TArray<struct FPrisonerAppearance_HairStyle> _maleFacialHairStyles;  // 0x80(0x10)
	struct TArray<struct FPrisonerAppearance_HairStyle> _femaleHairStyles;  // 0x90(0x10)
	struct TArray<struct FPrisonerAppearance_HairColorPreset> _dyedHairColors;  // 0xA0(0x10)
	struct TMap<struct FGameplayTag, struct FPrisonerAppearance_TattooArray> _tattooArrays;  // 0xB0(0x50)
	struct TMap<struct FGameplayTag, struct FPrisonerAppearance_SkinParams> _skinParams;  // 0x100(0x50)
	struct TArray<struct FPrisonerAppearance_IrisColor> _irisColors;  // 0x150(0x10)
	struct TArray<struct FPrisonerAppearance_IrisVariation> _irisVariations;  // 0x160(0x10)

}; 



// Class ConZ.PrisonerVehicleAction_QuickRemoveAttachmentDescription
// Size: 0x60(Inherited: 0x38) 
struct UPrisonerVehicleAction_QuickRemoveAttachmentDescription : public UPrisonerActionDescription
{
	char pad_56[40];  // 0x38(0x28)

}; 



// Class ConZ.VehicleAttachment_Chassis
// Size: 0x350(Inherited: 0x310) 
struct UVehicleAttachment_Chassis : public UVehicleAttachment
{
	char pad_784[8];  // 0x310(0x8)
	struct TArray<UVehicleBaseMountSlot*> _mountSlotClasses;  // 0x318(0x10)
	struct TArray<struct FVehicleServiceItemSlot> _serviceItemSlots;  // 0x328(0x10)
	struct TArray<struct UVehicleBaseMountSlot*> _mountSlots;  // 0x338(0x10)
	char pad_840[8];  // 0x348(0x8)

}; 



// Class ConZ.BankATMBuyableCard
// Size: 0x2E8(Inherited: 0x260) 
struct UBankATMBuyableCard : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	uint8_t  _cardQualityType;  // 0x278(0x1)
	char pad_633[3];  // 0x279(0x3)
	struct FBankATMBuyableCardStateVisual _normalVisuals;  // 0x27C(0xC)
	struct FBankATMBuyableCardStateVisual _hoveredAndPressedVisuals;  // 0x288(0xC)
	struct FBankATMBuyableCardStateVisual _disabledVisuals;  // 0x294(0xC)
	struct UWidgetSwitcher* _visualStateSwitcher;  // 0x2A0(0x8)
	struct UImage* _toggleablePlusCircle;  // 0x2A8(0x8)
	struct UTextBlock* _textCardType;  // 0x2B0(0x8)
	struct UTextBlock* _textFreeRenewals;  // 0x2B8(0x8)
	struct UTextBlock* _textDigitsOfPin;  // 0x2C0(0x8)
	struct UTextBlock* _textOperationalTransactionLimit;  // 0x2C8(0x8)
	struct UTextBlock* _textGoldPurchaseAvailable;  // 0x2D0(0x8)
	struct UTextBlock* _textCardCost;  // 0x2D8(0x8)
	char pad_736[8];  // 0x2E0(0x8)

}; 



// Class ConZ.BankATMCardManagementOptionsScreen
// Size: 0x2D0(Inherited: 0x260) 
struct UBankATMCardManagementOptionsScreen : public UUserWidget
{
	char pad_608[80];  // 0x260(0x50)
	struct UBankATMPointingButton* _btnRenew;  // 0x2B0(0x8)
	struct UBankATMPointingButton* _btnDelete;  // 0x2B8(0x8)
	struct UBankATMPointingButton* _btnReturn;  // 0x2C0(0x8)
	struct UBankATMErrorPopup* _popupMessage;  // 0x2C8(0x8)

}; 



// Class ConZ.BankATMCarouselCard
// Size: 0x2E8(Inherited: 0x260) 
struct UBankATMCarouselCard : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UWidgetSwitcher* _typeSwitcher;  // 0x278(0x8)
	struct UTextBlock* _numberLabel;  // 0x280(0x8)
	struct UImage* _ownershipIcon;  // 0x288(0x8)
	struct UPanelWidget* _expirationNotice;  // 0x290(0x8)
	struct FColor _stolenCardColor;  // 0x298(0x4)
	char pad_668[8];  // 0x29C(0x8)
	struct FBankATMCarouselCardStateVisual _normalVisuals;  // 0x2A4(0x10)
	struct FBankATMCarouselCardStateVisual _hoveredVisuals;  // 0x2B4(0x10)
	struct FBankATMCarouselCardStateVisual _pressedVisuals;  // 0x2C4(0x10)
	struct FBankATMCarouselCardStateVisual _disabledVisuals;  // 0x2D4(0x10)
	char pad_740[4];  // 0x2E4(0x4)

}; 



// Class ConZ.CustomZoneSettingsEventDisplay
// Size: 0x278(Inherited: 0x260) 
struct UCustomZoneSettingsEventDisplay : public UUserWidget
{
	struct UTextBlock* _eventNameText;  // 0x260(0x8)
	struct UTextBlock* _handlingMethodText;  // 0x268(0x8)
	struct UCustomZoneDataAsset* _customZoneData;  // 0x270(0x8)

}; 



// Class ConZ.BankATMChooseTransaction
// Size: 0x310(Inherited: 0x260) 
struct UBankATMChooseTransaction : public UUserWidget
{
	char pad_608[120];  // 0x260(0x78)
	struct UBankATMPointingButton* _btnWithdraw;  // 0x2D8(0x8)
	struct UBankATMPointingButton* _btnDeposit;  // 0x2E0(0x8)
	struct UBankATMPointingButton* _btnTransfer;  // 0x2E8(0x8)
	struct UBankATMPointingButton* _btnEjectCard;  // 0x2F0(0x8)
	struct UBankATMPointingButton* _btnAccountInfo;  // 0x2F8(0x8)
	struct UBankATMPointingButton* _btnBuyGold;  // 0x300(0x8)
	struct UBankATMPointingButton* _btnSellGold;  // 0x308(0x8)

}; 



// Class ConZ.BankATMEnterPin
// Size: 0x2D8(Inherited: 0x260) 
struct UBankATMEnterPin : public UUserWidget
{
	char pad_608[32];  // 0x260(0x20)
	struct UWidgetSwitcher* _pinEnteringSwitcher;  // 0x280(0x8)
	struct UTextBlock* _enterPinTitleMessage;  // 0x288(0x8)
	struct UPanelWidget* _pinSlotsPanel;  // 0x290(0x8)
	UBankATMPinSlot* _pinSlotClass;  // 0x298(0x8)
	struct UPanelWidget* _incorrectPinWarning;  // 0x2A0(0x8)
	struct UTextBlock* _remainingAttemptsLabel;  // 0x2A8(0x8)
	struct UBankATMPointingButton* _btnReturn;  // 0x2B0(0x8)
	struct UBankATMPointingButton* _btnSubmit;  // 0x2B8(0x8)
	char pad_704[24];  // 0x2C0(0x18)

}; 



// Class ConZ.SliderWithLabelAndNumber
// Size: 0x14C8(Inherited: 0xDB8) 
struct USliderWithLabelAndNumber : public UConZSlider
{
	char pad_3512[24];  // 0xDB8(0x18)
	struct UTextBlock* _name;  // 0xDD0(0x8)
	struct UTextBlock* _valueDisplay;  // 0xDD8(0x8)
	struct UImage* _focusBackgroundImage;  // 0xDE0(0x8)
	struct FSliderWithLabelAndNumberStyle _selectedAndFocusedSWNANStyle;  // 0xDE8(0x158)
	struct FSliderWithLabelAndNumberStyle _selectedAndUnfocusedSWNANStyle;  // 0xF40(0x158)
	struct FSliderWithLabelAndNumberStyle _unselectedSWNANStyle;  // 0x1098(0x158)
	struct FSliderWithLabelAndNumberStyle _highlightedSWNANStyle;  // 0x11F0(0x158)
	struct FSliderWithLabelAndNumberStyle _disabledSWNANStyle;  // 0x1348(0x158)
	struct FText _label;  // 0x14A0(0x18)
	int32_t _decimalPlacesShown;  // 0x14B8(0x4)
	int32_t _decimalPlacesShifted;  // 0x14BC(0x4)
	char pad_5312_1 : 7;  // 0x14C0(0x1)
	bool _showAsPercentage : 1;  // 0x14C0(0x1)
	char pad_5313[7];  // 0x14C1(0x7)

}; 



// Class ConZ.ChoppingToolItemTag
// Size: 0x40(Inherited: 0x30) 
struct UChoppingToolItemTag : public UBaseItemTag
{
	float ChoppingTimeMultiplier;  // 0x30(0x4)
	int32_t IngredientsQuantityBonus;  // 0x34(0x4)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool CanBeUsedForChoppingHair : 1;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 



// Class ConZ.ExplosiveTrapItem
// Size: 0xB60(Inherited: 0xA60) 
struct AExplosiveTrapItem : public ATrapItem
{
	float _detonationDelay;  // 0xA60(0x4)
	struct FVector _trapForwardVector;  // 0xA64(0xC)
	float _netCullDistanceSquaredMeters;  // 0xA70(0x4)
	char pad_2676[4];  // 0xA74(0x4)
	struct UAkAudioEvent* _triggerSound;  // 0xA78(0x8)
	struct UAkAudioEvent* _detonationSound;  // 0xA80(0x8)
	struct UParticleSystem* _detonationParticles;  // 0xA88(0x8)
	struct FTransform _detonationParticlesTransform;  // 0xA90(0x30)
	char pad_2752_1 : 7;  // 0xAC0(0x1)
	bool _hasPrimaryExplosion : 1;  // 0xAC0(0x1)
	char pad_2753[3];  // 0xAC1(0x3)
	float _primaryBaseDamage;  // 0xAC4(0x4)
	float _primaryMinimumDamage;  // 0xAC8(0x4)
	float _primaryDamageInnerRadius;  // 0xACC(0x4)
	float _primaryDamageOuterRadius;  // 0xAD0(0x4)
	float _primaryDamageMinAngleDeg;  // 0xAD4(0x4)
	float _primaryDamageMaxAngleDeg;  // 0xAD8(0x4)
	float _primaryDamageChanceMultiplier;  // 0xADC(0x4)
	float _primaryDamageMinChance;  // 0xAE0(0x4)
	float _primaryDamageMaxChance;  // 0xAE4(0x4)
	float _primaryDamageFalloff;  // 0xAE8(0x4)
	float _primaryDamageAngleFalloff;  // 0xAEC(0x4)
	struct FTargetTypeDamageMultiplier _primaryTargetTypeMultiplier;  // 0xAF0(0x10)
	char pad_2816_1 : 7;  // 0xB00(0x1)
	bool _hasSecondaryExplosion : 1;  // 0xB00(0x1)
	char pad_2817[3];  // 0xB01(0x3)
	float _secondaryBaseDamage;  // 0xB04(0x4)
	float _secondaryMinimumDamage;  // 0xB08(0x4)
	float _secondaryDamageInnerRadius;  // 0xB0C(0x4)
	float _secondaryDamageOuterRadius;  // 0xB10(0x4)
	float _secondaryDamageFalloff;  // 0xB14(0x4)
	struct FTargetTypeDamageMultiplier _secondaryTargetTypeMultiplier;  // 0xB18(0x10)
	char pad_2856_1 : 7;  // 0xB28(0x1)
	bool _instantlyDestroysStructures : 1;  // 0xB28(0x1)
	char pad_2857[3];  // 0xB29(0x3)
	float _structureDestructionRadius;  // 0xB2C(0x4)
	float _minimalElementAreaCovered;  // 0xB30(0x4)
	float _structureDestructionMinAngleDeg;  // 0xB34(0x4)
	float _structureDestructionMaxAngleDeg;  // 0xB38(0x4)
	float _explosionDamagePositionOffset;  // 0xB3C(0x4)
	float _explosionForce;  // 0xB40(0x4)
	char pad_2884[28];  // 0xB44(0x1C)

	void Detonate(); // Function ConZ.ExplosiveTrapItem.Detonate
}; 



// Class ConZ.RadioComponent
// Size: 0x420(Inherited: 0x3E0) 
struct URadioComponent : public UAkComponent
{
	float _volume;  // 0x3E0(0x4)
	int32_t _currentStationIndex;  // 0x3E4(0x4)
	char pad_1000[4];  // 0x3E8(0x4)
	char pad_1004_1 : 7;  // 0x3EC(0x1)
	bool _isHiFi : 1;  // 0x3EC(0x1)
	char pad_1005_1 : 7;  // 0x3ED(0x1)
	bool _isReachableFromSkyWhenMounted : 1;  // 0x3ED(0x1)
	char pad_1006[2];  // 0x3EE(0x2)
	float _attenuationScale;  // 0x3F0(0x4)
	char pad_1012_1 : 7;  // 0x3F4(0x1)
	bool _turnedOn : 1;  // 0x3F4(0x1)
	char pad_1013[43];  // 0x3F5(0x2B)

	void PlayTrackFromRadioStation(); // Function ConZ.RadioComponent.PlayTrackFromRadioStation
	void OnTrackStarted(); // Function ConZ.RadioComponent.OnTrackStarted
	void OnTrackEnded(); // Function ConZ.RadioComponent.OnTrackEnded
	void OnRep_Volume(); // Function ConZ.RadioComponent.OnRep_Volume
	void OnRep_TurnedOn(); // Function ConZ.RadioComponent.OnRep_TurnedOn
	void OnRep_StationIndex(); // Function ConZ.RadioComponent.OnRep_StationIndex
}; 



// Class ConZ.BankATMErrorPopup
// Size: 0x280(Inherited: 0x260) 
struct UBankATMErrorPopup : public UUserWidget
{
	struct UTextBlock* _popupMessage;  // 0x260(0x8)
	char pad_616[4];  // 0x268(0x4)
	float _fadeInTime;  // 0x26C(0x4)
	float _displayHoldTime;  // 0x270(0x4)
	float _fadeOutTime;  // 0x274(0x4)
	char pad_632[8];  // 0x278(0x8)

}; 



// Class ConZ.CheckAmmoMagazineAttached
// Size: 0x50(Inherited: 0x50) 
struct UCheckAmmoMagazineAttached : public UWeaponActionCheckAmmoSequence
{

}; 



// Class ConZ.WeaponActionCheckAmmoSequence
// Size: 0x50(Inherited: 0x28) 
struct UWeaponActionCheckAmmoSequence : public UWeaponAction
{
	struct FBodyWeaponAnimation Animations;  // 0x28(0x10)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool CanBeInterrupted : 1;  // 0x38(0x1)
	char pad_57[23];  // 0x39(0x17)

	void SetNextMontageSectionFromPrevious(struct FName previousSection, struct FName NextSection); // Function ConZ.WeaponActionCheckAmmoSequence.SetNextMontageSectionFromPrevious
	void SetNextMontageSection(struct FName NextSection); // Function ConZ.WeaponActionCheckAmmoSequence.SetNextMontageSection
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionCheckAmmoSequence.OnMontageEnded
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionCheckAmmoSequence.OnMontageBlendingOutStarted
	struct UAnimMontage* GetActiveAnimationWeapon(); // Function ConZ.WeaponActionCheckAmmoSequence.GetActiveAnimationWeapon
	struct UAnimMontage* GetActiveAnimationBody(); // Function ConZ.WeaponActionCheckAmmoSequence.GetActiveAnimationBody
	float Execute(); // Function ConZ.WeaponActionCheckAmmoSequence.Execute
	void End(bool Regular); // Function ConZ.WeaponActionCheckAmmoSequence.End
	bool CanInterrupt(); // Function ConZ.WeaponActionCheckAmmoSequence.CanInterrupt
	bool CanExecute(); // Function ConZ.WeaponActionCheckAmmoSequence.CanExecute
}; 



// Class ConZ.InventoryContainerSelection
// Size: 0xB8(Inherited: 0x28) 
struct UInventoryContainerSelection : public UObject
{
	char pad_40[8];  // 0x28(0x8)
	int32_t _maxNumOfItems;  // 0x30(0x4)
	char pad_52[20];  // 0x34(0x14)
	struct TArray<struct UObject*> _itemsRep;  // 0x48(0x10)
	char pad_88[16];  // 0x58(0x10)
	struct UObject* _parentRep;  // 0x68(0x8)
	struct FInventoryContainerSelectionRepData _data;  // 0x70(0x28)
	struct TArray<struct UInventoryContainerWidget2*> _widgets;  // 0x98(0x10)
	struct UInventoryContainerWidget2* _widget;  // 0xA8(0x8)
	char pad_176[8];  // 0xB0(0x8)

	void OnRep_Parent(); // Function ConZ.InventoryContainerSelection.OnRep_Parent
	void OnRep_Items(struct TArray<struct UObject*> _oldItems); // Function ConZ.InventoryContainerSelection.OnRep_Items
	void OnRep_Data(struct FInventoryContainerSelectionRepData OldData); // Function ConZ.InventoryContainerSelection.OnRep_Data
	void OnItemDestroyed(struct AActor* Actor); // Function ConZ.InventoryContainerSelection.OnItemDestroyed
}; 



// Class ConZ.PrisonerActionDecontaminate
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionDecontaminate : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.BankATMGoldValueGraph
// Size: 0x280(Inherited: 0x260) 
struct UBankATMGoldValueGraph : public UUserWidget
{
	struct UVerticalBox* _yAxisVerticalBox;  // 0x260(0x8)
	struct UImage* _graphShadedAreaImg;  // 0x268(0x8)
	struct UHorizontalBox* _xAxisHorizontalBox;  // 0x270(0x8)
	struct UTextBlock* _graphDescriptionTextBox;  // 0x278(0x8)

}; 



// Class ConZ.PrisonerActionAttachItemDescription
// Size: 0x70(Inherited: 0x38) 
struct UPrisonerActionAttachItemDescription : public UPrisonerActionDescription
{
	char pad_56[56];  // 0x38(0x38)

}; 



// Class ConZ.SkillClasses
// Size: 0x38(Inherited: 0x28) 
struct USkillClasses : public UObject
{
	char pad_40[16];  // 0x28(0x10)

}; 



// Class ConZ.BankATMMainPanel
// Size: 0x2E0(Inherited: 0x260) 
struct UBankATMMainPanel : public UUserWidget
{
	struct FDelegate OnMouseMoveEvent;  // 0x260(0x10)
	struct UWidget* _virtualMouseCursorWidget;  // 0x270(0x8)
	char pad_632[16];  // 0x278(0x10)
	struct UWidgetSwitcher* _panelSwitcher;  // 0x288(0x8)
	struct UBankATMWelcomeScreen* _welcomeScreen;  // 0x290(0x8)
	struct UBankATMEnterPin* _enterPinScreen;  // 0x298(0x8)
	struct UBankATMChooseTransaction* _chooseTransactionScreen;  // 0x2A0(0x8)
	struct UBankATMMoneyTransfer* _moneyTransferScreen;  // 0x2A8(0x8)
	struct UBankATMGoldTrading* _goldTradingScreen;  // 0x2B0(0x8)
	struct UBankATMManageCards* _manageCardsScreen;  // 0x2B8(0x8)
	struct UBankATMAccountInfo* _accountInfoScreen;  // 0x2C0(0x8)
	struct UBankATMAccountSummary* _accountSummaryHeader;  // 0x2C8(0x8)
	struct UPanelWidget* _loadingOverlay;  // 0x2D0(0x8)
	char pad_728[8];  // 0x2D8(0x8)

}; 



// Class ConZ.MetabolismTreatmentPanel
// Size: 0x2B8(Inherited: 0x260) 
struct UMetabolismTreatmentPanel : public UUserWidget
{
	struct UVerticalBox* _untreatedColumn;  // 0x260(0x8)
	struct UVerticalBox* _stabilizationColumn;  // 0x268(0x8)
	struct UVerticalBox* _recoveryColumn;  // 0x270(0x8)
	struct UImage* _untreatedBackground;  // 0x278(0x8)
	struct UImage* _stabilizationBackground;  // 0x280(0x8)
	struct UImage* _recoveryBackground;  // 0x288(0x8)
	UMetabolismBodyEffectProgressBar* _progressBarClass;  // 0x290(0x8)
	UTextOnlyTooltip* _tooltipClass;  // 0x298(0x8)
	char pad_672[24];  // 0x2A0(0x18)

}; 



// Class ConZ.BoatMountSlot
// Size: 0x190(Inherited: 0x140) 
struct UBoatMountSlot : public UVehicleBaseMountSlot
{
	uint8_t  _controlType;  // 0x140(0x1)
	char pad_321[7];  // 0x141(0x7)
	struct UBlendSpace* _paddlingLHandAnimation;  // 0x148(0x8)
	struct UBlendSpace* _paddlingRHandAnimation;  // 0x150(0x8)
	struct UAnimSequence* _paddlingLToRAnimation;  // 0x158(0x8)
	struct UAnimSequence* _paddlingRToLAnimation;  // 0x160(0x8)
	struct UAnimSequence* _startEngineStartAnimation;  // 0x168(0x8)
	struct UAnimSequence* _startEngineLoopAnimation;  // 0x170(0x8)
	struct UAnimSequence* _startEngineLongLoopAnimation;  // 0x178(0x8)
	struct UAnimSequence* _startEngineEndAnimation;  // 0x180(0x8)
	char pad_392[8];  // 0x188(0x8)

}; 



// Class ConZ.CraftingAction
// Size: 0x28(Inherited: 0x28) 
struct UCraftingAction : public UObject
{

}; 



// Class ConZ.Wristwatch
// Size: 0x2C0(Inherited: 0x220) 
struct AWristwatch : public AActor
{
	struct USkeletalMeshComponent* SkeletalMesh;  // 0x220(0x8)
	struct UTextureRenderTarget2D* TextRenderTarget;  // 0x228(0x8)
	struct UFont* TimeFont;  // 0x230(0x8)
	float TextScaleX;  // 0x238(0x4)
	float TextScaleY;  // 0x23C(0x4)
	float Time;  // 0x240(0x4)
	char pad_580[4];  // 0x244(0x4)
	struct UAkAudioEvent* AlarmSound;  // 0x248(0x8)
	struct USkeletalMesh* _maleWristwatchMesh;  // 0x250(0x8)
	struct USkeletalMesh* _femaleWristwatchMesh;  // 0x258(0x8)
	char pad_608[96];  // 0x260(0x60)

	void SetDisplayBrightness(float Value); // Function ConZ.Wristwatch.SetDisplayBrightness
}; 



// Class ConZ.ExplosionDamageType
// Size: 0x40(Inherited: 0x40) 
struct UExplosionDamageType : public UDamageType
{

}; 



// Class ConZ.BankATMManageCards
// Size: 0x310(Inherited: 0x260) 
struct UBankATMManageCards : public UUserWidget
{
	char pad_608[40];  // 0x260(0x28)
	struct UWidgetSwitcher* _screenSwitcher;  // 0x288(0x8)
	struct UHorizontalBox* _boughtCardsHorizontalBox;  // 0x290(0x8)
	struct UBankATMBoughtCard* _boughtCardStarter;  // 0x298(0x8)
	struct UBankATMBoughtCard* _boughtCardGold;  // 0x2A0(0x8)
	struct UBankATMBoughtCard* _boughtCardClassic;  // 0x2A8(0x8)
	struct UTextBlock* _textNoCards;  // 0x2B0(0x8)
	struct UHorizontalBox* _buyableCardsHorizontalBox;  // 0x2B8(0x8)
	struct UBankATMBuyableCard* _buyableCardClassic;  // 0x2C0(0x8)
	struct UBankATMBuyableCard* _buyableCardGold;  // 0x2C8(0x8)
	struct UTextBlock* _textInventoryBalance;  // 0x2D0(0x8)
	struct UTextBlock* _textAccountBalance;  // 0x2D8(0x8)
	struct UBankATMPointingButton* _btnBack;  // 0x2E0(0x8)
	struct UBankATMCardManagementOptionsScreen* _cardManagementOptionsScreen;  // 0x2E8(0x8)
	struct UBankATMYesNoConfirmationScreen* _purchaseConfirmationScreen;  // 0x2F0(0x8)
	struct UBankATMYesNoConfirmationScreen* _cancellationConfirmationScreen;  // 0x2F8(0x8)
	struct UBankATMYesNoConfirmationScreen* _renewalConfirmationScreen;  // 0x300(0x8)
	char pad_776[8];  // 0x308(0x8)

}; 



// Class ConZ.ConZBoatAnimInstance
// Size: 0x350(Inherited: 0x2C0) 
struct UConZBoatAnimInstance : public UAnimInstance
{
	char pad_704_1 : 7;  // 0x2C0(0x1)
	bool IsAnyoneMounted : 1;  // 0x2B8(0x1)
	float Speed;  // 0x2BC(0x4)
	float SpeedKph;  // 0x2C0(0x4)
	float MaxEngineSteerAngle;  // 0x2C4(0x4)
	float EngineSteerAngleInterpSpeed;  // 0x2C8(0x4)
	float CurrentEngineSteerAngle;  // 0x2CC(0x4)
	float PropellerRotationAngle;  // 0x2D0(0x4)
	float PropellerRotationSpeedScale;  // 0x2D4(0x4)
	float SailsRotationAngle;  // 0x2D8(0x4)
	char pad_737_1 : 7;  // 0x2E1(0x1)
	bool IsMounteeDriver : 1;  // 0x2DC(0x1)
	char pad_738_1 : 7;  // 0x2E2(0x1)
	bool IsMounteeRowing : 1;  // 0x2DD(0x1)
	struct FTransform _prisonerLHandTransform;  // 0x2E0(0x30)
	struct FTransform _prisonerRHandTransform;  // 0x310(0x30)
	struct FVector WindDirection;  // 0x340(0xC)
	char pad_847[1];  // 0x34F(0x1)

}; 



// Class ConZ.Minigame
// Size: 0x2F8(Inherited: 0x220) 
struct AMinigame : public AActor
{
	char pad_544[48];  // 0x220(0x30)
	int32_t _testingMode;  // 0x250(0x4)
	char pad_596[4];  // 0x254(0x4)
	struct USceneComponent* _rootComponent;  // 0x258(0x8)
	struct USceneCaptureComponent2D* _captureCam;  // 0x260(0x8)
	struct USceneCaptureComponent2D* _captureMaskCam;  // 0x268(0x8)
	char pad_624[8];  // 0x270(0x8)
	struct UMinigameWidget* _minigameWidget;  // 0x278(0x8)
	UMinigameWidget* _minigameWidgetClass;  // 0x280(0x8)
	char pad_648[40];  // 0x288(0x28)
	float _introDuration;  // 0x2B0(0x4)
	float _outroDurationOnFail;  // 0x2B4(0x4)
	float _outroDurationOnSuccess;  // 0x2B8(0x4)
	char pad_700_1 : 7;  // 0x2BC(0x1)
	bool _canBeCanceled : 1;  // 0x2BC(0x1)
	uint8_t  _simulatedMontage;  // 0x2BD(0x1)
	char pad_702[2];  // 0x2BE(0x2)
	struct UAkAudioEvent* _simulatedAudioStart;  // 0x2C0(0x8)
	struct UAkAudioEvent* _simulatedAudioStop;  // 0x2C8(0x8)
	struct TArray<UBaseItemTag*> _takeInHandsItemTagClasses;  // 0x2D0(0x10)
	char pad_736[8];  // 0x2E0(0x8)
	struct TArray<struct TWeakObjectPtr<AItem>> _currentlyUsedTools;  // 0x2E8(0x10)

}; 



// Class ConZ.PrisonerCorpse
// Size: 0x7C0(Inherited: 0x3B0) 
struct APrisonerCorpse : public ACorpse
{
	char pad_944[8];  // 0x3B0(0x8)
	struct TArray<struct FCorpseStaticMeshRepData> StrippedStaticMeshData;  // 0x3B8(0x10)
	struct TArray<struct FCorpseSkeletalMeshRepData> StrippedSkeletalMeshData;  // 0x3C8(0x10)
	struct UChoppingRecipeDataAsset* HeadlessChoppingRecipeDataAsset;  // 0x3D8(0x8)
	APrisoner* LivingClass;  // 0x3E0(0x8)
	AGib* GibClass;  // 0x3E8(0x8)
	struct UParticleSystem* HeadExplosionParticles;  // 0x3F0(0x8)
	struct USkeletalMesh* HeadExplodedMesh;  // 0x3F8(0x8)
	struct TArray<struct UStaticMesh*> HeadExplosionGibMeshes;  // 0x400(0x10)
	struct FCorpseSkeletalMeshRepData PenisMeshData;  // 0x410(0x70)
	struct FCorpseSkeletalMeshRepData StrippedPenisMeshData;  // 0x480(0x70)
	struct UStaticMesh* CensorMesh;  // 0x4F0(0x8)
	struct UMaterialInstance* CensorMaterial;  // 0x4F8(0x8)
	struct UStaticMeshComponent* GenitalsCensorComponent;  // 0x500(0x8)
	struct UStaticMeshComponent* LeftBreastCensorComponent;  // 0x508(0x8)
	struct UStaticMeshComponent* RightBreastCensorComponent;  // 0x510(0x8)
	char pad_1304_1 : 7;  // 0x518(0x1)
	bool Headless : 1;  // 0x518(0x1)
	uint8_t  _gender;  // 0x519(0x1)
	char pad_1306[2];  // 0x51A(0x2)
	float _fatness;  // 0x51C(0x4)
	float _muscliness;  // 0x520(0x4)
	float _skinniness;  // 0x524(0x4)
	float _breastSize;  // 0x528(0x4)
	float _penisSize;  // 0x52C(0x4)
	int32_t _appearanceIndex;  // 0x530(0x4)
	struct FVector _penisLocationSkinny;  // 0x534(0xC)
	struct FVector _penisLocationFat;  // 0x540(0xC)
	char pad_1356_1 : 7;  // 0x54C(0x1)
	bool _penisShowing : 1;  // 0x54C(0x1)
	char pad_1357_1 : 7;  // 0x54D(0x1)
	bool _breastsShowing : 1;  // 0x54D(0x1)
	char pad_1358[2];  // 0x54E(0x2)
	float _hairLength;  // 0x550(0x4)
	float _facialHairLength;  // 0x554(0x4)
	struct FString _userProfileName;  // 0x558(0x10)
	char pad_1384[8];  // 0x568(0x8)
	struct FDbIntegerId _serverUserProfileId;  // 0x570(0x8)
	struct FDbIntegerId _killerServerUserProfileId;  // 0x578(0x8)
	float _killClaimFamePointsReward;  // 0x580(0x4)
	char pad_1412_1 : 7;  // 0x584(0x1)
	bool _killClaimed : 1;  // 0x584(0x1)
	char pad_1413[3];  // 0x585(0x3)
	struct UCurveFloat* _shortHairCurve;  // 0x588(0x8)
	struct UCurveFloat* _mediumHairCurve;  // 0x590(0x8)
	struct UCurveFloat* _mediumHairCurvePDO;  // 0x598(0x8)
	struct UCurveFloat* _mediumHairCurveTopOpacity;  // 0x5A0(0x8)
	struct UCurveFloat* _longHairCurve;  // 0x5A8(0x8)
	struct UCurveFloat* _longHairCurvePDO;  // 0x5B0(0x8)
	struct UCurveFloat* _longHairCurveTopOpacity;  // 0x5B8(0x8)
	struct UCurveFloat* _afroMediumHairCurve;  // 0x5C0(0x8)
	struct UCurveFloat* _shortFacialHairCurve;  // 0x5C8(0x8)
	struct UCurveFloat* _mediumFacialHairCurve;  // 0x5D0(0x8)
	struct UCurveFloat* _mediumFacialHairCurvePDO;  // 0x5D8(0x8)
	struct UCurveFloat* _mediumFacialHairCurveTopOpacity;  // 0x5E0(0x8)
	struct UCurveFloat* _longFacialHairCurve;  // 0x5E8(0x8)
	struct UCurveFloat* _longFacialHairCurvePDO;  // 0x5F0(0x8)
	struct UCurveFloat* _longFacialHairCurveTopOpacity;  // 0x5F8(0x8)
	UCharacterMesh* _censorClass;  // 0x600(0x8)
	char pad_1544[16];  // 0x608(0x10)
	uint64_t _appearanceRepData1;  // 0x618(0x8)
	uint64_t _appearanceRepData2;  // 0x620(0x8)
	struct TSoftObjectPtr<UPrisonerCommonData> _prisonerCommonData;  // 0x628(0x28)
	char pad_1616[368];  // 0x650(0x170)

	void UpdateWetnessFromPrisoner(struct APrisoner* Prisoner); // Function ConZ.PrisonerCorpse.UpdateWetnessFromPrisoner
	void UpdateHair(); // Function ConZ.PrisonerCorpse.UpdateHair
	void OnRep_PenisShowing(); // Function ConZ.PrisonerCorpse.OnRep_PenisShowing
	void OnRep_BreastsShowing(); // Function ConZ.PrisonerCorpse.OnRep_BreastsShowing
	void OnRep_AppearanceData(); // Function ConZ.PrisonerCorpse.OnRep_AppearanceData
	struct USkeletalMeshComponent* GetHairMeshComponent(); // Function ConZ.PrisonerCorpse.GetHairMeshComponent
	float GetHairLength(); // Function ConZ.PrisonerCorpse.GetHairLength
	struct USkeletalMeshComponent* GetFacialHairMeshComponent(); // Function ConZ.PrisonerCorpse.GetFacialHairMeshComponent
	float GetFacialHairLength(); // Function ConZ.PrisonerCorpse.GetFacialHairLength
}; 



// Class ConZ.FishSpeciesData
// Size: 0x88(Inherited: 0x30) 
struct UFishSpeciesData : public UDataAsset
{
	uint8_t  FishSpecies;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct UStaticMesh* SingleFishStaticMesh;  // 0x38(0x8)
	struct USkeletalMesh* SingleFishSkeletalMesh;  // 0x40(0x8)
	struct UMaterialInterface* MaterialOverride;  // 0x48(0x8)
	struct UAnimSequence* CaughtFishAnimSequence;  // 0x50(0x8)
	AFishSchoolActor* SchoolClass;  // 0x58(0x8)
	AActor* caughtFishClass;  // 0x60(0x8)
	char pad_104_1 : 7;  // 0x68(0x1)
	bool Predator : 1;  // 0x68(0x1)
	char pad_105[3];  // 0x69(0x3)
	float MinDepth;  // 0x6C(0x4)
	float MaxDepth;  // 0x70(0x4)
	float MinMass;  // 0x74(0x4)
	float MaxMass;  // 0x78(0x4)
	float MaxLength;  // 0x7C(0x4)
	struct UCurveFloat* TimeOfDayPercentageCurve;  // 0x80(0x8)

}; 



// Class ConZ.CookingCategoryDropdown
// Size: 0x2B0(Inherited: 0x260) 
struct UCookingCategoryDropdown : public UUserWidget
{
	char pad_608[32];  // 0x260(0x20)
	USimpleTextDropdownEntry* _textDropdownEntryClass;  // 0x280(0x8)
	struct UTextBlock* _chosenCategory;  // 0x288(0x8)
	struct UMenuAnchor* _popup;  // 0x290(0x8)
	UVerticalScrollBoxDropdownContent* _categoryDropdownContentClass;  // 0x298(0x8)
	struct TArray<struct FCookingCategoryDropdownEntryData> _cookingCategoryDropdownEntries;  // 0x2A0(0x10)

	struct UUserWidget* CreateContentWidget(); // Function ConZ.CookingCategoryDropdown.CreateContentWidget
}; 



// Class ConZ.BankATMMinigame
// Size: 0x358(Inherited: 0x2F8) 
struct ABankATMMinigame : public AMinigame
{
	struct UBankATMUIController* _uiController;  // 0x2F8(0x8)
	struct UStaticMeshComponent* _bankATMMesh;  // 0x300(0x8)
	struct UWidgetComponent* _bankATMWidget;  // 0x308(0x8)
	struct FVector _zoomStartLocation;  // 0x310(0xC)
	struct FVector _zoomEndLocation;  // 0x31C(0xC)
	struct UCurveFloat* _zoomCurve;  // 0x328(0x8)
	float _virtualMouseMinSensitivityModifier;  // 0x330(0x4)
	float _virtualMouseMaxSensitivityModifier;  // 0x334(0x4)
	char pad_824[16];  // 0x338(0x10)
	struct UStaticMesh* _atmMesh;  // 0x348(0x8)
	struct UStaticMesh* _tabletMesh;  // 0x350(0x8)

}; 



// Class ConZ.DedicatedServerResponse
// Size: 0xD0(Inherited: 0x28) 
struct UDedicatedServerResponse : public UObject
{
	char pad_40[48];  // 0x28(0x30)
	struct UDbConnection* _dbConnection;  // 0x58(0x8)
	char pad_96[112];  // 0x60(0x70)

}; 



// Class ConZ.MinigameConfiguration
// Size: 0x48(Inherited: 0x28) 
struct UMinigameConfiguration : public UObject
{
	AMinigame* minigameClass;  // 0x28(0x8)
	char pad_48[24];  // 0x30(0x18)

}; 



// Class ConZ.PrisonerActionClaimKill
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionClaimKill : public UPrisonerAction
{

}; 



// Class ConZ.BankATMMoneyTransfer
// Size: 0x370(Inherited: 0x260) 
struct UBankATMMoneyTransfer : public UUserWidget
{
	char pad_608[64];  // 0x260(0x40)
	struct UButton* _btnEjectCard;  // 0x2A0(0x8)
	struct UWidgetSwitcher* _buttonSwitcher;  // 0x2A8(0x8)
	struct UBankATMPointingButton* _btnReturn;  // 0x2B0(0x8)
	struct UBankATMPointingButton* _btnSubmit;  // 0x2B8(0x8)
	struct UBankATMPointingButton* _btnNo;  // 0x2C0(0x8)
	struct UBankATMPointingButton* _btnYes;  // 0x2C8(0x8)
	struct UWidgetSwitcher* _subsectionSwitcher;  // 0x2D0(0x8)
	struct UBankATMVirtualEditbox* _editAccountNumber;  // 0x2D8(0x8)
	struct UBankATMVirtualEditbox* _editTransferAmount;  // 0x2E0(0x8)
	struct UBankATMVirtualEditbox* _editDepositAmount;  // 0x2E8(0x8)
	struct UBankATMVirtualEditbox* _editWithdrawAmount;  // 0x2F0(0x8)
	struct UTextBlock* _questionLabel;  // 0x2F8(0x8)
	struct UTextBlock* _errorLabel;  // 0x300(0x8)
	struct UTextBlock* _commissionPercentageTextBlock;  // 0x308(0x8)
	struct UTextBlock* _inventoryBalanceTextBlock;  // 0x310(0x8)
	struct UAkAudioEvent* _soundSuccess;  // 0x318(0x8)
	struct UAkAudioEvent* _errorSuccess;  // 0x320(0x8)
	char pad_808[72];  // 0x328(0x48)

	void HandleOnEjectCardButtonClicked(); // Function ConZ.BankATMMoneyTransfer.HandleOnEjectCardButtonClicked
}; 



// Class ConZ.PrisonerActionPairRemoteKeyAndSensor
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionPairRemoteKeyAndSensor : public UPrisonerAction
{

}; 



// Class ConZ.CharacterSpawningManager
// Size: 0x1840(Inherited: 0x220) 
struct ACharacterSpawningManager : public AActor
{
	struct TArray<struct FPawnCharacterInfo> _spawnableCharacters;  // 0x220(0x10)
	float _managerProcessUpdateTime;  // 0x230(0x4)
	float _spawnUpdateTime;  // 0x234(0x4)
	float _spawnTriggerGroupUpdateTime;  // 0x238(0x4)
	float _spawnTriggerGroupRadius;  // 0x23C(0x4)
	float _spawnTriggerGroupProximityQueryRadius;  // 0x240(0x4)
	float _interiorSearchDistanceThreshold;  // 0x244(0x4)
	float _exteriorSpawnerGroupsSpawnCooldownTime;  // 0x248(0x4)
	float _interiorSpawnerGroupsSpawnCooldownTime;  // 0x24C(0x4)
	float _baseElementQueryDistance;  // 0x250(0x4)
	float _exteriorSpawnerGroupsProbability;  // 0x254(0x4)
	float _interiorSpawnerGroupsProbability;  // 0x258(0x4)
	char pad_604_1 : 7;  // 0x25C(0x1)
	bool _disableSerialization : 1;  // 0x25C(0x1)
	char pad_605_1 : 7;  // 0x25D(0x1)
	bool _startSpawnerGroupCooldownAfterSpawning : 1;  // 0x25D(0x1)
	char pad_606_1 : 7;  // 0x25E(0x1)
	bool _startSpawnerGroupCooldownAfterEnteringInterior : 1;  // 0x25E(0x1)
	char pad_607[329];  // 0x25F(0x149)
	struct TSet<APawn*> _referencedPawnClasses;  // 0x3A8(0x50)
	struct TSet<APawn*> _disabledPawnClasses;  // 0x3F8(0x50)
	struct TSet<APawn*> _suicidePuppetClasses;  // 0x448(0x50)
	char pad_1176[5032];  // 0x498(0x13A8)

	void SpawnCharactersAroundLocation(struct FSpawnCharacterAroundInfo& Info); // Function ConZ.CharacterSpawningManager.SpawnCharactersAroundLocation
	void SpawnCharacterGroup(struct FSpawnCharacterGroupInfo& Info); // Function ConZ.CharacterSpawningManager.SpawnCharacterGroup
	bool SpawnCharacter(struct FTransform& SpawnTransform, APawn* PawnClass, bool IgnoreLimit); // Function ConZ.CharacterSpawningManager.SpawnCharacter
	void OnSpawnTriggerDestroyed(struct AActor* DestroyedActor); // Function ConZ.CharacterSpawningManager.OnSpawnTriggerDestroyed
	void OnSpawnedPawnDestroyed(struct AActor* DestroyedActor); // Function ConZ.CharacterSpawningManager.OnSpawnedPawnDestroyed
}; 



// Class ConZ.PrisonerBodyCondition_BladderFull
// Size: 0xE8(Inherited: 0xC0) 
struct UPrisonerBodyCondition_BladderFull : public UPrisonerBodyCondition
{
	float _bladderFullnessToExist;  // 0xC0(0x4)
	float _bladderFullnessToForceUrinate;  // 0xC4(0x4)
	UPrisonerBodySymptom_NeedToUrinate* _needToUrinateSymptomClass;  // 0xC8(0x8)
	struct UPrisonerBodySymptomCause* _needToUrinateSymptomCause;  // 0xD0(0x8)
	char pad_216[16];  // 0xD8(0x10)

}; 



// Class ConZ.RangedResourceProviderComponentContinousAmount
// Size: 0x118(Inherited: 0x118) 
struct URangedResourceProviderComponentContinousAmount : public URangedResourceProviderComponent
{

}; 



// Class ConZ.DerivedWidgetsData
// Size: 0x2A0(Inherited: 0x30) 
struct UDerivedWidgetsData : public UDataAsset
{
	UUserWidget* CraftingPanel;  // 0x30(0x8)
	UUserWidget* CraftingInfo;  // 0x38(0x8)
	UUserWidget* CraftingSectionContainer;  // 0x40(0x8)
	UUserWidget* CraftableItem;  // 0x48(0x8)
	UUserWidget* CraftingIngredient;  // 0x50(0x8)
	UUserWidget* CraftingPossibleItem;  // 0x58(0x8)
	UUserWidget* StripedFiller;  // 0x60(0x8)
	UUserWidget* AvailableItem;  // 0x68(0x8)
	UWorldCraftingMarkerWidget* WorldCraftingMarker;  // 0x70(0x8)
	ULoadingScreen* LoadingScreen;  // 0x78(0x8)
	UUserWidget* InteractionWidgetClass;  // 0x80(0x8)
	UUserWidget* InteractionGroupWidgetClass;  // 0x88(0x8)
	UUserWidget* InteractionContainerWidgetClass;  // 0x90(0x8)
	UUserWidget* ItemWidgetClass;  // 0x98(0x8)
	UUserWidget* InventoryWidgetClass;  // 0xA0(0x8)
	UUserWidget* InventorySlotWidgetClass;  // 0xA8(0x8)
	UUserWidget* WarningWidgetClass;  // 0xB0(0x8)
	UUserWidget* HudWidgetClass;  // 0xB8(0x8)
	UUserWidget* LoadingWidgetClass;  // 0xC0(0x8)
	UUserWidget* LoadingIconWidgetClass;  // 0xC8(0x8)
	UUserWidget* SpawnScreenWidgetClass;  // 0xD0(0x8)
	UUserWidget* WaypointScreenWidgetClass;  // 0xD8(0x8)
	UUserWidget* HoverPanelWidgetClass;  // 0xE0(0x8)
	UUserWidget* ActionProgressWidgetClass;  // 0xE8(0x8)
	UUserWidget* ItemSelectionWidgetClass;  // 0xF0(0x8)
	UUserWidget* ExamineWidgetClass;  // 0xF8(0x8)
	UUserWidget* HandsInventoryWidgetClass;  // 0x100(0x8)
	UUserWidget* GenericItemInventoryWidgetClass;  // 0x108(0x8)
	UUserWidget* InventoryContainersWidgetClass;  // 0x110(0x8)
	UUserWidget* CombinedInventoryWidgetClass;  // 0x118(0x8)
	UUserWidget* TeamInvitationWidgetClass;  // 0x120(0x8)
	UUserWidget* CraftingInfoWidgetClass;  // 0x128(0x8)
	UUserWidget* CraftingComponentWidgetClass;  // 0x130(0x8)
	UUserWidget* CraftingRecipeWidgetClass;  // 0x138(0x8)
	UUserWidget* EmptySlotWidgetClass;  // 0x140(0x8)
	UUserWidget* PreviousNextSwitchWidgetClass;  // 0x148(0x8)
	UUserWidget* VicinityItemContainerWidgetClass;  // 0x150(0x8)
	UUserWidget* QuickAccessItemWidget;  // 0x158(0x8)
	UChangeTextWidget* ChangeTextWidgetClass;  // 0x160(0x8)
	UItemStatusWidget* ItemStatusWidgetClass;  // 0x168(0x8)
	UHealthWidget* HealthWidgetClass;  // 0x170(0x8)
	UUserWidget* GameEventCardWidgetClass;  // 0x178(0x8)
	UUserWidget* GameEventScoreboardWidgetClass;  // 0x180(0x8)
	UUserWidget* GameEventMiniScoreboardWidgetClass;  // 0x188(0x8)
	UUserWidget* TournamentScoreboardWidgetClass;  // 0x190(0x8)
	UUserWidget* CircularMenuWidgetClass;  // 0x198(0x8)
	UUserWidget* CircularMenuSegmentWidgetClass;  // 0x1A0(0x8)
	UUserWidget* LockpickingWidgetClass;  // 0x1A8(0x8)
	UDoorUpgradeWidget* DoorUpgradeWidgetClass;  // 0x1B0(0x8)
	UUserWidget* InventoryContainerWidget2Test;  // 0x1B8(0x8)
	UUserWidget* InventoryItemWidget2Test;  // 0x1C0(0x8)
	UUserWidget* ItemInventoryWidget2Holsters;  // 0x1C8(0x8)
	UUserWidget* ItemInventoryWidget2;  // 0x1D0(0x8)
	UUserWidget* InventoryPanelSideLayerWidget;  // 0x1D8(0x8)
	UUserWidget* ItemSplittingWidgetClass;  // 0x1E0(0x8)
	struct TMap<uint8_t , UUserWidget*> Widgets;  // 0x1E8(0x50)
	UUserWidget* ObjectivesWidgetClass;  // 0x238(0x8)
	UUserWidget* MissionPromptClass;  // 0x240(0x8)
	UUserWidget* MissionResultClass;  // 0x248(0x8)
	UUserWidget* MissionItemClass;  // 0x250(0x8)
	UUserWidget* ObjectiveItemClass;  // 0x258(0x8)
	UUserWidget* MissionRewardClass;  // 0x260(0x8)
	UUserWidget* RewardItemWidgetClass;  // 0x268(0x8)
	UUserWidget* StatisticsListRow;  // 0x270(0x8)
	struct TArray<struct FTooltipPanelData> ItemTooltipPanels;  // 0x278(0x10)
	UUserWidget* MalfunctionsContainerClass;  // 0x288(0x8)
	UUserWidget* WeaponAmmoCountContainerClass;  // 0x290(0x8)
	UUserWidget* PlaceableElementWidgetClass;  // 0x298(0x8)

}; 



// Class ConZ.BankATMMyCardsButton
// Size: 0x720(Inherited: 0x260) 
struct UBankATMMyCardsButton : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UImage* _background;  // 0x278(0x8)
	struct UImage* _cardIcon;  // 0x280(0x8)
	struct UTextBlock* _labelMy;  // 0x288(0x8)
	struct UTextBlock* _labelCards;  // 0x290(0x8)
	char pad_664[8];  // 0x298(0x8)
	struct FBankATMMyCardsButtonStateVisual _normalVisuals;  // 0x2A0(0x120)
	struct FBankATMMyCardsButtonStateVisual _hoveredVisuals;  // 0x3C0(0x120)
	struct FBankATMMyCardsButtonStateVisual _pressedVisuals;  // 0x4E0(0x120)
	struct FBankATMMyCardsButtonStateVisual _disabledVisuals;  // 0x600(0x120)

}; 



// Class ConZ.CurrencyConversionResponse
// Size: 0x30(Inherited: 0x28) 
struct UCurrencyConversionResponse : public UPlayerRpcChannelServerResponse
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.PrisonerActionChargeVehicleBattery
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionChargeVehicleBattery : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.BankATMUIController
// Size: 0x120(Inherited: 0x28) 
struct UBankATMUIController : public UObject
{
	char pad_40[248];  // 0x28(0xF8)

}; 



// Class ConZ.PrisonerActionThrowItem
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionThrowItem : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerInventoryComponent
// Size: 0x348(Inherited: 0xB0) 
struct UPrisonerInventoryComponent : public UActorComponent
{
	char pad_176[40];  // 0xB0(0x28)
	struct FMulticastInlineDelegate ItemEquipped;  // 0xD8(0x10)
	struct FMulticastInlineDelegate ItemUnequipped;  // 0xE8(0x10)
	struct TArray<struct UCraftingInfoWidget*> CraftingInfoWidgets;  // 0xF8(0x10)
	float AddSelectionDuration;  // 0x108(0x4)
	float AddSelectionReplicationDelay;  // 0x10C(0x4)
	float TickFrequency;  // 0x110(0x4)
	char pad_276[12];  // 0x114(0xC)
	struct UStaticMesh* _chipMesh;  // 0x120(0x8)
	char pad_296[24];  // 0x128(0x18)
	struct UQuickAccessManager* _quickAccessManager;  // 0x140(0x8)
	char pad_328[24];  // 0x148(0x18)
	struct TMap<struct TWeakObjectPtr<AItem>, uint32_t> _vicinityItems;  // 0x160(0x50)
	char pad_432[24];  // 0x1B0(0x18)
	struct TMap<struct FGameplayTag, struct FClothesPartSet> _clothesPartsToDamageByMeleeAttackCapsuleAttachment;  // 0x1C8(0x50)
	struct TArray<struct TSoftClassPtr<UObject>> _characterMeshClassesSorted;  // 0x218(0x10)
	AClothesItem* _parachuteClass;  // 0x228(0x8)
	struct UInventoryContainerClothes* _inventoryClothes;  // 0x230(0x8)
	struct UInventoryContainerHandsHolsters* _inventoryHandsHolsters;  // 0x238(0x8)
	struct UInventoryContainerSelection* _inventorySelection2;  // 0x240(0x8)
	char pad_584[80];  // 0x248(0x50)
	struct UInv2021_InventoryContainerClothes* _inventoryContainerClothes;  // 0x298(0x8)
	char pad_672[168];  // 0x2A0(0xA8)

	void UnEquipStolenClothesItemOnServer(struct APrisoner* stolenPrisoner, struct AClothesItem* Item); // Function ConZ.PrisonerInventoryComponent.UnEquipStolenClothesItemOnServer
	void UnEquipClothesItemOnServer(struct AClothesItem* Item, bool placeInInventory, bool shouldEverDrop); // Function ConZ.PrisonerInventoryComponent.UnEquipClothesItemOnServer
	void UnEquipClothesItem(struct AClothesItem* Item, bool placeInInventory, bool shouldEverDrop); // Function ConZ.PrisonerInventoryComponent.UnEquipClothesItem
	void SpawnAndDropItemAtOnServer(struct UContainerItemDescriptor* Item, struct FVector Location, struct FRotator Rotation); // Function ConZ.PrisonerInventoryComponent.SpawnAndDropItemAtOnServer
	void Server_SendQuickAccessState(struct TArray<struct FQuickAccessSlotData> Data); // Function ConZ.PrisonerInventoryComponent.Server_SendQuickAccessState
	void Server_PickupCorpse(struct ACorpse* Corpse); // Function ConZ.PrisonerInventoryComponent.Server_PickupCorpse
	void Server_InitializeItemVirtualizedInventory(struct UObject* Item, struct UObject* container); // Function ConZ.PrisonerInventoryComponent.Server_InitializeItemVirtualizedInventory
	void RemoveStolenItemOnServer(struct APrisoner* stolenPrisoner, struct AItem* Item); // Function ConZ.PrisonerInventoryComponent.RemoveStolenItemOnServer
	struct TScriptInterface<IInventoryNode> RemoveStacks(int32_t stacksToSplit); // Function ConZ.PrisonerInventoryComponent.RemoveStacks
	void RemoveSelectionItemsOnClients(struct TArray<struct AItem*> Items, bool allClients); // Function ConZ.PrisonerInventoryComponent.RemoveSelectionItemsOnClients
	void RemoveSelectionItemsOnClient(struct TArray<struct AItem*> Items); // Function ConZ.PrisonerInventoryComponent.RemoveSelectionItemsOnClient
	void RemoveItemOnServer(struct AItem* Item); // Function ConZ.PrisonerInventoryComponent.RemoveItemOnServer
	void OnEquippedClothesDestroyed(struct AActor* Actor); // Function ConZ.PrisonerInventoryComponent.OnEquippedClothesDestroyed
	void ItemUnequippedDelegate__DelegateSignature(struct UPrisonerInventoryComponent* sender, struct AItem* Item); // DelegateFunction ConZ.PrisonerInventoryComponent.ItemUnequippedDelegate__DelegateSignature
	void ItemEquippedDelegate__DelegateSignature(struct UPrisonerInventoryComponent* sender, struct AItem* Item); // DelegateFunction ConZ.PrisonerInventoryComponent.ItemEquippedDelegate__DelegateSignature
	bool IsClothesItemEquipped(struct AClothesItem* Item); // Function ConZ.PrisonerInventoryComponent.IsClothesItemEquipped
	bool HasSelectionItem(struct AItem* Item); // Function ConZ.PrisonerInventoryComponent.HasSelectionItem
	int32_t GetStacksCount(); // Function ConZ.PrisonerInventoryComponent.GetStacksCount
	float GetMaxHairLength(uint8_t  Gender); // Function ConZ.PrisonerInventoryComponent.GetMaxHairLength
	float GetMaxFacialHairLength(); // Function ConZ.PrisonerInventoryComponent.GetMaxFacialHairLength
	float GetGearWeightFast(); // Function ConZ.PrisonerInventoryComponent.GetGearWeightFast
	float GetGearWeight(); // Function ConZ.PrisonerInventoryComponent.GetGearWeight
	struct TArray<struct AClothesItem*> GetEquippedClothes(); // Function ConZ.PrisonerInventoryComponent.GetEquippedClothes
	void FinishAddSelectionItemOnServer(); // Function ConZ.PrisonerInventoryComponent.FinishAddSelectionItemOnServer
	void EquipItemInHandsOnServer(struct AItem* Item); // Function ConZ.PrisonerInventoryComponent.EquipItemInHandsOnServer
	void EquipClothesItemOnServer(struct AClothesItem* Item); // Function ConZ.PrisonerInventoryComponent.EquipClothesItemOnServer
	void EquipClothesItem(struct AClothesItem* Item); // Function ConZ.PrisonerInventoryComponent.EquipClothesItem
	void DropItemOnServer(struct AItem* Item); // Function ConZ.PrisonerInventoryComponent.DropItemOnServer
	void DropItemOnClient(struct AItem* Item); // Function ConZ.PrisonerInventoryComponent.DropItemOnClient
	void DropItemAtOnServer(struct AItem* Item, struct FVector Location, struct FRotator Rotation); // Function ConZ.PrisonerInventoryComponent.DropItemAtOnServer
	void DropAllItemsOnServer(struct TArray<struct AItem*> Items, bool removeSelection); // Function ConZ.PrisonerInventoryComponent.DropAllItemsOnServer
	void Client_SendQuickAccessState(struct TArray<struct FQuickAccessClientSyncData> Data, bool enableSendingState); // Function ConZ.PrisonerInventoryComponent.Client_SendQuickAccessState
	bool CanStackWith(struct UObject* Item); // Function ConZ.PrisonerInventoryComponent.CanStackWith
	bool CanStack(); // Function ConZ.PrisonerInventoryComponent.CanStack
	bool CanEquipClothesItem(struct AClothesItem* Item); // Function ConZ.PrisonerInventoryComponent.CanEquipClothesItem
	bool CanAddItem(struct AItem* Item, bool tryToJoinItems); // Function ConZ.PrisonerInventoryComponent.CanAddItem
	void AutoAddItemOnServer(struct AItem* Item, bool tryToJoinItems); // Function ConZ.PrisonerInventoryComponent.AutoAddItemOnServer
	void AutoAddAllItemsOnServer(struct TArray<struct AItem*> Items, bool removeSelection); // Function ConZ.PrisonerInventoryComponent.AutoAddAllItemsOnServer
	void AddStack(struct TScriptInterface<IInventoryNode> Item); // Function ConZ.PrisonerInventoryComponent.AddStack
	void AddSelectionItemOnClient(struct AItem* Item); // Function ConZ.PrisonerInventoryComponent.AddSelectionItemOnClient
	void AddDefaultEquipment(); // Function ConZ.PrisonerInventoryComponent.AddDefaultEquipment
}; 



// Class ConZ.BankATMVirtualEditbox
// Size: 0x2E0(Inherited: 0x260) 
struct UBankATMVirtualEditbox : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct FText _hintText;  // 0x278(0x18)
	struct UImage* _outline;  // 0x290(0x8)
	struct UTextBlock* _hintLabel;  // 0x298(0x8)
	struct UTextBlock* _editboxLabel;  // 0x2A0(0x8)
	char pad_680[4];  // 0x2A8(0x4)
	struct FBankATMVirtualEditboxStateVisual _inactiveVisuals;  // 0x2AC(0x10)
	struct FBankATMVirtualEditboxStateVisual _activeVisuals;  // 0x2BC(0x10)
	struct FBankATMVirtualEditboxStateVisual _disabledVisuals;  // 0x2CC(0x10)
	char pad_732[4];  // 0x2DC(0x4)

}; 



// Class ConZ.ChatWidget
// Size: 0x380(Inherited: 0x260) 
struct UChatWidget : public UUserWidget
{
	struct UButton* _muteButton;  // 0x260(0x8)
	struct UTextBlock* _muteText;  // 0x268(0x8)
	struct UImage* _backgroundImage;  // 0x270(0x8)
	struct UScrollBox* _chatScrollBox;  // 0x278(0x8)
	struct UScrollBox* _suggestionsScrollBox;  // 0x280(0x8)
	struct UOverlay* _suggestionsDropDown;  // 0x288(0x8)
	struct UEditableTextBox* _inputText;  // 0x290(0x8)
	struct UEditableTextBox* _suggestionTextBox;  // 0x298(0x8)
	struct UTextBlock* _chatTypeIndicator;  // 0x2A0(0x8)
	struct FLinearColor _localChatColor;  // 0x2A8(0x10)
	struct FLinearColor _globalChatColor;  // 0x2B8(0x10)
	struct FLinearColor _squadChatColor;  // 0x2C8(0x10)
	struct FLinearColor _serverChatColor;  // 0x2D8(0x10)
	struct FLinearColor _errorChatColor;  // 0x2E8(0x10)
	struct FLinearColor _defaultChatColor;  // 0x2F8(0x10)
	struct FLinearColor _commandsOnlyChatColor;  // 0x308(0x10)
	struct FLinearColor _suggestionsTextColor;  // 0x318(0x10)
	struct FLinearColor _adminChatColor;  // 0x328(0x10)
	UChatSuggestionWidget* _chatSuggestionWidgetClass;  // 0x338(0x8)
	struct UAdminCommandCompletionManager* _adminCommandCompletionManager;  // 0x340(0x8)
	char pad_840[56];  // 0x348(0x38)

	void OnTextCommitted(struct FText& Text, char ETextCommit CommitMethod); // Function ConZ.ChatWidget.OnTextCommitted
	void OnTextChanged(struct FText& Text); // Function ConZ.ChatWidget.OnTextChanged
	void OnMuteButtonClicked(); // Function ConZ.ChatWidget.OnMuteButtonClicked
}; 



// Class ConZ.PrisonerActionDescription
// Size: 0x38(Inherited: 0x38) 
struct UPrisonerActionDescription : public UCharacterActionDescription
{

}; 



// Class ConZ.PrisonerActionChangeVehicleWeaponAimingStanceDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionChangeVehicleWeaponAimingStanceDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.VoiceChatComponent
// Size: 0x130(Inherited: 0xB0) 
struct UVoiceChatComponent : public UActorComponent
{
	char pad_176[8];  // 0xB0(0x8)
	float MaxVoiceDistance;  // 0xB8(0x4)
	char pad_188_1 : 7;  // 0xBC(0x1)
	bool ActiveTalker : 1;  // 0xBC(0x1)
	char pad_189[3];  // 0xBD(0x3)
	float StopTalkingTimeThreshold;  // 0xC0(0x4)
	char pad_196[108];  // 0xC4(0x6C)

	void ServerProcessVoiceChatData(struct TArray<char> compressedVoiceDataBuffer); // Function ConZ.VoiceChatComponent.ServerProcessVoiceChatData
	bool GetIsActiveTalker(); // Function ConZ.VoiceChatComponent.GetIsActiveTalker
	bool GetCompressedVoiceData(struct TArray<char>& OutBuffer); // Function ConZ.VoiceChatComponent.GetCompressedVoiceData
	void GetAllVoiceChatComponentsInRange(struct TArray<struct UVoiceChatComponent*>& pawnList); // Function ConZ.VoiceChatComponent.GetAllVoiceChatComponentsInRange
	void ClientReceiveVoiceData(struct UVoiceChatComponent* from, struct TArray<char> compressedVoiceDataBuffer); // Function ConZ.VoiceChatComponent.ClientReceiveVoiceData
}; 



// Class ConZ.BankATMWelcomeScreen
// Size: 0x2B8(Inherited: 0x260) 
struct UBankATMWelcomeScreen : public UUserWidget
{
	char pad_608[32];  // 0x260(0x20)
	struct UButton* _btnCardsPrevious;  // 0x280(0x8)
	struct UButton* _btnCardsNext;  // 0x288(0x8)
	struct UPanelWidget* _cardCarousel;  // 0x290(0x8)
	struct UBankATMMyCardsButton* _btnMyCards;  // 0x298(0x8)
	char pad_672[24];  // 0x2A0(0x18)

	void HandleOnCardsPreviousClicked(); // Function ConZ.BankATMWelcomeScreen.HandleOnCardsPreviousClicked
	void HandleOnCardsNextClicked(); // Function ConZ.BankATMWelcomeScreen.HandleOnCardsNextClicked
}; 



// Class ConZ.CharacterImpactSoundsData
// Size: 0x90(Inherited: 0x30) 
struct UCharacterImpactSoundsData : public UDataAsset
{
	struct FCharacterHeadImpactSoundsData Head;  // 0x30(0x18)
	struct FCharacterTorsoImpactSoundsData Torso;  // 0x48(0x18)
	struct FCharacterArmsImpactSoundsData Arms;  // 0x60(0x18)
	struct FCharacterLegsImpactSoundsData Legs;  // 0x78(0x18)

}; 



// Class ConZ.MetabolismRadialAttributeProgressBar
// Size: 0x3C0(Inherited: 0x260) 
struct UMetabolismRadialAttributeProgressBar : public UUserWidget
{
	struct FMetabolismRadialAttributeProgressBarColor BackgroundColor;  // 0x260(0x30)
	struct FMetabolismRadialAttributeProgressBarColor BarColor;  // 0x290(0x30)
	struct FMetabolismRadialAttributeProgressBarColor BarGlowColor;  // 0x2C0(0x30)
	struct FMetabolismRadialAttributeProgressBarColor InnerGlowColor;  // 0x2F0(0x30)
	struct FMetabolismRadialAttributeProgressBarColor OuterGlowColor;  // 0x320(0x30)
	struct FMetabolismRadialAttributeProgressBarColor FontColor;  // 0x350(0x30)
	uint8_t  PreviewState;  // 0x380(0x1)
	char pad_897[7];  // 0x381(0x7)
	struct UImage* _coloredBackground;  // 0x388(0x8)
	struct UImage* _radialProgressBar;  // 0x390(0x8)
	struct URetainerBox* _fontEffectPass1;  // 0x398(0x8)
	struct URetainerBox* _fontEffectPass2;  // 0x3A0(0x8)
	struct UTextBlock* _attributeValueTextBlock;  // 0x3A8(0x8)
	char pad_944[16];  // 0x3B0(0x10)

}; 



// Class ConZ.LargeAquaticAnimalSpeciesData
// Size: 0x40(Inherited: 0x30) 
struct ULargeAquaticAnimalSpeciesData : public UDataAsset
{
	ALargeAquaticAnimal* AnimalClass;  // 0x30(0x8)
	float RequiredDepthForSpawning;  // 0x38(0x4)
	uint8_t  SpawningWaterType;  // 0x3C(0x1)
	char pad_61[3];  // 0x3D(0x3)

}; 



// Class ConZ.BankCardItemComponent
// Size: 0xE0(Inherited: 0xC8) 
struct UBankCardItemComponent : public UItemComponent
{
	struct FDbIntegerId _ownerUserProfileId;  // 0xC8(0x8)
	int64_t _bankAccountNumber;  // 0xD0(0x8)
	uint8_t  _bankCardType;  // 0xD8(0x1)
	char pad_217[7];  // 0xD9(0x7)

}; 



// Class ConZ.DropZoneGameEvent
// Size: 0x6B8(Inherited: 0x560) 
struct ADropZoneGameEvent : public AGameEventBase
{
	ADropZoneEquipmentTable* TableAClass;  // 0x560(0x8)
	ADropZoneEquipmentTable* TableBClass;  // 0x568(0x8)
	ADropZoneCrate* CrateClass;  // 0x570(0x8)
	ADropZoneCargo* CargoClass;  // 0x578(0x8)
	struct UAkAudioEvent* IntroAnnouncement;  // 0x580(0x8)
	struct UAkAudioEvent* LocateTheKeyAnnouncement;  // 0x588(0x8)
	struct UAkAudioEvent* BlueTeamFoundKeyAnnouncement;  // 0x590(0x8)
	struct UAkAudioEvent* BlueTeamUnlockedAnnouncement;  // 0x598(0x8)
	struct UAkAudioEvent* BlueTeamStolenAnnouncement;  // 0x5A0(0x8)
	struct UAkAudioEvent* RedTeamFoundKeyAnnouncement;  // 0x5A8(0x8)
	struct UAkAudioEvent* RedTeamUnlockedAnnouncement;  // 0x5B0(0x8)
	struct UAkAudioEvent* RedTeamStolenAnnouncement;  // 0x5B8(0x8)
	struct UAkAudioEvent* CargoDropAnnouncement;  // 0x5C0(0x8)
	struct UAkAudioEvent* CargoLandedAnnouncement;  // 0x5C8(0x8)
	struct UTexture2D* KeyIcon;  // 0x5D0(0x8)
	struct UTexture2D* CargoIcon;  // 0x5D8(0x8)
	struct FLinearColor FriendlyColor;  // 0x5E0(0x10)
	struct FLinearColor EnemyColor;  // 0x5F0(0x10)
	struct FDropZoneParameters _dropZoneParameters;  // 0x600(0x2C)
	char pad_1580[12];  // 0x62C(0xC)
	uint8_t  _phase;  // 0x638(0x1)
	char pad_1593[3];  // 0x639(0x3)
	int32_t _capturingTeam;  // 0x63C(0x4)
	float _phaseTimeLeft;  // 0x640(0x4)
	float _captureProgress;  // 0x644(0x4)
	char pad_1608[8];  // 0x648(0x8)
	struct AGameEventBorder* _barrierA;  // 0x650(0x8)
	struct AGameEventBorder* _barrierB;  // 0x658(0x8)
	struct ADropZoneEquipmentTable* _tableA;  // 0x660(0x8)
	struct ADropZoneEquipmentTable* _tableB;  // 0x668(0x8)
	struct ADropZoneCrate* _crateA;  // 0x670(0x8)
	struct ADropZoneCrate* _crateB;  // 0x678(0x8)
	struct ADropZoneKey* _key;  // 0x680(0x8)
	struct APrisoner* _keyCarrier;  // 0x688(0x8)
	struct AActor* _topmostKeyOwner;  // 0x690(0x8)
	struct ADropZoneCargo* _cargo;  // 0x698(0x8)
	struct ADropZoneSlot* _slot;  // 0x6A0(0x8)
	char pad_1704[16];  // 0x6A8(0x10)

	void SetDropZoneParameters(struct FDropZoneParameters& Params); // Function ConZ.DropZoneGameEvent.SetDropZoneParameters
	void OnRep_CapturingTeam(); // Function ConZ.DropZoneGameEvent.OnRep_CapturingTeam
	struct ADropZoneSlot* GetSlot(); // Function ConZ.DropZoneGameEvent.GetSlot
	float GetPhaseTimeLeft(); // Function ConZ.DropZoneGameEvent.GetPhaseTimeLeft
	uint8_t  GetPhase(); // Function ConZ.DropZoneGameEvent.GetPhase
	struct APrisoner* GetKeyCarrier(); // Function ConZ.DropZoneGameEvent.GetKeyCarrier
	struct ADropZoneKey* GetKey(); // Function ConZ.DropZoneGameEvent.GetKey
	struct FDropZoneParameters GetDropZoneParameters(); // Function ConZ.DropZoneGameEvent.GetDropZoneParameters
	struct ADropZoneCrate* GetCrateB(); // Function ConZ.DropZoneGameEvent.GetCrateB
	struct ADropZoneCrate* GetCrateA(); // Function ConZ.DropZoneGameEvent.GetCrateA
	struct ADropZoneCargo* GetCargo(); // Function ConZ.DropZoneGameEvent.GetCargo
	int32_t GetCapturingTeam(); // Function ConZ.DropZoneGameEvent.GetCapturingTeam
	float GetCaptureProgress(); // Function ConZ.DropZoneGameEvent.GetCaptureProgress
}; 



// Class ConZ.BankCardOperationResponse
// Size: 0x30(Inherited: 0x28) 
struct UBankCardOperationResponse : public UPlayerRpcChannelServerResponse
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.BankCardOwnershipRequest
// Size: 0x30(Inherited: 0x28) 
struct UBankCardOwnershipRequest : public UPlayerRpcChannelServerRequest
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.DroneSoundComponent
// Size: 0x120(Inherited: 0xD8) 
struct UDroneSoundComponent : public UCharacterSoundComponent
{
	struct USoundCue* IdleSound;  // 0xD8(0x8)
	struct UAkAudioEvent* IdleAudioEvent;  // 0xE0(0x8)
	struct USoundCue* AngrySound;  // 0xE8(0x8)
	struct UAkAudioEvent* AngryAudioEvent;  // 0xF0(0x8)
	struct USoundCue* AttackSound;  // 0xF8(0x8)
	struct UAkAudioEvent* AttackAudioEvent;  // 0x100(0x8)
	struct USoundCue* KillSound;  // 0x108(0x8)
	struct UAkAudioEvent* KillAudioEvent;  // 0x110(0x8)
	float MinSilenceTimeout;  // 0x118(0x4)
	float MaxSilenceTimeout;  // 0x11C(0x4)

}; 



// Class ConZ.CookedFoodItem
// Size: 0xA10(Inherited: 0x9B0) 
struct ACookedFoodItem : public AFoodItem
{
	float SpoilageRateCooked;  // 0x9B0(0x4)
	float TargetGramsPerUse;  // 0x9B4(0x4)
	struct UTexture2D* _inventoryIcon_Raw;  // 0x9B8(0x8)
	struct UTexture2D* _inventoryIconInHands_Raw;  // 0x9C0(0x8)
	struct UTexture2D* _outsideInventoryIcon_Raw;  // 0x9C8(0x8)
	struct UTexture2D* _inventoryIcon_Burnt;  // 0x9D0(0x8)
	struct UTexture2D* _inventoryIconInHands_Burnt;  // 0x9D8(0x8)
	struct UTexture2D* _outsideInventoryIcon_Burnt;  // 0x9E0(0x8)
	float _idealServingTemperatureMin;  // 0x9E8(0x4)
	float _idealServingTemperatureMax;  // 0x9EC(0x4)
	struct TArray<float> _exhaustionBonusDeltaPerCookQualityLevel;  // 0x9F0(0x10)
	struct UGameResourceType* _cachedGameResourceType;  // 0xA00(0x8)
	char pad_2568[8];  // 0xA08(0x8)

	void NetMulticast_SetupStateFromCooking(uint32_t cookState, struct TArray<char> ingredientData); // Function ConZ.CookedFoodItem.NetMulticast_SetupStateFromCooking
}; 



// Class ConZ.ServerAnalyticsManager
// Size: 0x230(Inherited: 0x220) 
struct AServerAnalyticsManager : public AActor
{
	char pad_544[16];  // 0x220(0x10)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Disorientation
// Size: 0xD0(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_Disorientation : public UPrisonerBodyConditionOrSymptomSideEffect
{
	UPrisonerBodySymptom_Disorientation* _symptomClass;  // 0x30(0x8)
	struct UPrisonerBodySymptomCause_Disorientation* _symptomCause;  // 0x38(0x8)
	struct FRuntimeFloatCurve _intensityVsSeverity;  // 0x40(0x88)
	char pad_200[8];  // 0xC8(0x8)

}; 



// Class ConZ.Bird2
// Size: 0x9B0(Inherited: 0x980) 
struct ABird2 : public AAnimal2
{
	char pad_2432_1 : 7;  // 0x980(0x1)
	bool IsStaringPerched : 1;  // 0x978(0x1)
	float MinFlightAltitude;  // 0x97C(0x4)
	float MaxFlightAltitude;  // 0x980(0x4)
	char pad_2441_1 : 7;  // 0x989(0x1)
	bool _isLanding : 1;  // 0x984(0x1)
	char pad_2442_1 : 7;  // 0x98A(0x1)
	bool _isTakingOff : 1;  // 0x985(0x1)
	char pad_2443_1 : 7;  // 0x98B(0x1)
	bool _isPerched : 1;  // 0x986(0x1)
	char pad_2444_1 : 7;  // 0x98C(0x1)
	bool _isFlying : 1;  // 0x987(0x1)
	struct TArray<bool> _states;  // 0x988(0x10)
	char _repStates;  // 0x998(0x1)
	char pad_2462[18];  // 0x99E(0x12)

	void OnRep_States(); // Function ConZ.Bird2.OnRep_States
	bool GetIsTakingOff(); // Function ConZ.Bird2.GetIsTakingOff
	bool GetIsStaringPerched(); // Function ConZ.Bird2.GetIsStaringPerched
	bool GetIsPerched(); // Function ConZ.Bird2.GetIsPerched
	bool GetIsLanding(); // Function ConZ.Bird2.GetIsLanding
	bool GetIsFlying(); // Function ConZ.Bird2.GetIsFlying
	void CapsuleComponent_OnComponentHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function ConZ.Bird2.CapsuleComponent_OnComponentHit
}; 



// Class ConZ.PrisonerBodySymptomCause_HeightenedSenses
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_HeightenedSenses : public UPrisonerBodySymptomCause
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.BankCardOwnershipResponse
// Size: 0x80(Inherited: 0x28) 
struct UBankCardOwnershipResponse : public UPlayerRpcChannelServerResponse
{
	char pad_40[88];  // 0x28(0x58)

}; 



// Class ConZ.Banker
// Size: 0x910(Inherited: 0x900) 
struct ABanker : public ASedentaryNPC
{
	float _bankTransactionCooldownTime;  // 0x8F8(0x4)
	ABankATMMinigame* _bankMinigameClass;  // 0x900(0x8)
	char pad_2316[4];  // 0x90C(0x4)

}; 



// Class ConZ.Buriable
// Size: 0x28(Inherited: 0x28) 
struct UBuriable : public UInterface
{

}; 



// Class ConZ.InteractionAssetData
// Size: 0x30(Inherited: 0x28) 
struct UInteractionAssetData : public UAssetUserData
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.ConZBase
// Size: 0x348(Inherited: 0x220) 
struct AConZBase : public AActor
{
	struct TWeakObjectPtr<AConZBaseElement> _baseElementActor;  // 0x220(0x8)
	char pad_552[112];  // 0x228(0x70)
	struct TSet<UObject*> _referencedBaseElementClasses;  // 0x298(0x50)
	char pad_744[40];  // 0x2E8(0x28)
	char pad_784_1 : 7;  // 0x310(0x1)
	bool _overrideBlockStackingRules : 1;  // 0x310(0x1)
	char pad_785[3];  // 0x311(0x3)
	float _debugRenderingDistance;  // 0x314(0x4)
	int32_t _decayProcessingNumberOfFrames;  // 0x318(0x4)
	int32_t _decayProcessingMaxDestroyedElementsPerUpdate;  // 0x31C(0x4)
	char pad_800[40];  // 0x320(0x28)

	void OnElementInteracted(struct APrisoner* User, uint8_t  interactionType, struct FInteractionData& InteractionData, struct FBaseInteractionParams& BaseInteractionParams); // Function ConZ.ConZBase.OnElementInteracted
	struct FString GetBaseName(); // Function ConZ.ConZBase.GetBaseName
	void AwardFamePointsToOnlineFlagOwners(int32_t flagIndex, float totalFlagInterval, float fameInterval); // Function ConZ.ConZBase.AwardFamePointsToOnlineFlagOwners
}; 



// Class ConZ.BankTransactionRequest
// Size: 0x60(Inherited: 0x28) 
struct UBankTransactionRequest : public UPlayerRpcChannelServerRequest
{
	char pad_40[56];  // 0x28(0x38)

}; 



// Class ConZ.SpawnScreen
// Size: 0x2C8(Inherited: 0x260) 
struct USpawnScreen : public UUserWidget
{
	struct UButton* _mainMenuButton;  // 0x260(0x8)
	struct UButton* _respawnButton;  // 0x268(0x8)
	struct UButton* _scoreBoardButton;  // 0x270(0x8)
	struct UVerticalBox* _messageBoxPanel;  // 0x278(0x8)
	struct UOverlay* _screen;  // 0x280(0x8)
	struct UOverlay* _scoreboard;  // 0x288(0x8)
	struct UGameEventLoadoutMenuWidget* _gameEventLoadoutMenuWidget;  // 0x290(0x8)
	struct USpawnMenuWidget* _spawnMenuWidget;  // 0x298(0x8)
	struct UBorder* _blackout;  // 0x2A0(0x8)
	char pad_680[32];  // 0x2A8(0x20)

	void UpdateInfo(); // Function ConZ.SpawnScreen.UpdateInfo
	void OnSpawnAccept(); // Function ConZ.SpawnScreen.OnSpawnAccept
	void OnScoreBoardButtonClicked(); // Function ConZ.SpawnScreen.OnScoreBoardButtonClicked
	void OnExitToMainMenuClicked(); // Function ConZ.SpawnScreen.OnExitToMainMenuClicked
	struct FText GetWaitTimeText(); // Function ConZ.SpawnScreen.GetWaitTimeText
	int32_t GetWaitTimeInSeconds(); // Function ConZ.SpawnScreen.GetWaitTimeInSeconds
	uint8_t  GetRespawnButtonVisibility(); // Function ConZ.SpawnScreen.GetRespawnButtonVisibility
	uint8_t  GetPenaltyCountdownVisibility(); // Function ConZ.SpawnScreen.GetPenaltyCountdownVisibility
	uint8_t  GetOtherButtonVisibility(); // Function ConZ.SpawnScreen.GetOtherButtonVisibility
	bool CanSpawn(); // Function ConZ.SpawnScreen.CanSpawn
}; 



// Class ConZ.InventoryContainerHandsHolsters
// Size: 0xB8(Inherited: 0x28) 
struct UInventoryContainerHandsHolsters : public UObject
{
	char pad_40[8];  // 0x28(0x8)
	struct UInventoryContainerWidget2* _handWidget;  // 0x30(0x8)
	struct UInventoryContainerWidget2* _shoulderLeftWidget;  // 0x38(0x8)
	struct UInventoryContainerWidget2* _shoulderRightWidget;  // 0x40(0x8)
	struct UInventoryContainerWidget2* _tradingHandWidget;  // 0x48(0x8)
	struct UInventoryContainerWidget2* _tradingShoulderLeftWidget;  // 0x50(0x8)
	struct UInventoryContainerWidget2* _tradingShoulderRightWidget;  // 0x58(0x8)
	char pad_96[16];  // 0x60(0x10)
	struct FInventoryContainerHandsHolstersData _data;  // 0x70(0x20)
	struct FInventoryContainerHandsHolstersData _oldData;  // 0x90(0x20)
	char pad_176[8];  // 0xB0(0x8)

	void OnRep_Data(); // Function ConZ.InventoryContainerHandsHolsters.OnRep_Data
}; 



// Class ConZ.TireToSurfaceAudioData
// Size: 0x258(Inherited: 0x30) 
struct UTireToSurfaceAudioData : public UDataAsset
{
	float _maxSoundRange;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)
	struct UAkAudioEvent* _movementStarted;  // 0x38(0x8)
	struct UAkAudioEvent* _movementStopped;  // 0x40(0x8)
	struct UAkAudioEvent* _noSurface;  // 0x48(0x8)
	struct TArray<struct FTireSurfaceAudioEntry> _soundGroups;  // 0x50(0x10)
	char pad_96[504];  // 0x60(0x1F8)

}; 



// Class ConZ.DrinkItem
// Size: 0x9C0(Inherited: 0x9B0) 
struct ADrinkItem : public AFoodItem
{
	struct UBasicGameResourceContainerComponent* _gameResourceContainer;  // 0x9B0(0x8)
	char pad_2488[8];  // 0x9B8(0x8)

}; 



// Class ConZ.BankTransactionResponse
// Size: 0x30(Inherited: 0x28) 
struct UBankTransactionResponse : public UPlayerRpcChannelServerResponse
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.BaseItemWidget
// Size: 0x280(Inherited: 0x260) 
struct UBaseItemWidget : public UUserWidget
{
	struct UBaseItemContainerWidget* ParentInventory;  // 0x260(0x8)
	char pad_616[8];  // 0x268(0x8)
	int32_t Width;  // 0x270(0x4)
	int32_t Height;  // 0x274(0x4)
	struct UImage* _imageWidget;  // 0x278(0x8)

	void SetStacksCount(int32_t Count); // Function ConZ.BaseItemWidget.SetStacksCount
	int32_t GetStacksCount(); // Function ConZ.BaseItemWidget.GetStacksCount
	void GetDragImage(struct FGeometry Geometry, struct UInventorySlotUserWidget* widgetImage); // Function ConZ.BaseItemWidget.GetDragImage
	void DragCancelled(); // Function ConZ.BaseItemWidget.DragCancelled
}; 



// Class ConZ.PrisonerBodySymptom_FeelingCold
// Size: 0xC0(Inherited: 0xB8) 
struct UPrisonerBodySymptom_FeelingCold : public UPrisonerBodySymptom
{
	float _maxSeverity;  // 0xB8(0x4)
	float _temperatureDeltaAtMaxSeverity;  // 0xBC(0x4)

}; 



// Class ConZ.BaseMenu
// Size: 0x260(Inherited: 0x260) 
struct UBaseMenu : public UUserWidget
{

}; 



// Class ConZ.PrisonerActionGesture
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionGesture : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.BarberShopMenuWidget
// Size: 0x440(Inherited: 0x260) 
struct UBarberShopMenuWidget : public UBaseMenu
{
	char pad_608[8];  // 0x260(0x8)
	struct UOverlay* _overlayMenu;  // 0x268(0x8)
	struct UTrashNamedSliderWidget* _sliderHairStyle;  // 0x270(0x8)
	struct UCCGameUpgradeConditionDisplayWidget* _hairStyleUpgradeConditionDisplay;  // 0x278(0x8)
	struct UPresetColorPicker* _presetColorPickerHairColor;  // 0x280(0x8)
	struct UVerticalBox* _facialHairVerticalBox;  // 0x288(0x8)
	struct UTrashNamedSliderWidget* _sliderFacialHairStyle;  // 0x290(0x8)
	struct UCCGameUpgradeConditionDisplayWidget* _facialHairStyleUpgradeConditionDisplay;  // 0x298(0x8)
	struct UPresetColorPicker* _presetColorPickerFacialHairColor;  // 0x2A0(0x8)
	struct UCollapsableColorPicker* _dropdownColorPickerEyeshadow;  // 0x2A8(0x8)
	struct UCollapsableColorPicker* _dropdownColorPickerEyeliner;  // 0x2B0(0x8)
	struct UVerticalBox* _makeupVerticalBox;  // 0x2B8(0x8)
	struct UTrashNamedSliderWidget* _sliderEyesMakeupMetalness;  // 0x2C0(0x8)
	struct UTrashNamedSliderWidget* _sliderEyesMakeupIntensity;  // 0x2C8(0x8)
	struct UCollapsableColorPicker* _dropdownColorPickerLipstickColor;  // 0x2D0(0x8)
	struct UTrashNamedSliderWidget* _sliderLipstickGlossiness;  // 0x2D8(0x8)
	struct UTrashNamedSliderWidget* _sliderLipstickIntensity;  // 0x2E0(0x8)
	struct UConZStandardButton* _buttonRandomize;  // 0x2E8(0x8)
	struct UConZStandardButton* _buttonApply;  // 0x2F0(0x8)
	struct UOverlay* _overlayConfirmation;  // 0x2F8(0x8)
	struct UConZStandardButton* _buttonCancelConfirmation;  // 0x300(0x8)
	struct UConZStandardButton* _buttonContinueConfirmation;  // 0x308(0x8)
	struct UScrollBox* _faceOptionsScrollbox;  // 0x310(0x8)
	char pad_792[296];  // 0x318(0x128)

	void OnRandomizeClicked(); // Function ConZ.BarberShopMenuWidget.OnRandomizeClicked
	void OnContinueClickedInConfirmationPanel(); // Function ConZ.BarberShopMenuWidget.OnContinueClickedInConfirmationPanel
	void OnCancelClickedInConfirmationPanel(); // Function ConZ.BarberShopMenuWidget.OnCancelClickedInConfirmationPanel
	void OnApplyClicked(); // Function ConZ.BarberShopMenuWidget.OnApplyClicked
}; 



// Class ConZ.BaseBuildingItemComponent
// Size: 0x700(Inherited: 0x6F0) 
struct UBaseBuildingItemComponent : public UBaseBuildingComponent
{
	AItem* _itemClass;  // 0x6F0(0x8)
	char pad_1784[8];  // 0x6F8(0x8)

}; 



// Class ConZ.ModularTooltipElementData_Affects
// Size: 0x48(Inherited: 0x28) 
struct UModularTooltipElementData_Affects : public UModularTooltipElementData
{
	char pad_40[24];  // 0x28(0x18)
	struct UModularTooltipElementData* Affect;  // 0x40(0x8)

}; 



// Class ConZ.ModularTooltipElementData_AffectedBy
// Size: 0x48(Inherited: 0x28) 
struct UModularTooltipElementData_AffectedBy : public UModularTooltipElementData
{
	char pad_40[24];  // 0x28(0x18)
	struct UModularTooltipElementData* Affect;  // 0x40(0x8)

}; 



// Class ConZ.ModularBaseBuildingComponent
// Size: 0x740(Inherited: 0x6F0) 
struct UModularBaseBuildingComponent : public UBaseBuildingComponent
{
	struct TArray<struct FRotator> _availableOrientations;  // 0x6F0(0x10)
	float MinStabilityForPlacement;  // 0x700(0x4)
	char pad_1796[4];  // 0x704(0x4)
	struct TArray<struct FElementQueryMarker> _elementStabilityMarkers;  // 0x708(0x10)
	struct TArray<struct FModularElementSnapMarker> _modularElementSnapMarkers;  // 0x718(0x10)
	struct TArray<struct FElementMorphQuery> _elementMorphQueries;  // 0x728(0x10)
	char pad_1848[8];  // 0x738(0x8)

	struct TArray<struct FName> GetModularMarkerNameOptions(); // Function ConZ.ModularBaseBuildingComponent.GetModularMarkerNameOptions
}; 



// Class ConZ.ItemActionSequenceLoadMagazine
// Size: 0x90(Inherited: 0x88) 
struct UItemActionSequenceLoadMagazine : public UItemActionSequence
{
	int32_t _loadedAmmoCount;  // 0x88(0x4)
	char pad_140[4];  // 0x8C(0x4)

	struct FName GetEndSectionName(); // Function ConZ.ItemActionSequenceLoadMagazine.GetEndSectionName
}; 



// Class ConZ.DcxBicycleAnimInstance
// Size: 0xAA0(Inherited: 0xAA0) 
struct UDcxBicycleAnimInstance : public UDcxBikeAnimInstance
{

}; 



// Class ConZ.ClaimableWhenKilled
// Size: 0x28(Inherited: 0x28) 
struct UClaimableWhenKilled : public UInterface
{

}; 



// Class ConZ.CraftingResult
// Size: 0xC8(Inherited: 0x28) 
struct UCraftingResult : public UObject
{
	char pad_40[160];  // 0x28(0xA0)

}; 



// Class ConZ.PrisonerActionStopResting
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionStopResting : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerActionInsertArrow
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionInsertArrow : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.BaseInteractionComponent
// Size: 0x220(Inherited: 0x200) 
struct UBaseInteractionComponent : public USceneComponent
{
	char pad_512[8];  // 0x200(0x8)
	float _capsuleRadius;  // 0x208(0x4)
	float _capsuleHalfHeight;  // 0x20C(0x4)
	char pad_528[16];  // 0x210(0x10)

}; 



// Class ConZ.GameResourceContainerEntityComponentSetup
// Size: 0x68(Inherited: 0x48) 
struct UGameResourceContainerEntityComponentSetup : public UEntityComponentSetup
{
	UGameResourceType* ResourceType;  // 0x48(0x8)
	float MaxResourceAmount;  // 0x50(0x4)
	float ResourceAmount;  // 0x54(0x4)
	float ResourceUsageRate;  // 0x58(0x4)
	float MinTickInterval;  // 0x5C(0x4)
	float MinResourceAmountRatioChangeToTick;  // 0x60(0x4)
	char pad_100[4];  // 0x64(0x4)

}; 



// Class ConZ.FillWaterAction
// Size: 0xD0(Inherited: 0xA8) 
struct UFillWaterAction : public UInteractionAction
{
	char pad_168[40];  // 0xA8(0x28)

}; 



// Class ConZ.BasicGameResourceContainerComponent
// Size: 0x1F0(Inherited: 0xC8) 
struct UBasicGameResourceContainerComponent : public UItemComponent
{
	char pad_200[32];  // 0xC8(0x20)
	UGameResourceType* _repResourceType;  // 0xE8(0x8)
	float _repResourceAmount;  // 0xF0(0x4)
	char pad_244[4];  // 0xF4(0x4)
	UGameResourceType* _acceptedResourceType;  // 0xF8(0x8)
	struct FGameplayTagContainer _resourceFillingInSocketTypes;  // 0x100(0x20)
	struct FGameplayTagContainer _resourceFillingOutSocketTypes;  // 0x120(0x20)
	struct TArray<struct UBaseItemTag*> _requiredItemTagsForFilling;  // 0x140(0x10)
	char pad_336_1 : 7;  // 0x150(0x1)
	bool _shouldUpdateOwningItemUses : 1;  // 0x150(0x1)
	char pad_337_1 : 7;  // 0x151(0x1)
	bool _canDrink : 1;  // 0x151(0x1)
	char pad_338_1 : 7;  // 0x152(0x1)
	bool _canSpill : 1;  // 0x152(0x1)
	char pad_339_1 : 7;  // 0x153(0x1)
	bool _canCheck : 1;  // 0x153(0x1)
	char pad_340_1 : 7;  // 0x154(0x1)
	bool _showResourcePercentageOnCheck : 1;  // 0x154(0x1)
	char pad_341_1 : 7;  // 0x155(0x1)
	bool _shouldUncraftWhenEmpty : 1;  // 0x155(0x1)
	char pad_342_1 : 7;  // 0x156(0x1)
	bool _shouldSpillWhenPickedUp : 1;  // 0x156(0x1)
	char pad_343_1 : 7;  // 0x157(0x1)
	bool _shouldSpillWhenAddedToContainer : 1;  // 0x157(0x1)
	char pad_344_1 : 7;  // 0x158(0x1)
	bool _shouldTakeInHandsWhenDrinking : 1;  // 0x158(0x1)
	char pad_345[7];  // 0x159(0x7)
	struct FText _interactionText;  // 0x160(0x18)
	struct UAnimMontage* _resourceFillingMontage;  // 0x178(0x8)
	struct UAkAudioEvent* _resourceStartFillingAudioEvent;  // 0x180(0x8)
	struct UAkAudioEvent* _resourceStopFillingAudioEvent;  // 0x188(0x8)
	float _resourceFillingDurationPerAmountFilled;  // 0x190(0x4)
	float _resourceFillingExperiencePerAmount;  // 0x194(0x4)
	uint8_t  _targetStanceWhenFilling;  // 0x198(0x1)
	char pad_409_1 : 7;  // 0x199(0x1)
	bool _shouldTakeInHandsWhenFilling : 1;  // 0x199(0x1)
	char pad_410[6];  // 0x19A(0x6)
	struct UAkAudioEvent* _spillStartAudioEvent;  // 0x1A0(0x8)
	struct UAkAudioEvent* _spillStopAudioEvent;  // 0x1A8(0x8)
	struct UAnimMontage* _spillMontage;  // 0x1B0(0x8)
	struct UAnimMontage* _spillMontageEnd;  // 0x1B8(0x8)
	struct UParticleSystem* _particles;  // 0x1C0(0x8)
	float _minSpillTime;  // 0x1C8(0x4)
	float _maxSpillTime;  // 0x1CC(0x4)
	float _spillTimePerKg;  // 0x1D0(0x4)
	char pad_468[4];  // 0x1D4(0x4)
	struct UAkAudioEvent* _drinkStartAudioEvent;  // 0x1D8(0x8)
	struct UAkAudioEvent* _drinkStopAudioEvent;  // 0x1E0(0x8)
	char pad_488[8];  // 0x1E8(0x8)

	void OnRep_ResourceType(); // Function ConZ.BasicGameResourceContainerComponent.OnRep_ResourceType
	void OnRep_ResourceAmount(); // Function ConZ.BasicGameResourceContainerComponent.OnRep_ResourceAmount
}; 



// Class ConZ.MetabolismSegmentedProgressBar
// Size: 0x318(Inherited: 0x260) 
struct UMetabolismSegmentedProgressBar : public UUserWidget
{
	struct TArray<struct FMetabolismSPBColorScheme> ColorSchemes;  // 0x260(0x10)
	struct FSlateBrush BrushOverride;  // 0x270(0x88)
	struct UImage* _progressBarImage;  // 0x2F8(0x8)
	char pad_768[24];  // 0x300(0x18)

}; 



// Class ConZ.DoorLockingRegistry
// Size: 0x108(Inherited: 0xB0) 
struct UDoorLockingRegistry : public UActorComponent
{
	struct TMap<uint8_t , struct FDoorUnlockDataCollection> _doorUnlockDataByType;  // 0xB0(0x50)
	int32_t _countNormalizationThreshold;  // 0x100(0x4)
	char pad_260[4];  // 0x104(0x4)

}; 



// Class ConZ.LWObjectSetup
// Size: 0x30(Inherited: 0x28) 
struct ULWObjectSetup : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.ConZGameState
// Size: 0x758(Inherited: 0x290) 
struct AConZGameState : public AGameState
{
	char pad_656[80];  // 0x290(0x50)
	struct URespawnSettings* RespawnSettings;  // 0x2E0(0x8)
	char pad_744[48];  // 0x2E8(0x30)
	struct UCraftingDatabase* _craftingDatabase;  // 0x318(0x8)
	struct UArchitecturalCategoriesDatabase* _architecturalCategoriesDatabase;  // 0x320(0x8)
	char pad_808[32];  // 0x328(0x20)
	struct TArray<struct AConZCharacter*> _registeredCharacters;  // 0x348(0x10)
	char pad_856[80];  // 0x358(0x50)
	struct TArray<struct AConZSquad*> _squads;  // 0x3A8(0x10)
	char pad_952[160];  // 0x3B8(0xA0)
	struct TMap<struct TWeakObjectPtr<AConZCharacter>, int32_t> _currentDroneTargetDispatcherMap;  // 0x458(0x50)
	struct TMap<struct TWeakObjectPtr<AConZCharacter>, int32_t> _droneTargetDispatcherHistoryMap;  // 0x4A8(0x50)
	struct TMap<struct TWeakObjectPtr<AConZCharacter>, struct UDroneTargetData*> _droneTargetVisits;  // 0x4F8(0x50)
	ALadderMarkersRegistry* _ladderMarkersRegistryClass;  // 0x548(0x8)
	struct ALadderMarkersRegistry* _ladderMarkersRegistry;  // 0x550(0x8)
	AConZWaterSplineRegistry* _waterSplineRegistryClass;  // 0x558(0x8)
	struct AConZWaterSplineRegistry* _waterSplineRegistry;  // 0x560(0x8)
	char pad_1384[8];  // 0x568(0x8)
	struct URemoteSensorRegistry* _remoteSensorRegistry;  // 0x570(0x8)
	char pad_1400[72];  // 0x578(0x48)
	struct UReplenishableResourceManager* _replenishableResourceManager;  // 0x5C0(0x8)
	struct URestorableMeshInstancesManager* _restorableMeshInstancesManager;  // 0x5C8(0x8)
	struct UResourceLockingManager* _resourceLockingManager;  // 0x5D0(0x8)
	struct UItemRegistry* _itemRegistry;  // 0x5D8(0x8)
	struct UCustomZoneRegistry* _customZoneRegistry;  // 0x5E0(0x8)
	struct UGameResourceContainerProxyRegistry* _gameResourceContainerProxyRegistry;  // 0x5E8(0x8)
	struct UZoneRegistry* _zoneRegistry;  // 0x5F0(0x8)
	struct UStaticDoorReplicator* _staticDoorReplicator;  // 0x5F8(0x8)
	struct UBankAccountRegistry* _bankAccountRegistry;  // 0x600(0x8)
	char pad_1544[208];  // 0x608(0xD0)
	struct TMap<struct FDbIntegerId, struct FDbIntegerId> _prisonerKillRegistry;  // 0x6D8(0x50)
	ACustomMapBorder* _customMapBorderClass;  // 0x728(0x8)
	ATournament* _tournamentClass;  // 0x730(0x8)
	struct ACustomMapBorder* _customMapBorder;  // 0x738(0x8)
	struct ATournament* _tournament;  // 0x740(0x8)
	char pad_1864[1];  // 0x748(0x1)
	char pad_1865_1 : 7;  // 0x749(0x1)
	bool _areLockedLootContainersEnabled : 1;  // 0x749(0x1)
	char pad_1866[14];  // 0x74A(0xE)

	void StartTournament(struct FTournamentParameters& parameters); // Function ConZ.ConZGameState.StartTournament
	void SendServerTime(float Time); // Function ConZ.ConZGameState.SendServerTime
	void RemoveMemberFromSquad(struct FDbIntegerId UserProfileId, struct AConZSquad* Squad, bool destroySquadIfEmpty); // Function ConZ.ConZGameState.RemoveMemberFromSquad
	void RemoveMemberFromAllSquads(struct FDbIntegerId UserProfileId, bool destroySquadIfEmpty); // Function ConZ.ConZGameState.RemoveMemberFromAllSquads
	void OnRep_Squads(); // Function ConZ.ConZGameState.OnRep_Squads
	void OnRep_AreLockedLootContainersEnabled(); // Function ConZ.ConZGameState.OnRep_AreLockedLootContainersEnabled
	void Multicast_RemoveFromPrisonerKillRegistry(struct FDbIntegerId Target); // Function ConZ.ConZGameState.Multicast_RemoveFromPrisonerKillRegistry
	void Multicast_AddToOrUpdatePrisonerKillRegistry(struct FDbIntegerId Target, struct FDbIntegerId killer); // Function ConZ.ConZGameState.Multicast_AddToOrUpdatePrisonerKillRegistry
	bool IsTournamentInProgress(); // Function ConZ.ConZGameState.IsTournamentInProgress
	struct AConZWaterSplineRegistry* GetWaterSplineRegistry(); // Function ConZ.ConZGameState.GetWaterSplineRegistry
	struct ATournament* GetTournament(); // Function ConZ.ConZGameState.GetTournament
	struct AConZSquad* GetSquadForUserProfileId(struct FDbIntegerId ID); // Function ConZ.ConZGameState.GetSquadForUserProfileId
	struct AConZSquad* GetSquadForPrisoner(struct APrisoner* Prisoner); // Function ConZ.ConZGameState.GetSquadForPrisoner
	struct AConZSquad* GetSquad(struct FDbIntegerId squadId); // Function ConZ.ConZGameState.GetSquad
	struct TArray<struct APrisoner*> GetRegisteredPrisoners(); // Function ConZ.ConZGameState.GetRegisteredPrisoners
	struct ACustomMapBorder* GetCustomMapBorder(); // Function ConZ.ConZGameState.GetCustomMapBorder
	void EndTournament(); // Function ConZ.ConZGameState.EndTournament
	struct AConZSquad* CreateSquad(struct FDbIntegerId squadId); // Function ConZ.ConZGameState.CreateSquad
	void CleanupSquadsFromDatabase(); // Function ConZ.ConZGameState.CleanupSquadsFromDatabase
	void AddMemberToSquad(struct FDbIntegerId UserProfileId, struct FString UserId, struct AConZSquad* Squad); // Function ConZ.ConZGameState.AddMemberToSquad
}; 



// Class ConZ.BasicNotification
// Size: 0x30(Inherited: 0x30) 
struct UBasicNotification : public UConZNotification
{

}; 



// Class ConZ.TraderMainUIController
// Size: 0x80(Inherited: 0x28) 
struct UTraderMainUIController : public UObject
{
	struct UTraderBuyUIController* TraderBuyUIController;  // 0x28(0x8)
	struct UTraderSellUIController* TraderSellUIController;  // 0x30(0x8)
	char pad_56[72];  // 0x38(0x48)

}; 



// Class ConZ.PrisonerActionLootPrisoner
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionLootPrisoner : public UPrisonerAction
{

}; 



// Class ConZ.TakeInHandsAssetData
// Size: 0x148(Inherited: 0x30) 
struct UTakeInHandsAssetData : public UInteractionAssetData
{
	UAttachmentSocketMountType* AttachmentSocketMountType;  // 0x30(0x8)
	struct FName GripSocketName;  // 0x38(0x8)
	struct FName SupportingHandIKSocketName;  // 0x40(0x8)
	struct UAnimMontage* TakeInHandsMontage;  // 0x48(0x8)
	struct UAnimMontage* RemoveFromHandsMontage;  // 0x50(0x8)
	struct UMeleeSkillAnimationsPreset* MeleeSkillAnimationsPreset;  // 0x58(0x8)
	struct UHandsCorrectionsData* HandsCorrectionssData;  // 0x60(0x8)
	struct UItemFirstPersonAnimationsDataAsset* FirstPersonAnimationsData;  // 0x68(0x8)
	uint8_t  MaxPace;  // 0x70(0x1)
	char pad_113[3];  // 0x71(0x3)
	float MovementSpeedModifier;  // 0x74(0x4)
	float SwimmingMovementSpeedModifier;  // 0x78(0x4)
	float DivingMovementSpeedModifier;  // 0x7C(0x4)
	float BuoyancyMultiplier;  // 0x80(0x4)
	char pad_132_1 : 7;  // 0x84(0x1)
	bool ShouldDropWhenEnteringCombatMode : 1;  // 0x84(0x1)
	char pad_133_1 : 7;  // 0x85(0x1)
	bool ShouldActionConstrainStance : 1;  // 0x85(0x1)
	char pad_134_1 : 7;  // 0x86(0x1)
	bool ShouldActionConstrainMove : 1;  // 0x86(0x1)
	char pad_135_1 : 7;  // 0x87(0x1)
	bool ShouldActionConstrainTurn : 1;  // 0x87(0x1)
	char pad_136_1 : 7;  // 0x88(0x1)
	bool ShouldActionForceStance : 1;  // 0x88(0x1)
	uint8_t  ActionStance;  // 0x89(0x1)
	uint8_t  ActionStanceFlag;  // 0x8A(0x1)
	char pad_139_1 : 7;  // 0x8B(0x1)
	bool IsCarried : 1;  // 0x8B(0x1)
	uint8_t  StanceWhileCarrying;  // 0x8C(0x1)
	uint8_t  CarryStanceFlag;  // 0x8D(0x1)
	char pad_142_1 : 7;  // 0x8E(0x1)
	bool ShouldDropWhenEnteringCombatModeWhileCarrying : 1;  // 0x8E(0x1)
	uint8_t  MaxPaceWhileCarrying;  // 0x8F(0x1)
	struct UAnimSequenceBase* CarryItemIdleAnimationFP;  // 0x90(0x8)
	struct UAnimSequenceBase* CarryItemIdleAnimationTP;  // 0x98(0x8)
	struct UAnimMontage* PlayerLongThrowMontage;  // 0xA0(0x8)
	struct UAnimMontage* PlayerLongThrowLoopMontage;  // 0xA8(0x8)
	struct UAnimMontage* PlayerShortThrowMontage;  // 0xB0(0x8)
	struct UAnimMontage* PlayerThrowbackMontage;  // 0xB8(0x8)
	struct UAnimMontage* ThrowingItemToWeaponMontage;  // 0xC0(0x8)
	struct UAnimMontage* WeaponToThrowingItemMontage;  // 0xC8(0x8)
	struct TMap<uint8_t , struct FThrowingAnimationSet> ThrowingAnimationSets;  // 0xD0(0x50)
	float MaxObstructedDepenetrationDepth;  // 0x120(0x4)
	float MaxObstructedDepenetrationDepthProne;  // 0x124(0x4)
	struct UAnimSequenceBase* LeftObstructedIdleAnimationFP;  // 0x128(0x8)
	struct UAnimSequenceBase* RightObstructedIdleAnimationFP;  // 0x130(0x8)
	struct UAnimSequenceBase* ObstructedIdleAnimationTP;  // 0x138(0x8)
	struct UAnimSequenceBase* ObstructedIdleAnimationProneTP;  // 0x140(0x8)

}; 



// Class ConZ.CombinationLockItem
// Size: 0x920(Inherited: 0x910) 
struct ACombinationLockItem : public AItem
{
	int32_t _combination;  // 0x910(0x4)
	char pad_2324[12];  // 0x914(0xC)

	void Server_SetCombination(int32_t Value); // Function ConZ.CombinationLockItem.Server_SetCombination
}; 



// Class ConZ.ItemInventoryDepotWidget2
// Size: 0x2E0(Inherited: 0x260) 
struct UItemInventoryDepotWidget2 : public UInventoryContainerWidget2
{
	struct UInventoryContainer2D* _container;  // 0x260(0x8)
	struct UCanvasPanel* _inventoryCanvas;  // 0x268(0x8)
	char pad_624[8];  // 0x270(0x8)
	struct TScriptInterface<IInventoryNode> _item;  // 0x278(0x10)
	struct UGridPanel* _inventoryGrid;  // 0x288(0x8)
	struct UWidget* _loadingWidget;  // 0x290(0x8)
	struct UInventoryGridWidget* _inventoryGridWidget;  // 0x298(0x8)
	struct UHorizontalBox* _contentBox;  // 0x2A0(0x8)
	struct TArray<struct UInventorySlotUserWidget*> _slotsWidgets;  // 0x2A8(0x10)
	struct UWidgetAnimation* BlinkAnim;  // 0x2B8(0x8)
	struct URetainerBox* RetainerBoxDeadCells;  // 0x2C0(0x8)
	char pad_712_1 : 7;  // 0x2C8(0x1)
	bool _canMinimize : 1;  // 0x2C8(0x1)
	char pad_713[23];  // 0x2C9(0x17)

	void OnExpandToggleClicked(bool checked); // Function ConZ.ItemInventoryDepotWidget2.OnExpandToggleClicked
}; 



// Class ConZ.RecastNavMesh_Sentries
// Size: 0x4D8(Inherited: 0x4D8) 
struct ARecastNavMesh_Sentries : public ARecastNavMesh
{

}; 



// Class ConZ.DroneAIController
// Size: 0x4B8(Inherited: 0x328) 
struct ADroneAIController : public AAIController
{
	float _followingDuration;  // 0x328(0x4)
	float _followingTargetSpeedThreshold;  // 0x32C(0x4)
	float _forcedSelfDestructTime;  // 0x330(0x4)
	float _followingHeight;  // 0x334(0x4)
	float _followingDistance;  // 0x338(0x4)
	float _resumeFollowingExtraDistance;  // 0x33C(0x4)
	float _resumeFollowingSeconds;  // 0x340(0x4)
	float _resumeFollowingExtendedSeconds;  // 0x344(0x4)
	char pad_840[4];  // 0x348(0x4)
	float _followingCirclingMinTime;  // 0x34C(0x4)
	float _followingCirclingMaxTime;  // 0x350(0x4)
	float _followingCirclingNewDirectionMinTime;  // 0x354(0x4)
	float _followingCirclingNewDirectionMaxTime;  // 0x358(0x4)
	float _switchFollowingTargetsMaxDistance;  // 0x35C(0x4)
	char pad_864[48];  // 0x360(0x30)
	float _flybyHorizontalDistanceFromTarget;  // 0x390(0x4)
	float _flybyVerticalDistanceFromTarget;  // 0x394(0x4)
	float _flybyPathLength;  // 0x398(0x4)
	float _minFlybyAngleDeg;  // 0x39C(0x4)
	float _maxFlybyAngleDeg;  // 0x3A0(0x4)
	char pad_932[20];  // 0x3A4(0x14)
	float _crashingDistance;  // 0x3B8(0x4)
	char pad_956[4];  // 0x3BC(0x4)
	float _leavingForwardDistance;  // 0x3C0(0x4)
	float _leavingVerticalDistance;  // 0x3C4(0x4)
	float _minimumNavigationProximityPerState[6];  // 0x3C8(0x18)
	float _boundsInflation;  // 0x3E0(0x4)
	float _bypassAccelerationScale;  // 0x3E4(0x4)
	float _bypassTurningSpeed;  // 0x3E8(0x4)
	float _findPathBypassMultiplier;  // 0x3EC(0x4)
	float _maxTimePerDestinationMultiplier;  // 0x3F0(0x4)
	float _droneTurningSpeed;  // 0x3F4(0x4)
	float _maxPathSegment;  // 0x3F8(0x4)
	float _flyUpwardsDistance;  // 0x3FC(0x4)
	int32_t _maximumAttemptedHeightGains;  // 0x400(0x4)
	char pad_1028[4];  // 0x404(0x4)
	struct FVector _randomMovementExtent;  // 0x408(0xC)
	float _repeatChooseLocationTime;  // 0x414(0x4)
	float _highAccelerationScaleMultiplier;  // 0x418(0x4)
	float _distanceForHighAcceleration;  // 0x41C(0x4)
	char pad_1056[8];  // 0x420(0x8)
	float _brakingDecelerationFlyingMovementRestore;  // 0x428(0x4)
	char pad_1068[140];  // 0x42C(0x8C)

	void FollowCharacter(struct ACharacter* characterToFollow); // Function ConZ.DroneAIController.FollowCharacter
}; 



// Class ConZ.PrisonerResponseIdle_StaminaInRange
// Size: 0xA8(Inherited: 0x98) 
struct UPrisonerResponseIdle_StaminaInRange : public UPrisonerResponseIdle
{
	struct FFloatRange StaminaRatioRange;  // 0x98(0x10)

}; 



// Class ConZ.NotificationDescription
// Size: 0x40(Inherited: 0x28) 
struct UNotificationDescription : public UObject
{
	uint8_t  Target;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)
	struct FDbIntegerId TargetUserProfileId;  // 0x30(0x8)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool ShouldSendIfClientOffline : 1;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 



// Class ConZ.GameEventLoadoutMenuWidget
// Size: 0x298(Inherited: 0x260) 
struct UGameEventLoadoutMenuWidget : public UUserWidget
{
	char pad_608[8];  // 0x260(0x8)
	struct TArray<struct UItemSelection*> _mandatoryGear;  // 0x268(0x10)
	struct UItemSelectionSlotWidget* _primarySelection;  // 0x278(0x8)
	struct UItemSelectionSlotWidget* _secondarySelection;  // 0x280(0x8)
	struct UItemSelectionSlotWidget* _tertiarySelection;  // 0x288(0x8)
	struct UItemSelectionSlotWidget* _outfitSelection;  // 0x290(0x8)

	void SetGameEvent(struct AGameEventBase* gameEvent); // Function ConZ.GameEventLoadoutMenuWidget.SetGameEvent
	struct AGameEventBase* GetGameEvent(); // Function ConZ.GameEventLoadoutMenuWidget.GetGameEvent
	void CreateLoadout(AItem*& primary, AItem*& secondary, AItem*& tertiary, struct TArray<AItem*>& outfit, struct TArray<AItem*>& support, struct UPrisonerLoadout* loadout); // Function ConZ.GameEventLoadoutMenuWidget.CreateLoadout
}; 



// Class ConZ.PrisonerBodyConditionUIData_InhalationPoisoning
// Size: 0x1C8(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_InhalationPoisoning : public UPrisonerBodyConditionUIData
{
	char pad_416[16];  // 0x1A0(0x10)
	struct FText _substanceName;  // 0x1B0(0x18)

}; 



// Class ConZ.BasicTextWidget
// Size: 0x268(Inherited: 0x260) 
struct UBasicTextWidget : public UUserWidget
{
	int32_t MaxTextRows;  // 0x260(0x4)
	int32_t MaxCharactersPerTextRow;  // 0x264(0x4)

	void SetCurrentText(struct FText& Text); // Function ConZ.BasicTextWidget.SetCurrentText
}; 



// Class ConZ.CustomZoneSettingsRegionsList
// Size: 0x2F0(Inherited: 0x260) 
struct UCustomZoneSettingsRegionsList : public UUserWidget
{
	char pad_608[96];  // 0x260(0x60)
	struct UTextBlock* _regionCountDisplay;  // 0x2C0(0x8)
	struct UButton* _buttonAddRegion;  // 0x2C8(0x8)
	struct UScrollBox* _scrollBox;  // 0x2D0(0x8)
	UCustomZoneSettingsRegion* _regionWidgetClass;  // 0x2D8(0x8)
	char pad_736[16];  // 0x2E0(0x10)

}; 



// Class ConZ.ModularBaseBuildingBlockCraftableItem
// Size: 0x250(Inherited: 0x250) 
struct UModularBaseBuildingBlockCraftableItem : public UBaseBuildingBlockCraftableItem
{

}; 



// Class ConZ.DummyCollisionCapsule
// Size: 0x480(Inherited: 0x470) 
struct UDummyCollisionCapsule : public UCapsuleComponent
{
	struct FGameplayTag _attachment;  // 0x470(0x8)
	char pad_1144[8];  // 0x478(0x8)

}; 



// Class ConZ.PrisonerActionAddFertilizer
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionAddFertilizer : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.BatchFuelHeatSource
// Size: 0x260(Inherited: 0x220) 
struct UBatchFuelHeatSource : public UFueledHeatSource
{
	float _fuelMassCapacity;  // 0x220(0x4)
	struct FCombustibleItemParams _initialFuelCombustionParams;  // 0x224(0x8)
	float _initialFuelMass;  // 0x22C(0x4)
	float _temperatureMultiplierRain;  // 0x230(0x4)
	uint8_t  _heightForBlowAirAnimation;  // 0x234(0x1)
	char pad_565[3];  // 0x235(0x3)
	float _distanceForBlowAirAnimation;  // 0x238(0x4)
	char pad_572_1 : 7;  // 0x23C(0x1)
	bool _isBurning : 1;  // 0x23C(0x1)
	char pad_573[3];  // 0x23D(0x3)
	int32_t _burningStage;  // 0x240(0x4)
	float _repFuelMass;  // 0x244(0x4)
	char pad_584[24];  // 0x248(0x18)

	void OnRep_IsBurning(); // Function ConZ.BatchFuelHeatSource.OnRep_IsBurning
	void OnRep_BurningStage(); // Function ConZ.BatchFuelHeatSource.OnRep_BurningStage
}; 



// Class ConZ.CombinationLockData
// Size: 0xB0(Inherited: 0x98) 
struct UCombinationLockData : public ULockData
{
	int32_t Combination;  // 0x98(0x4)
	int32_t LockIndex;  // 0x9C(0x4)
	AMinigame* SetCombinationMinigameClass;  // 0xA0(0x8)
	UMinigameConfiguration* SetCombinationMinigameConfigurationClass;  // 0xA8(0x8)

}; 



// Class ConZ.ModularTooltipElementData
// Size: 0x28(Inherited: 0x28) 
struct UModularTooltipElementData : public UObject
{

}; 



// Class ConZ.GrenadeAnimInstance
// Size: 0x2D0(Inherited: 0x2C0) 
struct UGrenadeAnimInstance : public UAnimInstance
{
	uint8_t  _owningPrisonerStance;  // 0x2C0(0x1)
	char pad_705_1 : 7;  // 0x2C1(0x1)
	bool _isOwningPrisonerInFirstPersonView : 1;  // 0x2C1(0x1)
	char pad_706_1 : 7;  // 0x2C2(0x1)
	bool _isPinPulled : 1;  // 0x2C2(0x1)
	char pad_707[13];  // 0x2C3(0xD)

}; 



// Class ConZ.VoicelineSegmentInfo
// Size: 0x90(Inherited: 0x80) 
struct UVoicelineSegmentInfo : public UCircularMenuSegmentInfo
{
	struct UCharacterVoiceline* Voiceline;  // 0x80(0x8)
	struct APrisoner* _prisoner;  // 0x88(0x8)

}; 



// Class ConZ.MiniatureZombie
// Size: 0xA50(Inherited: 0xA50) 
struct AMiniatureZombie : public AZombie2
{

}; 



// Class ConZ.BCULockable
// Size: 0x28(Inherited: 0x28) 
struct UBCULockable : public UInterface
{

}; 



// Class ConZ.ClockFaceWidget
// Size: 0x260(Inherited: 0x260) 
struct UClockFaceWidget : public UUserWidget
{

	void SetTime(float Time); // Function ConZ.ClockFaceWidget.SetTime
	void SetMinutes(int32_t Minutes); // Function ConZ.ClockFaceWidget.SetMinutes
	void SetHours(int32_t Hours); // Function ConZ.ClockFaceWidget.SetHours
}; 



// Class ConZ.CraftingFamePointsItemTag
// Size: 0x38(Inherited: 0x30) 
struct UCraftingFamePointsItemTag : public UBaseItemTag
{
	float _fameAmount;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)

}; 



// Class ConZ.ClearClipPartiallyEjected
// Size: 0xC0(Inherited: 0xB8) 
struct UClearClipPartiallyEjected : public UWeaponActionClearMalfunctionSequence
{
	struct FName MontageEndSectionName;  // 0xB8(0x8)

}; 



// Class ConZ.CraftingSlotType
// Size: 0x38(Inherited: 0x28) 
struct UCraftingSlotType : public UObject
{
	struct TArray<UCraftingIngredientType*> IngredientTypes;  // 0x28(0x10)

}; 



// Class ConZ.TraderDropdownMenu
// Size: 0x2D8(Inherited: 0x260) 
struct UTraderDropdownMenu : public UUserWidget
{
	char pad_608_1 : 7;  // 0x260(0x1)
	bool PreviewSelectedState : 1;  // 0x260(0x1)
	char pad_609[55];  // 0x261(0x37)
	struct UWidgetSwitcher* _backgroundSwitcher;  // 0x298(0x8)
	struct UComboBoxStringWithIndexing* _comboBox;  // 0x2A0(0x8)
	struct UImage* _dropdownIcon;  // 0x2A8(0x8)
	struct TArray<struct FTraderDropdownMenuEntry> _comboBoxEntries;  // 0x2B0(0x10)
	char pad_704[24];  // 0x2C0(0x18)

	void OnComboBoXSelectionChanged(int32_t SelectedIndex); // Function ConZ.TraderDropdownMenu.OnComboBoXSelectionChanged
}; 



// Class ConZ.BCULockItem
// Size: 0x920(Inherited: 0x910) 
struct ABCULockItem : public AItem
{
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent;  // 0x910(0x8)
	struct FDbIntegerId _connectedServerUserProfileId;  // 0x918(0x8)

	void OnResourceObjectDeactivated(struct UActorComponent* containerComponent); // Function ConZ.BCULockItem.OnResourceObjectDeactivated
	void OnRep_ConnectionPrisonerId(); // Function ConZ.BCULockItem.OnRep_ConnectionPrisonerId
}; 



// Class ConZ.InventoryItemComponentReplicatedPage
// Size: 0x48(Inherited: 0x28) 
struct UInventoryItemComponentReplicatedPage : public UObject
{
	struct FInventoryItemComponentReplicatedPageData Data;  // 0x28(0x18)
	char pad_64[8];  // 0x40(0x8)

	void OnRep_Data(); // Function ConZ.InventoryItemComponentReplicatedPage.OnRep_Data
}; 



// Class ConZ.BCULockRegistry
// Size: 0x2A8(Inherited: 0x220) 
struct ABCULockRegistry : public AActor
{
	char pad_544[136];  // 0x220(0x88)

	void UpdateBCULockRegistryOnClientWithUserProfileId(struct FDbIntegerId ServerUserProfileId); // Function ConZ.BCULockRegistry.UpdateBCULockRegistryOnClientWithUserProfileId
}; 



// Class ConZ.PlayEffectsWhenParticleCollides
// Size: 0x30(Inherited: 0x28) 
struct UPlayEffectsWhenParticleCollides : public UParticleModuleEventSendToGame
{
	struct UProjectileImpactEffects* ImpactEffects;  // 0x28(0x8)

}; 



// Class ConZ.ClothesItem
// Size: 0x9C0(Inherited: 0x910) 
struct AClothesItem : public AItem
{
	struct UInventoryItemComponent* _inventoryComponent;  // 0x910(0x8)
	struct UCharacterMesh* _characterMesh;  // 0x918(0x8)
	uint32_t _warmth;  // 0x920(0x4)
	uint32_t _waterResistance;  // 0x924(0x4)
	float _inwardsWaterPropagationFactor;  // 0x928(0x4)
	float _outwardsWaterPropagationFactor;  // 0x92C(0x4)
	float _camouflageBonus;  // 0x930(0x4)
	float _damageWhenEquipped;  // 0x934(0x4)
	float _dirtinessWhenEquipped;  // 0x938(0x4)
	float _thermalConductivityFactor;  // 0x93C(0x4)
	char pad_2368_1 : 7;  // 0x940(0x1)
	bool _canBeEquipped : 1;  // 0x940(0x1)
	uint8_t  _maxPaceWhenEquipped;  // 0x941(0x1)
	char pad_2370[2];  // 0x942(0x2)
	float _dirtiness;  // 0x944(0x4)
	float _baseBodyPartMultiplier;  // 0x948(0x4)
	float _baseBodyPartMultiplierWhileProne;  // 0x94C(0x4)
	float _smallMaterialDamageLimit;  // 0x950(0x4)
	float _bigMaterialDamageLimit;  // 0x954(0x4)
	float _maxFemaleHairLength;  // 0x958(0x4)
	float _maxMaleHairLength;  // 0x95C(0x4)
	float _maxFacialHairLength;  // 0x960(0x4)
	float _bellyJiggleMultiplier;  // 0x964(0x4)
	float _breastJiggleMultiplier;  // 0x968(0x4)
	uint32_t _armor;  // 0x96C(0x4)
	float _hardness;  // 0x970(0x4)
	float _projectileHitEnergyAbsorption;  // 0x974(0x4)
	float _projectileHitEnergyDamagedAbsorption;  // 0x978(0x4)
	float _energyThroughputRatio;  // 0x97C(0x4)
	float _totalEnergyAbsorption;  // 0x980(0x4)
	float _sharpMeleeDamageReduction;  // 0x984(0x4)
	float _bluntMeleeDamageReduction;  // 0x988(0x4)
	uint32_t _capacityX;  // 0x98C(0x4)
	uint32_t _capacityY;  // 0x990(0x4)
	char pad_2452[1];  // 0x994(0x1)
	char _materialParametersReplicated;  // 0x995(0x1)
	char pad_2454[18];  // 0x996(0x12)
	struct UInventoryContainer2D* _inventoryContainer2D;  // 0x9A8(0x8)
	char pad_2480[16];  // 0x9B0(0x10)

	void UpdateMaterialParamsOnClients(); // Function ConZ.ClothesItem.UpdateMaterialParamsOnClients
	void SetDirtiness(float dirtiness); // Function ConZ.ClothesItem.SetDirtiness
	void OnRep_MaterialParameters(); // Function ConZ.ClothesItem.OnRep_MaterialParameters
	int32_t GetWarmth(); // Function ConZ.ClothesItem.GetWarmth
	int32_t GetCapacityY(); // Function ConZ.ClothesItem.GetCapacityY
	int32_t GetCapacityX(); // Function ConZ.ClothesItem.GetCapacityX
}; 



// Class ConZ.BioChemSkill
// Size: 0xB0(Inherited: 0xB0) 
struct UBioChemSkill : public UIntelligenceSkill
{

}; 



// Class ConZ.Metabolism_ICU_RR_Stats
// Size: 0x290(Inherited: 0x278) 
struct UMetabolism_ICU_RR_Stats : public UMetabolism_ICU_Expandable_Stats
{
	struct UTextBlock* _rrMinMax;  // 0x278(0x8)
	struct UTextBlock* _rrTextValue;  // 0x280(0x8)
	char pad_648[8];  // 0x288(0x8)

}; 



// Class ConZ.BiomeData
// Size: 0x88(Inherited: 0x30) 
struct UBiomeData : public UDataAsset
{
	struct UMaterialInstance* VisualizationMaterial;  // 0x30(0x8)
	struct TMap<struct TSoftClassPtr<UObject>, struct FAnimalSpawnData> AnimalSpawnData;  // 0x38(0x50)

}; 



// Class ConZ.PrisonerBodySymptomCause
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerBodySymptomCause : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.Bird2AnimInstance
// Size: 0x2D0(Inherited: 0x2C0) 
struct UBird2AnimInstance : public UAnimInstance
{
	float ABPSpeed;  // 0x2B8(0x4)
	char pad_708_1 : 7;  // 0x2C4(0x1)
	bool IsLanding : 1;  // 0x2BC(0x1)
	char pad_709_1 : 7;  // 0x2C5(0x1)
	bool IsTakingOff : 1;  // 0x2BD(0x1)
	char pad_710_1 : 7;  // 0x2C6(0x1)
	bool IsPerched : 1;  // 0x2BE(0x1)
	char pad_711_1 : 7;  // 0x2C7(0x1)
	bool IsFlying : 1;  // 0x2BF(0x1)
	char pad_712_1 : 7;  // 0x2C8(0x1)
	bool IsStaringPerched : 1;  // 0x2C0(0x1)
	struct FRotator SlopeRootTiltRotation;  // 0x2C4(0xC)

}; 



// Class ConZ.Boat
// Size: 0x1230(Inherited: 0xAE0) 
struct ABoat : public AVehicleBase
{
	char pad_2784[8];  // 0xAE0(0x8)
	struct UAdvancedBuoyancyComponent* _advancedBuoyancyComponent;  // 0xAE8(0x8)
	struct UConZBuoyancyComponent* _buoyancyComponent;  // 0xAF0(0x8)
	char pad_2808[16];  // 0xAF8(0x10)
	struct UParticleSystem* _waterSplashParticleSystem;  // 0xB08(0x8)
	struct TArray<struct FVector> _particleLocations;  // 0xB10(0x10)
	char pad_2848[12];  // 0xB20(0xC)
	float _throttleForceMagnitude;  // 0xB2C(0x4)
	struct FVector _forcePosition;  // 0xB30(0xC)
	float _yawImpulse;  // 0xB3C(0x4)
	float _rollImpulse;  // 0xB40(0x4)
	float _pitchImpulse;  // 0xB44(0x4)
	char pad_2888_1 : 7;  // 0xB48(0x1)
	bool _isAnchored : 1;  // 0xB48(0x1)
	char pad_2889[7];  // 0xB49(0x7)
	struct FRuntimeFloatCurve _driverActionDifficultyVsSpeed;  // 0xB50(0x88)
	struct FRuntimeFloatCurve _driverConstitutionChangeRateModifierVsSpeed;  // 0xBD8(0x88)
	struct FRuntimeFloatCurve _driverStrengthChangeRateModifierVsSpeed;  // 0xC60(0x88)
	struct FBoatParametersPerMovementPace _parametersPerMovementPace[4];  // 0xCE8(0x60)
	struct FFloatInterval _maxSpeedModifierInterpedWithDriverDexterity;  // 0xD48(0x8)
	float _throttleInterpSpeed;  // 0xD50(0x4)
	char pad_3412[4];  // 0xD54(0x4)
	float _brakeInterpSpeed;  // 0xD58(0x4)
	char pad_3420[4];  // 0xD5C(0x4)
	float _steerInterpSpeed;  // 0xD60(0x4)
	char pad_3428[4];  // 0xD64(0x4)
	float _maxSteeringAngle;  // 0xD68(0x4)
	float _motorSteeringForce;  // 0xD6C(0x4)
	float _motorSteerTurnMultiplier;  // 0xD70(0x4)
	float _maxSpeedForBase;  // 0xD74(0x4)
	struct FRuntimeFloatCurve _sidewaysVelocityFalloff;  // 0xD78(0x88)
	struct FRuntimeFloatCurve _speedKmhVsDensityMultiplier;  // 0xE00(0x88)
	float _maxMotorSpeed;  // 0xE88(0x4)
	float _throttleToRpmMultiplier;  // 0xE8C(0x4)
	char pad_3728[16];  // 0xE90(0x10)
	char pad_3744_1 : 7;  // 0xEA0(0x1)
	bool _isPaddleInLeftHand : 1;  // 0xEA0(0x1)
	char pad_3745[3];  // 0xEA1(0x3)
	float _maxRowingSpeed;  // 0xEA4(0x4)
	AItem* itemNeededClassToStartRowing;  // 0xEA8(0x8)
	float _rowingForce;  // 0xEB0(0x4)
	char pad_3764[4];  // 0xEB4(0x4)
	struct FRuntimeFloatCurve _rowForceMultiplierPerKph;  // 0xEB8(0x88)
	float _rowTurnMultiplier;  // 0xF40(0x4)
	char pad_3908[4];  // 0xF44(0x4)
	struct FRuntimeFloatCurve _rowTurnMultiplierPerKph;  // 0xF48(0x88)
	struct UAkAudioEvent* _rowingAudioEvent;  // 0xFD0(0x8)
	float _desiredDriftMultiplier;  // 0xFD8(0x4)
	float _paddleDriftSteerMultiplier;  // 0xFDC(0x4)
	uint32_t _numPaddleSwingsInOneHand;  // 0xFE0(0x4)
	char pad_4068_1 : 7;  // 0xFE4(0x1)
	bool _hasSails : 1;  // 0xFE4(0x1)
	char pad_4069[3];  // 0xFE5(0x3)
	float _sailingForceMultiplier;  // 0xFE8(0x4)
	char pad_4076[4];  // 0xFEC(0x4)
	struct FRuntimeFloatCurve _sailingForceMultiplierPerKph;  // 0xFF0(0x88)
	float _sailingTurnMultiplier;  // 0x1078(0x4)
	char pad_4220[4];  // 0x107C(0x4)
	struct FRuntimeFloatCurve _sailingTurnMultiplierPerKph;  // 0x1080(0x88)
	struct UAkAudioEvent* _sailingRudderStartAudioEvent;  // 0x1108(0x8)
	struct UAkAudioEvent* _sailingRudderEndAudioEvent;  // 0x1110(0x8)
	int32_t _sailsDeploySteps;  // 0x1118(0x4)
	float _sailsDeploySpeedMultiplier;  // 0x111C(0x4)
	uint32_t _sailsTurnSteps;  // 0x1120(0x4)
	float _sailsTurnSpeedMultiplier;  // 0x1124(0x4)
	float _sailsMaxTurnAngle;  // 0x1128(0x4)
	float _maxSailingSpeed;  // 0x112C(0x4)
	struct FRuntimeFloatCurve _sailsDeploymentRatioVsForceMultiplier;  // 0x1130(0x88)
	float _sailingSteerSoundMultiplier;  // 0x11B8(0x4)
	char pad_4540[32];  // 0x11BC(0x20)
	uint8_t  _sdfType;  // 0x11DC(0x4)
	struct UParticleSystemComponent* _LOarWaterParticles;  // 0x11E0(0x8)
	struct UParticleSystemComponent* _ROarWaterParticles;  // 0x11E8(0x8)
	char pad_4592[64];  // 0x11F0(0x40)

}; 



// Class ConZ.PrisonerBodyCondition_FoodDisgust
// Size: 0x138(Inherited: 0xC0) 
struct UPrisonerBodyCondition_FoodDisgust : public UPrisonerBodyCondition
{
	struct FFloatInterval _disgustAmountMultiplierVsConstitution;  // 0xC0(0x8)
	float _disgustAmountTolerated;  // 0xC8(0x4)
	float _disgustAmountToIssueFirstWarning;  // 0xCC(0x4)
	UNotificationDescription* _firstDisgustWarning;  // 0xD0(0x8)
	float _disgustAmountToIssueSecondWarning;  // 0xD8(0x4)
	char pad_220[4];  // 0xDC(0x4)
	UNotificationDescription* _secondDisgustWarning;  // 0xE0(0x8)
	float _disgustWarningCooldown;  // 0xE8(0x4)
	char pad_236[8];  // 0xEC(0x8)
	float _disgustAmountToBeAbleToVomit;  // 0xF4(0x4)
	float _disgustAmountToVomit;  // 0xF8(0x4)
	float _disgustAmountDecreaseMultiplier;  // 0xFC(0x4)
	float _disgustAmount;  // 0x100(0x4)
	char pad_260[28];  // 0x104(0x1C)
	float _disgustAmountAtStabilizationStart;  // 0x120(0x4)
	float _disgustAmountAtRecoveryStart;  // 0x124(0x4)
	UPrisonerBodySymptom_Nausea* _nauseaSymptomClass;  // 0x128(0x8)
	char pad_304[8];  // 0x130(0x8)

}; 



// Class ConZ.MinigameWidget
// Size: 0x278(Inherited: 0x260) 
struct UMinigameWidget : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)

}; 



// Class ConZ.BombDefusalWidget
// Size: 0x298(Inherited: 0x278) 
struct UBombDefusalWidget : public UMinigameWidget
{
	struct UTextBlock* _remainingTimeMinutes1;  // 0x278(0x8)
	struct UTextBlock* _remainingTimeMinutes2;  // 0x280(0x8)
	struct UTextBlock* _remainingTimeSeconds1;  // 0x288(0x8)
	struct UTextBlock* _remainingTimeSeconds2;  // 0x290(0x8)

	void ShowInfo(); // Function ConZ.BombDefusalWidget.ShowInfo
	bool ShouldShowChangeDurationInfo(); // Function ConZ.BombDefusalWidget.ShouldShowChangeDurationInfo
	void OnSuccess(); // Function ConZ.BombDefusalWidget.OnSuccess
	void HideInfo(); // Function ConZ.BombDefusalWidget.HideInfo
	int32_t GetNumTries(); // Function ConZ.BombDefusalWidget.GetNumTries
}; 



// Class ConZ.MessageBox
// Size: 0x298(Inherited: 0x260) 
struct UMessageBox : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UTextBlock* _message;  // 0x278(0x8)
	struct UHorizontalBox* _buttonRow;  // 0x280(0x8)
	char pad_648[16];  // 0x288(0x10)

}; 



// Class ConZ.BondageItemTag
// Size: 0x98(Inherited: 0x30) 
struct UBondageItemTag : public UBaseItemTag
{
	struct USkeletalMesh* BondageMesh;  // 0x30(0x8)
	float BaseStruggleDuration;  // 0x38(0x4)
	float StruggleStrengthModifier;  // 0x3C(0x4)
	float StruggleDexterityModifier;  // 0x40(0x4)
	float GroundMovementSpeedMultiplier;  // 0x44(0x4)
	float WaterMovementSpeedMultiplier;  // 0x48(0x4)
	char pad_76[4];  // 0x4C(0x4)
	struct UAnimSequenceBase* HandsBoundIdleFPAnimation;  // 0x50(0x8)
	struct UAnimSequenceBase* HandsBoundIdleTPAnimation;  // 0x58(0x8)
	struct UAnimMontage* HandsBoundMontage;  // 0x60(0x8)
	struct UAnimMontage* HandsAdjustMontage;  // 0x68(0x8)
	struct UAnimMontage* HandsBoundStruggleMontage;  // 0x70(0x8)
	struct UAnimMontage* HandsFreedMontage;  // 0x78(0x8)
	struct UAnimMontage* BindingHandsMontage;  // 0x80(0x8)
	struct UAnimMontage* AdjustingHandsMontage;  // 0x88(0x8)
	struct UAnimMontage* HandsBoundSuicideMontage;  // 0x90(0x8)

}; 



// Class ConZ.GameEventParticipantInfoCardWidget
// Size: 0x260(Inherited: 0x260) 
struct UGameEventParticipantInfoCardWidget : public UUserWidget
{

	void UpdateStats(struct APrisoner* Prisoner); // Function ConZ.GameEventParticipantInfoCardWidget.UpdateStats
}; 



// Class ConZ.ConZCustomInteractionWidget
// Size: 0x28(Inherited: 0x28) 
struct UConZCustomInteractionWidget : public UInterface
{

}; 



// Class ConZ.WeaponAttachment
// Size: 0x930(Inherited: 0x910) 
struct AWeaponAttachment : public AItem
{
	char pad_2320[8];  // 0x910(0x8)
	struct UStaticMesh* _staticMeshWhenAttached;  // 0x918(0x8)
	char pad_2336[16];  // 0x920(0x10)

	void Unequip(); // Function ConZ.WeaponAttachment.Unequip
	struct FWeaponMalfunctionProbability GetWeaponMalfunctionProbabilityForMalfunctionEvent(struct AWeapon* Weapon, uint8_t  malfunctionEvent); // Function ConZ.WeaponAttachment.GetWeaponMalfunctionProbabilityForMalfunctionEvent
	struct UStaticMesh* GetStaticMeshWhenAttached(); // Function ConZ.WeaponAttachment.GetStaticMeshWhenAttached
	struct USkeletalMesh* GetSkeletalMeshWhenAttached(); // Function ConZ.WeaponAttachment.GetSkeletalMeshWhenAttached
	float GetShakinessModifier(); // Function ConZ.WeaponAttachment.GetShakinessModifier
	struct AWeapon* GetOwningWeapon(); // Function ConZ.WeaponAttachment.GetOwningWeapon
	void Equip(struct AWeapon* Weapon); // Function ConZ.WeaponAttachment.Equip
	bool CanBeRemovedIfAttachedToWeapon(); // Function ConZ.WeaponAttachment.CanBeRemovedIfAttachedToWeapon
}; 



// Class ConZ.FamePointStatics
// Size: 0x28(Inherited: 0x28) 
struct UFamePointStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.PrisonerUIDataResponse
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerUIDataResponse : public UPlayerRpcChannelServerResponse
{
	struct UPrisonerUIData* _payload;  // 0x28(0x8)

}; 



// Class ConZ.BowAttachmentStabilizer
// Size: 0x940(Inherited: 0x940) 
struct ABowAttachmentStabilizer : public ABowAttachmentSilencer
{
	float _shakinessModifier;  // 0x938(0x4)

}; 



// Class ConZ.PrisonerActionEatItem
// Size: 0x128(Inherited: 0x108) 
struct UPrisonerActionEatItem : public UPrisonerAction
{
	struct UAkAudioEvent* _startEatingAudioEvent;  // 0x108(0x8)
	struct UAkAudioEvent* _stopEatingAudioEvent;  // 0x110(0x8)
	AFoodItem* _itemClass;  // 0x118(0x8)
	char pad_288[8];  // 0x120(0x8)

}; 



// Class ConZ.WeatherController2
// Size: 0x10A0(Inherited: 0x220) 
struct AWeatherController2 : public AActor
{
	char pad_544[72];  // 0x220(0x48)
	float _maxHeightAboveSeaLevel;  // 0x268(0x4)
	char pad_620[4];  // 0x26C(0x4)
	struct UDirectionalLightComponent* _sun;  // 0x270(0x8)
	float _timeOfDay;  // 0x278(0x4)
	char pad_636_1 : 7;  // 0x27C(0x1)
	bool _canStartTimeOfDayBeOverridenByConfig : 1;  // 0x27C(0x1)
	char pad_637[3];  // 0x27D(0x3)
	float _timeOfDaySpeed;  // 0x280(0x4)
	char pad_644_1 : 7;  // 0x284(0x1)
	bool _canTimeOfDaySpeedBeOverridenByConfig : 1;  // 0x284(0x1)
	char pad_645[3];  // 0x285(0x3)
	float _sunIntensity;  // 0x288(0x4)
	float _sunFullEclipseMult;  // 0x28C(0x4)
	float _sunAzimuthDegrees;  // 0x290(0x4)
	float _sunriseTime;  // 0x294(0x4)
	char pad_664_1 : 7;  // 0x298(0x1)
	bool _canSunriseTimeBeOverridenByConfig : 1;  // 0x298(0x1)
	char pad_665[3];  // 0x299(0x3)
	float _sunsetTime;  // 0x29C(0x4)
	char pad_672_1 : 7;  // 0x2A0(0x1)
	bool _canSunsetTimeBeOverridenByConfig : 1;  // 0x2A0(0x1)
	char pad_673[3];  // 0x2A1(0x3)
	float _dawnDuskTresholdAngle;  // 0x2A4(0x4)
	char pad_680[4];  // 0x2A8(0x4)
	float _maxSolarIrradiance;  // 0x2AC(0x4)
	struct UDirectionalLightComponent* _moon;  // 0x2B0(0x8)
	float _moonRotation;  // 0x2B8(0x4)
	float _moonIntensityMult;  // 0x2BC(0x4)
	struct FLinearColor _moonLightTint;  // 0x2C0(0x10)
	struct UMaterialInterface* _moonStarsMaterial;  // 0x2D0(0x8)
	struct UMaterialInstanceDynamic* _moonStarsMaterialDynamic;  // 0x2D8(0x8)
	struct UStaticMeshComponent* _starsSphere;  // 0x2E0(0x8)
	float _starsSphereDistance;  // 0x2E8(0x4)
	struct FRotator _starsSphereRotation;  // 0x2EC(0xC)
	struct UDirectionalLightComponent* _nightLight;  // 0x2F8(0x8)
	float _nightLightIntensity;  // 0x300(0x4)
	struct FFloatInterval _nightLightIntensityRange;  // 0x304(0x8)
	struct FLinearColor _nightLightColor;  // 0x30C(0x10)
	char pad_796[4];  // 0x31C(0x4)
	struct USkyLightComponent* _skyAmbientReflEnv;  // 0x320(0x8)
	struct USkyAtmosphereComponent* _skyAtmosphere;  // 0x328(0x8)
	float _skyAmbientIntensity;  // 0x330(0x4)
	char pad_820[4];  // 0x334(0x4)
	struct FRuntimeFloatCurve _skyAmbientOcclusionTint;  // 0x338(0x88)
	struct UVolumetricCloudComponent* _volumetricClouds;  // 0x3C0(0x8)
	struct UMaterialInterface* _volumetricCloudsMaterialLQ;  // 0x3C8(0x8)
	struct UMaterialInterface* _volumetricCloudsMaterialHQ;  // 0x3D0(0x8)
	struct UMaterialInstanceDynamic* _volumetricCloudsMaterialDynamic;  // 0x3D8(0x8)
	float _cirrostratusCoverage;  // 0x3E0(0x4)
	float _cirrostratusSunlightThroughput;  // 0x3E4(0x4)
	struct FRuntimeFloatCurve _cirrostratusCoverageMaterialParamRemap;  // 0x3E8(0x88)
	float _cumulonimbusCoverage;  // 0x470(0x4)
	float _cumulonimbusSunlightThroughput;  // 0x474(0x4)
	struct FRuntimeFloatCurve _cumulonimbusCoverageMaterialParamRemap;  // 0x478(0x88)
	float _nimbostratusCoverage;  // 0x500(0x4)
	float _nimbostratusSunlightThroughput;  // 0x504(0x4)
	struct FRuntimeFloatCurve _nimbostratusCoverageMaterialParamRemap;  // 0x508(0x88)
	float _cloudsBaseSpeed;  // 0x590(0x4)
	float _cloudsWindSpeed;  // 0x594(0x4)
	char pad_1432[8];  // 0x598(0x8)
	struct UParticleSystem* _lightningParticleSystem;  // 0x5A0(0x8)
	struct FFloatInterval _lightningParticleLifetime;  // 0x5A8(0x8)
	struct UAkAudioEvent* _thunderSoundEmitter;  // 0x5B0(0x8)
	struct FFloatInterval _thunderSoundDuration;  // 0x5B8(0x8)
	float _lightningRate;  // 0x5C0(0x4)
	float _lightningMaxDistance;  // 0x5C4(0x4)
	float _lightningAltitudeOffsetFromPlayer;  // 0x5C8(0x4)
	float _lightningAltitudeBandThickness;  // 0x5CC(0x4)
	char pad_1488[32];  // 0x5D0(0x20)
	struct USceneComponent* _precipitationEmittersRoot;  // 0x5F0(0x8)
	struct UChildActorComponent* _precipitationMaskCapture;  // 0x5F8(0x8)
	float _precipitationMaskUpdateInterval;  // 0x600(0x4)
	char pad_1540[4];  // 0x604(0x4)
	float _precipitationEmittersUpOffset;  // 0x608(0x4)
	float _precipitationEmittersForwardOffset;  // 0x60C(0x4)
	float _precipitationEmittersVelocityOffset;  // 0x610(0x4)
	char pad_1556[4];  // 0x614(0x4)
	struct TArray<struct UParticleSystem*> _rainParticleSystems;  // 0x618(0x10)
	struct TArray<struct UParticleSystemComponent*> _rainEmitters;  // 0x628(0x10)
	float _rainIntensity;  // 0x638(0x4)
	float _maxRainMilimeterPerHour;  // 0x63C(0x4)
	struct TArray<struct UParticleSystem*> _snowParticleSystems;  // 0x640(0x10)
	struct TArray<struct UParticleSystemComponent*> _snowEmitters;  // 0x650(0x10)
	float _snowIntensity;  // 0x660(0x4)
	char pad_1636[4];  // 0x664(0x4)
	struct UMaterialParameterCollection* _mainMPC;  // 0x668(0x8)
	struct UMaterialParameterCollection* _foliageMPC;  // 0x670(0x8)
	struct FRuntimeFloatCurve _foliageMPCSubsurfaceColorIntensityCurve;  // 0x678(0x88)
	struct UMaterialParameterCollection* _wetnessMPC;  // 0x700(0x8)
	struct FRuntimeFloatCurve _wetnessMPCEmissiveIntensityCurve;  // 0x708(0x88)
	struct UMaterialParameterCollection* _particlesMPC;  // 0x790(0x8)
	struct FRuntimeCurveLinearColor _particlesMPCGlobalParticlesColorCurve;  // 0x798(0x208)
	float _baseAirTemperature;  // 0x9A0(0x4)
	struct FFloatInterval _baseAirTemperatureRange;  // 0x9A4(0x8)
	float _airTemperatureHeightModifier;  // 0x9AC(0x4)
	float _waterTemperature;  // 0x9B0(0x4)
	struct FFloatInterval _waterTemperatureRange;  // 0x9B4(0x8)
	float _waterTemperatureInterpSpeed;  // 0x9BC(0x4)
	float _waterTemperatureHeightModifier;  // 0x9C0(0x4)
	float _temperatureDifferenceBetweenShadeAndOnSun;  // 0x9C4(0x4)
	struct FRuntimeFloatCurve _waterEvaporationRate;  // 0x9C8(0x88)
	float _airRelativeHumidity;  // 0xA50(0x4)
	char pad_2644[4];  // 0xA54(0x4)
	struct UWindDirectionalSourceComponent* _windSourceComponent;  // 0xA58(0x8)
	struct UParticleSystemComponent* _leavesComponent;  // 0xA60(0x8)
	float _windAzimuth;  // 0xA68(0x4)
	float _windIntensity;  // 0xA6C(0x4)
	float _windAzimuthForWaves;  // 0xA70(0x4)
	float _windIntensityForWaves;  // 0xA74(0x4)
	float _maxWindSpeedKph;  // 0xA78(0x4)
	char pad_2684[4];  // 0xA7C(0x4)
	struct UExponentialHeightFogComponent* _heightFog;  // 0xA80(0x8)
	float _fogDensity;  // 0xA88(0x4)
	float _fogFalloff;  // 0xA8C(0x4)
	float _fogHeightOffset;  // 0xA90(0x4)
	struct FLinearColor _fogBaseInscatteringColor;  // 0xA94(0x10)
	struct FLinearColor _fogBaseDirectionalInscatteringColor;  // 0xAA4(0x10)
	char pad_2740[4];  // 0xAB4(0x4)
	struct UChildActorComponent* _postProcessVolume;  // 0xAB8(0x8)
	struct FRuntimeFloatCurve _exposureMinBrightness;  // 0xAC0(0x88)
	struct FRuntimeFloatCurve _exposureMaxBrightness;  // 0xB48(0x88)
	struct FRuntimeFloatCurve _exposureSpeedUp;  // 0xBD0(0x88)
	struct FRuntimeFloatCurve _exposureSpeedDown;  // 0xC58(0x88)
	struct FMultistageRandomRoll _windAzimuthRandom;  // 0xCE0(0x68)
	struct FMultistageRandomRoll _windIntensityRandom;  // 0xD48(0x68)
	struct FMultistageRandomRoll _cirrostratusCoverageRandom;  // 0xDB0(0x68)
	struct FMultistageRandomRoll _cumulonimbusCoverageRandom;  // 0xE18(0x68)
	struct FMultistageRandomRoll _nimbostratusCoverageRandom;  // 0xE80(0x68)
	struct FRuntimeFloatCurve _baseAirTemperatureVsTimeOfDay;  // 0xEE8(0x88)
	struct FRuntimeFloatCurve _fogDensityVsSunIntensity;  // 0xF70(0x88)
	float _fogDensityFromCumulonimbus;  // 0xFF8(0x4)
	float _fogRainRatioFromCumulonimbus;  // 0xFFC(0x4)
	char pad_4096[4];  // 0x1000(0x4)
	float _fogDensityWhenRaining;  // 0x1004(0x4)
	float _fogDensityInterpSpeed;  // 0x1008(0x4)
	float _autoSaveInterval;  // 0x100C(0x4)
	char pad_4112[4];  // 0x1010(0x4)
	char pad_4116_1 : 7;  // 0x1014(0x1)
	bool _shouldSerializeState : 1;  // 0x1014(0x1)
	char pad_4117[3];  // 0x1015(0x3)
	float _sendReplicatedStateSnapshotInterval;  // 0x1018(0x4)
	char pad_4124[32];  // 0x101C(0x20)
	float _nighttimeDarkness;  // 0x103C(0x4)
	char pad_4160[96];  // 0x1040(0x60)

	void OnRep_NighttimeDarkness(); // Function ConZ.WeatherController2.OnRep_NighttimeDarkness
	void NetMulticast_SendStateSnapshot(struct FWeatherReplicatedStateSnapshot Snapshot); // Function ConZ.WeatherController2.NetMulticast_SendStateSnapshot
	void NetMulticast_ResetStateSnapshots(struct FWeatherReplicatedStateSnapshot Snapshot); // Function ConZ.WeatherController2.NetMulticast_ResetStateSnapshots
}; 



// Class ConZ.MeleeSkill
// Size: 0x108(Inherited: 0xB0) 
struct UMeleeSkill : public UStrengthSkill
{
	struct UMeleeSkillAnimationsPreset* AnimationsPreset;  // 0xB0(0x8)
	struct FMeleeSkillExperienceAwards _noSkillExperienceAwards;  // 0xB8(0x10)
	struct FMeleeSkillExperienceAwards _basicSkillExperienceAwards;  // 0xC8(0x10)
	struct FMeleeSkillExperienceAwards _mediumSkillExperienceAwards;  // 0xD8(0x10)
	struct FMeleeSkillExperienceAwards _advancedSkillExperienceAwards;  // 0xE8(0x10)
	struct FMeleeSkillExperienceAwards _aboveAdvancedSkillExperienceAwards;  // 0xF8(0x10)

	struct UAnimSequenceBase* GetWalkingIdleAnimationTP(); // Function ConZ.MeleeSkill.GetWalkingIdleAnimationTP
	struct UAnimSequenceBase* GetWalkingIdleAnimationFP(); // Function ConZ.MeleeSkill.GetWalkingIdleAnimationFP
	struct UAnimSequenceBase* GetTiredIdleAnimationTP(); // Function ConZ.MeleeSkill.GetTiredIdleAnimationTP
	struct UAnimSequenceBase* GetTiredIdleAnimationFP(); // Function ConZ.MeleeSkill.GetTiredIdleAnimationFP
	float GetStaminaMultiplier(float excessGearWeight); // Function ConZ.MeleeSkill.GetStaminaMultiplier
	struct UAnimSequenceBase* GetPrimaryIdleAnimationTP(); // Function ConZ.MeleeSkill.GetPrimaryIdleAnimationTP
	struct UAnimSequenceBase* GetPrimaryIdleAnimationFP(); // Function ConZ.MeleeSkill.GetPrimaryIdleAnimationFP
	struct UAnimMontage* GetLeaveCombatModeMontage(); // Function ConZ.MeleeSkill.GetLeaveCombatModeMontage
	struct TArray<struct UAnimSequenceBase*> GetInactivityIdleAnimations(); // Function ConZ.MeleeSkill.GetInactivityIdleAnimations
	float GetIdleToBlockBlendDuration(); // Function ConZ.MeleeSkill.GetIdleToBlockBlendDuration
	struct UAnimMontage* GetEnterCombatModeMontage(); // Function ConZ.MeleeSkill.GetEnterCombatModeMontage
	float GetBlockToIdleBlendDuration(); // Function ConZ.MeleeSkill.GetBlockToIdleBlendDuration
	struct UAnimSequenceBase* GetBlockIdleAnimationTP(); // Function ConZ.MeleeSkill.GetBlockIdleAnimationTP
	struct UAnimSequenceBase* GetBlockIdleAnimationFP(); // Function ConZ.MeleeSkill.GetBlockIdleAnimationFP
	struct UBlendSpace* GetAimOffsetBlendSpaceTP(); // Function ConZ.MeleeSkill.GetAimOffsetBlendSpaceTP
	struct UBlendSpace* GetAimOffsetBlendSpaceFP(); // Function ConZ.MeleeSkill.GetAimOffsetBlendSpaceFP
}; 



// Class ConZ.CharacterItemDragComponent
// Size: 0x108(Inherited: 0xB0) 
struct UCharacterItemDragComponent : public UActorComponent
{
	char pad_176[88];  // 0xB0(0x58)

}; 



// Class ConZ.Physician
// Size: 0x28(Inherited: 0x28) 
struct UPhysician : public UInterface
{

}; 



// Class ConZ.MedicalService
// Size: 0x38(Inherited: 0x38) 
struct UMedicalService : public UTraderService
{

}; 



// Class ConZ.GameEventInfoWidget
// Size: 0x260(Inherited: 0x260) 
struct UGameEventInfoWidget : public UUserWidget
{

	void UpdateStats(struct AGameEventBase* _gameEvent); // Function ConZ.GameEventInfoWidget.UpdateStats
}; 



// Class ConZ.CharacterSpawnerPreset
// Size: 0x38(Inherited: 0x28) 
struct UCharacterSpawnerPreset : public UObject
{
	struct FCharacterSpawnerData SpawnerData;  // 0x28(0x10)

}; 



// Class ConZ.ComboBoxWrapper
// Size: 0x270(Inherited: 0x260) 
struct UComboBoxWrapper : public UUserWidget
{
	struct UComboBoxString* ComboBox;  // 0x260(0x8)
	char pad_616[8];  // 0x268(0x8)

}; 



// Class ConZ.NetworkDataIdAsset
// Size: 0xD0(Inherited: 0x30) 
struct UNetworkDataIdAsset : public UDataAsset
{
	struct TMap<uint32_t, struct FPrimaryAssetId> IdToAssetMap;  // 0x30(0x50)
	struct TMap<struct FPrimaryAssetId, uint32_t> AssetToIdMap;  // 0x80(0x50)

}; 



// Class ConZ.GameEventRightPanel
// Size: 0x270(Inherited: 0x260) 
struct UGameEventRightPanel : public UUserWidget
{
	struct UOverlay* LeaderboardSlot;  // 0x260(0x8)
	UGameEventLeaderboardWidget* _leaderboardWidgetClass;  // 0x268(0x8)

}; 



// Class ConZ.BoxingSkill
// Size: 0x108(Inherited: 0x108) 
struct UBoxingSkill : public UMeleeSkill
{

}; 



// Class ConZ.BruisingComponent
// Size: 0x128(Inherited: 0xB0) 
struct UBruisingComponent : public UActorComponent
{
	struct UBruisingData* BruisingData;  // 0xB0(0x8)
	char pad_184_1 : 7;  // 0xB8(0x1)
	bool FadeBruises : 1;  // 0xB8(0x1)
	char pad_185[3];  // 0xB9(0x3)
	float BruisesLifeTime;  // 0xBC(0x4)
	float BruisesFadeUpdateInterval;  // 0xC0(0x4)
	char pad_196[4];  // 0xC4(0x4)
	struct UTextureRenderTarget2D* _renderTargetByLayer[3];  // 0xC8(0x18)
	char pad_224[72];  // 0xE0(0x48)

	void MakeCompletelyBruised(); // Function ConZ.BruisingComponent.MakeCompletelyBruised
	struct UTextureRenderTarget2D* GetBruiseLayerRenderTarget(uint8_t  Layer); // Function ConZ.BruisingComponent.GetBruiseLayerRenderTarget
	void ClearBruises(); // Function ConZ.BruisingComponent.ClearBruises
	void AddBruise(uint8_t  zone); // Function ConZ.BruisingComponent.AddBruise
}; 



// Class ConZ.PrisonerAnimInstance_Bike
// Size: 0x450(Inherited: 0x2C0) 
struct UPrisonerAnimInstance_Bike : public UAnimInstance
{
	float _bikeSpeed;  // 0x2B8(0x4)
	float _bikeSpeedKmh;  // 0x2BC(0x4)
	float _steerAmount;  // 0x2C0(0x4)
	float _brakeAmount;  // 0x2C4(0x4)
	float _throttleAmount;  // 0x2C8(0x4)
	char pad_724_1 : 7;  // 0x2D4(0x1)
	bool _isInCombatMode : 1;  // 0x2CC(0x1)
	char pad_725_1 : 7;  // 0x2D5(0x1)
	bool _isDriver : 1;  // 0x2CD(0x1)
	char pad_726_1 : 7;  // 0x2D6(0x1)
	bool _isBicycle : 1;  // 0x2CE(0x1)
	float _vehicleRoll;  // 0x2D0(0x4)
	float _lerpedBrakeThrottle;  // 0x2D4(0x4)
	float _inAirTimer;  // 0x2D8(0x4)
	float _driverIdlePlayRate;  // 0x2DC(0x4)
	char pad_743_1 : 7;  // 0x2E7(0x1)
	bool _isStartingEngine : 1;  // 0x2E0(0x1)
	struct UBlendSpace* _driverIdleAnimation;  // 0x2E8(0x8)
	struct UBlendSpace* _driverReverseIdleAnimation;  // 0x2F0(0x8)
	char pad_760[8];  // 0x2F8(0x8)
	struct FTransform _driverLHandleTransform;  // 0x300(0x30)
	struct FTransform _driverRHandleTransform;  // 0x330(0x30)
	struct FTransform _driverReverseSeatHandTransform;  // 0x360(0x30)
	struct FTransform _driverLFootRestTransform;  // 0x390(0x30)
	struct FTransform _driverRFootRestTransform;  // 0x3C0(0x30)
	struct UBlendSpace* _passengerIdleAnimation;  // 0x3F0(0x8)
	char pad_1016_1 : 7;  // 0x3F8(0x1)
	bool _useVehicleWAPLowerBodyIdleTP : 1;  // 0x3F8(0x1)
	char pad_1017[7];  // 0x3F9(0x7)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingTP;  // 0x400(0x8)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedTP;  // 0x408(0x8)
	struct UAnimSequence* _startEngineStartAnimation;  // 0x410(0x8)
	struct UAnimSequence* _startEngineLoopAnimation;  // 0x418(0x8)
	struct UAnimSequence* _startEngineLongLoopAnimation;  // 0x420(0x8)
	struct UAnimSequence* _startEngineEndAnimation;  // 0x428(0x8)
	struct UAnimSequence* _standUpStartAnimation;  // 0x430(0x8)
	struct UAnimSequence* _standUpLoopAnimation;  // 0x438(0x8)
	struct UAnimSequence* _standUpEndAnimation;  // 0x440(0x8)
	struct UAimOffsetBlendSpace* _turnAimOffset;  // 0x448(0x8)

}; 



// Class ConZ.ConZBuoyancyComponent
// Size: 0xF8(Inherited: 0xB0) 
struct UConZBuoyancyComponent : public UActorComponent
{
	struct TArray<struct FBuoyancyTestPoint> TestPoints;  // 0xB0(0x10)
	int32_t NumTestPointGroups;  // 0xC0(0x4)
	struct FVector VelocityDamper;  // 0xC4(0xC)
	float FluidLinearDamping;  // 0xD0(0x4)
	float FluidAngularDamping;  // 0xD4(0x4)
	char pad_216_1 : 7;  // 0xD8(0x1)
	bool ClampMaxVelocity : 1;  // 0xD8(0x1)
	char pad_217[3];  // 0xD9(0x3)
	float MaxUnderwaterVelocity;  // 0xDC(0x4)
	char pad_224_1 : 7;  // 0xE0(0x1)
	bool ShouldApplyWaterVelocity : 1;  // 0xE0(0x1)
	char pad_225[3];  // 0xE1(0x3)
	float WaterVelocityMultiplier;  // 0xE4(0x4)
	char pad_232_1 : 7;  // 0xE8(0x1)
	bool bDrawDebug : 1;  // 0xE8(0x1)
	char pad_233_1 : 7;  // 0xE9(0x1)
	bool _isUnderwater : 1;  // 0xE9(0x1)
	char pad_234[2];  // 0xEA(0x2)
	float _densityMultiplier;  // 0xEC(0x4)
	char pad_240[8];  // 0xF0(0x8)

}; 



// Class ConZ.BruisingData
// Size: 0x40(Inherited: 0x30) 
struct UBruisingData : public UDataAsset
{
	struct TArray<struct FBruisePatch> Patches;  // 0x30(0x10)

}; 



// Class ConZ.PrisonerBodySymptom_Burping
// Size: 0xD8(Inherited: 0xD8) 
struct UPrisonerBodySymptom_Burping : public UPrisonerBodySymptom_PeriodicSound
{

}; 



// Class ConZ.BuildingHelperComponent
// Size: 0xB0(Inherited: 0xB0) 
struct UBuildingHelperComponent : public UActorComponent
{

}; 



// Class ConZ.DcxWheeledVehicle4W
// Size: 0xD60(Inherited: 0xD60) 
struct ADcxWheeledVehicle4W : public ADcxWheeledVehicle
{

}; 



// Class ConZ.WeaponAutoCrossbowAnimInstance
// Size: 0x310(Inherited: 0x300) 
struct UWeaponAutoCrossbowAnimInstance : public UWeaponAnimInstance
{
	char pad_768[8];  // 0x300(0x8)
	float _followerBoneLocationOffset;  // 0x308(0x4)
	char pad_780[4];  // 0x30C(0x4)

}; 



// Class ConZ.CCNonSelectableTextWidget
// Size: 0x2C0(Inherited: 0x260) 
struct UCCNonSelectableTextWidget : public UUserWidget
{
	struct URetainerBox* _retainerBox;  // 0x260(0x8)
	struct USizeBox* _sizeBox;  // 0x268(0x8)
	struct UTextBlock* _textBlock;  // 0x270(0x8)
	struct FText _text;  // 0x278(0x18)
	int32_t _fontSize;  // 0x290(0x4)
	struct FMargin _textPadding;  // 0x294(0x10)
	struct FVector2D _sizeOverride;  // 0x2A4(0x8)
	char EHorizontalAlignment _textHorizontalAlignment;  // 0x2AC(0x1)
	char pad_685[3];  // 0x2AD(0x3)
	struct FLinearColor _textColor;  // 0x2B0(0x10)

	void SetTextColor(struct FLinearColor Color); // Function ConZ.CCNonSelectableTextWidget.SetTextColor
	void SetText(struct FText Text); // Function ConZ.CCNonSelectableTextWidget.SetText
	void HighlightPartially(float percent); // Function ConZ.CCNonSelectableTextWidget.HighlightPartially
}; 



// Class ConZ.ReplenishableResourceManager
// Size: 0x230(Inherited: 0xB0) 
struct UReplenishableResourceManager : public UActorComponent
{
	char pad_176[376];  // 0xB0(0x178)
	int32_t _maxNumReplenishableResourceReplenishmentsPerTick;  // 0x228(0x4)
	float _playerProximityToReplenish;  // 0x22C(0x4)

	void NetMulticast_SetReplenishableResourceAmount(int32_t dataVersion, struct FPackedLocation ID, float Value); // Function ConZ.ReplenishableResourceManager.NetMulticast_SetReplenishableResourceAmount
	void NetMulticast_ReserveReplenishableResourceSlot(int32_t dataVersion, struct FPackedLocation ID, int32_t SlotIndex); // Function ConZ.ReplenishableResourceManager.NetMulticast_ReserveReplenishableResourceSlot
	void NetMulticast_ReleaseReplenishableResourceSlot(int32_t dataVersion, struct FPackedLocation ID, int32_t SlotIndex); // Function ConZ.ReplenishableResourceManager.NetMulticast_ReleaseReplenishableResourceSlot
	void NetMulticast_DestroyReplenishableResource(int32_t dataVersion, struct FPackedLocation ID); // Function ConZ.ReplenishableResourceManager.NetMulticast_DestroyReplenishableResource
	void NetMulticast_CreateReplenishableResource(int32_t dataVersion, struct FReplenishableResourceDescription Description); // Function ConZ.ReplenishableResourceManager.NetMulticast_CreateReplenishableResource
}; 



// Class ConZ.BuildingPanel
// Size: 0x380(Inherited: 0x298) 
struct UBuildingPanel : public UBuildingCraftingPanelBase
{
	int32_t _modularBaseBuildingWidgetsPerRow;  // 0x298(0x4)
	char pad_668[4];  // 0x29C(0x4)
	UExpandableContainer* _expandableContainerClass;  // 0x2A0(0x8)
	struct UGridPanel* _placeablesBox;  // 0x2A8(0x8)
	struct UGridPanel* _placeablesSubBox1;  // 0x2B0(0x8)
	struct UGridPanel* _placeablesSubBox2;  // 0x2B8(0x8)
	struct UGridPanel* _placeablesSubBox3;  // 0x2C0(0x8)
	struct UGridPanel* _placeablesSubBox4;  // 0x2C8(0x8)
	struct UGridPanel* _placeablesSubBox5;  // 0x2D0(0x8)
	struct UUserWidget* PlaceablesContainer;  // 0x2D8(0x8)
	struct UUserWidget* PlaceablesSubContainer1;  // 0x2E0(0x8)
	struct UUserWidget* PlaceablesSubContainer2;  // 0x2E8(0x8)
	struct UUserWidget* PlaceablesSubContainer3;  // 0x2F0(0x8)
	struct UUserWidget* PlaceablesSubContainer4;  // 0x2F8(0x8)
	struct UUserWidget* PlaceablesSubContainer5;  // 0x300(0x8)
	struct UGridPanel* _baseBuildingBox;  // 0x308(0x8)
	struct UGridPanel* _baseBuildingSubBox1;  // 0x310(0x8)
	struct UGridPanel* _baseBuildingSubBox2;  // 0x318(0x8)
	struct UGridPanel* _baseBuildingSubBox3;  // 0x320(0x8)
	struct UGridPanel* _baseBuildingSubBox4;  // 0x328(0x8)
	struct UGridPanel* _baseBuildingSubBox5;  // 0x330(0x8)
	struct UUserWidget* BaseBuildingContainer;  // 0x338(0x8)
	struct UUserWidget* BaseBuildingSubContainer1;  // 0x340(0x8)
	struct UUserWidget* BaseBuildingSubContainer2;  // 0x348(0x8)
	struct UUserWidget* BaseBuildingSubContainer3;  // 0x350(0x8)
	struct UUserWidget* BaseBuildingSubContainer4;  // 0x358(0x8)
	struct UUserWidget* BaseBuildingSubContainer5;  // 0x360(0x8)
	struct UScrollBox* _placeablesScrollBox;  // 0x368(0x8)
	struct UScaleBox* _placeablesScaleBox;  // 0x370(0x8)
	struct UVerticalBox* _categoriesVerticalBox;  // 0x378(0x8)

}; 



// Class ConZ.ItemComponentStateBase
// Size: 0x40(Inherited: 0x28) 
struct UItemComponentStateBase : public UObject
{
	struct FDbIntegerId ID;  // 0x28(0x8)
	struct FString ComponentName;  // 0x30(0x10)

}; 



// Class ConZ.MalfunctionsContainerWidget
// Size: 0x308(Inherited: 0x260) 
struct UMalfunctionsContainerWidget : public UUserWidget
{
	struct FSlateColor HotkeyTextColorUnhovered;  // 0x260(0x28)
	struct FSlateColor HotkeyTextColorHovered;  // 0x288(0x28)
	struct UCircularMenuWidget* _malfunctionsCircularMenu;  // 0x2B0(0x8)
	struct UWidgetSwitcher* _hotkeyDisplaySwitcher;  // 0x2B8(0x8)
	struct UTextBlock* _twoOp_2;  // 0x2C0(0x8)
	struct UTextBlock* _twoOp_3;  // 0x2C8(0x8)
	struct UTextBlock* _threeOp_2;  // 0x2D0(0x8)
	struct UTextBlock* _threeOp_3;  // 0x2D8(0x8)
	struct UTextBlock* _threeOp_4;  // 0x2E0(0x8)
	struct UTextBlock* _fourOp_2;  // 0x2E8(0x8)
	struct UTextBlock* _fourOp_3;  // 0x2F0(0x8)
	struct UTextBlock* _fourOp_4;  // 0x2F8(0x8)
	struct UTextBlock* _fourOp_5;  // 0x300(0x8)

}; 



// Class ConZ.TeamInvitationWidget
// Size: 0x290(Inherited: 0x260) 
struct UTeamInvitationWidget : public UUserWidget
{
	struct FText InvitationText;  // 0x260(0x18)
	struct APrisoner* invitor;  // 0x278(0x8)
	struct APrisoner* invited;  // 0x280(0x8)
	char pad_648_1 : 7;  // 0x288(0x1)
	bool InvitedPlayerHasFlag : 1;  // 0x288(0x1)
	char pad_649[7];  // 0x289(0x7)

	void StartTimer(float Timeout); // Function ConZ.TeamInvitationWidget.StartTimer
}; 



// Class ConZ.LandingDamageCustomization
// Size: 0x30(Inherited: 0x28) 
struct ULandingDamageCustomization : public UDamageCustomization
{
	float PrisonerAnkleSprainEnergyThreshold;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)

}; 



// Class ConZ.GlobalAquaticLifeManager
// Size: 0x1740(Inherited: 0x220) 
struct AGlobalAquaticLifeManager : public AActor
{
	float _updateRegisteredPrisonersTickTime;  // 0x220(0x4)
	char pad_548[5108];  // 0x224(0x13F4)
	struct TMap<int64_t, struct FAquaticLifeSpawningVolumeDescription> _fishSpawningVolumes;  // 0x1618(0x50)
	char pad_5736[32];  // 0x1668(0x20)
	float _localFishSchoolManagerRelevancyRange;  // 0x1688(0x4)
	float _distanceBetweenLocalFishSchoolManagers;  // 0x168C(0x4)
	float _localFishSchoolManagerTickTime;  // 0x1690(0x4)
	float _localFishSchoolManagerDestructionTime;  // 0x1694(0x4)
	float _prisonerWaterImmersionRelevancyThreshold;  // 0x1698(0x4)
	float _waterSplinePitchThresholdForSchools;  // 0x169C(0x4)
	int32_t _maxSpawnedSchools;  // 0x16A0(0x4)
	char pad_5796[28];  // 0x16A4(0x1C)
	float _localFishingZoneIndicatorManagerRelevancyRange;  // 0x16C0(0x4)
	float _localFishingZoneIndicatorManagerTickTime;  // 0x16C4(0x4)
	float _localFishingZoneIndicatorManagerDestructionTime;  // 0x16C8(0x4)
	char pad_5836[4];  // 0x16CC(0x4)
	AFishingZoneIndicator* _indicatorClass;  // 0x16D0(0x8)
	float _fishingPrecision;  // 0x16D8(0x4)
	char pad_5852[4];  // 0x16DC(0x4)
	struct UCurveFloat* _weatherPercentageCurve;  // 0x16E0(0x8)
	int32_t _maxSpawnedIndicators;  // 0x16E8(0x4)
	char pad_5868[36];  // 0x16EC(0x24)
	int32_t _maxLargeAquaticAnimals;  // 0x1710(0x4)
	char pad_5908[4];  // 0x1714(0x4)
	struct TArray<struct ULargeAquaticAnimalSpeciesData*> _possibleLargeAquaticAnimals;  // 0x1718(0x10)
	float _distanceBetweenLargeAquaticAnimals;  // 0x1728(0x4)
	float _largeAquaticAnimalSpawningRangeMin;  // 0x172C(0x4)
	float _largeAquaticAnimalSpawningRangeMax;  // 0x1730(0x4)
	float _requiredTimeInWaterToSpawnLargeAquaticAnimal;  // 0x1734(0x4)
	float _requiredTimeInWaterWhileBleedingToSpawnLargeAquaticAnimal;  // 0x1738(0x4)
	float _timeToReenableLargeAquaticAnimalSpawnZone;  // 0x173C(0x4)

}; 



// Class ConZ.PrisonerActionEatItemDescription
// Size: 0x58(Inherited: 0x38) 
struct UPrisonerActionEatItemDescription : public UPrisonerActionDescription
{
	char pad_56[32];  // 0x38(0x20)

}; 



// Class ConZ.TradingOutpostDescriptionDataAsset
// Size: 0x40(Inherited: 0x30) 
struct UTradingOutpostDescriptionDataAsset : public UDataAsset
{
	struct FGuid TradeOutpostPersistentId;  // 0x30(0x10)

}; 



// Class ConZ.ItemSpawnerPreset2
// Size: 0x90(Inherited: 0x28) 
struct UItemSpawnerPreset2 : public UObject
{
	struct TArray<struct FItemSpawnerPreset_Node> Nodes;  // 0x28(0x10)
	struct TArray<struct FItemSpawnerPreset_Item> Items;  // 0x38(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> FixedItems;  // 0x48(0x10)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool AlwaysSpawn : 1;  // 0x58(0x1)
	char pad_89[3];  // 0x59(0x3)
	float Probability;  // 0x5C(0x4)
	struct FInt32Interval Quantity;  // 0x60(0x8)
	char pad_104_1 : 7;  // 0x68(0x1)
	bool AllowDuplicates : 1;  // 0x68(0x1)
	char pad_105_1 : 7;  // 0x69(0x1)
	bool ShouldFilterItemsByZone : 1;  // 0x69(0x1)
	char pad_106[2];  // 0x6A(0x2)
	float InitialDamage;  // 0x6C(0x4)
	float RandomDamage;  // 0x70(0x4)
	float InitialUsage;  // 0x74(0x4)
	float RandomUsage;  // 0x78(0x4)
	char pad_124[4];  // 0x7C(0x4)
	struct TArray<struct TSoftClassPtr<UObject>> PostSpawnActions;  // 0x80(0x10)

}; 



// Class ConZ.BuriableItemComponentState
// Size: 0x50(Inherited: 0x40) 
struct UBuriableItemComponentState : public UItemComponentStateBase
{
	char pad_64_1 : 7;  // 0x40(0x1)
	bool IsBuried : 1;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)
	struct FDbIntegerId BurierUserId;  // 0x48(0x8)

}; 



// Class ConZ.GardenManager
// Size: 0x650(Inherited: 0x220) 
struct AGardenManager : public AActor
{
	char pad_544[16];  // 0x220(0x10)
	float NetRelevancyRadius;  // 0x230(0x4)
	float NearGardenDistance;  // 0x234(0x4)
	struct FPlantGrowthStageData _seedingStageData;  // 0x238(0x60)
	struct FPlantGrowthStageData _vegetatingStageData;  // 0x298(0x60)
	struct FPlantGrowthStageData _floweringStageData;  // 0x2F8(0x60)
	struct FPlantGrowthStageData _ripeningStageData;  // 0x358(0x60)
	struct FInt32Interval _gardenMinMaxSize;  // 0x3B8(0x8)
	char pad_960[96];  // 0x3C0(0x60)
	struct TArray<struct AGarden*> _gardens;  // 0x420(0x10)
	char pad_1072[48];  // 0x430(0x30)
	float _updateTimestepSeconds;  // 0x460(0x4)
	uint32_t _minUpdateBatchCount;  // 0x464(0x4)
	float _dataSampleFadeSeconds;  // 0x468(0x4)
	uint32_t _heightDataSampleCount;  // 0x46C(0x4)
	struct FFloatInterval _pestsDiseasesCheckTimeHours;  // 0x470(0x8)
	struct FFloatInterval _weedCheckTimeHours;  // 0x478(0x8)
	float _pestsDiseasesGrowthTimeHours;  // 0x480(0x4)
	float _weedGrowthTimeHours;  // 0x484(0x4)
	float _pestsDiseasesSpreadTimeHours;  // 0x488(0x4)
	float _weedSpreadTimeHours;  // 0x48C(0x4)
	struct FVector2D _pestsDiseasesSpreadScaleThreshold;  // 0x490(0x8)
	struct FVector2D _weedSpreadScaleThreshold;  // 0x498(0x8)
	float _maxWaterLitersPerSlot;  // 0x4A0(0x4)
	float _maxWaterLitersFromRainPerSlot;  // 0x4A4(0x4)
	struct UMaterialParameterCollection* _mainMPC;  // 0x4A8(0x8)
	struct UMaterialParameterCollection* _gardenMPC;  // 0x4B0(0x8)
	struct TArray<struct FStaticMeshMaterialPair> _gardenEdgeMesh;  // 0x4B8(0x10)
	float _gardenEdgeVerticalOffset;  // 0x4C8(0x4)
	float _gardenEdgeHorizontalOffset;  // 0x4CC(0x4)
	struct TArray<struct FStaticMeshMaterialPair> _gardenSoilMesh;  // 0x4D0(0x10)
	float _gardenSoilVerticalOffset;  // 0x4E0(0x4)
	char pad_1252[4];  // 0x4E4(0x4)
	struct FStaticMeshMaterialPair _cubeCollisionMesh;  // 0x4E8(0x18)
	struct TArray<struct FStaticMeshMaterialPair> _weedMesh;  // 0x500(0x10)
	float _weedsVerticalOffset;  // 0x510(0x4)
	char pad_1300[4];  // 0x514(0x4)
	struct TArray<struct UPlantSpecies*> _plantSpecies;  // 0x518(0x10)
	struct UFarmingSkill* _farmingSkillDataAsset;  // 0x528(0x8)
	struct TMap<struct FStaticMeshMaterialPair, struct UIndexedHierarchicalInstancedStaticMeshComponent*> _hismcMap;  // 0x530(0x50)
	char pad_1408_1 : 7;  // 0x580(0x1)
	bool _showPreplacement : 1;  // 0x580(0x1)
	char pad_1409[3];  // 0x581(0x3)
	float _databaseUpdateInterval;  // 0x584(0x4)
	struct UChoppingRecipeDataAsset* _destroyChoppingRecipeAsset;  // 0x588(0x8)
	float _prisonerInteractionDistance;  // 0x590(0x4)
	char pad_1428[188];  // 0x594(0xBC)

	void DebugPlantAPlantAtLookedLocation(struct UPlantSpecies* species); // Function ConZ.GardenManager.DebugPlantAPlantAtLookedLocation
	void DebugGenerateGardensInSquare(struct FVector Location, struct FIntPoint countXY, struct FVector2D distanceXY, struct FIntPoint MinSize, struct FIntPoint MaxSize); // Function ConZ.GardenManager.DebugGenerateGardensInSquare
	void DebugGenerateGardensInRadius(int32_t Count, struct FVector Location, float Spread, struct FIntPoint MinSize, struct FIntPoint MaxSize); // Function ConZ.GardenManager.DebugGenerateGardensInRadius
	void DebugAddWaterToPlantAtLookedLocation(float Amount); // Function ConZ.GardenManager.DebugAddWaterToPlantAtLookedLocation
	void ClearAllMeshInstances(); // Function ConZ.GardenManager.ClearAllMeshInstances
}; 



// Class ConZ.BuriableChestItemComponentState
// Size: 0x58(Inherited: 0x50) 
struct UBuriableChestItemComponentState : public UBuriableItemComponentState
{
	float StoredAutoDestructTime;  // 0x50(0x4)
	char pad_84[4];  // 0x54(0x4)

}; 



// Class ConZ.PrisonerUIData
// Size: 0x808(Inherited: 0x28) 
struct UPrisonerUIData : public UObject
{
	struct FText _attributeDescriptions[54];  // 0x28(0x7E0)

}; 



// Class ConZ.CustomZoneSettingsRegionDetails
// Size: 0x368(Inherited: 0x260) 
struct UCustomZoneSettingsRegionDetails : public UUserWidget
{
	char pad_608[80];  // 0x260(0x50)
	struct UEditableText* _name;  // 0x2B0(0x8)
	struct UButton* _buttonRestore;  // 0x2B8(0x8)
	struct UCarouselWithLabel* _shape;  // 0x2C0(0x8)
	struct USpinBox* _locationX;  // 0x2C8(0x8)
	struct USpinBox* _locationY;  // 0x2D0(0x8)
	struct UTextBlock* _textSize;  // 0x2D8(0x8)
	struct USpinBox* _sizeX;  // 0x2E0(0x8)
	struct USpinBox* _sizeY;  // 0x2E8(0x8)
	struct UTextBlock* _textConfiguration;  // 0x2F0(0x8)
	struct UButton* _buttonOpenConfiguration;  // 0x2F8(0x8)
	struct UButton* _buttonNextConfiguration;  // 0x300(0x8)
	struct UButton* _buttonPreviousConfiguration;  // 0x308(0x8)
	struct UVerticalBox* _eventDisplayContainer;  // 0x310(0x8)
	UCustomZoneSettingsEventDisplay* _eventDisplayClass;  // 0x318(0x8)
	char pad_800[72];  // 0x320(0x48)

	void OpenConfiguration(); // Function ConZ.CustomZoneSettingsRegionDetails.OpenConfiguration
	void IncrementConfiguration(); // Function ConZ.CustomZoneSettingsRegionDetails.IncrementConfiguration
	void HandleSizeChange(float Value, char ETextCommit CommitMethod); // Function ConZ.CustomZoneSettingsRegionDetails.HandleSizeChange
	void HandleShapeChange(int32_t oldValue, int32_t NewValue, struct UWidget* Source, uint8_t  changeSource); // Function ConZ.CustomZoneSettingsRegionDetails.HandleShapeChange
	void HandleRestoreClicked(); // Function ConZ.CustomZoneSettingsRegionDetails.HandleRestoreClicked
	void HandleNameChange(struct FText& Text, char ETextCommit CommitMethod); // Function ConZ.CustomZoneSettingsRegionDetails.HandleNameChange
	void HandleLocationChange(float Value, char ETextCommit CommitMethod); // Function ConZ.CustomZoneSettingsRegionDetails.HandleLocationChange
	void DecrementConfiguration(); // Function ConZ.CustomZoneSettingsRegionDetails.DecrementConfiguration
}; 



// Class ConZ.BurnDamageType
// Size: 0x40(Inherited: 0x40) 
struct UBurnDamageType : public UDamageType
{

}; 



// Class ConZ.PrisonerActionExtinguishItemDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionExtinguishItemDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.MetabolismSkillProgressBar
// Size: 0x2B0(Inherited: 0x260) 
struct UMetabolismSkillProgressBar : public UUserWidget
{
	struct TArray<struct FSlateBrush> SkillRankIcons;  // 0x260(0x10)
	struct FText SkillTitle;  // 0x270(0x18)
	char pad_648[16];  // 0x288(0x10)
	struct UImage* _skillRankIcon;  // 0x298(0x8)
	struct UMetabolismAdvancedProgressBar* _apb_SkillProgress;  // 0x2A0(0x8)
	USkill* _skillClass;  // 0x2A8(0x8)

	struct UWidget* GetToolTipWidget(); // Function ConZ.MetabolismSkillProgressBar.GetToolTipWidget
}; 



// Class ConZ.ConZGameInstance
// Size: 0x4E8(Inherited: 0x1A8) 
struct UConZGameInstance : public UGameInstance
{
	struct FCommonMaps CommonMaps;  // 0x1A8(0x78)
	struct FCharacterCreationMenuContext CharacterCreationMenuContext;  // 0x220(0x30)
	char pad_592_1 : 7;  // 0x250(0x1)
	bool NetworkFailed : 1;  // 0x250(0x1)
	char pad_593_1 : 7;  // 0x251(0x1)
	bool WasKickedFromGameSession : 1;  // 0x251(0x1)
	char pad_594[22];  // 0x252(0x16)
	struct UGameplayLog* GameplayLogLogin;  // 0x268(0x8)
	struct UGameplayLog* GameplayLogAdmin;  // 0x270(0x8)
	struct UGameplayLog* GameplayLogEventKill;  // 0x278(0x8)
	struct UGameplayLog* GameplayLogKill;  // 0x280(0x8)
	struct UGameplayLog* GameplayLogViolations;  // 0x288(0x8)
	struct UGameplayLog* GameplayLogChat;  // 0x290(0x8)
	struct UGameplayLog* GameplayLogEconomy;  // 0x298(0x8)
	struct UGameplayLog* GameplayLogMiscellanious;  // 0x2A0(0x8)
	struct UGameplayLog* GameplayLogFamePoints;  // 0x2A8(0x8)
	char pad_688[56];  // 0x2B0(0x38)
	struct TMap<uint32_t, struct UDbConnection*> _databaseConnections;  // 0x2E8(0x50)
	char pad_824[56];  // 0x338(0x38)
	struct UDedicatedServerRequest* _dedicatedServerRequest;  // 0x370(0x8)
	struct UUserManager* _userManager;  // 0x378(0x8)
	struct UUser* _currentUser;  // 0x380(0x8)
	struct UUserProfile* _currentUserProfile;  // 0x388(0x8)
	UEntitySystem* _entitySystemClass;  // 0x390(0x8)
	struct UEntitySystem* _entitySystem;  // 0x398(0x8)
	char pad_928[80];  // 0x3A0(0x50)
	struct UTexture2D* _loadingScreenTexture;  // 0x3F0(0x8)
	struct ULoadingScreen* _loadingScreen;  // 0x3F8(0x8)
	char pad_1024[136];  // 0x400(0x88)
	struct UAdminCommandRegistry* _adminCommandRegistry;  // 0x488(0x8)
	char pad_1168[88];  // 0x490(0x58)

	void StartSingleplayerGame(); // Function ConZ.ConZGameInstance.StartSingleplayerGame
	void StartMultiplayerGame(struct FString Ip, int32_t GameplayPort, int32_t ResponsePort, struct FString AuthToken); // Function ConZ.ConZGameInstance.StartMultiplayerGame
	void SetPlayAsDrone(bool Value); // Function ConZ.ConZGameInstance.SetPlayAsDrone
	void RemoveLoadingWidget(); // Function ConZ.ConZGameInstance.RemoveLoadingWidget
	void OnPreLoadMap(struct FString mapName); // Function ConZ.ConZGameInstance.OnPreLoadMap
	void OnPostLoadMap(struct UWorld* loadedWorld); // Function ConZ.ConZGameInstance.OnPostLoadMap
	void OnPlaySessionEnd(bool quit); // Function ConZ.ConZGameInstance.OnPlaySessionEnd
	bool IsTransitioningMap(); // Function ConZ.ConZGameInstance.IsTransitioningMap
	void HandleNetworkFailure(struct UWorld* World, struct UNetDriver* NetDriver, char ENetworkFailure FailureType, struct FString errorString); // Function ConZ.ConZGameInstance.HandleNetworkFailure
	bool GetPlayAsDrone(); // Function ConZ.ConZGameInstance.GetPlayAsDrone
	struct FText GetLastNetworkError(); // Function ConZ.ConZGameInstance.GetLastNetworkError
	struct UDedicatedServerRequest* GetDedicatedServerRequest(); // Function ConZ.ConZGameInstance.GetDedicatedServerRequest
	struct UDbConnection* GetDatabaseConnection(); // Function ConZ.ConZGameInstance.GetDatabaseConnection
	struct UUserProfile* GetCurrentUserProfile(); // Function ConZ.ConZGameInstance.GetCurrentUserProfile
	struct UUser* GetCurrentUser(); // Function ConZ.ConZGameInstance.GetCurrentUser
	void AddLoadingWidget(struct ULoadingScreen* Widget); // Function ConZ.ConZGameInstance.AddLoadingWidget
	void AddDefaultLoadingWidget(); // Function ConZ.ConZGameInstance.AddDefaultLoadingWidget
}; 



// Class ConZ.BuryData
// Size: 0x88(Inherited: 0x30) 
struct UBuryData : public UDataAsset
{
	struct TMap<char EPhysicalSurface, struct FBuryMaterialData> AllowedBuryMaterials;  // 0x30(0x50)
	float StaminaDrain;  // 0x80(0x4)
	float RecoveredStaminaThreshold;  // 0x84(0x4)

}; 



// Class ConZ.ConstitutionSkill
// Size: 0xC8(Inherited: 0xB0) 
struct UConstitutionSkill : public USkill
{
	char pad_176[24];  // 0xB0(0x18)

}; 



// Class ConZ.CookingRecipeCategoryPanel
// Size: 0x150(Inherited: 0x148) 
struct UCookingRecipeCategoryPanel : public UWrapBox
{
	struct FGameplayTag _navigationTag;  // 0x148(0x8)

}; 



// Class ConZ.BuryToolItemTag
// Size: 0x60(Inherited: 0x30) 
struct UBuryToolItemTag : public UBaseItemTag
{
	char pad_48_1 : 7;  // 0x30(0x1)
	bool IsSmallSizedTool : 1;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	int32_t BuryItemUsage;  // 0x34(0x4)
	float BuryDurationModifier;  // 0x38(0x4)
	struct FName BladeTipSocket;  // 0x3C(0x8)
	struct FName BladeCenterSocket;  // 0x44(0x8)
	float ShortToolMinBuryTime;  // 0x4C(0x4)
	float ShortToolMaxBuryTime;  // 0x50(0x4)
	float LongToolMinBuryTime;  // 0x54(0x4)
	float LongToolMaxBuryTime;  // 0x58(0x4)
	char pad_92[4];  // 0x5C(0x4)

}; 



// Class ConZ.C4PartTag
// Size: 0x30(Inherited: 0x30) 
struct UC4PartTag : public UBaseItemTag
{

}; 



// Class ConZ.CamouflageSkill
// Size: 0x1B8(Inherited: 0xB0) 
struct UCamouflageSkill : public UIntelligenceSkill
{
	float _activationTime;  // 0xB0(0x4)
	float _standingPenalty;  // 0xB4(0x4)
	float _crouchingPenalty;  // 0xB8(0x4)
	float _pronePenalty;  // 0xBC(0x4)
	float _slowMovingStandingPenalty;  // 0xC0(0x4)
	float _slowMovingCrouchingPenalty;  // 0xC4(0x4)
	float _slowMovingPronePenalty;  // 0xC8(0x4)
	float _mediumMovingStandingPenalty;  // 0xCC(0x4)
	float _mediumMovingCrouchingPenalty;  // 0xD0(0x4)
	float _fastMovingStandingPenalty;  // 0xD4(0x4)
	float _standingAIPerceptionMultiplier;  // 0xD8(0x4)
	float _crouchingAIPerceptionMultiplier;  // 0xDC(0x4)
	float _proneAIPerceptionMultiplier;  // 0xE0(0x4)
	float _maxRelevantAIPerceptionRadius;  // 0xE4(0x4)
	char pad_232[108];  // 0xE8(0x6C)
	struct FCamouflageSkillExperienceAwards NoSkillExperienceAwards;  // 0x154(0x4)
	struct FCamouflageSkillExperienceAwards BasicSkillExperienceAwards;  // 0x158(0x4)
	struct FCamouflageSkillExperienceAwards MediumSkillExperienceAwards;  // 0x15C(0x4)
	struct FCamouflageSkillExperienceAwards AdvancedSkillExperienceAwards;  // 0x160(0x4)
	struct FCamouflageSkillExperienceAwards AboveAdvancedSkillExperienceAwards;  // 0x164(0x4)
	struct FCamouflageSkillParametersPerSkillLevel NoSkillParameters;  // 0x168(0x10)
	struct FCamouflageSkillParametersPerSkillLevel BasicSkillParameters;  // 0x178(0x10)
	struct FCamouflageSkillParametersPerSkillLevel MediumSkillParameters;  // 0x188(0x10)
	struct FCamouflageSkillParametersPerSkillLevel AdvancedSkillParameters;  // 0x198(0x10)
	struct FCamouflageSkillParametersPerSkillLevel AboveAdvancedSkillParameters;  // 0x1A8(0x10)

	float GetHidePenaltyForCharacter(struct AConZCharacter* Character); // Function ConZ.CamouflageSkill.GetHidePenaltyForCharacter
}; 



// Class ConZ.CargoDropContainer
// Size: 0x310(Inherited: 0x220) 
struct ACargoDropContainer : public AActor
{
	float DelayDuration;  // 0x220(0x4)
	float FallDuration;  // 0x224(0x4)
	float DetonationTime;  // 0x228(0x4)
	float DetonationCountdown;  // 0x22C(0x4)
	struct UAkAudioEvent* LandSound;  // 0x230(0x8)
	struct UAkAudioEvent* WarningSound;  // 0x238(0x8)
	struct UAkAudioEvent* DetonationSound;  // 0x240(0x8)
	struct UParticleSystem* DetonationParticles;  // 0x248(0x8)
	UMatineeCameraShake* CameraShakeClass;  // 0x250(0x8)
	struct TArray<UItemSpawnerPreset*> MajorSpawnerOptions;  // 0x258(0x10)
	struct TArray<UItemSpawnerPreset2*> MajorSpawnerPresetOptions;  // 0x268(0x10)
	struct TArray<struct FCargoDropSpawnerPreset> MinorSpawnerOptions;  // 0x278(0x10)
	struct UAkAudioEvent* UnlockLockersAudioEvent;  // 0x288(0x8)
	struct UStaticMeshComponent* _parachuteMesh;  // 0x290(0x8)
	struct UParticleSystemComponent* _flareParticles;  // 0x298(0x8)
	struct UParticleSystemComponent* _dustParticles;  // 0x2A0(0x8)
	struct UKillBoxTimerWidget* _timerWidget;  // 0x2A8(0x8)
	struct UDiegeticLockState* _lockStateWidget;  // 0x2B0(0x8)
	char pad_696[16];  // 0x2B8(0x10)
	struct FVector _endLocation;  // 0x2C8(0xC)
	struct FRotator _rotation;  // 0x2D4(0xC)
	char pad_736_1 : 7;  // 0x2E0(0x1)
	bool _landed : 1;  // 0x2E0(0x1)
	char pad_737[3];  // 0x2E1(0x3)
	float _fallingSpeed;  // 0x2E4(0x4)
	int32_t _timeRemaining;  // 0x2E8(0x4)
	char pad_748_1 : 7;  // 0x2EC(0x1)
	bool _flareParticlesEnabled : 1;  // 0x2EC(0x1)
	char pad_749[3];  // 0x2ED(0x3)
	struct TArray<struct UStaticMeshComponent*> _cargoLockers;  // 0x2F0(0x10)
	char pad_768[16];  // 0x300(0x10)

	void SetTimerWidget(struct UKillBoxTimerWidget* timerWidget); // Function ConZ.CargoDropContainer.SetTimerWidget
	void SetLockStateWidget(struct UDiegeticLockState* Value); // Function ConZ.CargoDropContainer.SetLockStateWidget
	void OnWarning(); // Function ConZ.CargoDropContainer.OnWarning
	void OnTouchdown(); // Function ConZ.CargoDropContainer.OnTouchdown
	void OnRep_FlareParticlesEnabled(); // Function ConZ.CargoDropContainer.OnRep_FlareParticlesEnabled
	void OnDetonate(); // Function ConZ.CargoDropContainer.OnDetonate
	void Multicast_StartDetonation(); // Function ConZ.CargoDropContainer.Multicast_StartDetonation
	void Multicast_Detonate(); // Function ConZ.CargoDropContainer.Multicast_Detonate
	void DropToLocation(struct FVector EndLocation, float fallingTime); // Function ConZ.CargoDropContainer.DropToLocation
	void AddCargoLocker(struct UStaticMeshComponent* cargoLocker); // Function ConZ.CargoDropContainer.AddCargoLocker
}; 



// Class ConZ.WeaponRecoilGroup
// Size: 0x40(Inherited: 0x30) 
struct UWeaponRecoilGroup : public UDataAsset
{
	float Up;  // 0x30(0x4)
	float Down;  // 0x34(0x4)
	float Left;  // 0x38(0x4)
	float Right;  // 0x3C(0x4)

}; 



// Class ConZ.WorldEvent
// Size: 0x248(Inherited: 0x220) 
struct AWorldEvent : public AActor
{
	struct FVector Location;  // 0x220(0xC)
	float Radius;  // 0x22C(0x4)
	struct UTexture* IconTexture;  // 0x230(0x8)
	char pad_568[16];  // 0x238(0x10)

	void StartEvent(); // Function ConZ.WorldEvent.StartEvent
}; 



// Class ConZ.Carousel
// Size: 0x1DF0(Inherited: 0x260) 
struct UCarousel : public UUserWidget
{
	char pad_608[32];  // 0x260(0x20)
	struct UTextBlock* _selectionDisplay;  // 0x280(0x8)
	struct UButton* _leftArrow;  // 0x288(0x8)
	struct UButton* _rightArrow;  // 0x290(0x8)
	struct TArray<struct FText> _carouselValues;  // 0x298(0x10)
	char pad_680_1 : 7;  // 0x2A8(0x1)
	bool _canWrap : 1;  // 0x2A8(0x1)
	char pad_681[7];  // 0x2A9(0x7)
	struct FCarouselStyle _selectedAndFocusedCarouselStyle;  // 0x2B0(0x570)
	struct FCarouselStyle _selectedAndUnfocusedCarouselStyle;  // 0x820(0x570)
	struct FCarouselStyle _unselectedCarouselStyle;  // 0xD90(0x570)
	struct FCarouselStyle _highlightedCarouselStyle;  // 0x1300(0x570)
	struct FCarouselStyle _disabledCarouselStyle;  // 0x1870(0x570)
	char pad_7648_1 : 7;  // 0x1DE0(0x1)
	bool _controlWithMouseWheel : 1;  // 0x1DE0(0x1)
	char pad_7649_1 : 7;  // 0x1DE1(0x1)
	bool _controlWithKeyboard : 1;  // 0x1DE1(0x1)
	char pad_7650[14];  // 0x1DE2(0xE)

	void ClickRight(); // Function ConZ.Carousel.ClickRight
	void ClickLeft(); // Function ConZ.Carousel.ClickLeft
}; 



// Class ConZ.DcxBikeAnimInstance
// Size: 0xAA0(Inherited: 0xA50) 
struct UDcxBikeAnimInstance : public UDcxVehicleAnimInstance
{
	float RPM;  // 0xA48(0x4)
	float Speed;  // 0xA4C(0x4)
	float SpeedKph;  // 0xA50(0x4)
	float SteerRotation;  // 0xA54(0x4)
	float SteerAmount;  // 0xA58(0x4)
	float ThrottleAmount;  // 0xA5C(0x4)
	float BrakeAmount;  // 0xA60(0x4)
	struct FRotator FrontWheelRotator;  // 0xA64(0xC)
	struct FRotator RearWheelRotator;  // 0xA70(0xC)
	struct FRotator TransmissionRotator;  // 0xA7C(0xC)
	float FrontSuspensionOffset;  // 0xA88(0x4)
	float RearSuspensionRotation;  // 0xA8C(0x4)
	struct FVector MeshLocation;  // 0xA90(0xC)
	char pad_2724_1 : 7;  // 0xAA4(0x1)
	bool IsMounteeDriver : 1;  // 0xA9C(0x1)

}; 



// Class ConZ.ChainsawState
// Size: 0x110(Inherited: 0x100) 
struct UChainsawState : public UWeaponItemState
{
	float CurrentFuelAmount;  // 0x100(0x4)
	char pad_260[12];  // 0x104(0xC)

}; 



// Class ConZ.WeaponItem
// Size: 0x920(Inherited: 0x910) 
struct AWeaponItem : public AItem
{
	uint32_t MaxRange;  // 0x910(0x4)
	uint32_t ROF;  // 0x914(0x4)
	char pad_2328[8];  // 0x918(0x8)

}; 



// Class ConZ.GameEventLeftPanel
// Size: 0x2A8(Inherited: 0x260) 
struct UGameEventLeftPanel : public UUserWidget
{
	struct UComboBoxWrapper* AllEventsComboBox;  // 0x260(0x8)
	struct UOverlay* EventArea;  // 0x268(0x8)
	struct UVerticalBox* VerticalBox_5;  // 0x270(0x8)
	struct TArray<struct AGameEventBase*> _allEvents;  // 0x278(0x10)
	struct TArray<struct AGameEventBase*> _currentEvents;  // 0x288(0x10)
	struct TArray<struct AGameEventBase*> _nextEvents;  // 0x298(0x10)

	void OnEventComboBoxSelectionChanged(struct FString SelectedItem, char ESelectInfo SelectionType); // Function ConZ.GameEventLeftPanel.OnEventComboBoxSelectionChanged
}; 



// Class ConZ.Chainsaw
// Size: 0x1D80(Inherited: 0x920) 
struct AChainsaw : public AWeaponItem
{
	struct USkeletalMeshComponent* SkeletalMesh;  // 0x920(0x8)
	struct FCharacterAndItemAnimation AnimationsStartEngine;  // 0x928(0x10)
	struct FCharacterAndItemAnimation AnimationsCheckFuelStatus;  // 0x938(0x10)
	struct UBaseItemTag* ChoppingToolItemTag;  // 0x948(0x8)
	struct UAkAudioEvent* TurnOnAudioEvent;  // 0x950(0x8)
	struct UAkAudioEvent* TurnOffAudioEvent;  // 0x958(0x8)
	UGameResourceType* _fuelType;  // 0x960(0x8)
	struct FGameplayTagContainer _inFuelingSocketTypes;  // 0x968(0x20)
	float _maxFuelAmount;  // 0x988(0x4)
	float _initialFuelAmount;  // 0x98C(0x4)
	float _fuelUsagePerHour;  // 0x990(0x4)
	float _fuelUsagePerHourMultiplierWhenActive;  // 0x994(0x4)
	float _fuelFillingDurationPerAmountFilled;  // 0x998(0x4)
	float _fuelFillingExperiencePerAmount;  // 0x99C(0x4)
	struct UAnimMontage* _fuelFillingMontage;  // 0x9A0(0x8)
	struct UMeleeSkillAnimationsPreset* _meleeSkillAnimationsPresetWhenTurnedOff;  // 0x9A8(0x8)
	struct UMeleeSkillAnimationsPreset* _meleeSkillAnimationsPresetWhenTurnedOn;  // 0x9B0(0x8)
	struct UAkAudioEvent* _fuelStartFillingAudioEvent;  // 0x9B8(0x8)
	struct UAkAudioEvent* _fuelStopFillingAudioEvent;  // 0x9C0(0x8)
	float _noiseLoudnessWhileStarting;  // 0x9C8(0x4)
	float _noiseLoudnessWhileRunning;  // 0x9CC(0x4)
	float _noiseLoudnessUpdateFrequencyPerHour;  // 0x9D0(0x4)
	struct FName _runningNoiseTag;  // 0x9D4(0x8)
	float _currentFuelAmount;  // 0x9DC(0x4)
	char pad_2528_1 : 7;  // 0x9E0(0x1)
	bool _turnedOn : 1;  // 0x9E0(0x1)
	char pad_2529[5023];  // 0x9E1(0x139F)

	void SetUseFuelUsagePerHourMultiplierWhenActive(bool Value); // Function ConZ.Chainsaw.SetUseFuelUsagePerHourMultiplierWhenActive
	void Server_SetUseFuelUsagePerHourMultiplierWhenActive(bool Value); // Function ConZ.Chainsaw.Server_SetUseFuelUsagePerHourMultiplierWhenActive
	void Server_SetTurnedOn(bool Value); // Function ConZ.Chainsaw.Server_SetTurnedOn
	void OnRep_TurnedOn(bool oldValue); // Function ConZ.Chainsaw.OnRep_TurnedOn
	bool GetUseFuelUsagePerHourMultiplierWhenActive(); // Function ConZ.Chainsaw.GetUseFuelUsagePerHourMultiplierWhenActive
}; 



// Class ConZ.ItemSpawnerPreset
// Size: 0x98(Inherited: 0x28) 
struct UItemSpawnerPreset : public UObject
{
	struct FItemSpawnerData SpawnerData;  // 0x28(0x70)

}; 



// Class ConZ.Weapon
// Size: 0x2F60(Inherited: 0x920) 
struct AWeapon : public AWeaponItem
{
	struct FMulticastInlineDelegate AttachmentAdded;  // 0x918(0x10)
	struct FMulticastInlineDelegate AttachmentRemoved;  // 0x928(0x10)
	char pad_2368[64];  // 0x940(0x40)
	struct USkeletalMeshComponent* SkeletalMesh;  // 0x980(0x8)
	uint8_t  WeaponFiringStateType;  // 0x988(0x1)
	char pad_2441[7];  // 0x989(0x7)
	struct UWeaponStateFiring* TempWeaponStateFiringAutomatic;  // 0x990(0x8)
	struct UWeaponStateFiring* TempWeaponStateFiringSemiAutomatic;  // 0x998(0x8)
	struct UWeaponStateFiring* TempWeaponStateFiringManual;  // 0x9A0(0x8)
	struct UWeaponStateFiring* TempWeaponStateFiringBurst;  // 0x9A8(0x8)
	struct UWeaponStateActiveManualFiring* TempWeaponStateActiveManualFiring;  // 0x9B0(0x8)
	struct UWeaponStateFiring* FiringState;  // 0x9B8(0x8)
	struct TArray<uint8_t > SupportedFiringModes;  // 0x9C0(0x10)
	struct TArray<struct UStaticMeshComponent*> CartridgeMeshComponents;  // 0x9D0(0x10)
	struct TArray<UWeaponActionReloadSequence*> ReloadActionSequenceClasses;  // 0x9E0(0x10)
	struct TArray<UWeaponActionUnloadAmmoSequence*> UnloadAmmoActionSequenceClasses;  // 0x9F0(0x10)
	struct TArray<UWeaponActionCheckAmmoSequence*> CheckAmmoActionSequenceClasses;  // 0xA00(0x10)
	struct TArray<struct UWeaponActionReloadSequence*> ReloadActionSequences;  // 0xA10(0x10)
	struct TArray<struct UWeaponActionClearMalfunctionSequence*> ClearMalfunctionActionSequences;  // 0xA20(0x10)
	struct TArray<struct UWeaponActionUnloadAmmoSequence*> UnloadAmmoActionSequences;  // 0xA30(0x10)
	struct TArray<struct UWeaponActionCheckAmmoSequence*> CheckAmmoActionSequences;  // 0xA40(0x10)
	struct FGameplayTagContainer AmmunitionTags;  // 0xA50(0x20)
	AAmmunitionItem* DefaultAmmunitionItemClass;  // 0xA70(0x8)
	int32_t RequiredAmmoForShot;  // 0xA78(0x4)
	int32_t MaxLoadedAmmo;  // 0xA7C(0x4)
	int32_t EventMaxAmmo;  // 0xA80(0x4)
	int32_t InitialAmmo;  // 0xA84(0x4)
	int32_t InternalMagazineCapacity;  // 0xA88(0x4)
	char pad_2700_1 : 7;  // 0xA8C(0x1)
	bool UseChamberAsInternalMagazine : 1;  // 0xA8C(0x1)
	char pad_2701[3];  // 0xA8D(0x3)
	int32_t BurstShotsCount;  // 0xA90(0x4)
	char pad_2708_1 : 7;  // 0xA94(0x1)
	bool IgnoreProceduralDownTheSightFiringAnimation : 1;  // 0xA94(0x1)
	char pad_2709[3];  // 0xA95(0x3)
	struct UAnimMontage* FireAnimation;  // 0xA98(0x8)
	struct UAnimMontage* FireAnimationLastRound;  // 0xAA0(0x8)
	struct UAnimMontage* FireAnimationBody;  // 0xAA8(0x8)
	struct UAnimMontage* FirstPersonFireAnimationBody;  // 0xAB0(0x8)
	struct UAnimMontage* FireAutomaticAnimationBody;  // 0xAB8(0x8)
	struct FBodyWeaponAnimation BodyWeaponAnimationChamber;  // 0xAC0(0x10)
	struct UAnimMontage* CheckFiringModeAnimationBody;  // 0xAD0(0x8)
	struct UAnimMontage* ChangeFiringModeAnimationBody;  // 0xAD8(0x8)
	struct TMap<AWeaponAttachment*, struct FWeaponAttachmentAnimations> AttachmentsAnimations;  // 0xAE0(0x50)
	struct FName MuzzleSocketName;  // 0xB30(0x8)
	struct FName GripCorrectionSocketName;  // 0xB38(0x8)
	struct FName AimingDownTheSightsCenterSocketName;  // 0xB40(0x8)
	struct FName EjectCasingSocketName;  // 0xB48(0x8)
	char pad_2896_1 : 7;  // 0xB50(0x1)
	bool IgnoreSupportingHandIK : 1;  // 0xB50(0x1)
	char pad_2897[3];  // 0xB51(0x3)
	struct FName SupportingHandIKSocketName;  // 0xB54(0x8)
	struct FVector SupportingHandIKLocation;  // 0xB5C(0xC)
	struct FVector AimingDownTheSightsLocationOffset;  // 0xB68(0xC)
	char pad_2932[12];  // 0xB74(0xC)
	struct FTransform HolsteredOnPrisonerLeftOffset;  // 0xB80(0x30)
	struct FTransform HolsteredOnPrisonerRightOffset;  // 0xBB0(0x30)
	char pad_3040_1 : 7;  // 0xBE0(0x1)
	bool UseWeaponFOVWhileScoping : 1;  // 0xBE0(0x1)
	char pad_3041[3];  // 0xBE1(0x3)
	float WeaponFOVWhileScoping;  // 0xBE4(0x4)
	struct FVector WeaponCameraOffsetWhileScoping;  // 0xBE8(0xC)
	char pad_3060[4];  // 0xBF4(0x4)
	struct FRuntimeFloatCurve OffsetPerAspectRatioWhileScoping;  // 0xBF8(0x88)
	char pad_3200_1 : 7;  // 0xC80(0x1)
	bool IgnoreZeroRangeChange : 1;  // 0xC80(0x1)
	char pad_3201[3];  // 0xC81(0x3)
	int32_t ZeroRange;  // 0xC84(0x4)
	int32_t ZeroRangeStep;  // 0xC88(0x4)
	int32_t ZeroRangeMax;  // 0xC8C(0x4)
	struct UProjectileImpactEffects* InstantHitImpactEffects;  // 0xC90(0x8)
	float FieldOfView;  // 0xC98(0x4)
	float DepthOfFieldFocalDistance;  // 0xC9C(0x4)
	float DepthOfFieldFstop;  // 0xCA0(0x4)
	float ObstaclesDetectionOffset;  // 0xCA4(0x4)
	char pad_3240_1 : 7;  // 0xCA8(0x1)
	bool UseFiringModeBoneRotation : 1;  // 0xCA8(0x1)
	char pad_3241[3];  // 0xCA9(0x3)
	struct FRotator FiringModeBoneRotations[3];  // 0xCAC(0x24)
	struct FPostProcessSettings PostProcessSettings;  // 0xCD0(0x560)
	struct UAnimSequenceBase* RelaxedGripCorrectionAnimationPose[4];  // 0x1230(0x20)
	struct UAnimSequenceBase* AimingHipAnimationPose[4];  // 0x1250(0x20)
	struct UAnimSequenceBase* AimingDownTheSightsAnimationPose[4];  // 0x1270(0x20)
	struct UAnimSequenceBase* AimingDownTheSightsStillAnimationPose[4];  // 0x1290(0x20)
	struct UAnimSequenceBase* AimingDownTheSightsWalkingAnimationPose[4];  // 0x12B0(0x20)
	struct UAnimSequenceBase* AimingDownTheSightsLimpingWalkingAnimationPose[4];  // 0x12D0(0x20)
	struct UBlendSpace* WeaponAimOffsets[7];  // 0x12F0(0x38)
	struct UBlendSpace1D* AimingDownTheSightsZeroRangeBlendSpace;  // 0x1328(0x8)
	uint8_t  WeaponCategory;  // 0x1330(0x1)
	char pad_4913_1 : 7;  // 0x1331(0x1)
	bool IgnoreAimingSpread : 1;  // 0x1331(0x1)
	char pad_4914_1 : 7;  // 0x1332(0x1)
	bool UseCustomWeaponSpreadData : 1;  // 0x1332(0x1)
	char pad_4915[1];  // 0x1333(0x1)
	struct FWeaponSpreadData WeaponSpreadData;  // 0x1334(0x40)
	char pad_4980_1 : 7;  // 0x1374(0x1)
	bool UseCustomWeaponViewKickData : 1;  // 0x1374(0x1)
	char pad_4981[3];  // 0x1375(0x3)
	struct FWeaponViewKickData WeaponViewKickData;  // 0x1378(0x18)
	float ViewKickMultiplier;  // 0x1390(0x4)
	float MaxRecoilOffset;  // 0x1394(0x4)
	float RecoilRecoverySpeed;  // 0x1398(0x4)
	float MuzzleEffectsScaleDistanceStart;  // 0x139C(0x4)
	float MuzzleEffectsScaleDistanceRange;  // 0x13A0(0x4)
	float MuzzleEffectsScaleByDistanceFactor;  // 0x13A4(0x4)
	float ChamberBulletDelay;  // 0x13A8(0x4)
	char pad_5036_1 : 7;  // 0x13AC(0x1)
	bool ChamberBulletAutomatically : 1;  // 0x13AC(0x1)
	char pad_5037_1 : 7;  // 0x13AD(0x1)
	bool ChamberBulletWhenMagazineIsAttached : 1;  // 0x13AD(0x1)
	char pad_5038[2];  // 0x13AE(0x2)
	float DamagePerShot;  // 0x13B0(0x4)
	char pad_5044_1 : 7;  // 0x13B4(0x1)
	bool TestWeapon : 1;  // 0x13B4(0x1)
	char pad_5045[3];  // 0x13B5(0x3)
	struct TArray<struct FFireAnimationData> WornOutFiringAnimations;  // 0x13B8(0x10)
	char pad_5064_1 : 7;  // 0x13C8(0x1)
	bool CanBeInspectedWhenMalfunctioned : 1;  // 0x13C8(0x1)
	char pad_5065[7];  // 0x13C9(0x7)
	struct UAnimMontage* InspectModeAnimation;  // 0x13D0(0x8)
	char pad_5080_1 : 7;  // 0x13D8(0x1)
	bool UseCustomMalfunctionChances : 1;  // 0x13D8(0x1)
	char pad_5081[3];  // 0x13D9(0x3)
	struct FWeaponMalfunctionChances MalfunctionChances;  // 0x13DC(0x38)
	struct FName StovePipeSocketName;  // 0x1414(0x8)
	char pad_5148[4];  // 0x141C(0x4)
	struct UStaticMesh* StovePipeMesh;  // 0x1420(0x8)
	struct FName DoubleFeedSocketName;  // 0x1428(0x8)
	struct UStaticMesh* DoubleFeedMesh;  // 0x1430(0x8)
	char pad_5176_1 : 7;  // 0x1438(0x1)
	bool ShouldClearInspectModeWhenClearingMalfunction : 1;  // 0x1438(0x1)
	char pad_5177[7];  // 0x1439(0x7)
	struct TArray<UWeaponActionClearMalfunctionSequence*> ClearMalfunctionSequenceClasses;  // 0x1440(0x10)
	struct TMap<uint8_t , struct FWeaponMalfunctionData> MalfunctionsData;  // 0x1450(0x50)
	float DTSModeLerpDurationIn;  // 0x14A0(0x4)
	float DTSModeLerpDurationOut;  // 0x14A4(0x4)
	struct UCurveFloat* DownTheSightsModeLerpCurveOverride;  // 0x14A8(0x8)
	struct UWeaponState* _currentState;  // 0x14B0(0x8)
	struct UWeaponState* _activeState;  // 0x14B8(0x8)
	struct UWeaponStateEquipping* _equippingState;  // 0x14C0(0x8)
	struct UWeaponState* _unequippingStateDefault;  // 0x14C8(0x8)
	struct UWeaponState* _unequippingState;  // 0x14D0(0x8)
	struct UWeaponState* _inactiveState;  // 0x14D8(0x8)
	struct UWeaponState* _chamberBulletState;  // 0x14E0(0x8)
	struct UWeaponStateReload* _reloadState2;  // 0x14E8(0x8)
	struct UWeaponStateClearMalfunction* _clearMalfunctionState;  // 0x14F0(0x8)
	struct UWeaponStateUnloadAmmo* _unloadAmmoState;  // 0x14F8(0x8)
	struct UWeaponStateCheckAmmo* _checkAmmoState;  // 0x1500(0x8)
	uint8_t  _muzzleEffectsSpawnType;  // 0x1508(0x1)
	char pad_5385[7];  // 0x1509(0x7)
	struct UParticleSystem* _muzzlePS;  // 0x1510(0x8)
	struct UParticleSystem* _suppressorMuzzlePS;  // 0x1518(0x8)
	struct UParticleSystemComponent* _muzzlePSC;  // 0x1520(0x8)
	struct UParticleSystem* _smokeAfterShotFiredPS;  // 0x1528(0x8)
	struct UParticleSystemComponent* _smokeAfterShotFiredPSC;  // 0x1530(0x8)
	struct UParticleSystem* _ejectCasingPS;  // 0x1538(0x8)
	struct UParticleSystem* _ejectLiveRoundPS;  // 0x1540(0x8)
	struct APrisoner* _weaponOwner;  // 0x1548(0x8)
	struct TArray<struct FAmmunitionData> _loadedAmmoData;  // 0x1550(0x10)
	char pad_5472[2];  // 0x1560(0x2)
	char pad_5474_1 : 7;  // 0x1562(0x1)
	bool _shouldOverrideUseMuzzleDirectionForShooting : 1;  // 0x1562(0x1)
	char pad_5475_1 : 7;  // 0x1563(0x1)
	bool _useMuzzleDirectionForShootingOverride : 1;  // 0x1563(0x1)
	struct TWeakObjectPtr<AActor> _projectileTargetLocationOverride;  // 0x1564(0x8)
	char pad_5484[128];  // 0x156C(0x80)
	uint8_t  _firingMode;  // 0x15EC(0x1)
	char pad_5613[19];  // 0x15ED(0x13)
	struct TArray<struct AWeaponAttachment*> _weaponAttachmentsReplicated;  // 0x1600(0x10)
	char pad_5648[40];  // 0x1610(0x28)
	struct TArray<struct FAmmunitionData> _internalMagazineAmmoData;  // 0x1638(0x10)
	int32_t _usedAmmoCount;  // 0x1648(0x4)
	char pad_5708[1];  // 0x164C(0x1)
	char pad_5709_1 : 7;  // 0x164D(0x1)
	bool _shouldPlayChamberOpenedIdle : 1;  // 0x164D(0x1)
	char pad_5710[15];  // 0x164E(0xF)
	char pad_5725_1 : 7;  // 0x165D(0x1)
	bool _isInGameEvent : 1;  // 0x165D(0x1)
	char pad_5726[2];  // 0x165E(0x2)
	struct UAkAudioEvent* _fireSingleShotAudioEvent;  // 0x1660(0x8)
	struct UAkAudioEvent* _startAutoFireAudioEvent;  // 0x1668(0x8)
	struct UAkAudioEvent* _stopAutoFireAudioEvent;  // 0x1670(0x8)
	struct UAkAudioEvent* _suppressorFireSingleShotAudioEvent;  // 0x1678(0x8)
	struct UAkAudioEvent* _suppressorStartAutoFireAudioEvent;  // 0x1680(0x8)
	struct UAkAudioEvent* _suppressorStopAutoFireAudioEvent;  // 0x1688(0x8)
	struct UAkAudioEvent* _improvisedSuppressorFireSingleShotAudioEvent;  // 0x1690(0x8)
	struct UAkAudioEvent* _improvisedSuppressorStartAutoFireAudioEvent;  // 0x1698(0x8)
	struct UAkAudioEvent* _improvisedSuppressorStopAutoFireAudioEvent;  // 0x16A0(0x8)
	struct UAkAudioEvent* _noAmmoAudioEvent;  // 0x16A8(0x8)
	struct UAkAudioEvent* _dryFireUncockedAudioEvent;  // 0x16B0(0x8)
	struct UAkAudioEvent* _zeroRangeClickAudioEvent;  // 0x16B8(0x8)
	struct UAkAudioEvent* _changeFiringModeAudioEvent;  // 0x16C0(0x8)
	struct UAkAudioEvent* _onMalfunctionAudioEvent;  // 0x16C8(0x8)
	struct UAkAudioEvent* _switchADSStateAudioEvent;  // 0x16D0(0x8)
	struct UAkAudioEvent* _indoorSmallHearingDamageAudioEvent;  // 0x16D8(0x8)
	struct UAkAudioEvent* _indoorMediumHearingDamageAudioEvent;  // 0x16E0(0x8)
	struct UAkAudioEvent* _indoorLargeHearingDamageAudioEvent;  // 0x16E8(0x8)
	struct UAkAudioEvent* _outdoorLargeHearingDamageAudioEvent;  // 0x16F0(0x8)
	float _makeNoiseLoudness;  // 0x16F8(0x4)
	char pad_5884[16];  // 0x16FC(0x10)
	float _staminaDrainMultiplier;  // 0x170C(0x4)
	char pad_5904[12];  // 0x1710(0xC)
	uint8_t  _malfunction;  // 0x171C(0x1)
	uint8_t  _behaviourMode;  // 0x171D(0x1)
	char pad_5918[34];  // 0x171E(0x22)
	UObject* _loadedAmmunitionItemClass;  // 0x1740(0x8)
	char pad_5960[8];  // 0x1748(0x8)
	AProjectile* _loadedProjectileClass;  // 0x1750(0x8)
	AProjectile* _defaultProjectileClass;  // 0x1758(0x8)
	char pad_5984[12];  // 0x1760(0xC)
	float _totalControllerPitchAmountToAdd;  // 0x176C(0x4)
	float _controllerPitchAddTimeFrame;  // 0x1770(0x4)
	char pad_6004[6020];  // 0x1774(0x1784)
	struct FWeaponStateSyncData _ownerWeaponStateSyncData;  // 0x2EF8(0x48)
	char pad_12096[32];  // 0x2F40(0x20)

	void UpdateReloadData(struct FWeaponReloadData& reloadDataIn, struct FWeaponReloadData& reloadDataOut); // Function ConZ.Weapon.UpdateReloadData
	void UpdateAmmunitionMeshes(struct TArray<int32_t>& ammoIndices, bool showReversed); // Function ConZ.Weapon.UpdateAmmunitionMeshes
	void Unequip(); // Function ConZ.Weapon.Unequip
	void StopFiringEffects(); // Function ConZ.Weapon.StopFiringEffects
	void StopFire(); // Function ConZ.Weapon.StopFire
	void StartFire(); // Function ConZ.Weapon.StartFire
	bool ShouldPlayChamberOpenedIdle(); // Function ConZ.Weapon.ShouldPlayChamberOpenedIdle
	bool ShouldPlayCasingEjectedSound(); // Function ConZ.Weapon.ShouldPlayCasingEjectedSound
	bool ShouldClearMalfunctionOnEvent(uint8_t  malfunction, uint8_t  malfunctionEvent); // Function ConZ.Weapon.ShouldClearMalfunctionOnEvent
	void SetZeroRangeOnServer(int32_t ZeroRange); // Function ConZ.Weapon.SetZeroRangeOnServer
	void SetUseWeaponAnimationPose(bool Value); // Function ConZ.Weapon.SetUseWeaponAnimationPose
	void SetUseMuzzleDirectionForShooting(bool Value); // Function ConZ.Weapon.SetUseMuzzleDirectionForShooting
	void SetShouldPlayChamberOpenedIdle(bool Value); // Function ConZ.Weapon.SetShouldPlayChamberOpenedIdle
	void SetOverrideUseWeaponAnimationPose(bool Value); // Function ConZ.Weapon.SetOverrideUseWeaponAnimationPose
	void SetMalfunction(uint8_t  Type); // Function ConZ.Weapon.SetMalfunction
	void SetMakeNoiseLoudness(bool Value); // Function ConZ.Weapon.SetMakeNoiseLoudness
	void SetLoadedProjectileClass(AProjectile* projectileClass); // Function ConZ.Weapon.SetLoadedProjectileClass
	void SetIsScopingAllowed(bool Value); // Function ConZ.Weapon.SetIsScopingAllowed
	void SetIsChambering(bool Value); // Function ConZ.Weapon.SetIsChambering
	void SetFiringModeOnServer(uint8_t  Value); // Function ConZ.Weapon.SetFiringModeOnServer
	void SetFiringMode(uint8_t  Value); // Function ConZ.Weapon.SetFiringMode
	void Server_SwapAttachments(struct AWeaponAttachment* oldAttachment, struct AWeaponAttachment* newAttachment); // Function ConZ.Weapon.Server_SwapAttachments
	void Server_StopFiringEffects(); // Function ConZ.Weapon.Server_StopFiringEffects
	void Server_StopChamberEffects(); // Function ConZ.Weapon.Server_StopChamberEffects
	void Server_SetMalfunction(uint8_t  Type); // Function ConZ.Weapon.Server_SetMalfunction
	void Server_SetBehaviourMode(uint8_t  mode); // Function ConZ.Weapon.Server_SetBehaviourMode
	void Server_RemoveCartridgeFromWeapon(); // Function ConZ.Weapon.Server_RemoveCartridgeFromWeapon
	void Server_PlayFiringEffects(bool isLastShot); // Function ConZ.Weapon.Server_PlayFiringEffects
	void Server_PlayChamberEffects(bool playDryFireSound); // Function ConZ.Weapon.Server_PlayChamberEffects
	void Server_OnChamberOpenedClosed(); // Function ConZ.Weapon.Server_OnChamberOpenedClosed
	void Server_OnChamberOpened(); // Function ConZ.Weapon.Server_OnChamberOpened
	void Server_OnChamberClosed(); // Function ConZ.Weapon.Server_OnChamberClosed
	void Server_InsertCartridgeIntoWeapon(struct AAmmunitionItem* ammo, struct FAmmunitionData AmmunitionData); // Function ConZ.Weapon.Server_InsertCartridgeIntoWeapon
	void Server_FireShotProjectile(struct FFireShotProjectileData Data, struct FFireShotDescription desc); // Function ConZ.Weapon.Server_FireShotProjectile
	void Server_DropAttachment(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.Server_DropAttachment
	void Server_CancelFiringEffects(); // Function ConZ.Weapon.Server_CancelFiringEffects
	void ResetZeroRange(); // Function ConZ.Weapon.ResetZeroRange
	void RequestClearMalfunction(uint8_t  malfunction); // Function ConZ.Weapon.RequestClearMalfunction
	void RemoveAttachmentOnServer(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.RemoveAttachmentOnServer
	void RemoveAttachmentLocal(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.RemoveAttachmentLocal
	void RemoveAttachment(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.RemoveAttachment
	void RemoveAmmo(int32_t Amount); // Function ConZ.Weapon.RemoveAmmo
	void PlayFiringEffects(bool isLastShot); // Function ConZ.Weapon.PlayFiringEffects
	void OnWeaponActionAnimNotify(uint8_t  notifyType); // Function ConZ.Weapon.OnWeaponActionAnimNotify
	void OnStaminaDrained(); // Function ConZ.Weapon.OnStaminaDrained
	void OnShotFired(bool isLastShot); // Function ConZ.Weapon.OnShotFired
	void OnRep_WeaponAttachmentsReplicated(); // Function ConZ.Weapon.OnRep_WeaponAttachmentsReplicated
	void OnRep_OwnerWeaponStateSyncData(); // Function ConZ.Weapon.OnRep_OwnerWeaponStateSyncData
	void OnRep_Malfunction(); // Function ConZ.Weapon.OnRep_Malfunction
	void OnRep_FireShotCounterEffectsSync(); // Function ConZ.Weapon.OnRep_FireShotCounterEffectsSync
	void OnRep_BehaviourMode(); // Function ConZ.Weapon.OnRep_BehaviourMode
	void OnChamberOpened(); // Function ConZ.Weapon.OnChamberOpened
	void OnChamberClosed(); // Function ConZ.Weapon.OnChamberClosed
	void OnAttachmentRemoved(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.OnAttachmentRemoved
	void OnAttachmentAdded(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.OnAttachmentAdded
	void NotifyMissOnServer(struct FVector_NetQuantizeNormal shootDirection, int32_t randomSeed, float reticleSpread); // Function ConZ.Weapon.NotifyMissOnServer
	void NotifyHitOnServer(struct FHitResult HitResult, struct FVector_NetQuantizeNormal shootDirection, int32_t randomSeed, float reticleSpread); // Function ConZ.Weapon.NotifyHitOnServer
	void NetMulticast_StopFiringEffects(); // Function ConZ.Weapon.NetMulticast_StopFiringEffects
	void NetMulticast_StopChamberEffects(); // Function ConZ.Weapon.NetMulticast_StopChamberEffects
	void NetMulticast_PlayFiringEffects(bool isLastShot); // Function ConZ.Weapon.NetMulticast_PlayFiringEffects
	void NetMulticast_PlayChamberEffects(bool playDryFireSound); // Function ConZ.Weapon.NetMulticast_PlayChamberEffects
	void NetMulticast_CancelFiringEffects(); // Function ConZ.Weapon.NetMulticast_CancelFiringEffects
	bool IsMalfunctionSupported(uint8_t  malfunction); // Function ConZ.Weapon.IsMalfunctionSupported
	bool IsInGameEvent(); // Function ConZ.Weapon.IsInGameEvent
	bool IsFiring(); // Function ConZ.Weapon.IsFiring
	bool IsChamberOpened(); // Function ConZ.Weapon.IsChamberOpened
	bool IsAmmoInMagazineCompatible(struct AWeaponAttachmentMagazine* magazine); // Function ConZ.Weapon.IsAmmoInMagazineCompatible
	bool IsAmmoCompatible(struct FGameplayTag& AmmunitionTag); // Function ConZ.Weapon.IsAmmoCompatible
	void IncrementZeroRange(); // Function ConZ.Weapon.IncrementZeroRange
	bool HasEnoughAmmo(); // Function ConZ.Weapon.HasEnoughAmmo
	bool HasAmmoToUnload(); // Function ConZ.Weapon.HasAmmoToUnload
	int32_t GetZeroRange(); // Function ConZ.Weapon.GetZeroRange
	struct APrisoner* GetWeaponOwner(); // Function ConZ.Weapon.GetWeaponOwner
	bool GetUseWeaponAnimationPose(); // Function ConZ.Weapon.GetUseWeaponAnimationPose
	bool GetUseMuzzleDirectionForShooting(); // Function ConZ.Weapon.GetUseMuzzleDirectionForShooting
	int32_t GetUsedAmmoCount(); // Function ConZ.Weapon.GetUsedAmmoCount
	uint8_t  GetType(); // Function ConZ.Weapon.GetType
	float GetSpread(); // Function ConZ.Weapon.GetSpread
	float GetShakiness(); // Function ConZ.Weapon.GetShakiness
	struct UWeaponActionReloadSequence* GetReloadActionSequenceForData(struct FWeaponReloadData& reloadData); // Function ConZ.Weapon.GetReloadActionSequenceForData
	struct URangedWeaponsSkill* GetRangedWeaponsSkill(); // Function ConZ.Weapon.GetRangedWeaponsSkill
	float GetProbabilityForMalfunction(uint8_t  malfunction, float normalizedHealth); // Function ConZ.Weapon.GetProbabilityForMalfunction
	bool GetOverrideUseWeaponAnimationPose(); // Function ConZ.Weapon.GetOverrideUseWeaponAnimationPose
	struct FVector GetMuzzleLocation(); // Function ConZ.Weapon.GetMuzzleLocation
	struct FVector GetMuzzleDirection(); // Function ConZ.Weapon.GetMuzzleDirection
	int32_t GetMaxAmmoCount(); // Function ConZ.Weapon.GetMaxAmmoCount
	void GetMalfunctionsForEvent(uint8_t  malfunctionEvent, struct FWeaponMalfunctionEventDescription& desc, struct TArray<struct FWeaponMalfunctionProbability>& malfunctionsIn, struct TArray<struct FWeaponMalfunctionProbability>& malfunctionsOut); // Function ConZ.Weapon.GetMalfunctionsForEvent
	float GetMakeNoiseLoudness(); // Function ConZ.Weapon.GetMakeNoiseLoudness
	struct AWeaponAttachmentMagazine* GetMagazine(); // Function ConZ.Weapon.GetMagazine
	AProjectile* GetLoadedProjectileClass(); // Function ConZ.Weapon.GetLoadedProjectileClass
	int32_t GetLoadedAmmoCount(); // Function ConZ.Weapon.GetLoadedAmmoCount
	int32_t GetLiveAmmoCount(); // Function ConZ.Weapon.GetLiveAmmoCount
	bool GetIsScopingAllowed(); // Function ConZ.Weapon.GetIsScopingAllowed
	bool GetIsChambering(); // Function ConZ.Weapon.GetIsChambering
	int32_t GetInternalMagazineSpace(); // Function ConZ.Weapon.GetInternalMagazineSpace
	int32_t GetInternalMagazineAmmoCount(); // Function ConZ.Weapon.GetInternalMagazineAmmoCount
	struct UAnimMontage* GetFiringMontage(bool isLastShot); // Function ConZ.Weapon.GetFiringMontage
	uint8_t  GetFiringMode(); // Function ConZ.Weapon.GetFiringMode
	struct FBodyWeaponAnimation GetFiringBodyWeaponAnimation(); // Function ConZ.Weapon.GetFiringBodyWeaponAnimation
	struct FAmmunitionData GetDefaultAmmunitionData(); // Function ConZ.Weapon.GetDefaultAmmunitionData
	UObject* GetAmmunitionItemClass(); // Function ConZ.Weapon.GetAmmunitionItemClass
	struct FString GetAmmoTypeString(); // Function ConZ.Weapon.GetAmmoTypeString
	int32_t GetAmmoReloadCapacity(struct AAmmunitionItem* ammo); // Function ConZ.Weapon.GetAmmoReloadCapacity
	int32_t GetAmmoCount(); // Function ConZ.Weapon.GetAmmoCount
	void FireShot(); // Function ConZ.Weapon.FireShot
	bool FindReloadData(struct TArray<struct AItem*>& Items, struct FWeaponReloadData& reloadData); // Function ConZ.Weapon.FindReloadData
	void FillUpWithDefaultAmmo(); // Function ConZ.Weapon.FillUpWithDefaultAmmo
	void Equip(); // Function ConZ.Weapon.Equip
	void DestroyAmmunitionMeshes(); // Function ConZ.Weapon.DestroyAmmunitionMeshes
	void DecrementZeroRange(); // Function ConZ.Weapon.DecrementZeroRange
	void CreateAmmunitionMeshes(); // Function ConZ.Weapon.CreateAmmunitionMeshes
	void Client_SetupForEvent(); // Function ConZ.Weapon.Client_SetupForEvent
	bool CanSwitchFiringMode(); // Function ConZ.Weapon.CanSwitchFiringMode
	bool CanReloadUsingData(struct FWeaponReloadData& Data); // Function ConZ.Weapon.CanReloadUsingData
	bool CanFireAgain(); // Function ConZ.Weapon.CanFireAgain
	void CancelFire(); // Function ConZ.Weapon.CancelFire
	bool CanBeginFiringSequenceWithMalfunction(uint8_t  malfunction); // Function ConZ.Weapon.CanBeginFiringSequenceWithMalfunction
	bool CanAddAttachment(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.CanAddAttachment
	void AttachmentRemovedSignature__DelegateSignature(struct AWeapon* sender, struct AWeaponAttachment* Attachment); // DelegateFunction ConZ.Weapon.AttachmentRemovedSignature__DelegateSignature
	void AttachmentAddedSignature__DelegateSignature(struct AWeapon* sender, struct AWeaponAttachment* Attachment); // DelegateFunction ConZ.Weapon.AttachmentAddedSignature__DelegateSignature
	void AddAttachmentOnServer(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.AddAttachmentOnServer
	void AddAttachmentLocal(struct AWeaponAttachment* Attachment, bool attach); // Function ConZ.Weapon.AddAttachmentLocal
	void AddAttachment(struct AWeaponAttachment* Attachment, bool attach, bool removeExistingOnTheSameMountType); // Function ConZ.Weapon.AddAttachment
	void AddAmmoSingleAtLocation(struct FAmmunitionData& ammoData, bool backLocation); // Function ConZ.Weapon.AddAmmoSingleAtLocation
	void AddAmmoSingle(struct FAmmunitionData& ammoData); // Function ConZ.Weapon.AddAmmoSingle
	void AddAmmo(struct TArray<struct FAmmunitionData>& ammoData); // Function ConZ.Weapon.AddAmmo
}; 



// Class ConZ.ChangeTextWidget
// Size: 0x320(Inherited: 0x2F8) 
struct UChangeTextWidget : public UWaypointWidgetBase
{
	char pad_760[40];  // 0x2F8(0x28)

	void TextAcceptedEvent__DelegateSignature(struct APrisoner* User, struct FText& Text); // DelegateFunction ConZ.ChangeTextWidget.TextAcceptedEvent__DelegateSignature
	void SetMaxNumberOfCharacters(int32_t Value); // Function ConZ.ChangeTextWidget.SetMaxNumberOfCharacters
	void SetCurrentInputText_BP(struct FText& Text); // Function ConZ.ChangeTextWidget.SetCurrentInputText_BP
	void OnTextAccepted(); // Function ConZ.ChangeTextWidget.OnTextAccepted
	void OnCurrentInputTextChanged(struct FText Text); // Function ConZ.ChangeTextWidget.OnCurrentInputTextChanged
}; 



// Class ConZ.SkillLevelCraftingCondition
// Size: 0x38(Inherited: 0x28) 
struct USkillLevelCraftingCondition : public UCraftingCondition
{
	USkill* Skill;  // 0x28(0x8)
	uint8_t  MinSkillLevel;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 



// Class ConZ.CharacterActionComponent
// Size: 0xC0(Inherited: 0xB0) 
struct UCharacterActionComponent : public UActorComponent
{
	char pad_176[8];  // 0xB0(0x8)
	char pad_184_1 : 7;  // 0xB8(0x1)
	bool _shouldStopMontageOnEnd : 1;  // 0xB8(0x1)
	char pad_185[7];  // 0xB9(0x7)

	void Server_NotifyReadyToDestroy(); // Function ConZ.CharacterActionComponent.Server_NotifyReadyToDestroy
}; 



// Class ConZ.PrisonerVehicleAction_Unmount
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerVehicleAction_Unmount : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.CharacterMesh
// Size: 0x60(Inherited: 0x28) 
struct UCharacterMesh : public UObject
{
	struct FGameplayTagContainer Tags;  // 0x28(0x20)
	struct TArray<struct FCharacterMeshSlice> MeshSlices;  // 0x48(0x10)
	char pad_88[8];  // 0x58(0x8)

}; 



// Class ConZ.TeamDeathmatchParticipantStats
// Size: 0x48(Inherited: 0x48) 
struct UTeamDeathmatchParticipantStats : public UGameEventParticipantStats
{

}; 



// Class ConZ.CharacterMeshManager
// Size: 0x230(Inherited: 0x28) 
struct UCharacterMeshManager : public UObject
{
	char pad_40[24];  // 0x28(0x18)
	struct TMap<UCharacterMesh*, struct FCharacterMeshClassSet> _incompatibleCharacterMeshClasses;  // 0x40(0x50)
	struct TMap<struct FGameplayTag, struct FCharacterMeshManagerPerSlotData> _perCharacterMeshSlotData;  // 0x90(0x50)
	float _destroyUnusedMeshComponentsTime;  // 0xE0(0x4)
	char pad_228[332];  // 0xE4(0x14C)

}; 



// Class ConZ.DistantLevel
// Size: 0x298(Inherited: 0x220) 
struct ADistantLevel : public AActor
{
	struct UStaticMeshComponent* _previewMeshComponent;  // 0x220(0x8)
	struct FString _streamingLevelName;  // 0x228(0x10)
	uint8_t  _meshStreamingBehavior;  // 0x238(0x1)
	char pad_569[3];  // 0x239(0x3)
	float _maxDrawDistance;  // 0x23C(0x4)
	char pad_576_1 : 7;  // 0x240(0x1)
	bool _neverDistanceCull : 1;  // 0x240(0x1)
	char pad_577[3];  // 0x241(0x3)
	struct FBoxSphereBounds _meshBounds;  // 0x244(0x1C)
	struct TSoftObjectPtr<UStaticMesh> _collisionMesh;  // 0x260(0x28)
	struct TArray<struct TSoftObjectPtr<UStaticMesh>> _meshLODs;  // 0x288(0x10)

}; 



// Class ConZ.ForeignSubstance
// Size: 0xA8(Inherited: 0x28) 
struct UForeignSubstance : public UObject
{
	struct FText _name;  // 0x28(0x18)
	uint8_t  _disposition;  // 0x40(0x1)
	char pad_65[3];  // 0x41(0x3)
	float _absorptionCapacity;  // 0x44(0x4)
	float _absorptionRate;  // 0x48(0x4)
	float _baseDiscardRate;  // 0x4C(0x4)
	struct TMap<UForeignSubstance*, struct FRuntimeFloatCurve> _discardRateMultiplierPerOtherSubstance;  // 0x50(0x50)
	float _amountToDiscardPerWaterTransferredToBladder;  // 0xA0(0x4)
	char pad_164[4];  // 0xA4(0x4)

}; 



// Class ConZ.CharacterModificationRoom
// Size: 0x278(Inherited: 0x220) 
struct ACharacterModificationRoom : public AActor
{
	char pad_544[16];  // 0x220(0x10)
	struct USceneComponent* _sceneRoot;  // 0x230(0x8)
	struct UChildActorComponent* _childActor;  // 0x238(0x8)
	struct UCineCameraComponent* _camera;  // 0x240(0x8)
	struct USplineComponent* _positionSpline;  // 0x248(0x8)
	struct USplineComponent* _viewTargetSpline;  // 0x250(0x8)
	float _cameraInterpSpeed;  // 0x258(0x4)
	char pad_604[8];  // 0x25C(0x8)
	float _mouseTrackingSpeed;  // 0x264(0x4)
	struct FVector2D _mouseBasedCameraRotationIntensity;  // 0x268(0x8)
	char pad_624[8];  // 0x270(0x8)

}; 



// Class ConZ.Metabolism_ICU_Expandable_Stats
// Size: 0x278(Inherited: 0x260) 
struct UMetabolism_ICU_Expandable_Stats : public UUserWidget
{
	char pad_608_1 : 7;  // 0x260(0x1)
	bool DisplayGraph : 1;  // 0x260(0x1)
	char pad_609[7];  // 0x261(0x7)
	struct UMetabolism_ICU_GraphWidget* _graph2D;  // 0x268(0x8)
	struct UImage* _graph2D_Background;  // 0x270(0x8)

}; 



// Class ConZ.CharacterNameDisplayWidget
// Size: 0x278(Inherited: 0x260) 
struct UCharacterNameDisplayWidget : public UUserWidget
{
	struct UTextBlock* _nameText;  // 0x260(0x8)
	struct USquadEmblemWidget* _squadEmblem;  // 0x268(0x8)
	char pad_624[8];  // 0x270(0x8)

}; 



// Class ConZ.ClientPriceCache
// Size: 0x2C8(Inherited: 0x28) 
struct UClientPriceCache : public UObject
{
	char pad_40[672];  // 0x28(0x2A0)

}; 



// Class ConZ.CharacterSpawnerComponent
// Size: 0x230(Inherited: 0x200) 
struct UCharacterSpawnerComponent : public USceneComponent
{
	char pad_512_1 : 7;  // 0x200(0x1)
	bool OverrideDefaultProbability : 1;  // 0x1F8(0x1)
	float Probability;  // 0x1FC(0x4)
	char pad_517_1 : 7;  // 0x205(0x1)
	bool OverrideDefaultRespawnTime : 1;  // 0x200(0x1)
	float RespawnTime;  // 0x204(0x4)
	int32_t MinCharactersToSpawn;  // 0x208(0x4)
	int32_t MaxCharactersToSpawn;  // 0x20C(0x4)
	struct TArray<struct FCharacterSpawnerMarker> SpawnerMarkers;  // 0x210(0x10)
	char pad_546[14];  // 0x222(0xE)

}; 



// Class ConZ.GameResourceContainerProxyForReplenishableResource
// Size: 0x48(Inherited: 0x28) 
struct UGameResourceContainerProxyForReplenishableResource : public UObject
{
	char pad_40[32];  // 0x28(0x20)

}; 



// Class ConZ.FishingTrophyWidget
// Size: 0x2C8(Inherited: 0x260) 
struct UFishingTrophyWidget : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct UTextBlock* _fishNameText;  // 0x290(0x8)
	struct UTextBlock* _fishWeightText;  // 0x298(0x8)
	struct UTextBlock* _fishSizeText;  // 0x2A0(0x8)
	struct UTextBlock* _keepFishHotkeyText;  // 0x2A8(0x8)
	struct UTextBlock* _releaseFishHotkeyText;  // 0x2B0(0x8)
	struct UButton* _keepButton;  // 0x2B8(0x8)
	struct UButton* _releaseButton;  // 0x2C0(0x8)

	void OnReleasedPressed(); // Function ConZ.FishingTrophyWidget.OnReleasedPressed
	void OnKeepPressed(); // Function ConZ.FishingTrophyWidget.OnKeepPressed
}; 



// Class ConZ.ConZSlider
// Size: 0xDB8(Inherited: 0x260) 
struct UConZSlider : public UUserWidget
{
	char pad_608[32];  // 0x260(0x20)
	int32_t _minValue;  // 0x280(0x4)
	int32_t _maxValue;  // 0x284(0x4)
	int32_t _stepSize;  // 0x288(0x4)
	char pad_652_1 : 7;  // 0x28C(0x1)
	bool _controlWithKeyboard : 1;  // 0x28C(0x1)
	char pad_653[27];  // 0x28D(0x1B)
	struct UOverlay* _progressBarOverlay;  // 0x2A8(0x8)
	struct UImage* _sliderThumb;  // 0x2B0(0x8)
	struct UProgressBar* _progressBar;  // 0x2B8(0x8)
	struct FConZSliderStyle _selectedAndFocusedSliderStyle;  // 0x2C0(0x228)
	struct FConZSliderStyle _selectedAndUnfocusedSliderStyle;  // 0x4E8(0x228)
	struct FConZSliderStyle _unselectedSliderStyle;  // 0x710(0x228)
	struct FConZSliderStyle _highlightedSliderStyle;  // 0x938(0x228)
	struct FConZSliderStyle _disabledSliderStyle;  // 0xB60(0x228)
	float _stepSpeedStartTreshold;  // 0xD88(0x4)
	float _stepSpeedThreshold;  // 0xD8C(0x4)
	float _stepSpeedAtStart;  // 0xD90(0x4)
	float _stepSpeedSlow;  // 0xD94(0x4)
	float _stepSpeedFast;  // 0xD98(0x4)
	char pad_3484_1 : 7;  // 0xD9C(0x1)
	bool _controlWithMouseClick : 1;  // 0xD9C(0x1)
	char pad_3485_1 : 7;  // 0xD9D(0x1)
	bool _controlWithMouseWheel : 1;  // 0xD9D(0x1)
	char pad_3486[26];  // 0xD9E(0x1A)

}; 



// Class ConZ.SpamProtectionState
// Size: 0x58(Inherited: 0x28) 
struct USpamProtectionState : public UObject
{
	uint8_t  Severity;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)
	struct FDateTime LastSeverityChange;  // 0x30(0x8)
	struct FDateTime LastTimeout;  // 0x38(0x8)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool PermanentTimeout : 1;  // 0x40(0x1)
	uint8_t  MaxSeverityReached;  // 0x41(0x1)
	char pad_66[2];  // 0x42(0x2)
	int32_t MaxSeverityCount;  // 0x44(0x4)
	char pad_72[16];  // 0x48(0x10)

}; 



// Class ConZ.DrinkWaterAssetData
// Size: 0x50(Inherited: 0x30) 
struct UDrinkWaterAssetData : public UInteractionAssetData
{
	UGameResourceType* ResourceType;  // 0x30(0x8)
	float QuantityPerDrink;  // 0x38(0x4)
	float Salinity;  // 0x3C(0x4)
	struct UAkAudioEvent* StartDrinkingAudioEvent;  // 0x40(0x8)
	struct UAkAudioEvent* StopDrinkingAudioEvent;  // 0x48(0x8)

}; 



// Class ConZ.ChatSuggestionWidget
// Size: 0x298(Inherited: 0x260) 
struct UChatSuggestionWidget : public UUserWidget
{
	struct UBorder* _border;  // 0x260(0x8)
	struct UChatText* _textBlock;  // 0x268(0x8)
	struct FLinearColor _defaultColor;  // 0x270(0x10)
	struct FLinearColor _highlightedColor;  // 0x280(0x10)
	char pad_656[8];  // 0x290(0x8)

	void SetText(struct FString Text); // Function ConZ.ChatSuggestionWidget.SetText
	void SetIsHighlighted(bool Value); // Function ConZ.ChatSuggestionWidget.SetIsHighlighted
}; 



// Class ConZ.ChatUIController
// Size: 0x128(Inherited: 0x28) 
struct UChatUIController : public UObject
{
	char pad_40[240];  // 0x28(0xF0)
	int32_t _maxHistorySize;  // 0x118(0x4)
	char pad_284[12];  // 0x11C(0xC)

}; 



// Class ConZ.Inv2021_ActorInventoryElement
// Size: 0x58(Inherited: 0x28) 
struct UInv2021_ActorInventoryElement : public UObject
{
	char pad_40[48];  // 0x28(0x30)

}; 



// Class ConZ.ChatText
// Size: 0x2A8(Inherited: 0x2A8) 
struct UChatText : public UTextBlock
{

}; 



// Class ConZ.PlayableInstrument
// Size: 0x28(Inherited: 0x28) 
struct UPlayableInstrument : public UInterface
{

}; 



// Class ConZ.CheckAmmoMagazineNotAttached
// Size: 0x50(Inherited: 0x50) 
struct UCheckAmmoMagazineNotAttached : public UWeaponActionCheckAmmoSequence
{

}; 



// Class ConZ.SkillAction
// Size: 0xA0(Inherited: 0x28) 
struct USkillAction : public UObject
{
	char pad_40[120];  // 0x28(0x78)

	void OnActionFinished(); // Function ConZ.SkillAction.OnActionFinished
	void OnActionCanceled(); // Function ConZ.SkillAction.OnActionCanceled
}; 



// Class ConZ.PrisonerBodySymptomCause_Leukopenia
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_Leukopenia : public UPrisonerBodySymptomCause
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.FireItem
// Size: 0x940(Inherited: 0x930) 
struct AFireItem : public AEquipmentItem
{
	float _touchDamage;  // 0x928(0x4)
	struct UHeatSourceItemComponent* _heatSourceItemComponent;  // 0x930(0x8)
	char pad_2364[4];  // 0x93C(0x4)

}; 



// Class ConZ.PrisonerActionRollRevolverDrum
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionRollRevolverDrum : public UPrisonerAction
{

}; 



// Class ConZ.CheckDetectableItemsAction
// Size: 0xB0(Inherited: 0xA0) 
struct UCheckDetectableItemsAction : public USkillAction
{
	char pad_160[16];  // 0xA0(0x10)

}; 



// Class ConZ.CheckDetectablePlayersAction
// Size: 0xA8(Inherited: 0xA0) 
struct UCheckDetectablePlayersAction : public USkillAction
{
	char pad_160[8];  // 0xA0(0x8)

}; 



// Class ConZ.GameEventTransport
// Size: 0x2A8(Inherited: 0x220) 
struct AGameEventTransport : public AActor
{
	struct USphereComponent* Sphere;  // 0x220(0x8)
	struct UStaticMeshComponent* PodMesh;  // 0x228(0x8)
	struct UStaticMeshComponent* TargetMesh;  // 0x230(0x8)
	float TravelSpeed;  // 0x238(0x4)
	float TravelHeight;  // 0x23C(0x4)
	float HoverHeight;  // 0x240(0x4)
	float LargerRadius;  // 0x244(0x4)
	float SmallerRadius;  // 0x248(0x4)
	uint8_t  _state;  // 0x24C(0x1)
	char pad_589[3];  // 0x24D(0x3)
	struct FVector _lastPosition;  // 0x250(0xC)
	struct FVector _targetPosition;  // 0x25C(0xC)
	float _blend;  // 0x268(0x4)
	char pad_620[60];  // 0x26C(0x3C)

	void TravelToDestination(struct FVector Destination); // Function ConZ.GameEventTransport.TravelToDestination
	void SkipToDestination(); // Function ConZ.GameEventTransport.SkipToDestination
	void ReserveForPrisoner(struct APrisoner* Prisoner); // Function ConZ.GameEventTransport.ReserveForPrisoner
	void OnRep_TargetPosition(); // Function ConZ.GameEventTransport.OnRep_TargetPosition
	void OnRep_LastPosition(); // Function ConZ.GameEventTransport.OnRep_LastPosition
	void OnOrderComplete(); // Function ConZ.GameEventTransport.OnOrderComplete
	void LeaveIsland(); // Function ConZ.GameEventTransport.LeaveIsland
	void LandAtLocation(struct FVector Destination); // Function ConZ.GameEventTransport.LandAtLocation
	bool IsInteractable(); // Function ConZ.GameEventTransport.IsInteractable
	struct APrisoner* GetReservedParticipant(); // Function ConZ.GameEventTransport.GetReservedParticipant
	void CancelOrder(); // Function ConZ.GameEventTransport.CancelOrder
}; 



// Class ConZ.ExpandableContainer
// Size: 0x280(Inherited: 0x260) 
struct UExpandableContainer : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct UTextBlock* _titleText;  // 0x270(0x8)
	struct UNamedSlot* _contentNamedSlot;  // 0x278(0x8)

	void InvokeExpansionChanged(bool maximized); // Function ConZ.ExpandableContainer.InvokeExpansionChanged
}; 



// Class ConZ.DropZoneCargo
// Size: 0x290(Inherited: 0x280) 
struct ADropZoneCargo : public ADropZoneDroppable
{
	char pad_640[8];  // 0x280(0x8)
	struct UChildActorComponent* Slot;  // 0x288(0x8)

}; 



// Class ConZ.DetectableTag
// Size: 0x30(Inherited: 0x30) 
struct UDetectableTag : public UBaseItemTag
{

}; 



// Class ConZ.ChestItemState
// Size: 0x120(Inherited: 0x100) 
struct UChestItemState : public UItemState
{
	struct FDbIntegerId OwningUserProfileId;  // 0x100(0x8)
	float ContainedItemsWeight;  // 0x108(0x4)
	uint8_t  ActiveAccessLevel;  // 0x10C(0x1)
	char pad_269[3];  // 0x10D(0x3)
	struct TArray<struct FDbIntegerId> Locks;  // 0x110(0x10)

}; 



// Class ConZ.ChestItem
// Size: 0xA20(Inherited: 0x910) 
struct AChestItem : public AItem
{
	char pad_2320[24];  // 0x910(0x18)
	int32_t _capacityX;  // 0x928(0x4)
	int32_t _capacityY;  // 0x92C(0x4)
	struct UInventoryItemComponent* _inventoryComponent;  // 0x930(0x8)
	struct UInventoryContainer2D* _inventoryContainer2D;  // 0x938(0x8)
	char pad_2368[8];  // 0x940(0x8)
	struct UBuriableChestItemComponent* _buriableChestItemComponent;  // 0x948(0x8)
	struct UNameableItemComponent* _nameableItemComponent;  // 0x950(0x8)
	char pad_2392_1 : 7;  // 0x958(0x1)
	bool _canContainChestItem : 1;  // 0x958(0x1)
	char pad_2393_1 : 7;  // 0x959(0x1)
	bool _lockpickableEnabled : 1;  // 0x959(0x1)
	char pad_2394_1 : 7;  // 0x95A(0x1)
	bool _overrideCanBeNamed : 1;  // 0x95A(0x1)
	char pad_2395_1 : 7;  // 0x95B(0x1)
	bool _canBeNamed : 1;  // 0x95B(0x1)
	float _containedItemsWeight;  // 0x95C(0x4)
	float _pendingContainedItemsRadiationAmount;  // 0x960(0x4)
	char pad_2404[4];  // 0x964(0x4)
	struct FDbIntegerId _owningUserProfileId;  // 0x968(0x8)
	struct FTransform _unlockTransform;  // 0x970(0x30)
	float _forceUnlockMovementAcceptanceRadius;  // 0x9A0(0x4)
	char pad_2468[4];  // 0x9A4(0x4)
	struct TArray<UObject*> _lockItemsClasses;  // 0x9A8(0x10)
	struct TArray<struct ULockData*> _lockData;  // 0x9B8(0x10)
	struct TArray<int32_t> _remainingNeutralizationAttemptsPerLock;  // 0x9C8(0x10)
	struct TWeakObjectPtr<ABCULockItem> _attachedBCULockItem;  // 0x9D8(0x8)
	char pad_2528[16];  // 0x9E0(0x10)
	struct TArray<struct FDbIntegerId> _locks;  // 0x9F0(0x10)
	char pad_2560[16];  // 0xA00(0x10)
	uint8_t  _activeAccessLevel;  // 0xA10(0x1)
	char pad_2577[3];  // 0xA11(0x3)
	int32_t _cachedInventoryCount;  // 0xA14(0x4)
	char pad_2584_1 : 7;  // 0xA18(0x1)
	bool _doesSupportBCULocking : 1;  // 0xA18(0x1)
	char pad_2585[7];  // 0xA19(0x7)

	void OnRep_RemainingNeutralizationAttemptsPerLock(); // Function ConZ.ChestItem.OnRep_RemainingNeutralizationAttemptsPerLock
	void OnRep_LockItemsClasses(); // Function ConZ.ChestItem.OnRep_LockItemsClasses
	void OnRep_CachedInventoryCount(); // Function ConZ.ChestItem.OnRep_CachedInventoryCount
	void NetMulticast_TriggerLockNeutralizationFailurePenalty(struct AActor* triggeringActor); // Function ConZ.ChestItem.NetMulticast_TriggerLockNeutralizationFailurePenalty
	void NetMulticast_PlayLockAddedEffects(); // Function ConZ.ChestItem.NetMulticast_PlayLockAddedEffects
	bool CanViewName(struct APrisoner* Prisoner); // Function ConZ.ChestItem.CanViewName
	bool CanChangeName(struct APrisoner* Prisoner); // Function ConZ.ChestItem.CanChangeName
	void BP_OnInventoryCountChanged(int32_t numContainedItems); // Function ConZ.ChestItem.BP_OnInventoryCountChanged
}; 



// Class ConZ.PrisonerActionForceUnlock
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionForceUnlock : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerActionDestroyItem
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionDestroyItem : public UPrisonerAction
{

}; 



// Class ConZ.ChopItemAction
// Size: 0xB0(Inherited: 0xA8) 
struct UChopItemAction : public UInteractionAction
{
	char pad_168[8];  // 0xA8(0x8)

}; 



// Class ConZ.DamageDealer
// Size: 0x28(Inherited: 0x28) 
struct UDamageDealer : public UInterface
{

}; 



// Class ConZ.ChoppingObjective
// Size: 0x368(Inherited: 0x330) 
struct AChoppingObjective : public ARequirementObjective
{
	struct TArray<struct TSoftClassPtr<UObject>> _targetActors;  // 0x330(0x10)
	char pad_832_1 : 7;  // 0x340(0x1)
	bool _targetSpecificClothesType : 1;  // 0x340(0x1)
	char pad_833[7];  // 0x341(0x7)
	struct TArray<struct TSoftClassPtr<UObject>> _targetClothesCharacterMeshTypes;  // 0x348(0x10)
	char pad_856_1 : 7;  // 0x358(0x1)
	bool _singleTarget : 1;  // 0x358(0x1)
	char pad_857[15];  // 0x359(0xF)

}; 



// Class ConZ.TraderItemButton
// Size: 0x438(Inherited: 0x260) 
struct UTraderItemButton : public UUserWidget
{
	char pad_608[104];  // 0x260(0x68)
	struct UButton* _button;  // 0x2C8(0x8)
	struct UImage* _icon;  // 0x2D0(0x8)
	struct UOverlay* _priceOverlay;  // 0x2D8(0x8)
	struct UTextBlock* _title;  // 0x2E0(0x8)
	struct UOverlay* _tradeDataOverlay;  // 0x2E8(0x8)
	struct UTextBlock* _price;  // 0x2F0(0x8)
	struct UTextBlock* _quantity;  // 0x2F8(0x8)
	struct UTextBlock* _quantityFadeout;  // 0x300(0x8)
	struct UImage* _quantityBackground;  // 0x308(0x8)
	struct UImage* _quantityBackgroundFadeout;  // 0x310(0x8)
	struct UOverlay* _insufficientFamePointsOverlay;  // 0x318(0x8)
	struct UTextBlock* _requiredFamePointsText;  // 0x320(0x8)
	struct UWidgetAnimation* _changeQuantity;  // 0x328(0x8)
	char pad_816[232];  // 0x330(0xE8)
	struct UTexture2D* _iconBlankTexture;  // 0x418(0x8)
	struct UAkAudioEvent* _soundOnHover;  // 0x420(0x8)
	struct UAkAudioEvent* _soundOnClick;  // 0x428(0x8)
	char pad_1072[8];  // 0x430(0x8)

	void OnClick(); // Function ConZ.TraderItemButton.OnClick
}; 



// Class ConZ.PrisonerBodySymptomCauseUIData_Weakness
// Size: 0x40(Inherited: 0x30) 
struct UPrisonerBodySymptomCauseUIData_Weakness : public UPrisonerBodySymptomCauseUIData
{
	char pad_48[16];  // 0x30(0x10)

}; 



// Class ConZ.ChoppingRecipeDataAsset
// Size: 0xC8(Inherited: 0x30) 
struct UChoppingRecipeDataAsset : public UDataAsset
{
	struct FChoppingRecipe ChoppingRecipe;  // 0x30(0x98)

}; 



// Class ConZ.CookingFavouriteButton
// Size: 0x300(Inherited: 0x260) 
struct UCookingFavouriteButton : public UUserWidget
{
	char pad_608[88];  // 0x260(0x58)
	struct UImage* _buttonImage;  // 0x2B8(0x8)
	struct UWidgetAnimation* _clickAnimation;  // 0x2C0(0x8)
	struct UWidgetAnimation* _hoverAnimation;  // 0x2C8(0x8)
	struct FLinearColor _nonFavouriteButtonColor;  // 0x2D0(0x10)
	struct FLinearColor _favouriteButtonColor;  // 0x2E0(0x10)
	struct FLinearColor _disabledButtonColor;  // 0x2F0(0x10)

}; 



// Class ConZ.ChristmasGhost
// Size: 0x300(Inherited: 0x220) 
struct AChristmasGhost : public AActor
{
	struct TArray<struct TSoftClassPtr<UObject>> _possibleGifts;  // 0x220(0x10)
	struct TSoftObjectPtr<UParticleSystem> _giftSpawnParticles;  // 0x230(0x28)
	struct TSoftObjectPtr<UAkAudioEvent> _giftSpawnAudioEvent;  // 0x258(0x28)
	struct FTransform _giftSpawnParticlesRelativeTransform;  // 0x280(0x30)
	char pad_688[80];  // 0x2B0(0x50)

	void SpawnGift(struct FTransform& Transform); // Function ConZ.ChristmasGhost.SpawnGift
	void Client_SpawnGiftItemEffects(struct FTransform Transform, struct UParticleSystem* ParticleSystem, struct UAkAudioEvent* AudioEvent); // Function ConZ.ChristmasGhost.Client_SpawnGiftItemEffects
	void Client_BeginGiftAssetsLoading(struct TSoftClassPtr<UObject> ItemClass); // Function ConZ.ChristmasGhost.Client_BeginGiftAssetsLoading
}; 



// Class ConZ.LockpickingMinigameValidationParams
// Size: 0x30(Inherited: 0x28) 
struct ULockpickingMinigameValidationParams : public UMinigameValidationParams
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.CircularMenuSegmentInfo
// Size: 0x80(Inherited: 0x30) 
struct UCircularMenuSegmentInfo : public UDataAsset
{
	struct FText Caption;  // 0x30(0x18)
	struct UCircularMenuSegmentIcons* Icons;  // 0x48(0x8)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool ShouldApplyFadeToIcon : 1;  // 0x50(0x1)
	char pad_81[3];  // 0x51(0x3)
	float IconSizeOverride;  // 0x54(0x4)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool ShouldStayVisible : 1;  // 0x58(0x1)
	char pad_89_1 : 7;  // 0x59(0x1)
	bool ShowTooltip : 1;  // 0x59(0x1)
	char pad_90[6];  // 0x5A(0x6)
	struct FText ToolTipText;  // 0x60(0x18)
	struct UCircularMenuWidget* ParentCircularWidget;  // 0x78(0x8)

}; 



// Class ConZ.PrisonerActionInjectSubstanceDescription
// Size: 0x68(Inherited: 0x38) 
struct UPrisonerActionInjectSubstanceDescription : public UPrisonerActionDescription
{
	char pad_56[48];  // 0x38(0x30)

}; 



// Class ConZ.CircularMenuSegmentWeaponMalfunctionInfo
// Size: 0x88(Inherited: 0x80) 
struct UCircularMenuSegmentWeaponMalfunctionInfo : public UCircularMenuSegmentInfo
{
	uint8_t  _weaponMalfunction;  // 0x80(0x1)
	char pad_129[7];  // 0x81(0x7)

}; 



// Class ConZ.Deer2
// Size: 0xB40(Inherited: 0xB00) 
struct ADeer2 : public AComplexAnimal2
{
	float _hartBaseScale;  // 0xAF8(0x4)
	float _hartScaleVariance;  // 0xAFC(0x4)
	float _hindBaseScale;  // 0xB00(0x4)
	float _hindScaleVariance;  // 0xB04(0x4)
	float _maleChance;  // 0xB08(0x4)
	char pad_2836_1 : 7;  // 0xB14(0x1)
	bool _isMale : 1;  // 0xB0C(0x1)
	struct USkeletalMesh* _maleSkeletalMesh;  // 0xB10(0x8)
	struct TArray<struct UStaticMesh*> _antlerMeshes;  // 0xB18(0x10)
	struct UStaticMeshComponent* _antlers;  // 0xB28(0x8)
	uint32_t _hartHind;  // 0xB30(0x4)
	struct UChoppingRecipeDataAsset* _maleChoppingRecipeDataAsset;  // 0xB38(0x8)

	void OnRep_HartHind(); // Function ConZ.Deer2.OnRep_HartHind
}; 



// Class ConZ.FishingAttachmentHook
// Size: 0x9B0(Inherited: 0x930) 
struct AFishingAttachmentHook : public AFishingAttachment
{
	float _visibilityFactor;  // 0x930(0x4)
	float _maxTension;  // 0x934(0x4)
	float _hookedWeight;  // 0x938(0x4)
	char pad_2364[4];  // 0x93C(0x4)
	struct FTransform _hookedFishTransform;  // 0x940(0x30)
	struct UStaticMeshComponent* _hookedFishMesh;  // 0x970(0x8)
	struct FName _hookedFishHookPositionName;  // 0x978(0x8)
	float _checkIfFishIsHookedRate;  // 0x980(0x4)
	float _timeToLooseTheFishWhenHookBitten;  // 0x984(0x4)
	struct UParticleSystemComponent* _movingRippleParticleSystemComponent;  // 0x988(0x8)
	struct UParticleSystemComponent* _splashParticleSystemComponent;  // 0x990(0x8)
	char pad_2456[24];  // 0x998(0x18)

}; 



// Class ConZ.CircularMenuSegmentIcons
// Size: 0x50(Inherited: 0x30) 
struct UCircularMenuSegmentIcons : public UDataAsset
{
	struct UTexture2D* UnselectedIcon;  // 0x30(0x8)
	struct UTexture2D* SelectedIcon;  // 0x38(0x8)
	struct UTexture2D* DisabledIcon;  // 0x40(0x8)
	struct UTexture2D* OverlayIcon;  // 0x48(0x8)

}; 



// Class ConZ.DepotItemUserData
// Size: 0x48(Inherited: 0x28) 
struct UDepotItemUserData : public UVirtualizedItemUserData
{
	struct FDbIntegerId OwnerUserProfileId;  // 0x28(0x8)
	struct FString TraderPersistentId;  // 0x30(0x10)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool ShouldClearContents : 1;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)

}; 



// Class ConZ.CraftingPanelWidget
// Size: 0x288(Inherited: 0x260) 
struct UCraftingPanelWidget : public UUserWidget
{
	struct UCraftingRecipeDescriptionPanel* _craftingRecipeDescriptionPanel;  // 0x260(0x8)
	struct UBuildingPanel* _buildingPanel;  // 0x268(0x8)
	struct UCraftingPanel* _craftingPanel;  // 0x270(0x8)
	struct UCentralBuildingPanel* _centralBuildingPanel;  // 0x278(0x8)
	struct UWidgetSwitcher* _buildingCraftingWidgetSwitcher;  // 0x280(0x8)

}; 



// Class ConZ.CircularMenuSegmentSubmenuInfo
// Size: 0x98(Inherited: 0x80) 
struct UCircularMenuSegmentSubmenuInfo : public UCircularMenuSegmentInfo
{
	struct TArray<struct UCircularMenuSegmentInfo*> SubmenuInfo;  // 0x80(0x10)
	float IndexOffset;  // 0x90(0x4)
	char pad_148_1 : 7;  // 0x94(0x1)
	bool RequireSupporterPack : 1;  // 0x94(0x1)
	char pad_149[3];  // 0x95(0x3)

}; 



// Class ConZ.ContinuousFuelHeatSource
// Size: 0x310(Inherited: 0x220) 
struct UContinuousFuelHeatSource : public UFueledHeatSource
{
	char pad_544[8];  // 0x220(0x8)
	char pad_552_1 : 7;  // 0x228(0x1)
	bool _autoFindFuelConsumption : 1;  // 0x228(0x1)
	char pad_553[3];  // 0x229(0x3)
	struct FName _associatedFuelConsumptionEntityComponent;  // 0x22C(0x8)
	char pad_564[4];  // 0x234(0x4)
	UGameResourceType* _resourceType;  // 0x238(0x8)
	char pad_576_1 : 7;  // 0x240(0x1)
	bool _requiresMinimumAvailableEnergyAmountToTurnOn : 1;  // 0x240(0x1)
	char pad_577_1 : 7;  // 0x241(0x1)
	bool _isRecreateable : 1;  // 0x241(0x1)
	char pad_578[2];  // 0x242(0x2)
	float _maxEnergyConsumptionRate;  // 0x244(0x4)
	char _repCurrentEnergyConsumptionRatio;  // 0x248(0x1)
	char pad_585[7];  // 0x249(0x7)
	struct FRuntimeFloatCurve _energyConsumptionRateVsTemperatureScaleCurve;  // 0x250(0x88)
	char _repDialValue;  // 0x2D8(0x1)
	char pad_729[3];  // 0x2D9(0x3)
	float _dialOffValue;  // 0x2DC(0x4)
	float _minDialDeltaValueForRPC;  // 0x2E0(0x4)
	float _updateToServerCheckInterval;  // 0x2E4(0x4)
	char pad_744[40];  // 0x2E8(0x28)

	void OnRep_DialValue(); // Function ConZ.ContinuousFuelHeatSource.OnRep_DialValue
	void OnRep_ConsumptionRate(char previousConsumptionRate); // Function ConZ.ContinuousFuelHeatSource.OnRep_ConsumptionRate
}; 



// Class ConZ.PrisonerBodyCondition_EnergyDeficiency
// Size: 0x168(Inherited: 0xC0) 
struct UPrisonerBodyCondition_EnergyDeficiency : public UPrisonerBodyCondition
{
	struct FRuntimeFloatCurve _severityVsEnergyDeficiencyRatio;  // 0xC0(0x88)
	float _maxRatioOfAbsorbedEnergyCapacityToBeRecovered;  // 0x148(0x4)
	float _artificialAbsorbedEnergyAccumulationScale;  // 0x14C(0x4)
	float _energyDeficiency;  // 0x150(0x4)
	float _energyDeficiencyToRecover;  // 0x154(0x4)
	float _artificialAbsorbedEnergy;  // 0x158(0x4)
	char pad_348[12];  // 0x15C(0xC)

}; 



// Class ConZ.CircularMenuSegmentInteractionInfo
// Size: 0x140(Inherited: 0x80) 
struct UCircularMenuSegmentInteractionInfo : public UCircularMenuSegmentInfo
{
	uint8_t  InteractionTargetType;  // 0x80(0x1)
	char pad_129[7];  // 0x81(0x7)
	struct FInteractionStruct InteractionInfo;  // 0x88(0x98)
	char pad_288_1 : 7;  // 0x120(0x1)
	bool RequireSupporterPack : 1;  // 0x120(0x1)
	char pad_289[7];  // 0x121(0x7)
	struct APrisoner* _interactionInitiator;  // 0x128(0x8)
	struct UObject* _interactableObject;  // 0x130(0x8)
	char pad_312[8];  // 0x138(0x8)

	struct UCircularMenuSegmentInteractionInfo* CreateSpecific(struct APrisoner* initiator, struct UObject* interactable, struct FInteractionStruct& InteractionStruct); // Function ConZ.CircularMenuSegmentInteractionInfo.CreateSpecific
	struct UCircularMenuSegmentInteractionInfo* Create(uint8_t  interactionTarget, struct FInteractionStruct& InteractionStruct); // Function ConZ.CircularMenuSegmentInteractionInfo.Create
}; 



// Class ConZ.CircularMenuMusicPlayerToggleInfo
// Size: 0x218(Inherited: 0x80) 
struct UCircularMenuMusicPlayerToggleInfo : public UCircularMenuSegmentInfo
{
	uint8_t  InteractionTargetType;  // 0x80(0x1)
	char pad_129[7];  // 0x81(0x7)
	struct FInteractionStruct PrimaryInteractionInfo;  // 0x88(0x98)
	struct FInteractionStruct SecondaryInteractionInfo;  // 0x120(0x98)
	struct FText PrimaryCaption;  // 0x1B8(0x18)
	struct UCircularMenuSegmentIcons* PrimaryIcons;  // 0x1D0(0x8)
	struct FText SecondaryCaption;  // 0x1D8(0x18)
	struct UCircularMenuSegmentIcons* SecondaryIcons;  // 0x1F0(0x8)
	char pad_504_1 : 7;  // 0x1F8(0x1)
	bool IsPrimaryActive : 1;  // 0x1F8(0x1)
	uint8_t  MusicPlayerCommandType;  // 0x1F9(0x1)
	char pad_506[6];  // 0x1FA(0x6)
	struct APrisoner* _interactionInitiator;  // 0x200(0x8)
	struct UObject* _interactableObject;  // 0x208(0x8)
	char pad_528[8];  // 0x210(0x8)

	struct UCircularMenuMusicPlayerToggleInfo* CreateSpecific(struct APrisoner* interactionInitiator, struct UObject* interactableObject, struct FInteractionStruct& firstInteractionStruct, struct FInteractionStruct& secondInteractionStruct); // Function ConZ.CircularMenuMusicPlayerToggleInfo.CreateSpecific
	struct UCircularMenuMusicPlayerToggleInfo* Create(uint8_t  interactionTarget, struct FInteractionStruct& fistInteractionStruct, struct FInteractionStruct& secondInteractionStruct); // Function ConZ.CircularMenuMusicPlayerToggleInfo.Create
}; 



// Class ConZ.CircularProgressBar
// Size: 0x2E8(Inherited: 0x260) 
struct UCircularProgressBar : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	float _speedChange;  // 0x270(0x4)
	char pad_628_1 : 7;  // 0x274(0x1)
	bool _shouldProgressTextBeVisible : 1;  // 0x274(0x1)
	char pad_629[3];  // 0x275(0x3)
	struct FLinearColor _alarmColor;  // 0x278(0x10)
	struct FLinearColor _normalColor;  // 0x288(0x10)
	struct FLinearColor _textColor;  // 0x298(0x10)
	struct UMaterialInstanceDynamic* _circularMaterial;  // 0x2A8(0x8)
	struct UTexture2D* Image;  // 0x2B0(0x8)
	struct UImage* Fill_Value_BCG;  // 0x2B8(0x8)
	struct UImage* Icon;  // 0x2C0(0x8)
	struct UHorizontalBox* ProgressTextBox;  // 0x2C8(0x8)
	struct UTextBlock* TPercentage;  // 0x2D0(0x8)
	struct UTextBlock* TPercentageSign;  // 0x2D8(0x8)
	struct UWidgetAnimation* OuterCircleAlarmAnimation;  // 0x2E0(0x8)

	void SetPercentage(float Percentage); // Function ConZ.CircularProgressBar.SetPercentage
	float GetPercentage(); // Function ConZ.CircularProgressBar.GetPercentage
}; 



// Class ConZ.PrisonerVehicleAction_QuickInstallAttachment
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerVehicleAction_QuickInstallAttachment : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.SimpleParachuteItemTag
// Size: 0x80(Inherited: 0x30) 
struct USimpleParachuteItemTag : public UParachuteItemTag
{
	struct FPrisonerAirMovementParameters MovementParameters;  // 0x30(0x1C)
	char pad_76[4];  // 0x4C(0x4)
	struct FParachuteAnimParams FallLongAnimation;  // 0x50(0x10)
	struct FParachuteAnimParams SkydiveSlowAnimation;  // 0x60(0x10)
	struct FParachuteAnimParams SkydiveFastAnimation;  // 0x70(0x10)

}; 



// Class ConZ.InventorySizeData2D
// Size: 0x40(Inherited: 0x28) 
struct UInventorySizeData2D : public UInventorySizeData
{
	int32_t SizeX;  // 0x28(0x4)
	int32_t SizeY;  // 0x2C(0x4)
	struct TArray<bool> Bitmask;  // 0x30(0x10)

}; 



// Class ConZ.ConZWaterSplineOcean
// Size: 0x2C8(Inherited: 0x2B8) 
struct AConZWaterSplineOcean : public AConZWaterSpline
{
	char pad_696_1 : 7;  // 0x2B8(0x1)
	bool FollowCamera : 1;  // 0x2B8(0x1)
	char pad_697[7];  // 0x2B9(0x7)
	struct UTexture2D* OceanOpacityMaskTexture;  // 0x2C0(0x8)

}; 



// Class ConZ.SingletonStatics
// Size: 0x28(Inherited: 0x28) 
struct USingletonStatics : public UBlueprintFunctionLibrary
{

	struct UDataSingleton* GetDataSingleton(); // Function ConZ.SingletonStatics.GetDataSingleton
}; 



// Class ConZ.ClearBadRound
// Size: 0xC0(Inherited: 0xB8) 
struct UClearBadRound : public UWeaponActionClearMalfunctionSequence
{
	struct FName MontageEndSectionName;  // 0xB8(0x8)

}; 



// Class ConZ.PrisonerBodySymptomCause_Fatigue
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_Fatigue : public UPrisonerBodySymptomCause
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.Inv2021_InventoryPositionObject
// Size: 0x28(Inherited: 0x28) 
struct UInv2021_InventoryPositionObject : public UObject
{

}; 



// Class ConZ.ClearDoubleFeed
// Size: 0xD0(Inherited: 0xB8) 
struct UClearDoubleFeed : public UWeaponActionClearMalfunctionSequence
{
	struct FName MontageEndSectionName;  // 0xB8(0x8)
	int32_t _ejectedRoundsCount;  // 0xC0(0x4)
	char pad_196[4];  // 0xC4(0x4)
	struct AWeaponAttachmentMagazine* _magazineToRestore;  // 0xC8(0x8)

}; 



// Class ConZ.PrisonerActionStartRestingDescription
// Size: 0xF0(Inherited: 0x38) 
struct UPrisonerActionStartRestingDescription : public UPrisonerActionDescription
{
	char pad_56[184];  // 0x38(0xB8)

}; 



// Class ConZ.ConsumableUserData
// Size: 0x28(Inherited: 0x28) 
struct UConsumableUserData : public UObject
{

}; 



// Class ConZ.ClearStuckBullet
// Size: 0xC0(Inherited: 0xB8) 
struct UClearStuckBullet : public UWeaponActionClearMalfunctionSequence
{
	struct FName MontageEndSectionName;  // 0xB8(0x8)

}; 



// Class ConZ.ClientSettingsMenu
// Size: 0x660(Inherited: 0x628) 
struct UClientSettingsMenu : public UConZSettingsMenu
{
	UInputWidget* _inputWidget;  // 0x628(0x8)
	UAudioDeviceDisplay* _audioDeviceDisplay;  // 0x630(0x8)
	char pad_1592[40];  // 0x638(0x28)

}; 



// Class ConZ.ConZSettingsUIController
// Size: 0x1D8(Inherited: 0x28) 
struct UConZSettingsUIController : public UObject
{
	char pad_40[432];  // 0x28(0x1B0)

}; 



// Class ConZ.ClientSettingsUIController
// Size: 0x218(Inherited: 0x1D8) 
struct UClientSettingsUIController : public UConZSettingsUIController
{
	char pad_472[48];  // 0x1D8(0x30)
	struct UInputWidget* InputWidget;  // 0x208(0x8)
	char pad_528[8];  // 0x210(0x8)

}; 



// Class ConZ.LockpickingStatics
// Size: 0x28(Inherited: 0x28) 
struct ULockpickingStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.ClothesItemState
// Size: 0x110(Inherited: 0x100) 
struct UClothesItemState : public UItemState
{
	float dirtiness;  // 0x100(0x4)
	char pad_260_1 : 7;  // 0x104(0x1)
	bool IsPatched : 1;  // 0x104(0x1)
	char pad_261[11];  // 0x105(0xB)

}; 



// Class ConZ.PrisonerActionWashEyesDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionWashEyesDescription : public UCharacterActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.EntitySetup
// Size: 0x80(Inherited: 0x40) 
struct UEntitySetup : public UEntitySystemObjectSetup
{
	char pad_64_1 : 7;  // 0x40(0x1)
	bool Transient : 1;  // 0x40(0x1)
	char pad_65_1 : 7;  // 0x41(0x1)
	bool Hidden : 1;  // 0x41(0x1)
	char pad_66[2];  // 0x42(0x2)
	float BoundsRadius;  // 0x44(0x4)
	struct TSoftClassPtr<UObject> Actor;  // 0x48(0x28)
	struct TArray<struct FEntitySetup_Component> Components;  // 0x70(0x10)

}; 



// Class ConZ.MissionRewardWidget
// Size: 0x270(Inherited: 0x260) 
struct UMissionRewardWidget : public UUserWidget
{
	struct UImage* _rewardImage;  // 0x260(0x8)
	struct UTextBlock* _rewardAmount;  // 0x268(0x8)

}; 



// Class ConZ.ClothesItemEntitySetup
// Size: 0x88(Inherited: 0x88) 
struct UClothesItemEntitySetup : public UItemEntitySetup
{

}; 



// Class ConZ.InsertCartridgeIntoMagazine
// Size: 0xA0(Inherited: 0x90) 
struct UInsertCartridgeIntoMagazine : public UWeaponActionReloadSequence
{
	struct FName MontageEndSectionName;  // 0x90(0x8)
	char pad_152[8];  // 0x98(0x8)

}; 



// Class ConZ.ElectricityGeneratorItem
// Size: 0x940(Inherited: 0x910) 
struct AElectricityGeneratorItem : public AItem
{
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent;  // 0x910(0x8)
	struct URangedResourceProviderComponentContinousAmount* _rangedResourceProviderComponent;  // 0x918(0x8)
	struct UAkAudioEvent* _turnOnAudioEvent;  // 0x920(0x8)
	struct UAkAudioEvent* _turnOffAudioEvent;  // 0x928(0x8)
	char pad_2352_1 : 7;  // 0x930(0x1)
	bool _isTurnedOn : 1;  // 0x930(0x1)
	char pad_2353[3];  // 0x931(0x3)
	float _power;  // 0x934(0x4)
	float _load;  // 0x938(0x4)
	char pad_2364[4];  // 0x93C(0x4)

	void RangedResourceProvider_ResourceAmountChanged(struct URangedResourceProviderComponent* Component, float Value); // Function ConZ.ElectricityGeneratorItem.RangedResourceProvider_ResourceAmountChanged
	void RangedResourceProvider_AvailableResourceAmountChanged(struct URangedResourceProviderComponent* Component, float Value); // Function ConZ.ElectricityGeneratorItem.RangedResourceProvider_AvailableResourceAmountChanged
	void OnRep_IsTurnedOn(); // Function ConZ.ElectricityGeneratorItem.OnRep_IsTurnedOn
	void OnComponentDeactivated(struct UActorComponent* Component); // Function ConZ.ElectricityGeneratorItem.OnComponentDeactivated
	void OnComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.ElectricityGeneratorItem.OnComponentActivated
}; 



// Class ConZ.PrisonerActionChangeStanceWaitEndOnOwningClient
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionChangeStanceWaitEndOnOwningClient : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.TraderForPlayerAndDepotItemRequest
// Size: 0x30(Inherited: 0x28) 
struct UTraderForPlayerAndDepotItemRequest : public UPlayerRpcChannelServerRequest
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.CollapsableColorPicker
// Size: 0x2B0(Inherited: 0x260) 
struct UCollapsableColorPicker : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct USelectionOverlayWidget* _selectionOverlay;  // 0x278(0x8)
	struct UTextBlock* _label;  // 0x280(0x8)
	struct UImage* _colorPreviewSquare;  // 0x288(0x8)
	struct UColorPicker* _colorPicker;  // 0x290(0x8)
	struct FText dropdownLabel;  // 0x298(0x18)

}; 



// Class ConZ.CollapsableContainer
// Size: 0x7B0(Inherited: 0x260) 
struct UCollapsableContainer : public UUserWidget
{
	struct FText Title;  // 0x260(0x18)
	struct UTextBlock* _title;  // 0x278(0x8)
	struct UImage* _titleBackground;  // 0x280(0x8)
	struct UButton* _displayContentButton;  // 0x288(0x8)
	struct UOverlay* _contentAreaOverlay;  // 0x290(0x8)
	struct FDataTableRowHandle _titleBackgroundColor;  // 0x298(0x10)
	struct FDataTableRowHandle _titleTextColor;  // 0x2A8(0x10)
	struct FButtonStyle _buttonStyleWhenCollapsedContent;  // 0x2B8(0x278)
	struct FButtonStyle _buttonStyleWhenExpandedContent;  // 0x530(0x278)
	char pad_1960[8];  // 0x7A8(0x8)

	void OnDisplayContentButtonClicked(); // Function ConZ.CollapsableContainer.OnDisplayContentButtonClicked
}; 



// Class ConZ.CutObjectAssetData
// Size: 0x38(Inherited: 0x30) 
struct UCutObjectAssetData : public UInteractionAssetData
{
	struct UChoppingRecipeDataAsset* ChoppingRecipeDataAsset;  // 0x30(0x8)

}; 



// Class ConZ.PrisonerStatics
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerStatics : public UBlueprintFunctionLibrary
{

	int32_t GetAdditionalPenisInchesBasedOnTotalPlayTime(struct UPrisonerCommonData* commonData); // Function ConZ.PrisonerStatics.GetAdditionalPenisInchesBasedOnTotalPlayTime
}; 



// Class ConZ.PrisonerHallucinationIllusion_SeeFirearmsAsSticksAndBananas
// Size: 0x240(Inherited: 0x220) 
struct APrisonerHallucinationIllusion_SeeFirearmsAsSticksAndBananas : public APrisonerHallucinationIllusion
{
	struct UStaticMesh* _bananaMesh;  // 0x220(0x8)
	struct UStaticMesh* _mediumStickMesh;  // 0x228(0x8)
	char pad_560[16];  // 0x230(0x10)

}; 



// Class ConZ.PrisonerActionLightFireDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionLightFireDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.CollectObjectAssetData
// Size: 0x38(Inherited: 0x38) 
struct UCollectObjectAssetData : public UCutObjectAssetData
{

}; 



// Class ConZ.CollectSeedsItemTag
// Size: 0x58(Inherited: 0x30) 
struct UCollectSeedsItemTag : public UBaseItemTag
{
	struct TSoftClassPtr<UObject> _seedsClass;  // 0x30(0x28)

}; 



// Class ConZ.ColorPicker
// Size: 0x2A0(Inherited: 0x260) 
struct UColorPicker : public UUserWidget
{
	struct UImage* _dynamicGradient;  // 0x260(0x8)
	struct UImage* _dynamicReticle;  // 0x268(0x8)
	struct USlider* _sliderHUE;  // 0x270(0x8)
	struct FVector2D _saturationAndBrightnessPickerSize;  // 0x278(0x8)
	char pad_640[32];  // 0x280(0x20)

}; 



// Class ConZ.FundsOverviewUIController
// Size: 0x30(Inherited: 0x28) 
struct UFundsOverviewUIController : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.CombinationLockUnlockAttemptRequest
// Size: 0x68(Inherited: 0x28) 
struct UCombinationLockUnlockAttemptRequest : public UPlayerRpcChannelServerRequest
{
	char pad_40[64];  // 0x28(0x40)

}; 



// Class ConZ.DiegeticLockState
// Size: 0x2C0(Inherited: 0x260) 
struct UDiegeticLockState : public UUserWidget
{
	struct FSlateColor LockedColor;  // 0x260(0x28)
	struct FSlateColor UnlockedColor;  // 0x288(0x28)
	struct UTextBlock* _lockState;  // 0x2B0(0x8)
	char pad_696[8];  // 0x2B8(0x8)

}; 



// Class ConZ.PrisonerBodySymptom_HeightenedSenses
// Size: 0xC0(Inherited: 0xB8) 
struct UPrisonerBodySymptom_HeightenedSenses : public UPrisonerBodySymptom
{
	float _maxSeverity;  // 0xB8(0x4)
	char pad_188[4];  // 0xBC(0x4)

}; 



// Class ConZ.CombinationLockUnlockAttemptResponse
// Size: 0x30(Inherited: 0x28) 
struct UCombinationLockUnlockAttemptResponse : public UPlayerRpcChannelServerResponse
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.CompassItemTag
// Size: 0x38(Inherited: 0x30) 
struct UCompassItemTag : public UBaseItemTag
{
	char CompassLevel;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 



// Class ConZ.MeleeAttackCollisionCapsule
// Size: 0x490(Inherited: 0x470) 
struct UMeleeAttackCollisionCapsule : public UCapsuleComponent
{
	struct FGameplayTag _attachment;  // 0x470(0x8)
	struct FDataTableRowHandle _weaponDescRef;  // 0x478(0x10)
	char pad_1160[8];  // 0x488(0x8)

}; 



// Class ConZ.LevelUpNotificationWidget
// Size: 0x2C8(Inherited: 0x260) 
struct ULevelUpNotificationWidget : public UUserWidget
{
	struct UOverlay* _overlay;  // 0x260(0x8)
	struct UImage* _backgroundImage;  // 0x268(0x8)
	struct UImage* _arrowImage;  // 0x270(0x8)
	struct UTextBlock* _skillLevelText;  // 0x278(0x8)
	struct UTextBlock* _skillNameText;  // 0x280(0x8)
	struct UAkAudioEvent* _levelUpNotificationAudioEvent;  // 0x288(0x8)
	char pad_656[4];  // 0x290(0x4)
	float _displayTime;  // 0x294(0x4)
	float _slideInTime;  // 0x298(0x4)
	float _slideOutTime;  // 0x29C(0x4)
	char pad_672[40];  // 0x2A0(0x28)

	struct UWidgetAnimation* GetLevelUpAnimation(); // Function ConZ.LevelUpNotificationWidget.GetLevelUpAnimation
}; 



// Class ConZ.CompassWidget
// Size: 0x2A0(Inherited: 0x260) 
struct UCompassWidget : public UUserWidget
{
	char pad_608[8];  // 0x260(0x8)
	struct UImage* _compassTrack;  // 0x268(0x8)
	struct UTexture2D* _compassTrackNorthOnly;  // 0x270(0x8)
	struct UTexture2D* _compassTrackCardinalOnly;  // 0x278(0x8)
	struct UTexture2D* _compassTrackCardinalAndIntercardinal;  // 0x280(0x8)
	struct UTexture2D* _compassTrackEverything;  // 0x288(0x8)
	struct FVector2D _offset;  // 0x290(0x8)
	float _compassTrackWidthMultiplier;  // 0x298(0x4)
	char pad_668[4];  // 0x29C(0x4)

}; 



// Class ConZ.ComplexAnimal2AnimInstance
// Size: 0x360(Inherited: 0x2F0) 
struct UComplexAnimal2AnimInstance : public UAnimal2AnimInstance
{
	uint8_t  CurrentAction;  // 0x2F0(0x1)
	char pad_753[3];  // 0x2F1(0x3)
	float HeadLookRight;  // 0x2F4(0x4)
	float HeadLookUp;  // 0x2F8(0x4)
	float AngularVelocity;  // 0x2FC(0x4)
	struct FName faceMorphTargetName;  // 0x300(0x8)
	float InterpolationSpeed;  // 0x308(0x4)
	float BlendInTime;  // 0x30C(0x4)
	float BlendOutTime;  // 0x310(0x4)
	char pad_788[60];  // 0x314(0x3C)
	float _faceMorphValueChangePerSeconds;  // 0x350(0x4)
	char pad_852[12];  // 0x354(0xC)

	float GetTurnInPlaceElapsedTimeRight(); // Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceElapsedTimeRight
	float GetTurnInPlaceElapsedTimeLeft(); // Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceElapsedTimeLeft
	float GetTurnInPlaceDirectionBlendAlpha(); // Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceDirectionBlendAlpha
	float GetTurnInPlaceBlendAlpha(); // Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceBlendAlpha
}; 



// Class ConZ.PrisonerLifeIndicatorsSprite
// Size: 0x398(Inherited: 0x260) 
struct UPrisonerLifeIndicatorsSprite : public UUserWidget
{
	struct UCanvasPanel* MPI_CanvasPanel;  // 0x260(0x8)
	struct UBreathingBarLungsWidget* _breathingBarLungsWidget;  // 0x268(0x8)
	struct UDualArcedProgressBar* _dualProgressBarBreathing;  // 0x270(0x8)
	struct UGradedArcedProgressBar* _gradedProgressBarActionDifficulty;  // 0x278(0x8)
	struct UCircularProgressBar* CircularProgressBarSpritesHLTH;  // 0x280(0x8)
	struct UCircularProgressBar* CircularProgressBarSpritesSTA;  // 0x288(0x8)
	struct UCircularProgressBar* CircularProgressBarSpritesNRG;  // 0x290(0x8)
	struct UCircularProgressBar* CircularProgressBarSpritesHYD;  // 0x298(0x8)
	struct UCircularProgressBar* CircularProgressBarSpritesNoise;  // 0x2A0(0x8)
	struct UCircularProgressBar* CircularProgressBarSpritesAIPerception;  // 0x2A8(0x8)
	struct UImage* HeadInjury;  // 0x2B0(0x8)
	struct UImage* ChestInjury;  // 0x2B8(0x8)
	struct UImage* AbdomenInjury;  // 0x2C0(0x8)
	struct UImage* ArmRightUpperInjury;  // 0x2C8(0x8)
	struct UImage* ArmRightLowerInjury;  // 0x2D0(0x8)
	struct UImage* ArmLeftUpperInjury;  // 0x2D8(0x8)
	struct UImage* ArmLeftLowerInjury;  // 0x2E0(0x8)
	struct UImage* LegRightUpperInjury;  // 0x2E8(0x8)
	struct UImage* LegRightLowerInjury;  // 0x2F0(0x8)
	struct UImage* LegLeftUpperInjury;  // 0x2F8(0x8)
	struct UImage* LegLeftLowerInjury;  // 0x300(0x8)
	struct UScaleBox* BloodDropBox;  // 0x308(0x8)
	char pad_784[120];  // 0x310(0x78)
	struct UWidgetAnimation* NewAnimation_2;  // 0x388(0x8)
	struct APrisoner* _prisoner;  // 0x390(0x8)

}; 



// Class ConZ.CustomZoneDataAsset
// Size: 0x50(Inherited: 0x30) 
struct UCustomZoneDataAsset : public UDataAsset
{
	struct TArray<struct FCustomZoneDisplayData> CustomZoneEventDisplayData;  // 0x30(0x10)
	struct TArray<struct FCustomZoneDisplayData> CustomZoneHandlingMethodDisplayData;  // 0x40(0x10)

}; 



// Class ConZ.ConsoleStatics
// Size: 0x28(Inherited: 0x28) 
struct UConsoleStatics : public UObject
{

}; 



// Class ConZ.FillItemWithReplenishableResourceAssetData
// Size: 0x70(Inherited: 0x30) 
struct UFillItemWithReplenishableResourceAssetData : public UInteractionAssetData
{
	struct FFillItemWithReplenishableResourceInteractionData InteractionData;  // 0x30(0x40)

}; 



// Class ConZ.DeathmatchGameEvent
// Size: 0x580(Inherited: 0x560) 
struct ADeathmatchGameEvent : public AGameEventBase
{
	struct FDeathmatchParameters _deathmatchParameters;  // 0x560(0x14)
	char pad_1396[12];  // 0x574(0xC)

	void SetDeathmatchParameters(struct FDeathmatchParameters& Params); // Function ConZ.DeathmatchGameEvent.SetDeathmatchParameters
	void RestrictGameEventArea(); // Function ConZ.DeathmatchGameEvent.RestrictGameEventArea
	struct FDeathmatchParameters GetDeathmatchParameters(); // Function ConZ.DeathmatchGameEvent.GetDeathmatchParameters
}; 



// Class ConZ.ConsumableDigestionHandler
// Size: 0x28(Inherited: 0x28) 
struct UConsumableDigestionHandler : public UObject
{

}; 



// Class ConZ.ContainerDisplay
// Size: 0x320(Inherited: 0x260) 
struct UContainerDisplay : public UUserWidget
{
	char pad_608[96];  // 0x260(0x60)
	struct UImage* _containerImage;  // 0x2C0(0x8)
	struct UImage* _containerImage2;  // 0x2C8(0x8)
	struct USizeBox* _sizeBox;  // 0x2D0(0x8)
	struct UTextBlock* _name;  // 0x2D8(0x8)
	struct UTextBlock* _name2;  // 0x2E0(0x8)
	struct UTextBlock* _durability;  // 0x2E8(0x8)
	struct UTextBlock* _durability2;  // 0x2F0(0x8)
	struct UProgressBar* _durabilityProgressBar;  // 0x2F8(0x8)
	struct UProgressBar* _durabilityProgressBar2;  // 0x300(0x8)
	struct UWidgetSwitcher* _selectionSwitcher;  // 0x308(0x8)
	float _width;  // 0x310(0x4)
	float _height;  // 0x314(0x4)
	char pad_792[8];  // 0x318(0x8)

}; 



// Class ConZ.PrisonerVehicleAction_MountDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerVehicleAction_MountDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.DualArcedProgressBar
// Size: 0x2B0(Inherited: 0x260) 
struct UDualArcedProgressBar : public UUserWidget
{
	struct UImage* _frontFillImage;  // 0x260(0x8)
	struct UImage* _backFillImage;  // 0x268(0x8)
	struct UMaterialInstanceConstant* _frontFillMaterial;  // 0x270(0x8)
	struct UMaterialInstanceConstant* _backFillMaterial;  // 0x278(0x8)
	struct FLinearColor _frontFillColor;  // 0x280(0x10)
	struct FLinearColor _backFillColor;  // 0x290(0x10)
	char pad_672[16];  // 0x2A0(0x10)

}; 



// Class ConZ.ContinuousFuelConsumptionEntityComponentSetup
// Size: 0x68(Inherited: 0x48) 
struct UContinuousFuelConsumptionEntityComponentSetup : public UEntityComponentSetup
{
	char pad_72_1 : 7;  // 0x48(0x1)
	bool HasInfiniteResources : 1;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	UGameResourceType* ResourceType;  // 0x50(0x8)
	char pad_88_1 : 7;  // 0x58(0x1)
	bool AutoFindResourceComponent : 1;  // 0x58(0x1)
	char pad_89[3];  // 0x59(0x3)
	struct FName AssociatedResourceComponentName;  // 0x5C(0x8)
	char pad_100[4];  // 0x64(0x4)

}; 



// Class ConZ.PrisonerBodyEffect_ExhaustionChange
// Size: 0x88(Inherited: 0x40) 
struct UPrisonerBodyEffect_ExhaustionChange : public UPrisonerBodyEffect
{
	char pad_64[48];  // 0x40(0x30)
	UPrisonerBodyEffectUIData_ExhaustionChange* _uiDataClass;  // 0x70(0x8)
	char pad_120[16];  // 0x78(0x10)

}; 



// Class ConZ.ConZBaseManager
// Size: 0x3D8(Inherited: 0x220) 
struct AConZBaseManager : public AActor
{
	char pad_544[144];  // 0x220(0x90)
	float _damageEventProcessingPeriod;  // 0x2B0(0x4)
	float _decayProcessingPeriod;  // 0x2B4(0x4)
	float _flagOvertakePeriod;  // 0x2B8(0x4)
	float _baseInteractionsPeriod;  // 0x2BC(0x4)
	AConZBase* _baseClass;  // 0x2C0(0x8)
	AConZBaseElement* _baseElementClass;  // 0x2C8(0x8)
	AFlagAreaVisualizer* _flagAreaVisualizerClass;  // 0x2D0(0x8)
	struct FVector2D _initialBaseSize;  // 0x2D8(0x8)
	float _flagInfluenceRadius;  // 0x2E0(0x4)
	int32_t _flagOvertakeDuration;  // 0x2E4(0x4)
	int32_t _maxElementsPerFlag;  // 0x2E8(0x4)
	int32_t _extraElementsPerFlagForAdditionalSquadMember;  // 0x2EC(0x4)
	int32_t _maxNumberOfExpandedElementsPerFlag;  // 0x2F0(0x4)
	char pad_756_1 : 7;  // 0x2F4(0x1)
	bool _allowMultipleFlagsPerPlayer : 1;  // 0x2F4(0x1)
	char pad_757[3];  // 0x2F5(0x3)
	float _maxBaseBuildingHeight;  // 0x2F8(0x4)
	struct FConZBaseRepairAreaDuration _shortRepairDuration;  // 0x2FC(0x8)
	struct FConZBaseRepairAreaDuration _mediumRepairDuration;  // 0x304(0x8)
	struct FConZBaseRepairAreaDuration _longRepairDuration;  // 0x30C(0x8)
	char pad_788[28];  // 0x314(0x1C)
	struct TMap<int64_t, struct AConZBase*> _bases;  // 0x330(0x50)
	char pad_896[88];  // 0x380(0x58)

	void NetMulticast_UpdateDoorData(int32_t dataVersion, struct FConZBaseElementIdentifier ElementIdentifier, struct FDoorRepData doorData); // Function ConZ.ConZBaseManager.NetMulticast_UpdateDoorData
	void NetMulticast_TransferOwnership(int32_t dataVersion, struct FDbIntegerId oldId, struct FDbIntegerId newId); // Function ConZ.ConZBaseManager.NetMulticast_TransferOwnership
	void NetMulticast_SpawnBaseElement(int32_t dataVersion, struct FTransform Transform, struct FConZBaseData baseData, UObject* ElementClass, int64_t ElementID, int64_t OwnerUserProfileId, int64_t CreatorPrisonerId, bool IsOwnedByPlayer, struct FBaseElementSpawnParams Params); // Function ConZ.ConZBaseManager.NetMulticast_SpawnBaseElement
	void NetMulticast_SetDebugMode(struct APrisoner* Prisoner, uint8_t  mode); // Function ConZ.ConZBaseManager.NetMulticast_SetDebugMode
	void NetMulticast_SetBaseOwnerPlayerId(int32_t dataVersion, struct FConZBaseInteractionData baseData, int64_t PlayerId); // Function ConZ.ConZBaseManager.NetMulticast_SetBaseOwnerPlayerId
	void NetMulticast_ProcessDecay(int32_t dataVersion, float DeltaSeconds); // Function ConZ.ConZBaseManager.NetMulticast_ProcessDecay
	void NetMulticast_InteractWithElement(int32_t dataVersion, uint8_t  interactionType, struct FConZBaseInteractionData baseData, struct FConZBaseElementInteractionData baseElementData, struct APrisoner* User); // Function ConZ.ConZBaseManager.NetMulticast_InteractWithElement
	void NetMulticast_ExecuteFlagOvertake(int32_t dataVersion, int64_t ElementID, struct FVector elementLocation, struct FDbIntegerId PlayerId); // Function ConZ.ConZBaseManager.NetMulticast_ExecuteFlagOvertake
	void NetMulticast_DestroyElement(int32_t dataVersion, struct FConZBaseElementIdentifier ElementIdentifier, uint8_t  reason, bool cascade); // Function ConZ.ConZBaseManager.NetMulticast_DestroyElement
	void NetMulticast_DestroyAllElementsInRadius(int32_t dataVersion, struct FVector Center, float Radius, float minElementAreaCovered, float minAngleDeg, float maxAngleDeg, struct FVector forwardVector, uint8_t  typeFilter); // Function ConZ.ConZBaseManager.NetMulticast_DestroyAllElementsInRadius
	void NetMulticast_ClearBaseOwnerPlayerId(int32_t dataVersion, struct FConZBaseInteractionData baseData); // Function ConZ.ConZBaseManager.NetMulticast_ClearBaseOwnerPlayerId
	void NetMulticast_ChangeFlagOwner(int32_t dataVersion, struct FDbIntegerId oldOwnerProfileId, struct FDbIntegerId newOwnerProfileId); // Function ConZ.ConZBaseManager.NetMulticast_ChangeFlagOwner
	void NetMulticast_ApplyDamageToBaseElement(int32_t dataVersion, int64_t BaseId, int64_t ElementID, struct FVector elementLocation, float damageAmount); // Function ConZ.ConZBaseManager.NetMulticast_ApplyDamageToBaseElement
}; 



// Class ConZ.ConZBorderBase
// Size: 0x2A0(Inherited: 0x260) 
struct UConZBorderBase : public UUserWidget
{
	uint8_t  _borderSize;  // 0x260(0x1)
	char pad_609[3];  // 0x261(0x3)
	struct FLinearColor _color;  // 0x264(0x10)
	char pad_628[4];  // 0x274(0x4)
	struct UTexture2D* White1x1;  // 0x278(0x8)
	struct UTexture2D* White2x2;  // 0x280(0x8)
	struct UTexture2D* White4x4;  // 0x288(0x8)
	struct UImage* Image_1;  // 0x290(0x8)
	struct UNamedSlot* NamedSlot_1;  // 0x298(0x8)

	void SetColor(struct FLinearColor Color); // Function ConZ.ConZBorderBase.SetColor
}; 



// Class ConZ.PowerNode
// Size: 0x258(Inherited: 0x220) 
struct APowerNode : public AActor
{
	struct USceneComponent* _root;  // 0x220(0x8)
	struct UStaticMeshComponent* _mesh;  // 0x228(0x8)
	struct UPowerCableMeshSet* _cableMeshSet;  // 0x230(0x8)
	float _maxCablesDrawDistance;  // 0x238(0x4)
	char pad_572[4];  // 0x23C(0x4)
	struct TArray<struct FPowerNodeConnector> _connectors;  // 0x240(0x10)
	struct APowerNode* _connectionTarget;  // 0x250(0x8)

}; 



// Class ConZ.DcxBicycleDriverMountSlot
// Size: 0x1E0(Inherited: 0x1E0) 
struct UDcxBicycleDriverMountSlot : public UDcxBikeDriverMountSlot
{

}; 



// Class ConZ.CriminalRecordSkill
// Size: 0x278(Inherited: 0x260) 
struct UCriminalRecordSkill : public UUserWidget
{
	struct UQuartalPieProgressBar* _quartalPieProgressBar;  // 0x260(0x8)
	struct UTextBlock* _textName;  // 0x268(0x8)
	struct UTextBlock* _textPercentage;  // 0x270(0x8)

}; 



// Class ConZ.EconomyManagerRequest
// Size: 0xD8(Inherited: 0x28) 
struct UEconomyManagerRequest : public UPlayerRpcChannelServerRequest
{
	char pad_40[176];  // 0x28(0xB0)

}; 



// Class ConZ.ConZCameraManager
// Size: 0x2850(Inherited: 0x2810) 
struct AConZCameraManager : public APlayerCameraManager
{
	char pad_10256[28];  // 0x2810(0x1C)
	float _introCinematicDuration;  // 0x282C(0x4)
	char pad_10288[32];  // 0x2830(0x20)

}; 



// Class ConZ.ConZCustomInteractionButton
// Size: 0x430(Inherited: 0x428) 
struct UConZCustomInteractionButton : public UButton
{
	char pad_1064[8];  // 0x428(0x8)

}; 



// Class ConZ.PrisonerActionWashWithReplenishableResourceDescription
// Size: 0x90(Inherited: 0x38) 
struct UPrisonerActionWashWithReplenishableResourceDescription : public UCharacterActionDescription
{
	char pad_56[80];  // 0x38(0x50)
	struct UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;  // 0x88(0x8)

}; 



// Class ConZ.ConZGameSession
// Size: 0x238(Inherited: 0x238) 
struct AConZGameSession : public AGameSession
{

}; 



// Class ConZ.DropdownMenuColorSelectionWidget
// Size: 0x2B8(Inherited: 0x2A8) 
struct UDropdownMenuColorSelectionWidget : public UDropdownMenuSelectionWidget
{
	struct FLinearColor Color;  // 0x2A8(0x10)

}; 



// Class ConZ.PrisonerActionChangeWeaponFiringModeModeDescription
// Size: 0x38(Inherited: 0x38) 
struct UPrisonerActionChangeWeaponFiringModeModeDescription : public UPrisonerActionDescription
{

}; 



// Class ConZ.TraderBuyUIController
// Size: 0x1A0(Inherited: 0x28) 
struct UTraderBuyUIController : public UObject
{
	char pad_40[376];  // 0x28(0x178)

}; 



// Class ConZ.GameplayLog
// Size: 0x40(Inherited: 0x28) 
struct UGameplayLog : public UObject
{
	char pad_40[24];  // 0x28(0x18)

}; 



// Class ConZ.ConZPlayerPawn
// Size: 0x28(Inherited: 0x28) 
struct UConZPlayerPawn : public UInterface
{

}; 



// Class ConZ.PrisonerResponseIdle_NeedToUrinate
// Size: 0x98(Inherited: 0x98) 
struct UPrisonerResponseIdle_NeedToUrinate : public UPrisonerResponseIdle
{

}; 



// Class ConZ.ConZPlayerState
// Size: 0x330(Inherited: 0x320) 
struct AConZPlayerState : public APlayerState
{
	char pad_800[16];  // 0x320(0x10)

}; 



// Class ConZ.PrisonerActionStartCarryingItem
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionStartCarryingItem : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.ConZReverbComponent
// Size: 0x2A0(Inherited: 0x280) 
struct UConZReverbComponent : public UAkLateReverbComponent
{
	struct UAkAuxBus* IndoorSmallAuxBus;  // 0x280(0x8)
	struct UAkAuxBus* IndoorMediumAuxBus;  // 0x288(0x8)
	struct UAkAuxBus* IndoorLargeAuxBus;  // 0x290(0x8)
	struct UAkAuxBus* OutdoorLargeAuxBus;  // 0x298(0x8)

}; 



// Class ConZ.PrisonerBodySymptom_Leukopenia
// Size: 0xC0(Inherited: 0xB8) 
struct UPrisonerBodySymptom_Leukopenia : public UPrisonerBodySymptom
{
	float _maxSeverity;  // 0xB8(0x4)
	float _maxSeverityImmuneSystemEfficiencyModifier;  // 0xBC(0x4)

}; 



// Class ConZ.PrisonerActionStopRestingDescription
// Size: 0x38(Inherited: 0x38) 
struct UPrisonerActionStopRestingDescription : public UPrisonerActionDescription
{

}; 



// Class ConZ.ConZReverbVolume
// Size: 0x290(Inherited: 0x290) 
struct AConZReverbVolume : public AAkReverbVolume
{

}; 



// Class ConZ.PrisonerActionInsertArrowDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionInsertArrowDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.ConZSquad
// Size: 0x2C8(Inherited: 0x220) 
struct AConZSquad : public AActor
{
	struct FDbIntegerId squadId;  // 0x220(0x8)
	struct FString SquadName;  // 0x228(0x10)
	struct FString SquadMessage;  // 0x238(0x10)
	struct FString SquadInformation;  // 0x248(0x10)
	struct FConZSquadEmblem SquadEmblem;  // 0x258(0x8)
	char pad_608[32];  // 0x260(0x20)
	struct TArray<struct FConZSquadPendingMember> _pendingMembers;  // 0x280(0x10)
	struct TArray<struct FConZSquadMember> _members;  // 0x290(0x10)
	struct TArray<struct FConZSquadMember> _oldMembers;  // 0x2A0(0x10)
	uint64_t _repEmblem;  // 0x2B0(0x8)
	int32_t _maxAllowedSquadMembers;  // 0x2B8(0x4)
	char pad_700[12];  // 0x2BC(0xC)

	void UpdateMemberStatus(); // Function ConZ.ConZSquad.UpdateMemberStatus
	void UpdateMemberLimit(); // Function ConZ.ConZSquad.UpdateMemberLimit
	void SetMemberRank(struct FDbIntegerId UserProfileId, uint8_t  Rank); // Function ConZ.ConZSquad.SetMemberRank
	void SendMessageToMembers(struct FString Message); // Function ConZ.ConZSquad.SendMessageToMembers
	void RemoveMember(struct FDbIntegerId UserProfileId); // Function ConZ.ConZSquad.RemoveMember
	void PromoteMember(struct FDbIntegerId UserProfileId); // Function ConZ.ConZSquad.PromoteMember
	void OnRep_SquadName(); // Function ConZ.ConZSquad.OnRep_SquadName
	void OnRep_SquadMessage(); // Function ConZ.ConZSquad.OnRep_SquadMessage
	void OnRep_Members(); // Function ConZ.ConZSquad.OnRep_Members
	void OnRep_Emblem(); // Function ConZ.ConZSquad.OnRep_Emblem
	bool IsMemberCountValid(bool includePending); // Function ConZ.ConZSquad.IsMemberCountValid
	bool IsAnyMemberInDanger(); // Function ConZ.ConZSquad.IsAnyMemberInDanger
	bool IsAnyMemberAlive(); // Function ConZ.ConZSquad.IsAnyMemberAlive
	void InviteMember(struct FDbIntegerId UserProfileId); // Function ConZ.ConZSquad.InviteMember
	bool HasMember(struct FDbIntegerId UserProfileId, bool includePending); // Function ConZ.ConZSquad.HasMember
	struct FDbIntegerId GetSuccessorForMember(struct FDbIntegerId UserProfileId); // Function ConZ.ConZSquad.GetSuccessorForMember
	struct TArray<struct FConZSquadMember> GetOnlineMembers(); // Function ConZ.ConZSquad.GetOnlineMembers
	int32_t GetOnlineMemberCount(); // Function ConZ.ConZSquad.GetOnlineMemberCount
	struct TArray<struct FConZSquadMember> GetMembers(); // Function ConZ.ConZSquad.GetMembers
	uint8_t  GetMemberRank(struct FDbIntegerId UserProfileId); // Function ConZ.ConZSquad.GetMemberRank
	uint8_t  GetMemberLockAccessibility(struct FDbIntegerId UserProfileId); // Function ConZ.ConZSquad.GetMemberLockAccessibility
	int32_t GetMemberCount(bool includePending); // Function ConZ.ConZSquad.GetMemberCount
	struct FConZSquadMember GetMember(struct FDbIntegerId UserProfileId); // Function ConZ.ConZSquad.GetMember
	int32_t GetMaxAllowedMemberCount(); // Function ConZ.ConZSquad.GetMaxAllowedMemberCount
	struct FDbIntegerId GetLeader(); // Function ConZ.ConZSquad.GetLeader
	void GenerateName(); // Function ConZ.ConZSquad.GenerateName
	void GenerateMessage(); // Function ConZ.ConZSquad.GenerateMessage
	void GenerateInformation(); // Function ConZ.ConZSquad.GenerateInformation
	void GenerateEmblem(); // Function ConZ.ConZSquad.GenerateEmblem
	void DemoteMember(struct FDbIntegerId UserProfileId); // Function ConZ.ConZSquad.DemoteMember
	bool CanMemberRecruitMembers(struct FDbIntegerId UserProfileId); // Function ConZ.ConZSquad.CanMemberRecruitMembers
	bool CanMemberPromoteRank(struct FDbIntegerId UserProfileId, uint8_t  Rank); // Function ConZ.ConZSquad.CanMemberPromoteRank
	bool CanMemberKickRank(struct FDbIntegerId UserProfileId, uint8_t  Rank); // Function ConZ.ConZSquad.CanMemberKickRank
	bool CanMemberEditName(struct FDbIntegerId UserProfileId); // Function ConZ.ConZSquad.CanMemberEditName
	bool CanMemberEditMessage(struct FDbIntegerId UserProfileId); // Function ConZ.ConZSquad.CanMemberEditMessage
	bool CanMemberEditInformation(struct FDbIntegerId UserProfileId); // Function ConZ.ConZSquad.CanMemberEditInformation
	bool CanMemberEditEmblem(struct FDbIntegerId UserProfileId); // Function ConZ.ConZSquad.CanMemberEditEmblem
	bool CanMemberDemoteRank(struct FDbIntegerId UserProfileId, uint8_t  Rank); // Function ConZ.ConZSquad.CanMemberDemoteRank
	void AddMember(struct FDbIntegerId UserProfileId, struct FString UserId, uint8_t  Rank); // Function ConZ.ConZSquad.AddMember
}; 



// Class ConZ.ConZStandardButton
// Size: 0x2C8(Inherited: 0x260) 
struct UConZStandardButton : public UUserWidget
{
	char pad_608[80];  // 0x260(0x50)
	struct UButton* MainButton;  // 0x2B0(0x8)
	struct UTextBlock* TextBlock_1;  // 0x2B8(0x8)
	char pad_704_1 : 7;  // 0x2C0(0x1)
	bool OverridesHighlight : 1;  // 0x2C0(0x1)
	char pad_705[7];  // 0x2C1(0x7)

	void TriggerButton(); // Function ConZ.ConZStandardButton.TriggerButton
	void SynchronizePropertiesInBlueprint(); // Function ConZ.ConZStandardButton.SynchronizePropertiesInBlueprint
	void SetTextInternal(struct FText& Text); // Function ConZ.ConZStandardButton.SetTextInternal
	void SetFontSize(int32_t FontSize); // Function ConZ.ConZStandardButton.SetFontSize
}; 



// Class ConZ.ConZVehicleAnimInstance
// Size: 0x300(Inherited: 0x2C0) 
struct UConZVehicleAnimInstance : public UAnimInstance
{
	uint8_t  EngineState;  // 0x2B8(0x1)
	char pad_705_1 : 7;  // 0x2C1(0x1)
	bool IsEngineRunning : 1;  // 0x2B9(0x1)
	float EngineRpm;  // 0x2BC(0x4)
	float EngineRpmInterpSpeed;  // 0x2C0(0x4)
	float Speed;  // 0x2C4(0x4)
	float SpeedKph;  // 0x2C8(0x4)
	float MaxSteeringWheelSteerAngle;  // 0x2CC(0x4)
	float SteeringWheelSteerAngleInterpSpeed;  // 0x2D0(0x4)
	float CurrentSteeringWheelSteerAngle;  // 0x2D4(0x4)
	struct TArray<float> DoorOpenPercentage;  // 0x2D8(0x10)
	struct TArray<float> DoorWindowOpenPercentage;  // 0x2E8(0x10)
	char pad_766[2];  // 0x2FE(0x2)

}; 



// Class ConZ.ConZWaterSpline
// Size: 0x2B8(Inherited: 0x220) 
struct AConZWaterSpline : public AActor
{
	struct USceneComponent* SceneComponent;  // 0x220(0x8)
	struct USplineComponent* SplineComponent;  // 0x228(0x8)
	struct UStaticMeshComponent* SurfaceMeshComponent;  // 0x230(0x8)
	struct UStaticMeshComponent* SubsurfaceMeshComponent;  // 0x238(0x8)
	char pad_576_1 : 7;  // 0x240(0x1)
	bool DrawDebug : 1;  // 0x240(0x1)
	char pad_577[3];  // 0x241(0x3)
	int32_t SelectRangeStart;  // 0x244(0x4)
	int32_t SelectRangeEnd;  // 0x248(0x4)
	char pad_588_1 : 7;  // 0x24C(0x1)
	bool SelectRange : 1;  // 0x24C(0x1)
	char pad_589_1 : 7;  // 0x24D(0x1)
	bool FlattenZ : 1;  // 0x24D(0x1)
	char pad_590[2];  // 0x24E(0x2)
	struct TArray<struct FConZWaterSplineControlPoint> ControlPoints;  // 0x250(0x10)
	float MaxDepth;  // 0x260(0x4)
	char pad_612[4];  // 0x264(0x4)
	struct UStaticMesh* SurfaceMesh;  // 0x268(0x8)
	struct UStaticMesh* SubsurfaceMesh;  // 0x270(0x8)
	struct UMaterialInterface* SurfaceMeshMaterialOverride;  // 0x278(0x8)
	struct UMaterialInterface* SubsurfaceMeshMaterialOverride;  // 0x280(0x8)
	struct UMaterialInterface* UnderwaterPostProcessing;  // 0x288(0x8)
	struct TArray<struct UAssetUserData*> SurfaceMeshUserData;  // 0x290(0x10)
	struct TArray<struct FConZGerstnerWavesParameters> GerstnerWavesParameters;  // 0x2A0(0x10)
	char pad_688[8];  // 0x2B0(0x8)

}; 



// Class ConZ.WeatherAmbientSounds
// Size: 0x258(Inherited: 0x220) 
struct AWeatherAmbientSounds : public AActor
{
	float WeatherRTPCsUpdateInterval;  // 0x220(0x4)
	float TimeOfDayRTPCUpdateInterval;  // 0x224(0x4)
	float TimeOfDayRTPCInterpolationSpeed;  // 0x228(0x4)
	char pad_556[4];  // 0x22C(0x4)
	struct UAkAudioEvent* RainAudioEvent;  // 0x230(0x8)
	struct UAkAudioEvent* WindAudioEvent;  // 0x238(0x8)
	char pad_576[24];  // 0x240(0x18)

}; 



// Class ConZ.ConZWaterSplineIsland
// Size: 0x2B8(Inherited: 0x2B8) 
struct AConZWaterSplineIsland : public AConZWaterSpline
{

}; 



// Class ConZ.TrapItem
// Size: 0xA60(Inherited: 0x910) 
struct ATrapItem : public AItem
{
	char pad_2320[48];  // 0x910(0x30)
	struct UBuriableTrapItemComponent* _buriableTrapItemComponent;  // 0x940(0x8)
	uint8_t  _trapType;  // 0x948(0x1)
	char pad_2377[3];  // 0x949(0x3)
	float _autoDestroyTimeWhenArmed;  // 0x94C(0x4)
	float _autoDestroyTimeWhenOwnerless;  // 0x950(0x4)
	char pad_2388_1 : 7;  // 0x954(0x1)
	bool _destroyAfterTriggered : 1;  // 0x954(0x1)
	char pad_2389[3];  // 0x955(0x3)
	float _destroyDelay;  // 0x958(0x4)
	char pad_2396_1 : 7;  // 0x95C(0x1)
	bool _canEverBeRefueled : 1;  // 0x95C(0x1)
	char pad_2397[3];  // 0x95D(0x3)
	struct UTrapRefuelItemTag* _refuelItemTag;  // 0x960(0x8)
	struct FVector _triggerForwardVector;  // 0x968(0xC)
	float _ragdollDuration;  // 0x974(0x4)
	char pad_2424_1 : 7;  // 0x978(0x1)
	bool _isArmedByDefault : 1;  // 0x978(0x1)
	char pad_2425_1 : 7;  // 0x979(0x1)
	bool _shouldApplyPhysicalDamage : 1;  // 0x979(0x1)
	char pad_2426[2];  // 0x97A(0x2)
	struct FBox _physicalDamageBoundsBox;  // 0x97C(0x1C)
	float _actorDestructionDelay;  // 0x998(0x4)
	int32_t _numRemainingDefuseAttempts;  // 0x99C(0x4)
	char pad_2464_1 : 7;  // 0x9A0(0x1)
	bool _numRemainingDefuseAttemptsDependsOnSkill : 1;  // 0x9A0(0x1)
	char pad_2465_1 : 7;  // 0x9A1(0x1)
	bool _logTrapTriggered : 1;  // 0x9A1(0x1)
	char pad_2466_1 : 7;  // 0x9A2(0x1)
	bool _hasFixedTrigger : 1;  // 0x9A2(0x1)
	char pad_2467[1];  // 0x9A3(0x1)
	float _minDamageForTrigger;  // 0x9A4(0x4)
	char pad_2472_1 : 7;  // 0x9A8(0x1)
	bool _triggeredByRadialDamage : 1;  // 0x9A8(0x1)
	char pad_2473_1 : 7;  // 0x9A9(0x1)
	bool _triggerableWhenBuried : 1;  // 0x9A9(0x1)
	char pad_2474[2];  // 0x9AA(0x2)
	float _maxTriggerAngle;  // 0x9AC(0x4)
	char pad_2480_1 : 7;  // 0x9B0(0x1)
	bool _canEverShowTriggerVisuals : 1;  // 0x9B0(0x1)
	char pad_2481[15];  // 0x9B1(0xF)
	struct FTransform _triggerVisualTransform;  // 0x9C0(0x30)
	AMinigame* _minigameClass;  // 0x9F0(0x8)
	UBaseItemTag* _minigameToolTag;  // 0x9F8(0x8)
	char pad_2560[1];  // 0xA00(0x1)
	char pad_2561_1 : 7;  // 0xA01(0x1)
	bool _isDestroyed : 1;  // 0xA01(0x1)
	char pad_2562[30];  // 0xA02(0x1E)
	char pad_2592_1 : 7;  // 0xA20(0x1)
	bool _isArmed : 1;  // 0xA20(0x1)
	char pad_2593_1 : 7;  // 0xA21(0x1)
	bool _wasTriggered : 1;  // 0xA21(0x1)
	char pad_2594_1 : 7;  // 0xA22(0x1)
	bool _canBeTriggered : 1;  // 0xA22(0x1)
	char pad_2595[17];  // 0xA23(0x11)
	uint8_t  _currentTrigger;  // 0xA34(0x1)
	char pad_2613[3];  // 0xA35(0x3)
	struct FDbIntegerId _lastTriggerOwner;  // 0xA38(0x8)
	float _quality;  // 0xA40(0x4)
	char pad_2628[28];  // 0xA44(0x1C)

	void OnTriggerEvent(struct FTriggeredEventData& eventData); // Function ConZ.TrapItem.OnTriggerEvent
	void OnTrapDestroyTimer(); // Function ConZ.TrapItem.OnTrapDestroyTimer
	void OnRep_WasTriggered(); // Function ConZ.TrapItem.OnRep_WasTriggered
	void OnRep_LastTriggerOwner(); // Function ConZ.TrapItem.OnRep_LastTriggerOwner
	void OnRep_IsDestroyed(); // Function ConZ.TrapItem.OnRep_IsDestroyed
	void OnRep_IsArmed(); // Function ConZ.TrapItem.OnRep_IsArmed
	void OnRep_CurrentTrigger(); // Function ConZ.TrapItem.OnRep_CurrentTrigger
	void OnLocalPrisonerSpawned(struct APrisoner* Prisoner); // Function ConZ.TrapItem.OnLocalPrisonerSpawned
	void OnActorDestroyTimer(); // Function ConZ.TrapItem.OnActorDestroyTimer
	void NetMulticast_TriggerTrap(struct FTrapTriggerParams Params); // Function ConZ.TrapItem.NetMulticast_TriggerTrap
	void Multicast_SetOnlyManualTrigger(bool onlyManualTrigger); // Function ConZ.TrapItem.Multicast_SetOnlyManualTrigger
	bool IsBuried(); // Function ConZ.TrapItem.IsBuried
	bool IsArmed(); // Function ConZ.TrapItem.IsArmed
	void BP_OnTriggered(); // Function ConZ.TrapItem.BP_OnTriggered
	void BP_OnRefueled(); // Function ConZ.TrapItem.BP_OnRefueled
	void BP_OnDisarmed(); // Function ConZ.TrapItem.BP_OnDisarmed
	void BP_OnArmed(); // Function ConZ.TrapItem.BP_OnArmed
}; 



// Class ConZ.ConZWaterSplineLake
// Size: 0x2C0(Inherited: 0x2B8) 
struct AConZWaterSplineLake : public AConZWaterSpline
{
	float SurfaceMeshCullingDistance;  // 0x2B8(0x4)
	char pad_700[4];  // 0x2BC(0x4)

}; 



// Class ConZ.CriminalRecord
// Size: 0x370(Inherited: 0x260) 
struct UCriminalRecord : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	UCriminalRecordSkill* _criminalRecordSkillClass;  // 0x290(0x8)
	struct UCriminalRecordText* _textName;  // 0x298(0x8)
	struct UCriminalRecordText* _textAliases;  // 0x2A0(0x8)
	struct UCriminalRecordText* _textCrime;  // 0x2A8(0x8)
	struct UCriminalRecordText* _textNumber;  // 0x2B0(0x8)
	struct UCriminalRecordText* _textDateOfArrest;  // 0x2B8(0x8)
	struct UCriminalRecordText* _textCountry;  // 0x2C0(0x8)
	struct UCriminalRecordText* _textCity;  // 0x2C8(0x8)
	struct UCriminalRecordText* _textGender;  // 0x2D0(0x8)
	struct UCriminalRecordText* _textHeight;  // 0x2D8(0x8)
	struct UCriminalRecordText* _textWeight;  // 0x2E0(0x8)
	struct UCriminalRecordText* _textAge;  // 0x2E8(0x8)
	struct UCriminalRecordText* _textBirthDate;  // 0x2F0(0x8)
	struct UCriminalRecordText* _textEyeColor;  // 0x2F8(0x8)
	struct UCriminalRecordText* _textHairColor;  // 0x300(0x8)
	struct UCriminalRecordText* _textFlaws;  // 0x308(0x8)
	struct UCriminalRecordText* _textServerLocation;  // 0x310(0x8)
	struct UCriminalRecordText* _textBuildAndOccupation;  // 0x318(0x8)
	struct UCriminalRecordText* _textStrengthCategory;  // 0x320(0x8)
	struct UVerticalBox* _verticalBoxStrengthSkills;  // 0x328(0x8)
	struct UCriminalRecordText* _textConstitutionCategory;  // 0x330(0x8)
	struct UVerticalBox* _verticalBoxConstitutionSkills;  // 0x338(0x8)
	struct UCriminalRecordText* _textDexterityCategory;  // 0x340(0x8)
	struct UVerticalBox* _verticalBoxDexteritySkills;  // 0x348(0x8)
	struct UCriminalRecordText* _textIntelligenceCategory;  // 0x350(0x8)
	struct UVerticalBox* _verticalBoxIntelligenceSkills;  // 0x358(0x8)
	struct UConZStandardButton* _buttonCancel;  // 0x360(0x8)
	struct UConZStandardButton* _buttonOk;  // 0x368(0x8)

	void OnButtonOkClicked(); // Function ConZ.CriminalRecord.OnButtonOkClicked
	void OnButtonCancelClicked(); // Function ConZ.CriminalRecord.OnButtonCancelClicked
}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_BlurredVision
// Size: 0x1D8(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_BlurredVision : public UPrisonerBodyConditionOrSymptomSideEffect
{
	UPrisonerBodySymptom_BlurredVision* _symptomClass;  // 0x30(0x8)
	struct UPrisonerBodySymptomCause_BlurredVision* _symptomCause;  // 0x38(0x8)
	struct FRuntimeFloatCurve _intensityVsSeverity;  // 0x40(0x88)
	struct FRuntimeFloatCurve _offsetVsSeverity;  // 0xC8(0x88)
	struct FRuntimeFloatCurve _falloffVsSeverity;  // 0x150(0x88)

}; 



// Class ConZ.ConZWaterSplineRegistry
// Size: 0x228(Inherited: 0x220) 
struct AConZWaterSplineRegistry : public AActor
{
	char pad_544[8];  // 0x220(0x8)

	struct FWaterQueryResult QueryWaterSplines(struct FVector Location); // Function ConZ.ConZWaterSplineRegistry.QueryWaterSplines
	void DrawQueryResult(struct FWaterQueryResult Result, float Duration); // Function ConZ.ConZWaterSplineRegistry.DrawQueryResult
}; 



// Class ConZ.PrisonerBodyEffectUIData
// Size: 0x38(Inherited: 0x28) 
struct UPrisonerBodyEffectUIData : public UObject
{
	char pad_40[8];  // 0x28(0x8)
	UPrisonerBodyEffect* _bodyEffectClass;  // 0x30(0x8)

}; 



// Class ConZ.CookingUtilityUIDataAsset
// Size: 0x80(Inherited: 0x30) 
struct UCookingUtilityUIDataAsset : public UDataAsset
{
	struct FText Name;  // 0x30(0x18)
	char pad_72_1 : 7;  // 0x48(0x1)
	bool CanAddRecipeTo : 1;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	struct TSoftObjectPtr<UTexture2D> Icon;  // 0x50(0x28)
	uint8_t  CookingTemperatureControlType;  // 0x78(0x1)
	char pad_121[7];  // 0x79(0x7)

}; 



// Class ConZ.ConZWaterSplineRiver
// Size: 0x310(Inherited: 0x2B8) 
struct AConZWaterSplineRiver : public AConZWaterSpline
{
	struct UStaticMesh* SplineMesh;  // 0x2B8(0x8)
	struct UMaterialInterface* SplineMeshMaterialOverride;  // 0x2C0(0x8)
	float SplineMeshCullingDistance;  // 0x2C8(0x4)
	char pad_716_1 : 7;  // 0x2CC(0x1)
	bool ClearRoll : 1;  // 0x2CC(0x1)
	char pad_717_1 : 7;  // 0x2CD(0x1)
	bool AutoCalculateMeshCount : 1;  // 0x2CD(0x1)
	char pad_718[2];  // 0x2CE(0x2)
	int32_t SplineMeshCount;  // 0x2D0(0x4)
	char pad_724_1 : 7;  // 0x2D4(0x1)
	bool RefreshMesh : 1;  // 0x2D4(0x1)
	char pad_725_1 : 7;  // 0x2D5(0x1)
	bool ArmBatchEditWidth : 1;  // 0x2D5(0x1)
	char pad_726[2];  // 0x2D6(0x2)
	float BatchEditWidth;  // 0x2D8(0x4)
	char pad_732_1 : 7;  // 0x2DC(0x1)
	bool ArmBatchEditMaxDepth : 1;  // 0x2DC(0x1)
	char pad_733[3];  // 0x2DD(0x3)
	float BatchEditMaxDepth;  // 0x2E0(0x4)
	char pad_740_1 : 7;  // 0x2E4(0x1)
	bool ArmBatchEditSpeed : 1;  // 0x2E4(0x1)
	char pad_741[3];  // 0x2E5(0x3)
	float BatchEditSpeed;  // 0x2E8(0x4)
	char pad_748_1 : 7;  // 0x2EC(0x1)
	bool ArmBatchEditOpacity : 1;  // 0x2EC(0x1)
	char pad_749[3];  // 0x2ED(0x3)
	float BatchEditOpacity;  // 0x2F0(0x4)
	char pad_756_1 : 7;  // 0x2F4(0x1)
	bool ArmBatchEdit : 1;  // 0x2F4(0x1)
	char pad_757_1 : 7;  // 0x2F5(0x1)
	bool BatchEditReplace : 1;  // 0x2F5(0x1)
	char pad_758_1 : 7;  // 0x2F6(0x1)
	bool BatchEditAdd : 1;  // 0x2F6(0x1)
	char pad_759_1 : 7;  // 0x2F7(0x1)
	bool BatchEditMultiply : 1;  // 0x2F7(0x1)
	char pad_760_1 : 7;  // 0x2F8(0x1)
	bool BatchEditFlattenZ : 1;  // 0x2F8(0x1)
	char pad_761[7];  // 0x2F9(0x7)
	struct TArray<struct USplineMeshComponent*> _splineMeshComponents;  // 0x300(0x10)

}; 



// Class ConZ.CookedFoodItemEntitySave
// Size: 0x88(Inherited: 0x28) 
struct UCookedFoodItemEntitySave : public UObject
{
	float CookAmount;  // 0x28(0x4)
	float ExhaustionBonus;  // 0x2C(0x4)
	uint8_t  CookQuality;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct TMap<struct FPrimaryAssetId, float> OptionalResourceTypes;  // 0x38(0x50)

}; 



// Class ConZ.CookedFoodItemEntitySetup
// Size: 0x88(Inherited: 0x88) 
struct UCookedFoodItemEntitySetup : public UFoodItemEntitySetup
{

}; 



// Class ConZ.PrisonerBodyCondition_Abrasions
// Size: 0x6E8(Inherited: 0xC0) 
struct UPrisonerBodyCondition_Abrasions : public UPrisonerBodyCondition_Injury
{
	char pad_192[8];  // 0xC0(0x8)
	struct FFloatInterval _baseAbrasionsRaiseRateVsConstitution;  // 0xC8(0x8)
	float _abrasionsWeightFactor;  // 0xD0(0x4)
	float _abrasionsFallRate;  // 0xD4(0x4)
	struct FRuntimeFloatCurve _severityVsAbrasions;  // 0xD8(0x88)
	float _abrasions;  // 0x160(0x4)
	float _abrasionsAtRecoveryStart;  // 0x164(0x4)
	float _bandagesProtection;  // 0x168(0x4)
	char pad_364[4];  // 0x16C(0x4)
	struct FBandages _bandages;  // 0x170(0x18)
	UNotificationDescription* _bandagesProtectionDecreaseNotification;  // 0x188(0x8)
	float _bandagesProtectionDecreaseNotificationCooldown;  // 0x190(0x4)
	char pad_404[4];  // 0x194(0x4)
	struct FRuntimeFloatCurve _stabilizationDurationVsSeverity;  // 0x198(0x88)
	float _stabilizationDurationReductionFromPhysician;  // 0x220(0x4)
	char pad_548[4];  // 0x224(0x4)
	struct FRuntimeFloatCurve _recoveryDurationVsSeverity;  // 0x228(0x88)
	struct FRuntimeFloatCurve _bleedingSeverityVsSeverity;  // 0x2B0(0x88)
	UPrisonerBodySymptom_Bleeding* _bleedingSymptomClass;  // 0x338(0x8)
	struct UPrisonerBodySymptomCause_Bleeding* _bleedingSymptomCause;  // 0x340(0x8)
	float _bloodLoss;  // 0x348(0x4)
	float _bloodLossToRecover;  // 0x34C(0x4)
	struct UAkAudioEvent* _painGruntAudioEvent;  // 0x350(0x8)
	struct FRuntimeFloatCurve _painGruntIntervalVsSeverity;  // 0x358(0x88)
	char pad_992[8];  // 0x3E0(0x8)
	UPrisonerBodySymptom_Pain* _painSymptomClass;  // 0x3E8(0x8)
	struct UPrisonerBodySymptomCause_Pain* _painSymptomCause;  // 0x3F0(0x8)
	struct FRuntimeFloatCurve _painSymptomOverallIntensityVsSeverity;  // 0x3F8(0x88)
	struct FRuntimeFloatCurve _painSymptomLimpingIntensityVsSeverity;  // 0x480(0x88)
	struct FPrisonerMaxMovementPaceVsSeverity _painSymptomMaxMovementPaceVsSeverity;  // 0x508(0x10)
	struct FRuntimeFloatCurve _painSymptomMovementSpeedModifierVsSeverity;  // 0x518(0x88)
	uint8_t  _state;  // 0x5A0(0x1)
	char pad_1441[7];  // 0x5A1(0x7)
	float _timerElapsedTime;  // 0x5A8(0x4)
	float _timerDuration;  // 0x5AC(0x4)
	float _disinfectantAmount;  // 0x5B0(0x4)
	char pad_1460[4];  // 0x5B4(0x4)
	UPrisonerBodyCondition_Infection* _infectionClass;  // 0x5B8(0x8)
	struct UPrisonerBodyCondition_Infection* _infection;  // 0x5C0(0x8)
	float _contaminationIncreaseBaseRate;  // 0x5C8(0x4)
	char pad_1484[4];  // 0x5CC(0x4)
	struct FRuntimeFloatCurve _contaminationIncreaseRateMultiplierVsSeverity;  // 0x5D0(0x88)
	struct FRuntimeFloatCurve _contaminationIncreaseRateMultiplierVsAsepsis;  // 0x658(0x88)
	float _disinfectantContaminationDecreaseRate;  // 0x6E0(0x4)
	float _disinfectantEvaporationRate;  // 0x6E4(0x4)

}; 



// Class ConZ.CookingControlButton
// Size: 0x338(Inherited: 0x260) 
struct UCookingControlButton : public UUserWidget
{
	char pad_608[80];  // 0x260(0x50)
	struct UImage* _buttonBackground;  // 0x2B0(0x8)
	struct UImage* _timerBorder;  // 0x2B8(0x8)
	struct UWidgetSwitcher* _visualSwitcher;  // 0x2C0(0x8)
	struct UTextBlock* _buttonTimer;  // 0x2C8(0x8)
	struct UCookingTextTooltip* _cookingTextTooltip;  // 0x2D0(0x8)
	UCookingTextTooltip* _cookingTextTooltipClass;  // 0x2D8(0x8)
	uint8_t  _controlButtonState;  // 0x2E0(0x1)
	char pad_737[7];  // 0x2E1(0x7)
	struct TMap<uint8_t , struct FHoverClickButtonVisualInfo> _hoverAndClickVisualsMap;  // 0x2E8(0x50)

}; 



// Class ConZ.CookingAddRecipeButton
// Size: 0x2E8(Inherited: 0x260) 
struct UCookingAddRecipeButton : public UUserWidget
{
	char pad_608[80];  // 0x260(0x50)
	struct UImage* _addRecipeIcon;  // 0x2B0(0x8)
	struct UTextBlock* _emptySlotText;  // 0x2B8(0x8)
	struct UTextBlock* _heatSourceWarningText;  // 0x2C0(0x8)
	struct FLinearColor _disabledColor;  // 0x2C8(0x10)
	struct FLinearColor _enabledColor;  // 0x2D8(0x10)

}; 



// Class ConZ.CookingFinishedWidget
// Size: 0x3A8(Inherited: 0x260) 
struct UCookingFinishedWidget : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct UImage* _productImage;  // 0x270(0x8)
	struct UTextBlock* _ratingText;  // 0x278(0x8)
	struct UHorizontalBox* _starsHorizontalBox;  // 0x280(0x8)
	struct UTextBlock* _qualityDescription;  // 0x288(0x8)
	struct UButton* _grabButton;  // 0x290(0x8)
	struct FSlateBrush _activeStarBrush;  // 0x298(0x88)
	struct FSlateBrush _inactiveStarBrush;  // 0x320(0x88)

	void OnGrabButtonClicked(); // Function ConZ.CookingFinishedWidget.OnGrabButtonClicked
}; 



// Class ConZ.WheelBarrowDriverCapsuleComponent
// Size: 0x4A0(Inherited: 0x470) 
struct UWheelBarrowDriverCapsuleComponent : public UCapsuleComponent
{
	char pad_1136[48];  // 0x470(0x30)

}; 



// Class ConZ.CookingHeatSourceButton
// Size: 0x2C0(Inherited: 0x260) 
struct UCookingHeatSourceButton : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct USizeBox* _mainSizeBox;  // 0x270(0x8)
	struct UImage* _heatSourceIcon;  // 0x278(0x8)
	struct UImage* _borderImage;  // 0x280(0x8)
	char pad_648_1 : 7;  // 0x288(0x1)
	bool _selected : 1;  // 0x288(0x1)
	char pad_649[3];  // 0x289(0x3)
	struct FVector2D _selectedButtonSize;  // 0x28C(0x8)
	struct FVector2D _deselectedButtonSize;  // 0x294(0x8)
	struct FLinearColor _selectedBorderColor;  // 0x29C(0x10)
	struct FLinearColor _deselectedBorderColor;  // 0x2AC(0x10)
	char pad_700[4];  // 0x2BC(0x4)

}; 



// Class ConZ.CookingInfoButton
// Size: 0x2B8(Inherited: 0x260) 
struct UCookingInfoButton : public UUserWidget
{
	char pad_608[80];  // 0x260(0x50)
	struct UWidgetAnimation* _pulseAnimation;  // 0x2B0(0x8)

}; 



// Class ConZ.CookingIngredientTooltip
// Size: 0x270(Inherited: 0x260) 
struct UCookingIngredientTooltip : public UUserWidget
{
	struct UTextBlock* _ingredientName;  // 0x260(0x8)
	struct UTextBlock* _ingredientNecessity;  // 0x268(0x8)

}; 



// Class ConZ.CookingManager
// Size: 0x698(Inherited: 0x220) 
struct ACookingManager : public AActor
{
	struct FCookingUtilitySlotArray _cookingUtilitySlots;  // 0x220(0x1C0)
	char pad_992[112];  // 0x3E0(0x70)
	struct FMainPointSnappedUtilities _mainPointSnappedCookingUtilities;  // 0x450(0xC8)
	char pad_1304[240];  // 0x518(0xF0)
	float _netRelevancyRadius;  // 0x608(0x4)
	float _newClientCheckTimeInterval;  // 0x60C(0x4)
	float _databaseUpdateInterval;  // 0x610(0x4)
	float _utilitySnapDistance;  // 0x614(0x4)
	float _maxMainPointSnapDistance;  // 0x618(0x4)
	float _proxyMeshSpawnRadius;  // 0x61C(0x4)
	float _proxyMeshReleaseRadius;  // 0x620(0x4)
	char pad_1572[36];  // 0x624(0x24)
	struct TMap<struct FDbIntegerId, struct FCookingFoodProxyMesh> _proxyMeshMap;  // 0x648(0x50)

	void OnRep_MainPointSnap(); // Function ConZ.CookingManager.OnRep_MainPointSnap
}; 



// Class ConZ.CookingProgressWidget
// Size: 0x280(Inherited: 0x260) 
struct UCookingProgressWidget : public UUserWidget
{
	struct URetainerBox* _progressImageRetainerBox;  // 0x260(0x8)
	struct UImage* _progressImage;  // 0x268(0x8)
	struct URichTextBlock* _cookingTimeText;  // 0x270(0x8)
	struct URichTextBlock* _cookingTemperatureText;  // 0x278(0x8)

}; 



// Class ConZ.InsertCartridge
// Size: 0xA0(Inherited: 0x90) 
struct UInsertCartridge : public UWeaponActionReloadSequence
{
	struct FName MontageEndSectionName;  // 0x90(0x8)
	char pad_152[8];  // 0x98(0x8)

}; 



// Class ConZ.FoliageInstancedGrass
// Size: 0x6B0(Inherited: 0x6B0) 
struct UFoliageInstancedGrass : public UFoliageInstancedStaticMeshComponent
{

}; 



// Class ConZ.CookingRecipe
// Size: 0x1A0(Inherited: 0x30) 
struct UCookingRecipe : public UPrimaryDataAsset
{
	struct FText RecipeName;  // 0x30(0x18)
	struct FText Description;  // 0x48(0x18)
	struct TArray<struct FRecipeIngredient> MainIngredients;  // 0x60(0x10)
	struct TArray<struct FRecipeIngredient> OptionalIngredients;  // 0x70(0x10)
	struct FCookingResult ResultingFood;  // 0x80(0x28)
	float CookingTemperature;  // 0xA8(0x4)
	float CookingTime;  // 0xAC(0x4)
	struct FGameplayTagContainer Utility;  // 0xB0(0x20)
	struct FGameplayTagContainer Category;  // 0xD0(0x20)
	struct TSoftObjectPtr<UStaticMesh> CookProgressMesh;  // 0xF0(0x28)
	struct TSoftObjectPtr<UMaterialInterface> CookProgressMeshMaterial;  // 0x118(0x28)
	int32_t CookProgressMeshMaterialSlot;  // 0x140(0x4)
	char pad_324_1 : 7;  // 0x144(0x1)
	bool UseMeshRelativeTransform : 1;  // 0x144(0x1)
	char pad_325[11];  // 0x145(0xB)
	struct FTransform CookProgressMeshRelativeTransform;  // 0x150(0x30)
	char pad_384_1 : 7;  // 0x180(0x1)
	bool CookProgressMeshFacesHeatsource : 1;  // 0x180(0x1)
	char pad_385[7];  // 0x181(0x7)
	struct UAkAudioEvent* StartCookingEvent;  // 0x188(0x8)
	struct UAkAudioEvent* StopCookingEvent;  // 0x190(0x8)
	char pad_408[8];  // 0x198(0x8)

}; 



// Class ConZ.UPrisonerActionCleanDescription
// Size: 0x50(Inherited: 0x38) 
struct UUPrisonerActionCleanDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.CookingRecipeCollectionItemTag
// Size: 0x40(Inherited: 0x30) 
struct UCookingRecipeCollectionItemTag : public UBaseItemTag
{
	struct TArray<struct FPrimaryAssetId> _recipes;  // 0x30(0x10)

}; 



// Class ConZ.CookingRecipeDetailsWidget
// Size: 0x308(Inherited: 0x260) 
struct UCookingRecipeDetailsWidget : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	UCookingIngredientInfoWidget* _ingredientInfoWidgetClass;  // 0x278(0x8)
	UPossibleCookingIngredientWidget* _possibleIngredientWidgetClass;  // 0x280(0x8)
	struct UImage* _recipeIcon;  // 0x288(0x8)
	struct UCookingFavouriteButton* _favouritesButton;  // 0x290(0x8)
	struct URichTextBlock* _cookingTimeText;  // 0x298(0x8)
	struct URichTextBlock* _cookingTemperatureText;  // 0x2A0(0x8)
	struct UTextBlock* _recipeTitle;  // 0x2A8(0x8)
	struct UWrapBox* _mainIngredientsWrapBox;  // 0x2B0(0x8)
	struct UVerticalBox* _mainIngredientDetailsVerticalBox;  // 0x2B8(0x8)
	struct UWrapBox* _possibleMainIngredientsWrapBox;  // 0x2C0(0x8)
	struct UWrapBox* _optionalIngredientsWrapBox;  // 0x2C8(0x8)
	struct UVerticalBox* _optionalIngredientDetailsVerticalBox;  // 0x2D0(0x8)
	struct UWrapBox* _possibleOptionalIngredientsWrapBox;  // 0x2D8(0x8)
	struct UTextBlock* _detailedDescriptionText;  // 0x2E0(0x8)
	struct UTextBlock* _cookingUtilities;  // 0x2E8(0x8)
	struct UTextBlock* _cookingTimeEmphasized;  // 0x2F0(0x8)
	struct UTextBlock* _cookingTemperatureEmphasized;  // 0x2F8(0x8)
	char pad_768[8];  // 0x300(0x8)

}; 



// Class ConZ.CookingRecipesPanel
// Size: 0x380(Inherited: 0x260) 
struct UCookingRecipesPanel : public UUserWidget
{
	char pad_608[8];  // 0x260(0x8)
	struct USearchBox* _searchBox;  // 0x268(0x8)
	struct UCookingCategoryDropdown* _cookingCategoryDropdown;  // 0x270(0x8)
	struct UCookingUtilityFilterDropdown* _cookingUtilityFilterDropdown;  // 0x278(0x8)
	struct UCookingFavouriteButton* _filterFavouritesButton;  // 0x280(0x8)
	struct UCookingSortingDropdown* _cookingSortingDropdown;  // 0x288(0x8)
	struct UWidgetSwitcher* _categorySwitcher;  // 0x290(0x8)
	struct UWrapBox* _catResults;  // 0x298(0x8)
	struct UCookingRecipeDetailsWidget* _cookingRecipeDetailsWidget;  // 0x2A0(0x8)
	struct UButton* _btnBack;  // 0x2A8(0x8)
	struct UButton* _btnAddRecipe;  // 0x2B0(0x8)
	char pad_696[16];  // 0x2B8(0x10)
	UCookingRecipeButtonWidget* _cookingRecipeButtonClass;  // 0x2C8(0x8)
	struct FGameplayTag _rootNavigationTag;  // 0x2D0(0x8)
	struct FGameplayTag _resultsNavigationTag;  // 0x2D8(0x8)
	struct FGameplayTag _rootCookingTag;  // 0x2E0(0x8)
	struct FGameplayTag _favouritesCookingTag;  // 0x2E8(0x8)
	char pad_752[144];  // 0x2F0(0x90)

	void OnBackButtonClicked(); // Function ConZ.CookingRecipesPanel.OnBackButtonClicked
	void OnAddRecipeButtonClicked(); // Function ConZ.CookingRecipesPanel.OnAddRecipeButtonClicked
}; 



// Class ConZ.CookingSkill
// Size: 0x178(Inherited: 0xB0) 
struct UCookingSkill : public UIntelligenceSkill
{
	struct TArray<struct FPrimaryAssetId> _recipesKnownByDefault;  // 0xB0(0x10)
	char pad_192[160];  // 0xC0(0xA0)
	float _cookTimeMultiplier_NoSkill;  // 0x160(0x4)
	float _cookTimeMultiplier_Basic;  // 0x164(0x4)
	float _cookTimeMultiplier_Medium;  // 0x168(0x4)
	float _cookTimeMultiplier_Advanced;  // 0x16C(0x4)
	float _cookTimeMultiplier_AboveAdvanced;  // 0x170(0x4)
	char pad_372[4];  // 0x174(0x4)

}; 



// Class ConZ.DamageCustomization
// Size: 0x28(Inherited: 0x28) 
struct UDamageCustomization : public UObject
{

}; 



// Class ConZ.CookingSortingDropdown
// Size: 0x2A8(Inherited: 0x260) 
struct UCookingSortingDropdown : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	USimpleTextDropdownEntry* _textDropdownEntryClass;  // 0x278(0x8)
	UVerticalScrollBoxDropdownContent* _categoryDropdownContentClass;  // 0x280(0x8)
	struct UImage* _icon;  // 0x288(0x8)
	struct UMenuAnchor* _popup;  // 0x290(0x8)
	struct TArray<struct FCookingSortingDropdownEntryData> _cookingSortingDropdownEntries;  // 0x298(0x10)

	struct UUserWidget* CreateContentWidget(); // Function ConZ.CookingSortingDropdown.CreateContentWidget
}; 



// Class ConZ.GrappleActionComponent
// Size: 0xD8(Inherited: 0xB0) 
struct UGrappleActionComponent : public UActorComponent
{
	struct AConZCharacter* _grappler;  // 0xB0(0x8)
	struct APrisoner* _prisonerVictim;  // 0xB8(0x8)
	struct UGrappleActionParameters* _grappleActionParameters;  // 0xC0(0x8)
	char pad_200[16];  // 0xC8(0x10)

}; 



// Class ConZ.DropZoneLocationMarker
// Size: 0x520(Inherited: 0x418) 
struct ADropZoneLocationMarker : public AGameEventLocationMarker
{
	struct FDropZoneParameters DropZoneParameters;  // 0x418(0x2C)
	struct FVector SpawnOffsetA;  // 0x444(0xC)
	struct FVector SpawnOffsetB;  // 0x450(0xC)
	float SpawnRadiusA;  // 0x45C(0x4)
	float SpawnRadiusB;  // 0x460(0x4)
	char pad_1124[12];  // 0x464(0xC)
	struct FTransform CargoDropOffset;  // 0x470(0x30)
	struct FTransform CrateDropOffsetA;  // 0x4A0(0x30)
	struct FTransform CrateDropOffsetB;  // 0x4D0(0x30)
	struct UStaticMeshComponent* CrateAPreviewMesh;  // 0x500(0x8)
	struct UStaticMeshComponent* CrateBPreviewMesh;  // 0x508(0x8)
	struct UStaticMeshComponent* CargoPreviewMesh;  // 0x510(0x8)
	char pad_1304[8];  // 0x518(0x8)

}; 



// Class ConZ.CustomZoneSettingsMap
// Size: 0x2F8(Inherited: 0x260) 
struct UCustomZoneSettingsMap : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UImage* _map;  // 0x278(0x8)
	struct UTextBlock* _infoLeft;  // 0x280(0x8)
	struct UTextBlock* _infoRight;  // 0x288(0x8)
	struct UButton* _buttonAddCircleRegion;  // 0x290(0x8)
	struct UButton* _buttonAddRectangleRegion;  // 0x298(0x8)
	struct UButton* _buttonRemoveRegion;  // 0x2A0(0x8)
	struct FLinearColor _buttonHighlightColor;  // 0x2A8(0x10)
	struct UMaterialInstanceDynamic* _mapMaterial;  // 0x2B8(0x8)
	char pad_704[56];  // 0x2C0(0x38)

}; 



// Class ConZ.CookingTemperatureControlLinearWidget
// Size: 0x298(Inherited: 0x260) 
struct UCookingTemperatureControlLinearWidget : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct URetainerBox* _effectBox;  // 0x278(0x8)
	struct USlider* _temperatureSlider;  // 0x280(0x8)
	struct UOverlay* _temperatureValuesOverlay;  // 0x288(0x8)
	float _minimumVisualValue;  // 0x290(0x4)
	float _maximumVisualValue;  // 0x294(0x4)

	void OnValueChanged(float Value); // Function ConZ.CookingTemperatureControlLinearWidget.OnValueChanged
}; 



// Class ConZ.PrisonerActionCutObjectDescription
// Size: 0x78(Inherited: 0x38) 
struct UPrisonerActionCutObjectDescription : public UPrisonerActionDescription
{
	char pad_56[64];  // 0x38(0x40)

}; 



// Class ConZ.DcxBikeDriverMountSlot
// Size: 0x1E0(Inherited: 0x140) 
struct UDcxBikeDriverMountSlot : public UVehicleBaseMountSlot
{
	struct FName DriverLHandleSocketName;  // 0x140(0x8)
	struct FName DriverRHandleSocketName;  // 0x148(0x8)
	struct FName DriverReverseSeatHandSocketName;  // 0x150(0x8)
	struct UBlendSpace* _forwardIdleAnimation;  // 0x158(0x8)
	struct UAnimSequenceBase* _forwardSteeringAnimation;  // 0x160(0x8)
	struct UAnimSequenceBase* _forwardSteeringAnimationFP;  // 0x168(0x8)
	struct UBlendSpace* _reverseIdleAnimation;  // 0x170(0x8)
	struct UAnimSequenceBase* _reverseSteeringAnimation;  // 0x178(0x8)
	struct UAnimSequenceBase* _reverseSteeringAnimationFP;  // 0x180(0x8)
	struct UAnimSequence* _standUpStartAnimation;  // 0x188(0x8)
	struct UAnimSequence* _standUpLoopAnimation;  // 0x190(0x8)
	struct UAnimSequence* _standUpEndAnimation;  // 0x198(0x8)
	struct UAnimSequence* _startEngineStartAnimation;  // 0x1A0(0x8)
	struct UAnimSequence* _startEngineLoopAnimation;  // 0x1A8(0x8)
	struct UAnimSequence* _startEngineLongLoopAnimation;  // 0x1B0(0x8)
	struct UAnimSequence* _startEngineEndAnimation;  // 0x1B8(0x8)
	struct UAimOffsetBlendSpace* _turnAimOffset;  // 0x1C0(0x8)
	float _playratePerMovementPace[4];  // 0x1C8(0x10)
	char pad_472[8];  // 0x1D8(0x8)

}; 



// Class ConZ.MetabolismSave
// Size: 0x2C8(Inherited: 0x28) 
struct UMetabolismSave : public UObject
{
	float LeanBodyMass;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)
	struct TArray<struct FDigestionItemSave> DigestionItems;  // 0x30(0x10)
	struct TArray<struct FForeignSubstanceSave> ForeignSubstances;  // 0x40(0x10)
	struct FSubstancesData AbsorbedSubstances;  // 0x50(0xD0)
	struct FSubstancesData FecesVolumeInIntestine;  // 0x120(0xD0)
	struct FSubstancesData FecesVolumeInColon;  // 0x1F0(0xD0)
	float UrineVolumeInBladder;  // 0x2C0(0x4)
	char pad_708[4];  // 0x2C4(0x4)

}; 



// Class ConZ.InventoryContainer2D
// Size: 0x148(Inherited: 0xB0) 
struct UInventoryContainer2D : public UActorComponent
{
	char pad_176[8];  // 0xB0(0x8)
	struct FInventoryContainer2DRepData _data;  // 0xB8(0x20)
	struct FInventoryContainer2DRepData _oldData;  // 0xD8(0x20)
	struct TArray<struct UInventoryContainerWidget2*> _widgets;  // 0xF8(0x10)
	struct TScriptInterface<IInventoryNode> _parent;  // 0x108(0x10)
	struct UInventoryContainerWidget2* _widget;  // 0x118(0x8)
	struct TArray<bool> _grid;  // 0x120(0x10)
	struct TArray<bool> _gridDamaged;  // 0x130(0x10)
	char pad_320[8];  // 0x140(0x8)

	void OnRep_Parent(); // Function ConZ.InventoryContainer2D.OnRep_Parent
	void OnRep_Items(struct TArray<struct UObject*> _oldItems); // Function ConZ.InventoryContainer2D.OnRep_Items
	void OnRep_Data(); // Function ConZ.InventoryContainer2D.OnRep_Data
	void OnActorItemDestroyed(struct AActor* Actor); // Function ConZ.InventoryContainer2D.OnActorItemDestroyed
}; 



// Class ConZ.CookingTemperatureControlRadialWidget
// Size: 0x3A8(Inherited: 0x260) 
struct UCookingTemperatureControlRadialWidget : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct UWidgetSwitcher* _dialDetailSwitcher;  // 0x270(0x8)
	struct UOverlay* _exactTemperaturesOverlay;  // 0x278(0x8)
	struct UImage* _dialArrow;  // 0x280(0x8)
	float _rotationSpeedMultiplier;  // 0x288(0x4)
	char pad_652[4];  // 0x28C(0x4)
	struct FSlateBrush _arrowNormalBrush;  // 0x290(0x88)
	struct FSlateBrush _arrowHoveredBrush;  // 0x318(0x88)
	char pad_928[8];  // 0x3A0(0x8)

}; 



// Class ConZ.CookingTextTooltip
// Size: 0x268(Inherited: 0x260) 
struct UCookingTextTooltip : public UUserWidget
{
	struct UTextBlock* _text;  // 0x260(0x8)

}; 



// Class ConZ.CookingUIController
// Size: 0x400(Inherited: 0x28) 
struct UCookingUIController : public UObject
{
	char pad_40[672];  // 0x28(0x2A0)
	float _vicinityRadius;  // 0x2C8(0x4)
	struct FLinearColor _overcookedColor;  // 0x2CC(0x10)
	struct FLinearColor _cookedColor;  // 0x2DC(0x10)
	struct FLinearColor _undercookedColor;  // 0x2EC(0x10)
	char pad_764[244];  // 0x2FC(0xF4)
	float _updateAllRecipeInstanceProgressBarColorsPeriod;  // 0x3F0(0x4)
	char pad_1012[12];  // 0x3F4(0xC)

}; 



// Class ConZ.PrisonerAnimStatics
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerAnimStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.User
// Size: 0x110(Inherited: 0x28) 
struct UUser : public UObject
{
	char pad_40[232];  // 0x28(0xE8)

	void SetRecentServers(struct TArray<struct FUserServerHistoryItem>& Value); // Function ConZ.User.SetRecentServers
	void SetProvider(struct FString Value); // Function ConZ.User.SetProvider
	void SetName(struct FString Value); // Function ConZ.User.SetName
	void SetLastLoginTime(struct FDateTime& Value); // Function ConZ.User.SetLastLoginTime
	void SetLastDirectConnectionAddress(struct FString Value); // Function ConZ.User.SetLastDirectConnectionAddress
	void SetIsBanned(bool Value); // Function ConZ.User.SetIsBanned
	void SetFavoriteServers(struct TArray<struct FUserServerHistoryItem>& Value); // Function ConZ.User.SetFavoriteServers
	void RemoveRecentServerAt(int32_t Index); // Function ConZ.User.RemoveRecentServerAt
	void RemoveRecentServer(struct FUserServerHistoryItem& Item); // Function ConZ.User.RemoveRecentServer
	void RemoveFavoriteServerAt(int32_t Index); // Function ConZ.User.RemoveFavoriteServerAt
	void RemoveFavoriteServer(struct FUserServerHistoryItem& Item); // Function ConZ.User.RemoveFavoriteServer
	bool HasProfileWithName(uint8_t  Type, struct FString Name); // Function ConZ.User.HasProfileWithName
	struct TArray<struct FUserServerHistoryItem> GetRecentServers(); // Function ConZ.User.GetRecentServers
	struct FString GetProvider(); // Function ConZ.User.GetProvider
	struct TArray<struct FString> GetProfileNames(uint8_t  Type); // Function ConZ.User.GetProfileNames
	struct FString GetName(); // Function ConZ.User.GetName
	struct FDateTime GetLastLoginTime(); // Function ConZ.User.GetLastLoginTime
	struct FString GetLastDirectConnectionAddress(); // Function ConZ.User.GetLastDirectConnectionAddress
	bool GetIsBanned(); // Function ConZ.User.GetIsBanned
	struct FString GetId(); // Function ConZ.User.GetId
	struct TArray<struct FUserServerHistoryItem> GetFavoriteServers(); // Function ConZ.User.GetFavoriteServers
	struct TArray<struct UUserProfile*> FindProfiles(uint8_t  Type); // Function ConZ.User.FindProfiles
	struct UUserProfile* FindProfile(struct FDbIntegerId ID); // Function ConZ.User.FindProfile
	struct UUserProfile* FindMultiplayerCacheProfile(struct FString ServerIp, int32_t ServerResponsePort); // Function ConZ.User.FindMultiplayerCacheProfile
	bool DeleteProfile(struct FDbIntegerId ID); // Function ConZ.User.DeleteProfile
	struct UUserProfile* CreateProfileFromTemplate(uint8_t  Type, struct FCharacterTemplate& Value); // Function ConZ.User.CreateProfileFromTemplate
	struct UUserProfile* CreateEmptyProfile(uint8_t  Type); // Function ConZ.User.CreateEmptyProfile
	struct UUserProfile* CreateDefaultProfile(uint8_t  Type); // Function ConZ.User.CreateDefaultProfile
	void ClearRecentServers(); // Function ConZ.User.ClearRecentServers
	void ClearFavoriteServers(); // Function ConZ.User.ClearFavoriteServers
	void AddRecentServer(struct FUserServerHistoryItem& Item); // Function ConZ.User.AddRecentServer
	void AddFavoriteServer(struct FUserServerHistoryItem& Item); // Function ConZ.User.AddFavoriteServer
}; 



// Class ConZ.CookingUtilityFilterDropdown
// Size: 0x2A8(Inherited: 0x260) 
struct UCookingUtilityFilterDropdown : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UImage* _utilityFilterIcon;  // 0x278(0x8)
	struct UMenuAnchor* _popup;  // 0x280(0x8)
	USimpleTextDropdownEntryWithCheckBox* _dropdownEntryClass;  // 0x288(0x8)
	UVerticalScrollBoxDropdownContent* _dropdownContentClass;  // 0x290(0x8)
	struct TArray<struct FCookingUtilityFilterDropdownEntryData> _cookingUtilityFilterDropdownEntries;  // 0x298(0x10)

	struct UUserWidget* CreateContentWidget(); // Function ConZ.CookingUtilityFilterDropdown.CreateContentWidget
}; 



// Class ConZ.HandsCorrectionsData
// Size: 0x238(Inherited: 0x30) 
struct UHandsCorrectionsData : public UDataAsset
{
	struct FHandsPoseCorrections Corrections[4];  // 0x30(0x100)
	struct FHandsPoseCorrections FirstPersonCorrections[4];  // 0x130(0x100)
	char pad_560_1 : 7;  // 0x230(0x1)
	bool OverrideFingersOnlyInProne : 1;  // 0x230(0x1)
	char pad_561[7];  // 0x231(0x7)

}; 



// Class ConZ.PrisonerBodyCondition_HealthLow
// Size: 0x150(Inherited: 0xC0) 
struct UPrisonerBodyCondition_HealthLow : public UPrisonerBodyCondition
{
	float _healthRatioToExist;  // 0xC0(0x4)
	char pad_196[4];  // 0xC4(0x4)
	struct FRuntimeFloatCurve _colorSaturationEffectIntensityVsEffectsIntensity;  // 0xC8(0x88)

}; 



// Class ConZ.CookingUtilityItemTag
// Size: 0x98(Inherited: 0x30) 
struct UCookingUtilityItemTag : public UBaseItemTag
{
	char pad_48_1 : 7;  // 0x30(0x1)
	bool UsesMainSnapPoint : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct FCookingUtilityMainSnapPoint MainSnapPoint;  // 0x38(0x48)
	struct TArray<struct FCookingUtilitySlot> Slots;  // 0x80(0x10)
	char pad_144_1 : 7;  // 0x90(0x1)
	bool HighlightItem : 1;  // 0x90(0x1)
	char pad_145[7];  // 0x91(0x7)

}; 



// Class ConZ.HasCustomRadialDamageHandler
// Size: 0x28(Inherited: 0x28) 
struct UHasCustomRadialDamageHandler : public UInterface
{

}; 



// Class ConZ.CookingUtilitySlotsPanel
// Size: 0x290(Inherited: 0x260) 
struct UCookingUtilitySlotsPanel : public UUserWidget
{
	char pad_608[8];  // 0x260(0x8)
	struct UScrollBox* _utilityOverviewScrollBox;  // 0x268(0x8)
	UCookingUtilityOverview* _cookingUtilityOverviewClass;  // 0x270(0x8)
	char pad_632[8];  // 0x278(0x8)
	struct FMargin _utilityOverviewPadding;  // 0x280(0x10)

}; 



// Class ConZ.HasProcessViewRotation
// Size: 0x28(Inherited: 0x28) 
struct UHasProcessViewRotation : public UInterface
{

}; 



// Class ConZ.ProjectileExplosive
// Size: 0x478(Inherited: 0x438) 
struct AProjectileExplosive : public AProjectile
{
	float _selfDestructTime;  // 0x438(0x4)
	float _explosionDamage;  // 0x43C(0x4)
	float _explosionInnerRadius;  // 0x440(0x4)
	float _explosionOuterRadius;  // 0x444(0x4)
	float _explosionFalloff;  // 0x448(0x4)
	float _explosionForce;  // 0x44C(0x4)
	float _hearingDamageRadius;  // 0x450(0x4)
	char pad_1108[4];  // 0x454(0x4)
	struct UParticleSystem* _explosionParticle;  // 0x458(0x8)
	struct UAkAudioEvent* _explosionAudioEvent;  // 0x460(0x8)
	UMatineeCameraShake* _explosionCameraShakeClass;  // 0x468(0x8)
	char pad_1136[8];  // 0x470(0x8)

}; 



// Class ConZ.Corpse
// Size: 0x3B0(Inherited: 0x220) 
struct ACorpse : public AActor
{
	char pad_544[24];  // 0x220(0x18)
	struct USkeletalMeshComponent* RagdollMeshComponent;  // 0x238(0x8)
	struct UChoppingRecipeDataAsset* ChoppingRecipeDataAsset;  // 0x240(0x8)
	AItem* ItemRepresentation;  // 0x248(0x8)
	char pad_592_1 : 7;  // 0x250(0x1)
	bool IterativeChopping : 1;  // 0x250(0x1)
	char pad_593[3];  // 0x251(0x3)
	struct FName MainBoneName;  // 0x254(0x8)
	char pad_604[4];  // 0x25C(0x4)
	struct FCorpseSkeletalMeshRepData RagdollMeshData;  // 0x260(0x70)
	struct TArray<struct FCorpseStaticMeshRepData> StaticMeshData;  // 0x2D0(0x10)
	struct TArray<struct FCorpseSkeletalMeshRepData> SkeletalMeshData;  // 0x2E0(0x10)
	struct FCorpsePoseData PoseData;  // 0x2F0(0x40)
	struct TArray<struct AItem*> inventory;  // 0x330(0x10)
	float SearchTime;  // 0x340(0x4)
	float PhysicsPauseDistance;  // 0x344(0x4)
	struct UAkAudioEvent* StartSearchAudioEvent;  // 0x348(0x8)
	struct UAkAudioEvent* StopSearchAudioEvent;  // 0x350(0x8)
	float AutoDestructTime;  // 0x358(0x4)
	float AutoDestructRadius;  // 0x35C(0x4)
	struct TArray<struct AActor*> Attachements;  // 0x360(0x10)
	struct TArray<struct FName> AttachementSockets;  // 0x370(0x10)
	char pad_896[24];  // 0x380(0x18)
	struct AConZCharacter* _sourceCharacter;  // 0x398(0x8)
	char pad_928[8];  // 0x3A0(0x8)
	char pad_936_1 : 7;  // 0x3A8(0x1)
	bool _atRest : 1;  // 0x3A8(0x1)
	char pad_937[7];  // 0x3A9(0x7)

	void OnRep_SourceCharacter(); // Function ConZ.Corpse.OnRep_SourceCharacter
	void OnRep_PoseData(); // Function ConZ.Corpse.OnRep_PoseData
	void OnRep_Inventory(); // Function ConZ.Corpse.OnRep_Inventory
	void OnRep_AtRest(); // Function ConZ.Corpse.OnRep_AtRest
	void Multicast_ClonePoseLocally(struct AConZCharacter* sourceCharacter); // Function ConZ.Corpse.Multicast_ClonePoseLocally
	void CopyFromCharacter(struct AConZCharacter* sourceCharacter); // Function ConZ.Corpse.CopyFromCharacter
	void ApplyAttachments(); // Function ConZ.Corpse.ApplyAttachments
}; 



// Class ConZ.PrisonerActionTakeItemInHandsDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionTakeItemInHandsDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.CraftableItem
// Size: 0x128(Inherited: 0x30) 
struct UCraftableItem : public UDataAsset
{
	uint8_t  ItemCategory;  // 0x30(0x1)
	char pad_49[3];  // 0x31(0x3)
	int32_t ItemOrder;  // 0x34(0x4)
	struct TArray<struct FCraftingPair> CraftedItems;  // 0x38(0x10)
	uint8_t  Interaction;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	struct FText InteractionCaption;  // 0x50(0x18)
	char pad_104_1 : 7;  // 0x68(0x1)
	bool HideItemCaptionInCraftingCaption : 1;  // 0x68(0x1)
	char pad_105[7];  // 0x69(0x7)
	struct TArray<struct FCraftingItem> MandatoryItems;  // 0x70(0x10)
	struct TArray<struct FCraftingItem> OptionalItems;  // 0x80(0x10)
	struct TArray<struct FCraftingItem> ToolsNeeded;  // 0x90(0x10)
	char pad_160_1 : 7;  // 0xA0(0x1)
	bool AutoCalculation : 1;  // 0xA0(0x1)
	char pad_161[7];  // 0xA1(0x7)
	USkill* Skill;  // 0xA8(0x8)
	struct FCraftingSkillLevelData NoSkillLevelData;  // 0xB0(0x14)
	struct FCraftingSkillLevelData BasicLevelData;  // 0xC4(0x14)
	struct FCraftingSkillLevelData MediumLevelData;  // 0xD8(0x14)
	struct FCraftingSkillLevelData AdvancedLevelData;  // 0xEC(0x14)
	struct UAnimMontage* CustomCraftingMontage;  // 0x100(0x8)
	struct UAkAudioEvent* StartCraftingAudioEvent;  // 0x108(0x8)
	struct UAkAudioEvent* StopCraftingAudioEvent;  // 0x110(0x8)
	char pad_280_1 : 7;  // 0x118(0x1)
	bool OnlyForSupporterPack : 1;  // 0x118(0x1)
	char pad_281_1 : 7;  // 0x119(0x1)
	bool AutoCalculateHealth : 1;  // 0x119(0x1)
	char pad_282_1 : 7;  // 0x11A(0x1)
	bool AutoCalculateWeight : 1;  // 0x11A(0x1)
	char pad_283_1 : 7;  // 0x11B(0x1)
	bool AutoCalculateFoodParameters : 1;  // 0x11B(0x1)
	float AlcoholContentMultiplier;  // 0x11C(0x4)
	int32_t BulletStackAmount;  // 0x120(0x4)
	char pad_292[4];  // 0x124(0x4)

}; 



// Class ConZ.LockBombDefusalMinigame
// Size: 0x508(Inherited: 0x4E8) 
struct ALockBombDefusalMinigame : public ABombDefusalMinigameBase
{
	char pad_1256[16];  // 0x4E8(0x10)
	ATrapItem* _bombClass;  // 0x4F8(0x8)
	char pad_1280[8];  // 0x500(0x8)

}; 



// Class ConZ.CorpseInterface
// Size: 0x28(Inherited: 0x28) 
struct UCorpseInterface : public UInterface
{

}; 



// Class ConZ.PlaceableCraftableItem
// Size: 0x1F0(Inherited: 0x128) 
struct UPlaceableCraftableItem : public UCraftableItem
{
	APlaceableActorBase* PlaceableActorOverride;  // 0x128(0x8)
	float MaxPlacementAngle;  // 0x130(0x4)
	char pad_308_1 : 7;  // 0x134(0x1)
	bool AdjustRotation : 1;  // 0x134(0x1)
	char pad_309[3];  // 0x135(0x3)
	float GroundOffsetWhilePlacing;  // 0x138(0x4)
	float MaxDistanceFromGroundWhilePlacing;  // 0x13C(0x4)
	float ReachabilityVerticalOffset;  // 0x140(0x4)
	char pad_324_1 : 7;  // 0x144(0x1)
	bool IgnoreFloatingCheckWhilePlacing : 1;  // 0x144(0x1)
	char pad_325[3];  // 0x145(0x3)
	struct FVector PlacementLocationOffset;  // 0x148(0xC)
	struct FVector BoundsExtensionWhilePlacingMin;  // 0x154(0xC)
	struct FVector BoundsExtensionWhilePlacingMax;  // 0x160(0xC)
	struct FVector PlacementTracesBoundsExtension;  // 0x16C(0xC)
	struct FVector FloatingTracesBoundsExtension;  // 0x178(0xC)
	struct FVector FloatingTracesCenterOffset;  // 0x184(0xC)
	float MaxHeightAdjustmentWhilePlacing;  // 0x190(0x4)
	float MinHeightAdjustmentWhilePlacing;  // 0x194(0x4)
	char pad_408_1 : 7;  // 0x198(0x1)
	bool CanPlaceOnWater : 1;  // 0x198(0x1)
	char pad_409_1 : 7;  // 0x199(0x1)
	bool UseMeshCollisionForPlacement : 1;  // 0x199(0x1)
	char pad_410_1 : 7;  // 0x19A(0x1)
	bool OnlyPlaceableInFriendlyFlagArea : 1;  // 0x19A(0x1)
	char pad_411_1 : 7;  // 0x19B(0x1)
	bool CanPlaceInEnemyFlagArea : 1;  // 0x19B(0x1)
	char pad_412_1 : 7;  // 0x19C(0x1)
	bool CheckBaseBuildingPlacementMask : 1;  // 0x19C(0x1)
	char pad_413[3];  // 0x19D(0x3)
	int32_t MaxInstancesPerFlagArea;  // 0x1A0(0x4)
	uint8_t  PlacementAlgorithm;  // 0x1A4(0x1)
	char pad_421[3];  // 0x1A5(0x3)
	float MaxMissedPlacementTracesPercent;  // 0x1A8(0x4)
	char pad_428_1 : 7;  // 0x1AC(0x1)
	bool ShowDirectionIndicator : 1;  // 0x1AC(0x1)
	char pad_429[3];  // 0x1AD(0x3)
	struct FVector DirectionIndicatorOffset;  // 0x1B0(0xC)
	float DirectionIndicatorRotation;  // 0x1BC(0x4)
	float DirectionIndicatorSize;  // 0x1C0(0x4)
	float OutlineMaterialBaseOffset;  // 0x1C4(0x4)
	float OutlineMaterialThinness;  // 0x1C8(0x4)
	char pad_460_1 : 7;  // 0x1CC(0x1)
	bool IsOutlineMaterialTwoSided : 1;  // 0x1CC(0x1)
	char pad_461[3];  // 0x1CD(0x3)
	struct UMaterialInterface* PlacementAllowedMaterialOverride;  // 0x1D0(0x8)
	struct UMaterialInterface* PlacementDisallowedMaterialOverride;  // 0x1D8(0x8)
	struct UMaterialInterface* OutlineMaterialOverride;  // 0x1E0(0x8)
	struct UMaterialInterface* DepthMaterialOverride;  // 0x1E8(0x8)

}; 



// Class ConZ.GameResourceItemTag
// Size: 0x70(Inherited: 0x30) 
struct UGameResourceItemTag : public UBaseItemTag
{
	UGameResourceType* ResourceType;  // 0x30(0x8)
	struct FGameplayTagContainer SocketTypes;  // 0x38(0x20)
	float ResourceAmountPerUse;  // 0x58(0x4)
	char pad_92[4];  // 0x5C(0x4)
	struct TArray<struct UBaseItemTag*> RequiredItemTagsForFueling;  // 0x60(0x10)

}; 



// Class ConZ.FragGrenadeItem
// Size: 0x9E0(Inherited: 0x9E0) 
struct AFragGrenadeItem : public AGrenadeItem
{

}; 



// Class ConZ.FortificationCraftableItem
// Size: 0x230(Inherited: 0x1F0) 
struct UFortificationCraftableItem : public UPlaceableCraftableItem
{
	UObject* FortificationClass;  // 0x1F0(0x8)
	struct UTexture2D* Icon;  // 0x1F8(0x8)
	struct FText Caption;  // 0x200(0x18)
	struct FText Description;  // 0x218(0x18)

}; 



// Class ConZ.StandardLockData
// Size: 0xC0(Inherited: 0x98) 
struct UStandardLockData : public ULockData
{
	struct UStaticMesh* LockMeshOuter;  // 0x98(0x8)
	struct UStaticMesh* LockMeshInner;  // 0xA0(0x8)
	float RotatingTresholdAngle;  // 0xA8(0x4)
	float Duration;  // 0xAC(0x4)
	float AngleTolerance;  // 0xB0(0x4)
	float PickBreakingMultiplier;  // 0xB4(0x4)
	int32_t PickBreakingAtNumberOfFailedPushAttempts;  // 0xB8(0x4)
	char pad_188[4];  // 0xBC(0x4)

}; 



// Class ConZ.PhysicalSurfacesData
// Size: 0x4E8(Inherited: 0x30) 
struct UPhysicalSurfacesData : public UDataAsset
{
	struct FPhysicalSurfaceData Default;  // 0x30(0x1C)
	struct FPhysicalSurfaceData grass;  // 0x4C(0x1C)
	struct FPhysicalSurfaceData ForrestGroundCoastal;  // 0x68(0x1C)
	struct FPhysicalSurfaceData ForrestGroundContinental;  // 0x84(0x1C)
	struct FPhysicalSurfaceData Rock;  // 0xA0(0x1C)
	struct FPhysicalSurfaceData Stone;  // 0xBC(0x1C)
	struct FPhysicalSurfaceData Gravel;  // 0xD8(0x1C)
	struct FPhysicalSurfaceData GravelBeach;  // 0xF4(0x1C)
	struct FPhysicalSurfaceData Pebbles;  // 0x110(0x1C)
	struct FPhysicalSurfaceData Snow;  // 0x12C(0x1C)
	struct FPhysicalSurfaceData Ice;  // 0x148(0x1C)
	struct FPhysicalSurfaceData Sand;  // 0x164(0x1C)
	struct FPhysicalSurfaceData Asphalt;  // 0x180(0x1C)
	struct FPhysicalSurfaceData Dirt;  // 0x19C(0x1C)
	struct FPhysicalSurfaceData Water;  // 0x1B8(0x1C)
	struct FPhysicalSurfaceData WaterOcean;  // 0x1D4(0x1C)
	struct FPhysicalSurfaceData Cloth;  // 0x1F0(0x1C)
	struct FPhysicalSurfaceData Metal;  // 0x20C(0x1C)
	struct FPhysicalSurfaceData Aluminium;  // 0x228(0x1C)
	struct FPhysicalSurfaceData Concrete;  // 0x244(0x1C)
	struct FPhysicalSurfaceData Brick;  // 0x260(0x1C)
	struct FPhysicalSurfaceData Wood;  // 0x27C(0x1C)
	struct FPhysicalSurfaceData Plastic;  // 0x298(0x1C)
	struct FPhysicalSurfaceData Rubber;  // 0x2B4(0x1C)
	struct FPhysicalSurfaceData Glass;  // 0x2D0(0x1C)
	struct FPhysicalSurfaceData Foliage;  // 0x2EC(0x1C)
	struct FPhysicalSurfaceData Bark;  // 0x308(0x1C)
	struct FPhysicalSurfaceData Flesh;  // 0x324(0x1C)
	struct FPhysicalSurfaceData RoofTile;  // 0x340(0x1C)
	struct FPhysicalSurfaceData CeramicTiles;  // 0x35C(0x1C)
	struct FPhysicalSurfaceData Scrap;  // 0x378(0x1C)
	struct FPhysicalSurfaceData Trunk;  // 0x394(0x1C)
	struct FPhysicalSurfaceData Leaves;  // 0x3B0(0x1C)
	struct FPhysicalSurfaceData Fruit;  // 0x3CC(0x1C)
	struct FPhysicalSurfaceData Cardboard;  // 0x3E8(0x1C)
	struct FPhysicalSurfaceData Plaster;  // 0x404(0x1C)
	struct FPhysicalSurfaceData Kevlar;  // 0x420(0x1C)
	struct FPhysicalSurfaceData ForceField;  // 0x43C(0x1C)
	struct FPhysicalSurfaceData NoEffect;  // 0x458(0x1C)
	struct FPhysicalSurfaceData WhiteGravel;  // 0x474(0x1C)
	struct FPhysicalSurfaceData Mud;  // 0x490(0x1C)
	struct FPhysicalSurfaceData RiverSand;  // 0x4AC(0x1C)
	struct FPhysicalSurfaceData GrassContinental;  // 0x4C8(0x1C)
	char pad_1252[4];  // 0x4E4(0x4)

}; 



// Class ConZ.BaseBuildingBlockCraftableItem
// Size: 0x250(Inherited: 0x1F0) 
struct UBaseBuildingBlockCraftableItem : public UPlaceableCraftableItem
{
	UObject* BaseBlockClass;  // 0x1F0(0x8)
	struct UTexture2D* Icon;  // 0x1F8(0x8)
	struct FText Caption;  // 0x200(0x18)
	struct FText Description;  // 0x218(0x18)
	struct FVector PlacementMeshOffset;  // 0x230(0xC)
	struct FVector PlacementMeshScale;  // 0x23C(0xC)
	char pad_584_1 : 7;  // 0x248(0x1)
	bool IsUpgrade : 1;  // 0x248(0x1)
	char pad_585[7];  // 0x249(0x7)

}; 



// Class ConZ.CraftingCache
// Size: 0xB0(Inherited: 0x30) 
struct UCraftingCache : public UDataAsset
{
	struct TArray<struct FString> IngredientPaths;  // 0x30(0x10)
	struct TMap<UCraftingIngredientType*, struct FIngredientClassesArray> _craftingTypes;  // 0x40(0x50)
	struct TArray<struct TSoftClassPtr<UObject>> _ingredients;  // 0x90(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> _recipes;  // 0xA0(0x10)

	void Regenerate(); // Function ConZ.CraftingCache.Regenerate
}; 



// Class ConZ.RangedResourceProviderComponent
// Size: 0x118(Inherited: 0xC8) 
struct URangedResourceProviderComponent : public UItemComponent
{
	char pad_200[48];  // 0xC8(0x30)
	UGameResourceType* _repResourceType;  // 0xF8(0x8)
	float _repResourceAmount;  // 0x100(0x4)
	float _repAvailableResourceAmount;  // 0x104(0x4)
	AInfluenceAreaVisualizer* _influenceAreaVisualizerClass;  // 0x108(0x8)
	char pad_272[8];  // 0x110(0x8)

	void OnRep_ResourceType(); // Function ConZ.RangedResourceProviderComponent.OnRep_ResourceType
	void OnRep_ResourceAmount(); // Function ConZ.RangedResourceProviderComponent.OnRep_ResourceAmount
	void OnRep_AvailableResourceAmount(); // Function ConZ.RangedResourceProviderComponent.OnRep_AvailableResourceAmount
}; 



// Class ConZ.FireplaceItem
// Size: 0x960(Inherited: 0x940) 
struct AFireplaceItem : public AFireItem
{
	struct UStaticMeshComponent* _collisionMesh;  // 0x938(0x8)
	float _fireDamageProcessingPeriod;  // 0x940(0x4)
	float _fireBaseDamageToItemsPerSecond;  // 0x948(0x4)
	float _fireDamageRadius;  // 0x94C(0x4)
	int32_t _minBurningStageForManualPutOut;  // 0x950(0x4)
	char pad_2392[8];  // 0x958(0x8)

}; 



// Class ConZ.CraftingComponentTooltip
// Size: 0x290(Inherited: 0x260) 
struct UCraftingComponentTooltip : public UUserWidget
{
	struct UImage* BackgroundImage;  // 0x260(0x8)
	struct UTextBlock* ComponentTypeText;  // 0x268(0x8)
	struct UTextBlock* DescriptionText;  // 0x270(0x8)
	struct UImage* Image_1;  // 0x278(0x8)
	struct UTextBlock* NameText;  // 0x280(0x8)
	struct UCraftingComponentWidget* _craftingComponentWidget;  // 0x288(0x8)

}; 



// Class ConZ.ExplosionFailurePenalty
// Size: 0x68(Inherited: 0x30) 
struct UExplosionFailurePenalty : public UFailurePenalty
{
	float _explosionBaseDamage;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)
	struct FTargetTypeDamageMultiplier _targetTypeMultiplier;  // 0x38(0x10)
	float _minimumDamage;  // 0x48(0x4)
	float _damageInnerRadius;  // 0x4C(0x4)
	float _damageOuterRadius;  // 0x50(0x4)
	float _damageFalloff;  // 0x54(0x4)
	struct UParticleSystem* _explosionPS;  // 0x58(0x8)
	struct UAkAudioEvent* _explosionAudioEvent;  // 0x60(0x8)

}; 



// Class ConZ.CraftingDatabase
// Size: 0xF0(Inherited: 0x30) 
struct UCraftingDatabase : public UDataAsset
{
	struct TArray<struct UCraftableItem*> CraftableItems;  // 0x30(0x10)
	struct TArray<struct FString> AssetPaths;  // 0x40(0x10)
	struct UCraftingItemTag* CookableTag;  // 0x50(0x8)
	struct UCraftingItemTag* SmokableTag;  // 0x58(0x8)
	struct UCraftingItemTag* OpenItemTag;  // 0x60(0x8)
	struct UCraftingItemTag* LightFireTag;  // 0x68(0x8)
	struct UCraftingItemTag* ConservedFoodTag;  // 0x70(0x8)
	struct UItemGroup* IngredientsGroup;  // 0x78(0x8)
	struct TArray<struct FString> IngredientsGroupPaths;  // 0x80(0x10)
	struct TArray<struct FString> IngredientsExcludePaths;  // 0x90(0x10)
	struct TMap<struct UCraftingItemTag*, struct FItemClassesArray> _itemsByTags;  // 0xA0(0x50)

}; 



// Class ConZ.PrisonerBodyEffectUIData_AntibioticsReaction
// Size: 0x58(Inherited: 0x38) 
struct UPrisonerBodyEffectUIData_AntibioticsReaction : public UPrisonerBodyEffectUIData
{
	char pad_56[8];  // 0x38(0x8)
	struct FText _name;  // 0x40(0x18)

}; 



// Class ConZ.PrisonerActionWashEyesWithReplenishableResource
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionWashEyesWithReplenishableResource : public UPrisonerAction
{

}; 



// Class ConZ.CraftingItemTag
// Size: 0x30(Inherited: 0x30) 
struct UCraftingItemTag : public UBaseItemTag
{

}; 



// Class ConZ.CraftingPanel
// Size: 0x368(Inherited: 0x298) 
struct UCraftingPanel : public UBuildingCraftingPanelBase
{
	struct UGridPanel* _toolsAndWeaponsBox;  // 0x298(0x8)
	struct UGridPanel* _toolsAndWeaponsSubBox1;  // 0x2A0(0x8)
	struct UGridPanel* _toolsAndWeaponsSubBox2;  // 0x2A8(0x8)
	struct UGridPanel* _toolsAndWeaponsSubBox3;  // 0x2B0(0x8)
	struct UGridPanel* _toolsAndWeaponsSubBox4;  // 0x2B8(0x8)
	struct UGridPanel* _toolsAndWeaponsSubBox5;  // 0x2C0(0x8)
	struct UUserWidget* ToolsAndWeaponsSubContainer1;  // 0x2C8(0x8)
	struct UUserWidget* ToolsAndWeaponsSubContainer2;  // 0x2D0(0x8)
	struct UUserWidget* ToolsAndWeaponsSubContainer3;  // 0x2D8(0x8)
	struct UUserWidget* ToolsAndWeaponsSubContainer4;  // 0x2E0(0x8)
	struct UUserWidget* ToolsAndWeaponsSubContainer5;  // 0x2E8(0x8)
	struct UGridPanel* _itemsBox;  // 0x2F0(0x8)
	struct UGridPanel* _itemsSubBox1;  // 0x2F8(0x8)
	struct UGridPanel* _itemsSubBox2;  // 0x300(0x8)
	struct UGridPanel* _itemsSubBox3;  // 0x308(0x8)
	struct UGridPanel* _itemsSubBox4;  // 0x310(0x8)
	struct UGridPanel* _itemsSubBox5;  // 0x318(0x8)
	struct UUserWidget* ItemsSubContainer1;  // 0x320(0x8)
	struct UUserWidget* ItemsSubContainer2;  // 0x328(0x8)
	struct UUserWidget* ItemsSubContainer3;  // 0x330(0x8)
	struct UUserWidget* ItemsSubContainer4;  // 0x338(0x8)
	struct UUserWidget* ItemsSubContainer5;  // 0x340(0x8)
	struct UScrollBox* _toolsAndWeaponsScrollBox;  // 0x348(0x8)
	struct UScrollBox* _itemsScrollBox;  // 0x350(0x8)
	struct UScaleBox* _toolsAndWeaponsScaleBox;  // 0x358(0x8)
	struct UScaleBox* _itemsScaleBox;  // 0x360(0x8)

}; 



// Class ConZ.RemoteKeyItem
// Size: 0x940(Inherited: 0x910) 
struct ARemoteKeyItem : public AItem
{
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent;  // 0x910(0x8)
	float _triggerRadius;  // 0x918(0x4)
	char pad_2332[4];  // 0x91C(0x4)
	struct UAkAudioEvent* _triggerAudioEvent;  // 0x920(0x8)
	char pad_2344[16];  // 0x928(0x10)
	char pad_2360_1 : 7;  // 0x938(0x1)
	bool _isPaired : 1;  // 0x938(0x1)
	char pad_2361[7];  // 0x939(0x7)

	void OnResourceAmountChanged(struct UBasicGameResourceContainerComponent* containerComponent, float newAmount); // Function ConZ.RemoteKeyItem.OnResourceAmountChanged
}; 



// Class ConZ.GameEventNotificationUIController
// Size: 0x30(Inherited: 0x28) 
struct UGameEventNotificationUIController : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.CraftingProduct
// Size: 0x28(Inherited: 0x28) 
struct UCraftingProduct : public UInterface
{

}; 



// Class ConZ.PrisonerBodySymptom_WetFeet
// Size: 0x148(Inherited: 0xB8) 
struct UPrisonerBodySymptom_WetFeet : public UPrisonerBodySymptom
{
	float _feetWetnessToExist;  // 0xB8(0x4)
	char pad_188[4];  // 0xBC(0x4)
	struct FRuntimeFloatCurve _severityVsFeetWetness;  // 0xC0(0x88)

}; 



// Class ConZ.CraftingRecipeDescriptionPanel
// Size: 0x2F8(Inherited: 0x260) 
struct UCraftingRecipeDescriptionPanel : public UUserWidget
{
	struct UCraftingInfoWidget* _craftingInfo;  // 0x260(0x8)
	struct UGridPanel* _inventoryBox;  // 0x268(0x8)
	struct UGridPanel* _vicinityBox;  // 0x270(0x8)
	struct FText _blueprintNumberExceededMessage;  // 0x278(0x18)
	UTooltipBase* _tooltipClass;  // 0x290(0x8)
	struct TArray<struct AItem*> _ingredientsToUseForCrafting;  // 0x298(0x10)
	char pad_680[32];  // 0x2A8(0x20)
	struct TArray<struct UUserWidget*> _inventoryEmptyWidgets;  // 0x2C8(0x10)
	struct TArray<struct UUserWidget*> _vicinityEmptyWidgets;  // 0x2D8(0x10)
	char pad_744[16];  // 0x2E8(0x10)

	void OnAdditionalIngredientSelected(struct UCraftingAvailableItemWidget* Widget, struct AItem* Item); // Function ConZ.CraftingRecipeDescriptionPanel.OnAdditionalIngredientSelected
}; 



// Class ConZ.PrisonerActionFillGameResourceContainerWithReplenishableResourcePaidDescription
// Size: 0xA8(Inherited: 0x38) 
struct UPrisonerActionFillGameResourceContainerWithReplenishableResourcePaidDescription : public UCharacterActionDescription
{
	char pad_56[56];  // 0x38(0x38)
	struct UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;  // 0x70(0x8)
	char pad_120[48];  // 0x78(0x30)

}; 



// Class ConZ.InventoryItemDataDescription
// Size: 0x60(Inherited: 0x30) 
struct UInventoryItemDataDescription : public UInventoryItemData
{
	struct FText Name;  // 0x30(0x18)
	struct FText Description;  // 0x48(0x18)

}; 



// Class ConZ.PlaceableElementWidget
// Size: 0x270(Inherited: 0x260) 
struct UPlaceableElementWidget : public UUserWidget
{
	struct UImage* _icon;  // 0x260(0x8)
	char pad_616[8];  // 0x268(0x8)

	void Init(struct APlaceableActorBase* PlaceableActor); // Function ConZ.PlaceableElementWidget.Init
	void DestroyPlaceable(); // Function ConZ.PlaceableElementWidget.DestroyPlaceable
}; 



// Class ConZ.SquadTooltip
// Size: 0x278(Inherited: 0x260) 
struct USquadTooltip : public UUserWidget
{
	struct UTextBlock* SquadName;  // 0x260(0x8)
	struct UTextBlock* SquadInformation;  // 0x268(0x8)
	struct USquadEmblemWidget* SquadEmblem;  // 0x270(0x8)

}; 



// Class ConZ.CraftingIngredientType
// Size: 0x30(Inherited: 0x28) 
struct UCraftingIngredientType : public UObject
{
	float Amount;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)

}; 



// Class ConZ.ItemClassWidget
// Size: 0x280(Inherited: 0x260) 
struct UItemClassWidget : public UUserWidget
{
	struct UImage* BackgroundImage;  // 0x260(0x8)
	char pad_616[8];  // 0x268(0x8)
	struct UImage* MainImage;  // 0x270(0x8)
	char pad_632_1 : 7;  // 0x278(0x1)
	bool BackgroundVisible : 1;  // 0x278(0x1)
	char pad_633[7];  // 0x279(0x7)

}; 



// Class ConZ.CraftItemAction
// Size: 0x160(Inherited: 0xA8) 
struct UCraftItemAction : public UInteractionAction
{
	char pad_168[184];  // 0xA8(0xB8)

}; 



// Class ConZ.CTFFlag
// Size: 0x2D0(Inherited: 0x220) 
struct ACTFFlag : public AActor
{
	struct USphereComponent* SphereComponent;  // 0x220(0x8)
	struct USkeletalMeshComponent* FlagMesh;  // 0x228(0x8)
	struct TArray<struct UMaterialInstance*> TeamMaterials;  // 0x230(0x10)
	struct FName AttachSocketName;  // 0x240(0x8)
	struct ACTFGameEvent* _gameEvent;  // 0x248(0x8)
	int32_t _team;  // 0x250(0x4)
	char pad_596[4];  // 0x254(0x4)
	struct APrisoner* _carrier;  // 0x258(0x8)
	char pad_608[8];  // 0x260(0x8)
	float _resetProgress;  // 0x268(0x4)
	char pad_620[4];  // 0x26C(0x4)
	struct FTransform _baseTransform;  // 0x270(0x30)
	struct FTransform _flagTransform;  // 0x2A0(0x30)

	void SphereOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function ConZ.CTFFlag.SphereOverlap
	void OnRep_Team(); // Function ConZ.CTFFlag.OnRep_Team
	void OnRep_FlagTransform(); // Function ConZ.CTFFlag.OnRep_FlagTransform
}; 



// Class ConZ.GameEventParticipantStats
// Size: 0x48(Inherited: 0x28) 
struct UGameEventParticipantStats : public UObject
{
	float _score;  // 0x28(0x4)
	char pad_44[28];  // 0x2C(0x1C)

	int32_t GetTeamKills(); // Function ConZ.GameEventParticipantStats.GetTeamKills
	int32_t GetSuicides(); // Function ConZ.GameEventParticipantStats.GetSuicides
	float GetScore(); // Function ConZ.GameEventParticipantStats.GetScore
	int32_t GetHeadshots(); // Function ConZ.GameEventParticipantStats.GetHeadshots
	int32_t GetEnemyKills(); // Function ConZ.GameEventParticipantStats.GetEnemyKills
	int32_t GetDeaths(); // Function ConZ.GameEventParticipantStats.GetDeaths
	int32_t GetAssists(); // Function ConZ.GameEventParticipantStats.GetAssists
}; 



// Class ConZ.PrisonerActionSearchObjectDescription
// Size: 0x70(Inherited: 0x38) 
struct UPrisonerActionSearchObjectDescription : public UPrisonerActionDescription
{
	char pad_56[56];  // 0x38(0x38)

}; 



// Class ConZ.CTFParticipantStats
// Size: 0x58(Inherited: 0x48) 
struct UCTFParticipantStats : public UGameEventParticipantStats
{
	int32_t Pickups;  // 0x48(0x4)
	int32_t Captures;  // 0x4C(0x4)
	int32_t Returns;  // 0x50(0x4)
	char pad_84[4];  // 0x54(0x4)

}; 



// Class ConZ.PhysicalSurfacesEffectsData
// Size: 0xDA0(Inherited: 0x30) 
struct UPhysicalSurfacesEffectsData : public UDataAsset
{
	struct FPhysicalSurfaceEffectsData Default;  // 0x30(0x50)
	struct FPhysicalSurfaceEffectsData grass;  // 0x80(0x50)
	struct FPhysicalSurfaceEffectsData ForrestGroundCoastal;  // 0xD0(0x50)
	struct FPhysicalSurfaceEffectsData ForrestGroundContinental;  // 0x120(0x50)
	struct FPhysicalSurfaceEffectsData Rock;  // 0x170(0x50)
	struct FPhysicalSurfaceEffectsData Stone;  // 0x1C0(0x50)
	struct FPhysicalSurfaceEffectsData Gravel;  // 0x210(0x50)
	struct FPhysicalSurfaceEffectsData GravelBeach;  // 0x260(0x50)
	struct FPhysicalSurfaceEffectsData Pebbles;  // 0x2B0(0x50)
	struct FPhysicalSurfaceEffectsData Snow;  // 0x300(0x50)
	struct FPhysicalSurfaceEffectsData Ice;  // 0x350(0x50)
	struct FPhysicalSurfaceEffectsData Sand;  // 0x3A0(0x50)
	struct FPhysicalSurfaceEffectsData Asphalt;  // 0x3F0(0x50)
	struct FPhysicalSurfaceEffectsData Dirt;  // 0x440(0x50)
	struct FPhysicalSurfaceEffectsData Water;  // 0x490(0x50)
	struct FPhysicalSurfaceEffectsData WaterOcean;  // 0x4E0(0x50)
	struct FPhysicalSurfaceEffectsData Cloth;  // 0x530(0x50)
	struct FPhysicalSurfaceEffectsData Metal;  // 0x580(0x50)
	struct FPhysicalSurfaceEffectsData Aluminium;  // 0x5D0(0x50)
	struct FPhysicalSurfaceEffectsData Concrete;  // 0x620(0x50)
	struct FPhysicalSurfaceEffectsData Brick;  // 0x670(0x50)
	struct FPhysicalSurfaceEffectsData Wood;  // 0x6C0(0x50)
	struct FPhysicalSurfaceEffectsData Plastic;  // 0x710(0x50)
	struct FPhysicalSurfaceEffectsData Rubber;  // 0x760(0x50)
	struct FPhysicalSurfaceEffectsData Glass;  // 0x7B0(0x50)
	struct FPhysicalSurfaceEffectsData Foliage;  // 0x800(0x50)
	struct FPhysicalSurfaceEffectsData Bark;  // 0x850(0x50)
	struct FPhysicalSurfaceEffectsData Flesh;  // 0x8A0(0x50)
	struct FPhysicalSurfaceEffectsData RoofTile;  // 0x8F0(0x50)
	struct FPhysicalSurfaceEffectsData CeramicTiles;  // 0x940(0x50)
	struct FPhysicalSurfaceEffectsData Scrap;  // 0x990(0x50)
	struct FPhysicalSurfaceEffectsData Trunk;  // 0x9E0(0x50)
	struct FPhysicalSurfaceEffectsData Leaves;  // 0xA30(0x50)
	struct FPhysicalSurfaceEffectsData Fruit;  // 0xA80(0x50)
	struct FPhysicalSurfaceEffectsData Cardboard;  // 0xAD0(0x50)
	struct FPhysicalSurfaceEffectsData Plaster;  // 0xB20(0x50)
	struct FPhysicalSurfaceEffectsData Kevlar;  // 0xB70(0x50)
	struct FPhysicalSurfaceEffectsData ForceField;  // 0xBC0(0x50)
	struct FPhysicalSurfaceEffectsData NoEffect;  // 0xC10(0x50)
	struct FPhysicalSurfaceEffectsData WhiteGravel;  // 0xC60(0x50)
	struct FPhysicalSurfaceEffectsData Mud;  // 0xCB0(0x50)
	struct FPhysicalSurfaceEffectsData RiverSand;  // 0xD00(0x50)
	struct FPhysicalSurfaceEffectsData GrassContinental;  // 0xD50(0x50)

}; 



// Class ConZ.PrisonerBodyConditionUIData_Hypothermia
// Size: 0x1A0(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_Hypothermia : public UPrisonerBodyConditionUIData
{

}; 



// Class ConZ.PrisonerActionVomit
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionVomit : public UPrisonerAction
{

}; 



// Class ConZ.UserManager
// Size: 0xA0(Inherited: 0x28) 
struct UUserManager : public UObject
{
	char pad_40[120];  // 0x28(0x78)

}; 



// Class ConZ.CTFLocationMarker
// Size: 0x4E0(Inherited: 0x418) 
struct ACTFLocationMarker : public AGameEventLocationMarker
{
	struct FCTFParameters CTFParameters;  // 0x418(0x30)
	struct FVector CaptureOffsetA;  // 0x448(0xC)
	struct FVector CaptureOffsetB;  // 0x454(0xC)
	float CaptureRadiusA;  // 0x460(0x4)
	float CaptureRadiusB;  // 0x464(0x4)
	char pad_1128[8];  // 0x468(0x8)
	struct FTransform FlagOffsetA;  // 0x470(0x30)
	struct FTransform FlagOffsetB;  // 0x4A0(0x30)
	struct UStaticMeshComponent* FlagAPreviewMesh;  // 0x4D0(0x8)
	struct UStaticMeshComponent* FlagBPreviewMesh;  // 0x4D8(0x8)

}; 



// Class ConZ.PrisonerResponseIdle_BodyConditionOrSymptomPresence
// Size: 0xB0(Inherited: 0x98) 
struct UPrisonerResponseIdle_BodyConditionOrSymptomPresence : public UPrisonerResponseIdle
{
	UPrisonerBodyConditionOrSymptom* BodyConditionOrSymptom;  // 0x98(0x8)
	struct FInt32Range SeverityLevels;  // 0xA0(0x10)

}; 



// Class ConZ.CurrencyConversionRequest
// Size: 0x50(Inherited: 0x28) 
struct UCurrencyConversionRequest : public UPlayerRpcChannelServerRequest
{
	char pad_40[40];  // 0x28(0x28)

}; 



// Class ConZ.PrisonerUIStatics
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerUIStatics : public UBlueprintFunctionLibrary
{

	float GetPrisonerStaminaRatio(struct APrisoner* Prisoner); // Function ConZ.PrisonerUIStatics.GetPrisonerStaminaRatio
	float GetPrisonerHydration(struct APrisoner* Prisoner); // Function ConZ.PrisonerUIStatics.GetPrisonerHydration
	float GetPrisonerHealthRatio(struct APrisoner* Prisoner); // Function ConZ.PrisonerUIStatics.GetPrisonerHealthRatio
	float GetPrisonerEnergy(struct APrisoner* Prisoner); // Function ConZ.PrisonerUIStatics.GetPrisonerEnergy
}; 



// Class ConZ.GameResourceType
// Size: 0xA0(Inherited: 0x28) 
struct UGameResourceType : public UObject
{
	struct FText ResourceName;  // 0x28(0x18)
	struct FString ConfigSectionName;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool CanWashWith : 1;  // 0x50(0x1)
	char pad_81_1 : 7;  // 0x51(0x1)
	bool CanPutOutFireWith : 1;  // 0x51(0x1)
	char pad_82_1 : 7;  // 0x52(0x1)
	bool CanDisinfectWith : 1;  // 0x52(0x1)
	char pad_83[1];  // 0x53(0x1)
	struct FGameplayTag CookingIngredientTag;  // 0x54(0x8)
	char pad_92[4];  // 0x5C(0x4)
	struct TSoftObjectPtr<UTexture2D> ResourceImage;  // 0x60(0x28)
	struct FLinearColor Color;  // 0x88(0x10)
	struct UGameResourceConsumptionData* ConsumptionData;  // 0x98(0x8)

}; 



// Class ConZ.CurrencyItemComponent
// Size: 0xD8(Inherited: 0xC8) 
struct UCurrencyItemComponent : public UItemComponent
{
	int32_t _value;  // 0xC8(0x4)
	char pad_204[12];  // 0xCC(0xC)

}; 



// Class ConZ.CursedScrollBar
// Size: 0x288(Inherited: 0x260) 
struct UCursedScrollBar : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	float ScrollBarValue;  // 0x278(0x4)
	float ViewportHeight;  // 0x27C(0x4)
	float ContentHeight;  // 0x280(0x4)
	char pad_644[4];  // 0x284(0x4)

	void UpdateFromValueInternal2(float Value, float MaxCountOnScreen, float MaxValue); // Function ConZ.CursedScrollBar.UpdateFromValueInternal2
	void CallSetToUpdateFromValue(float Value, float MaxCountOnScreen, float MaxValue); // Function ConZ.CursedScrollBar.CallSetToUpdateFromValue
	void CallOnSliderMoved(float Value); // Function ConZ.CursedScrollBar.CallOnSliderMoved
}; 



// Class ConZ.CustomMapBorder
// Size: 0x288(Inherited: 0x220) 
struct ACustomMapBorder : public AActor
{
	struct UStaticMeshComponent* Mesh;  // 0x220(0x8)
	struct UStaticMeshComponent* TournamentMesh;  // 0x228(0x8)
	struct UMaterialInstanceDynamic* Material;  // 0x230(0x8)
	struct FVector2D _minCustomMapSize;  // 0x238(0x8)
	char pad_576_1 : 7;  // 0x240(0x1)
	bool _isInTournamentMode : 1;  // 0x240(0x1)
	char pad_577[3];  // 0x241(0x3)
	float _tournamentModeCompletionPercentage;  // 0x244(0x4)
	float _nearingCompletionPercentage;  // 0x248(0x4)
	char pad_588[8];  // 0x24C(0x8)
	struct FVector2D _minTournamentMapSize;  // 0x254(0x8)
	struct FBox2D _tournamentFinalBorderDimensions;  // 0x25C(0x14)
	char pad_624_1 : 7;  // 0x270(0x1)
	bool _active : 1;  // 0x270(0x1)
	char pad_625[3];  // 0x271(0x3)
	struct FBox2D _customMapDimensions;  // 0x274(0x14)

	void OnRep_TournamentCompletionPercentage(); // Function ConZ.CustomMapBorder.OnRep_TournamentCompletionPercentage
	void OnRep_IsInTournamentMode(); // Function ConZ.CustomMapBorder.OnRep_IsInTournamentMode
	void OnRep_CustomMapDimensions(); // Function ConZ.CustomMapBorder.OnRep_CustomMapDimensions
	void OnRep_Active(); // Function ConZ.CustomMapBorder.OnRep_Active
}; 



// Class ConZ.InteriorCharacterSpawnerComponent
// Size: 0x230(Inherited: 0x230) 
struct UInteriorCharacterSpawnerComponent : public UCharacterSpawnerComponent
{

}; 



// Class ConZ.CustomZoneSettingsColorPicker
// Size: 0x320(Inherited: 0x260) 
struct UCustomZoneSettingsColorPicker : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UButton* _button0;  // 0x278(0x8)
	struct UButton* _button1;  // 0x280(0x8)
	struct UButton* _button2;  // 0x288(0x8)
	struct UButton* _button3;  // 0x290(0x8)
	struct UButton* _button4;  // 0x298(0x8)
	struct UButton* _button5;  // 0x2A0(0x8)
	struct UButton* _button6;  // 0x2A8(0x8)
	struct UButton* _button7;  // 0x2B0(0x8)
	struct UGridPanel* _border0;  // 0x2B8(0x8)
	struct UGridPanel* _border1;  // 0x2C0(0x8)
	struct UGridPanel* _border2;  // 0x2C8(0x8)
	struct UGridPanel* _border3;  // 0x2D0(0x8)
	struct UGridPanel* _border4;  // 0x2D8(0x8)
	struct UGridPanel* _border5;  // 0x2E0(0x8)
	struct UGridPanel* _border6;  // 0x2E8(0x8)
	struct UGridPanel* _border7;  // 0x2F0(0x8)
	char pad_760[40];  // 0x2F8(0x28)

	void HandleButtonPress7(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress7
	void HandleButtonPress6(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress6
	void HandleButtonPress5(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress5
	void HandleButtonPress4(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress4
	void HandleButtonPress3(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress3
	void HandleButtonPress2(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress2
	void HandleButtonPress1(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress1
	void HandleButtonPress0(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress0
}; 



// Class ConZ.PrisonerActionStartChainsawEngineDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionStartChainsawEngineDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.CustomZoneSettingsConfigurationDetails
// Size: 0x300(Inherited: 0x260) 
struct UCustomZoneSettingsConfigurationDetails : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UEditableText* _name;  // 0x278(0x8)
	struct UCustomZoneSettingsColorPicker* _color;  // 0x280(0x8)
	struct UVerticalBox* _handlingMethodSelectorContainer;  // 0x288(0x8)
	struct TArray<struct FLinearColor> _colors;  // 0x290(0x10)
	UCustomZoneSettingsHandlingMethodSelector* _handlingMethodSelectorClass;  // 0x2A0(0x8)
	char pad_680_1 : 7;  // 0x2A8(0x1)
	bool _shouldShowSkipOption : 1;  // 0x2A8(0x1)
	char pad_681[87];  // 0x2A9(0x57)

	void HandleNameChange(struct FText& Text, char ETextCommit CommitMethod); // Function ConZ.CustomZoneSettingsConfigurationDetails.HandleNameChange
}; 



// Class ConZ.CustomZoneSettingsDetailsDisplay
// Size: 0x2F8(Inherited: 0x260) 
struct UCustomZoneSettingsDetailsDisplay : public UUserWidget
{
	char pad_608[96];  // 0x260(0x60)
	struct UBorder* _displayBox;  // 0x2C0(0x8)
	UCustomZoneSettingsConfigurationDetails* _globalConfigurationDetailsWidgetClass;  // 0x2C8(0x8)
	UCustomZoneSettingsConfigurationDetails* _configurationDetailsWidgetClass;  // 0x2D0(0x8)
	UCustomZoneSettingsRegionDetails* _regionDetailsWidgetClass;  // 0x2D8(0x8)
	struct UCustomZoneSettingsConfigurationDetails* _globalConfigurationDetails;  // 0x2E0(0x8)
	struct UCustomZoneSettingsConfigurationDetails* _configurationDetails;  // 0x2E8(0x8)
	struct UCustomZoneSettingsRegionDetails* _regionDetails;  // 0x2F0(0x8)

}; 



// Class ConZ.InternalMountPath
// Size: 0x48(Inherited: 0x40) 
struct UInternalMountPath : public UMountPath
{
	struct FGameplayTag DestinationSlotId;  // 0x40(0x8)

}; 



// Class ConZ.CustomZoneSettingsUIController
// Size: 0x270(Inherited: 0x28) 
struct UCustomZoneSettingsUIController : public UObject
{
	char pad_40[584];  // 0x28(0x248)

	void ToggleRemoveRegionMapMode(); // Function ConZ.CustomZoneSettingsUIController.ToggleRemoveRegionMapMode
	void ToggleAddRectangleRegionMapMode(); // Function ConZ.CustomZoneSettingsUIController.ToggleAddRectangleRegionMapMode
	void ToggleAddCircleRegionMapMode(); // Function ConZ.CustomZoneSettingsUIController.ToggleAddCircleRegionMapMode
	void ResetToDefaults(); // Function ConZ.CustomZoneSettingsUIController.ResetToDefaults
	void ProcessAddDefaultRegionRequest(); // Function ConZ.CustomZoneSettingsUIController.ProcessAddDefaultRegionRequest
	void ProcessAddDefaultConfigurationRequest(); // Function ConZ.CustomZoneSettingsUIController.ProcessAddDefaultConfigurationRequest
	void ApplyCustomZoneSettings(); // Function ConZ.CustomZoneSettingsUIController.ApplyCustomZoneSettings
}; 



// Class ConZ.CutObjectAction
// Size: 0xD0(Inherited: 0xA8) 
struct UCutObjectAction : public UInteractionAction
{
	char pad_168[40];  // 0xA8(0x28)

}; 



// Class ConZ.SilentAlarmTrapItem
// Size: 0xA90(Inherited: 0xA60) 
struct ASilentAlarmTrapItem : public ATrapItem
{
	struct UAkAudioEvent* _triggerSound;  // 0xA60(0x8)
	float _detonationDelay;  // 0xA68(0x4)
	char pad_2668[4];  // 0xA6C(0x4)
	struct UNameableItemComponent* _nameableItemComponent;  // 0xA70(0x8)
	char pad_2680[24];  // 0xA78(0x18)

	void Detonate(); // Function ConZ.SilentAlarmTrapItem.Detonate
}; 



// Class ConZ.DamageDirectionIndicator
// Size: 0x70(Inherited: 0x28) 
struct UDamageDirectionIndicator : public UObject
{
	char pad_40_1 : 7;  // 0x28(0x1)
	bool Visible : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)
	struct UTexture* Texture;  // 0x30(0x8)
	float Radius;  // 0x38(0x4)
	float OpacityMultiplier;  // 0x3C(0x4)
	float DefaultDelayDuration;  // 0x40(0x4)
	float DefaultSustainDuration;  // 0x44(0x4)
	float DefaultReleaseDuration;  // 0x48(0x4)
	char pad_76[36];  // 0x4C(0x24)

}; 



// Class ConZ.PostItemsSpawnedActions_SetResourceAmount
// Size: 0x40(Inherited: 0x28) 
struct UPostItemsSpawnedActions_SetResourceAmount : public UPostItemsSpawnedActions
{
	char pad_40_1 : 7;  // 0x28(0x1)
	bool _useAbsoluteAmount : 1;  // 0x28(0x1)
	char pad_41[3];  // 0x29(0x3)
	struct FFloatInterval _absoluteAmount;  // 0x2C(0x8)
	char pad_52_1 : 7;  // 0x34(0x1)
	bool _useAmountRatio : 1;  // 0x34(0x1)
	char pad_53[3];  // 0x35(0x3)
	struct FFloatInterval _amountRatio;  // 0x38(0x8)

}; 



// Class ConZ.DamageReceiver
// Size: 0x28(Inherited: 0x28) 
struct UDamageReceiver : public UInterface
{

}; 



// Class ConZ.Trader
// Size: 0x930(Inherited: 0x900) 
struct ATrader : public ASedentaryNPC
{
	char pad_2304[16];  // 0x900(0x10)
	struct TWeakObjectPtr<UTraderPersonalityDataAsset> _traderPersonalityDataAsset;  // 0x910(0x8)
	char pad_2328[1];  // 0x918(0x1)
	char pad_2329_1 : 7;  // 0x919(0x1)
	bool _disregardsMales : 1;  // 0x919(0x1)
	char pad_2330[22];  // 0x91A(0x16)

}; 



// Class ConZ.ScumPointDamageType
// Size: 0x40(Inherited: 0x40) 
struct UScumPointDamageType : public UDamageType
{

}; 



// Class ConZ.ScumRadialDamageType
// Size: 0x40(Inherited: 0x40) 
struct UScumRadialDamageType : public UDamageType
{

}; 



// Class ConZ.PrisonerSkillsUIData
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerSkillsUIData : public UObject
{

}; 



// Class ConZ.DamageStatics
// Size: 0x28(Inherited: 0x28) 
struct UDamageStatics : public UBlueprintFunctionLibrary
{

	void TestingOnly_DirectDamage(struct AActor* Target, float Damage); // Function ConZ.DamageStatics.TestingOnly_DirectDamage
	void CheckWeaponDescReferences(struct UObject* WorldContext); // Function ConZ.DamageStatics.CheckWeaponDescReferences
}; 



// Class ConZ.ItemRackSlotComponent
// Size: 0x230(Inherited: 0x200) 
struct UItemRackSlotComponent : public USceneComponent
{
	struct AItem* _placedItem;  // 0x200(0x8)
	char pad_520[8];  // 0x208(0x8)
	struct TArray<UPlaceableOnRackItemTag*> _acceptableTags;  // 0x210(0x10)
	struct UAkAudioEvent* _placeItemAudioEvent;  // 0x220(0x8)
	char pad_552[8];  // 0x228(0x8)

	void OnRep_PlacedItem(); // Function ConZ.ItemRackSlotComponent.OnRep_PlacedItem
}; 



// Class ConZ.HUD_John
// Size: 0x360(Inherited: 0x310) 
struct AHUD_John : public AHUD
{
	char pad_784[8];  // 0x310(0x8)
	struct UFont* NormalFont;  // 0x318(0x8)
	char pad_800[64];  // 0x320(0x40)

}; 



// Class ConZ.DamagingTrapItem
// Size: 0xA70(Inherited: 0xA60) 
struct ADamagingTrapItem : public ATrapItem
{
	float _initialDamageAmount;  // 0xA60(0x4)
	float _damagePerSecond;  // 0xA64(0x4)
	struct UAkAudioEvent* _triggerSound;  // 0xA68(0x8)

}; 



// Class ConZ.DbConnection
// Size: 0x50(Inherited: 0x28) 
struct UDbConnection : public UObject
{
	char pad_40[40];  // 0x28(0x28)

}; 



// Class ConZ.DcxWheeledVehicle
// Size: 0xD60(Inherited: 0xAE0) 
struct ADcxWheeledVehicle : public AVehicleBase
{
	char pad_2784[40];  // 0xAE0(0x28)
	struct UDcxVehicleDriveComponent* _driveComponent;  // 0xB08(0x8)
	struct UVehicleDoorsComponent* _doorsComponent;  // 0xB10(0x8)
	struct UDcxWheeledVehicleEffectsComponent* _effectsComponent;  // 0xB18(0x8)
	char pad_2848[84];  // 0xB20(0x54)
	int32_t _minimumNumberOfWheelsToBeDriven;  // 0xB74(0x4)
	int32_t _minimumNumberOfWheelsToBePushed;  // 0xB78(0x4)
	float _minPushStartVelocity;  // 0xB7C(0x4)
	float _minPushStartVelocityIgnition;  // 0xB80(0x4)
	char pad_2948[4];  // 0xB84(0x4)
	struct UAkAudioEvent* _hornStartAudioEvent;  // 0xB88(0x8)
	struct UAkAudioEvent* _hornStopAudioEvent;  // 0xB90(0x8)
	float _maxPushForce;  // 0xB98(0x4)
	char pad_2972[4];  // 0xB9C(0x4)
	float _minPushForce;  // 0xBA0(0x4)
	float _maxPushForcePerPusher;  // 0xBA4(0x4)
	float _minPushStartForce;  // 0xBA8(0x4)
	char pad_2988[4];  // 0xBAC(0x4)
	struct UCurveFloat* _speedToPushForceCurve;  // 0xBB0(0x8)
	float _maxLinearVelocityWhenPushing;  // 0xBB8(0x4)
	float _maxAllowedDistanceFromPushStartingPlayer;  // 0xBBC(0x4)
	struct FRuntimeFloatCurve _pusherActionDifficultyVsSpeed;  // 0xBC0(0x88)
	struct FRuntimeFloatCurve _pusherBaseStrengthChangeRateSpeedInfluenceVsSpeed;  // 0xC48(0x88)
	struct FRuntimeFloatCurve _pusherBaseConstitutionChangeRateModifierVsSpeed;  // 0xCD0(0x88)
	char pad_3416[8];  // 0xD58(0x8)

	void UpdateHandlingParametersOnClient(float WheelSteeringLerpSpeedMultiplier, float engineIgnitionDurationMultiplier, float engineIgnitionFailureChance, float gearboxGearChangeDelayMultiplier, float gearboxGearUpRatioMultiplier, float gearboxGearDownRatioMultiplier); // Function ConZ.DcxWheeledVehicle.UpdateHandlingParametersOnClient
}; 



// Class ConZ.SortByButton
// Size: 0x2B8(Inherited: 0x260) 
struct USortByButton : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UButton* Button_1;  // 0x278(0x8)
	struct USizeBox* SizeBox_1;  // 0x280(0x8)
	struct UTextBlock* TextBlock_1;  // 0x288(0x8)
	float Size;  // 0x290(0x4)
	char pad_660[4];  // 0x294(0x4)
	struct FText Text;  // 0x298(0x18)
	char ESortByType Type;  // 0x2B0(0x1)
	char pad_689[7];  // 0x2B1(0x7)

	void SetType(char ESortByType sortType); // Function ConZ.SortByButton.SetType
	void OnTheButtonClicked(); // Function ConZ.SortByButton.OnTheButtonClicked
}; 



// Class ConZ.ExplosiveProtectionItemComponent
// Size: 0x150(Inherited: 0xC8) 
struct UExplosiveProtectionItemComponent : public UItemComponent
{
	char pad_200[8];  // 0xC8(0x8)
	AMinigame* _minigameClass;  // 0xD0(0x8)
	UBaseItemTag* _minigameToolTag;  // 0xD8(0x8)
	struct ULockItemTag* _lockItem;  // 0xE0(0x8)
	struct ULockData* _lockData;  // 0xE8(0x8)
	struct UParticleSystem* _explosionParticles;  // 0xF0(0x8)
	struct FVector _explosionParticlesLocation;  // 0xF8(0xC)
	char pad_260[4];  // 0x104(0x4)
	struct UAkAudioEvent* _explosionAudioEvent;  // 0x108(0x8)
	float _explosionBaseDamage;  // 0x110(0x4)
	float _explosionMinimalDamage;  // 0x114(0x4)
	float _explosionDamagePositionOffset;  // 0x118(0x4)
	float _explosionDamageFalloff;  // 0x11C(0x4)
	float _explosionInnerRadius;  // 0x120(0x4)
	float _explosionOuterRadius;  // 0x124(0x4)
	struct FTargetTypeDamageMultiplier _targetTypeMultiplier;  // 0x128(0x10)
	float _hearingDamageRadius;  // 0x138(0x4)
	char pad_316[4];  // 0x13C(0x4)
	UMatineeCameraShake* _explosionCameraShakeClass;  // 0x140(0x8)
	char pad_328_1 : 7;  // 0x148(0x1)
	bool _isArmed : 1;  // 0x148(0x1)
	char pad_329[7];  // 0x149(0x7)

	void NetMulticast_PlayDetonationEffects(); // Function ConZ.ExplosiveProtectionItemComponent.NetMulticast_PlayDetonationEffects
}; 



// Class ConZ.EngineeringSkill
// Size: 0x1A0(Inherited: 0xB0) 
struct UEngineeringSkill : public UIntelligenceSkill
{
	struct FEngineeringSkillExperienceAwards NoSkillExperienceAwards;  // 0xB0(0x10)
	struct FEngineeringSkillExperienceAwards BasicSkillExperienceAwards;  // 0xC0(0x10)
	struct FEngineeringSkillExperienceAwards MediumSkillExperienceAwards;  // 0xD0(0x10)
	struct FEngineeringSkillExperienceAwards AdvancedSkillExperienceAwards;  // 0xE0(0x10)
	struct FEngineeringSkillExperienceAwards AboveAdvancedSkillExperienceAwards;  // 0xF0(0x10)
	struct FEngineeringSkillParametersPerSkillLevel NoSkillParameters;  // 0x100(0x20)
	struct FEngineeringSkillParametersPerSkillLevel BasicSkillParameters;  // 0x120(0x20)
	struct FEngineeringSkillParametersPerSkillLevel MediumSkillParameters;  // 0x140(0x20)
	struct FEngineeringSkillParametersPerSkillLevel AdvancedSkillParameters;  // 0x160(0x20)
	struct FEngineeringSkillParametersPerSkillLevel AboveAdvancedSkillParameters;  // 0x180(0x20)

}; 



// Class ConZ.GloveStatsTag
// Size: 0x40(Inherited: 0x30) 
struct UGloveStatsTag : public UBaseItemTag
{
	float ElectricalDamageModifier;  // 0x30(0x4)
	float LockpkickingPressureModifier;  // 0x34(0x4)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool PreventsHandAbrasions : 1;  // 0x38(0x1)
	char pad_57[3];  // 0x39(0x3)
	float DecayMultiplierWhileDoingAbrasiveActions;  // 0x3C(0x4)

}; 



// Class ConZ.DcxBike
// Size: 0xDB0(Inherited: 0xD60) 
struct ADcxBike : public ADcxWheeledVehicle4W
{
	char pad_3424[4];  // 0xD60(0x4)
	char pad_3428_1 : 7;  // 0xD64(0x1)
	bool _shouldApplyStabilization : 1;  // 0xD64(0x1)
	char pad_3429[3];  // 0xD65(0x3)
	struct FVector _centerOfMassOffset;  // 0xD68(0xC)
	struct FVector _centerOfMassOffsetNotMounted;  // 0xD74(0xC)
	float _angVelXDamping;  // 0xD80(0x4)
	float _angVelYDamping;  // 0xD84(0x4)
	float _angVelZDamping;  // 0xD88(0x4)
	char pad_3468[4];  // 0xD8C(0x4)
	float _bicycleDriftAmount;  // 0xD90(0x4)
	float _bicycleDriftLeanAmount;  // 0xD94(0x4)
	float _impactSpeedForUnmount;  // 0xD98(0x4)
	char pad_3484[20];  // 0xD9C(0x14)

}; 



// Class ConZ.DcxMotorcycle
// Size: 0xDB0(Inherited: 0xDB0) 
struct ADcxMotorcycle : public ADcxBike
{

}; 



// Class ConZ.PrisonerActionFillWaterDescription
// Size: 0x60(Inherited: 0x38) 
struct UPrisonerActionFillWaterDescription : public UPrisonerActionDescription
{
	char pad_56[40];  // 0x38(0x28)

}; 



// Class ConZ.DcxMotorcycleAnimInstance
// Size: 0xAA0(Inherited: 0xAA0) 
struct UDcxMotorcycleAnimInstance : public UDcxBikeAnimInstance
{

}; 



// Class ConZ.DcxWheeledVehicleDriveComponent4W
// Size: 0x4A0(Inherited: 0x408) 
struct UDcxWheeledVehicleDriveComponent4W : public UDcxVehicleDriveComponent4W
{
	struct FRuntimeFloatCurve _maxArtificialBrakingForceVsSpeedKph;  // 0x408(0x88)
	struct TArray<struct FDcxWheeledVehicleFlatTireWheelConfiguration> _flatTireWheelConfigurations;  // 0x490(0x10)

	void InflateWheelTire(int32_t WheelIndex); // Function ConZ.DcxWheeledVehicleDriveComponent4W.InflateWheelTire
	float GetEngineLoad(); // Function ConZ.DcxWheeledVehicleDriveComponent4W.GetEngineLoad
	void DeflateWheelTire(int32_t WheelIndex); // Function ConZ.DcxWheeledVehicleDriveComponent4W.DeflateWheelTire
}; 



// Class ConZ.DcxWheeledVehicleTire
// Size: 0x108(Inherited: 0xE0) 
struct UDcxWheeledVehicleTire : public UDcxVehicleTire
{
	struct FDcxVehicleTireParticleData ParticleTrail;  // 0xE0(0x14)
	struct FDcxVehicleTireParticleData ParticleWave;  // 0xF4(0x14)

}; 



// Class ConZ.PrisonerActionFillGameResourceContainerWithReplenishableResourceDescription
// Size: 0xA8(Inherited: 0x90) 
struct UPrisonerActionFillGameResourceContainerWithReplenishableResourceDescription : public UPrisonerActionFillGameResourceContainerDescription
{
	char pad_144[16];  // 0x90(0x10)
	struct UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;  // 0xA0(0x8)

}; 



// Class ConZ.DeathmatchLocationMarker
// Size: 0x440(Inherited: 0x418) 
struct ADeathmatchLocationMarker : public AGameEventLocationMarker
{
	struct FDeathmatchParameters DeathmatchParameters;  // 0x418(0x14)
	struct FVector FocusOffset;  // 0x42C(0xC)
	float MinimalRadius;  // 0x438(0x4)
	char pad_1084[4];  // 0x43C(0x4)

}; 



// Class ConZ.DebugRpcChannel
// Size: 0xB0(Inherited: 0xB0) 
struct UDebugRpcChannel : public UActorComponent
{

	void Server_Farming_SetWeedIntensity(struct AGarden* Garden, int32_t SlotId, float Intensity); // Function ConZ.DebugRpcChannel.Server_Farming_SetWeedIntensity
	void Server_Farming_SetGrowthState(struct AGarden* Garden, int32_t SlotId, uint8_t  stage); // Function ConZ.DebugRpcChannel.Server_Farming_SetGrowthState
	void Server_Farming_RemovePlant(struct AGarden* Garden, int32_t SlotId); // Function ConZ.DebugRpcChannel.Server_Farming_RemovePlant
	void Server_Farming_PlantAPlant(struct APrisoner* planter, struct AGarden* Garden, int32_t Slot, struct UPlantSpecies* species); // Function ConZ.DebugRpcChannel.Server_Farming_PlantAPlant
	void Server_Farming_KillPlant(struct AGarden* Garden, int32_t SlotId); // Function ConZ.DebugRpcChannel.Server_Farming_KillPlant
	void Server_Farming_CreateGarden(struct APrisoner* Owner, struct FVector Location, struct FRotator Rotation, struct FIntPoint Size); // Function ConZ.DebugRpcChannel.Server_Farming_CreateGarden
	void Server_Farming_ApplyPesticide(struct AGarden* Garden, int32_t Slot); // Function ConZ.DebugRpcChannel.Server_Farming_ApplyPesticide
	void Server_Farming_ApplyFungicide(struct AGarden* Garden, int32_t Slot); // Function ConZ.DebugRpcChannel.Server_Farming_ApplyFungicide
	void Server_Farming_AddWaterToSlot(struct AGarden* Garden, int32_t Slot, float Amount); // Function ConZ.DebugRpcChannel.Server_Farming_AddWaterToSlot
	void Server_Farming_AddFertilizer(struct AGarden* Garden, int32_t Slot, bool isIndustrial); // Function ConZ.DebugRpcChannel.Server_Farming_AddFertilizer
}; 



// Class ConZ.DedicatedServerRequest
// Size: 0xE8(Inherited: 0x28) 
struct UDedicatedServerRequest : public UObject
{
	char pad_40[192];  // 0x28(0xC0)

}; 



// Class ConZ.DepotItem
// Size: 0xA50(Inherited: 0xA20) 
struct ADepotItem : public AChestItem
{
	char pad_2592[32];  // 0xA20(0x20)
	struct ATradePost* _assignedTradePost;  // 0xA40(0x8)
	char pad_2632[8];  // 0xA48(0x8)

}; 



// Class ConZ.InventoryNode
// Size: 0x28(Inherited: 0x28) 
struct UInventoryNode : public UInterface
{

	void IncrementUIDisplayStateVersion(); // Function ConZ.InventoryNode.IncrementUIDisplayStateVersion
	struct FText GetInventoryNodeName(); // Function ConZ.InventoryNode.GetInventoryNodeName
	struct UTexture2D* GetInventoryNodeIcon(); // Function ConZ.InventoryNode.GetInventoryNodeIcon
	struct FText GetInventoryNodeDescription(); // Function ConZ.InventoryNode.GetInventoryNodeDescription
	bool CanBeEverDropped(); // Function ConZ.InventoryNode.CanBeEverDropped
}; 



// Class ConZ.DefaultDamageCustomization
// Size: 0x80(Inherited: 0x28) 
struct UDefaultDamageCustomization : public UDamageCustomization
{
	struct TArray<struct FPrisonerInjuryTypeLikelihoods> PrisonerInjuryTypeLikelihoodsPerBodyPart;  // 0x28(0x10)
	struct TArray<float> PrisonerBleedingSeverityEnergyThreshold;  // 0x38(0x10)
	float PrisonerDamageMultiplierPerBodyPart[c];  // 0x48(0x30)
	float StaminaDrainPerHundredJoules;  // 0x78(0x4)
	float HeadshotInstantKillEnergyThreshold;  // 0x7C(0x4)

}; 



// Class ConZ.PostItemsSpawnedActions_SetClothesDirtiness
// Size: 0x30(Inherited: 0x28) 
struct UPostItemsSpawnedActions_SetClothesDirtiness : public UPostItemsSpawnedActions
{
	struct FFloatInterval _dirtiness;  // 0x28(0x8)

}; 



// Class ConZ.DropZoneCrate
// Size: 0x290(Inherited: 0x280) 
struct ADropZoneCrate : public ADropZoneDroppable
{
	ADropZoneKey* KeyClass;  // 0x280(0x8)
	char pad_648_1 : 7;  // 0x288(0x1)
	bool _hasKey : 1;  // 0x288(0x1)
	char pad_649[7];  // 0x289(0x7)

	void OnRep_HasKey(); // Function ConZ.DropZoneCrate.OnRep_HasKey
}; 



// Class ConZ.DefusingCuttingToolItemTag
// Size: 0x40(Inherited: 0x30) 
struct UDefusingCuttingToolItemTag : public UBaseItemTag
{
	struct USkeletalMesh* SkeletalMesh;  // 0x30(0x8)
	struct UAnimMontage* Montage;  // 0x38(0x8)

}; 



// Class ConZ.VehicleDoorsComponent
// Size: 0xC0(Inherited: 0xB0) 
struct UVehicleDoorsComponent : public UActorComponent
{
	char pad_176[16];  // 0xB0(0x10)

}; 



// Class ConZ.DemolitionSkill
// Size: 0x308(Inherited: 0xB0) 
struct UDemolitionSkill : public UDexteritySkill
{
	struct FDemolitionSkillParametersPerSkillLevel NoSkillParameters;  // 0xB0(0x78)
	struct FDemolitionSkillParametersPerSkillLevel BasicSkillParameters;  // 0x128(0x78)
	struct FDemolitionSkillParametersPerSkillLevel MediumSkillParameters;  // 0x1A0(0x78)
	struct FDemolitionSkillParametersPerSkillLevel AdvancedSkillParameters;  // 0x218(0x78)
	struct FDemolitionSkillParametersPerSkillLevel AboveAdvancedSkillParameters;  // 0x290(0x78)

}; 



// Class ConZ.PrisonerTradingComponent
// Size: 0xC8(Inherited: 0xB0) 
struct UPrisonerTradingComponent : public UActorComponent
{
	char pad_176[24];  // 0xB0(0x18)

}; 



// Class ConZ.DetectableMetalAssetData
// Size: 0x28(Inherited: 0x28) 
struct UDetectableMetalAssetData : public UAssetUserData
{

}; 



// Class ConZ.MetabolismBodyReservesPanel
// Size: 0x278(Inherited: 0x260) 
struct UMetabolismBodyReservesPanel : public UUserWidget
{
	struct UMetabolismRadialProgressBar* _rpb_Muscle;  // 0x260(0x8)
	struct UMetabolismRadialProgressBar* _rpb_Fat;  // 0x268(0x8)
	char pad_624[8];  // 0x270(0x8)

}; 



// Class ConZ.DialLockMinigameBase
// Size: 0x358(Inherited: 0x2F8) 
struct ADialLockMinigameBase : public AMinigame
{
	struct UStaticMeshComponent* _lockBody;  // 0x2F8(0x8)
	struct UStaticMeshComponent* _lockClamp;  // 0x300(0x8)
	float _animationLength;  // 0x308(0x4)
	char pad_780[4];  // 0x30C(0x4)
	struct TArray<struct FWheelData> _wheels;  // 0x310(0x10)
	char pad_800[48];  // 0x320(0x30)
	struct UAkAudioEvent* _wheelTurnedAudioEvent;  // 0x350(0x8)

}; 



// Class ConZ.DialLockMinigame
// Size: 0x3F0(Inherited: 0x358) 
struct ADialLockMinigame : public ADialLockMinigameBase
{
	struct UAkAudioEvent* _incorrectCombinationAudioEvent;  // 0x358(0x8)
	struct UAkAudioEvent* _unlockedAudioEvent;  // 0x360(0x8)
	char pad_872[8];  // 0x368(0x8)
	struct FTransform _protectionParticlesTransform;  // 0x370(0x30)
	char pad_928[64];  // 0x3A0(0x40)
	float _throbberDelay;  // 0x3E0(0x4)
	char pad_996[12];  // 0x3E4(0xC)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_IntelligenceModifier
// Size: 0x30(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_IntelligenceModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{

}; 



// Class ConZ.Metabolism_ICU_TEMP_Stats
// Size: 0x288(Inherited: 0x278) 
struct UMetabolism_ICU_TEMP_Stats : public UMetabolism_ICU_Expandable_Stats
{
	struct UTextBlock* _tempMinMax;  // 0x278(0x8)
	struct UTextBlock* _tempDeviation;  // 0x280(0x8)

}; 



// Class ConZ.LockpickingMinigameConfiguration
// Size: 0x98(Inherited: 0x48) 
struct ULockpickingMinigameConfiguration : public UMinigameConfiguration
{
	char pad_72[8];  // 0x48(0x8)
	struct ULockData* LockData;  // 0x50(0x8)
	char pad_88[64];  // 0x58(0x40)

}; 



// Class ConZ.TabGroup
// Size: 0x2B8(Inherited: 0x260) 
struct UTabGroup : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct UPanelWidget* _tabPanel;  // 0x290(0x8)
	uint8_t  _previous;  // 0x298(0x1)
	uint8_t  _next;  // 0x299(0x1)
	uint8_t  _in;  // 0x29A(0x1)
	char pad_667_1 : 7;  // 0x29B(0x1)
	bool _canWrap : 1;  // 0x29B(0x1)
	char EHorizontalAlignment _tabHorizontalAlignment;  // 0x29C(0x1)
	char EVerticalAlignment _tabVerticalAlignment;  // 0x29D(0x1)
	char pad_670[26];  // 0x29E(0x1A)

}; 



// Class ConZ.DialLockMinigameConfiguration
// Size: 0x98(Inherited: 0x98) 
struct UDialLockMinigameConfiguration : public ULockpickingMinigameConfiguration
{

}; 



// Class ConZ.PrisonerHUD
// Size: 0x898(Inherited: 0x310) 
struct APrisonerHUD : public AHUD
{
	char pad_784[16];  // 0x310(0x10)
	struct UHudWidget* HudWidget;  // 0x320(0x8)
	struct UDamageDirectionIndicator* DamageDirectionIndicator;  // 0x328(0x8)
	char pad_816_1 : 7;  // 0x330(0x1)
	bool ShouldDrawCrosshair : 1;  // 0x330(0x1)
	char pad_817_1 : 7;  // 0x331(0x1)
	bool ShouldDrawScreenCenterDot : 1;  // 0x331(0x1)
	char pad_818[6];  // 0x332(0x6)
	struct UMaterialInterface* TacticsMaterial;  // 0x338(0x8)
	struct ULoadingIconWidget* LoadingIconWidget;  // 0x340(0x8)
	struct USpawnScreen* SpawnScreenWidget;  // 0x348(0x8)
	struct UWaypointScreenWidget* WaypointScreenWidget;  // 0x350(0x8)
	struct FMulticastInlineDelegate OnShouldShowExtendedWidgetTooltipChanged;  // 0x358(0x10)
	struct UFont* _HUDFont;  // 0x368(0x8)
	struct UFont* _HUDFontScope;  // 0x370(0x8)
	char pad_888[48];  // 0x378(0x30)
	float _customMapBorderWidth;  // 0x3A8(0x4)
	struct FLinearColor _customMapBorderColor;  // 0x3AC(0x10)
	char pad_956[60];  // 0x3BC(0x3C)
	UPauseMenuUIController* _pauseMenuUIControllerClass;  // 0x3F8(0x8)
	struct FGameplayTagContainer _traderCategories;  // 0x400(0x20)
	char pad_1056[8];  // 0x420(0x8)
	UPlantingPanel* _plantingPanelWidgetClass;  // 0x428(0x8)
	UAdminPlantPanel* _adminPlantPanelWidgetClass;  // 0x430(0x8)
	char pad_1080[8];  // 0x438(0x8)
	UPlantStatusIndicatorWidget* _plantStatusIndicatorWidgetClass;  // 0x440(0x8)
	char pad_1096[24];  // 0x448(0x18)
	UCookingUIController* _cookingUIControllerClass;  // 0x460(0x8)
	char pad_1128[8];  // 0x468(0x8)
	UChatUIController* _chatUIControllerClass;  // 0x470(0x8)
	char pad_1144[122];  // 0x478(0x7A)
	char pad_1266_1 : 7;  // 0x4F2(0x1)
	bool _shouldDrawOtherPlayerInfo : 1;  // 0x4F2(0x1)
	char pad_1267_1 : 7;  // 0x4F3(0x1)
	bool _isLeftMouseButtonPressed : 1;  // 0x4F3(0x1)
	char pad_1268[52];  // 0x4F4(0x34)
	struct FMapHUDPrisonerObject _prisonerMapHUDObject;  // 0x528(0x40)
	struct FMapHUDHomeLocationObject _homeLocationMapHUDObject;  // 0x568(0x48)
	struct FMapHUDWorldEventsObject _worldEventsMapHUDObject;  // 0x5B0(0x18)
	struct FMapHUDOtherPlayersObject _otherPlayersMapHUDObjects;  // 0x5C8(0xC0)
	struct FMapHUDDroneObject _droneMapHUDObject;  // 0x688(0x38)
	struct FMapHUDVehiclesObject _vehicleMapHUDObjects;  // 0x6C0(0xC0)
	char pad_1920[32];  // 0x780(0x20)
	struct FMapHUDFlagsObject _flagMapHUDObjects;  // 0x7A0(0xC0)
	char pad_2144[48];  // 0x860(0x30)
	struct UItemSplitWidget* _itemSplitWidget;  // 0x890(0x8)

	void ShouldShowExtendedWidgetTooltipChanged__DelegateSignature(bool ShouldShowExtendedWidgetTooltip); // DelegateFunction ConZ.PrisonerHUD.ShouldShowExtendedWidgetTooltipChanged__DelegateSignature
	bool ShouldShowExtendedWidgetTooltip(); // Function ConZ.PrisonerHUD.ShouldShowExtendedWidgetTooltip
	void SetHUDMode(uint8_t  NewMode); // Function ConZ.PrisonerHUD.SetHUDMode
	void SendVehicleMarkerDataDataRequest(); // Function ConZ.PrisonerHUD.SendVehicleMarkerDataDataRequest
	void ReceiveVehicleMarkerData(struct UVehicleMarkersData* Data); // Function ConZ.PrisonerHUD.ReceiveVehicleMarkerData
	bool IsShowingSpawnScreen(); // Function ConZ.PrisonerHUD.IsShowingSpawnScreen
	bool IsShowingLoading(); // Function ConZ.PrisonerHUD.IsShowingLoading
	struct UWaypointScreenWidget* GetWaypointScreenWidget(); // Function ConZ.PrisonerHUD.GetWaypointScreenWidget
	struct UCanvasPanel* GetHudWidgetCanvasPanel(); // Function ConZ.PrisonerHUD.GetHudWidgetCanvasPanel
	uint8_t  GetHUDMode(); // Function ConZ.PrisonerHUD.GetHUDMode
}; 



// Class ConZ.DialLockSetCombinationMinigame
// Size: 0x360(Inherited: 0x358) 
struct ADialLockSetCombinationMinigame : public ADialLockMinigameBase
{
	char pad_856[8];  // 0x358(0x8)

}; 



// Class ConZ.KillBoxC4SpawnPoint
// Size: 0x230(Inherited: 0x220) 
struct AKillBoxC4SpawnPoint : public AActor
{
	struct TArray<AItem*> _possibleSpawnClasses;  // 0x220(0x10)

}; 



// Class ConZ.DialLockSetConfigurationMinigameConfiguration
// Size: 0xA0(Inherited: 0x98) 
struct UDialLockSetConfigurationMinigameConfiguration : public UDialLockMinigameConfiguration
{
	char pad_152[8];  // 0x98(0x8)

}; 



// Class ConZ.InventoryPositionData
// Size: 0x28(Inherited: 0x28) 
struct UInventoryPositionData : public UObject
{

}; 



// Class ConZ.PrisonerBodySymptomUIData_Leukopenia
// Size: 0xB0(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_Leukopenia : public UPrisonerBodySymptomUIData
{
	char pad_168[8];  // 0xA8(0x8)

}; 



// Class ConZ.DialLockWidget
// Size: 0x2A0(Inherited: 0x278) 
struct UDialLockWidget : public UMinigameWidget
{
	struct UWidgetAnimation* _onSuccess;  // 0x278(0x8)
	struct UWidgetAnimation* _onFailure;  // 0x280(0x8)
	struct UWidgetAnimation* _showThrobber;  // 0x288(0x8)
	struct UWidgetAnimation* _hideThrobber;  // 0x290(0x8)
	char pad_664[8];  // 0x298(0x8)

}; 



// Class ConZ.GlobalGuardedZoneManager
// Size: 0x260(Inherited: 0x220) 
struct AGlobalGuardedZoneManager : public AActor
{
	char pad_544[24];  // 0x220(0x18)
	struct TArray<struct FGuardedZoneManagerDescription> _guardedZoneManagers;  // 0x238(0x10)
	char pad_584[8];  // 0x248(0x8)
	float _guardedZoneTickTime;  // 0x250(0x4)
	float _playerLogicTickTime;  // 0x254(0x4)
	char pad_600[8];  // 0x258(0x8)

}; 



// Class ConZ.DialogButton
// Size: 0x928(Inherited: 0x260) 
struct UDialogButton : public UUserWidget
{
	char pad_608[80];  // 0x260(0x50)
	char pad_688_1 : 7;  // 0x2B0(0x1)
	bool PreviewSelectedState : 1;  // 0x2B0(0x1)
	char pad_689[7];  // 0x2B1(0x7)
	struct UButton* _button;  // 0x2B8(0x8)
	struct UTextBlock* _text;  // 0x2C0(0x8)
	struct USizeBox* _sizeBox;  // 0x2C8(0x8)
	struct FText _initialTitle;  // 0x2D0(0x18)
	struct FTabButtonStyle _selectedButtonStyle;  // 0x2E8(0x288)
	struct FTabButtonStyle _deselectedButtonStyle;  // 0x570(0x288)
	struct FTabTextStyle _selectedTextStyle;  // 0x7F8(0x98)
	struct FTabTextStyle _deselectedTextStyle;  // 0x890(0x98)

	void OnClick(); // Function ConZ.DialogButton.OnClick
}; 



// Class ConZ.DialogueContainerWidget
// Size: 0x280(Inherited: 0x260) 
struct UDialogueContainerWidget : public UUserWidget
{
	struct USubtitleWidget* _subtitleWidget;  // 0x260(0x8)
	struct UOverlay* _avatarImageOverlay;  // 0x268(0x8)
	struct UTextBlock* _actionText;  // 0x270(0x8)
	char pad_632[8];  // 0x278(0x8)

	void StartAvatarAnimation(uint8_t  AnimationState); // Function ConZ.DialogueContainerWidget.StartAvatarAnimation
	struct UWidgetAnimation* GetShowAvatarAnimation(); // Function ConZ.DialogueContainerWidget.GetShowAvatarAnimation
	struct UWidgetAnimation* GetHideAvatarAnimation(); // Function ConZ.DialogueContainerWidget.GetHideAvatarAnimation
}; 



// Class ConZ.SquareCheckbox
// Size: 0x280(Inherited: 0x260) 
struct USquareCheckbox : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct UWidgetAnimation* _selectAnimation;  // 0x270(0x8)
	char pad_632[8];  // 0x278(0x8)

}; 



// Class ConZ.PrisonerActionAnalyzeAnimalTrack
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionAnalyzeAnimalTrack : public UPrisonerAction
{

}; 



// Class ConZ.DistantLevelManager
// Size: 0x3C0(Inherited: 0x220) 
struct ADistantLevelManager : public AActor
{
	struct USceneComponent* _rootComponent;  // 0x220(0x8)
	float _minCameraLocationChangeToUpdateDistantLevels;  // 0x228(0x4)
	float _distantMeshPreloadDistance;  // 0x22C(0x4)
	int32_t _maxNumSimultaneouslyStreamedDistantMeshLODs;  // 0x230(0x4)
	float _distantCollisionMeshUnloadDistance;  // 0x234(0x4)
	int32_t _maxNumSimultaneouslyStreamedDistantCollisionMeshes;  // 0x238(0x4)
	char pad_572[4];  // 0x23C(0x4)
	struct TArray<struct FDistantLevelDescription> _distantLevelDescriptions;  // 0x240(0x10)
	char pad_592[368];  // 0x250(0x170)

	void HandleStreamingLevelsVisibilityChanged(); // Function ConZ.DistantLevelManager.HandleStreamingLevelsVisibilityChanged
}; 



// Class ConZ.FlareItemComponent
// Size: 0x1C0(Inherited: 0x1A0) 
struct UFlareItemComponent : public UIgnitableItemComponent
{
	char pad_416[8];  // 0x1A0(0x8)
	struct FLinearColor _pointLightColor;  // 0x1A8(0x10)
	struct UMaterialInterface* _pointLightMaterial;  // 0x1B8(0x8)

}; 



// Class ConZ.PrisonerActionRepairItemDescription
// Size: 0x68(Inherited: 0x50) 
struct UPrisonerActionRepairItemDescription : public UPrisonerActionRepairDescription
{
	char pad_80[24];  // 0x50(0x18)

}; 



// Class ConZ.DivingMaskTag
// Size: 0x30(Inherited: 0x30) 
struct UDivingMaskTag : public UBaseItemTag
{

}; 



// Class ConZ.LockpickItemTag
// Size: 0x40(Inherited: 0x30) 
struct ULockpickItemTag : public UBaseItemTag
{
	struct UStaticMesh* Mesh;  // 0x30(0x8)
	float LockpickingDurability;  // 0x38(0x4)
	char pad_60[4];  // 0x3C(0x4)

}; 



// Class ConZ.ItemTooltipTab
// Size: 0x148(Inherited: 0x138) 
struct UItemTooltipTab : public UWidgetSwitcher
{
	struct TArray<struct UPanelWidget*> _panels;  // 0x138(0x10)

}; 



// Class ConZ.DogTagItem
// Size: 0x940(Inherited: 0x910) 
struct ADogTagItem : public AItem
{
	struct FDbIntegerId _userProfileId;  // 0x910(0x8)
	struct FString _userProfileName;  // 0x918(0x10)
	char pad_2344[8];  // 0x928(0x8)
	struct UExpirableItemComponent* _expirableItemComponent;  // 0x930(0x8)
	char pad_2360[8];  // 0x938(0x8)

	void OnRep_UserProfileName(); // Function ConZ.DogTagItem.OnRep_UserProfileName
}; 



// Class ConZ.ItemLightDisplay
// Size: 0x2E0(Inherited: 0x260) 
struct UItemLightDisplay : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UImage* _itemImage;  // 0x278(0x8)
	struct UImage* _emptySlotBackground;  // 0x280(0x8)
	struct USizeBox* _sizeBox;  // 0x288(0x8)
	struct UTextBlock* _durability;  // 0x290(0x8)
	struct UTextBlock* _uses;  // 0x298(0x8)
	struct UBorder* _selectionBorder;  // 0x2A0(0x8)
	struct UOverlay* _itemDataOverlay;  // 0x2A8(0x8)
	struct UProgressBar* _durabilityProgressBar;  // 0x2B0(0x8)
	struct UProgressBar* _usesProgressBar;  // 0x2B8(0x8)
	float _width;  // 0x2C0(0x4)
	float _height;  // 0x2C4(0x4)
	char pad_712[24];  // 0x2C8(0x18)

}; 



// Class ConZ.Metabolism_ICU_EKG_Stats
// Size: 0x280(Inherited: 0x278) 
struct UMetabolism_ICU_EKG_Stats : public UMetabolism_ICU_Expandable_Stats
{
	struct UTextBlock* _heartPulseBPM;  // 0x278(0x8)

}; 



// Class ConZ.FamePointDebugWidget
// Size: 0x268(Inherited: 0x260) 
struct UFamePointDebugWidget : public UUserWidget
{
	struct UTextBlock* _famePointsText;  // 0x260(0x8)

}; 



// Class ConZ.Door
// Size: 0x4F0(Inherited: 0x220) 
struct ADoor : public AActor
{
	char pad_544[32];  // 0x220(0x20)
	struct FName ControlName;  // 0x240(0x8)
	struct UMeshComponent* Mesh;  // 0x248(0x8)
	struct FMulticastInlineDelegate OnOpened;  // 0x250(0x10)
	char pad_608[112];  // 0x260(0x70)
	uint8_t  _doorType;  // 0x2D0(0x1)
	char pad_721[7];  // 0x2D1(0x7)
	struct USceneComponent* _rootComponent;  // 0x2D8(0x8)
	char pad_736[4];  // 0x2E0(0x4)
	int32_t _maxNumberOfLocks;  // 0x2E4(0x4)
	int32_t _maxNumberOfZappers;  // 0x2E8(0x4)
	char pad_748_1 : 7;  // 0x2EC(0x1)
	bool _supportsRemoteSensor : 1;  // 0x2EC(0x1)
	char pad_749_1 : 7;  // 0x2ED(0x1)
	bool CanOpenOnBothSides : 1;  // 0x2ED(0x1)
	char pad_750_1 : 7;  // 0x2EE(0x1)
	bool _canOpen : 1;  // 0x2EE(0x1)
	char pad_751[1];  // 0x2EF(0x1)
	float _openingDuration;  // 0x2F0(0x4)
	float _closingDuration;  // 0x2F4(0x4)
	char pad_760_1 : 7;  // 0x2F8(0x1)
	bool _canInteractWhileInTransition : 1;  // 0x2F8(0x1)
	char pad_761_1 : 7;  // 0x2F9(0x1)
	bool _shouldSelfClose : 1;  // 0x2F9(0x1)
	char pad_762[2];  // 0x2FA(0x2)
	float _openedDurationBeforeSelfClosing;  // 0x2FC(0x4)
	float _selfCloseDuration;  // 0x300(0x4)
	char pad_772[4];  // 0x304(0x4)
	struct UAkAudioEvent* _openingSoundCue;  // 0x308(0x8)
	struct UAkAudioEvent* _openedSoundCue;  // 0x310(0x8)
	struct UAkAudioEvent* _closingSoundCue;  // 0x318(0x8)
	struct UAkAudioEvent* _closedSoundCue;  // 0x320(0x8)
	float _noiseLoudness;  // 0x328(0x4)
	char pad_812[4];  // 0x32C(0x4)
	UDoorUnlockData* _doorUnlockData;  // 0x330(0x8)
	char pad_824[32];  // 0x338(0x20)
	uint8_t  _stateFlags;  // 0x358(0x1)
	char pad_857[1];  // 0x359(0x1)
	char pad_858_1 : 7;  // 0x35A(0x1)
	bool _canEverBeOpened : 1;  // 0x35A(0x1)
	char pad_859_1 : 7;  // 0x35B(0x1)
	bool _canEverBeClosed : 1;  // 0x35B(0x1)
	char pad_860[12];  // 0x35C(0xC)
	struct UPriceCategory* _priceCategory;  // 0x368(0x8)
	struct FTransform _unlockTransformInside;  // 0x370(0x30)
	struct FTransform _unlockTransformOutside;  // 0x3A0(0x30)
	float _forceUnlockMovementAcceptanceRadius;  // 0x3D0(0x4)
	char pad_980[4];  // 0x3D4(0x4)
	struct TArray<UObject*> _upgradeItemsClasses;  // 0x3D8(0x10)
	struct TArray<struct ULockData*> _lockData;  // 0x3E8(0x10)
	char pad_1016[16];  // 0x3F8(0x10)
	struct TArray<UObject*> _originalUpgradeItemsClasses;  // 0x408(0x10)
	struct TArray<struct ULockData*> _originalLockData;  // 0x418(0x10)
	char pad_1064[16];  // 0x428(0x10)
	struct FDbIntegerId _owningUserProfileId;  // 0x438(0x8)
	char pad_1088[16];  // 0x440(0x10)
	struct UDoorUpgradeWidget* _upgradeWidget;  // 0x450(0x8)
	char pad_1112[8];  // 0x458(0x8)
	struct FDoorRepData _doorRepData;  // 0x460(0x48)
	char pad_1192[17];  // 0x4A8(0x11)
	char pad_1209_1 : 7;  // 0x4B9(0x1)
	bool _disableSerialization : 1;  // 0x4B9(0x1)
	char pad_1210[30];  // 0x4BA(0x1E)
	struct TArray<struct AItem*> _attachedItems;  // 0x4D8(0x10)
	char pad_1256[8];  // 0x4E8(0x8)

	bool ShouldOpen(); // Function ConZ.Door.ShouldOpen
	void OnUnlockFailed__DelegateSignature(); // DelegateFunction ConZ.Door.OnUnlockFailed__DelegateSignature
	void OnUnlocked__DelegateSignature(struct ADoor* Door); // DelegateFunction ConZ.Door.OnUnlocked__DelegateSignature
	void OnRep_StateFlags(uint8_t  Previous); // Function ConZ.Door.OnRep_StateFlags
	void OnRep_OwningUserProfileId(); // Function ConZ.Door.OnRep_OwningUserProfileId
	void OnRep_Locks(); // Function ConZ.Door.OnRep_Locks
	void OnOpened__DelegateSignature(); // DelegateFunction ConZ.Door.OnOpened__DelegateSignature
	void OnLockRemoved__DelegateSignature(struct ADoor* Door); // DelegateFunction ConZ.Door.OnLockRemoved__DelegateSignature
	void OnLocked__DelegateSignature(struct ADoor* Door); // DelegateFunction ConZ.Door.OnLocked__DelegateSignature
	void OnDestroyedEvent(struct AActor* Self); // Function ConZ.Door.OnDestroyedEvent
	void OnAudioStopped(); // Function ConZ.Door.OnAudioStopped
	void ChangeOpenState(bool ShouldOpen); // Function ConZ.Door.ChangeOpenState
}; 



// Class ConZ.DoorEntitySetup
// Size: 0x80(Inherited: 0x80) 
struct UDoorEntitySetup : public UEntitySetup
{

}; 



// Class ConZ.PrisonerSkillUIData_Running
// Size: 0x58(Inherited: 0x50) 
struct UPrisonerSkillUIData_Running : public UPrisonerSkillUIData
{
	char pad_80[8];  // 0x50(0x8)

}; 



// Class ConZ.MessageBoxWithList
// Size: 0x2A0(Inherited: 0x298) 
struct UMessageBoxWithList : public UMessageBox
{
	struct UScrollBox* _listScrollBox;  // 0x298(0x8)

}; 



// Class ConZ.DoorUnlockData
// Size: 0x40(Inherited: 0x28) 
struct UDoorUnlockData : public UObject
{
	uint8_t  Type;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)
	struct FString Description;  // 0x30(0x10)

}; 



// Class ConZ.NotificationChain
// Size: 0x58(Inherited: 0x28) 
struct UNotificationChain : public UObject
{
	char pad_40[32];  // 0x28(0x20)
	struct TArray<struct FNotificationAndDelay> _notifications;  // 0x48(0x10)

}; 



// Class ConZ.UpgradeSlotWidget
// Size: 0x2D8(Inherited: 0x260) 
struct UUpgradeSlotWidget : public UUserWidget
{
	struct UImage* _itemIcon;  // 0x260(0x8)
	struct UImage* _gridSymbol;  // 0x268(0x8)
	struct UImage* _backgroundImage;  // 0x270(0x8)
	struct UImage* _defaultImage;  // 0x278(0x8)
	struct FLinearColor _regularColour;  // 0x280(0x10)
	struct FLinearColor _dropUnavailableColour;  // 0x290(0x10)
	struct FLinearColor _dropAvailableColour;  // 0x2A0(0x10)
	uint8_t  _slotType;  // 0x2B0(0x1)
	char pad_689[15];  // 0x2B1(0xF)
	struct TArray<AItem*> _buyableUpgrades;  // 0x2C0(0x10)
	char pad_720[8];  // 0x2D0(0x8)

}; 



// Class ConZ.PrisonerBodyConditionUIData_Infection
// Size: 0x1B0(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_Infection : public UPrisonerBodyConditionUIData
{
	char pad_416[16];  // 0x1A0(0x10)

}; 



// Class ConZ.InventoryPositionData2D
// Size: 0x38(Inherited: 0x28) 
struct UInventoryPositionData2D : public UInventoryPositionData
{
	int32_t PositionX;  // 0x28(0x4)
	int32_t PositionY;  // 0x2C(0x4)
	char Rotation;  // 0x30(0x1)
	char pad_49_1 : 7;  // 0x31(0x1)
	bool IsLoading : 1;  // 0x31(0x1)
	char pad_50[6];  // 0x32(0x6)

}; 



// Class ConZ.BCUUpgradeSlotWidget
// Size: 0x410(Inherited: 0x2D8) 
struct UBCUUpgradeSlotWidget : public UUpgradeSlotWidget
{
	struct FLinearColor _connectedBackgroundColor;  // 0x2D8(0x10)
	struct FSlateBrush _connectedIconTexture;  // 0x2E8(0x88)
	struct FSlateBrush _disconnectedIconTexture;  // 0x370(0x88)
	char pad_1016[24];  // 0x3F8(0x18)

}; 



// Class ConZ.DoubleDoor
// Size: 0x4F0(Inherited: 0x4F0) 
struct ADoubleDoor : public ADoor
{
	struct UMeshComponent* Mesh1;  // 0x4E8(0x8)

}; 



// Class ConZ.DoubleRegularDoorStatic
// Size: 0x520(Inherited: 0x4F0) 
struct ADoubleRegularDoorStatic : public ADoubleDoor
{
	struct FRotator _openRotation0;  // 0x4F0(0xC)
	struct FRotator _openRotation1;  // 0x4FC(0xC)
	struct FRotator _closedRotation0;  // 0x508(0xC)
	struct FRotator _closedRotation1;  // 0x514(0xC)

}; 



// Class ConZ.DrivingSkill
// Size: 0x5D8(Inherited: 0xB0) 
struct UDrivingSkill : public UVehicleHandlingSkill
{
	struct FVehicleHandlingExperienceAwards NoSkillExperienceAwards;  // 0xB0(0x8)
	struct FVehicleHandlingExperienceAwards BasicSkillExperienceAwards;  // 0xB8(0x8)
	struct FVehicleHandlingExperienceAwards MediumSkillExperienceAwards;  // 0xC0(0x8)
	struct FVehicleHandlingExperienceAwards AdvancedSkillExperienceAwards;  // 0xC8(0x8)
	struct FVehicleHandlingExperienceAwards AboveAdvancedSkillExperienceAwards;  // 0xD0(0x8)
	struct FDrivingSkillParametersPerSkillLevel NoSkillParameters;  // 0xD8(0x100)
	struct FDrivingSkillParametersPerSkillLevel BasicSkillParameters;  // 0x1D8(0x100)
	struct FDrivingSkillParametersPerSkillLevel MediumSkillParameters;  // 0x2D8(0x100)
	struct FDrivingSkillParametersPerSkillLevel AdvancedSkillParameters;  // 0x3D8(0x100)
	struct FDrivingSkillParametersPerSkillLevel AboveAdvancedSkillParameters;  // 0x4D8(0x100)

}; 



// Class ConZ.PrisonerActionActivateSlot
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionActivateSlot : public UPrisonerAction
{

}; 



// Class ConZ.HuntingManager
// Size: 0x3B0(Inherited: 0x220) 
struct AHuntingManager : public AActor
{
	char pad_544[24];  // 0x220(0x18)
	float _huntInitTickBudgetInMilliseconds;  // 0x238(0x4)
	int32_t _maxActiveHuntsNum;  // 0x23C(0x4)
	float _daytimeSpawnMultipliers[4];  // 0x240(0x10)
	struct TMap<struct TSoftClassPtr<UObject>, struct TSoftClassPtr<UObject>> _huntingCluesPerAnimal;  // 0x250(0x50)
	struct TArray<char EPhysicalSurface> _allowedClueSpawnSurfaces;  // 0x2A0(0x10)
	float _huntStartPlayerCheckRadius;  // 0x2B0(0x4)
	float _oldClueRemovalDistance;  // 0x2B4(0x4)
	float _huntFailureTime;  // 0x2B8(0x4)
	float _huntFailureAnimalDistance;  // 0x2BC(0x4)
	float _corpseLifetimeMinutes;  // 0x2C0(0x4)
	int32_t _maxSpawnPointGenerationFailures;  // 0x2C4(0x4)
	float _timeToPlaySoundAfterClueInteractionMin;  // 0x2C8(0x4)
	float _timeToPlaySoundAfterClueInteractionMax;  // 0x2CC(0x4)
	struct TArray<struct FHuntingBiomeDescription> _huntingBiomes;  // 0x2D0(0x10)
	char pad_736[208];  // 0x2E0(0xD0)

	void OnAnimalKilled(struct AAnimal2* Animal); // Function ConZ.HuntingManager.OnAnimalKilled
	void OnAnimalActorDestroyed(struct AActor* animalActor); // Function ConZ.HuntingManager.OnAnimalActorDestroyed
	void NetMulticast_PlayClueSound(struct TSoftObjectPtr<UAkAudioEvent> clueAudioEvent, struct FVector clueLocation, float clueHearingDistance, float clueMinApparentDistance); // Function ConZ.HuntingManager.NetMulticast_PlayClueSound
}; 



// Class ConZ.ElectricianGlovesTag
// Size: 0x38(Inherited: 0x30) 
struct UElectricianGlovesTag : public UBaseItemTag
{
	float PrisonerDamageModifier;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)

}; 



// Class ConZ.Drone
// Size: 0x8B0(Inherited: 0x7A0) 
struct ADrone : public AConZCharacter
{
	struct UAkAudioEvent* _engineAudioEvent;  // 0x7A0(0x8)
	struct UAkAudioEvent* _engineStopAudioEvent;  // 0x7A8(0x8)
	struct TArray<float> _speedSteps;  // 0x7B0(0x10)
	float _movementInertiaAI;  // 0x7C0(0x4)
	float _movementRotationSpeedExpFactor;  // 0x7C4(0x4)
	float _engineParticlesChangeSpeedExpFactor;  // 0x7C8(0x4)
	char pad_1996[4];  // 0x7CC(0x4)
	struct UCurveFloat* _engineVolumeFromSpeed;  // 0x7D0(0x8)
	float _movementBreathingInterval;  // 0x7D8(0x4)
	float _movementBreathingIntensity;  // 0x7DC(0x4)
	struct UParticleSystem* _selfDestructParticles;  // 0x7E0(0x8)
	struct UParticleSystem* _smokeParticles;  // 0x7E8(0x8)
	struct UParticleSystemComponent* _smokeParticleSystemComponent;  // 0x7F0(0x8)
	struct UAkAudioEvent* _selfDestructAudioEvent;  // 0x7F8(0x8)
	char pad_2048[24];  // 0x800(0x18)
	char _currentSpeedStep;  // 0x818(0x1)
	char pad_2073[3];  // 0x819(0x3)
	float _movementInertia;  // 0x81C(0x4)
	char pad_2080[8];  // 0x820(0x8)
	struct UStaticMeshComponent* _cameraMesh;  // 0x828(0x8)
	struct UParticleSystemComponent* _engineParticlesM;  // 0x830(0x8)
	struct UParticleSystemComponent* _engineParticlesML;  // 0x838(0x8)
	struct UParticleSystemComponent* _engineParticlesMR;  // 0x840(0x8)
	struct UParticleSystemComponent* _engineParticlesLL;  // 0x848(0x8)
	struct UParticleSystemComponent* _engineParticlesLR;  // 0x850(0x8)
	struct USpotLightComponent* _lightComponent;  // 0x858(0x8)
	float _speedOfSoundMultiplerForDoppler;  // 0x860(0x4)
	char pad_2148[60];  // 0x864(0x3C)
	float _health;  // 0x8A0(0x4)
	char pad_2212[12];  // 0x8A4(0xC)

	void Server_SetCurrentSpeedStep(int32_t step); // Function ConZ.Drone.Server_SetCurrentSpeedStep
	void SelfDestruct(bool shouldSpawnItem); // Function ConZ.Drone.SelfDestruct
	void OnRep_CurrentSpeedStep(); // Function ConZ.Drone.OnRep_CurrentSpeedStep
	void OnHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function ConZ.Drone.OnHit
	void NetMulticast_ToggleSmokeParticles(bool shouldPlay); // Function ConZ.Drone.NetMulticast_ToggleSmokeParticles
	void NetMulticast_SpawnDestroyedEffects(); // Function ConZ.Drone.NetMulticast_SpawnDestroyedEffects
	void NetMulticast_PlaySoundOnClients(uint8_t  SoundToPlay, bool force); // Function ConZ.Drone.NetMulticast_PlaySoundOnClients
}; 



// Class ConZ.DroneCameraActor
// Size: 0x7B0(Inherited: 0x7B0) 
struct ADroneCameraActor : public ACameraActor
{

}; 



// Class ConZ.DroneDestructibleItemComponent
// Size: 0xC8(Inherited: 0xC8) 
struct UDroneDestructibleItemComponent : public UItemComponent
{

}; 



// Class ConZ.PrisonerCharacterMesh
// Size: 0x98(Inherited: 0x60) 
struct UPrisonerCharacterMesh : public UCharacterMesh
{
	uint8_t  BodySlotMapping;  // 0x60(0x1)
	char pad_97[3];  // 0x61(0x3)
	struct FPrisonerCharacterMeshDecayMultiplierData DecayMultiplierData;  // 0x64(0x2C)
	float WarmthFactor;  // 0x90(0x4)
	char pad_148[4];  // 0x94(0x4)

}; 



// Class ConZ.DropdownContainerWithDialogue
// Size: 0x2A0(Inherited: 0x260) 
struct UDropdownContainerWithDialogue : public UUserWidget
{
	struct USelectionOverlayWidget* _selectionOverlay;  // 0x260(0x8)
	struct UTextBlock* _label;  // 0x268(0x8)
	struct UVerticalBox* _dropdownContainer;  // 0x270(0x8)
	struct UButton* _cancelButton;  // 0x278(0x8)
	struct UButton* _applyButton;  // 0x280(0x8)
	struct FText dropdownLabel;  // 0x288(0x18)

	void OnCancelButtonClicked(); // Function ConZ.DropdownContainerWithDialogue.OnCancelButtonClicked
	void OnApplyButtonClicked(); // Function ConZ.DropdownContainerWithDialogue.OnApplyButtonClicked
}; 



// Class ConZ.PlaceableActorModularBaseBuilding
// Size: 0x658(Inherited: 0x5E8) 
struct APlaceableActorModularBaseBuilding : public APlaceableActorBaseBuilding
{
	char pad_1512[112];  // 0x5E8(0x70)

}; 



// Class ConZ.PrisonerBodySymptom_Hunger
// Size: 0x140(Inherited: 0xB8) 
struct UPrisonerBodySymptom_Hunger : public UPrisonerBodySymptom
{
	struct FRuntimeFloatCurve _severityVsEnergyRatio;  // 0xB8(0x88)

}; 



// Class ConZ.DropdownColorPicker
// Size: 0x2E0(Inherited: 0x2A0) 
struct UDropdownColorPicker : public UDropdownContainerWithDialogue
{
	char pad_672[48];  // 0x2A0(0x30)
	struct UImage* _colorPreviewSquare;  // 0x2D0(0x8)
	struct UColorPicker* _colorPicker;  // 0x2D8(0x8)

}; 



// Class ConZ.VehicleServiceStationAnimInstance
// Size: 0x2D0(Inherited: 0x2C0) 
struct UVehicleServiceStationAnimInstance : public UAnimInstance
{
	float _liftTime;  // 0x2B8(0x4)
	float _liftInterpValue;  // 0x2BC(0x4)
	char pad_712[8];  // 0x2C8(0x8)

}; 



// Class ConZ.PreviewAnimationComponent
// Size: 0x110(Inherited: 0xB0) 
struct UPreviewAnimationComponent : public UActorComponent
{
	struct TMap<struct FGameplayTag, struct UAnimationAsset*> _animationsPerTag;  // 0xB0(0x50)
	char pad_256[16];  // 0x100(0x10)

}; 



// Class ConZ.DropdownMenuSelectionWidget
// Size: 0x2A8(Inherited: 0x260) 
struct UDropdownMenuSelectionWidget : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct UImage* SelectionImage;  // 0x290(0x8)
	struct UCustomBorder* SelectionBorder;  // 0x298(0x8)
	struct UDropdownMenuWidget* _dropdownMenu;  // 0x2A0(0x8)

	void Update(); // Function ConZ.DropdownMenuSelectionWidget.Update
	void OnDropdownSelectionDelegate__DelegateSignature(struct UDropdownMenuSelectionWidget* Widget); // DelegateFunction ConZ.DropdownMenuSelectionWidget.OnDropdownSelectionDelegate__DelegateSignature
	struct FEventReply Click(struct FGeometry MyGeometry, struct FPointerEvent& MouseEvent); // Function ConZ.DropdownMenuSelectionWidget.Click
}; 



// Class ConZ.DropZoneParticipantStats
// Size: 0x50(Inherited: 0x48) 
struct UDropZoneParticipantStats : public UGameEventParticipantStats
{
	int32_t Activations;  // 0x48(0x4)
	char pad_76[4];  // 0x4C(0x4)

}; 



// Class ConZ.SerializableLayoutWidgetInterface
// Size: 0x28(Inherited: 0x28) 
struct USerializableLayoutWidgetInterface : public UInterface
{

	void SaveLayout(struct TScriptInterface<IAttributeMapInterface>& Attributes); // Function ConZ.SerializableLayoutWidgetInterface.SaveLayout
	void ResetLayout(); // Function ConZ.SerializableLayoutWidgetInterface.ResetLayout
	void LoadLayout(struct TScriptInterface<IAttributeMapInterface>& Attributes); // Function ConZ.SerializableLayoutWidgetInterface.LoadLayout
}; 



// Class ConZ.FuelItemTag
// Size: 0x38(Inherited: 0x30) 
struct UFuelItemTag : public UBaseItemTag
{
	struct FCombustibleItemParams CombustionParams;  // 0x30(0x8)

}; 



// Class ConZ.EconomyManagerResponse
// Size: 0x30(Inherited: 0x28) 
struct UEconomyManagerResponse : public UPlayerRpcChannelServerResponse
{
	struct UEconomyManagerResponseData* _payload;  // 0x28(0x8)

}; 



// Class ConZ.MissionManager
// Size: 0x398(Inherited: 0x220) 
struct AMissionManager : public AActor
{
	char pad_544[32];  // 0x220(0x20)
	struct TMap<AMission*, struct FMissionData> _mainStoryMissions;  // 0x240(0x50)
	struct TMap<AMission*, struct FMissionData> _sideStoryMissions;  // 0x290(0x50)
	struct TMap<AMission*, struct FMissionData> _tutorialMissions;  // 0x2E0(0x50)
	char pad_816[19];  // 0x330(0x13)
	char pad_835_1 : 7;  // 0x343(0x1)
	bool _tutorialEnabled : 1;  // 0x343(0x1)
	float _tutorialDelay;  // 0x344(0x4)
	char pad_840[8];  // 0x348(0x8)
	struct AMission* _activeMainStoryMission;  // 0x350(0x8)
	struct AMission* _activeSideStoryMission;  // 0x358(0x8)
	struct AMission* _activeTutorialMission;  // 0x360(0x8)
	struct AMission* _availableMission;  // 0x368(0x8)
	uint8_t  _missionManagerState;  // 0x370(0x1)
	char pad_881[39];  // 0x371(0x27)

	void UntrackMission(uint8_t  MissionType); // Function ConZ.MissionManager.UntrackMission
	void SwitchActiveMission(AMission* missionClass); // Function ConZ.MissionManager.SwitchActiveMission
	void Server_SendMissionInvitation(struct AMissionManager* manager, struct AMission* Mission); // Function ConZ.MissionManager.Server_SendMissionInvitation
	void Server_RewardsAccepted(); // Function ConZ.MissionManager.Server_RewardsAccepted
	void Server_DestroyCompletedMission(struct AMission* Mission); // Function ConZ.MissionManager.Server_DestroyCompletedMission
	void Server_AcceptMissionInvitation(struct AMission* Mission, bool accepted); // Function ConZ.MissionManager.Server_AcceptMissionInvitation
	void OnRep_MissionManagerStateChanged(); // Function ConZ.MissionManager.OnRep_MissionManagerStateChanged
	void OnRep_AvailableMissionChanged(); // Function ConZ.MissionManager.OnRep_AvailableMissionChanged
	void OnRep_ActiveTutorialMissionChanged(); // Function ConZ.MissionManager.OnRep_ActiveTutorialMissionChanged
	void OnRep_ActiveSideStoryMissionChanged(); // Function ConZ.MissionManager.OnRep_ActiveSideStoryMissionChanged
	void OnRep_ActiveMainStoryMissionChanged(); // Function ConZ.MissionManager.OnRep_ActiveMainStoryMissionChanged
	bool IsMissionInvitationReceived(); // Function ConZ.MissionManager.IsMissionInvitationReceived
	void Client_UpdateMissionsData(AMission* missionClass, struct FMissionData MissionData); // Function ConZ.MissionManager.Client_UpdateMissionsData
	void Client_StartTutorial(); // Function ConZ.MissionManager.Client_StartTutorial
	void Client_ShowMissionResultWidget(struct AMission* Mission, bool Completed); // Function ConZ.MissionManager.Client_ShowMissionResultWidget
	void Client_SendMissionInvitation(struct AMissionManager* manager, struct AMission* Mission); // Function ConZ.MissionManager.Client_SendMissionInvitation
}; 



// Class ConZ.EconomySpecificData
// Size: 0x388(Inherited: 0x30) 
struct UEconomySpecificData : public UDataAsset
{
	struct TSoftClassPtr<UObject> CashItemClass;  // 0x30(0x28)
	int32_t CashStackMaxValue;  // 0x58(0x4)
	char pad_92[4];  // 0x5C(0x4)
	struct TSoftClassPtr<UObject> DepotItemClass;  // 0x60(0x28)
	struct TSoftClassPtr<UObject> VehicleLockItemClass;  // 0x88(0x28)
	float BasePriceModifierPerTradeCategory[1c];  // 0xB0(0x70)
	float BaseSalePriceReductionModifierPerTradeCategory[1c];  // 0x120(0x70)
	struct FCurrencyDescription CurrencyDescriptions[3];  // 0x190(0x138)
	struct TMap<uint8_t , struct FBankCardTypeData> CardDataPerBankCardType;  // 0x2C8(0x50)
	float ATMProvisionPercentage;  // 0x318(0x4)
	float BankerProvisionPercentage;  // 0x31C(0x4)
	struct TMap<struct FGameplayTag, float> RotationRarityVsAvailabilityChance;  // 0x320(0x50)
	float OutpostProsperityVsAvailabilityChanceIncrease[6];  // 0x370(0x18)

}; 



// Class ConZ.EconomyStatics
// Size: 0x28(Inherited: 0x28) 
struct UEconomyStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.ElectricDoorAssetData
// Size: 0x28(Inherited: 0x28) 
struct UElectricDoorAssetData : public UAssetUserData
{

}; 



// Class ConZ.EmblemData
// Size: 0x60(Inherited: 0x30) 
struct UEmblemData : public UDataAsset
{
	struct TArray<struct UTexture2D*> BackgroundTextures;  // 0x30(0x10)
	struct TArray<struct UTexture2D*> SymbolTextures;  // 0x40(0x10)
	struct TArray<struct FLinearColor> ColorPalette;  // 0x50(0x10)

}; 



// Class ConZ.PrisonerBodySymptomCause_Nausea
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_Nausea : public UPrisonerBodySymptomCause
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.Prisoner
// Size: 0x1EF0(Inherited: 0x7A0) 
struct APrisoner : public AConZCharacter
{
	char pad_1952[64];  // 0x7A0(0x40)
	struct UPrisonerSkillComponent* SkillComponent;  // 0x7E0(0x8)
	struct UPrisonerInventoryComponent* InventoryComponent;  // 0x7E8(0x8)
	struct UPrisonerAppearanceComponent* AppearanceComponent;  // 0x7F0(0x8)
	struct UMeleeCombatComponent* MeleeCombatComponent;  // 0x7F8(0x8)
	struct UHitReactComponent* HitReactComponent;  // 0x800(0x8)
	struct UPhysicalAnimationComponent* PhysicalAnimationComponent;  // 0x808(0x8)
	struct UInteractionComponent* InteractionComponent;  // 0x810(0x8)
	struct UPawnSensingComponent* SensingComponent;  // 0x818(0x8)
	struct UBaseInteractionComponent* BaseInteractionComponent;  // 0x820(0x8)
	char pad_2088_1 : 7;  // 0x828(0x1)
	bool IgnoreMovementSettings : 1;  // 0x828(0x1)
	char pad_2089_1 : 7;  // 0x829(0x1)
	bool OverrideAimOffset : 1;  // 0x829(0x1)
	char pad_2090[2];  // 0x82A(0x2)
	struct FRotator AimOffsetOverride;  // 0x82C(0xC)
	struct AActor* EyesLookAtTargetOverride;  // 0x838(0x8)
	char pad_2112_1 : 7;  // 0x840(0x1)
	bool IsFriendly : 1;  // 0x840(0x1)
	char pad_2113_1 : 7;  // 0x841(0x1)
	bool CanEverBeKnockedOutByMeleeAttack : 1;  // 0x841(0x1)
	char pad_2114_1 : 7;  // 0x842(0x1)
	bool ShouldOverrideCharacterTemplate : 1;  // 0x842(0x1)
	char pad_2115[5];  // 0x843(0x5)
	struct FCharacterTemplate CharacterTemplateOverride;  // 0x848(0xE0)
	struct FAttachmentSocket LeftHandAttachmentSocket;  // 0x928(0x10)
	struct FAttachmentSocket RightHandAttachmentSocket;  // 0x938(0x10)
	struct FAttachmentSocket LeftShoulderHolsterSocket;  // 0x948(0x10)
	struct FAttachmentSocket RightShoulderHolsterSocket;  // 0x958(0x10)
	char pad_2408[384];  // 0x968(0x180)
	struct FMulticastInlineDelegate TabModeOpened;  // 0xAE8(0x10)
	struct FMulticastInlineDelegate TabModeClosed;  // 0xAF8(0x10)
	struct FMulticastInlineDelegate PanelsClosed;  // 0xB08(0x10)
	struct FMulticastInlineDelegate HoveredActorChanged;  // 0xB18(0x10)
	char pad_2856[40];  // 0xB28(0x28)
	char pad_2896_1 : 7;  // 0xB50(0x1)
	bool RespawnOnKill : 1;  // 0xB50(0x1)
	char pad_2897[3];  // 0xB51(0x3)
	float IKOffsetLeftFoot;  // 0xB54(0x4)
	float IKOffsetRightFoot;  // 0xB58(0x4)
	uint8_t  BorderCrossingPenalty;  // 0xB5C(0x1)
	char pad_2909[3];  // 0xB5D(0x3)
	struct FMulticastInlineDelegate BorderCrossingPenaltyChange;  // 0xB60(0x10)
	char pad_2928[480];  // 0xB70(0x1E0)
	struct UPrisonerBodySimulationComponent* _bodySimulationComponent;  // 0xD50(0x8)
	struct UThermalSensorComponent* _skinThermalSensingComponent;  // 0xD58(0x8)
	struct UPrisonerMeshManager* _prisonerMeshManager;  // 0xD60(0x8)
	struct UUserProfile* _userProfile;  // 0xD68(0x8)
	struct FString _userId;  // 0xD70(0x10)
	struct FDbIntegerId _serverUserProfileId;  // 0xD80(0x8)
	struct FString _userProfileName;  // 0xD88(0x10)
	struct FString _userFakeName;  // 0xD98(0x10)
	char pad_3496[104];  // 0xDA8(0x68)
	struct UParticleSystemComponent* _waterParticlesComponentWhenIdle;  // 0xE10(0x8)
	struct UParticleSystemComponent* _waterParticlesComponentWhenMoving;  // 0xE18(0x8)
	struct UParticleSystemComponent* _waterParticlesComponentWhenDiving;  // 0xE20(0x8)
	char pad_3624[6];  // 0xE28(0x6)
	uint8_t  _desiredStance;  // 0xE2E(0x1)
	char pad_3631[13];  // 0xE2F(0xD)
	float _targetCrouchStage;  // 0xE3C(0x4)
	uint8_t  _desiredPace;  // 0xE40(0x1)
	char pad_3649[2];  // 0xE41(0x2)
	char pad_3651_1 : 7;  // 0xE43(0x1)
	bool _freeLookEnabled : 1;  // 0xE43(0x1)
	char pad_3652[40];  // 0xE44(0x28)
	char pad_3692_1 : 7;  // 0xE6C(0x1)
	bool _postFreeLookControllerRotationBlendActive : 1;  // 0xE6C(0x1)
	char pad_3693[15];  // 0xE6D(0xF)
	struct FRotator _repAimOffset;  // 0xE7C(0xC)
	char pad_3720[64];  // 0xE88(0x40)
	struct APrisonerCorpse* _lastCorpse;  // 0xEC8(0x8)
	struct APrisonerCorpse* _lastEventCorpse;  // 0xED0(0x8)
	char pad_3800[52];  // 0xED8(0x34)
	float _targetLeanAmount;  // 0xF0C(0x4)
	char pad_3856[1976];  // 0xF10(0x7B8)
	struct AActor* _meleeTarget;  // 0x16C8(0x8)
	char pad_5840[8];  // 0x16D0(0x8)
	struct UMeleeSkill* _activeMeleeSkill;  // 0x16D8(0x8)
	char pad_5856[16];  // 0x16E0(0x10)
	struct AActor* _rotationTarget;  // 0x16F0(0x8)
	struct UUnarmedCombatInputRedirector* _unarmedCombatInputRedirector;  // 0x16F8(0x8)
	struct USkillEventHandler* _skillEventHandler;  // 0x1700(0x8)
	char pad_5896[16];  // 0x1708(0x10)
	struct AItem* _itemInHands;  // 0x1718(0x8)
	char pad_5920[37];  // 0x1720(0x25)
	uint8_t  _scopingWithItemInHandsState;  // 0x1745(0x1)
	char pad_5958[42];  // 0x1746(0x2A)
	uint8_t  _weaponAimingType;  // 0x1770(0x1)
	char pad_6001[35];  // 0x1771(0x23)
	char _itemInHandsVisualObstructionDepthRep;  // 0x1794(0x1)
	char pad_6037[267];  // 0x1795(0x10B)
	char pad_6304_1 : 7;  // 0x18A0(0x1)
	bool _isInCombatMode : 1;  // 0x18A0(0x1)
	char pad_6305[87];  // 0x18A1(0x57)
	struct AItem* _leftShoulderHolsteredItemReplicated;  // 0x18F8(0x8)
	char pad_6400[8];  // 0x1900(0x8)
	struct AItem* _rightShoulderHolsteredItemReplicated;  // 0x1908(0x8)
	char pad_6416[72];  // 0x1910(0x48)
	struct FTimerHandle _interactDefaultContextMenuTimerHandle;  // 0x1958(0x8)
	struct TArray<struct APrisoner*> _examinedBy;  // 0x1960(0x10)
	struct UMaterialInstanceDynamic* _tacticsBlobMaterial;  // 0x1970(0x8)
	struct TArray<struct UParticleSystemComponent*> _bodyPartEffects;  // 0x1978(0x10)
	struct UBondageComponent* _handsBondage;  // 0x1988(0x8)
	struct UPrisonerPrisonWalletComponent* _prisonWalletComponent;  // 0x1990(0x8)
	struct UPrisonerFishingComponent* _fishingComponent;  // 0x1998(0x8)
	struct UPrisonerMusicPlayerComponent* _musicPlayerComponent;  // 0x19A0(0x8)
	struct UPrisonerTradingComponent* _tradingComponent;  // 0x19A8(0x8)
	struct UPrisonerThrowComponent* _throwingComponent;  // 0x19B0(0x8)
	struct UCharacterItemDragComponent* _itemDragComponent;  // 0x19B8(0x8)
	char pad_6592[28];  // 0x19C0(0x1C)
	uint32_t _packedWaterWeight;  // 0x19DC(0x4)
	char pad_6624[40];  // 0x19E0(0x28)
	struct AGameEventBase* _gameEvent;  // 0x1A08(0x8)
	struct UPrisonerLoadout* _gameEventLoadout;  // 0x1A10(0x8)
	char pad_6680[16];  // 0x1A18(0x10)
	struct FPrisonerNearbyFoliageInfo _nearbyFoliageInfo;  // 0x1A28(0x10)
	struct FPrisonerNearbyFoliageInfo _collidingNearbyFoliageInfo;  // 0x1A38(0x10)
	char pad_6728[200];  // 0x1A48(0xC8)
	struct UWidgetComponent* _nameWidgetComponent;  // 0x1B10(0x8)
	struct UBaseItemTag* SaveSpawnLocationTag;  // 0x1B18(0x8)
	char pad_6944[40];  // 0x1B20(0x28)
	struct FDeluxeVersion _deluxeVersion;  // 0x1B48(0x5)
	char pad_6989[7];  // 0x1B4D(0x7)
	struct TWeakObjectPtr<APrisoner> _examinedPrisoner;  // 0x1B54(0x8)
	char pad_7004_1 : 7;  // 0x1B5C(0x1)
	bool _killClaimed : 1;  // 0x1B5C(0x1)
	char pad_7005[27];  // 0x1B5D(0x1B)
	uint8_t  _playingInstrumentState;  // 0x1B78(0x1)
	char pad_7033[1];  // 0x1B79(0x1)
	uint8_t  _carryingItemState;  // 0x1B7A(0x1)
	char pad_7035[53];  // 0x1B7B(0x35)
	char pad_7088_1 : 7;  // 0x1BB0(0x1)
	bool _shouldShowGenitalsOverride : 1;  // 0x1BB0(0x1)
	char pad_7089[47];  // 0x1BB1(0x2F)
	struct FPrisonerMountReplication _repMount;  // 0x1BE0(0x10)
	struct UMIDIDeviceController* _midiDeviceController;  // 0x1BF0(0x8)
	char pad_7160[64];  // 0x1BF8(0x40)
	char pad_7224_1 : 7;  // 0x1C38(0x1)
	bool _hasInfiniteAmmo : 1;  // 0x1C38(0x1)
	char pad_7225_1 : 7;  // 0x1C39(0x1)
	bool _isInGodMode : 1;  // 0x1C39(0x1)
	char pad_7226_1 : 7;  // 0x1C3A(0x1)
	bool _isImmortal : 1;  // 0x1C3A(0x1)
	char pad_7227_1 : 7;  // 0x1C3B(0x1)
	bool _isSuperJumpEnabled : 1;  // 0x1C3B(0x1)
	char pad_7228[36];  // 0x1C3C(0x24)
	char pad_7264_1 : 7;  // 0x1C60(0x1)
	bool _enablePerComponentReplicationFrequency : 1;  // 0x1C60(0x1)
	char pad_7265[3];  // 0x1C61(0x3)
	float _componentsReplicationFrequency[5];  // 0x1C64(0x14)
	char pad_7288[96];  // 0x1C78(0x60)
	struct UNavigationInvokerComponent* _navigationInvokerComponent;  // 0x1CD8(0x8)
	char pad_7392[140];  // 0x1CE0(0x8C)
	struct FGameplayTag LegsInjuryTag;  // 0x1D6C(0x8)
	char pad_7540[132];  // 0x1D74(0x84)
	uint8_t  _vehicleWeaponAimingStance;  // 0x1DF8(0x1)
	char pad_7673[43];  // 0x1DF9(0x2B)
	float _vehicleAimingYawReplicated;  // 0x1E24(0x4)
	char pad_7720[136];  // 0x1E28(0x88)
	struct TWeakObjectPtr<AClothesItem> _activeParachute;  // 0x1EB0(0x8)
	char pad_7864[12];  // 0x1EB8(0xC)
	char _replicatedBooleans;  // 0x1EC4(0x1)
	char pad_7877[19];  // 0x1EC5(0x13)
	struct UPrisonerCommonData* _commonData;  // 0x1ED8(0x8)
	int32_t _meshForcedLodIfNotPlayerControlled;  // 0x1EE0(0x4)
	char pad_7908[12];  // 0x1EE4(0xC)

	void UpdateZoomEffect(float Fraction); // Function ConZ.Prisoner.UpdateZoomEffect
	void UpdateWristwatchVisibility(); // Function ConZ.Prisoner.UpdateWristwatchVisibility
	void UpdateSquadPanel(); // Function ConZ.Prisoner.UpdateSquadPanel
	void UpdateDeluxePlayerStatus(); // Function ConZ.Prisoner.UpdateDeluxePlayerStatus
	void TryInteractDefault(); // Function ConZ.Prisoner.TryInteractDefault
	void ToggleSquadPanel(); // Function ConZ.Prisoner.ToggleSquadPanel
	void ToggleJournalPanel(); // Function ConZ.Prisoner.ToggleJournalPanel
	void ToggleEventsPanel(); // Function ConZ.Prisoner.ToggleEventsPanel
	void ToggleCraftingPanel(); // Function ConZ.Prisoner.ToggleCraftingPanel
	void ToggleCookingPanel(); // Function ConZ.Prisoner.ToggleCookingPanel
	void ToggleBuildingPanel(); // Function ConZ.Prisoner.ToggleBuildingPanel
	void Teleport(struct FPrisonerTeleportRequest& request); // Function ConZ.Prisoner.Teleport
	void TakeItemInHandsOnServer(struct AItem* Item); // Function ConZ.Prisoner.TakeItemInHandsOnServer
	void TakeItemInHands(struct AItem* Item); // Function ConZ.Prisoner.TakeItemInHands
	void TabModeOpened__DelegateSignature(uint8_t  tabMode); // DelegateFunction ConZ.Prisoner.TabModeOpened__DelegateSignature
	void TabModeClosed__DelegateSignature(); // DelegateFunction ConZ.Prisoner.TabModeClosed__DelegateSignature
	void SwitchToVehicleSeatIndex(int32_t Index); // Function ConZ.Prisoner.SwitchToVehicleSeatIndex
	void StopInteraction(); // Function ConZ.Prisoner.StopInteraction
	void StartPrimaryMeleeAttack(); // Function ConZ.Prisoner.StartPrimaryMeleeAttack
	void StartMeleeDodge(uint8_t  Direction); // Function ConZ.Prisoner.StartMeleeDodge
	void StartMeleeAttack(struct FGameplayTag& meleeAttackType); // Function ConZ.Prisoner.StartMeleeAttack
	void ShowSpawnScreen(bool loadoutMenu); // Function ConZ.Prisoner.ShowSpawnScreen
	bool ShouldLookatMeleeTarget(); // Function ConZ.Prisoner.ShouldLookatMeleeTarget
	bool ShouldIgnoreRotation(); // Function ConZ.Prisoner.ShouldIgnoreRotation
	void SetWristwatchBrightness(float Value); // Function ConZ.Prisoner.SetWristwatchBrightness
	void SetWeaponAimingTypeOnServer(uint8_t  Value); // Function ConZ.Prisoner.SetWeaponAimingTypeOnServer
	void SetTargetOnServer(struct AActor* Target); // Function ConZ.Prisoner.SetTargetOnServer
	void SetTargetLeanAmountOnServer(float Value); // Function ConZ.Prisoner.SetTargetLeanAmountOnServer
	void SetTargetCrouchStage(float Value); // Function ConZ.Prisoner.SetTargetCrouchStage
	void SetStance(uint8_t  Value); // Function ConZ.Prisoner.SetStance
	void SetShouldIgnoreHeadTurningAndLeaning(bool Value); // Function ConZ.Prisoner.SetShouldIgnoreHeadTurningAndLeaning
	void SetRotationTarget(struct AActor* rotationTarget); // Function ConZ.Prisoner.SetRotationTarget
	void SetPlayerSoundLevel(float Value); // Function ConZ.Prisoner.SetPlayerSoundLevel
	void SetPartWaterWeight(uint8_t  part, float Value); // Function ConZ.Prisoner.SetPartWaterWeight
	void SetOverrideIsLimping(bool Value); // Function ConZ.Prisoner.SetOverrideIsLimping
	void SetNightVisionEnabled(bool Value); // Function ConZ.Prisoner.SetNightVisionEnabled
	bool SetMidiDeviceByName(struct FString Name); // Function ConZ.Prisoner.SetMidiDeviceByName
	bool SetMidiDeviceByIndex(int32_t Index); // Function ConZ.Prisoner.SetMidiDeviceByIndex
	void SetMeleeTargetSelectionMode(uint8_t  Value); // Function ConZ.Prisoner.SetMeleeTargetSelectionMode
	void SetMeleeTarget(struct AActor* Value); // Function ConZ.Prisoner.SetMeleeTarget
	void SetItemInHandsOnClient(struct AItem* Item); // Function ConZ.Prisoner.SetItemInHandsOnClient
	void SetIsLimpingOverrideEnabled(bool Value); // Function ConZ.Prisoner.SetIsLimpingOverrideEnabled
	void SetIsInCombatModeOnServer(bool Value); // Function ConZ.Prisoner.SetIsInCombatModeOnServer
	void SetIsInCombatMode(bool Value); // Function ConZ.Prisoner.SetIsInCombatMode
	void SetIsEnabled(bool Value); // Function ConZ.Prisoner.SetIsEnabled
	void SetGameEvent(struct AGameEventBase* gameEvent); // Function ConZ.Prisoner.SetGameEvent
	void SetFreeLookEnabledOnServer(bool Value); // Function ConZ.Prisoner.SetFreeLookEnabledOnServer
	void SetFreeLookEnabled(bool Value); // Function ConZ.Prisoner.SetFreeLookEnabled
	void SetDesiredPaceOnServer(char Value); // Function ConZ.Prisoner.SetDesiredPaceOnServer
	void SetDesiredPace(uint8_t  Value); // Function ConZ.Prisoner.SetDesiredPace
	void SetDesiredLeanAmount(float Value); // Function ConZ.Prisoner.SetDesiredLeanAmount
	void Server_UnpackAmmoBox(struct AAmmunitionBoxItem* Item); // Function ConZ.Prisoner.Server_UnpackAmmoBox
	void Server_UnloadAmmoFromMagazine(struct AWeaponAttachmentMagazine* magazine); // Function ConZ.Prisoner.Server_UnloadAmmoFromMagazine
	void Server_TurnPrisonerInPlace(float turnAngle); // Function ConZ.Prisoner.Server_TurnPrisonerInPlace
	void Server_ThrowRequested(); // Function ConZ.Prisoner.Server_ThrowRequested
	void Server_SyncWeaponState(struct AWeapon* Weapon, struct FWeaponStateSyncData Data); // Function ConZ.Prisoner.Server_SyncWeaponState
	void Server_SwapWeaponAttachments(struct AWeapon* Weapon, struct AWeaponAttachment* oldAttachment, struct AWeaponAttachment* newAttachment); // Function ConZ.Prisoner.Server_SwapWeaponAttachments
	void Server_StoreAmmoInAmmoBox(struct AAmmunitionItem* ammo, struct AAmmunitionBoxItem* Box); // Function ConZ.Prisoner.Server_StoreAmmoInAmmoBox
	void Server_SplitCurrencyItem(struct AItem* currencyItem, int32_t newAmount); // Function ConZ.Prisoner.Server_SplitCurrencyItem
	void Server_SplitAmmo(struct AAmmunitionItem* ammoItem); // Function ConZ.Prisoner.Server_SplitAmmo
	void Server_SpawnScreenWakeUp(); // Function ConZ.Prisoner.Server_SpawnScreenWakeUp
	void Server_SpawnAmmunitionArrow(struct FHitResult HitResult, struct FAmmunitionArrowSpawningParamsHelper AmmunitionArrowSpawningParamsHelper, struct FVector Location, struct FRotator Rotation); // Function ConZ.Prisoner.Server_SpawnAmmunitionArrow
	void Server_SetVehicleWeaponAimingStance(uint8_t  stance); // Function ConZ.Prisoner.Server_SetVehicleWeaponAimingStance
	void Server_SetVehicleAimingYaw(float angle); // Function ConZ.Prisoner.Server_SetVehicleAimingYaw
	void Server_SetTargetCrouchStage(float Value); // Function ConZ.Prisoner.Server_SetTargetCrouchStage
	void Server_SetShouldIgnoreHeadTurning(bool Value); // Function ConZ.Prisoner.Server_SetShouldIgnoreHeadTurning
	void Server_SetShadowIntensity(char Value); // Function ConZ.Prisoner.Server_SetShadowIntensity
	void Server_SetScopingWithItemInHandsState(uint8_t  Value); // Function ConZ.Prisoner.Server_SetScopingWithItemInHandsState
	void Server_SetRotationTarget(struct AActor* rotationTarget); // Function ConZ.Prisoner.Server_SetRotationTarget
	void Server_SetPlayingInstrumentState(uint8_t  Value); // Function ConZ.Prisoner.Server_SetPlayingInstrumentState
	void Server_SetMeleeTarget(struct AActor* Value); // Function ConZ.Prisoner.Server_SetMeleeTarget
	void Server_SetItemInHandsVisualObstructionDepth(float Value); // Function ConZ.Prisoner.Server_SetItemInHandsVisualObstructionDepth
	void Server_SetItemInHandsActualObstructionDepth(float Value); // Function ConZ.Prisoner.Server_SetItemInHandsActualObstructionDepth
	void Server_SetHoldBreathState(uint8_t  Value); // Function ConZ.Prisoner.Server_SetHoldBreathState
	void Server_SetGameEventLoadout(AItem* primary, struct TArray<AItem*> primaryAttachments, AItem* secondary, struct TArray<AItem*> secondaryAttachments, AItem* tertiary, struct TArray<AItem*> tertiaryAttachments, struct TArray<AItem*> outfit, struct TArray<AItem*> support); // Function ConZ.Prisoner.Server_SetGameEventLoadout
	void Server_SetExaminedPrisoner(struct APrisoner* Prisoner); // Function ConZ.Prisoner.Server_SetExaminedPrisoner
	void Server_SetDangerCooldown(float cooldown, struct APrisoner* Prisoner); // Function ConZ.Prisoner.Server_SetDangerCooldown
	void Server_SetCarryingItemState(uint8_t  State); // Function ConZ.Prisoner.Server_SetCarryingItemState
	void Server_SetActiveParachute(struct AClothesItem* Parachute); // Function ConZ.Prisoner.Server_SetActiveParachute
	void Server_RespawnAtCommonSpawnLocation(uint8_t  commonSpawnLocation, struct FSectorId SectorId); // Function ConZ.Prisoner.Server_RespawnAtCommonSpawnLocation
	void Server_ReportVote(bool Vote); // Function ConZ.Prisoner.Server_ReportVote
	void Server_RemoveNearbyFoliageInstances(struct TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo); // Function ConZ.Prisoner.Server_RemoveNearbyFoliageInstances
	void Server_RemoveInventoryNode(struct UObject* Item, struct UObject* container, struct FInventoryPositionDataRepHelper position, struct UObject* Target); // Function ConZ.Prisoner.Server_RemoveInventoryNode
	void Server_PropagateFootstepEnhancerSound(); // Function ConZ.Prisoner.Server_PropagateFootstepEnhancerSound
	void Server_ProjectileDealDamage(struct FNetPackedProjectileDamageEvent packedDamageEvent); // Function ConZ.Prisoner.Server_ProjectileDealDamage
	void Server_PrisonWalletHandleItemSpawning(struct FVector Location); // Function ConZ.Prisoner.Server_PrisonWalletHandleItemSpawning
	void Server_OnLockpickingProtectionTriggered(struct UObject* Lockpickable, float Damage, struct UParticleSystem* Particles, struct UAkAudioEvent* audio, struct FVector ParticlesScale); // Function ConZ.Prisoner.Server_OnLockpickingProtectionTriggered
	void Server_MinigameEnded(AMinigame* minigameClass, bool isPractice, bool Succeeded, struct TArray<struct TWeakObjectPtr<AItem>> tools); // Function ConZ.Prisoner.Server_MinigameEnded
	void Server_lockpickingEnded(struct UObject* Lockpickable, bool Succeeded, struct FConZBaseElementIdentifier lockpickableBaseElement); // Function ConZ.Prisoner.Server_lockpickingEnded
	void Server_LoadAmmoIntoMagazine(struct AAmmunitionItem* AmmunitionItem, struct AWeaponAttachmentMagazine* magazine, int32_t Count); // Function ConZ.Prisoner.Server_LoadAmmoIntoMagazine
	void Server_JumpOffLadder(); // Function ConZ.Prisoner.Server_JumpOffLadder
	void Server_JoinCurrencyItem(struct AItem* finalItem, struct AItem* initiatingItem); // Function ConZ.Prisoner.Server_JoinCurrencyItem
	void Server_JoinAmmo(struct AAmmunitionItem* finalItem, struct AAmmunitionItem* initiatingItem); // Function ConZ.Prisoner.Server_JoinAmmo
	void Server_InteractWithLadder(struct FVector traceOrigin, struct FVector traceDirection); // Function ConZ.Prisoner.Server_InteractWithLadder
	void Server_InstrumentStopTone(uint8_t  tone, float timeOffset, int32_t octave); // Function ConZ.Prisoner.Server_InstrumentStopTone
	void Server_InstrumentPlayTone(uint8_t  tone, float timeOffset, int32_t octave); // Function ConZ.Prisoner.Server_InstrumentPlayTone
	void Server_InstrumentOctaveUp(); // Function ConZ.Prisoner.Server_InstrumentOctaveUp
	void Server_InstrumentOctaveDown(); // Function ConZ.Prisoner.Server_InstrumentOctaveDown
	void Server_InitiateCraftedUpgradePlacement(struct FConZBaseElementIdentifier elementToBeUpgraded, struct UPlaceableCraftableItem* upgradeRecipe, struct FTransform Transform); // Function ConZ.Prisoner.Server_InitiateCraftedUpgradePlacement
	void Server_InitiateCraftedPlacement(struct UPlaceableCraftableItem* CraftableItem); // Function ConZ.Prisoner.Server_InitiateCraftedPlacement
	void Server_HandleGearMotion(uint8_t  motionIntensity, bool shouldMakeNoise); // Function ConZ.Prisoner.Server_HandleGearMotion
	void Server_HandleFootstep(uint8_t  motionIntensity, bool shouldMakeNoise); // Function ConZ.Prisoner.Server_HandleFootstep
	void Server_DestroyPlaceable(struct FDbIntegerId ID); // Function ConZ.Prisoner.Server_DestroyPlaceable
	void Server_DamageLockpickingTools(struct AItem* lockpick, struct AItem* tensionTool); // Function ConZ.Prisoner.Server_DamageLockpickingTools
	void Server_CommitSuicide(); // Function ConZ.Prisoner.Server_CommitSuicide
	void Server_ClimbWindow(); // Function ConZ.Prisoner.Server_ClimbWindow
	void Server_Climb(); // Function ConZ.Prisoner.Server_Climb
	void Server_ClearDangerCooldown(); // Function ConZ.Prisoner.Server_ClearDangerCooldown
	void Server_ApplyPointDamage(float Damage, struct FHitResult HitResult, uint8_t  damageChannel); // Function ConZ.Prisoner.Server_ApplyPointDamage
	void Server_AIMovementFinished(bool wasSuccessful); // Function ConZ.Prisoner.Server_AIMovementFinished
	void Server_AddNearbyFoliageInstances(struct TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo); // Function ConZ.Prisoner.Server_AddNearbyFoliageInstances
	void Server_AddInventoryNode(struct UObject* Item, struct UObject* container, struct FInventoryPositionDataRepHelper position, struct UObject* Target); // Function ConZ.Prisoner.Server_AddInventoryNode
	void SendSquadInvitationOnServer(struct APrisoner* invited); // Function ConZ.Prisoner.SendSquadInvitationOnServer
	void SendSquadInvitationOnClient(struct APrisoner* invitor, struct FString invitorName); // Function ConZ.Prisoner.SendSquadInvitationOnClient
	void SendMessageToClient(struct FString Message, struct UAkAudioEvent* AudioEvent); // Function ConZ.Prisoner.SendMessageToClient
	void RightShoulderHolsterInteract(); // Function ConZ.Prisoner.RightShoulderHolsterInteract
	void Revive(); // Function ConZ.Prisoner.Revive
	void RespawnAtCommonSpawnLocation(uint8_t  commonSpawnLocation, struct FSectorId SectorId); // Function ConZ.Prisoner.RespawnAtCommonSpawnLocation
	void RequestRespawn(struct FPrisonerTeleportRequest& request); // Function ConZ.Prisoner.RequestRespawn
	void RemoveWeaponAttachment(struct AWeapon* Weapon, struct AWeaponAttachment* Attachment); // Function ConZ.Prisoner.RemoveWeaponAttachment
	void RemoveItemFromHands(uint8_t  preferedHolsterType); // Function ConZ.Prisoner.RemoveItemFromHands
	void RemoveFromSquadOnServer(struct FDbIntegerId UserProfileId); // Function ConZ.Prisoner.RemoveFromSquadOnServer
	void RemoveBondage(); // Function ConZ.Prisoner.RemoveBondage
	void PromoteSquadMemberOnServer(struct FDbIntegerId UserProfileId); // Function ConZ.Prisoner.PromoteSquadMemberOnServer
	void PlaceItemInInventoryOrHolster(struct AItem* Item, bool tryToJoinItems); // Function ConZ.Prisoner.PlaceItemInInventoryOrHolster
	void PanelsClosed__DelegateSignature(); // DelegateFunction ConZ.Prisoner.PanelsClosed__DelegateSignature
	void OpenTabMode(uint8_t  mode); // Function ConZ.Prisoner.OpenTabMode
	void OpenInteractDefaultContextMenu(); // Function ConZ.Prisoner.OpenInteractDefaultContextMenu
	void OnRep_VehicleWeaponAimingStance(); // Function ConZ.Prisoner.OnRep_VehicleWeaponAimingStance
	void OnRep_UserFakeName(); // Function ConZ.Prisoner.OnRep_UserFakeName
	void OnRep_ThrowingComponent(); // Function ConZ.Prisoner.OnRep_ThrowingComponent
	void OnRep_ScopingWithItemInHandsState(); // Function ConZ.Prisoner.OnRep_ScopingWithItemInHandsState
	void OnRep_RotationTarget(); // Function ConZ.Prisoner.OnRep_RotationTarget
	void OnRep_RightShoulderHolsteredItem(); // Function ConZ.Prisoner.OnRep_RightShoulderHolsteredItem
	void OnRep_PlayingInstrumentState(); // Function ConZ.Prisoner.OnRep_PlayingInstrumentState
	void OnRep_PackedWetness(uint32_t oldWetness); // Function ConZ.Prisoner.OnRep_PackedWetness
	void OnRep_PackedBooleans(); // Function ConZ.Prisoner.OnRep_PackedBooleans
	void OnRep_Mount(); // Function ConZ.Prisoner.OnRep_Mount
	void OnRep_MeleeTarget(); // Function ConZ.Prisoner.OnRep_MeleeTarget
	void OnRep_LeftShoulderHolsteredItem(); // Function ConZ.Prisoner.OnRep_LeftShoulderHolsteredItem
	void OnRep_ItemInHandsVisualObstructionDepth(char oldValue); // Function ConZ.Prisoner.OnRep_ItemInHandsVisualObstructionDepth
	void OnRep_IsInCombatMode(); // Function ConZ.Prisoner.OnRep_IsInCombatMode
	void OnRep_HandBondage(); // Function ConZ.Prisoner.OnRep_HandBondage
	void OnRep_GameEvent(); // Function ConZ.Prisoner.OnRep_GameEvent
	void OnRep_FreeLookEnabled(); // Function ConZ.Prisoner.OnRep_FreeLookEnabled
	void OnRep_FishingComponent(); // Function ConZ.Prisoner.OnRep_FishingComponent
	void OnRep_DesiredStance(); // Function ConZ.Prisoner.OnRep_DesiredStance
	void OnRep_DesiredPace(); // Function ConZ.Prisoner.OnRep_DesiredPace
	void OnRep_DeluxeVersion(); // Function ConZ.Prisoner.OnRep_DeluxeVersion
	void OnRep_CarryingItemState(); // Function ConZ.Prisoner.OnRep_CarryingItemState
	void OnRep_AimOffset(); // Function ConZ.Prisoner.OnRep_AimOffset
	void OnPlaceableDestroyed(struct AActor* Actor); // Function ConZ.Prisoner.OnPlaceableDestroyed
	void OnMovementUpdated(float DeltaSeconds, struct FVector OldLocation, struct FVector OldVelocity); // Function ConZ.Prisoner.OnMovementUpdated
	void OnMidiEvent(struct UMIDIDeviceController* MIDIDeviceController, int32_t Timestamp, uint8_t  EventType, int32_t Channel, int32_t ControlID, int32_t Velocity, int32_t RawEventType); // Function ConZ.Prisoner.OnMidiEvent
	void OnInteractDefaultContextMenuClosed(); // Function ConZ.Prisoner.OnInteractDefaultContextMenuClosed
	void OnHearNoise(struct APawn* instigatorPawn, struct FVector& Location, float Volume); // Function ConZ.Prisoner.OnHearNoise
	void OnExaminedPrisonerUnequippedItem(struct UPrisonerInventoryComponent* inventory, struct AItem* Item); // Function ConZ.Prisoner.OnExaminedPrisonerUnequippedItem
	void OnExaminedPrisonerEquippedItem(struct UPrisonerInventoryComponent* inventory, struct AItem* Item); // Function ConZ.Prisoner.OnExaminedPrisonerEquippedItem
	void OnBorderCrossingPenaltyChange(struct APrisoner* Prisoner, uint8_t  newPenalty); // Function ConZ.Prisoner.OnBorderCrossingPenaltyChange
	void NetMulticast_UpdateAdminStates(char states); // Function ConZ.Prisoner.NetMulticast_UpdateAdminStates
	void NetMulticast_TurnPrisonerInPlace(float turnAngle); // Function ConZ.Prisoner.NetMulticast_TurnPrisonerInPlace
	void NetMulticast_SpawnVomitingEffects(bool isForced); // Function ConZ.Prisoner.NetMulticast_SpawnVomitingEffects
	void NetMulticast_SpawnUrinationEffects(bool isForced); // Function ConZ.Prisoner.NetMulticast_SpawnUrinationEffects
	void NetMulticast_SpawnDefecationEffects(bool shouldBeDiarrhea, bool isForced); // Function ConZ.Prisoner.NetMulticast_SpawnDefecationEffects
	void NetMulticast_SetUserFakeName(struct FString fakeName); // Function ConZ.Prisoner.NetMulticast_SetUserFakeName
	void NetMulticast_SetupInitialHandBondage(); // Function ConZ.Prisoner.NetMulticast_SetupInitialHandBondage
	void NetMulticast_SetActiveParachute(struct AClothesItem* Parachute); // Function ConZ.Prisoner.NetMulticast_SetActiveParachute
	void NetMulticast_RemoveNearbyFoliageInstances(struct TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo); // Function ConZ.Prisoner.NetMulticast_RemoveNearbyFoliageInstances
	void NetMulticast_PostAudioEventOnPrisoner(struct UAkAudioEvent* akEvent, bool multiCastToClients); // Function ConZ.Prisoner.NetMulticast_PostAudioEventOnPrisoner
	void NetMulticast_PlayLockpickingProtectionEffects(struct UObject* Lockpickable, struct UParticleSystem* Particles, struct UAkAudioEvent* audio, struct FVector ParticlesScale); // Function ConZ.Prisoner.NetMulticast_PlayLockpickingProtectionEffects
	void NetMulticast_PlayFootstepEnhancerSound(); // Function ConZ.Prisoner.NetMulticast_PlayFootstepEnhancerSound
	void NetMulticast_InstrumentStopTone(uint8_t  tone, float timeOffset, int32_t octave); // Function ConZ.Prisoner.NetMulticast_InstrumentStopTone
	void NetMulticast_InstrumentPlayTone(uint8_t  tone, float timeOffset, int32_t octave); // Function ConZ.Prisoner.NetMulticast_InstrumentPlayTone
	void NetMulticast_InstrumentOctaveUp(); // Function ConZ.Prisoner.NetMulticast_InstrumentOctaveUp
	void NetMulticast_InstrumentOctaveDown(); // Function ConZ.Prisoner.NetMulticast_InstrumentOctaveDown
	void NetMulticast_HandleLanded(struct FVector ImpactVelocity, struct FHitResult HitResult); // Function ConZ.Prisoner.NetMulticast_HandleLanded
	void NetMulticast_ForceDeluxePlayer(uint8_t  DeluxeVersion); // Function ConZ.Prisoner.NetMulticast_ForceDeluxePlayer
	void NetMulticast_DespawnUrinationEffects(); // Function ConZ.Prisoner.NetMulticast_DespawnUrinationEffects
	void NetMulticast_ApplyPlasticSurgery(struct FCharacterTemplate CharacterTemplate); // Function ConZ.Prisoner.NetMulticast_ApplyPlasticSurgery
	void NetMulticast_ApplyHaircutAndMakeup(struct FCharacterTemplate CharacterTemplate); // Function ConZ.Prisoner.NetMulticast_ApplyHaircutAndMakeup
	void NetMulticast_AIMovementFinished(bool wasSuccessful); // Function ConZ.Prisoner.NetMulticast_AIMovementFinished
	void NetMulticast_AddNearbyFoliageInstances(struct TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo); // Function ConZ.Prisoner.NetMulticast_AddNearbyFoliageInstances
	void LeftShoulderHolsterInteract(); // Function ConZ.Prisoner.LeftShoulderHolsterInteract
	void LeaveSquadOnServer(); // Function ConZ.Prisoner.LeaveSquadOnServer
	void LeaveCombatMode(bool PlayAnimation, bool overrideAbilityCheck); // Function ConZ.Prisoner.LeaveCombatMode
	bool IsThrowing(); // Function ConZ.Prisoner.IsThrowing
	bool IsThrowAiming(); // Function ConZ.Prisoner.IsThrowAiming
	bool IsTeleportInProgress(); // Function ConZ.Prisoner.IsTeleportInProgress
	bool IsSquadInvitationReceived(); // Function ConZ.Prisoner.IsSquadInvitationReceived
	bool IsPostFreeLookControllerRotationBlendActive(); // Function ConZ.Prisoner.IsPostFreeLookControllerRotationBlendActive
	bool IsNightVisionEnabled(); // Function ConZ.Prisoner.IsNightVisionEnabled
	bool IsMemberOfMySquad(struct APrisoner* Prisoner); // Function ConZ.Prisoner.IsMemberOfMySquad
	bool IsMemberOf(struct AConZSquad* Squad); // Function ConZ.Prisoner.IsMemberOf
	bool IsLimping(); // Function ConZ.Prisoner.IsLimping
	bool IsInteracting(); // Function ConZ.Prisoner.IsInteracting
	bool IsInFishingMinigame(); // Function ConZ.Prisoner.IsInFishingMinigame
	bool IsInDanger(); // Function ConZ.Prisoner.IsInDanger
	bool IsInCombatMode(); // Function ConZ.Prisoner.IsInCombatMode
	bool IsFreeLookEnabled(); // Function ConZ.Prisoner.IsFreeLookEnabled
	bool IsFishing(); // Function ConZ.Prisoner.IsFishing
	bool IsEnabled(); // Function ConZ.Prisoner.IsEnabled
	bool IsCompletelyInitialized(); // Function ConZ.Prisoner.IsCompletelyInitialized
	bool IsAliveInGameEvent(); // Function ConZ.Prisoner.IsAliveInGameEvent
	bool IsActorMeleeTargetCandidate(struct AActor* Actor); // Function ConZ.Prisoner.IsActorMeleeTargetCandidate
	bool IsActivelyParticipatingInGameEvent(); // Function ConZ.Prisoner.IsActivelyParticipatingInGameEvent
	bool IsActivelyFishing(); // Function ConZ.Prisoner.IsActivelyFishing
	void InventoryComponent_ItemUnequipped(struct UPrisonerInventoryComponent* sender, struct AItem* Item); // Function ConZ.Prisoner.InventoryComponent_ItemUnequipped
	void InventoryComponent_ItemEquipped(struct UPrisonerInventoryComponent* sender, struct AItem* Item); // Function ConZ.Prisoner.InventoryComponent_ItemEquipped
	void InteractWithObjectOnServer(struct UObject* interactable, uint8_t  interactionType, struct FInteractionData InteractionData); // Function ConZ.Prisoner.InteractWithObjectOnServer
	void InitFromCharacterTemplate(struct FCharacterTemplate& CharacterTemplate); // Function ConZ.Prisoner.InitFromCharacterTemplate
	void IncreaseCrouchStage(); // Function ConZ.Prisoner.IncreaseCrouchStage
	void HoveredActorChanged__DelegateSignature(struct AActor* hoveredActor); // DelegateFunction ConZ.Prisoner.HoveredActorChanged__DelegateSignature
	void HolsterItemOnServer(struct AItem* Item, int32_t attachmentSocketHelper); // Function ConZ.Prisoner.HolsterItemOnServer
	void HitReactComponent_StateChanged(); // Function ConZ.Prisoner.HitReactComponent_StateChanged
	void HideSpawnScreen(); // Function ConZ.Prisoner.HideSpawnScreen
	bool HasItemOfClass(UObject* ItemClass); // Function ConZ.Prisoner.HasItemOfClass
	bool HasItem(struct AItem* Item); // Function ConZ.Prisoner.HasItem
	bool HasHandsUp(); // Function ConZ.Prisoner.HasHandsUp
	bool HasHandBondage(); // Function ConZ.Prisoner.HasHandBondage
	void HandleIntroCinematicFinished(struct AConZCameraManager* cameraManager); // Function ConZ.Prisoner.HandleIntroCinematicFinished
	struct UChildActorComponent* GetWristwatchComponent(); // Function ConZ.Prisoner.GetWristwatchComponent
	float GetWetness(); // Function ConZ.Prisoner.GetWetness
	float GetWeightLoad(); // Function ConZ.Prisoner.GetWeightLoad
	struct AWeapon* GetWeapon(); // Function ConZ.Prisoner.GetWeapon
	struct FPrisonerWaterMovementParameters GetWaterMovementParameters(); // Function ConZ.Prisoner.GetWaterMovementParameters
	struct UVisionEffectsComponent* GetVisionEffectsComponent(); // Function ConZ.Prisoner.GetVisionEffectsComponent
	uint8_t  GetVehicleWeaponAimingStance(); // Function ConZ.Prisoner.GetVehicleWeaponAimingStance
	struct FString GetUserProfileName(); // Function ConZ.Prisoner.GetUserProfileName
	struct UUserProfile* GetUserProfile(); // Function ConZ.Prisoner.GetUserProfile
	struct FString GetUserId(); // Function ConZ.Prisoner.GetUserId
	struct FString GetUserActiveName(); // Function ConZ.Prisoner.GetUserActiveName
	struct UPrisonerThrowComponent* GetThrowingComponent(); // Function ConZ.Prisoner.GetThrowingComponent
	float GetTargetCrouchStage(); // Function ConZ.Prisoner.GetTargetCrouchStage
	struct UMaterialInstanceDynamic* GetTacticsBlobMaterial(); // Function ConZ.Prisoner.GetTacticsBlobMaterial
	struct FVector2D GetTabMouseMovement(); // Function ConZ.Prisoner.GetTabMouseMovement
	uint8_t  GetTabMode(); // Function ConZ.Prisoner.GetTabMode
	uint8_t  GetStance(); // Function ConZ.Prisoner.GetStance
	struct AConZSquad* GetSquad(); // Function ConZ.Prisoner.GetSquad
	bool GetShouldIgnoreHeadTurningAndLeaning(); // Function ConZ.Prisoner.GetShouldIgnoreHeadTurningAndLeaning
	struct FDbIntegerId GetServerUserProfileId(); // Function ConZ.Prisoner.GetServerUserProfileId
	struct FRotator GetSavedSpawnRotation(); // Function ConZ.Prisoner.GetSavedSpawnRotation
	bool GetSavedSpawnLocationActive(); // Function ConZ.Prisoner.GetSavedSpawnLocationActive
	struct FVector GetSavedSpawnLocation(); // Function ConZ.Prisoner.GetSavedSpawnLocation
	struct AActor* GetRotationTarget(); // Function ConZ.Prisoner.GetRotationTarget
	struct UPrisonerPrisonWalletComponent* GetPrisonWalletComponent(); // Function ConZ.Prisoner.GetPrisonWalletComponent
	struct UPrisonerMovementComponent* GetPrisonerMovement(); // Function ConZ.Prisoner.GetPrisonerMovement
	struct UPrisonerAnimInstance* GetPrisonerAnimInstance(); // Function ConZ.Prisoner.GetPrisonerAnimInstance
	struct USkeletalMeshComponent* GetPenisSkeletalMeshComponent(); // Function ConZ.Prisoner.GetPenisSkeletalMeshComponent
	float GetPartWetness(uint8_t  part); // Function ConZ.Prisoner.GetPartWetness
	float GetPartWaterWeight(uint8_t  part); // Function ConZ.Prisoner.GetPartWaterWeight
	bool GetOverrideIsLimping(); // Function ConZ.Prisoner.GetOverrideIsLimping
	struct FPrisonerNearbyFoliageInfo GetNearbyFoliageInfo(); // Function ConZ.Prisoner.GetNearbyFoliageInfo
	struct UPrisonerMusicPlayerComponent* GetMusicPlayerComponent(); // Function ConZ.Prisoner.GetMusicPlayerComponent
	uint8_t  GetMotionIntensity(); // Function ConZ.Prisoner.GetMotionIntensity
	uint8_t  GetMeleeTargetSelectionMode(); // Function ConZ.Prisoner.GetMeleeTargetSelectionMode
	struct AActor* GetMeleeTarget(); // Function ConZ.Prisoner.GetMeleeTarget
	float GetMaxPartWaterWeight(uint8_t  part); // Function ConZ.Prisoner.GetMaxPartWaterWeight
	uint8_t  GetMaxAllowedPace(); // Function ConZ.Prisoner.GetMaxAllowedPace
	struct FRotator GetLookatMeleeTargetAimOffset(); // Function ConZ.Prisoner.GetLookatMeleeTargetAimOffset
	float GetLeanAmount(); // Function ConZ.Prisoner.GetLeanAmount
	struct ACorpse* GetLastCorpse(); // Function ConZ.Prisoner.GetLastCorpse
	struct AItem* GetItemOfClass(UObject* ItemClass); // Function ConZ.Prisoner.GetItemOfClass
	struct AItem* GetItemInHands(); // Function ConZ.Prisoner.GetItemInHands
	bool GetIsLimpingOverrideEnabled(); // Function ConZ.Prisoner.GetIsLimpingOverrideEnabled
	bool GetIsInFirstPersonView(); // Function ConZ.Prisoner.GetIsInFirstPersonView
	uint8_t  GetHoldBreathState(); // Function ConZ.Prisoner.GetHoldBreathState
	struct UBondageComponent* GetHandBondage(); // Function ConZ.Prisoner.GetHandBondage
	struct FPrisonerGroundMovementParameters GetGroundMovementParameters(); // Function ConZ.Prisoner.GetGroundMovementParameters
	struct AGameEventBase* GetGameEvent(); // Function ConZ.Prisoner.GetGameEvent
	struct AFishingRod* GetFishingRod(); // Function ConZ.Prisoner.GetFishingRod
	struct UPrisonerFishingComponent* GetFishingComponent(); // Function ConZ.Prisoner.GetFishingComponent
	uint8_t  GetDesiredPace(); // Function ConZ.Prisoner.GetDesiredPace
	float GetDesiredLeanAmount(); // Function ConZ.Prisoner.GetDesiredLeanAmount
	int32_t GetCurrentMidiDeviceIndex(); // Function ConZ.Prisoner.GetCurrentMidiDeviceIndex
	struct FGameplayTag GetCurrentHitReactType(); // Function ConZ.Prisoner.GetCurrentHitReactType
	float GetCrouchStage(); // Function ConZ.Prisoner.GetCrouchStage
	uint8_t  GetCombatMode(); // Function ConZ.Prisoner.GetCombatMode
	struct FPrisonerNearbyFoliageInfo GetCollidingNearbyFoliageInfo(); // Function ConZ.Prisoner.GetCollidingNearbyFoliageInfo
	uint8_t  GetClampedDesiredPace(); // Function ConZ.Prisoner.GetClampedDesiredPace
	struct UBruisingComponent* GetBruisingComponent(); // Function ConZ.Prisoner.GetBruisingComponent
	struct UPrisonerBodySimulationComponent* GetBodySimulation(); // Function ConZ.Prisoner.GetBodySimulation
	float GetAngularVelocity(); // Function ConZ.Prisoner.GetAngularVelocity
	struct FRotator GetAimOffset(); // Function ConZ.Prisoner.GetAimOffset
	bool GenitalsExposed(); // Function ConZ.Prisoner.GenitalsExposed
	bool GameEventFriendlyFireCheck(struct APrisoner* Other); // Function ConZ.Prisoner.GameEventFriendlyFireCheck
	struct AActor* FindNextOrPreviousMeleeTarget(struct AActor* Target, bool Next); // Function ConZ.Prisoner.FindNextOrPreviousMeleeTarget
	void ExamineItem(struct AItem* Item); // Function ConZ.Prisoner.ExamineItem
	void EquippedNightVisionGoggles_ActivatedChanged(struct ANightVisionGogglesItem* Item); // Function ConZ.Prisoner.EquippedNightVisionGoggles_ActivatedChanged
	bool EnterCombatMode(); // Function ConZ.Prisoner.EnterCombatMode
	void DropItemFromHands(); // Function ConZ.Prisoner.DropItemFromHands
	bool DidGameEventRoundStarted(); // Function ConZ.Prisoner.DidGameEventRoundStarted
	void DetonateHead(bool shouldDestroyHeadgear); // Function ConZ.Prisoner.DetonateHead
	void DestroyThrowingComponent(); // Function ConZ.Prisoner.DestroyThrowingComponent
	void DestroyPrisonWalletComponent(); // Function ConZ.Prisoner.DestroyPrisonWalletComponent
	void DestroyPlaceable(struct FDbIntegerId ID); // Function ConZ.Prisoner.DestroyPlaceable
	void DestroyFishingComponent(); // Function ConZ.Prisoner.DestroyFishingComponent
	void DemoteSquadMemberOnServer(struct FDbIntegerId UserProfileId); // Function ConZ.Prisoner.DemoteSquadMemberOnServer
	void DecreaseCrouchStage(); // Function ConZ.Prisoner.DecreaseCrouchStage
	struct UPrisonerThrowComponent* CreateThrowingComponent(struct AItem* itemToThrow, uint8_t  animationType); // Function ConZ.Prisoner.CreateThrowingComponent
	void CreateSquadOnServer(); // Function ConZ.Prisoner.CreateSquadOnServer
	struct UPrisonerPrisonWalletComponent* CreatePrisonWalletComponent(); // Function ConZ.Prisoner.CreatePrisonWalletComponent
	struct UPrisonerMusicPlayerComponent* CreateMusicPlayerComponent(); // Function ConZ.Prisoner.CreateMusicPlayerComponent
	struct UPrisonerFishingComponent* CreateFishingComponent(); // Function ConZ.Prisoner.CreateFishingComponent
	void ConstructWristwatchChildActor(); // Function ConZ.Prisoner.ConstructWristwatchChildActor
	void CommitSuicide(); // Function ConZ.Prisoner.CommitSuicide
	bool ClosePanels(bool switchingTabs); // Function ConZ.Prisoner.ClosePanels
	void Client_TriggerMeleeHitEffect(); // Function ConZ.Prisoner.Client_TriggerMeleeHitEffect
	void Client_TriggerBulletHitEffect(); // Function ConZ.Prisoner.Client_TriggerBulletHitEffect
	void Client_SpawnScreenAllowWakeUp(); // Function ConZ.Prisoner.Client_SpawnScreenAllowWakeUp
	void Client_ShowSpawnScreen(bool loadoutMenu); // Function ConZ.Prisoner.Client_ShowSpawnScreen
	void Client_SetSavedSpawnLocation(bool Active, struct FVector Location, struct FVector Velocity, struct FRotator Rotation); // Function ConZ.Prisoner.Client_SetSavedSpawnLocation
	void Client_OpenParachute(); // Function ConZ.Prisoner.Client_OpenParachute
	void Client_OnTakeDamage(float Damage, struct FDamageEvent DamageEvent, struct AController* eventInstigator, struct AActor* damageObject); // Function ConZ.Prisoner.Client_OnTakeDamage
	void Client_OnPhoenixTearsInjection(); // Function ConZ.Prisoner.Client_OnPhoenixTearsInjection
	void Client_OnNoiseInstigated(float noiseLevel); // Function ConZ.Prisoner.Client_OnNoiseInstigated
	void Client_OnExitPhotoMode(); // Function ConZ.Prisoner.Client_OnExitPhotoMode
	void Client_OnEnterPhotoMode(); // Function ConZ.Prisoner.Client_OnEnterPhotoMode
	void Client_OnAIDetectionTimerChanged(float detectionTimer); // Function ConZ.Prisoner.Client_OnAIDetectionTimerChanged
	void Client_LoadAmmoIntoMagazine(struct AWeaponAttachmentMagazine* magazine, struct TArray<struct FAmmunitionData> ammoData); // Function ConZ.Prisoner.Client_LoadAmmoIntoMagazine
	void Client_Interact(struct UObject* interactable, uint8_t  interactionType, struct FInteractionData InteractionData); // Function ConZ.Prisoner.Client_Interact
	void Client_HighlightKeyboardOnDamage(); // Function ConZ.Prisoner.Client_HighlightKeyboardOnDamage
	void Client_HideSpawnScreen(); // Function ConZ.Prisoner.Client_HideSpawnScreen
	void Client_FadeInVision(float Duration); // Function ConZ.Prisoner.Client_FadeInVision
	void Client_ActivateIntroCinematic(float initialAltitude); // Function ConZ.Prisoner.Client_ActivateIntroCinematic
	void ClearMalfunction(uint8_t  malfunction); // Function ConZ.Prisoner.ClearMalfunction
	void ClearGameEventLoadout(); // Function ConZ.Prisoner.ClearGameEventLoadout
	void ClearEquipment(); // Function ConZ.Prisoner.ClearEquipment
	struct AActor* ChooseFirstMeleeTarget(); // Function ConZ.Prisoner.ChooseFirstMeleeTarget
	void ChangeSquadData(struct FString Name, struct FString Message, struct FString information, struct FConZSquadEmblem emblem); // Function ConZ.Prisoner.ChangeSquadData
	void CarryItem(struct AItem* Item); // Function ConZ.Prisoner.CarryItem
	void CarriedItemsVisibilityChanged__DelegateSignature(bool Visible); // DelegateFunction ConZ.Prisoner.CarriedItemsVisibilityChanged__DelegateSignature
	void CapsuleComponent_PhysicsVolumeChanged(struct APhysicsVolume* Volume); // Function ConZ.Prisoner.CapsuleComponent_PhysicsVolumeChanged
	bool CanTakeItemInHands(struct AItem* Item); // Function ConZ.Prisoner.CanTakeItemInHands
	bool CanOpenTabMode(uint8_t  mode); // Function ConZ.Prisoner.CanOpenTabMode
	bool CanLeaveCombatMode(); // Function ConZ.Prisoner.CanLeaveCombatMode
	bool CanEnterMeleeCombatMode(); // Function ConZ.Prisoner.CanEnterMeleeCombatMode
	bool CanEnterCombatMode(); // Function ConZ.Prisoner.CanEnterCombatMode
	void CancelSquadInvitationOnServer(); // Function ConZ.Prisoner.CancelSquadInvitationOnServer
	void CancelSquadInvitationOnClient(); // Function ConZ.Prisoner.CancelSquadInvitationOnClient
	void CancelInteractableDragging(); // Function ConZ.Prisoner.CancelInteractableDragging
	int32_t CalculateRespawnPriceBasedOnSquadSize(int32_t defaultPrice, uint8_t  SpawnLocation); // Function ConZ.Prisoner.CalculateRespawnPriceBasedOnSquadSize
	float CalculateAIPerceptionPercentage(); // Function ConZ.Prisoner.CalculateAIPerceptionPercentage
	void BorderCrossingPenaltyChange__DelegateSignature(struct APrisoner* sender, uint8_t  newPenalty); // DelegateFunction ConZ.Prisoner.BorderCrossingPenaltyChange__DelegateSignature
	void BaseInteractionComponent_OnBaseInteractionEvent(struct UBaseInteractionComponent* Component, struct FBaseInteractionEvent& BaseInteractionEvent); // Function ConZ.Prisoner.BaseInteractionComponent_OnBaseInteractionEvent
	bool AreBreastsExposed(); // Function ConZ.Prisoner.AreBreastsExposed
	void AddWeaponAttachment(struct AWeapon* Weapon, struct AWeaponAttachment* Attachment); // Function ConZ.Prisoner.AddWeaponAttachment
	void AddToSquadOnServer(struct FDbIntegerId squadId); // Function ConZ.Prisoner.AddToSquadOnServer
	void AddHandBondage(struct AItem* bondageItem); // Function ConZ.Prisoner.AddHandBondage
	void AcceptSquadInvitationOnServer(struct AConZSquad* Squad, bool accepted); // Function ConZ.Prisoner.AcceptSquadInvitationOnServer
}; 



// Class ConZ.PrisonerSkillUIData
// Size: 0x50(Inherited: 0x28) 
struct UPrisonerSkillUIData : public UObject
{
	struct FText _description;  // 0x28(0x18)
	USkill* _skillClass;  // 0x40(0x8)
	char pad_72[8];  // 0x48(0x8)

}; 



// Class ConZ.PrisonerSkillUIData_Endurance
// Size: 0x60(Inherited: 0x50) 
struct UPrisonerSkillUIData_Endurance : public UPrisonerSkillUIData
{
	char pad_80[16];  // 0x50(0x10)

}; 



// Class ConZ.EntitySystem
// Size: 0x728(Inherited: 0x28) 
struct UEntitySystem : public UObject
{
	char pad_40[16];  // 0x28(0x10)
	struct UEntitySystemSettings* _settings;  // 0x38(0x8)
	char pad_64[1608];  // 0x40(0x648)
	struct TMap<struct UObject*, int32_t> _uobjectReferences;  // 0x688(0x50)
	char pad_1752[80];  // 0x6D8(0x50)

}; 



// Class ConZ.PrisonerVehicleAction_SetupCarJackDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerVehicleAction_SetupCarJackDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.QuickAccessItemSwitcher3
// Size: 0x2D8(Inherited: 0x260) 
struct UQuickAccessItemSwitcher3 : public UInventoryContainerWidget2
{
	int32_t Index;  // 0x260(0x4)
	char pad_612[4];  // 0x264(0x4)
	struct UTextBlock* _nameText;  // 0x268(0x8)
	struct UInventorySlotUserWidget* _slotWidget;  // 0x270(0x8)
	struct UTextBlock* IndexText;  // 0x278(0x8)
	struct UItemWidget2* _itemWidget;  // 0x280(0x8)
	struct UCheckBox* _throwingModeCheckbox;  // 0x288(0x8)
	char pad_656[24];  // 0x290(0x18)
	struct FText _throwingModeCaption;  // 0x2A8(0x18)
	struct FText _throwingModeDescription;  // 0x2C0(0x18)

	void ThrowingModePressed(bool IsChecked); // Function ConZ.QuickAccessItemSwitcher3.ThrowingModePressed
	void SetItemOpacity(float Value, bool Invalidate); // Function ConZ.QuickAccessItemSwitcher3.SetItemOpacity
}; 



// Class ConZ.WeaponStateUnloadAmmo
// Size: 0x40(Inherited: 0x30) 
struct UWeaponStateUnloadAmmo : public UWeaponState
{
	char pad_48[16];  // 0x30(0x10)

}; 



// Class ConZ.LockableItemComponent
// Size: 0xF8(Inherited: 0xC8) 
struct ULockableItemComponent : public UItemComponent
{
	char pad_200[8];  // 0xC8(0x8)
	struct TArray<struct ULockData*> _staticLocks;  // 0xD0(0x10)
	struct TArray<struct ULockItemTag*> _lockItems;  // 0xE0(0x10)
	uint8_t  _activeAccessLevel;  // 0xF0(0x1)
	char pad_241[7];  // 0xF1(0x7)

}; 



// Class ConZ.PrisonerActionStartPlayingInstrumentDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionStartPlayingInstrumentDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.PrisonerUIDataImpl
// Size: 0x848(Inherited: 0x808) 
struct UPrisonerUIDataImpl : public UPrisonerUIData
{
	char pad_2056[48];  // 0x808(0x30)
	struct UPrisonerSkillsUIData* SkillsUIData;  // 0x838(0x8)
	struct UPrisonerBodySimulationUIData* BodySimulationUIData;  // 0x840(0x8)

}; 



// Class ConZ.EntitySystemSettings
// Size: 0x38(Inherited: 0x28) 
struct UEntitySystemSettings : public UObject
{
	struct TArray<struct FEntityToCreateOnStartupParams> EntitiesToCreateOnStartup;  // 0x28(0x10)

}; 



// Class ConZ.PostItemsSpawnedActions
// Size: 0x28(Inherited: 0x28) 
struct UPostItemsSpawnedActions : public UObject
{

	void Execute(struct TArray<struct AItem*>& SpawnedItems); // Function ConZ.PostItemsSpawnedActions.Execute
}; 



// Class ConZ.PrisonerForeignSubstance_Painkillers
// Size: 0x140(Inherited: 0x140) 
struct UPrisonerForeignSubstance_Painkillers : public UPrisonerForeignSubstance
{

}; 



// Class ConZ.GasTankItem
// Size: 0x920(Inherited: 0x910) 
struct AGasTankItem : public AItem
{
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent;  // 0x910(0x8)
	struct URangedResourceProviderComponent* _rangedResourceProviderComponent;  // 0x918(0x8)

}; 



// Class ConZ.ObtainItemObjective
// Size: 0x378(Inherited: 0x330) 
struct AObtainItemObjective : public ARequirementObjective
{
	struct TArray<struct TSoftClassPtr<UObject>> _targetItems;  // 0x330(0x10)
	char pad_832_1 : 7;  // 0x340(0x1)
	bool _itemInHands : 1;  // 0x340(0x1)
	char pad_833_1 : 7;  // 0x341(0x1)
	bool _itemInHolster : 1;  // 0x341(0x1)
	char pad_834_1 : 7;  // 0x342(0x1)
	bool _itemInInventory : 1;  // 0x342(0x1)
	char pad_835[53];  // 0x343(0x35)

}; 



// Class ConZ.EquipmentItemState
// Size: 0x100(Inherited: 0x100) 
struct UEquipmentItemState : public UItemState
{

}; 



// Class ConZ.PrisonerBodySymptom
// Size: 0xB8(Inherited: 0xA0) 
struct UPrisonerBodySymptom : public UPrisonerBodyConditionOrSymptom
{
	char pad_160[16];  // 0xA0(0x10)
	struct UPrisonerBodySymptomNotifier* _notifier;  // 0xB0(0x8)

}; 



// Class ConZ.EquipmentItem
// Size: 0x930(Inherited: 0x910) 
struct AEquipmentItem : public AItem
{
	uint32_t MinRange;  // 0x910(0x4)
	uint32_t MaxRange;  // 0x914(0x4)
	uint32_t MinDamage;  // 0x918(0x4)
	uint32_t MaxDamage;  // 0x91C(0x4)
	uint32_t AP;  // 0x920(0x4)
	char pad_2340[12];  // 0x924(0xC)

}; 



// Class ConZ.ObjectivesContainerWidget
// Size: 0x278(Inherited: 0x260) 
struct UObjectivesContainerWidget : public UUserWidget
{
	struct UMissionContainerWidget* _mainMissionContainerWidget;  // 0x260(0x8)
	struct UMissionContainerWidget* _sideMissionContainerWidget;  // 0x268(0x8)
	struct UMissionContainerWidget* _tutorialMissionContainerWidget;  // 0x270(0x8)

}; 



// Class ConZ.EvaluatedEntitySpawnerRegistrySetup
// Size: 0x80(Inherited: 0x80) 
struct UEvaluatedEntitySpawnerRegistrySetup : public UEntitySetup
{

}; 



// Class ConZ.EventInsertMagazine
// Size: 0x90(Inherited: 0x90) 
struct UEventInsertMagazine : public UWeaponActionReloadSequence
{

}; 



// Class ConZ.PrisonerActionIgniteItemDescription
// Size: 0x58(Inherited: 0x38) 
struct UPrisonerActionIgniteItemDescription : public UPrisonerActionDescription
{
	char pad_56[32];  // 0x38(0x20)

}; 



// Class ConZ.ExamineAction
// Size: 0xA8(Inherited: 0xA8) 
struct UExamineAction : public UInteractionAction
{

}; 



// Class ConZ.HuntingClue
// Size: 0x2C8(Inherited: 0x220) 
struct AHuntingClue : public AActor
{
	char pad_544[8];  // 0x220(0x8)
	struct USceneComponent* _rootComponent;  // 0x228(0x8)
	struct UParticleSystemComponent* _focusModeParticles;  // 0x230(0x8)
	struct UDecalComponent* _clueDecalComponent;  // 0x238(0x8)
	struct UStaticMeshComponent* _clueStaticMeshComponent;  // 0x240(0x8)
	struct UArrowComponent* _debugArrowComponent;  // 0x248(0x8)
	struct TArray<struct FHuntingClueVisuals> _firstClueVisuals;  // 0x250(0x10)
	struct TArray<struct FHuntingClueVisuals> _visuals;  // 0x260(0x10)
	struct TArray<struct TSoftObjectPtr<UAkAudioEvent>> _firstClueSoundVariations;  // 0x270(0x10)
	struct TArray<struct TSoftObjectPtr<UAkAudioEvent>> _secondClueSoundVariations;  // 0x280(0x10)
	struct TArray<struct TSoftObjectPtr<UAkAudioEvent>> _thirdPlusClueSoundVariations;  // 0x290(0x10)
	float _hearingDistance;  // 0x2A0(0x4)
	float _minApparentDistance;  // 0x2A4(0x4)
	float _fadeTime;  // 0x2A8(0x4)
	float _lifetimeAfterFadeOut;  // 0x2AC(0x4)
	float _directionalConeHalfAngle;  // 0x2B0(0x4)
	char _packedClueIndexData;  // 0x2B4(0x1)
	char pad_693[19];  // 0x2B5(0x13)

}; 



// Class ConZ.PrisonerBodyEffect_AntibioticsReaction
// Size: 0xD0(Inherited: 0x40) 
struct UPrisonerBodyEffect_AntibioticsReaction : public UPrisonerBodyEffect
{
	UPrisonerBodyEffectUIData_AntibioticsReaction* _uiDataClass;  // 0x40(0x8)
	struct FRuntimeFloatCurve _immuneSystemEfficiencyModifierVsAntibioticsAmountRatio;  // 0x48(0x88)

}; 



// Class ConZ.ExamineAssetData
// Size: 0x1D0(Inherited: 0x30) 
struct UExamineAssetData : public UInteractionAssetData
{
	struct FExamineItemSpawnerData ExamineData;  // 0x30(0xB0)
	struct FItemSpawnerPresetWithOverrides SpawnerPreset;  // 0xE0(0xA0)
	struct UAkAudioEvent* StartExamineAudioEvent;  // 0x180(0x8)
	struct UAkAudioEvent* StopExamineAudioEvent;  // 0x188(0x8)
	uint8_t  noiseLevel;  // 0x190(0x1)
	char pad_401_1 : 7;  // 0x191(0x1)
	bool CanStore : 1;  // 0x191(0x1)
	char pad_402_1 : 7;  // 0x192(0x1)
	bool CanSave : 1;  // 0x192(0x1)
	char pad_403[61];  // 0x193(0x3D)

}; 



// Class ConZ.TradePost
// Size: 0x450(Inherited: 0x398) 
struct ATradePost : public ATradeOutpostBuilding
{
	char pad_920[24];  // 0x398(0x18)
	struct TArray<struct FTraderMarker> _traderMarkers;  // 0x3B0(0x10)
	struct TArray<struct FTraderLocationMarker> _locationMarkers;  // 0x3C0(0x10)
	struct TArray<struct ATrader*> _spawnedTraders;  // 0x3D0(0x10)
	char pad_992[16];  // 0x3E0(0x10)
	struct TMap<struct FDbIntegerId, struct FSpawnedDepotsHelperStruct> _spawnedDepots;  // 0x3F0(0x50)
	char pad_1088[16];  // 0x440(0x10)

}; 



// Class ConZ.PrisonerActionPairRemoteKeyAndSensorDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionPairRemoteKeyAndSensorDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.ExaminePrisonerAction
// Size: 0xB0(Inherited: 0xA8) 
struct UExaminePrisonerAction : public UExamineAction
{
	char pad_168[8];  // 0xA8(0x8)

}; 



// Class ConZ.MissionDataGroup
// Size: 0x160(Inherited: 0x30) 
struct UMissionDataGroup : public UDataAsset
{
	struct FString MissionRootPath;  // 0x30(0x10)
	struct UAkAudioEvent* MissionStartedSound;  // 0x40(0x8)
	struct UAkAudioEvent* MissionCompletedSound;  // 0x48(0x8)
	struct UAkAudioEvent* MissionFailedSound;  // 0x50(0x8)
	struct UAkAudioEvent* ObjectiveStartedSound;  // 0x58(0x8)
	struct UAkAudioEvent* ObjectiveCompletedSound;  // 0x60(0x8)
	struct UAkAudioEvent* ObjectiveFailedSound;  // 0x68(0x8)
	struct TMap<AMission*, struct FMissionData> MainStoryMissions;  // 0x70(0x50)
	struct TMap<AMission*, struct FMissionData> SideStoryMissions;  // 0xC0(0x50)
	struct TMap<AMission*, struct FMissionData> TutorialMissions;  // 0x110(0x50)

}; 



// Class ConZ.PrisonerBodySymptomCause_Vomiting
// Size: 0x40(Inherited: 0x40) 
struct UPrisonerBodySymptomCause_Vomiting : public UPrisonerBodySymptomCause_PeriodicAffect
{

}; 



// Class ConZ.ExecuteInteractionAction
// Size: 0x160(Inherited: 0xA8) 
struct UExecuteInteractionAction : public UInteractionAction
{
	char pad_168[184];  // 0xA8(0xB8)

}; 



// Class ConZ.FailurePenalty
// Size: 0x30(Inherited: 0x28) 
struct UFailurePenalty : public UObject
{
	char pad_40_1 : 7;  // 0x28(0x1)
	bool _shouldExecuteOnClients : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)

}; 



// Class ConZ.InteractionContainerUserWidget
// Size: 0x2B8(Inherited: 0x260) 
struct UInteractionContainerUserWidget : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UVerticalBox* _actionContainer;  // 0x278(0x8)
	char pad_640[12];  // 0x280(0xC)
	struct TWeakObjectPtr<AActor> _underlyingInteractableActor;  // 0x28C(0x8)
	char pad_660[28];  // 0x294(0x1C)
	struct UPrisonerTreatmentUIController* _uiController;  // 0x2B0(0x8)

	void RemoveActiveInteractionWidget(struct APlayerController* PlayerController); // Function ConZ.InteractionContainerUserWidget.RemoveActiveInteractionWidget
	void InteractableDestroyed(struct AActor* interactable); // Function ConZ.InteractionContainerUserWidget.InteractableDestroyed
}; 



// Class ConZ.ExplosiveProtectionItemComponentState
// Size: 0x48(Inherited: 0x40) 
struct UExplosiveProtectionItemComponentState : public UItemComponentStateBase
{
	char pad_64_1 : 7;  // 0x40(0x1)
	bool IsArmed : 1;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)

}; 



// Class ConZ.VehicleMarkersResponse
// Size: 0x30(Inherited: 0x28) 
struct UVehicleMarkersResponse : public UPlayerRpcChannelServerResponse
{
	struct UVehicleMarkersData* _payload;  // 0x28(0x8)

}; 



// Class ConZ.FakeItem
// Size: 0x298(Inherited: 0x220) 
struct AFakeItem : public AActor
{
	char pad_544[8];  // 0x220(0x8)
	struct UStaticMeshComponent* _staticMesh;  // 0x228(0x8)
	struct UNiagaraComponent* _niagaraComponent;  // 0x230(0x8)
	struct FVector _spawnLocationOffset;  // 0x238(0xC)
	struct FRotator _spawnRotationOffset;  // 0x244(0xC)
	float _spawnRotationRandomization;  // 0x250(0x4)
	float _lifeTimeAfterInteraction;  // 0x254(0x4)
	float _additionalLifetimeForParticles;  // 0x258(0x4)
	char pad_604[4];  // 0x25C(0x4)
	struct UAkAudioEvent* _interactionAudioEvent;  // 0x260(0x8)
	struct UMaterialInterface* _niagaraParticleMaterial;  // 0x268(0x8)
	float _niagaraParticleForce;  // 0x270(0x4)
	float _niagaraParticleAmount;  // 0x274(0x4)
	struct TArray<struct UMaterialInstanceDynamic*> _meshMaterials;  // 0x278(0x10)
	struct UMaterialInstanceDynamic* _particleMaterial;  // 0x288(0x8)
	char pad_656[8];  // 0x290(0x8)

}; 



// Class ConZ.IndexedHierarchicalInstancedStaticMeshComponent
// Size: 0x730(Inherited: 0x680) 
struct UIndexedHierarchicalInstancedStaticMeshComponent : public UHierarchicalInstancedStaticMeshComponent
{
	char pad_1664[176];  // 0x680(0xB0)

}; 



// Class ConZ.SimpleAnimalAIController
// Size: 0x3C0(Inherited: 0x328) 
struct ASimpleAnimalAIController : public AAIController
{
	float WanderRadius;  // 0x328(0x4)
	float RunAwayTime;  // 0x32C(0x4)
	float MinActionTime;  // 0x330(0x4)
	float MaxActionTime;  // 0x334(0x4)
	float WalkSpeed;  // 0x338(0x4)
	float RunSpeed;  // 0x33C(0x4)
	float FleeSegmentDistance;  // 0x340(0x4)
	float AlertStartupTime;  // 0x344(0x4)
	float MinMoveDistance;  // 0x348(0x4)
	float DoNotDespawnTime;  // 0x34C(0x4)
	char pad_848[112];  // 0x350(0x70)

	void UpdatePerception(struct TArray<struct AActor*>& actorsPercepted); // Function ConZ.SimpleAnimalAIController.UpdatePerception
	void StartAlert(); // Function ConZ.SimpleAnimalAIController.StartAlert
	void OnTakeDamageHandler(struct AActor* damageActor, float Damage, struct FVector HitLocation, struct APawn* eventInstigator); // Function ConZ.SimpleAnimalAIController.OnTakeDamageHandler
}; 



// Class ConZ.SpawnExaminedObjectsInterface
// Size: 0x28(Inherited: 0x28) 
struct USpawnExaminedObjectsInterface : public UInterface
{

}; 



// Class ConZ.FamePointSettings
// Size: 0x1B8(Inherited: 0x30) 
struct UFamePointSettings : public UDataAsset
{
	struct FFamePointAwards Awards;  // 0x30(0x160)
	struct FFamePointPenalties Penalties;  // 0x190(0x18)
	struct UFamePointTagSettings* FamePointTagSettings;  // 0x1A8(0x8)
	struct UCurveFloat* FameGainCurve;  // 0x1B0(0x8)

}; 



// Class ConZ.LockBombData
// Size: 0xA0(Inherited: 0x98) 
struct ULockBombData : public ULockData
{
	float Duration;  // 0x98(0x4)
	char pad_156[4];  // 0x9C(0x4)

}; 



// Class ConZ.FamePointTagSettings
// Size: 0x120(Inherited: 0x30) 
struct UFamePointTagSettings : public UDataAsset
{
	struct TMap<struct FGameplayTag, float> _famePointAmountWhenLootedForTag;  // 0x30(0x50)
	struct TMap<struct FGameplayTag, float> _famePointAmountWhenSellingForTag;  // 0x80(0x50)
	struct TMap<struct FGameplayTag, float> _famePointAmountWhenBuyingForTag;  // 0xD0(0x50)

}; 



// Class ConZ.FarmingSkill
// Size: 0x2E0(Inherited: 0xB0) 
struct UFarmingSkill : public UIntelligenceSkill
{
	struct FFarmingSkillParametersPerSkillLevel NoSkillParameters;  // 0xB0(0x70)
	struct FFarmingSkillParametersPerSkillLevel BasicSkillParameters;  // 0x120(0x70)
	struct FFarmingSkillParametersPerSkillLevel MediumSkillParameters;  // 0x190(0x70)
	struct FFarmingSkillParametersPerSkillLevel AdvancedSkillParameters;  // 0x200(0x70)
	struct FFarmingSkillParametersPerSkillLevel AboveAdvancedSkillParameters;  // 0x270(0x70)

}; 



// Class ConZ.FertilizerItemComponent
// Size: 0xD8(Inherited: 0xC8) 
struct UFertilizerItemComponent : public UItemComponent
{
	uint8_t  _type;  // 0xC8(0x1)
	char pad_201[7];  // 0xC9(0x7)
	struct UAnimMontage* _addFertilizerMontage;  // 0xD0(0x8)

}; 



// Class ConZ.FireworksItem
// Size: 0x940(Inherited: 0x910) 
struct AFireworksItem : public AItem
{
	char pad_2320_1 : 7;  // 0x910(0x1)
	bool _isFiring : 1;  // 0x910(0x1)
	char pad_2321[7];  // 0x911(0x7)
	int32_t _totalShells;  // 0x918(0x4)
	char pad_2332[12];  // 0x91C(0xC)
	float _secondsBetweenLaunches;  // 0x928(0x4)
	float _noiseLoudnessOnLaunch;  // 0x92C(0x4)
	char pad_2352_1 : 7;  // 0x930(0x1)
	bool _canBePickedUpWhenLit : 1;  // 0x930(0x1)
	char pad_2353_1 : 7;  // 0x931(0x1)
	bool _hasFuse : 1;  // 0x931(0x1)
	char pad_2354[14];  // 0x932(0xE)

	void SetIsFiring(bool IsFiring); // Function ConZ.FireworksItem.SetIsFiring
	void OnRep_IsFiring(); // Function ConZ.FireworksItem.OnRep_IsFiring
	void OnFuseLit(); // Function ConZ.FireworksItem.OnFuseLit
	void LaunchShell(); // Function ConZ.FireworksItem.LaunchShell
	bool IsFiring(); // Function ConZ.FireworksItem.IsFiring
	int32_t GetTotalShells(); // Function ConZ.FireworksItem.GetTotalShells
	float GetSecondsBetweenLaunches(); // Function ConZ.FireworksItem.GetSecondsBetweenLaunches
	bool CanStartFiring(struct APrisoner* Prisoner); // Function ConZ.FireworksItem.CanStartFiring
	void AutoLaunchShells(); // Function ConZ.FireworksItem.AutoLaunchShells
}; 



// Class ConZ.FishInstancedStaticMeshComponent
// Size: 0x590(Inherited: 0x590) 
struct UFishInstancedStaticMeshComponent : public UInstancedStaticMeshComponent
{

}; 



// Class ConZ.FishingAttachmentBait
// Size: 0x980(Inherited: 0x930) 
struct AFishingAttachmentBait : public AFishingAttachment
{
	struct TMap<uint8_t , float> _baitCatchingChanceMultiplier;  // 0x930(0x50)

}; 



// Class ConZ.FishingAttachmentFloater
// Size: 0xA30(Inherited: 0x930) 
struct AFishingAttachmentFloater : public AFishingAttachment
{
	struct UConZBuoyancyComponent* _floatingComponent;  // 0x930(0x8)
	int32_t _floaterBreakSegmentIndex;  // 0x938(0x4)
	float _sinkSpeed;  // 0x93C(0x4)
	float _sinkSpeedDuringFastReel;  // 0x940(0x4)
	float _minDistanceForSizeIncrease;  // 0x944(0x4)
	float _maxDistanceForSizeIncrease;  // 0x948(0x4)
	float _maxScale;  // 0x94C(0x4)
	float _velocityThreshold;  // 0x950(0x4)
	float _shouldCheckVelocityThreshold;  // 0x954(0x4)
	float _movingRippleThreshold;  // 0x958(0x4)
	struct FVector _floaterWaterCheckOffset;  // 0x95C(0xC)
	float _sendStateInterval;  // 0x968(0x4)
	char pad_2412[116];  // 0x96C(0x74)
	struct UParticleSystem* _hitWaterParticles;  // 0x9E0(0x8)
	struct UParticleSystemComponent* _rippleParticleSystemComponent;  // 0x9E8(0x8)
	struct UParticleSystemComponent* _movingRippleParticleSystemComponent;  // 0x9F0(0x8)
	struct UParticleSystemComponent* _sinkParticleSystemComponent;  // 0x9F8(0x8)
	struct UMaterialInterface* _scaledMaterial;  // 0xA00(0x8)
	struct UMaterialInterface* _storedMaterial;  // 0xA08(0x8)
	char pad_2576[32];  // 0xA10(0x20)

	void Server_SendState(float DeltaTime, struct FRigidBodyState State); // Function ConZ.FishingAttachmentFloater.Server_SendState
}; 



// Class ConZ.ItemSelection
// Size: 0x98(Inherited: 0x30) 
struct UItemSelection : public UDataAsset
{
	AItem* MainItem;  // 0x30(0x8)
	struct TArray<AItem*> SupportItems;  // 0x38(0x10)
	struct TArray<AItem*> Attachments;  // 0x48(0x10)
	struct UTexture2D* UnselectedIcon;  // 0x58(0x8)
	struct UTexture2D* SelectedIcon;  // 0x60(0x8)
	struct UTexture2D* DisabledIcon;  // 0x68(0x8)
	struct FText SelectionName;  // 0x70(0x18)
	float SizeX;  // 0x88(0x4)
	float SizeY;  // 0x8C(0x4)
	int32_t TeamIndex;  // 0x90(0x4)
	char pad_148[4];  // 0x94(0x4)

}; 



// Class ConZ.FishingAttachmentSinker
// Size: 0x930(Inherited: 0x930) 
struct AFishingAttachmentSinker : public AFishingAttachment
{

}; 



// Class ConZ.FishingBarWidget
// Size: 0x430(Inherited: 0x260) 
struct UFishingBarWidget : public UUserWidget
{
	struct FLinearColor TopSegmentGradientColorBottom;  // 0x260(0x10)
	struct FLinearColor TopSegmentGradientColorTop;  // 0x270(0x10)
	float BarBoxesTotalHeight;  // 0x280(0x4)
	float BarSegmentsTotalHeight;  // 0x284(0x4)
	int32_t BarSegmentNum;  // 0x288(0x4)
	char pad_652[4];  // 0x28C(0x4)
	struct FSlateBrush ProgressBarBackgroundBoxBrush;  // 0x290(0x88)
	struct FLinearColor ProgressBarBackgroundBoxColorAndOpacity;  // 0x318(0x10)
	float ProgressBarBackgroundBoxPadding;  // 0x328(0x4)
	char pad_812[4];  // 0x32C(0x4)
	struct FSlateBrush ProgressBarSegmentBrush;  // 0x330(0x88)
	struct FLinearColor ProgressBarSegmentColorAndOpacity;  // 0x3B8(0x10)
	float ProgressBarSegmentPadding;  // 0x3C8(0x4)
	char pad_972[4];  // 0x3CC(0x4)
	struct UVerticalBox* _progressBarSegmentBackgroundBoxesContainer;  // 0x3D0(0x8)
	struct UVerticalBox* _progressBarSegmentsContainer;  // 0x3D8(0x8)
	struct USizeBox* _simulatedProgressBar;  // 0x3E0(0x8)
	char pad_1000[72];  // 0x3E8(0x48)

	void SetSegmentBarNum(int32_t numOfSegments); // Function ConZ.FishingBarWidget.SetSegmentBarNum
	void SetProgressPercentage(float Value); // Function ConZ.FishingBarWidget.SetProgressPercentage
	float GetProgressPercentage(); // Function ConZ.FishingBarWidget.GetProgressPercentage
}; 



// Class ConZ.InfiniteResourceAssetData
// Size: 0xB0(Inherited: 0x30) 
struct UInfiniteResourceAssetData : public UInteractionAssetData
{
	UGameResourceType* ResourceType;  // 0x30(0x8)
	struct FGameplayTagContainer InSocketTypes;  // 0x38(0x20)
	struct FGameplayTagContainer OutSocketTypes;  // 0x58(0x20)
	struct TArray<struct UBaseItemTag*> RequiredItemTagsForFilling;  // 0x78(0x10)
	float FillBaseActionDuration;  // 0x88(0x4)
	float FillActionDurationPerAmountFilled;  // 0x8C(0x4)
	float FillResourceFillingExperiencePerAmount;  // 0x90(0x4)
	char pad_148[4];  // 0x94(0x4)
	struct UAnimMontage* FillMontage;  // 0x98(0x8)
	struct UAkAudioEvent* FillStartAudioEvent;  // 0xA0(0x8)
	struct UAkAudioEvent* FillStopAudioEvent;  // 0xA8(0x8)

}; 



// Class ConZ.FishingContainerWidget
// Size: 0x278(Inherited: 0x260) 
struct UFishingContainerWidget : public UUserWidget
{
	struct UFishingBarWidget* _castingBarWidget;  // 0x260(0x8)
	struct UFishingBarWidget* _fishingBarWidget;  // 0x268(0x8)
	float _tensionBarInterpSpeed;  // 0x270(0x4)
	char pad_628[4];  // 0x274(0x4)

}; 



// Class ConZ.ZombieArmorDamageReductionAssetData
// Size: 0x58(Inherited: 0x28) 
struct UZombieArmorDamageReductionAssetData : public UAssetUserData
{
	float CollisionDamageMultiplierPerBodyPart[c];  // 0x28(0x30)

}; 



// Class ConZ.HazmatSuitTag
// Size: 0x30(Inherited: 0x30) 
struct UHazmatSuitTag : public UBaseItemTag
{

}; 



// Class ConZ.FishingReelAnimInstance
// Size: 0x2C0(Inherited: 0x2C0) 
struct UFishingReelAnimInstance : public UAnimInstance
{
	float _reelHandleRotationAnimationExplicitTime;  // 0x2B8(0x4)
	uint8_t  _owningPrisonerStance;  // 0x2BC(0x1)
	char pad_709_1 : 7;  // 0x2C5(0x1)
	bool _isOwningPrisonerInFirstPersonView : 1;  // 0x2BD(0x1)
	char pad_710_1 : 7;  // 0x2C6(0x1)
	bool _isLocked : 1;  // 0x2BE(0x1)
	char pad_711_1 : 7;  // 0x2C7(0x1)
	bool _isCasting : 1;  // 0x2BF(0x1)

	struct UAnimSequenceBase* GetReelingAnimSequence(); // Function ConZ.FishingReelAnimInstance.GetReelingAnimSequence
}; 



// Class ConZ.FishingRodState
// Size: 0x110(Inherited: 0x100) 
struct UFishingRodState : public UItemState
{
	struct TArray<struct FEntityId> FishingAttachments;  // 0x100(0x10)

}; 



// Class ConZ.FishingRod
// Size: 0xC20(Inherited: 0x910) 
struct AFishingRod : public AItem
{
	struct FMulticastInlineDelegate AttachmentAdded;  // 0x910(0x10)
	struct FMulticastInlineDelegate AttachmentRemoved;  // 0x920(0x10)
	struct USkeletalMeshComponent* SkeletalMesh;  // 0x930(0x8)
	float FishingAreaRadius;  // 0x938(0x4)
	char pad_2364[4];  // 0x93C(0x4)
	struct APrisoner* _fishingRodOwner;  // 0x940(0x8)
	char pad_2376[24];  // 0x948(0x18)
	struct TArray<struct AFishingAttachment*> _fishingAttachmentsReplicated;  // 0x960(0x10)
	float _reelingAmount;  // 0x970(0x4)
	char pad_2420[76];  // 0x974(0x4C)
	struct UFishSpeciesData* _fishSpeciesData;  // 0x9C0(0x8)
	char pad_2504[120];  // 0x9C8(0x78)
	struct AItem* _minigameCaughtItem;  // 0xA40(0x8)
	struct AFishingTrophyActor* _minigameTrophyActor;  // 0xA48(0x8)
	char pad_2640[1];  // 0xA50(0x1)
	char pad_2641_1 : 7;  // 0xA51(0x1)
	bool _isInTrophyState : 1;  // 0xA51(0x1)
	char pad_2642[6];  // 0xA52(0x6)
	float _floaterSimulatedWeight;  // 0xA58(0x4)
	float _floaterSimulatedWeightDuringFastReeling;  // 0xA5C(0x4)
	float _shortCastingPower;  // 0xA60(0x4)
	float _minCastingPower;  // 0xA64(0x4)
	float _maxCastingPower;  // 0xA68(0x4)
	float _safeAreaRadius;  // 0xA6C(0x4)
	float _fishNotBitingAreaRadius;  // 0xA70(0x4)
	float _minigameSafeAreaRadius;  // 0xA74(0x4)
	float _baseReelingSpeed;  // 0xA78(0x4)
	float _fastReelingSpeed;  // 0xA7C(0x4)
	float _defaultWaterVelocityMultiplier;  // 0xA80(0x4)
	float _shortCastingAngle;  // 0xA84(0x4)
	float _longCastingAngle;  // 0xA88(0x4)
	float _fishingLineTensionToHookThreshold;  // 0xA8C(0x4)
	struct FTransform _caughtFishOffsetTransform;  // 0xA90(0x30)
	AFishingTrophyActor* _trophyActorClass;  // 0xAC0(0x8)
	float _sendStateInterval;  // 0xAC8(0x4)
	char pad_2764[116];  // 0xACC(0x74)
	float _fishIdleTimeAtStart;  // 0xB40(0x4)
	float _fishStruggleOffsetAmplitude;  // 0xB44(0x4)
	float _fishStruggleOffsetPeriod;  // 0xB48(0x4)
	float _minDistanceToApplyStruggleOffset;  // 0xB4C(0x4)
	float _fishToSurfaceRadius;  // 0xB50(0x4)
	float _fishGenericSpeed;  // 0xB54(0x4)
	float _minFishDirectionChangeTime;  // 0xB58(0x4)
	float _maxFishDirectionChangeTime;  // 0xB5C(0x4)
	float _fishDrainStaminaModifier;  // 0xB60(0x4)
	float _fishRecoveryStaminaModifier;  // 0xB64(0x4)
	float _lineBreakConstant;  // 0xB68(0x4)
	float _reelingTensionModifier;  // 0xB6C(0x4)
	float _fishRecoveryRadiusBuffer;  // 0xB70(0x4)
	float _fishUnderWaterSurfaceOffset;  // 0xB74(0x4)
	float _fishStrengthModifier;  // 0xB78(0x4)
	float _fishingBoundsAngle;  // 0xB7C(0x4)
	float _fishingBoundsRadius;  // 0xB80(0x4)
	float _fishingLineInTensionDamageAmount;  // 0xB84(0x4)
	float _fishingLineOnBreakDamageAmount;  // 0xB88(0x4)
	float _fishStuckTimeThreshold;  // 0xB8C(0x4)
	float _fishNewDirectionAngleStep;  // 0xB90(0x4)
	char pad_2964_1 : 7;  // 0xB94(0x1)
	bool _useRodAsRootLocation : 1;  // 0xB94(0x1)
	char pad_2965[3];  // 0xB95(0x3)
	struct UAkAudioEvent* _castingObjectDropToWaterAudioEvent;  // 0xB98(0x8)
	struct UAkAudioEvent* _fishHookedAudioEvent;  // 0xBA0(0x8)
	struct UAkAudioEvent* _wireBreakAudioEvent;  // 0xBA8(0x8)
	struct UAkAudioEvent* _wireTensionStartAudioEvent;  // 0xBB0(0x8)
	struct UAkAudioEvent* _wireTensionEndAudioEvent;  // 0xBB8(0x8)
	struct UAkAudioEvent* _menuButtonClickAudioEvent;  // 0xBC0(0x8)
	float _castPower;  // 0xBC8(0x4)
	char pad_3020_1 : 7;  // 0xBCC(0x1)
	bool _shouldShortCast : 1;  // 0xBCC(0x1)
	char pad_3021[15];  // 0xBCD(0xF)
	float _minFishRecoveryTime;  // 0xBDC(0x4)
	float _maxFishRecoveryTime;  // 0xBE0(0x4)
	float _minFishStaminaDrainTime;  // 0xBE4(0x4)
	float _maxFishStaminaDrainTime;  // 0xBE8(0x4)
	char pad_3052_1 : 7;  // 0xBEC(0x1)
	bool _randomFishDrainAndRecovery : 1;  // 0xBEC(0x1)
	char pad_3053[7];  // 0xBED(0x7)
	char pad_3060_1 : 7;  // 0xBF4(0x1)
	bool _isFastReeling : 1;  // 0xBF4(0x1)
	char pad_3061[43];  // 0xBF5(0x2B)

	void Server_SwapAttachments(struct AFishingAttachment* oldAttachment, struct AFishingAttachment* newAttachment); // Function ConZ.FishingRod.Server_SwapAttachments
	void Server_SpawnCaughtFish(AActor* caughtFishClass, uint8_t  FishSpecies, float caughtFishMass, float caughtFishSize); // Function ConZ.FishingRod.Server_SpawnCaughtFish
	void Server_SetShouldShortCast(bool Value); // Function ConZ.FishingRod.Server_SetShouldShortCast
	void Server_SetFishingState(uint8_t  fishingState); // Function ConZ.FishingRod.Server_SetFishingState
	void Server_SetCastPower(float Value); // Function ConZ.FishingRod.Server_SetCastPower
	void Server_SendState(float DeltaTime, struct FRigidBodyState State, float reelingAmount, bool isFastReeling); // Function ConZ.FishingRod.Server_SendState
	void Server_ResetAttachments(); // Function ConZ.FishingRod.Server_ResetAttachments
	void Server_RemoveAttachment(struct AFishingAttachment* Attachment); // Function ConZ.FishingRod.Server_RemoveAttachment
	void Server_ReleaseCastingObject(struct FVector Location, struct FVector Direction, float castingPower, uint8_t  nextState); // Function ConZ.FishingRod.Server_ReleaseCastingObject
	void Server_OnWireBreak(); // Function ConZ.FishingRod.Server_OnWireBreak
	void Server_OnLeaveActiveFishingState(); // Function ConZ.FishingRod.Server_OnLeaveActiveFishingState
	void Server_OnEnterActiveFishingState(); // Function ConZ.FishingRod.Server_OnEnterActiveFishingState
	void Server_InitiateCast(); // Function ConZ.FishingRod.Server_InitiateCast
	void Server_HookFish(); // Function ConZ.FishingRod.Server_HookFish
	void Server_EnterTrophyState(); // Function ConZ.FishingRod.Server_EnterTrophyState
	void Server_CleanupTrophyState(bool keptFish); // Function ConZ.FishingRod.Server_CleanupTrophyState
	void Server_CheckIfFishBitBait(struct FVector Location); // Function ConZ.FishingRod.Server_CheckIfFishBitBait
	void Server_AddAttachment(struct AFishingAttachment* Attachment); // Function ConZ.FishingRod.Server_AddAttachment
	void RemoveAttachmentLocal(struct AFishingAttachment* Attachment); // Function ConZ.FishingRod.RemoveAttachmentLocal
	void RemoveAttachment(struct AFishingAttachment* Attachment); // Function ConZ.FishingRod.RemoveAttachment
	void OnRep_MinigameTrophy(); // Function ConZ.FishingRod.OnRep_MinigameTrophy
	void OnRep_MinigameItem(); // Function ConZ.FishingRod.OnRep_MinigameItem
	void OnRep_FishingAttachmentsReplicated(); // Function ConZ.FishingRod.OnRep_FishingAttachmentsReplicated
	void OnReleaseFishClicked(); // Function ConZ.FishingRod.OnReleaseFishClicked
	void OnKeepFishClicked(); // Function ConZ.FishingRod.OnKeepFishClicked
	void OnFishingActionAnimNotify(uint8_t  notifyType); // Function ConZ.FishingRod.OnFishingActionAnimNotify
	void NetMulticast_SetHookBitten(bool Value, struct UFishSpeciesData* speciesData); // Function ConZ.FishingRod.NetMulticast_SetHookBitten
	void NetMulticast_ResetAttachments(); // Function ConZ.FishingRod.NetMulticast_ResetAttachments
	void NetMulticast_ReleaseCastingObject(struct FVector Location, struct FVector Direction, float castingPower, uint8_t  nextState); // Function ConZ.FishingRod.NetMulticast_ReleaseCastingObject
	void NetMulticast_OnWireBreak(); // Function ConZ.FishingRod.NetMulticast_OnWireBreak
	void NetMulticast_OnLeaveActiveFishingState(); // Function ConZ.FishingRod.NetMulticast_OnLeaveActiveFishingState
	void NetMulticast_OnEnterActiveFishingState(); // Function ConZ.FishingRod.NetMulticast_OnEnterActiveFishingState
	void NetMulticast_InitiateCast(); // Function ConZ.FishingRod.NetMulticast_InitiateCast
	void NetMulticast_HookFish(); // Function ConZ.FishingRod.NetMulticast_HookFish
	struct APrisoner* GetFishingRodOwner(); // Function ConZ.FishingRod.GetFishingRodOwner
	bool CanAddAttachment(struct AFishingAttachment* Attachment); // Function ConZ.FishingRod.CanAddAttachment
	void AttachmentRemovedSignature__DelegateSignature(struct AFishingRod* sender, struct AFishingAttachment* Attachment); // DelegateFunction ConZ.FishingRod.AttachmentRemovedSignature__DelegateSignature
	void AttachmentAddedSignature__DelegateSignature(struct AFishingRod* sender, struct AFishingAttachment* Attachment); // DelegateFunction ConZ.FishingRod.AttachmentAddedSignature__DelegateSignature
	void AddAttachmentLocal(struct AFishingAttachment* Attachment, bool attach); // Function ConZ.FishingRod.AddAttachmentLocal
	void AddAttachment(struct AFishingAttachment* Attachment, bool attach, bool removeExistingOnTheSameMountType); // Function ConZ.FishingRod.AddAttachment
}; 



// Class ConZ.FishingTrophyActor
// Size: 0x230(Inherited: 0x220) 
struct AFishingTrophyActor : public AActor
{
	struct USkeletalMeshComponent* _skeletalMeshComponent;  // 0x220(0x8)
	struct UStaticMeshComponent* _staticMeshComponent;  // 0x228(0x8)

}; 



// Class ConZ.FishingWireComponent
// Size: 0x760(Inherited: 0x710) 
struct UFishingWireComponent : public UVDRopeComponent
{
	char pad_1808[80];  // 0x710(0x50)

}; 



// Class ConZ.PrisonerBodyConditionCause_Sepsis
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodyConditionCause_Sepsis : public UPrisonerBodyConditionCause
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.FishingZoneIndicator
// Size: 0x240(Inherited: 0x220) 
struct AFishingZoneIndicator : public AActor
{
	struct USceneComponent* _sceneComponent;  // 0x220(0x8)
	struct UParticleSystemComponent* _fishIconParticles;  // 0x228(0x8)
	struct UParticleSystemComponent* _rippleParticles;  // 0x230(0x8)
	float _radius;  // 0x238(0x4)
	float _catchingChanceMultiplier;  // 0x23C(0x4)

	void OnRep_Radius(); // Function ConZ.FishingZoneIndicator.OnRep_Radius
}; 



// Class ConZ.PrisonerResponseIdle_NeedToDefecate
// Size: 0x98(Inherited: 0x98) 
struct UPrisonerResponseIdle_NeedToDefecate : public UPrisonerResponseIdle
{

}; 



// Class ConZ.FishSpeciesPreset
// Size: 0x40(Inherited: 0x30) 
struct UFishSpeciesPreset : public UDataAsset
{
	struct TArray<struct FFishSpawnData> FishSpawnData;  // 0x30(0x10)

}; 



// Class ConZ.InteractableInterface
// Size: 0x28(Inherited: 0x28) 
struct UInteractableInterface : public UInterface
{

	void OnHovered(struct APrisoner* Prisoner); // Function ConZ.InteractableInterface.OnHovered
	bool IsAbleToInteractWithItem(struct AItem* Item); // Function ConZ.InteractableInterface.IsAbleToInteractWithItem
	void InteractWithItem(struct APlayerController* PlayerController, struct AItem* Item, uint8_t  interactionType, struct FInteractionData& InteractionData); // Function ConZ.InteractableInterface.InteractWithItem
	bool Interactable_WantsHealthBarVisible(); // Function ConZ.InteractableInterface.Interactable_WantsHealthBarVisible
	void Interact(struct APrisoner* User, uint8_t  interactionType, struct FInteractionData& InteractionData); // Function ConZ.InteractableInterface.Interact
	uint8_t  GetStateForInteractionWithItem(struct AItem* Item); // Function ConZ.InteractableInterface.GetStateForInteractionWithItem
	struct TArray<struct FInteractionStruct> GetInteractionsWithItem(struct UObject* User, struct AItem* Item); // Function ConZ.InteractableInterface.GetInteractionsWithItem
	struct TArray<struct FInteractionStruct> GetInteractions(struct UObject* User, struct UObject* creator, struct FInteractionQueryParameters& Params); // Function ConZ.InteractableInterface.GetInteractions
	struct FText GetInteractionHint(struct UObject* User); // Function ConZ.InteractableInterface.GetInteractionHint
	struct FText GetInteractableName(struct UObject* User); // Function ConZ.InteractableInterface.GetInteractableName
	struct FInteractionStruct GetDefaultInteractionForPrisoner(struct APrisoner* Prisoner, struct FInteractionQueryParameters& Params); // Function ConZ.InteractableInterface.GetDefaultInteractionForPrisoner
	struct FInteractionStruct GetDefaultInteractionForDrone(struct ADrone* Drone, struct FInteractionQueryParameters& Params); // Function ConZ.InteractableInterface.GetDefaultInteractionForDrone
	bool CanInteract(struct APrisoner* User); // Function ConZ.InteractableInterface.CanInteract
}; 



// Class ConZ.Shark
// Size: 0x840(Inherited: 0x800) 
struct AShark : public ALargeAquaticAnimal
{
	struct UParticleSystem* _sharkBiteBloodPS;  // 0x800(0x8)
	struct UParticleSystemComponent* _sharkBiteBloodPSC;  // 0x808(0x8)
	float _biteParticlesScale;  // 0x810(0x4)
	struct FName _spawnBiteAttackParticlesSocketName;  // 0x814(0x8)
	char pad_2076[4];  // 0x81C(0x4)
	struct UParticleSystem* _onDeathPS;  // 0x820(0x8)
	struct UParticleSystemComponent* _onDeathPSC;  // 0x828(0x8)
	struct FName _onDeathParticlesSocketName;  // 0x830(0x8)
	char pad_2104[8];  // 0x838(0x8)

}; 



// Class ConZ.FlagAreaVisualizer
// Size: 0x230(Inherited: 0x220) 
struct AFlagAreaVisualizer : public AActor
{
	struct UStaticMeshComponent* _staticMeshComponent;  // 0x220(0x8)
	char pad_552[8];  // 0x228(0x8)

	void DestroyVisualizer(); // Function ConZ.FlagAreaVisualizer.DestroyVisualizer
}; 



// Class ConZ.FlagElementsExpansionItem
// Size: 0x920(Inherited: 0x910) 
struct AFlagElementsExpansionItem : public AItem
{
	int32_t _numberOfElements;  // 0x910(0x4)
	char pad_2324[12];  // 0x914(0xC)

}; 



// Class ConZ.ResistanceSkill
// Size: 0xC8(Inherited: 0xC8) 
struct UResistanceSkill : public UConstitutionSkill
{

}; 



// Class ConZ.Zombie2
// Size: 0xA50(Inherited: 0x7A0) 
struct AZombie2 : public AConZCharacter
{
	char pad_1952[24];  // 0x7A0(0x18)
	char pad_1976_1 : 7;  // 0x7B8(0x1)
	bool _enableBaseInteraction : 1;  // 0x7B8(0x1)
	char pad_1977[7];  // 0x7B9(0x7)
	struct UNavigationInvokerComponent* _navigationInvokerComponent;  // 0x7C0(0x8)
	struct UHitReactComponent* _hitReactComponent;  // 0x7C8(0x8)
	struct UBaseInteractionComponent* _baseInteractionComponent;  // 0x7D0(0x8)
	struct TArray<struct FZombieMeshVariation2> _meshVariations;  // 0x7D8(0x10)
	struct TArray<struct FZombieRelaxedStanceVariation2> _relaxedStanceVariations;  // 0x7E8(0x10)
	struct TArray<struct FZombieCombatStanceVariation2> _combatStanceVariations;  // 0x7F8(0x10)
	struct FZombieTurnMontageDescription _turnMontageDescriptions[4];  // 0x808(0xA0)
	struct UAnimMontage* _gettingUpMontage;  // 0x8A8(0x8)
	struct TArray<struct UAnimMontage*> _intimidateMontages;  // 0x8B0(0x10)
	struct TArray<struct FZombieAttackDescription> _attacks;  // 0x8C0(0x10)
	struct FGameplayTag _hitReactType;  // 0x8D0(0x8)
	float _explosionDamageMultiplier;  // 0x8D8(0x4)
	float _ragdollHitImpulseStrengthPerUnitDamage;  // 0x8DC(0x4)
	float _minDynamicMovementBaseSpeedForRagdoll;  // 0x8E0(0x4)
	float _eyeViewPointOffset;  // 0x8E4(0x4)
	struct FName _centralBone;  // 0x8E8(0x8)
	float _collisionDamageMultiplierPerBodyPart[c];  // 0x8F0(0x30)
	float _receivedDamageComboCooldown;  // 0x920(0x4)
	float _receivedMeleeHitComboCooldown;  // 0x924(0x4)
	float _inflictedMeleeHitComboCooldown;  // 0x928(0x4)
	float _minRagdollRecoveryTimeAfterKnockout;  // 0x92C(0x4)
	float _maxRagdollRecoveryTimeAfterKnockout;  // 0x930(0x4)
	float _minLandingImpactSpeedForDamage;  // 0x934(0x4)
	float _landingDamagePerImpactSpeed;  // 0x938(0x4)
	float _landingImpactSpeedForRagdoll;  // 0x93C(0x4)
	float _minRagdollRecoveryTimeAfterLanding;  // 0x940(0x4)
	float _maxRagdollRecoveryTimeAfterLanding;  // 0x944(0x4)
	struct ULandingEffects* _landingEffects;  // 0x948(0x8)
	char pad_2384_1 : 7;  // 0x950(0x1)
	bool _canEverBeSearched : 1;  // 0x950(0x1)
	char pad_2385_1 : 7;  // 0x951(0x1)
	bool _shouldGoToRagdollOnDeath : 1;  // 0x951(0x1)
	char pad_2386[6];  // 0x952(0x6)
	struct UParticleSystem* _deathParticles;  // 0x958(0x8)
	struct FTransform _deathParticlesRelativeTransform;  // 0x960(0x30)
	float _corpseSearchDuration;  // 0x990(0x4)
	float _corpseMaxLifeTimeInMinutes;  // 0x994(0x4)
	float _destroyCorpseTimerInterval;  // 0x998(0x4)
	float _minDistanceToPlayerPawnOrSpectatorToDestroyCorpse;  // 0x99C(0x4)
	uint32_t _packedZombieVariationIndices;  // 0x9A0(0x4)
	float _hitPoints;  // 0x9A4(0x4)
	float _inflictedMeleeDamageMultiplier;  // 0x9A8(0x4)
	float _health;  // 0x9AC(0x4)
	char pad_2480_1 : 7;  // 0x9B0(0x1)
	bool _isSearched : 1;  // 0x9B0(0x1)
	char pad_2481[1];  // 0x9B1(0x1)
	uint8_t  _stance;  // 0x9B2(0x1)
	char pad_2483[1];  // 0x9B3(0x1)
	struct TWeakObjectPtr<APawn> _foe;  // 0x9B4(0x8)
	char pad_2492[124];  // 0x9BC(0x7C)
	float _inflictedDamageMultiplierConfig;  // 0xA38(0x4)
	uint8_t  _fatalBodyPartHit;  // 0xA3C(0x1)
	char pad_2621[3];  // 0xA3D(0x3)
	float _drownDamageCycleLength;  // 0xA40(0x4)
	float _drownDamagePerCycle;  // 0xA44(0x4)
	char pad_2632[8];  // 0xA48(0x8)

	float StartAttack(struct APawn* foe); // Function ConZ.Zombie2.StartAttack
	void SetStance(uint8_t  Value); // Function ConZ.Zombie2.SetStance
	void SetFoe(struct APawn* Value); // Function ConZ.Zombie2.SetFoe
	void Server_StartAttack(int32_t attackDescriptionIndex); // Function ConZ.Zombie2.Server_StartAttack
	void Server_SetStance(uint8_t  Value); // Function ConZ.Zombie2.Server_SetStance
	void Server_PlayTurnMontage(uint8_t  turnMontage, float turnAngle); // Function ConZ.Zombie2.Server_PlayTurnMontage
	void Server_PlayMontage(struct UAnimMontage* Montage); // Function ConZ.Zombie2.Server_PlayMontage
	void RecoverFromRagdoll(); // Function ConZ.Zombie2.RecoverFromRagdoll
	void OnRep_Stance(uint8_t  oldValue); // Function ConZ.Zombie2.OnRep_Stance
	void OnRep_IsSearched(bool oldValue); // Function ConZ.Zombie2.OnRep_IsSearched
	void OnRep_Health(float oldValue); // Function ConZ.Zombie2.OnRep_Health
	void NetMulticast_StartAttack(int32_t attackDescriptionIndex); // Function ConZ.Zombie2.NetMulticast_StartAttack
	void NetMulticast_PlayTurnMontage(uint8_t  turnMontage, float turnAngle); // Function ConZ.Zombie2.NetMulticast_PlayTurnMontage
	void NetMulticast_PlaySound(struct UAkAudioEvent* Sound); // Function ConZ.Zombie2.NetMulticast_PlaySound
	void NetMulticast_PlayMontage(struct UAnimMontage* Montage); // Function ConZ.Zombie2.NetMulticast_PlayMontage
	void NetMulticast_HandleLanded(struct FVector ImpactVelocity, struct FHitResult HitResult); // Function ConZ.Zombie2.NetMulticast_HandleLanded
	bool IsRagdollAtRest(); // Function ConZ.Zombie2.IsRagdollAtRest
	bool IsInRagdoll(); // Function ConZ.Zombie2.IsInRagdoll
	bool IsAttacking(); // Function ConZ.Zombie2.IsAttacking
	void GoToRagdoll(struct FZombieRagdollAutoRecovery& autoRecovery); // Function ConZ.Zombie2.GoToRagdoll
	struct UZombieSoundComponent2* GetZombieSoundComponent(); // Function ConZ.Zombie2.GetZombieSoundComponent
	struct UZombieMovementComponent2* GetZombieMovement(); // Function ConZ.Zombie2.GetZombieMovement
	uint8_t  GetStance(); // Function ConZ.Zombie2.GetStance
	float GetMaxHealth(); // Function ConZ.Zombie2.GetMaxHealth
	struct UHitReactComponent* GetHitReactComponent(); // Function ConZ.Zombie2.GetHitReactComponent
	float GetHealthRatio(); // Function ConZ.Zombie2.GetHealthRatio
	float GetHealth(); // Function ConZ.Zombie2.GetHealth
	struct APawn* GetFoe(); // Function ConZ.Zombie2.GetFoe
	struct FRotator GetAimOffset(); // Function ConZ.Zombie2.GetAimOffset
	bool CanStartAttack(); // Function ConZ.Zombie2.CanStartAttack
	void BaseInteractionComponent_OnBaseInteractionEvent(struct UBaseInteractionComponent* Component, struct FBaseInteractionEvent& BaseInteractionEvent); // Function ConZ.Zombie2.BaseInteractionComponent_OnBaseInteractionEvent
}; 



// Class ConZ.IgnitableItemComponent
// Size: 0x1A0(Inherited: 0xC8) 
struct UIgnitableItemComponent : public UItemComponent
{
	char pad_200_1 : 7;  // 0xC8(0x1)
	bool _canBurnUnderwater : 1;  // 0xC8(0x1)
	char pad_201_1 : 7;  // 0xC9(0x1)
	bool _canBeIgnitedUnderwater : 1;  // 0xC9(0x1)
	char pad_202_1 : 7;  // 0xCA(0x1)
	bool _canBeIgnitedWet : 1;  // 0xCA(0x1)
	char pad_203_1 : 7;  // 0xCB(0x1)
	bool _canBeIgnitedOnGround : 1;  // 0xCB(0x1)
	char pad_204_1 : 7;  // 0xCC(0x1)
	bool _canBePutOut : 1;  // 0xCC(0x1)
	char pad_205[3];  // 0xCD(0x3)
	float _autoDestroyTimeOnUse;  // 0xD0(0x4)
	struct FName _effectsSocket;  // 0xD4(0x8)
	char pad_220[4];  // 0xDC(0x4)
	struct UAnimMontage* _prisonerIgniteMontage;  // 0xE0(0x8)
	struct UAkAudioEvent* _ignitionAudioEvent;  // 0xE8(0x8)
	struct UAkAudioEvent* _extinguishAudioEvent;  // 0xF0(0x8)
	struct UParticleSystem* _ignitionParticle;  // 0xF8(0x8)
	struct UParticleSystem* _burningParticle;  // 0x100(0x8)
	struct UParticleSystem* _extinguishParticle;  // 0x108(0x8)
	struct UNiagaraSystem* _ignitionNiagaraParticle;  // 0x110(0x8)
	struct UNiagaraSystem* _burningNiagaraParticle;  // 0x118(0x8)
	struct UNiagaraSystem* _extinguishNiagaraParticle;  // 0x120(0x8)
	float _ignitionParticleDuration;  // 0x128(0x4)
	float _particlesLoopDuration;  // 0x12C(0x4)
	float _extinguishParticleDuration;  // 0x130(0x4)
	char pad_308[1];  // 0x134(0x1)
	uint8_t  _repState;  // 0x135(0x1)
	char pad_310_1 : 7;  // 0x136(0x1)
	bool _wasEverIgnited : 1;  // 0x136(0x1)
	char pad_311[9];  // 0x137(0x9)
	float _particlesLoopStartBlend;  // 0x140(0x4)
	float _noiseLoudnessWhileIgnited;  // 0x144(0x4)
	float _noiseLoudnessUpdateFrequencyPerHour;  // 0x148(0x4)
	struct FName _burningNoiseTag;  // 0x14C(0x8)
	char pad_340[4];  // 0x154(0x4)
	struct TArray<struct FIgnitableItemIgnitionRequirements> _ignitionRequirements;  // 0x158(0x10)
	float _ignitionDurationOnTheGround;  // 0x168(0x4)
	char pad_364_1 : 7;  // 0x16C(0x1)
	bool _shouldControlUsage : 1;  // 0x16C(0x1)
	char pad_365[51];  // 0x16D(0x33)

	void OnRep_WasEverIgnited(); // Function ConZ.IgnitableItemComponent.OnRep_WasEverIgnited
	void OnRep_State(); // Function ConZ.IgnitableItemComponent.OnRep_State
}; 



// Class ConZ.FlareTrapItem
// Size: 0xAB0(Inherited: 0xA60) 
struct AFlareTrapItem : public ATrapItem
{
	struct UAkAudioEvent* _triggerSound;  // 0xA60(0x8)
	float _detonationDelay;  // 0xA68(0x4)
	char pad_2668[4];  // 0xA6C(0x4)
	AProjectile* _projectileClass;  // 0xA70(0x8)
	struct FVector _projectileLocation;  // 0xA78(0xC)
	struct FRotator _projectileRotation;  // 0xA84(0xC)
	float _projectileMuzzleVelocity;  // 0xA90(0x4)
	float _projectileLifetime;  // 0xA94(0x4)
	char pad_2712[24];  // 0xA98(0x18)

	void Detonate(); // Function ConZ.FlareTrapItem.Detonate
}; 



// Class ConZ.PrisonerMetabolismUIDataImpl
// Size: 0x3C8(Inherited: 0x100) 
struct UPrisonerMetabolismUIDataImpl : public UPrisonerMetabolismUIData
{
	char pad_256[712];  // 0x100(0x2C8)

}; 



// Class ConZ.GrenadeItem
// Size: 0x9E0(Inherited: 0x910) 
struct AGrenadeItem : public AItem
{
	float _explosionDamage;  // 0x910(0x4)
	float _explosionOuterRadius;  // 0x914(0x4)
	float _explosionInnerRadius;  // 0x918(0x4)
	float _explosionFalloff;  // 0x91C(0x4)
	float _explosionDelay;  // 0x920(0x4)
	float _explosionForce;  // 0x924(0x4)
	struct FTargetTypeDamageMultiplier _explosionTargetTypeMultiplier;  // 0x928(0x10)
	float _explosionImpulse_OBSOLETE;  // 0x938(0x4)
	char pad_2364[12];  // 0x93C(0xC)
	struct UParticleSystem* _explosionParticle;  // 0x948(0x8)
	UMatineeCameraShake* _explosionCameraShakeClass;  // 0x950(0x8)
	float _hearingDamageRadius;  // 0x958(0x4)
	char pad_2396[4];  // 0x95C(0x4)
	struct UAkAudioEvent* ExplosionAudioEvent;  // 0x960(0x8)
	struct UAkAudioEvent* _explosionAudioEvent;  // 0x968(0x8)
	struct UAkAudioEvent* _pullPinAudioEvent;  // 0x970(0x8)
	struct USkeletalMeshComponent* _skeletalMesh;  // 0x978(0x8)
	struct UAnimMontage* _grenadeLongThrowMontage;  // 0x980(0x8)
	struct UAnimMontage* _grenadeLongThrowLoopMontage;  // 0x988(0x8)
	struct UAnimMontage* _grenadeShortThrowMontage;  // 0x990(0x8)
	struct UAnimMontage* _grenadeThrowbackMontage;  // 0x998(0x8)
	struct FName _leverReleasedSocketName;  // 0x9A0(0x8)
	struct UParticleSystem* _leverReleasedPS;  // 0x9A8(0x8)
	float _netCullDistanceSquaredMeters;  // 0x9B0(0x4)
	char pad_2484_1 : 7;  // 0x9B4(0x1)
	bool _pinPulled : 1;  // 0x9B4(0x1)
	char pad_2485[3];  // 0x9B5(0x3)
	float _pinPullingDurationOnTheGround;  // 0x9B8(0x4)
	char pad_2492[4];  // 0x9BC(0x4)
	struct UTakeInHandsAssetData* _takeInHandsWhenPinIsPulledAssetData;  // 0x9C0(0x8)
	char pad_2504[24];  // 0x9C8(0x18)

	void Server_PullPin(); // Function ConZ.GrenadeItem.Server_PullPin
	void Multicast_PlayPinPulledAudio(); // Function ConZ.GrenadeItem.Multicast_PlayPinPulledAudio
	void Multicast_PlayEffects(struct FVector zeroBasedLocation, struct FRotator Rotation); // Function ConZ.GrenadeItem.Multicast_PlayEffects
	struct UAnimMontage* GetArmingMontage(uint8_t  throwingType); // Function ConZ.GrenadeItem.GetArmingMontage
}; 



// Class ConZ.FlashbangItemEffects
// Size: 0x270(Inherited: 0x220) 
struct AFlashbangItemEffects : public AActor
{
	struct UParticleSystem* _explosionParticles;  // 0x220(0x8)
	UMatineeCameraShake* _explosionCameraShakeClass;  // 0x228(0x8)
	struct UAkAudioEvent* _explosionAudioEvent;  // 0x230(0x8)
	struct UAkAudioEvent* _startStunnedSoundEffectsAudioEvent;  // 0x238(0x8)
	struct UAkAudioEvent* _stopStunnedSoundEffectsAudioEvent;  // 0x240(0x8)
	float _minFlashbangDurationToStartStunnedSoundEffects;  // 0x248(0x4)
	float _fullFlashDuration;  // 0x24C(0x4)
	float _flashFadeOutDuration;  // 0x250(0x4)
	float _flashRadius;  // 0x254(0x4)
	float _flashLineTraceDistance;  // 0x258(0x4)
	char pad_604[20];  // 0x25C(0x14)

}; 



// Class ConZ.FloatingWidgetCanvas
// Size: 0x140(Inherited: 0x130) 
struct UFloatingWidgetCanvas : public UCanvasPanel
{
	char pad_304[16];  // 0x130(0x10)

}; 



// Class ConZ.PrisonerBodySymptom_StomachFullness
// Size: 0x1C8(Inherited: 0xB8) 
struct UPrisonerBodySymptom_StomachFullness : public UPrisonerBodySymptom
{
	struct FRuntimeFloatCurve _severityVsStomachFullness;  // 0xB8(0x88)
	struct FRuntimeFloatCurve _eatingSpeedModifierVsSeverity;  // 0x140(0x88)

}; 



// Class ConZ.ScopeableItemComponent
// Size: 0x120(Inherited: 0xC8) 
struct UScopeableItemComponent : public UItemComponent
{
	struct TArray<struct FScopeZoomLevelSettings> _zoomLevelSettings;  // 0xC8(0x10)
	struct UTexture2D* _scopingOverlayTexture;  // 0xD8(0x8)
	float _scopingStartDelay;  // 0xE0(0x4)
	float _scopingStopDelay;  // 0xE4(0x4)
	struct UAnimMontage* _montageStandingFP;  // 0xE8(0x8)
	struct UAnimMontage* _montageCrouchingFP;  // 0xF0(0x8)
	struct UAnimMontage* _montageProneFP;  // 0xF8(0x8)
	struct UAnimMontage* _montageStandingTP;  // 0x100(0x8)
	struct UAnimMontage* _montageCrouchingTP;  // 0x108(0x8)
	struct UAnimMontage* _montageProneTP;  // 0x110(0x8)
	int32_t _currentZoomLevel;  // 0x118(0x4)
	char pad_284[4];  // 0x11C(0x4)

}; 



// Class ConZ.FocusableWidgetInterface
// Size: 0x28(Inherited: 0x28) 
struct UFocusableWidgetInterface : public UInterface
{

}; 



// Class ConZ.FoliageInstancedBush
// Size: 0x6B0(Inherited: 0x6B0) 
struct UFoliageInstancedBush : public UFoliageInstancedStaticMeshComponent
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomUIData
// Size: 0x90(Inherited: 0x38) 
struct UPrisonerBodyConditionOrSymptomUIData : public UPrisonerBodyEffectUIData
{
	char pad_56_1 : 7;  // 0x38(0x1)
	bool _isVisibleByDefault : 1;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)
	struct FText _name;  // 0x40(0x18)
	struct FText _description;  // 0x58(0x18)
	char pad_112[16];  // 0x70(0x10)
	struct TArray<struct UPrisonerBodyConditionOrSymptomSideEffectUIData*> _sideEffectsUIData;  // 0x80(0x10)

}; 



// Class ConZ.FoodItemState
// Size: 0x110(Inherited: 0x100) 
struct UFoodItemState : public UItemState
{
	float Temperature;  // 0x100(0x4)
	float CookedAmount;  // 0x104(0x4)
	float CookedQuality;  // 0x108(0x4)
	char pad_268_1 : 7;  // 0x10C(0x1)
	bool ItemOpened : 1;  // 0x10C(0x1)
	char pad_269[3];  // 0x10D(0x3)

}; 



// Class ConZ.ModularTooltipElementData_ValueWithModifier_Small
// Size: 0x98(Inherited: 0x98) 
struct UModularTooltipElementData_ValueWithModifier_Small : public UModularTooltipElementData_ValueWithModifier
{

}; 



// Class ConZ.ForceUnlockItemTag
// Size: 0x30(Inherited: 0x30) 
struct UForceUnlockItemTag : public UBaseItemTag
{

}; 



// Class ConZ.FortificationComponent
// Size: 0x520(Inherited: 0x4E0) 
struct UFortificationComponent : public UStaticMeshComponent
{
	char pad_1248[8];  // 0x4E0(0x8)
	struct UParticleSystem* _destructionParticles;  // 0x4E8(0x8)
	struct UAkAudioEvent* _destructionAudio;  // 0x4F0(0x8)
	struct ABuilding* _parentBuilding;  // 0x4F8(0x8)
	int32_t _markerIndex;  // 0x500(0x4)
	float _health;  // 0x504(0x4)
	float _collisionEnergyResistance;  // 0x508(0x4)
	float _explosionResistance;  // 0x50C(0x4)
	float _hardness;  // 0x510(0x4)
	char pad_1300[12];  // 0x514(0xC)

}; 



// Class ConZ.FundsOverview
// Size: 0x288(Inherited: 0x260) 
struct UFundsOverview : public UUserWidget
{
	struct UTextBlock* _famePointsText;  // 0x260(0x8)
	struct UTextBlock* _rankText;  // 0x268(0x8)
	struct UTextBlock* _accountBalanceText;  // 0x270(0x8)
	struct UTextBlock* _goldBalanceText;  // 0x278(0x8)
	char pad_640[8];  // 0x280(0x8)

}; 



// Class ConZ.PrisonerActionAddWeaponAttachmentDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionAddWeaponAttachmentDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.Message
// Size: 0x278(Inherited: 0x260) 
struct UMessage : public UUserWidget
{
	struct UTextBlock* _text;  // 0x260(0x8)
	char pad_616[16];  // 0x268(0x10)

}; 



// Class ConZ.GameEventBorder
// Size: 0x290(Inherited: 0x220) 
struct AGameEventBorder : public AActor
{
	struct UStaticMeshComponent* Mesh;  // 0x220(0x8)
	struct UMaterialInstanceDynamic* Material;  // 0x228(0x8)
	struct UChildActorComponent* SoundSpline;  // 0x230(0x8)
	struct UAkAudioEvent* AudioEvent;  // 0x238(0x8)
	uint8_t  _state;  // 0x240(0x1)
	char pad_577[3];  // 0x241(0x3)
	float _desiredRadius;  // 0x244(0x4)
	char pad_584[4];  // 0x248(0x4)
	struct FVector _desiredOffset;  // 0x24C(0xC)
	char pad_600[12];  // 0x258(0xC)
	float _desiredHeat;  // 0x264(0x4)
	char pad_616[4];  // 0x268(0x4)
	float _radiusChangeSpeed;  // 0x26C(0x4)
	float _offsetChangeSpeed;  // 0x270(0x4)
	float _heatChangeSpeed;  // 0x274(0x4)
	char pad_632_1 : 7;  // 0x278(0x1)
	bool _collisionEnabled : 1;  // 0x278(0x1)
	char pad_633_1 : 7;  // 0x279(0x1)
	bool _blockPawns : 1;  // 0x279(0x1)
	char pad_634[22];  // 0x27A(0x16)

	void SetEnablePawnCollision(bool Value); // Function ConZ.GameEventBorder.SetEnablePawnCollision
	void OnRep_Collision(); // Function ConZ.GameEventBorder.OnRep_Collision
	void Multicast_SetRadius(float Radius); // Function ConZ.GameEventBorder.Multicast_SetRadius
	void Multicast_SetOffset(struct FVector Offset); // Function ConZ.GameEventBorder.Multicast_SetOffset
	bool IsActive(); // Function ConZ.GameEventBorder.IsActive
	void HeatUpAndChangeArea(float Radius, struct FVector focus, float Duration, float heatUpDuration); // Function ConZ.GameEventBorder.HeatUpAndChangeArea
	uint8_t  GetState(); // Function ConZ.GameEventBorder.GetState
	float GetRadius(); // Function ConZ.GameEventBorder.GetRadius
	struct FVector GetOffset(); // Function ConZ.GameEventBorder.GetOffset
	struct FVector GetBorderCenter(); // Function ConZ.GameEventBorder.GetBorderCenter
	void ChangeState(uint8_t  State, float Duration); // Function ConZ.GameEventBorder.ChangeState
	void ChangeArea(float Radius, struct FVector focus, float Duration); // Function ConZ.GameEventBorder.ChangeArea
}; 



// Class ConZ.GameEventLeaderboardWidget
// Size: 0x290(Inherited: 0x260) 
struct UGameEventLeaderboardWidget : public UUserWidget
{
	struct TArray<struct FEventsRankingStatsItem> TopPlayersStats;  // 0x260(0x10)
	struct TArray<struct FEventsRankingStatsItem> PlayerRankingStats;  // 0x270(0x10)
	int32_t playerRank;  // 0x280(0x4)
	char pad_644[12];  // 0x284(0xC)

	void UpdateTopPlayers(); // Function ConZ.GameEventLeaderboardWidget.UpdateTopPlayers
	void UpdatePlayerRanking(); // Function ConZ.GameEventLeaderboardWidget.UpdatePlayerRanking
	void RequestTopPlayers(int32_t Count, uint8_t  orderByField, uint8_t  sortOrder); // Function ConZ.GameEventLeaderboardWidget.RequestTopPlayers
	void RequestPlayerRanking(int32_t Pad, uint8_t  orderByField, uint8_t  sortOrder); // Function ConZ.GameEventLeaderboardWidget.RequestPlayerRanking
	void CancelReqeusts(); // Function ConZ.GameEventLeaderboardWidget.CancelReqeusts
}; 



// Class ConZ.PrisonerBodyCondition_InhalationPoisoning
// Size: 0x228(Inherited: 0xC0) 
struct UPrisonerBodyCondition_InhalationPoisoning : public UPrisonerBodyCondition
{
	struct FRuntimeFloatCurve _severityVsInhalableSubstanceAmountRatio;  // 0xC0(0x88)
	float _inhalableSubstanceAmountAtRecoveryStart;  // 0x148(0x4)
	uint8_t  _state;  // 0x14C(0x1)
	char pad_333[7];  // 0x14D(0x7)
	float _inhalableSubstanceAmount;  // 0x154(0x4)
	struct FRuntimeFloatCurve _inhalableSubstanceMaxAmountVsConstitutionRatio;  // 0x158(0x88)
	float _baseInhalableSubstanceDiscardRate;  // 0x1E0(0x4)
	char pad_484[4];  // 0x1E4(0x4)
	struct FPrisonerBodyBoneGroupsVsSeverity _affectedBodyBoneGroupsVsSeverity;  // 0x1E8(0x10)
	struct FPrisonerBodyMuscleGroupsVsSeverity _affectedBodyMuscleGroupsVsSeverity;  // 0x1F8(0x10)
	struct FPrisonerBodyOrganGroupsVsSeverity _affectedBodyOrganGroupsVsSeverity;  // 0x208(0x10)
	char pad_536[16];  // 0x218(0x10)

}; 



// Class ConZ.GameEventManager
// Size: 0x260(Inherited: 0x220) 
struct AGameEventManager : public AActor
{
	int32_t EventHistoryLimit;  // 0x220(0x4)
	char pad_548[4];  // 0x224(0x4)
	struct TArray<struct AGameEventBase*> _announcedGameEvents;  // 0x228(0x10)
	struct TArray<struct AGameEventBase*> _currentGameEvents;  // 0x238(0x10)
	struct TArray<struct AGameEventBase*> _endedGameEvents;  // 0x248(0x10)
	char pad_600[8];  // 0x258(0x8)

	void OnRep_EndedGameEvents(); // Function ConZ.GameEventManager.OnRep_EndedGameEvents
	void OnRep_CurrentGameEvents(); // Function ConZ.GameEventManager.OnRep_CurrentGameEvents
	void OnRep_AnnouncedGameEvents(); // Function ConZ.GameEventManager.OnRep_AnnouncedGameEvents
}; 



// Class ConZ.GameEventParticipantStatsWidget
// Size: 0x280(Inherited: 0x260) 
struct UGameEventParticipantStatsWidget : public UUserWidget
{
	struct AGameEventBase* _gameEvent;  // 0x260(0x8)
	int32_t _index;  // 0x268(0x4)
	char pad_620[4];  // 0x26C(0x4)
	struct UGameEventScoreboardWidget* _scoreboard;  // 0x270(0x8)
	int32_t _teamIndex;  // 0x278(0x4)
	char pad_636[4];  // 0x27C(0x4)

	void UpdateStats(); // Function ConZ.GameEventParticipantStatsWidget.UpdateStats
	void UpdateColours(); // Function ConZ.GameEventParticipantStatsWidget.UpdateColours
	void SetTeamIndex(int32_t Index); // Function ConZ.GameEventParticipantStatsWidget.SetTeamIndex
	void SetColours(struct FGameEventTeamColours colours); // Function ConZ.GameEventParticipantStatsWidget.SetColours
	bool IsValid(); // Function ConZ.GameEventParticipantStatsWidget.IsValid
	int32_t GetTeamIndex(); // Function ConZ.GameEventParticipantStatsWidget.GetTeamIndex
	struct UGameEventScoreboardWidget* GetScoreboard(); // Function ConZ.GameEventParticipantStatsWidget.GetScoreboard
	int32_t GetIndex(); // Function ConZ.GameEventParticipantStatsWidget.GetIndex
	struct AGameEventBase* GetGameEvent(); // Function ConZ.GameEventParticipantStatsWidget.GetGameEvent
	void FillLabels(); // Function ConZ.GameEventParticipantStatsWidget.FillLabels
}; 



// Class ConZ.MessageContainer
// Size: 0x270(Inherited: 0x260) 
struct UMessageContainer : public UUserWidget
{
	struct UVerticalBox* _messages;  // 0x260(0x8)
	UMessage* _messageClass;  // 0x268(0x8)

}; 



// Class ConZ.GameEventScoreboardWidget
// Size: 0x298(Inherited: 0x260) 
struct UGameEventScoreboardWidget : public UUserWidget
{
	UGameEventRoundInfoWidget* RoundInfoWidgetClass;  // 0x260(0x8)
	UGameEventTeamHeaderWidget* TeamHeaderWidgetClass;  // 0x268(0x8)
	UGameEventParticipantStatsWidget* StatWidgetClass;  // 0x270(0x8)
	struct TArray<struct UGameEventParticipantStatsWidget*> StatWidgets;  // 0x278(0x10)
	struct AGameEventBase* _gameEvent;  // 0x288(0x8)
	int32_t _selected;  // 0x290(0x4)
	char pad_660[4];  // 0x294(0x4)

	void SetSelectedIndex(int32_t Index); // Function ConZ.GameEventScoreboardWidget.SetSelectedIndex
	void OnUpdate(); // Function ConZ.GameEventScoreboardWidget.OnUpdate
	void InitializeScoreboard(); // Function ConZ.GameEventScoreboardWidget.InitializeScoreboard
	int32_t GetSelectedIndex(); // Function ConZ.GameEventScoreboardWidget.GetSelectedIndex
	struct UGameEventScoreboardWidget* CreateMini(struct AGameEventBase* gameEvent, UGameEventParticipantStatsWidget* statClass, UGameEventTeamHeaderWidget* teamHeaderClass); // Function ConZ.GameEventScoreboardWidget.CreateMini
	struct UGameEventScoreboardWidget* Create(struct AGameEventBase* gameEvent, UGameEventRoundInfoWidget* roundInfoClass, UGameEventTeamHeaderWidget* teamHeaderClass, UGameEventParticipantStatsWidget* statClass); // Function ConZ.GameEventScoreboardWidget.Create
}; 



// Class ConZ.HandsHolstersWidget2
// Size: 0x320(Inherited: 0x260) 
struct UHandsHolstersWidget2 : public UInventoryContainerWidget2
{
	struct UTextBlock* _slotTypeText;  // 0x260(0x8)
	struct UInventoryContainer2D* _container;  // 0x268(0x8)
	struct UInventoryContainerHandsHolsters* _handsHolstersContainer;  // 0x270(0x8)
	struct UTextBlock* _nameText;  // 0x278(0x8)
	struct UInventorySlotUserWidget* _itemSlotWidget;  // 0x280(0x8)
	struct UItemWidget2* _itemWidget;  // 0x288(0x8)
	struct UTextBlock* _price;  // 0x290(0x8)
	struct UOverlay* _priceOverlay;  // 0x298(0x8)
	struct UExpandableContainer* _expandableContainer;  // 0x2A0(0x8)
	struct UGridPanel* _inventoryGrid;  // 0x2A8(0x8)
	struct UInventorySlotUserWidget* _attachmentSlotWidget;  // 0x2B0(0x8)
	struct TArray<struct UInventorySlotUserWidget*> _slotsWidgets;  // 0x2B8(0x10)
	struct TArray<struct UItemWidget2*> _attachmentWidgets;  // 0x2C8(0x10)
	uint8_t  _type;  // 0x2D8(0x1)
	char pad_729[7];  // 0x2D9(0x7)
	struct TScriptInterface<IInventoryNode> _item;  // 0x2E0(0x10)
	struct FText _slotName;  // 0x2F0(0x18)
	char pad_776[24];  // 0x308(0x18)

	void OnFishingAttachmentRemoved(struct AFishingRod* FishingRod, struct AFishingAttachment* Attachment); // Function ConZ.HandsHolstersWidget2.OnFishingAttachmentRemoved
	void OnFishingAttachmentDestroyed(struct AActor* Attachment); // Function ConZ.HandsHolstersWidget2.OnFishingAttachmentDestroyed
	void OnFishingAttachmentAdded(struct AFishingRod* FishingRod, struct AFishingAttachment* Attachment); // Function ConZ.HandsHolstersWidget2.OnFishingAttachmentAdded
	void OnAttachmentRemoved(struct AWeapon* Weapon, struct AWeaponAttachment* Attachment); // Function ConZ.HandsHolstersWidget2.OnAttachmentRemoved
	void OnAttachmentDestroyed(struct AActor* Attachment); // Function ConZ.HandsHolstersWidget2.OnAttachmentDestroyed
	void OnAttachmentAdded(struct AWeapon* Weapon, struct AWeaponAttachment* Attachment); // Function ConZ.HandsHolstersWidget2.OnAttachmentAdded
}; 



// Class ConZ.GameEventTeamHeaderWidget
// Size: 0x260(Inherited: 0x260) 
struct UGameEventTeamHeaderWidget : public UUserWidget
{

	void SetGameEvent(struct AGameEventBase* gameEvent); // Function ConZ.GameEventTeamHeaderWidget.SetGameEvent
	void ClearWinCounters(); // Function ConZ.GameEventTeamHeaderWidget.ClearWinCounters
	void AddWinCounter(); // Function ConZ.GameEventTeamHeaderWidget.AddWinCounter
}; 



// Class ConZ.PrisonerBodyEffect
// Size: 0x40(Inherited: 0x28) 
struct UPrisonerBodyEffect : public UObject
{
	int32_t _id;  // 0x28(0x4)
	char pad_44[8];  // 0x2C(0x8)
	float _tickInterval;  // 0x34(0x4)
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.GameResourceConsumptionData
// Size: 0xE8(Inherited: 0x28) 
struct UGameResourceConsumptionData : public UObject
{
	uint8_t  ConsumptionMethod;  // 0x28(0x1)
	char pad_41[3];  // 0x29(0x3)
	struct FGameplayTag ConsumptionDuration;  // 0x2C(0x8)
	struct FGameplayTag DigestionDuration;  // 0x34(0x8)
	float Density;  // 0x3C(0x4)
	float TotalCarbohydrate;  // 0x40(0x4)
	float Fiber;  // 0x44(0x4)
	float Starch;  // 0x48(0x4)
	float Sugars;  // 0x4C(0x4)
	float TotalFat;  // 0x50(0x4)
	float SaturatedFat;  // 0x54(0x4)
	float Protein;  // 0x58(0x4)
	float VitaminA;  // 0x5C(0x4)
	float VitaminC;  // 0x60(0x4)
	float VitaminD;  // 0x64(0x4)
	float VitaminE;  // 0x68(0x4)
	float VitaminK;  // 0x6C(0x4)
	float VitaminB1;  // 0x70(0x4)
	float VitaminB2;  // 0x74(0x4)
	float VitaminB3;  // 0x78(0x4)
	float VitaminB6;  // 0x7C(0x4)
	float VitaminB9;  // 0x80(0x4)
	float VitaminB12;  // 0x84(0x4)
	float VitaminB5;  // 0x88(0x4)
	float VitaminB4;  // 0x8C(0x4)
	float Calcium;  // 0x90(0x4)
	float Iron;  // 0x94(0x4)
	float Magnesium;  // 0x98(0x4)
	float Phosphorus;  // 0x9C(0x4)
	float Potassium;  // 0xA0(0x4)
	float Sodium;  // 0xA4(0x4)
	float Zinc;  // 0xA8(0x4)
	float Copper;  // 0xAC(0x4)
	float Manganese;  // 0xB0(0x4)
	float Selenium;  // 0xB4(0x4)
	float Alcohol;  // 0xB8(0x4)
	float Water;  // 0xBC(0x4)
	struct TArray<struct FGameResourceConsumptionDataForeignSubstance> ForeignSubstances;  // 0xC0(0x10)
	float DisgustAmountPerGramOfRawFood;  // 0xD0(0x4)
	char pad_212[4];  // 0xD4(0x4)
	struct TArray<struct UConsumableDigestionHandler*> DigestionHandlers;  // 0xD8(0x10)

}; 



// Class ConZ.UpdateableNotification
// Size: 0x30(Inherited: 0x30) 
struct UUpdateableNotification : public UBasicNotification
{

}; 



// Class ConZ.HeatSourceManager
// Size: 0x2A8(Inherited: 0x220) 
struct AHeatSourceManager : public AActor
{
	float MassOfAdditionalOxygenUsedPerGramOfFuelBurned;  // 0x220(0x4)
	char pad_548[132];  // 0x224(0x84)

}; 



// Class ConZ.GameResourceContainerEntityComponentSave
// Size: 0x40(Inherited: 0x28) 
struct UGameResourceContainerEntityComponentSave : public UObject
{
	UGameResourceType* ResourceType;  // 0x28(0x8)
	float ResourceAmount;  // 0x30(0x4)
	float ResourceUsageRate;  // 0x34(0x4)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool ResourceUsageEnabled : 1;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 



// Class ConZ.PrisonerBodySymptomCause_Pain
// Size: 0x40(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_Pain : public UPrisonerBodySymptomCause
{
	char pad_48[16];  // 0x30(0x10)

}; 



// Class ConZ.PrisonerBodyCondition_Knockout
// Size: 0xF0(Inherited: 0xC0) 
struct UPrisonerBodyCondition_Knockout : public UPrisonerBodyCondition
{
	struct FText _reason;  // 0xC0(0x18)
	float _duration;  // 0xD8(0x4)
	float _elapsedTime;  // 0xDC(0x4)
	UPrisonerBodySymptom_Unconsciousness* _unconsciousnessSymptomClass;  // 0xE0(0x8)
	struct UPrisonerBodySymptomCause_Unconsciousness* _unconsciousnessSymptomCause;  // 0xE8(0x8)

}; 



// Class ConZ.PrisonerActionVoicelineDescription
// Size: 0x60(Inherited: 0x38) 
struct UPrisonerActionVoicelineDescription : public UPrisonerActionDescription
{
	char pad_56[40];  // 0x38(0x28)

}; 



// Class ConZ.GameResourceContainerProxyRegistry
// Size: 0x150(Inherited: 0xB0) 
struct UGameResourceContainerProxyRegistry : public UActorComponent
{
	char pad_176[160];  // 0xB0(0xA0)

}; 



// Class ConZ.GameResourceContainerProxyForInfiniteResource
// Size: 0x88(Inherited: 0x28) 
struct UGameResourceContainerProxyForInfiniteResource : public UObject
{
	char pad_40[8];  // 0x28(0x8)
	UGameResourceType* _resourceType;  // 0x30(0x8)
	char pad_56[64];  // 0x38(0x40)
	struct TArray<struct UBaseItemTag*> _requiredItemTagsForFilling;  // 0x78(0x10)

}; 



// Class ConZ.HitReactLandingParams
// Size: 0x60(Inherited: 0x30) 
struct UHitReactLandingParams : public UDataAsset
{
	struct UAnimMontage* MontageToPlay;  // 0x30(0x8)
	float RegainControlDurationMultiplier;  // 0x38(0x4)
	struct FFloatInterval RagdollImpactSpeedRange;  // 0x3C(0x8)
	struct FFloatInterval RagdollDuration;  // 0x44(0x8)
	char pad_76[4];  // 0x4C(0x4)
	struct UCurveFloat* LandingDamageCurve;  // 0x50(0x8)
	struct UCurveFloat* WaterImpactDamageCurve;  // 0x58(0x8)

}; 



// Class ConZ.PrisonerUIDebugDataRequest
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerUIDebugDataRequest : public UPlayerRpcChannelServerRequest
{

}; 



// Class ConZ.GameResourceType_Liquid
// Size: 0xA0(Inherited: 0xA0) 
struct UGameResourceType_Liquid : public UGameResourceType
{

}; 



// Class ConZ.GameResourceType_Alcohol
// Size: 0xA0(Inherited: 0xA0) 
struct UGameResourceType_Alcohol : public UGameResourceType_Liquid
{

}; 



// Class ConZ.PrisonerActionVomitDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionVomitDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.GameResourceType_Water
// Size: 0xA8(Inherited: 0xA0) 
struct UGameResourceType_Water : public UGameResourceType_Liquid
{
	float Salinity;  // 0xA0(0x4)
	char pad_164[4];  // 0xA4(0x4)

}; 



// Class ConZ.GameResourceType_SoftDrink
// Size: 0xA8(Inherited: 0xA8) 
struct UGameResourceType_SoftDrink : public UGameResourceType_Water
{

}; 



// Class ConZ.TextStatics
// Size: 0x28(Inherited: 0x28) 
struct UTextStatics : public UBlueprintFunctionLibrary
{

	struct FText GetColorText(uint8_t  Color); // Function ConZ.TextStatics.GetColorText
}; 



// Class ConZ.Garden
// Size: 0x448(Inherited: 0x220) 
struct AGarden : public AActor
{
	uint16_t _gardenId;  // 0x220(0x2)
	char pad_546[6];  // 0x222(0x6)
	struct FGardenSlotArray _gardenSlots;  // 0x228(0x120)
	struct FIntPoint _numSlots;  // 0x348(0x8)
	char pad_848[4];  // 0x350(0x4)
	float _radius;  // 0x354(0x4)
	char pad_856[240];  // 0x358(0xF0)

	void OnRep_NumSlots(); // Function ConZ.Garden.OnRep_NumSlots
}; 



// Class ConZ.PrisonerBodyConditionUIData_TrenchFoot
// Size: 0x1A8(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_TrenchFoot : public UPrisonerBodyConditionUIData
{
	char pad_416[8];  // 0x1A0(0x8)

}; 



// Class ConZ.GasMaskTag
// Size: 0x30(Inherited: 0x30) 
struct UGasMaskTag : public UBaseItemTag
{

}; 



// Class ConZ.GuardedZoneManager
// Size: 0x250(Inherited: 0x220) 
struct AGuardedZoneManager : public AActor
{
	struct UBillboardComponent* _sprite;  // 0x220(0x8)
	struct TArray<struct ASentrySpawner2*> _sentrySpawners;  // 0x228(0x10)
	struct TArray<struct FSentrySpawnerDescription> _sentrySpawnerDescriptions;  // 0x238(0x10)
	char pad_584[8];  // 0x248(0x8)

}; 



// Class ConZ.ItemWithSkeletalMesh
// Size: 0x920(Inherited: 0x910) 
struct AItemWithSkeletalMesh : public AItem
{
	struct USkeletalMeshComponent* SkeletalMesh;  // 0x910(0x8)
	char pad_2328[8];  // 0x918(0x8)

}; 



// Class ConZ.PrisonerBodyConditionCauseUIData_Sepsis
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodyConditionCauseUIData_Sepsis : public UPrisonerBodyConditionCauseUIData
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.PrisonerActionCutHair
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionCutHair : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerThirdPersonSubviewComponent
// Size: 0x900(Inherited: 0x290) 
struct UPrisonerThirdPersonSubviewComponent : public USpringArmComponent
{
	char pad_656[8];  // 0x290(0x8)
	uint8_t  SubviewID;  // 0x298(0x1)
	char pad_665[3];  // 0x299(0x3)
	float FieldOfView;  // 0x29C(0x4)
	char pad_672_1 : 7;  // 0x2A0(0x1)
	bool UseFieldOfViewForLOD : 1;  // 0x2A0(0x1)
	char pad_673_1 : 7;  // 0x2A1(0x1)
	bool ConstrainAspectRatio : 1;  // 0x2A1(0x1)
	char pad_674[2];  // 0x2A2(0x2)
	float AspectRatio;  // 0x2A4(0x4)
	float MinViewYaw;  // 0x2A8(0x4)
	float MaxViewYaw;  // 0x2AC(0x4)
	float MinViewPitch;  // 0x2B0(0x4)
	float MaxViewPitch;  // 0x2B4(0x4)
	float LeanOffsetLeft;  // 0x2B8(0x4)
	float LeanOffsetRight;  // 0x2BC(0x4)
	struct FVector GlobalOffset;  // 0x2C0(0xC)
	char pad_716_1 : 7;  // 0x2CC(0x1)
	bool MirrorAroundXZPlane : 1;  // 0x2CC(0x1)
	char pad_717[3];  // 0x2CD(0x3)
	struct FVector MaxLocalOffsetWhenColliding;  // 0x2D0(0xC)
	char pad_732_1 : 7;  // 0x2DC(0x1)
	bool ShouldConstrainTraceOriginToOwnerCapsule : 1;  // 0x2DC(0x1)
	char pad_733[3];  // 0x2DD(0x3)
	float OwnerCapsuleContrainBuffer;  // 0x2E0(0x4)
	struct FVector TraceOriginGlobalOffset;  // 0x2E4(0xC)
	struct FVector TraceOriginRelativeOffset;  // 0x2F0(0xC)
	float LocalOffsetCurvesBlendSpeed;  // 0x2FC(0x4)
	struct FLocalOffsetCurves LocalOffsetCurves[2];  // 0x300(0x40)
	struct FName AnimationOffsetTZCurveName;  // 0x340(0x8)
	float PostProcessBlendWeight;  // 0x348(0x4)
	char pad_844[4];  // 0x34C(0x4)
	struct FPostProcessSettings PostProcessSettings;  // 0x350(0x560)
	float BlendInDuration;  // 0x8B0(0x4)
	float BlendOutDuration;  // 0x8B4(0x4)
	char pad_2232_1 : 7;  // 0x8B8(0x1)
	bool ShouldScaleProbeWithFOV : 1;  // 0x8B8(0x1)
	char pad_2233[27];  // 0x8B9(0x1B)
	struct FVector _clippingPreventionOffset;  // 0x8D4(0xC)
	float _clippingPreventionSweepLength;  // 0x8E0(0x4)
	float _clippingPreventionAmount;  // 0x8E4(0x4)
	struct FVector _clippingPreventionTraceOffset;  // 0x8E8(0xC)
	float _minFactorForPrisonerHiding;  // 0x8F4(0x4)
	char pad_2296[8];  // 0x8F8(0x8)

}; 



// Class ConZ.GeigerCounter
// Size: 0x950(Inherited: 0x920) 
struct AGeigerCounter : public AItemWithSkeletalMesh
{
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent;  // 0x918(0x8)
	char pad_2344_1 : 7;  // 0x928(0x1)
	bool _hasVisualIndicator : 1;  // 0x920(0x1)
	float _maxAmountDetectable;  // 0x924(0x4)
	float _maxDetectionRadius;  // 0x928(0x4)
	float _lightIndicatorBaseEmisiveStrength;  // 0x92C(0x4)
	struct UAkAudioEvent* _startEvent;  // 0x930(0x8)
	struct UAkAudioEvent* _stopEvent;  // 0x938(0x8)
	char pad_2373[11];  // 0x945(0xB)

	void OnResourceComponentDeactivated(struct UActorComponent* Component); // Function ConZ.GeigerCounter.OnResourceComponentDeactivated
	void OnResourceComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.GeigerCounter.OnResourceComponentActivated
}; 



// Class ConZ.PrisonerHallucinationIllusion_SpawnFakeItemsThatDisappearOnPickup
// Size: 0x288(Inherited: 0x220) 
struct APrisonerHallucinationIllusion_SpawnFakeItemsThatDisappearOnPickup : public APrisonerHallucinationIllusion
{
	struct TArray<AFakeItem*> _fakeItemClasses;  // 0x220(0x10)
	float _fakeItemSpawnChance;  // 0x230(0x4)
	char pad_564[84];  // 0x234(0x54)

}; 



// Class ConZ.PickupItemAssetData
// Size: 0x38(Inherited: 0x30) 
struct UPickupItemAssetData : public UInteractionAssetData
{
	AItem* Item;  // 0x30(0x8)

}; 



// Class ConZ.GeigerCounterAnimInstance
// Size: 0x2D0(Inherited: 0x2C0) 
struct UGeigerCounterAnimInstance : public UAnimInstance
{
	float _radiationRatio;  // 0x2C0(0x4)
	char pad_708_1 : 7;  // 0x2C4(0x1)
	bool _isTurnedOn : 1;  // 0x2C4(0x1)
	char pad_709[11];  // 0x2C5(0xB)

}; 



// Class ConZ.GenericTooltip
// Size: 0x4D8(Inherited: 0x260) 
struct UGenericTooltip : public UUserWidget
{
	struct FTextBlockStyle TextStyle;  // 0x260(0x270)
	struct UExtendedRichTextBlock* DescriptionText;  // 0x4D0(0x8)

}; 



// Class ConZ.Gib
// Size: 0x230(Inherited: 0x220) 
struct AGib : public AActor
{
	struct UStaticMeshComponent* MeshComponent;  // 0x220(0x8)
	float ShrinkFactor;  // 0x228(0x4)
	float ImpulseMultiplier;  // 0x22C(0x4)

}; 



// Class ConZ.ZoneRegistry
// Size: 0xB8(Inherited: 0xB0) 
struct UZoneRegistry : public UActorComponent
{
	char pad_176[8];  // 0xB0(0x8)

}; 



// Class ConZ.MetabolismHumanBodyPanel
// Size: 0x6F8(Inherited: 0x260) 
struct UMetabolismHumanBodyPanel : public UUserWidget
{
	struct FLinearColor ColdBodyColor;  // 0x260(0x10)
	struct FLinearColor HotBodyColor;  // 0x270(0x10)
	float BodyTemperaturePreview;  // 0x280(0x4)
	char pad_644[4];  // 0x284(0x4)
	struct UImage* _img_BodyGlow_Male;  // 0x288(0x8)
	struct UImage* _img_BodyScan_Male;  // 0x290(0x8)
	struct UImage* _img_BodyGlow_Female;  // 0x298(0x8)
	struct UImage* _img_BodyScan_Female;  // 0x2A0(0x8)
	struct UImage* _img_Head_Male;  // 0x2A8(0x8)
	struct UImage* _img_Ear_Left_Male;  // 0x2B0(0x8)
	struct UImage* _img_Ear_Right_Male;  // 0x2B8(0x8)
	struct UImage* _img_Neck_Male;  // 0x2C0(0x8)
	struct UImage* _img_Trapezius_Male;  // 0x2C8(0x8)
	struct UImage* _img_Shoulder_Left_Male;  // 0x2D0(0x8)
	struct UImage* _img_Shoulder_Right_Male;  // 0x2D8(0x8)
	struct UImage* _img_Chest_Male;  // 0x2E0(0x8)
	struct UImage* _img_Arm_Left_Male;  // 0x2E8(0x8)
	struct UImage* _img_Arm_Right_Male;  // 0x2F0(0x8)
	struct UImage* _img_Forearm_Left_Male;  // 0x2F8(0x8)
	struct UImage* _img_Forearm_Right_Male;  // 0x300(0x8)
	struct UImage* _img_Hand_Left_Male;  // 0x308(0x8)
	struct UImage* _img_Hand_Right_Male;  // 0x310(0x8)
	struct UImage* _img_Umbilicus_Male;  // 0x318(0x8)
	struct UImage* _img_Abdomen_Male;  // 0x320(0x8)
	struct UImage* _img_Thigh_Left_Male;  // 0x328(0x8)
	struct UImage* _img_Thigh_Right_Male;  // 0x330(0x8)
	struct UImage* _img_Kneecap_Left_Male;  // 0x338(0x8)
	struct UImage* _img_Kneecap_Right_Male;  // 0x340(0x8)
	struct UImage* _img_Leg_Left_Male;  // 0x348(0x8)
	struct UImage* _img_Leg_Right_Male;  // 0x350(0x8)
	struct UImage* _img_Foot_Left_Male;  // 0x358(0x8)
	struct UImage* _img_Foot_Right_Male;  // 0x360(0x8)
	struct UImage* _img_Footbones_Left_Male;  // 0x368(0x8)
	struct UImage* _img_Footbones_Right_Male;  // 0x370(0x8)
	struct UImage* _img_Legbones_Left_Male;  // 0x378(0x8)
	struct UImage* _img_Legbones_Right_Male;  // 0x380(0x8)
	struct UImage* _img_Thighbone_Left_Male;  // 0x388(0x8)
	struct UImage* _img_Thighbone_Right_Male;  // 0x390(0x8)
	struct UImage* _img_Pelvis_Male;  // 0x398(0x8)
	struct UImage* _img_Spine_Male;  // 0x3A0(0x8)
	struct UImage* _img_Handbones_Left_Male;  // 0x3A8(0x8)
	struct UImage* _img_Handbones_Right_Male;  // 0x3B0(0x8)
	struct UImage* _img_Forearmbones_Left_Male;  // 0x3B8(0x8)
	struct UImage* _img_Forearmbones_Right_Male;  // 0x3C0(0x8)
	struct UImage* _img_Armbone_Left_Male;  // 0x3C8(0x8)
	struct UImage* _img_Armbone_Right_Male;  // 0x3D0(0x8)
	struct UImage* _img_Scapula_Left_Male;  // 0x3D8(0x8)
	struct UImage* _img_Scapula_Right_Male;  // 0x3E0(0x8)
	struct UImage* _img_Ribcage_Male;  // 0x3E8(0x8)
	struct UImage* _img_Skull_Male;  // 0x3F0(0x8)
	struct UImage* _img_Head_Female;  // 0x3F8(0x8)
	struct UImage* _img_Ear_Left_Female;  // 0x400(0x8)
	struct UImage* _img_Ear_Right_Female;  // 0x408(0x8)
	struct UImage* _img_Neck_Female;  // 0x410(0x8)
	struct UImage* _img_Trapezius_Female;  // 0x418(0x8)
	struct UImage* _img_Shoulder_Left_Female;  // 0x420(0x8)
	struct UImage* _img_Shoulder_Right_Female;  // 0x428(0x8)
	struct UImage* _img_Chest_Female;  // 0x430(0x8)
	struct UImage* _img_Arm_Left_Female;  // 0x438(0x8)
	struct UImage* _img_Arm_Right_Female;  // 0x440(0x8)
	struct UImage* _img_Forearm_Left_Female;  // 0x448(0x8)
	struct UImage* _img_Forearm_Right_Female;  // 0x450(0x8)
	struct UImage* _img_Hand_Left_Female;  // 0x458(0x8)
	struct UImage* _img_Hand_Right_Female;  // 0x460(0x8)
	struct UImage* _img_Umbilicus_Female;  // 0x468(0x8)
	struct UImage* _img_Abdomen_Female;  // 0x470(0x8)
	struct UImage* _img_Thigh_Left_Female;  // 0x478(0x8)
	struct UImage* _img_Thigh_Right_Female;  // 0x480(0x8)
	struct UImage* _img_Kneecap_Left_Female;  // 0x488(0x8)
	struct UImage* _img_Kneecap_Right_Female;  // 0x490(0x8)
	struct UImage* _img_Leg_Left_Female;  // 0x498(0x8)
	struct UImage* _img_Leg_Right_Female;  // 0x4A0(0x8)
	struct UImage* _img_Foot_Left_Female;  // 0x4A8(0x8)
	struct UImage* _img_Foot_Right_Female;  // 0x4B0(0x8)
	struct UImage* _img_Footbones_Left_Female;  // 0x4B8(0x8)
	struct UImage* _img_Footbones_Right_Female;  // 0x4C0(0x8)
	struct UImage* _img_Legbones_Left_Female;  // 0x4C8(0x8)
	struct UImage* _img_Legbones_Right_Female;  // 0x4D0(0x8)
	struct UImage* _img_Thighbone_Left_Female;  // 0x4D8(0x8)
	struct UImage* _img_Thighbone_Right_Female;  // 0x4E0(0x8)
	struct UImage* _img_Pelvis_Female;  // 0x4E8(0x8)
	struct UImage* _img_Spine_Female;  // 0x4F0(0x8)
	struct UImage* _img_Handbones_Left_Female;  // 0x4F8(0x8)
	struct UImage* _img_Handbones_Right_Female;  // 0x500(0x8)
	struct UImage* _img_Forearmbones_Left_Female;  // 0x508(0x8)
	struct UImage* _img_Forearmbones_Right_Female;  // 0x510(0x8)
	struct UImage* _img_Armbone_Left_Female;  // 0x518(0x8)
	struct UImage* _img_Armbone_Right_Female;  // 0x520(0x8)
	struct UImage* _img_Scapula_Left_Female;  // 0x528(0x8)
	struct UImage* _img_Scapula_Right_Female;  // 0x530(0x8)
	struct UImage* _img_Ribcage_Female;  // 0x538(0x8)
	struct UImage* _img_Skull_Female;  // 0x540(0x8)
	struct UImage* _img_SpinalCord;  // 0x548(0x8)
	struct UImage* _img_Lungs;  // 0x550(0x8)
	struct UImage* _img_RespiratorySystem;  // 0x558(0x8)
	struct UImage* _img_CirculatorySystem;  // 0x560(0x8)
	struct UImage* _img_Colon;  // 0x568(0x8)
	struct UImage* _img_Intestine;  // 0x570(0x8)
	struct UImage* _img_Bladder;  // 0x578(0x8)
	struct UImage* _img_Liver;  // 0x580(0x8)
	struct UImage* _img_Kidneys;  // 0x588(0x8)
	struct UImage* _img_AdrenalGlands;  // 0x590(0x8)
	struct UImage* _img_Gallbladder;  // 0x598(0x8)
	struct UImage* _img_Pancreas;  // 0x5A0(0x8)
	struct UImage* _img_Stomach;  // 0x5A8(0x8)
	struct UImage* _img_Heart;  // 0x5B0(0x8)
	struct UImage* _img_Spleen;  // 0x5B8(0x8)
	struct UImage* _img_Brain;  // 0x5C0(0x8)
	struct UImage* _img_Reproductive_Male;  // 0x5C8(0x8)
	struct UImage* _img_Reproductive_Female;  // 0x5D0(0x8)
	struct UButton* _btn_EntireBody;  // 0x5D8(0x8)
	struct UButton* _btn_HeadRegion;  // 0x5E0(0x8)
	struct UButton* _btn_RightLegRegion;  // 0x5E8(0x8)
	struct UButton* _btn_LeftLegRegion;  // 0x5F0(0x8)
	struct UButton* _btn_TorsoRegion;  // 0x5F8(0x8)
	struct UButton* _btn_RightArmRegion;  // 0x600(0x8)
	struct UButton* _btn_LeftArmRegion;  // 0x608(0x8)
	struct UOverlay* _mainOverlay;  // 0x610(0x8)
	struct UOverlay* _maleOverlay;  // 0x618(0x8)
	struct UOverlay* _femaleOverlay;  // 0x620(0x8)
	struct UOverlay* _bothOverlay;  // 0x628(0x8)
	struct UWidgetAnimation* _focusBodyRegion_Head;  // 0x630(0x8)
	struct UWidgetAnimation* _focusBodyRegion_Torso;  // 0x638(0x8)
	struct UWidgetAnimation* _focusBodyRegion_LeftArm;  // 0x640(0x8)
	struct UWidgetAnimation* _focusBodyRegion_RightArm;  // 0x648(0x8)
	struct UWidgetAnimation* _focusBodyRegion_LeftLeg;  // 0x650(0x8)
	struct UWidgetAnimation* _focusBodyRegion_RightLeg;  // 0x658(0x8)
	struct UImage* _vignette;  // 0x660(0x8)
	char pad_1640[144];  // 0x668(0x90)

	void OnClickRegion_Torso(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_Torso
	void OnClickRegion_RightLeg(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_RightLeg
	void OnClickRegion_RightArm(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_RightArm
	void OnClickRegion_LeftLeg(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_LeftLeg
	void OnClickRegion_LeftArm(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_LeftArm
	void OnClickRegion_Head(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_Head
	void OnClickRegion_EntireBody(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_EntireBody
	void OnAnimationFinished_EntireBody(); // Function ConZ.MetabolismHumanBodyPanel.OnAnimationFinished_EntireBody
	void OnAnimationFinished_BodyRegion(); // Function ConZ.MetabolismHumanBodyPanel.OnAnimationFinished_BodyRegion
}; 



// Class ConZ.HandheldLightItemAnimInstance
// Size: 0x2C0(Inherited: 0x2C0) 
struct UHandheldLightItemAnimInstance : public UAnimInstance
{
	float _lightAngle;  // 0x2B8(0x4)

}; 



// Class ConZ.GlobalBirdSpawner2
// Size: 0x2F8(Inherited: 0x220) 
struct AGlobalBirdSpawner2 : public AActor
{
	int32_t MaxSpawnInstances;  // 0x220(0x4)
	int32_t MaxCoastalBirdSpawnPerPlayer;  // 0x224(0x4)
	int32_t MaxContinentalBirdSpawnPerPlayer;  // 0x228(0x4)
	char pad_556[4];  // 0x22C(0x4)
	struct TArray<ABird2*> CoastalBirds;  // 0x230(0x10)
	struct TArray<ABird2*> ContinentalBirds;  // 0x240(0x10)
	float FlyingBirdSpawnAwayDistanceMin;  // 0x250(0x4)
	float FlyingBirdSpawnAwayDistanceMax;  // 0x254(0x4)
	float GroundBirdSpawnAwayDistanceMin;  // 0x258(0x4)
	float GroundBirdSpawnAwayDistanceMax;  // 0x25C(0x4)
	float MinSpawnInfrontDistance;  // 0x260(0x4)
	struct FGameplayTag BirdSpawnerMask;  // 0x264(0x8)
	int32_t BulkSpawn;  // 0x26C(0x4)
	struct TArray<char EPhysicalSurface> AllowedSurfaces;  // 0x270(0x10)
	struct UBillboardComponent* Sprite;  // 0x280(0x8)
	char pad_648[8];  // 0x288(0x8)
	struct TArray<struct ABird2*> _birds;  // 0x290(0x10)
	char pad_672[88];  // 0x2A0(0x58)

}; 



// Class ConZ.PrisonerBodyAbrasionsStatics
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerBodyAbrasionsStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.GlobalUIData
// Size: 0xC8(Inherited: 0x28) 
struct UGlobalUIData : public UObject
{
	UModularTooltip* DefaultModularTooltipClass;  // 0x28(0x8)
	struct TMap<UModularTooltipElementData*, UModularTooltipElement*> ModularTooltipElementClassMapping;  // 0x30(0x50)
	UMessageBox* MessageBox;  // 0x80(0x8)
	ULogoutMessageBox* LogoutMessageBox;  // 0x88(0x8)
	UMessageBoxWithList* MessageBoxWithList;  // 0x90(0x8)
	UMessageBox* PartialPriceSellConfirmation;  // 0x98(0x8)
	UUserWidget* MessageBoxButton;  // 0xA0(0x8)
	UUserWidget* LabeledSliderWithNumber;  // 0xA8(0x8)
	UUserWidget* LabeledCarousel;  // 0xB0(0x8)
	UUserWidget* LabeledDropdown;  // 0xB8(0x8)
	UUserWidget* LabeledTextBlock;  // 0xC0(0x8)

}; 



// Class ConZ.GradedArcedProgressBar
// Size: 0x2B8(Inherited: 0x260) 
struct UGradedArcedProgressBar : public UUserWidget
{
	struct UImage* _fillImage;  // 0x260(0x8)
	struct UMaterialInstanceConstant* _fillMaterial;  // 0x268(0x8)
	struct FLinearColor _fillColorStart;  // 0x270(0x10)
	struct FLinearColor _fillColorMiddle;  // 0x280(0x10)
	struct FLinearColor _fillColorEnd;  // 0x290(0x10)
	float _maxRateOfChangePerSecond;  // 0x2A0(0x4)
	char pad_676[20];  // 0x2A4(0x14)

}; 



// Class ConZ.KillBoxDetectionField
// Size: 0x230(Inherited: 0x220) 
struct AKillBoxDetectionField : public APlaceableActorBlocker
{
	char pad_544[16];  // 0x220(0x10)

}; 



// Class ConZ.GraphicsSettingsManager
// Size: 0x28(Inherited: 0x28) 
struct UGraphicsSettingsManager : public UObject
{

}; 



// Class ConZ.WaterDetectionComponent
// Size: 0x110(Inherited: 0xC8) 
struct UWaterDetectionComponent : public UItemComponent
{
	char pad_200[48];  // 0xC8(0x30)
	float _waterImmersionDepthLimitWhenEquipped;  // 0xF8(0x4)
	char pad_252[20];  // 0xFC(0x14)

}; 



// Class ConZ.HandgunSkill
// Size: 0xF0(Inherited: 0xF0) 
struct UHandgunSkill : public URangedWeaponsSkill
{

}; 



// Class ConZ.HandheldLightItem
// Size: 0x940(Inherited: 0x910) 
struct AHandheldLightItem : public AItem
{
	int32_t _currentLightAngleIndex;  // 0x910(0x4)
	char pad_2324[4];  // 0x914(0x4)
	struct TArray<float> _possibleLightAngles;  // 0x918(0x10)
	float _minIntensityValue;  // 0x928(0x4)
	float _intensityChangeStep;  // 0x92C(0x4)
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent;  // 0x930(0x8)
	char pad_2360[4];  // 0x938(0x4)
	char _lightIntensityReplicated;  // 0x93C(0x1)
	char pad_2365_1 : 7;  // 0x93D(0x1)
	bool _canChangeLightIntensity : 1;  // 0x93D(0x1)
	char pad_2366[2];  // 0x93E(0x2)

	void OnRep_LightIntensity(); // Function ConZ.HandheldLightItem.OnRep_LightIntensity
	void OnRep_CurrentLightAngleIndex(); // Function ConZ.HandheldLightItem.OnRep_CurrentLightAngleIndex
	void OnComponentDeactivated(struct UActorComponent* Component); // Function ConZ.HandheldLightItem.OnComponentDeactivated
	void OnComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.HandheldLightItem.OnComponentActivated
	float GetCurrentLightAngle(); // Function ConZ.HandheldLightItem.GetCurrentLightAngle
	void BP_TurnOn(); // Function ConZ.HandheldLightItem.BP_TurnOn
	void BP_TurnOff(); // Function ConZ.HandheldLightItem.BP_TurnOff
	void BP_OnCurrentLightIntensityChanged(float NewValue); // Function ConZ.HandheldLightItem.BP_OnCurrentLightIntensityChanged
	void BP_OnCurrentLightAngleChanged(float NewValue); // Function ConZ.HandheldLightItem.BP_OnCurrentLightAngleChanged
}; 



// Class ConZ.ItemStatics
// Size: 0x28(Inherited: 0x28) 
struct UItemStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.HandheldSkeletalMeshLightItem
// Size: 0x950(Inherited: 0x940) 
struct AHandheldSkeletalMeshLightItem : public AHandheldLightItem
{
	struct USkeletalMeshComponent* SkeletalMesh;  // 0x940(0x8)
	char pad_2376[8];  // 0x948(0x8)

}; 



// Class ConZ.HasOwningUser
// Size: 0x28(Inherited: 0x28) 
struct UHasOwningUser : public UInterface
{

}; 



// Class ConZ.HealthWidget
// Size: 0x2F8(Inherited: 0x2F8) 
struct UHealthWidget : public UWaypointWidgetBase
{

	void SetMaxHealthPercentage(float Value); // Function ConZ.HealthWidget.SetMaxHealthPercentage
	void SetHealthPercentage(float Value); // Function ConZ.HealthWidget.SetHealthPercentage
}; 



// Class ConZ.HeatSourceDebuggerEntitySetup
// Size: 0x80(Inherited: 0x80) 
struct UHeatSourceDebuggerEntitySetup : public UEntitySetup
{

}; 



// Class ConZ.HeatSourceEntityComponentState
// Size: 0x38(Inherited: 0x28) 
struct UHeatSourceEntityComponentState : public UObject
{
	UGameResourceType* ResourceType;  // 0x28(0x8)
	float DesiredHeatIntensity;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)

}; 



// Class ConZ.MetabolismHealthPanel
// Size: 0x2B0(Inherited: 0x260) 
struct UMetabolismHealthPanel : public UUserWidget
{
	struct UMetabolism_BCU_ICU_Monitor* _icuMonitor;  // 0x260(0x8)
	struct UMetabolismBodyOverviewPanel* _bodyOverviewPanel;  // 0x268(0x8)
	struct UMetabolismTreatmentPanel* _treatmentPanel;  // 0x270(0x8)
	struct UButton* _resetHealthPanelToSelf;  // 0x278(0x8)
	struct UPanelWidget* _healthPanelNormal;  // 0x280(0x8)
	struct UPanelWidget* _healthPanelOutOfRange;  // 0x288(0x8)
	struct UWidgetSwitcher* _healthPanelSwitcher;  // 0x290(0x8)
	struct UTextBlock* _patientName;  // 0x298(0x8)
	UTextOnlyTooltip* _tooltipClass;  // 0x2A0(0x8)
	char pad_680[8];  // 0x2A8(0x8)

	void OnResetHealthPanelToSelf(); // Function ConZ.MetabolismHealthPanel.OnResetHealthPanelToSelf
}; 



// Class ConZ.HeatSourceItemTag
// Size: 0xE8(Inherited: 0x30) 
struct UHeatSourceItemTag : public UBaseItemTag
{
	struct FHeatSource HeatSource;  // 0x30(0xA8)
	char pad_216[16];  // 0xD8(0x10)

}; 



// Class ConZ.HeatSourceMarker
// Size: 0x260(Inherited: 0x220) 
struct AHeatSourceMarker : public AActor
{
	char pad_544[8];  // 0x220(0x8)
	struct USceneComponent* _sceneComponent;  // 0x228(0x8)
	struct FHeatSourceParameters _heatSourceParameters;  // 0x230(0x24)
	char pad_596[12];  // 0x254(0xC)

}; 



// Class ConZ.HeatSourceMarkersComponent
// Size: 0x210(Inherited: 0x200) 
struct UHeatSourceMarkersComponent : public USceneComponent
{
	struct TArray<struct FHeatSource> _heatSources;  // 0x1F8(0x10)

}; 



// Class ConZ.HitReactComponent
// Size: 0x1E0(Inherited: 0xB0) 
struct UHitReactComponent : public UActorComponent
{
	char pad_176[24];  // 0xB0(0x18)
	struct TArray<struct UHitReactMapping*> HitReactMappings;  // 0xC8(0x10)
	struct FPhysicalHitReactData PhysicalHitReactData;  // 0xD8(0x18)
	struct FName RagdollConstraintProfileName;  // 0xF0(0x8)
	float RagdollRestThresholdSingleBodyMax;  // 0xF8(0x4)
	float RagdollRestThresholdAverageBodyMax;  // 0xFC(0x4)
	char pad_256[40];  // 0x100(0x28)
	struct FName _pelvisBoneName;  // 0x128(0x8)
	struct FName _rootBoneName;  // 0x130(0x8)
	struct UAnimMontage* _getUpFromFaceMontage;  // 0x138(0x8)
	struct UAnimMontage* _getUpFromBackMontage;  // 0x140(0x8)
	char pad_328_1 : 7;  // 0x148(0x1)
	bool _shouldSnapToServerLocation : 1;  // 0x148(0x1)
	char pad_329[113];  // 0x149(0x71)
	uint8_t  _ragdollTransitionState;  // 0x1BA(0x1)
	char pad_443[1];  // 0x1BB(0x1)
	struct FVector _serverRagdollLocation;  // 0x1BC(0xC)
	char pad_456[24];  // 0x1C8(0x18)

	void RecoverFromRagdollImmediately(); // Function ConZ.HitReactComponent.RecoverFromRagdollImmediately
	void RecoverFromRagdoll(); // Function ConZ.HitReactComponent.RecoverFromRagdoll
	void OnRep_ServerRagdollLocation(); // Function ConZ.HitReactComponent.OnRep_ServerRagdollLocation
	void OnRep_RagdollTransitionState(); // Function ConZ.HitReactComponent.OnRep_RagdollTransitionState
	void OnMontageBlendingOut(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.HitReactComponent.OnMontageBlendingOut
	void MoveRagdollMesh(struct UPrimitiveComponent* MeshComponent, struct FVector& currentLocation, struct FVector& TargetLocation); // Function ConZ.HitReactComponent.MoveRagdollMesh
	bool IsRagdollAtRest(); // Function ConZ.HitReactComponent.IsRagdollAtRest
	bool IsPlayingGetUpMontage(); // Function ConZ.HitReactComponent.IsPlayingGetUpMontage
	bool IsInRagdoll(); // Function ConZ.HitReactComponent.IsInRagdoll
	bool IsCapsuleOverlapped(); // Function ConZ.HitReactComponent.IsCapsuleOverlapped
	bool IsBlendingRagdoll(); // Function ConZ.HitReactComponent.IsBlendingRagdoll
	void GoToRagdoll(); // Function ConZ.HitReactComponent.GoToRagdoll
	struct FQuat GetPelvisRotation(); // Function ConZ.HitReactComponent.GetPelvisRotation
	struct FName GetPelvisBoneName(); // Function ConZ.HitReactComponent.GetPelvisBoneName
	bool CanRecoverFromRagdoll(); // Function ConZ.HitReactComponent.CanRecoverFromRagdoll
	void ApplyPhysicalAnimationData(struct FPhysicalAnimationDesc& desc); // Function ConZ.HitReactComponent.ApplyPhysicalAnimationData
}; 



// Class ConZ.MechanicRepairService
// Size: 0x38(Inherited: 0x38) 
struct UMechanicRepairService : public UTraderService
{

}; 



// Class ConZ.HitReactMapping
// Size: 0x3E0(Inherited: 0x30) 
struct UHitReactMapping : public UDataAsset
{
	struct FGameplayTagContainer HitReactTypes;  // 0x30(0x20)
	float RegainControlMultiplier;  // 0x50(0x4)
	char pad_84[4];  // 0x54(0x4)
	struct FHitReactMagnitudeData HeadHit;  // 0x58(0x120)
	struct FHitReactMagnitudeData BodyHit;  // 0x178(0x120)
	struct FHitReactMagnitudeData LegsHit;  // 0x298(0x120)
	struct FHitReactLandingData LandingHit;  // 0x3B8(0x28)

}; 



// Class ConZ.PesticideItem
// Size: 0x930(Inherited: 0x910) 
struct APesticideItem : public AItem
{
	struct USkeletalMeshComponent* SkeletalMesh;  // 0x910(0x8)
	uint8_t  _type;  // 0x918(0x1)
	char pad_2329[7];  // 0x919(0x7)
	struct UAnimMontage* _applyPesticidePrisonerMontage;  // 0x920(0x8)
	struct UAnimMontage* _applyPesticideItemMontage;  // 0x928(0x8)

}; 



// Class ConZ.PrisonerConsumableDigestionHandler_Exhaustion
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerConsumableDigestionHandler_Exhaustion : public UConsumableDigestionHandler
{
	float _exhaustionAmountToRecoverPerSubstancesAbsorbedMass;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)

}; 



// Class ConZ.HoverPanelWidget
// Size: 0x260(Inherited: 0x260) 
struct UHoverPanelWidget : public UUserWidget
{

	void SetWorldPosition(struct FVector position); // Function ConZ.HoverPanelWidget.SetWorldPosition
	void SetScreenPosition(struct FVector2D position); // Function ConZ.HoverPanelWidget.SetScreenPosition
	struct UVerticalBox* GetContentBox(); // Function ConZ.HoverPanelWidget.GetContentBox
	void ClearPanel(); // Function ConZ.HoverPanelWidget.ClearPanel
}; 



// Class ConZ.HUDNotification
// Size: 0x30(Inherited: 0x30) 
struct UHUDNotification : public UConZNotification
{

}; 



// Class ConZ.HudWidget
// Size: 0x458(Inherited: 0x260) 
struct UHudWidget : public UUserWidget
{
	struct UCanvasPanel* _mainCanvasPanel;  // 0x260(0x8)
	struct UQuickAccessBarWidget* _quickAccessBar;  // 0x268(0x8)
	struct UThrowingQuickAccessItemWidget* _throwingAccess;  // 0x270(0x8)
	struct UQuickAccessItemWidget* _handQuickAccessItemWidget;  // 0x278(0x8)
	struct UChatWidget* _chatWidget;  // 0x280(0x8)
	char pad_648_1 : 7;  // 0x288(0x1)
	bool _chatOpen : 1;  // 0x288(0x1)
	char pad_649[7];  // 0x289(0x7)
	struct UMessageContainer* _messages;  // 0x290(0x8)
	struct UWarning* _warningMessage;  // 0x298(0x8)
	struct UMicInputIndicator* _micInputIndicator;  // 0x2A0(0x8)
	struct UVerticalBox* _warningsVerticalBox;  // 0x2A8(0x8)
	struct UVerticalBox* _killNotificationVerticalBox;  // 0x2B0(0x8)
	UWarningSignWidget* _warningSignWidgetClass;  // 0x2B8(0x8)
	UKillNotificationWidget* _killNotificationWidgetClass;  // 0x2C0(0x8)
	char pad_712[16];  // 0x2C8(0x10)
	struct UTabMenuReborn* _tabMenuReborn;  // 0x2D8(0x8)
	struct UObjectivesContainerWidget* _objectivesContainer;  // 0x2E0(0x8)
	struct UMissionResult* _missionResultWidget;  // 0x2E8(0x8)
	struct UDialogueContainerWidget* _dialogueContainerWidget;  // 0x2F0(0x8)
	struct UInventoryCompletePanel* _inventoryCompletePanel;  // 0x2F8(0x8)
	struct UVicinityContainer3* _openContainerInventoryVicinityContainer;  // 0x300(0x8)
	struct UPrisonerLifeIndicatorsSprite* _prisonerLifeIndicatorsSprite;  // 0x308(0x8)
	struct UCompassWidget* _compassWidget;  // 0x310(0x8)
	struct UScreenSpaceHealthWidget* _screenSpaceHealthWidget;  // 0x318(0x8)
	struct UResourceIndicatorWidget* _nightVisionGogglesBatteryWidget;  // 0x320(0x8)
	struct UShotsFiredTrackerWidget* _shotsFiredTrackerWidget;  // 0x328(0x8)
	struct UFishingContainerWidget* _fishingContainerWidget;  // 0x330(0x8)
	struct UGrapplingWidget* _grapplingWidget;  // 0x338(0x8)
	struct UMusicPlayerDisplayWidget* _musicPlayerDisplayWidget;  // 0x340(0x8)
	struct UFishingTrophyWidget* _fishingTrophyWidget;  // 0x348(0x8)
	struct UVehicleHudWidget* _vehicleHUD;  // 0x350(0x8)
	struct UPlasticSurgeryMenuWidget* _plasticSurgeryPanel;  // 0x358(0x8)
	struct UBarberShopMenuWidget* _barberShopPanel;  // 0x360(0x8)
	struct USizeBox* _inventoryCompleteSizeBox;  // 0x368(0x8)
	struct UTraderMainPanel* _traderMainPanel;  // 0x370(0x8)
	struct UCanvasPanel* _chatCanvas;  // 0x378(0x8)
	struct UWidgetSwitcher* _masterSwitcher;  // 0x380(0x8)
	struct UMasterMenu* _masterMenu;  // 0x388(0x8)
	struct UFloatingWidgetCanvas* _floatingWidgetCanvas;  // 0x390(0x8)
	struct UGameEventNotificationPanel* _gameEventNotificationPanel;  // 0x398(0x8)
	struct UPanelWidget* _masterHUD;  // 0x3A0(0x8)
	struct UFundsOverview* _fundsOverview;  // 0x3A8(0x8)
	struct UNotificationPanelWidget* _notificationPanelWidget;  // 0x3B0(0x8)
	struct ULevelUpNotificationWidget* _levelUpNotification;  // 0x3B8(0x8)
	UNotificationWidget* _notificationWidgetClass;  // 0x3C0(0x8)
	struct UNotificationWidget* _updateableNotification;  // 0x3C8(0x8)
	struct FMargin _adjustmentPaddingForVicinityWhenTrading;  // 0x3D0(0x10)
	char pad_992[4];  // 0x3E0(0x4)
	float _notificationSoundCooldownInMinutes;  // 0x3E4(0x4)
	char pad_1000[80];  // 0x3E8(0x50)
	struct UAkAudioEvent* _playerKillIndicatorSound;  // 0x438(0x8)
	char pad_1088[8];  // 0x440(0x8)
	struct UTextBlock* _debugInfo;  // 0x448(0x8)
	char pad_1104[8];  // 0x450(0x8)

}; 



// Class ConZ.MainMenu
// Size: 0x2E0(Inherited: 0x260) 
struct UMainMenu : public UBaseMenu
{
	struct UConZStandardButton* _continueButton;  // 0x260(0x8)
	struct UConZStandardButton* _multiplayerButton;  // 0x268(0x8)
	struct UConZStandardButton* _singleplayerButton;  // 0x270(0x8)
	struct UConZStandardButton* _optionsButton;  // 0x278(0x8)
	struct UConZStandardButton* _quitButton;  // 0x280(0x8)
	struct UTextBlock* _selectedCharacter;  // 0x288(0x8)
	struct UVerticalBox* _messageBoxPanel;  // 0x290(0x8)
	struct UTextBlock* _gameVersionText;  // 0x298(0x8)
	struct FText _createOrSelectCharacterText;  // 0x2A0(0x18)
	struct FText _quitMessageBoxText;  // 0x2B8(0x18)
	char pad_720[16];  // 0x2D0(0x10)

	void OnSingleplayerClicked(); // Function ConZ.MainMenu.OnSingleplayerClicked
	void OnQuitClicked(); // Function ConZ.MainMenu.OnQuitClicked
	void OnOptionsClicked(); // Function ConZ.MainMenu.OnOptionsClicked
	void OnMultiplayerClicked(); // Function ConZ.MainMenu.OnMultiplayerClicked
	void OnContinueClicked(); // Function ConZ.MainMenu.OnContinueClicked
}; 



// Class ConZ.InfluenceAreaVisualizer
// Size: 0x230(Inherited: 0x220) 
struct AInfluenceAreaVisualizer : public AActor
{
	struct UStaticMeshComponent* _staticMeshComponent;  // 0x220(0x8)
	char pad_552[8];  // 0x228(0x8)

	void DestroyVisualizer(); // Function ConZ.InfluenceAreaVisualizer.DestroyVisualizer
}; 



// Class ConZ.IngredientEmptyCraftingCondition
// Size: 0x40(Inherited: 0x28) 
struct UIngredientEmptyCraftingCondition : public UCraftingCondition
{
	int32_t SlotIndex;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)
	struct FString SlotName;  // 0x30(0x10)

}; 



// Class ConZ.PrisonerBodyConditionTreatInteraction_ApplyBandagesOrDisinfect
// Size: 0x118(Inherited: 0x80) 
struct UPrisonerBodyConditionTreatInteraction_ApplyBandagesOrDisinfect : public UPrisonerBodyConditionTreatInteraction
{
	char pad_128[32];  // 0x80(0x20)
	struct FPBCTI_ApplyBandagesOrDisinfect_DisinfectData _disinfectData;  // 0xA0(0x38)
	struct FPBCTI_ApplyBandagesOrDisinfect_ApplyBandagesData _applyBandagesData;  // 0xD8(0x3C)
	char pad_276[4];  // 0x114(0x4)

}; 



// Class ConZ.PrisonerBodyConditionTreatInteractionItemTag
// Size: 0x50(Inherited: 0x50) 
struct UPrisonerBodyConditionTreatInteractionItemTag : public UPrisonerBodyConditionInteractionItemTag
{

}; 



// Class ConZ.InjectableSubstance
// Size: 0x28(Inherited: 0x28) 
struct UInjectableSubstance : public UInterface
{

}; 



// Class ConZ.PrisonerSkillComponent
// Size: 0x260(Inherited: 0xB0) 
struct UPrisonerSkillComponent : public UActorComponent
{
	struct TArray<struct FPrisonerInitialSkillInfo> InitialSkills;  // 0xB0(0x10)
	float TickFrequency;  // 0xC0(0x4)
	char pad_196[12];  // 0xC4(0xC)
	struct TArray<struct USkill*> _skills;  // 0xD0(0x10)
	struct TArray<struct USkillAction*> _actions;  // 0xE0(0x10)
	char pad_240[168];  // 0xF0(0xA8)
	struct USkillClasses* _skillClasses;  // 0x198(0x8)
	struct TArray<struct AItem*> _lastSurroundingItems;  // 0x1A0(0x10)
	char pad_432[136];  // 0x1B0(0x88)
	struct TArray<struct FSkillRecord> _replicatedSkills;  // 0x238(0x10)
	char pad_584[4];  // 0x248(0x4)
	uint32_t _replicatedNoiseLevel;  // 0x24C(0x4)
	char pad_592[4];  // 0x250(0x4)
	float _skillReplicationPeriod;  // 0x254(0x4)
	char pad_600[8];  // 0x258(0x8)

	void UpdateIsInFocusModeOnServer(bool isInFocus); // Function ConZ.PrisonerSkillComponent.UpdateIsInFocusModeOnServer
	void ShowWatchingWarningOnClient(); // Function ConZ.PrisonerSkillComponent.ShowWatchingWarningOnClient
	void SetSkillStaminaConsumptionOnServer(struct USkill* Skill, float Consumption); // Function ConZ.PrisonerSkillComponent.SetSkillStaminaConsumptionOnServer
	void Server_UpdateNearbyFoliageCoverage(char nearbyFoliageCoveragePackedData); // Function ConZ.PrisonerSkillComponent.Server_UpdateNearbyFoliageCoverage
	void Server_UpdateDetectablePrisoners(struct TArray<struct APrisoner*> deltaToAdd, struct TArray<struct APrisoner*> deltaToRemove); // Function ConZ.PrisonerSkillComponent.Server_UpdateDetectablePrisoners
	void Server_IncreaseSkillExperiencePoints(uint8_t  skillReplicationID, float Points); // Function ConZ.PrisonerSkillComponent.Server_IncreaseSkillExperiencePoints
	void SendVisiblePrisoners(); // Function ConZ.PrisonerSkillComponent.SendVisiblePrisoners
	void RequestNearbyFoliageUpdateOnClient(); // Function ConZ.PrisonerSkillComponent.RequestNearbyFoliageUpdateOnClient
	void OnRep_Skills(); // Function ConZ.PrisonerSkillComponent.OnRep_Skills
	void HighlightNearbyItems(); // Function ConZ.PrisonerSkillComponent.HighlightNearbyItems
	void HighlightItemOnClient(struct AItem* Item); // Function ConZ.PrisonerSkillComponent.HighlightItemOnClient
	struct TArray<struct USkill*> GetSkills(); // Function ConZ.PrisonerSkillComponent.GetSkills
	void ForceSkillsReplicationOnServer(); // Function ConZ.PrisonerSkillComponent.ForceSkillsReplicationOnServer
}; 



// Class ConZ.InputDataAsset
// Size: 0x50(Inherited: 0x30) 
struct UInputDataAsset : public UDataAsset
{
	struct TArray<struct FInputActionKeyMapping> ActionMappings;  // 0x30(0x10)
	struct TArray<struct FInputAxisKeyMapping> AxisMappings;  // 0x40(0x10)

}; 



// Class ConZ.PrisonerActionCollectSeedsDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionCollectSeedsDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.SimpleTextDropdownEntry
// Size: 0x2A8(Inherited: 0x260) 
struct USimpleTextDropdownEntry : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct UImage* _background;  // 0x270(0x8)
	struct UTextBlock* _label;  // 0x278(0x8)
	struct FLinearColor _black;  // 0x280(0x10)
	struct FLinearColor _white;  // 0x290(0x10)
	int32_t _singleIndentationValue;  // 0x2A0(0x4)
	char pad_676[4];  // 0x2A4(0x4)

}; 



// Class ConZ.ThrowableItemTag
// Size: 0x68(Inherited: 0x30) 
struct UThrowableItemTag : public UBaseItemTag
{
	struct FMeleeWeaponDesc WeaponDesc;  // 0x30(0x38)

}; 



// Class ConZ.InputWidget
// Size: 0x2B0(Inherited: 0x260) 
struct UInputWidget : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UWidgetSwitcher* ControlsWidgetSwitcher;  // 0x278(0x8)
	struct UCarousel* _sectionSwitcher;  // 0x280(0x8)
	char pad_648[40];  // 0x288(0x28)

}; 



// Class ConZ.InspectedItemWidget
// Size: 0x278(Inherited: 0x260) 
struct UInspectedItemWidget : public UUserWidget
{
	struct UItemClassWidget* ItemWidget;  // 0x260(0x8)
	struct UTextBlock* SkillText;  // 0x268(0x8)
	struct UTextBlock* SkillLevelText;  // 0x270(0x8)

	void SetIsToolForSomething(bool IsTool); // Function ConZ.InspectedItemWidget.SetIsToolForSomething
}; 



// Class ConZ.LockpickableLocksVisualComponent
// Size: 0x240(Inherited: 0x200) 
struct ULockpickableLocksVisualComponent : public USceneComponent
{
	char pad_512[8];  // 0x200(0x8)
	struct TArray<struct FString> _lockStaticMeshComponentNames;  // 0x208(0x10)
	struct UStaticMesh* _lockMeshPerLockDifficulty[4];  // 0x218(0x20)
	char pad_568[8];  // 0x238(0x8)

}; 



// Class ConZ.InteractionObject
// Size: 0x28(Inherited: 0x28) 
struct UInteractionObject : public UInterface
{

}; 



// Class ConZ.InteractiveIngredientWidget
// Size: 0x338(Inherited: 0x260) 
struct UInteractiveIngredientWidget : public UUserWidget
{
	char pad_608[56];  // 0x260(0x38)
	struct UWidgetSwitcher* _mainSwitcher;  // 0x298(0x8)
	struct UImage* _ingredientIcon;  // 0x2A0(0x8)
	struct UImage* _overlayHighlight;  // 0x2A8(0x8)
	struct UWidgetSwitcher* _quantitySwitcher;  // 0x2B0(0x8)
	struct UTextBlock* _useAmountText;  // 0x2B8(0x8)
	struct UTextBlock* _currentVolumeTextBlock;  // 0x2C0(0x8)
	struct UTextBlock* _requiredVolumeTextBlock;  // 0x2C8(0x8)
	struct UImage* _mainIngredientIndication;  // 0x2D0(0x8)
	char pad_728[4];  // 0x2D8(0x4)
	struct FLinearColor _unacceptableItemDraggedColor;  // 0x2DC(0x10)
	struct FLinearColor _acceptableItemDraggedColor;  // 0x2EC(0x10)
	struct FLinearColor _defaultBorderColor;  // 0x2FC(0x10)
	float _uncoloredVignetteExponent;  // 0x30C(0x4)
	float _coloredVignetteExponent;  // 0x310(0x4)
	struct FLinearColor _mainIngredientTriangleColor;  // 0x314(0x10)
	struct FLinearColor _optionalIngredientTriangleColor;  // 0x324(0x10)
	char pad_820[4];  // 0x334(0x4)

}; 



// Class ConZ.InteriorStaticMeshComponent
// Size: 0x4E0(Inherited: 0x4E0) 
struct UInteriorStaticMeshComponent : public UStaticMeshComponent
{

}; 



// Class ConZ.TextBoxWithLabel
// Size: 0x19D8(Inherited: 0x260) 
struct UTextBoxWithLabel : public UUserWidget
{
	char pad_608[104];  // 0x260(0x68)
	struct UTextBlock* _name;  // 0x2C8(0x8)
	struct UEditableTextBox* _inputTextBox;  // 0x2D0(0x8)
	struct UImage* _focusBackgroundImage;  // 0x2D8(0x8)
	struct UImage* _showPasswordOff;  // 0x2E0(0x8)
	struct UImage* _showPasswordOn;  // 0x2E8(0x8)
	struct UOverlay* _showPasswordIconOverlay;  // 0x2F0(0x8)
	struct FText _label;  // 0x2F8(0x18)
	struct FTextBoxWithLabelStyle _selectedAndFocusedTWLStyle;  // 0x310(0x158)
	struct FTextBoxWithLabelStyle _selectedAndUnfocusedTWLStyle;  // 0x468(0x158)
	struct FTextBoxWithLabelStyle _unselectedTWLStyle;  // 0x5C0(0x158)
	struct FTextBoxWithLabelStyle _highlightedTWLStyle;  // 0x718(0x158)
	struct FTextBoxWithLabelStyle _disabledTWLStyle;  // 0x870(0x158)
	struct FEditableTextBoxStyle _correctInputTextBoxStyle;  // 0x9C8(0x7F8)
	struct FEditableTextBoxStyle _incorrectInputTextBoxStyle;  // 0x11C0(0x7F8)
	char pad_6584[32];  // 0x19B8(0x20)

	void OnTextChanged(struct FText& Text); // Function ConZ.TextBoxWithLabel.OnTextChanged
	struct FEventReply OnShowPasswordToggle(struct FGeometry MyGeometry, struct FPointerEvent& MouseEvent); // Function ConZ.TextBoxWithLabel.OnShowPasswordToggle
}; 



// Class ConZ.PrisonerActionExtinguishItem
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionExtinguishItem : public UPrisonerAction
{

}; 



// Class ConZ.Inv2021_InventoryContainer
// Size: 0x28(Inherited: 0x28) 
struct UInv2021_InventoryContainer : public UInterface
{

}; 



// Class ConZ.Inv2021_InventoryContainerClothes
// Size: 0xC8(Inherited: 0x28) 
struct UInv2021_InventoryContainerClothes : public UObject
{
	char pad_40[56];  // 0x28(0x38)
	struct TArray<struct FInventoryContainerClothesElement> _replicatedData;  // 0x60(0x10)
	char pad_112[88];  // 0x70(0x58)

	void OnRep_ReplicatedData(); // Function ConZ.Inv2021_InventoryContainerClothes.OnRep_ReplicatedData
}; 



// Class ConZ.RemoveMagazineInsertMagazineInsertCartridge
// Size: 0xA0(Inherited: 0x90) 
struct URemoveMagazineInsertMagazineInsertCartridge : public UWeaponActionReloadSequence
{
	struct FName MontageEndSectionName;  // 0x90(0x8)
	char pad_152[8];  // 0x98(0x8)

}; 



// Class ConZ.Inv2021_InventoryElement
// Size: 0x28(Inherited: 0x28) 
struct UInv2021_InventoryElement : public UInterface
{

}; 



// Class ConZ.InventoryPositionDataClothes
// Size: 0x30(Inherited: 0x28) 
struct UInventoryPositionDataClothes : public UInventoryPositionData
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.InventoryPositionDataHandsHolsters
// Size: 0x30(Inherited: 0x28) 
struct UInventoryPositionDataHandsHolsters : public UInventoryPositionData
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.PrisonerActionExecuteBodyConditionInteractionDescription
// Size: 0x88(Inherited: 0x38) 
struct UPrisonerActionExecuteBodyConditionInteractionDescription : public UPrisonerActionDescription
{
	char pad_56[64];  // 0x38(0x40)
	struct UAkAudioEvent* BeginInteractionPatientAudioEvent;  // 0x78(0x8)
	struct UAkAudioEvent* EndInteractionPatientAudioEvent;  // 0x80(0x8)

}; 



// Class ConZ.LocationTrigger
// Size: 0x260(Inherited: 0x228) 
struct ALocationTrigger : public ATriggerBox
{
	char pad_552[8];  // 0x228(0x8)
	struct FTransform _markerTransform;  // 0x230(0x30)

}; 



// Class ConZ.InventoryItemWidget2Test
// Size: 0x270(Inherited: 0x260) 
struct UInventoryItemWidget2Test : public UUserWidget
{
	struct UImage* _itemIcon;  // 0x260(0x8)
	struct UTextBlock* _itemCaption;  // 0x268(0x8)

}; 



// Class ConZ.InventoryContainerWidget2Test
// Size: 0x2D8(Inherited: 0x260) 
struct UInventoryContainerWidget2Test : public UInventoryContainerWidget2
{
	struct UImage* _itemIcon;  // 0x260(0x8)
	struct UTextBlock* _itemCaption;  // 0x268(0x8)
	struct UVerticalBox* _itemContainer;  // 0x270(0x8)
	char pad_632[96];  // 0x278(0x60)

}; 



// Class ConZ.InventoryPanelWidget2Test
// Size: 0x2B8(Inherited: 0x260) 
struct UInventoryPanelWidget2Test : public UInventoryContainerWidget2
{
	struct UScrollBox* _itemContainer;  // 0x260(0x8)
	char pad_616[80];  // 0x268(0x50)

}; 



// Class ConZ.InventoryGridWidget
// Size: 0x268(Inherited: 0x260) 
struct UInventoryGridWidget : public UUserWidget
{
	struct UImage* _image;  // 0x260(0x8)

}; 



// Class ConZ.InventoryItemData
// Size: 0x30(Inherited: 0x30) 
struct UInventoryItemData : public UDataAsset
{

}; 



// Class ConZ.ModularTooltipElement_ValueWithModifier
// Size: 0x310(Inherited: 0x2E8) 
struct UModularTooltipElement_ValueWithModifier : public UModularTooltipElement
{
	struct UTextBlock* _nameTextBlock;  // 0x2E8(0x8)
	struct UTextBlock* _currentValueTextBlock;  // 0x2F0(0x8)
	struct UTextBlock* _baseValueTextBlock;  // 0x2F8(0x8)
	struct UTextBlock* _modifierSignTextBlock;  // 0x300(0x8)
	struct UTextBlock* _modifierTextBlock;  // 0x308(0x8)

}; 



// Class ConZ.InventoryItem
// Size: 0x28(Inherited: 0x28) 
struct UInventoryItem : public UInterface
{

}; 



// Class ConZ.InventoryItemComponentState
// Size: 0x68(Inherited: 0x40) 
struct UInventoryItemComponentState : public UItemComponentStateBase
{
	struct TArray<struct FDbIntegerId> ContainedElementsIds;  // 0x40(0x10)
	struct TArray<struct FInv2021_InventoryPosition2D> ContainedElementsPositions;  // 0x50(0x10)
	float ContainedItemsWeight;  // 0x60(0x4)
	char pad_100[4];  // 0x64(0x4)

}; 



// Class ConZ.InventoryPanelSideLayerWidget
// Size: 0x268(Inherited: 0x260) 
struct UInventoryPanelSideLayerWidget : public UUserWidget
{
	struct UItemWidget2* _itemWidget;  // 0x260(0x8)

}; 



// Class ConZ.InventoryPanelThirdIteration
// Size: 0x3E0(Inherited: 0x260) 
struct UInventoryPanelThirdIteration : public UUserWidget
{
	struct UHandsHolstersWidget2* Hands;  // 0x260(0x8)
	struct UHandsHolstersWidget2* LeftHolster;  // 0x268(0x8)
	struct UHandsHolstersWidget2* RightHolster;  // 0x270(0x8)
	struct TWeakObjectPtr<ACharacter> _displayedCharacter;  // 0x278(0x8)
	struct UTabContainer* _tabRow;  // 0x280(0x8)
	struct UScrollBox* _inventoriesScrollBox;  // 0x288(0x8)
	struct UVerticalBox* _nonContainerBox;  // 0x290(0x8)
	struct UVerticalBox* _nonTradingBits;  // 0x298(0x8)
	struct UVerticalBox* _tradingBits;  // 0x2A0(0x8)
	struct UWidgetSwitcher* _inventoryAndHolstersSwitcher;  // 0x2A8(0x8)
	struct UWidgetSwitcher* _inventoryTradingSwitcher;  // 0x2B0(0x8)
	struct UTextBlock* _playerName;  // 0x2B8(0x8)
	struct UImage* _availabilityOverlayImage;  // 0x2C0(0x8)
	struct TMap<struct TWeakObjectPtr<UObject>, struct UItemInventoryWidget2*> _inventories;  // 0x2C8(0x50)
	struct TMap<struct TWeakObjectPtr<UObject>, struct UInventoryPanelSideLayerWidget*> _sideLayers;  // 0x318(0x50)
	struct TMap<struct TWeakObjectPtr<UObject>, struct UItemWidget2*> _nonContainerItems;  // 0x368(0x50)
	struct FMargin _nonContainerItemsPadding;  // 0x3B8(0x10)
	char pad_968[24];  // 0x3C8(0x18)

}; 



// Class ConZ.InventorySlotUserWidget
// Size: 0x280(Inherited: 0x260) 
struct UInventorySlotUserWidget : public UUserWidget
{
	char pad_608_1 : 7;  // 0x260(0x1)
	bool HasItem : 1;  // 0x260(0x1)
	char pad_609[7];  // 0x261(0x7)
	struct UImage* ImageWidget;  // 0x268(0x8)
	struct USizeBox* SizeBoxWrapper;  // 0x270(0x8)
	struct UBaseItemContainerWidget* ParentContainerWidget;  // 0x278(0x8)

	void OnDraggedItemPreRotated(struct UItemWidget2* Widget); // Function ConZ.InventorySlotUserWidget.OnDraggedItemPreRotated
	void OnDraggedItemPostRotated(struct UItemWidget2* Widget); // Function ConZ.InventorySlotUserWidget.OnDraggedItemPostRotated
}; 



// Class ConZ.IsUnmountedOrMountedOnGroundCondition
// Size: 0x30(Inherited: 0x28) 
struct UIsUnmountedOrMountedOnGroundCondition : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.ObjectStatics
// Size: 0x28(Inherited: 0x28) 
struct UObjectStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.ItemActionDescription
// Size: 0x28(Inherited: 0x28) 
struct UItemActionDescription : public UObject
{

}; 



// Class ConZ.PrisonerActionExtinguishFireDescription
// Size: 0x58(Inherited: 0x38) 
struct UPrisonerActionExtinguishFireDescription : public UPrisonerActionDescription
{
	char pad_56[32];  // 0x38(0x20)

}; 



// Class ConZ.ItemAction
// Size: 0x50(Inherited: 0x28) 
struct UItemAction : public UObject
{
	char pad_40[24];  // 0x28(0x18)
	struct UItemActionDescription* _description;  // 0x40(0x8)
	char pad_72[8];  // 0x48(0x8)

	bool IsStandAloneOrOwningClient(); // Function ConZ.ItemAction.IsStandAloneOrOwningClient
	struct AItem* GetItem(); // Function ConZ.ItemAction.GetItem
	void End(bool Regular); // Function ConZ.ItemAction.End
	bool CanBeSelected(struct UItemActionDescription* Description); // Function ConZ.ItemAction.CanBeSelected
	bool CanBegin(); // Function ConZ.ItemAction.CanBegin
	float Begin(); // Function ConZ.ItemAction.Begin
}; 



// Class ConZ.ItemActionSequenceDescription
// Size: 0x30(Inherited: 0x28) 
struct UItemActionSequenceDescription : public UItemActionDescription
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.ItemActionSequenceLoadMagazine_M1Clip
// Size: 0x90(Inherited: 0x90) 
struct UItemActionSequenceLoadMagazine_M1Clip : public UItemActionSequenceLoadMagazine
{

}; 



// Class ConZ.PrisonerActionCheckWeaponFiringModeDescription
// Size: 0x38(Inherited: 0x38) 
struct UPrisonerActionCheckWeaponFiringModeDescription : public UPrisonerActionDescription
{

}; 



// Class ConZ.ItemContainerManager
// Size: 0x380(Inherited: 0x220) 
struct AItemContainerManager : public AActor
{
	char pad_544[72];  // 0x220(0x48)
	struct TMap<struct AItemContainer*, struct FBox2D> _itemContainers;  // 0x268(0x50)
	struct TMap<struct FDbIntegerId, struct FItemContainersArray> _itemContainersOwned;  // 0x2B8(0x50)
	char pad_776[8];  // 0x308(0x8)
	struct FItemContainersReplicationHelper _itemContainersDataRepHelper;  // 0x310(0x70)

	void NetMulticast_UpdateItemContainerData(int32_t dataVersion, struct FString runtimeId, struct FItemContainerRepData ItemContainerData); // Function ConZ.ItemContainerManager.NetMulticast_UpdateItemContainerData
}; 



// Class ConZ.ItemDropPlaceholder
// Size: 0x288(Inherited: 0x220) 
struct AItemDropPlaceholder : public AActor
{
	struct USceneComponent* _rootComponent;  // 0x220(0x8)
	struct UBoxComponent* _boxCollisionComponent;  // 0x228(0x8)
	struct UStaticMeshComponent* _staticMeshComponent;  // 0x230(0x8)
	struct USkeletalMeshComponent* _skeletalMeshComponent;  // 0x238(0x8)
	char pad_576[72];  // 0x240(0x48)

}; 



// Class ConZ.ItemInventoryWidget2
// Size: 0x2F8(Inherited: 0x260) 
struct UItemInventoryWidget2 : public UInventoryContainerWidget2
{
	struct UInventoryContainer2D* _container;  // 0x260(0x8)
	struct UCanvasPanel* _inventoryCanvas;  // 0x268(0x8)
	char pad_624[8];  // 0x270(0x8)
	struct TScriptInterface<IInventoryNode> _item;  // 0x278(0x10)
	struct UTextBlock* _nameText;  // 0x288(0x8)
	struct UItemWidget2* _itemWidget;  // 0x290(0x8)
	struct UGridPanel* _inventoryGrid;  // 0x298(0x8)
	struct UWidget* _loadingWidget;  // 0x2A0(0x8)
	struct UInventoryGridWidget* _inventoryGridWidget;  // 0x2A8(0x8)
	struct UHorizontalBox* _contentBox;  // 0x2B0(0x8)
	struct UCheckBox* _expandToggle;  // 0x2B8(0x8)
	struct TArray<struct UInventorySlotUserWidget*> _slotsWidgets;  // 0x2C0(0x10)
	struct UWidgetAnimation* BlinkAnim;  // 0x2D0(0x8)
	struct URetainerBox* RetainerBoxDeadCells;  // 0x2D8(0x8)
	char pad_736_1 : 7;  // 0x2E0(0x1)
	bool _canMinimize : 1;  // 0x2E0(0x1)
	char pad_737[23];  // 0x2E1(0x17)

	void OnExpandToggleClicked(bool checked); // Function ConZ.ItemInventoryWidget2.OnExpandToggleClicked
}; 



// Class ConZ.ItemObstructionStatics
// Size: 0x28(Inherited: 0x28) 
struct UItemObstructionStatics : public UBlueprintFunctionLibrary
{

	bool OverlapClosestBlocking(struct ACharacter* Character, struct FTransform& obstructionTestCapsulesWorldTransform, struct TArray<struct FItemObstructionTestCapsule>& obstructionTestCapsules, struct FHitResult& HitResult, float& PenetrationDepth); // Function ConZ.ItemObstructionStatics.OverlapClosestBlocking
	bool OverlapBlocking(struct ACharacter* Character, struct FTransform& obstructionTestCapsuleWorldTransform, struct FItemObstructionTestCapsule& obstructionTestCapsule, struct FHitResult& HitResult, float& PenetrationDepth); // Function ConZ.ItemObstructionStatics.OverlapBlocking
	float ChooseItemObstructionSide(struct ACharacter* Character, float existingSide); // Function ConZ.ItemObstructionStatics.ChooseItemObstructionSide
}; 



// Class ConZ.PrisonerActionUncraftItemDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionUncraftItemDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.ItemRegistry
// Size: 0x100(Inherited: 0xB0) 
struct UItemRegistry : public UActorComponent
{
	char pad_176[80];  // 0xB0(0x50)

}; 



// Class ConZ.ItemSelectionSlotWidget
// Size: 0x2A0(Inherited: 0x260) 
struct UItemSelectionSlotWidget : public UUserWidget
{
	struct UScrollBox* _selectionScrollBox;  // 0x260(0x8)
	struct UTextBlock* TextBlock_1;  // 0x268(0x8)
	struct UVerticalBox* VerticalBox_1;  // 0x270(0x8)
	struct FText Name;  // 0x278(0x18)
	UItemSelectionWidget* _selectionWidgetClass;  // 0x290(0x8)
	char pad_664[8];  // 0x298(0x8)

}; 



// Class ConZ.ItemSelectionWidget
// Size: 0x2E8(Inherited: 0x260) 
struct UItemSelectionWidget : public UUserWidget
{
	struct UImage* _selection;  // 0x260(0x8)
	struct UTextBlock* _itemName;  // 0x268(0x8)
	char pad_624[8];  // 0x270(0x8)
	struct UItemSelection* _itemData;  // 0x278(0x8)
	struct UTexture2D* _cancelTexture;  // 0x280(0x8)
	struct UAkAudioEvent* _selectionAudioEvent;  // 0x288(0x8)
	struct FSlateColor _selectedColor;  // 0x290(0x28)
	struct FSlateColor _notSelectedColor;  // 0x2B8(0x28)
	char pad_736[8];  // 0x2E0(0x8)

	struct FEventReply On_Selection_MouseButtonDown(struct FGeometry& Geometry, struct FPointerEvent& MouseEvent); // Function ConZ.ItemSelectionWidget.On_Selection_MouseButtonDown
	struct FSlateColor Get_ItemName_ColorAndOpacity(); // Function ConZ.ItemSelectionWidget.Get_ItemName_ColorAndOpacity
}; 



// Class ConZ.PrisonerBodySimulationComponent
// Size: 0x648(Inherited: 0xB0) 
struct UPrisonerBodySimulationComponent : public UActorComponent
{
	char pad_176[408];  // 0xB0(0x198)
	struct UPrisonerBodySimulationData* _data;  // 0x248(0x8)
	char pad_592[608];  // 0x250(0x260)
	struct TArray<struct UPrisonerBodyEffect*> _bodyEffects;  // 0x4B0(0x10)
	char pad_1216[280];  // 0x4C0(0x118)
	struct UMetabolism* _metabolism;  // 0x5D8(0x8)
	char pad_1504[32];  // 0x5E0(0x20)
	uint64_t _repState1;  // 0x600(0x8)
	uint64_t _repState2;  // 0x608(0x8)
	uint64_t _repState3;  // 0x610(0x8)
	uint64_t _repState4;  // 0x618(0x8)
	uint64_t _repState5;  // 0x620(0x8)
	char _repState6;  // 0x628(0x1)
	char pad_1577[7];  // 0x629(0x7)
	struct TArray<struct UPrisonerBodyEffect*> _repBodyEffects;  // 0x630(0x10)
	char pad_1600[8];  // 0x640(0x8)

	void OnRep_State6(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State6
	void OnRep_State5(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State5
	void OnRep_State4(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State4
	void OnRep_State3(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State3
	void OnRep_State2(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State2
	void OnRep_State1(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State1
	void OnRep_BodyEffects(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_BodyEffects
}; 



// Class ConZ.ItemSpawnerComponent
// Size: 0x220(Inherited: 0x200) 
struct UItemSpawnerComponent : public USceneComponent
{
	int32_t ItemSpawnLimit;  // 0x1F8(0x4)
	struct TArray<struct FItemSpawnerMarker> SpawnerMarkers;  // 0x200(0x10)
	struct FString SpawnerGroupName;  // 0x210(0x10)

}; 



// Class ConZ.ItemSpawnerGroup
// Size: 0x228(Inherited: 0x220) 
struct AItemSpawnerGroup : public AActor
{
	struct UItemSpawnerComponent* SpawnerComponent;  // 0x220(0x8)

}; 



// Class ConZ.ItemSpawnerVolume
// Size: 0x278(Inherited: 0x258) 
struct AItemSpawnerVolume : public AVolume
{
	struct FItemLocation zone;  // 0x258(0xF)
	char pad_615[1];  // 0x267(0x1)
	float ItemHealthMultiplier;  // 0x268(0x4)
	float ProbabilityMultiplier;  // 0x26C(0x4)
	float ExamineProbabilityMultiplier;  // 0x270(0x4)
	char pad_628[4];  // 0x274(0x4)

}; 



// Class ConZ.ItemSpawningDataRegistry
// Size: 0x130(Inherited: 0x30) 
struct UItemSpawningDataRegistry : public UGameInstanceSubsystem
{
	char pad_48[256];  // 0x30(0x100)

}; 



// Class ConZ.ItemSpawningManager
// Size: 0x17E0(Inherited: 0x220) 
struct AItemSpawningManager : public AActor
{
	char pad_544[5568];  // 0x220(0x15C0)

}; 



// Class ConZ.ItemSplitWidget
// Size: 0x2A0(Inherited: 0x260) 
struct UItemSplitWidget : public UUserWidget
{
	struct UEditableTextBox* _currentItemStackAmount;  // 0x260(0x8)
	struct UTextBlock* _newItemStackAmount;  // 0x268(0x8)
	struct USlider* _valueSlider;  // 0x270(0x8)
	struct UButton* _splitButton;  // 0x278(0x8)
	char pad_640[32];  // 0x280(0x20)

	void OnStackAmountBoxTextChanged(struct FText& newText); // Function ConZ.ItemSplitWidget.OnStackAmountBoxTextChanged
	void OnSplitButtonClicked(); // Function ConZ.ItemSplitWidget.OnSplitButtonClicked
	void OnSliderValueUpdated(float Value); // Function ConZ.ItemSplitWidget.OnSliderValueUpdated
	void OnExitRequested(); // Function ConZ.ItemSplitWidget.OnExitRequested
}; 



// Class ConZ.ItemTooltip
// Size: 0x2B0(Inherited: 0x260) 
struct UItemTooltip : public UUserWidget
{
	struct UItemTooltipPanel* _mainPanel;  // 0x260(0x8)
	struct UItemTooltipTab* _overviewPanels;  // 0x268(0x8)
	struct UItemTooltipTab* _additionalPanels;  // 0x270(0x8)
	struct UImage* _pageIndicatorBar;  // 0x278(0x8)
	struct UTextBlock* _expandHintText;  // 0x280(0x8)
	struct UUserWidget* UI_Border;  // 0x288(0x8)
	struct UGridPanel* _pageIndicatorGrid;  // 0x290(0x8)
	char pad_664[24];  // 0x298(0x18)

	void UpdateVisuals(struct TArray<struct FInventoryNodeWidgetData>& widgetData); // Function ConZ.ItemTooltip.UpdateVisuals
	void Init(struct TScriptInterface<IInventoryNode>& Item, struct TScriptInterface<IInventoryContainer>& container); // Function ConZ.ItemTooltip.Init
}; 



// Class ConZ.ExtendedRichTextBlock
// Size: 0x678(Inherited: 0x678) 
struct UExtendedRichTextBlock : public URichTextBlock
{

	void SetTextStyle(struct FTextBlockStyle& Style); // Function ConZ.ExtendedRichTextBlock.SetTextStyle
}; 



// Class ConZ.PrisonerBodySymptom_Vomiting
// Size: 0x100(Inherited: 0xE8) 
struct UPrisonerBodySymptom_Vomiting : public UPrisonerBodySymptom_PeriodicAffect
{
	float _minimalSubstanceVolumeInStomachRatioToVomit;  // 0xE8(0x4)
	struct FFloatInterval _retryVomitingInterval;  // 0xEC(0x8)
	char pad_244[12];  // 0xF4(0xC)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_ImmuneSystemEfficiencyModifier
// Size: 0xC0(Inherited: 0xC0) 
struct UPrisonerBodyConditionOrSymptomSideEffect_ImmuneSystemEfficiencyModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{

}; 



// Class ConZ.ItemTooltipPanel
// Size: 0x2B0(Inherited: 0x260) 
struct UItemTooltipPanel : public UUserWidget
{
	char pad_608[80];  // 0x260(0x50)

	void UpdateVisuals(struct TArray<struct FInventoryNodeWidgetData>& widgetData); // Function ConZ.ItemTooltipPanel.UpdateVisuals
	void Init(struct TScriptInterface<IInventoryNode>& Item, struct TScriptInterface<IInventoryContainer>& container); // Function ConZ.ItemTooltipPanel.Init
	bool DebugMode(); // Function ConZ.ItemTooltipPanel.DebugMode
}; 



// Class ConZ.ItemVirtualizationManager
// Size: 0x3E0(Inherited: 0x220) 
struct AItemVirtualizationManager : public AActor
{
	char pad_544[448];  // 0x220(0x1C0)

}; 



// Class ConZ.SentryGuardVolume2
// Size: 0x2A8(Inherited: 0x258) 
struct ASentryGuardVolume2 : public AVolume
{
	char pad_600[32];  // 0x258(0x20)
	struct TArray<struct FVector> _hotZonesLocalLocations;  // 0x278(0x10)
	char pad_648[16];  // 0x288(0x10)
	struct TArray<struct ABuilding*> _hotZonesBuildings;  // 0x298(0x10)

}; 



// Class ConZ.ItemWidget2
// Size: 0x550(Inherited: 0x260) 
struct UItemWidget2 : public UUserWidget
{
	struct FMulticastInlineDelegate OnRightClicked;  // 0x260(0x10)
	char pad_624[32];  // 0x270(0x20)
	struct UVicinityContainer3* ParentVicinity;  // 0x290(0x8)
	char pad_664[8];  // 0x298(0x8)
	struct UTextBlock* LowerLeftTextFirst;  // 0x2A0(0x8)
	struct UTextBlock* LowerLeftTextSecond;  // 0x2A8(0x8)
	struct TMap<struct FName, float> _numberData;  // 0x2B0(0x50)
	struct UProgressBar* ProgressBarDurability;  // 0x300(0x8)
	struct UProgressBar* ProgressBarUses;  // 0x308(0x8)
	struct UImage* BackgroundHighlight;  // 0x310(0x8)
	char pad_792_1 : 7;  // 0x318(0x1)
	bool _isVicinityContainer : 1;  // 0x318(0x1)
	char pad_793[7];  // 0x319(0x7)
	struct TScriptInterface<IInventoryNode> _item;  // 0x320(0x10)
	struct TScriptInterface<IInventoryContainer> _container;  // 0x330(0x10)
	char pad_832[32];  // 0x340(0x20)
	UObject* _itemClass;  // 0x360(0x8)
	struct UImage* _icon;  // 0x368(0x8)
	struct USizeBox* _iconSizeBox;  // 0x370(0x8)
	struct UImage* _background;  // 0x378(0x8)
	struct UInvalidationBox* _mainInvalidationBox;  // 0x380(0x8)
	struct UOverlay* _priceOverlay;  // 0x388(0x8)
	struct UTextBlock* _priceText;  // 0x390(0x8)
	struct UUniformGridPanel* _backgroundGrid;  // 0x398(0x8)
	struct UUniformGridPanel* _foregroundGrid;  // 0x3A0(0x8)
	struct UOverlay* _selectionOverlay;  // 0x3A8(0x8)
	uint8_t  _widgetType;  // 0x3B0(0x1)
	char pad_945[7];  // 0x3B1(0x7)
	struct UVerticalBox* _healthPercentageProgressBarVBox;  // 0x3B8(0x8)
	struct UImage* _irreparableIcon;  // 0x3C0(0x8)
	struct UImage* _radiationIcon;  // 0x3C8(0x8)
	struct FLinearColor _defaultBackgroundColour;  // 0x3D0(0x10)
	struct FLinearColor _hoveredBackgroundColour;  // 0x3E0(0x10)
	struct FLinearColor _selectedBackgroundColour;  // 0x3F0(0x10)
	struct FLinearColor _selectedHoveredBackgroundColour;  // 0x400(0x10)
	char pad_1040[32];  // 0x410(0x20)
	struct UHorizontalBox* _lowerLeftBox;  // 0x430(0x8)
	struct UImage* _additionalIcon;  // 0x438(0x8)
	struct USizeBox* _additionalIconSizeBox;  // 0x440(0x8)
	char pad_1096[72];  // 0x448(0x48)
	struct TArray<struct UTexture2D*> _temperatureLevelImages;  // 0x490(0x10)
	struct TArray<struct UTexture2D*> _wetnessLevelImages;  // 0x4A0(0x10)
	struct USizeBox* MainSizeBox;  // 0x4B0(0x8)
	struct UImage* Temperature;  // 0x4B8(0x8)
	struct UImage* Wetness;  // 0x4C0(0x8)
	struct UTextBlock* UsageSeparator;  // 0x4C8(0x8)
	struct UImage* UsesBackground;  // 0x4D0(0x8)
	struct UImage* HealthBackground;  // 0x4D8(0x8)
	struct UTextBlock* LowerRightText;  // 0x4E0(0x8)
	struct UImage* UpperRightBackground;  // 0x4E8(0x8)
	struct UTextBlock* UpperRightText;  // 0x4F0(0x8)
	struct UImage* UpperLeftBackground;  // 0x4F8(0x8)
	struct UTextBlock* UpperLeftText;  // 0x500(0x8)
	struct UImage* MiddleBackground;  // 0x508(0x8)
	struct UTextBlock* MiddleText;  // 0x510(0x8)
	struct UImage* UpperBackground;  // 0x518(0x8)
	struct UImage* LowerBackground;  // 0x520(0x8)
	struct UWidgetAnimation* LowerLeftBoxFadeIn;  // 0x528(0x8)
	struct UWidgetAnimation* LowerLeftBoxFadeOut;  // 0x530(0x8)
	struct UWidgetAnimation* AdditionalIconFadeIn;  // 0x538(0x8)
	struct UWidgetAnimation* AdditionalIconFadeOut;  // 0x540(0x8)
	struct UWidgetAnimation* LowerLeftBoxShow;  // 0x548(0x8)

	void OnRotated__DelegateSignature(struct UItemWidget2* Widget); // DelegateFunction ConZ.ItemWidget2.OnRotated__DelegateSignature
	void OnRightClicked__DelegateSignature(); // DelegateFunction ConZ.ItemWidget2.OnRightClicked__DelegateSignature
	void OnDropOperation(struct UDragDropOperation* Operation); // Function ConZ.ItemWidget2.OnDropOperation
	void OnDragOperationCancelled(struct UDragDropOperation* Operation); // Function ConZ.ItemWidget2.OnDragOperationCancelled
}; 



// Class ConZ.TimedTriggerComponentState
// Size: 0x30(Inherited: 0x28) 
struct UTimedTriggerComponentState : public UTriggerComponentState
{
	float CountdownRemainingTime;  // 0x28(0x4)
	char pad_44[4];  // 0x2C(0x4)

}; 



// Class ConZ.ItemWidgetDragDropOperation
// Size: 0x90(Inherited: 0x88) 
struct UItemWidgetDragDropOperation : public UDragDropOperation
{
	char pad_136[8];  // 0x88(0x8)

}; 



// Class ConZ.ItemFirstPersonAnimationsDataAsset
// Size: 0x98(Inherited: 0x30) 
struct UItemFirstPersonAnimationsDataAsset : public UDataAsset
{
	struct FItemFirstPersonUpperBodyAnimationsData UpperBody;  // 0x30(0x50)
	struct UBlendSpace* AimOffsetStanding;  // 0x80(0x8)
	struct UBlendSpace* AimOffsetCrouching;  // 0x88(0x8)
	struct UBlendSpace* AimOffsetProne;  // 0x90(0x8)

}; 



// Class ConZ.ItemWithText
// Size: 0x960(Inherited: 0x910) 
struct AItemWithText : public AItem
{
	char pad_2320[8];  // 0x910(0x8)
	int32_t MaxTextCharactersPerRow;  // 0x918(0x4)
	int32_t MaxTextRows;  // 0x91C(0x4)
	struct UWidgetComponent* _textWidgetComponent;  // 0x920(0x8)
	struct FString _text;  // 0x928(0x10)
	struct FDbIntegerId _owningUserProfileId;  // 0x938(0x8)
	char pad_2368[32];  // 0x940(0x20)

	void OnTextAccepted(struct APrisoner* User, struct FText& Text); // Function ConZ.ItemWithText.OnTextAccepted
	void OnRep_Text(); // Function ConZ.ItemWithText.OnRep_Text
	void OnLocalPrisonerPanelsClosed_ItemWithText(); // Function ConZ.ItemWithText.OnLocalPrisonerPanelsClosed_ItemWithText
}; 



// Class ConZ.JournalMissionContainer
// Size: 0x328(Inherited: 0x260) 
struct UJournalMissionContainer : public UUserWidget
{
	struct UVerticalBox* _missionItemWidgetsContainer;  // 0x260(0x8)
	struct UVerticalBox* _completedMissionItemWidgetsContainer;  // 0x268(0x8)
	struct UOverlay* _completedMissionsOverlay;  // 0x270(0x8)
	struct UTextBlock* _noContentText;  // 0x278(0x8)
	char pad_640[8];  // 0x280(0x8)
	struct TMap<AMission*, struct TWeakObjectPtr<UMissionItemWidget>> _missionItemWidgets;  // 0x288(0x50)
	struct TMap<AMission*, struct TWeakObjectPtr<UMissionItemWidget>> _completedMissionItemWidgets;  // 0x2D8(0x50)

}; 



// Class ConZ.PrisonerCreationUIController
// Size: 0x450(Inherited: 0x28) 
struct UPrisonerCreationUIController : public UObject
{
	char pad_40[700];  // 0x28(0x2BC)
	struct FName _editedPrisonerActorTag;  // 0x2E4(0x8)
	struct FName _mugshotPrisonerActorTag;  // 0x2EC(0x8)
	char pad_756[4];  // 0x2F4(0x4)
	struct TArray<struct UCharacterMesh*> _characterMeshesToAddOntoMugshotPrisoner;  // 0x2F8(0x10)
	struct FGameplayTag _femaleTag;  // 0x308(0x8)
	struct FGameplayTag _maleTag;  // 0x310(0x8)
	char pad_792[312];  // 0x318(0x138)

}; 



// Class ConZ.TimedGiftSpawner
// Size: 0x288(Inherited: 0x220) 
struct ATimedGiftSpawner : public AActor
{
	int64_t _giftSpawnTime;  // 0x220(0x8)
	struct TArray<struct TSoftClassPtr<UObject>> _possibleGifts;  // 0x228(0x10)
	struct TSoftClassPtr<UObject> _referenceItem;  // 0x238(0x28)
	float _giftOffsetFromReferenceItem;  // 0x260(0x4)
	char pad_612[36];  // 0x264(0x24)

}; 



// Class ConZ.JournalMissionPanel
// Size: 0x2F8(Inherited: 0x260) 
struct UJournalMissionPanel : public UUserWidget
{
	struct UWidgetSwitcher* _journalWidgetSwitcher;  // 0x260(0x8)
	struct UJournalMissionContainer* _mainStoryContainerWidget;  // 0x268(0x8)
	struct UJournalMissionContainer* _sideStoryContainerWidget;  // 0x270(0x8)
	struct UJournalMissionContainer* _tutorialContainerWidget;  // 0x278(0x8)
	struct UMissionTabWidget* _mainStoryTab;  // 0x280(0x8)
	struct UMissionTabWidget* _sideStoryTab;  // 0x288(0x8)
	struct UMissionTabWidget* _tutorialTab;  // 0x290(0x8)
	struct UImage* _firstTabDivider;  // 0x298(0x8)
	struct UImage* _secondTabDivider;  // 0x2A0(0x8)
	struct UAkAudioEvent* _menuButtonClickAudioEvent;  // 0x2A8(0x8)
	struct UJournalObjectiveContainer* _objectivesContainerWidget;  // 0x2B0(0x8)
	char pad_696[64];  // 0x2B8(0x40)

	void OnUntrackMissionButton(); // Function ConZ.JournalMissionPanel.OnUntrackMissionButton
	void OnRestartMissionButton(); // Function ConZ.JournalMissionPanel.OnRestartMissionButton
	void OnResetMissionButton(); // Function ConZ.JournalMissionPanel.OnResetMissionButton
	void OnActivateMissionButton(); // Function ConZ.JournalMissionPanel.OnActivateMissionButton
}; 



// Class ConZ.PrisonerBodyCondition_Sepsis
// Size: 0xF0(Inherited: 0xD0) 
struct UPrisonerBodyCondition_Sepsis : public UPrisonerBodyConditionWithCauses
{
	float _maxSeverity;  // 0xD0(0x4)
	float _maxContamination;  // 0xD4(0x4)
	float _contamination;  // 0xD8(0x4)
	float _contaminationChangeRate;  // 0xDC(0x4)
	float _contaminationAtRecoveryStart;  // 0xE0(0x4)
	uint8_t  _state;  // 0xE4(0x1)
	char pad_229[11];  // 0xE5(0xB)

}; 



// Class ConZ.PrisonerActionFillGameResourceContainerDescription
// Size: 0x90(Inherited: 0x38) 
struct UPrisonerActionFillGameResourceContainerDescription : public UCharacterActionDescription
{
	char pad_56[88];  // 0x38(0x58)

}; 



// Class ConZ.KeyBinding
// Size: 0x2F8(Inherited: 0x260) 
struct UKeyBinding : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct UTextBlock* ActionNameText;  // 0x290(0x8)
	struct UTextBlock* ActionKeyText;  // 0x298(0x8)
	struct FText UserFriendlyName;  // 0x2A0(0x18)
	struct FName Name;  // 0x2B8(0x8)
	char pad_704_1 : 7;  // 0x2C0(0x1)
	bool IsAxis : 1;  // 0x2C0(0x1)
	char pad_705[3];  // 0x2C1(0x3)
	float AxisScale;  // 0x2C4(0x4)
	struct FName GroupName;  // 0x2C8(0x8)
	char pad_720_1 : 7;  // 0x2D0(0x1)
	bool CheckOnlySameKeyWithinGroup : 1;  // 0x2D0(0x1)
	char pad_721[3];  // 0x2D1(0x3)
	struct FName SameKeyBlockerGroupName;  // 0x2D4(0x8)
	char pad_732[28];  // 0x2DC(0x1C)

}; 



// Class ConZ.PrisonerLoadout
// Size: 0x98(Inherited: 0x30) 
struct UPrisonerLoadout : public UDataAsset
{
	AItem* primary;  // 0x30(0x8)
	struct TArray<AItem*> primaryAttachments;  // 0x38(0x10)
	AItem* secondary;  // 0x48(0x8)
	struct TArray<AItem*> secondaryAttachments;  // 0x50(0x10)
	AItem* tertiary;  // 0x60(0x8)
	struct TArray<AItem*> tertiaryAttachments;  // 0x68(0x10)
	struct TArray<AItem*> outfit;  // 0x78(0x10)
	struct TArray<AItem*> support;  // 0x88(0x10)

	void EquipPrisoner(struct APrisoner* Prisoner, struct TArray<struct AItem*>& givenItems, bool ClearEquipment, bool applyOutfit, bool applyItems); // Function ConZ.PrisonerLoadout.EquipPrisoner
}; 



// Class ConZ.VoiceAudioComponent
// Size: 0x880(Inherited: 0x860) 
struct UVoiceAudioComponent : public UAudioComponent
{
	char pad_2144[8];  // 0x860(0x8)
	struct UVoiceDecoder* VoiceDecoder;  // 0x868(0x8)
	char pad_2160[16];  // 0x870(0x10)

	void QueueVoiceData(struct TArray<char>& CompressedVoiceData); // Function ConZ.VoiceAudioComponent.QueueVoiceData
	void InitializeVoiceAudioComponent(); // Function ConZ.VoiceAudioComponent.InitializeVoiceAudioComponent
}; 



// Class ConZ.KillboxComponent
// Size: 0x360(Inherited: 0xB0) 
struct UKillboxComponent : public UActorComponent
{
	char pad_176_1 : 7;  // 0xB0(0x1)
	bool _isActivated : 1;  // 0xB0(0x1)
	char pad_177_1 : 7;  // 0xB1(0x1)
	bool _isFinale : 1;  // 0xB1(0x1)
	char pad_178[2];  // 0xB2(0x2)
	float _killBoxDuration;  // 0xB4(0x4)
	float _lockdownDuration;  // 0xB8(0x4)
	float _killBoxResetDelay;  // 0xBC(0x4)
	float _reductionTimeCap;  // 0xC0(0x4)
	float _reductionTimePenalty;  // 0xC4(0x4)
	float _saveStateInterval;  // 0xC8(0x4)
	float _gasEntranceTime;  // 0xCC(0x4)
	UPrisonerBodyCondition_KillBoxGasPoisoning* _gasPoisoningCondition;  // 0xD0(0x8)
	float _panicModeTimeCut;  // 0xD8(0x4)
	float _laserEntranceTime;  // 0xDC(0x4)
	float _finaleEntranceCloseTime;  // 0xE0(0x4)
	float _difficultyCalibrationTime;  // 0xE4(0x4)
	int32_t _calibrationPrisonerThreshold;  // 0xE8(0x4)
	float _zapperDamageModifierPerPrisoner;  // 0xEC(0x4)
	float _maxZapperDamageModifier;  // 0xF0(0x4)
	char pad_244[4];  // 0xF4(0x4)
	struct TArray<struct FRoomDifficultyConfiguration> _availableDifficultyConfigurations;  // 0xF8(0x10)
	int32_t _maxSpawnedZombies;  // 0x108(0x4)
	int32_t _maxSpawnedZombiesPerMistake;  // 0x10C(0x4)
	int32_t _prisonerNumPerGoldDoorZapper;  // 0x110(0x4)
	int32_t _maxGoldDoorZappers;  // 0x114(0x4)
	float _specialPauseCountdownDuration;  // 0x118(0x4)
	int32_t _pauseMaxPrisonerCount;  // 0x11C(0x4)
	int32_t _spawnMinPrisonerCount;  // 0x120(0x4)
	float _specialEventInterval;  // 0x124(0x4)
	float _laserQuoteTimeRemainingTrigger;  // 0x128(0x4)
	float _gasQuoteTimeRemainingTrigger;  // 0x12C(0x4)
	float _randomQuoteInterval;  // 0x130(0x4)
	float _timedHostBlockTime;  // 0x134(0x4)
	struct TArray<struct UAkAudioEvent*> _killBoxOpeningQuotes;  // 0x138(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxLaserAnnouncementQuotes;  // 0x148(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxDescriptionQuotes;  // 0x158(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxRandomnQuotes;  // 0x168(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxFailureQuotes;  // 0x178(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxGasAnnouncementQuotes;  // 0x188(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxZombieSpawnQuotes;  // 0x198(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxTimePauseQuotes;  // 0x1A8(0x10)
	struct TArray<struct UAkAudioEvent*> _difficultyCalibrationQuote;  // 0x1B8(0x10)
	struct UAkAudioEvent* KillBoxMusicStart;  // 0x1C8(0x8)
	struct UAkAudioEvent* _killBoxMusicStop;  // 0x1D0(0x8)
	struct UAkAudioEvent* _killBoxGasSound;  // 0x1D8(0x8)
	struct UAkAudioEvent* KillBox30SecondsMark;  // 0x1E0(0x8)
	struct UAkAudioEvent* KillBox10SecondsMark;  // 0x1E8(0x8)
	struct UAkAudioEvent* KillBox5SecondsMark;  // 0x1F0(0x8)
	struct UAkAudioEvent* KillBox4SecondsMark;  // 0x1F8(0x8)
	struct UAkAudioEvent* KillBox3SecondsMark;  // 0x200(0x8)
	struct UAkAudioEvent* KillBox2SecondsMark;  // 0x208(0x8)
	struct UAkAudioEvent* KillBox1SecondsMark;  // 0x210(0x8)
	struct UAkAudioEvent* KillBoxBuzzerSound;  // 0x218(0x8)
	struct ADoor* _killBoxEntrance;  // 0x220(0x8)
	struct AKillBoxDetectionField* _detectionField;  // 0x228(0x8)
	struct UMovableCollisionFieldComponent* _laserComponent;  // 0x230(0x8)
	struct TArray<struct AKillBoxSpawnPoint*> _spawnPoints;  // 0x238(0x10)
	struct TArray<struct AKillBoxSpawnPoint*> _hardSpawnPoints;  // 0x248(0x10)
	struct TArray<struct AZombie2*> _spawnedZombies;  // 0x258(0x10)
	struct UAkComponent* _currentAudioComponent;  // 0x268(0x8)
	struct UAkComponent* _musicComponent;  // 0x270(0x8)
	float _remainingTime;  // 0x278(0x4)
	float _unlockFailureAssistanceBonus;  // 0x27C(0x4)
	char pad_640[96];  // 0x280(0x60)
	struct TArray<struct UAkAudioEvent*> _queuedQuotes;  // 0x2E0(0x10)
	struct TArray<struct ADoor*> _electricalDoors;  // 0x2F0(0x10)
	struct TArray<struct FRoomDefinition> _roomDefinitions;  // 0x300(0x10)
	struct TArray<struct UKillBoxTimerWidget*> _timerWidgets;  // 0x310(0x10)
	struct TArray<struct UParticleSystemComponent*> _gasEmitters;  // 0x320(0x10)
	struct UParticleSystemComponent* _gasMist;  // 0x330(0x8)
	struct ASwitch* _panicButton;  // 0x338(0x8)
	char pad_832[32];  // 0x340(0x20)

	void SetPanicbutton(struct ASwitch* panicButton); // Function ConZ.KillboxComponent.SetPanicbutton
	void SetMusicComponent(struct UAkComponent* musicComponent); // Function ConZ.KillboxComponent.SetMusicComponent
	void SetLaserComponent(struct UMovableCollisionFieldComponent* laserComponent); // Function ConZ.KillboxComponent.SetLaserComponent
	void SetKillBoxEntrance(struct ADoor* entrance); // Function ConZ.KillboxComponent.SetKillBoxEntrance
	void SetDetectionField(struct AKillBoxDetectionField* detectionField); // Function ConZ.KillboxComponent.SetDetectionField
	void OnRep_KillBoxActivation(); // Function ConZ.KillboxComponent.OnRep_KillBoxActivation
	void OnKillBoxSetup(); // Function ConZ.KillboxComponent.OnKillBoxSetup
	void OnInnerDoorUnlockedDelegate(struct ADoor* Door); // Function ConZ.KillboxComponent.OnInnerDoorUnlockedDelegate
	void OnEntranceUnlockedDelegate(struct ADoor* Door); // Function ConZ.KillboxComponent.OnEntranceUnlockedDelegate
	void OnEntranceOpenedDelegate(); // Function ConZ.KillboxComponent.OnEntranceOpenedDelegate
	void OnEntranceCloseFinishedDelegate(); // Function ConZ.KillboxComponent.OnEntranceCloseFinishedDelegate
	void OnElectricDoorsDefusedDelegate(struct ADoor* Door); // Function ConZ.KillboxComponent.OnElectricDoorsDefusedDelegate
	void NetMulticast_StopMusic(); // Function ConZ.KillboxComponent.NetMulticast_StopMusic
	void NetMulticast_StopAllQuotes(); // Function ConZ.KillboxComponent.NetMulticast_StopAllQuotes
	void NetMulticast_ReportKillBoxDeactivation(); // Function ConZ.KillboxComponent.NetMulticast_ReportKillBoxDeactivation
	void NetMulticast_ReportKillActivation(); // Function ConZ.KillboxComponent.NetMulticast_ReportKillActivation
	void NetMulticast_QueueHostQuote(struct UAkAudioEvent* Sound, bool playOnlyIfInstant, bool stopPreviousQuote); // Function ConZ.KillboxComponent.NetMulticast_QueueHostQuote
	void NetMulticast_PlaySound(struct UAkAudioEvent* Sound); // Function ConZ.KillboxComponent.NetMulticast_PlaySound
	void NetMulticast_ActivateGasSound(); // Function ConZ.KillboxComponent.NetMulticast_ActivateGasSound
	void NetMulticast_ActivateGasParticles(bool Activate); // Function ConZ.KillboxComponent.NetMulticast_ActivateGasParticles
	void InitiatePanicMode(); // Function ConZ.KillboxComponent.InitiatePanicMode
	void InitiateKillBoxFailure(); // Function ConZ.KillboxComponent.InitiateKillBoxFailure
	void AddTimerWidget(struct UKillBoxTimerWidget* timerWidget); // Function ConZ.KillboxComponent.AddTimerWidget
	void AddSpawnPoint(struct ADoor* holeDoor, struct AKillBoxSpawnPoint* Spawner); // Function ConZ.KillboxComponent.AddSpawnPoint
	void AddRoomDefinition(struct ADoor* RoomDoor, struct UStaticMeshComponent* Locker, struct AKillBoxC4SpawnPoint* C4); // Function ConZ.KillboxComponent.AddRoomDefinition
	void AddHardSpawnPoint(struct ADoor* holeDoor, struct AKillBoxSpawnPoint* Spawner); // Function ConZ.KillboxComponent.AddHardSpawnPoint
	void AddGasMist(struct UParticleSystemComponent* gasMist); // Function ConZ.KillboxComponent.AddGasMist
	void AddGasEmitter(struct UParticleSystemComponent* gasEmitter); // Function ConZ.KillboxComponent.AddGasEmitter
	void AddElectricalDoor(struct ADoor* electricalDoor); // Function ConZ.KillboxComponent.AddElectricalDoor
}; 



// Class ConZ.PlaceableActorBlocker
// Size: 0x220(Inherited: 0x220) 
struct APlaceableActorBlocker : public AActor
{

}; 



// Class ConZ.PresetColorPickerButton
// Size: 0x2D8(Inherited: 0x260) 
struct UPresetColorPickerButton : public UUserWidget
{
	char pad_608[88];  // 0x260(0x58)
	struct UWidgetSwitcher* _displaySwitcher;  // 0x2B8(0x8)
	struct UImage* _coloredPreviewUnhovered;  // 0x2C0(0x8)
	struct UImage* _coloredPreviewHovered;  // 0x2C8(0x8)
	struct UImage* _variableOpacityBorder;  // 0x2D0(0x8)

}; 



// Class ConZ.KillBoxSpawnPoint
// Size: 0x260(Inherited: 0x220) 
struct AKillBoxSpawnPoint : public AActor
{
	float _openDelay;  // 0x220(0x4)
	float _closeDelay;  // 0x224(0x4)
	struct TArray<AZombie2*> _zombieList;  // 0x228(0x10)
	struct ADoor* _door;  // 0x238(0x8)
	char pad_576[24];  // 0x240(0x18)
	float _stableZombieProbability;  // 0x258(0x4)
	char pad_604[4];  // 0x25C(0x4)

}; 



// Class ConZ.KillBoxTimerWidget
// Size: 0x280(Inherited: 0x260) 
struct UKillBoxTimerWidget : public UUserWidget
{
	struct UTextBlock* _remainingTimeMinutes1;  // 0x260(0x8)
	struct UTextBlock* _remainingTimeMinutes2;  // 0x268(0x8)
	struct UTextBlock* _remainingTimeSeconds1;  // 0x270(0x8)
	struct UTextBlock* _remainingTimeSeconds2;  // 0x278(0x8)

	void SetTime(int32_t Minutes, int32_t Seconds); // Function ConZ.KillBoxTimerWidget.SetTime
}; 



// Class ConZ.KillFeedNotification
// Size: 0x30(Inherited: 0x30) 
struct UKillFeedNotification : public UConZNotification
{

}; 



// Class ConZ.KillFeedNotificationDescription
// Size: 0x78(Inherited: 0x40) 
struct UKillFeedNotificationDescription : public UNotificationDescription
{
	struct FString prefix;  // 0x40(0x10)
	struct FString characterName;  // 0x50(0x10)
	struct FString suffix;  // 0x60(0x10)
	char pad_112_1 : 7;  // 0x70(0x1)
	bool ping : 1;  // 0x70(0x1)
	char pad_113[7];  // 0x71(0x7)

}; 



// Class ConZ.LadderMarkersComponent
// Size: 0x220(Inherited: 0x200) 
struct ULadderMarkersComponent : public USceneComponent
{
	struct TArray<struct FLadderMarker> _ladderMarkers;  // 0x1F8(0x10)
	char pad_528[16];  // 0x210(0x10)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_HeightenedSenses
// Size: 0xD0(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_HeightenedSenses : public UPrisonerBodyConditionOrSymptomSideEffect
{
	UPrisonerBodySymptom_HeightenedSenses* _symptomClass;  // 0x30(0x8)
	struct UPrisonerBodySymptomCause_HeightenedSenses* _symptomCause;  // 0x38(0x8)
	struct FRuntimeFloatCurve _intensityVsSeverity;  // 0x40(0x88)
	char pad_200[8];  // 0xC8(0x8)

}; 



// Class ConZ.LadderMarkersRegistry
// Size: 0x230(Inherited: 0x220) 
struct ALadderMarkersRegistry : public AActor
{
	char pad_544[16];  // 0x220(0x10)

}; 



// Class ConZ.PlayerDrone
// Size: 0xAB0(Inherited: 0x8B0) 
struct APlayerDrone : public ADrone
{
	char pad_2224[8];  // 0x8B0(0x8)
	float _movementInertiaPlayer;  // 0x8B8(0x4)
	char pad_2236[4];  // 0x8BC(0x4)
	struct UCameraComponent* _firstPersonCameraComponent;  // 0x8C0(0x8)
	struct UCameraComponent* _thirdPersonCameraComponent;  // 0x8C8(0x8)
	struct USpringArmComponent* _springArmComponent;  // 0x8D0(0x8)
	struct UCharacterItemDragComponent* _itemDragComponent;  // 0x8D8(0x8)
	struct UMaterialInterface* _nightVisionMaterial;  // 0x8E0(0x8)
	float _interactionDistance;  // 0x8E8(0x4)
	char pad_2284[4];  // 0x8EC(0x4)
	struct UMaterialInstance* _itemPlacingMaterialAllowed;  // 0x8F0(0x8)
	struct UMaterialInstance* _itemPlacingMaterialDisallowed;  // 0x8F8(0x8)
	struct FLinearColor _colorTintWhenInvisible;  // 0x900(0x10)
	struct FLinearColor _colorTintWhenHidden;  // 0x910(0x10)
	char pad_2336[320];  // 0x920(0x140)
	struct UActionProgressWidget* _progressWidget;  // 0xA60(0x8)
	char pad_2664[4];  // 0xA68(0x4)
	struct TWeakObjectPtr<UObject> _currentlyDroppingItem;  // 0xA6C(0x8)
	char pad_2676[36];  // 0xA74(0x24)
	struct UDoorUpgradeWidget* _doorUpgradeWidget;  // 0xA98(0x8)
	uint8_t  _droneVisibility;  // 0xAA0(0x1)
	char pad_2721[15];  // 0xAA1(0xF)

	void TryInteractDefault(); // Function ConZ.PlayerDrone.TryInteractDefault
	void Server_TeleportToNextOrPreviousPlayer(bool Next); // Function ConZ.PlayerDrone.Server_TeleportToNextOrPreviousPlayer
	void Server_SpawnAndDropItemAt(struct UContainerItemDescriptor* Item, struct FVector Location, struct FRotator Rotation); // Function ConZ.PlayerDrone.Server_SpawnAndDropItemAt
	void Server_SetDroneVisibility(uint8_t  Value); // Function ConZ.PlayerDrone.Server_SetDroneVisibility
	void Server_ReportUnauthorizedInteractionAttempt(); // Function ConZ.PlayerDrone.Server_ReportUnauthorizedInteractionAttempt
	void Server_OpenDoor(struct ADoor* Door); // Function ConZ.PlayerDrone.Server_OpenDoor
	void Server_InitializeItemVirtualizedInventory(struct UObject* Item); // Function ConZ.PlayerDrone.Server_InitializeItemVirtualizedInventory
	void Server_DropItemAt(struct AItem* Item, struct FVector Location, struct FRotator Rotation); // Function ConZ.PlayerDrone.Server_DropItemAt
	void Server_DestroyGarden(struct FVector Location, uint16_t gardenId); // Function ConZ.PlayerDrone.Server_DestroyGarden
	void Server_DestroyBaseElement(int64_t BaseId, int64_t ElementID, struct FVector Location); // Function ConZ.PlayerDrone.Server_DestroyBaseElement
	void Server_CloseDoor(struct ADoor* Door); // Function ConZ.PlayerDrone.Server_CloseDoor
	void Server_AddInventoryNode(struct UObject* Item, struct UObject* container, struct FInventoryPositionDataRepHelper position, struct UObject* Target); // Function ConZ.PlayerDrone.Server_AddInventoryNode
	void OnRepDroneVisibility(); // Function ConZ.PlayerDrone.OnRepDroneVisibility
	void OnProgressWidgetFinished(); // Function ConZ.PlayerDrone.OnProgressWidgetFinished
	void Client_OnExitPhotoMode(); // Function ConZ.PlayerDrone.Client_OnExitPhotoMode
	void Client_OnEnterPhotoMode(); // Function ConZ.PlayerDrone.Client_OnEnterPhotoMode
	void Client_DropItem(struct AItem* Item); // Function ConZ.PlayerDrone.Client_DropItem
	void CancelInteractableDragging(); // Function ConZ.PlayerDrone.CancelInteractableDragging
}; 



// Class ConZ.LadderMarkersReplicator
// Size: 0x2B8(Inherited: 0x220) 
struct ALadderMarkersReplicator : public AActor
{
	char pad_544[152];  // 0x220(0x98)

	void NetMulticast_UnregisterLadderMarker(int32_t dataVersion, struct FLadderMarker marker); // Function ConZ.LadderMarkersReplicator.NetMulticast_UnregisterLadderMarker
	void NetMulticast_RegisterLadderMarker(int32_t dataVersion, struct FLadderMarker marker); // Function ConZ.LadderMarkersReplicator.NetMulticast_RegisterLadderMarker
}; 



// Class ConZ.LandingEffects
// Size: 0x7F8(Inherited: 0x30) 
struct ULandingEffects : public UDataAsset
{
	float MinImpactSpeedForLightEffects;  // 0x30(0x4)
	float MinImpactSpeedForMediumEffects;  // 0x34(0x4)
	float MinImpactSpeedForHeavyEffects;  // 0x38(0x4)
	char pad_60[4];  // 0x3C(0x4)
	struct UAkAudioEvent* ImpactAudioEvent;  // 0x40(0x8)
	struct FLandingEffectDataPerPhysicalSurface Default;  // 0x48(0x30)
	struct FLandingEffectDataPerPhysicalSurface grass;  // 0x78(0x30)
	struct FLandingEffectDataPerPhysicalSurface ForrestGroundCoastal;  // 0xA8(0x30)
	struct FLandingEffectDataPerPhysicalSurface ForrestGroundContinental;  // 0xD8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Rock;  // 0x108(0x30)
	struct FLandingEffectDataPerPhysicalSurface Stone;  // 0x138(0x30)
	struct FLandingEffectDataPerPhysicalSurface Gravel;  // 0x168(0x30)
	struct FLandingEffectDataPerPhysicalSurface GravelBeach;  // 0x198(0x30)
	struct FLandingEffectDataPerPhysicalSurface Pebbles;  // 0x1C8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Snow;  // 0x1F8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Ice;  // 0x228(0x30)
	struct FLandingEffectDataPerPhysicalSurface Sand;  // 0x258(0x30)
	struct FLandingEffectDataPerPhysicalSurface Asphalt;  // 0x288(0x30)
	struct FLandingEffectDataPerPhysicalSurface Dirt;  // 0x2B8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Water;  // 0x2E8(0x30)
	struct FLandingEffectDataPerPhysicalSurface WaterOcean;  // 0x318(0x30)
	struct FLandingEffectDataPerPhysicalSurface Cloth;  // 0x348(0x30)
	struct FLandingEffectDataPerPhysicalSurface Metal;  // 0x378(0x30)
	struct FLandingEffectDataPerPhysicalSurface Aluminium;  // 0x3A8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Concrete;  // 0x3D8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Brick;  // 0x408(0x30)
	struct FLandingEffectDataPerPhysicalSurface Wood;  // 0x438(0x30)
	struct FLandingEffectDataPerPhysicalSurface Plastic;  // 0x468(0x30)
	struct FLandingEffectDataPerPhysicalSurface Rubber;  // 0x498(0x30)
	struct FLandingEffectDataPerPhysicalSurface Glass;  // 0x4C8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Folliage;  // 0x4F8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Bark;  // 0x528(0x30)
	struct FLandingEffectDataPerPhysicalSurface Flesh;  // 0x558(0x30)
	struct FLandingEffectDataPerPhysicalSurface RoofTile;  // 0x588(0x30)
	struct FLandingEffectDataPerPhysicalSurface CeramicsTiles;  // 0x5B8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Scrap;  // 0x5E8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Trunk;  // 0x618(0x30)
	struct FLandingEffectDataPerPhysicalSurface Leaves;  // 0x648(0x30)
	struct FLandingEffectDataPerPhysicalSurface Plaster;  // 0x678(0x30)
	struct FLandingEffectDataPerPhysicalSurface Kevlar;  // 0x6A8(0x30)
	struct FLandingEffectDataPerPhysicalSurface ForceField;  // 0x6D8(0x30)
	struct FLandingEffectDataPerPhysicalSurface NoEffect;  // 0x708(0x30)
	struct FLandingEffectDataPerPhysicalSurface WhiteGravel;  // 0x738(0x30)
	struct FLandingEffectDataPerPhysicalSurface Mud;  // 0x768(0x30)
	struct FLandingEffectDataPerPhysicalSurface RiverSand;  // 0x798(0x30)
	struct FLandingEffectDataPerPhysicalSurface GrassContinental;  // 0x7C8(0x30)

}; 



// Class ConZ.LaserTriggerComponent
// Size: 0x540(Inherited: 0x4D0) 
struct ULaserTriggerComponent : public UTriggerComponent
{
	struct UBoxComponent* BoxCollisionComponent;  // 0x4D0(0x8)
	struct UStaticMeshComponent* VisualizationMeshComponent;  // 0x4D8(0x8)
	struct FVector _laserDirection;  // 0x4E0(0xC)
	float _maxLaserLength;  // 0x4EC(0x4)
	float _laserThickness;  // 0x4F0(0x4)
	float _laserHeight;  // 0x4F4(0x4)
	struct UStaticMesh* _visualizationMesh;  // 0x4F8(0x8)
	struct FTransform _laserMeshTransform;  // 0x500(0x30)
	char pad_1328[16];  // 0x530(0x10)

	void BoxComponent_OnComponentEndOverlap(struct UPrimitiveComponent* activatedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function ConZ.LaserTriggerComponent.BoxComponent_OnComponentEndOverlap
	void BoxComponent_OnComponentBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function ConZ.LaserTriggerComponent.BoxComponent_OnComponentBeginOverlap
}; 



// Class ConZ.LevelMarkers
// Size: 0x250(Inherited: 0x220) 
struct ALevelMarkers : public AActor
{
	struct TArray<struct FLadderMarker> LadderMarkers;  // 0x220(0x10)
	struct TArray<struct FWindowMarker> WindowMarkers;  // 0x230(0x10)
	char pad_576[16];  // 0x240(0x10)

}; 



// Class ConZ.RecastNavMesh_LargeAnimals
// Size: 0x4D8(Inherited: 0x4D8) 
struct ARecastNavMesh_LargeAnimals : public ARecastNavMesh
{

}; 



// Class ConZ.LevelRadiationSource
// Size: 0x290(Inherited: 0x220) 
struct ALevelRadiationSource : public AActor
{
	struct USceneComponent* _root;  // 0x220(0x8)
	struct UStaticMeshComponent* _epicenter;  // 0x228(0x8)
	struct UStaticMeshComponent* _extents;  // 0x230(0x8)
	struct UStaticMeshComponent* _falloff;  // 0x238(0x8)
	struct FVector _epicenterLocation;  // 0x240(0xC)
	float _epicenterRadius;  // 0x24C(0x4)
	float _maxRadiationAmountIncreaseRate;  // 0x250(0x4)
	float _radiationAmountIncreaseRateFalloffExponent;  // 0x254(0x4)
	float _radiationNoiseAmountScale;  // 0x258(0x4)
	float _radiationNoiseLocationScale;  // 0x25C(0x4)
	char pad_608_1 : 7;  // 0x260(0x1)
	bool _shouldDrawEpicenter : 1;  // 0x260(0x1)
	char pad_609_1 : 7;  // 0x261(0x1)
	bool _shouldDrawExtents : 1;  // 0x261(0x1)
	char pad_610_1 : 7;  // 0x262(0x1)
	bool _shouldDrawRadiationFalloffVisualization : 1;  // 0x262(0x1)
	char pad_611[1];  // 0x263(0x1)
	float _radiationFalloffVisualizationZBias;  // 0x264(0x4)
	struct UMaterialInterface* _radiationFalloffVisualizationMaterial;  // 0x268(0x8)
	char pad_624_1 : 7;  // 0x270(0x1)
	bool _shouldDrawExtentBounds : 1;  // 0x270(0x1)
	char pad_625[7];  // 0x271(0x7)
	struct UTextureRenderTarget2D* _radiationLookupRenderTarget;  // 0x278(0x8)
	struct UMaterialInterface* _radiationLookupRenderMaterial;  // 0x280(0x8)
	struct UMaterialParameterCollection* _radiationMaterialParamCollection;  // 0x288(0x8)

	void RenderRadiationIntensityToLookupTexture(); // Function ConZ.LevelRadiationSource.RenderRadiationIntensityToLookupTexture
}; 



// Class ConZ.LevelUpNotification
// Size: 0x30(Inherited: 0x30) 
struct ULevelUpNotification : public UConZNotification
{

}; 



// Class ConZ.LevelUpNotificationDescription
// Size: 0x50(Inherited: 0x40) 
struct ULevelUpNotificationDescription : public UNotificationDescription
{
	USkill* Skill;  // 0x40(0x8)
	uint8_t  skillLevel;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)

}; 



// Class ConZ.LiftComponent
// Size: 0x220(Inherited: 0x200) 
struct ULiftComponent : public USceneComponent
{
	struct TArray<struct FAerodynamicSurface> AerodynamicSurfaces;  // 0x1F8(0x10)
	struct FVector PropellerLocation;  // 0x208(0xC)
	float AirDensity;  // 0x214(0x4)
	float MaxForceMagnitude;  // 0x218(0x4)
	float WindInfluenceMultiplier;  // 0x21C(0x4)

}; 



// Class ConZ.PrisonerBodyCondition_Test
// Size: 0x150(Inherited: 0xC0) 
struct UPrisonerBodyCondition_Test : public UPrisonerBodyCondition
{
	struct FRuntimeFloatCurve _severityVsElapsedTime;  // 0xC0(0x88)
	char pad_328_1 : 7;  // 0x148(0x1)
	bool _shouldBeRemovedWhenTimeElapses : 1;  // 0x148(0x1)
	char pad_329[3];  // 0x149(0x3)
	float _elapsedTime;  // 0x14C(0x4)

}; 



// Class ConZ.LoadingIconWidget
// Size: 0x260(Inherited: 0x260) 
struct ULoadingIconWidget : public UUserWidget
{

}; 



// Class ConZ.LoadingScreen
// Size: 0x268(Inherited: 0x260) 
struct ULoadingScreen : public UUserWidget
{
	char pad_608[8];  // 0x260(0x8)

}; 



// Class ConZ.WeaponCrossbowAnimInstance
// Size: 0x310(Inherited: 0x300) 
struct UWeaponCrossbowAnimInstance : public UWeaponAnimInstance
{
	char pad_768[8];  // 0x300(0x8)
	char pad_776_1 : 7;  // 0x308(0x1)
	bool _isCocked : 1;  // 0x308(0x1)
	char pad_777[7];  // 0x309(0x7)

}; 



// Class ConZ.PrisonerUIDebugData
// Size: 0x38(Inherited: 0x28) 
struct UPrisonerUIDebugData : public UObject
{
	char pad_40[16];  // 0x28(0x10)

}; 



// Class ConZ.LocationMarker
// Size: 0x220(Inherited: 0x220) 
struct ALocationMarker : public AActor
{

}; 



// Class ConZ.LocationObjective
// Size: 0x370(Inherited: 0x320) 
struct ALocationObjective : public AObjective
{
	struct TSoftObjectPtr<ALocationTrigger> _locationTrigger;  // 0x320(0x28)
	ALocationMarker* _locationMarkerClass;  // 0x348(0x8)
	char pad_848_1 : 7;  // 0x350(0x1)
	bool _shouldRemoveObjectiveItem : 1;  // 0x350(0x1)
	char pad_849[7];  // 0x351(0x7)
	AItem* _objectiveItemToRemove;  // 0x358(0x8)
	struct AActor* _locationMarker;  // 0x360(0x8)
	char pad_872[8];  // 0x368(0x8)

	void OnRep_LocationMarker(); // Function ConZ.LocationObjective.OnRep_LocationMarker
	void OnLocationEnter(struct AActor* OverlapedActor, struct AActor* OtherActor); // Function ConZ.LocationObjective.OnLocationEnter
}; 



// Class ConZ.Lockpickable
// Size: 0x28(Inherited: 0x28) 
struct ULockpickable : public UInterface
{

	void OnLockNeutralized(); // Function ConZ.Lockpickable.OnLockNeutralized
	bool HasLocks(); // Function ConZ.Lockpickable.HasLocks
	bool CanInitiateLockpickingFor(struct APrisoner* Prisoner); // Function ConZ.Lockpickable.CanInitiateLockpickingFor
}; 



// Class ConZ.LockpickingMinigame
// Size: 0x4D0(Inherited: 0x2F8) 
struct ALockpickingMinigame : public AMinigame
{
	struct UStaticMeshComponent* _outerRing;  // 0x2F8(0x8)
	struct UStaticMeshComponent* _movableRing;  // 0x300(0x8)
	struct USceneComponent* _lockpickingSetAnchor;  // 0x308(0x8)
	struct USceneComponent* _lockpickManipulator;  // 0x310(0x8)
	struct USceneComponent* _lockpickAnchor;  // 0x318(0x8)
	struct UStaticMeshComponent* _lockpick;  // 0x320(0x8)
	struct USceneComponent* _tensionToolManipulator;  // 0x328(0x8)
	struct USceneComponent* _tensionToolAnchor;  // 0x330(0x8)
	struct UStaticMeshComponent* _tensionTool;  // 0x338(0x8)
	struct FVector _zoomStartLocation;  // 0x340(0xC)
	struct FVector _zoomEndLocation;  // 0x34C(0xC)
	char pad_856[8];  // 0x358(0x8)
	struct FTransform _protectionParticlesTransform;  // 0x360(0x30)
	struct UCurveFloat* _zoomCurve;  // 0x390(0x8)
	struct UCurveFloat* _fadeCurve;  // 0x398(0x8)
	float _pickBreakingMultiplierForMediumDifficulty;  // 0x3A0(0x4)
	float _pickBreakingMultiplierForHardDifficulty;  // 0x3A4(0x4)
	char pad_936[48];  // 0x3A8(0x30)
	struct UAkAudioEvent* _lockpickingLockpickMovementStartAudioEvent;  // 0x3D8(0x8)
	struct UAkAudioEvent* _lockpickingLockpickMovementStopAudioEvent;  // 0x3E0(0x8)
	struct UAkAudioEvent* _lockpickingLockTensionStartAudioEvent;  // 0x3E8(0x8)
	struct UAkAudioEvent* _lockpickingLockTensionStopAudioEvent;  // 0x3F0(0x8)
	struct UAkAudioEvent* _lockpickingLockTurningStartAudioEvent;  // 0x3F8(0x8)
	struct UAkAudioEvent* _lockpickingLockTurningStopAudioEvent;  // 0x400(0x8)
	struct UAkAudioEvent* _lockpickingSuccessAudioEvent;  // 0x408(0x8)
	struct UAkAudioEvent* _lockpickingFailedAudioEvent;  // 0x410(0x8)
	struct UAkAudioEvent* _lockpickingResetAudioEvent;  // 0x418(0x8)
	char pad_1056[4];  // 0x420(0x4)
	float _rotatingStartAngle;  // 0x424(0x4)
	float _duration;  // 0x428(0x4)
	float _angleTolerance;  // 0x42C(0x4)
	char pad_1072[160];  // 0x430(0xA0)

	void OnTensionToolDestroyed(struct AActor* tensionTool); // Function ConZ.LockpickingMinigame.OnTensionToolDestroyed
	void OnLockpickDestroyed(struct AActor* lockpick); // Function ConZ.LockpickingMinigame.OnLockpickDestroyed
}; 



// Class ConZ.PrisonerActionChangeWeaponFiringMode
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionChangeWeaponFiringMode : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.StandardLockMinigameConfiguration
// Size: 0xA8(Inherited: 0x98) 
struct UStandardLockMinigameConfiguration : public ULockpickingMinigameConfiguration
{
	char pad_152[16];  // 0x98(0x10)

}; 



// Class ConZ.PrisonerActionSpill
// Size: 0x150(Inherited: 0x108) 
struct UPrisonerActionSpill : public UPrisonerAction
{
	char pad_264[72];  // 0x108(0x48)

}; 



// Class ConZ.PrisonerBodySymptomUIData_PhoenixTearsPresence
// Size: 0xB0(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_PhoenixTearsPresence : public UPrisonerBodySymptomUIData
{
	char pad_168[8];  // 0xA8(0x8)

}; 



// Class ConZ.LockData
// Size: 0x98(Inherited: 0x28) 
struct ULockData : public UObject
{
	AMinigame* LockMinigameClass;  // 0x28(0x8)
	ULockpickingMinigameConfiguration* LockMinigameConfigurationClass;  // 0x30(0x8)
	UFailurePenalty* FailurePenaltyClass;  // 0x38(0x8)
	char pad_64_1 : 7;  // 0x40(0x1)
	bool AreFamePointsRequired : 1;  // 0x40(0x1)
	char pad_65_1 : 7;  // 0x41(0x1)
	bool IgnoreLockProtection : 1;  // 0x41(0x1)
	char pad_66_1 : 7;  // 0x42(0x1)
	bool CanBeForceUnlocked : 1;  // 0x42(0x1)
	char pad_67[1];  // 0x43(0x1)
	float ForceUnlockTime;  // 0x44(0x4)
	float TotalCrowbarDamage;  // 0x48(0x4)
	uint8_t  LockDifficulty;  // 0x4C(0x1)
	char pad_77[3];  // 0x4D(0x3)
	float ExperienceOnSuccess;  // 0x50(0x4)
	float ExperienceOnFailure;  // 0x54(0x4)
	struct FText LockedMessage;  // 0x58(0x18)
	struct FText LockpickMessage;  // 0x70(0x18)
	int32_t NumberOfNeutralizationAttempts;  // 0x88(0x4)
	int32_t NumRemainingNeutralizationAttempts;  // 0x8C(0x4)
	float lockHP;  // 0x90(0x4)
	char pad_148[4];  // 0x94(0x4)

}; 



// Class ConZ.DialLockData
// Size: 0xE8(Inherited: 0xB0) 
struct UDialLockData : public UCombinationLockData
{
	int32_t NumberOfWheels;  // 0xB0(0x4)
	char pad_180[4];  // 0xB4(0x4)
	struct UStaticMesh* LockBodyMesh;  // 0xB8(0x8)
	struct UStaticMesh* LockClampMesh;  // 0xC0(0x8)
	struct TArray<struct UStaticMesh*> LockDialMeshes;  // 0xC8(0x10)
	struct FVector WheelUpVector;  // 0xD8(0xC)
	char pad_228[4];  // 0xE4(0x4)

}; 



// Class ConZ.UpgradeItemTag
// Size: 0x38(Inherited: 0x30) 
struct UUpgradeItemTag : public UBaseItemTag
{
	int32_t Price;  // 0x30(0x4)
	char pad_52_1 : 7;  // 0x34(0x1)
	bool AttachAsItem : 1;  // 0x34(0x1)
	char pad_53[3];  // 0x35(0x3)

}; 



// Class ConZ.LockItemTag
// Size: 0x40(Inherited: 0x38) 
struct ULockItemTag : public UUpgradeItemTag
{
	struct ULockData* LockData;  // 0x38(0x8)

}; 



// Class ConZ.LockProtectionTag
// Size: 0x70(Inherited: 0x38) 
struct ULockProtectionTag : public UUpgradeItemTag
{
	struct UParticleSystem* FailureParticles;  // 0x38(0x8)
	struct UAkAudioEvent* FailureAudio;  // 0x40(0x8)
	struct UParticleSystem* FailureParticlesInWorld;  // 0x48(0x8)
	struct UAkAudioEvent* FailureAudioInWorld;  // 0x50(0x8)
	struct FVector FailureParticlesScaleInWorld;  // 0x58(0xC)
	float _baseDamage;  // 0x64(0x4)
	char pad_104[8];  // 0x68(0x8)

	void SetModifiedDamage(float Damage); // Function ConZ.LockProtectionTag.SetModifiedDamage
	void ResetDamage(); // Function ConZ.LockProtectionTag.ResetDamage
	float GetTotalDamage(); // Function ConZ.LockProtectionTag.GetTotalDamage
	float GetBaseDamage(); // Function ConZ.LockProtectionTag.GetBaseDamage
}; 



// Class ConZ.PlantSeedComponent
// Size: 0xD0(Inherited: 0xC8) 
struct UPlantSeedComponent : public UItemComponent
{
	struct UPlantSpecies* _speciesData;  // 0xC8(0x8)

}; 



// Class ConZ.PrisonerBodyCondition_Hypothermia
// Size: 0x108(Inherited: 0xC0) 
struct UPrisonerBodyCondition_Hypothermia : public UPrisonerBodyCondition
{
	float _maxSeverity;  // 0xC0(0x4)
	float _bodyTemperatureToDie;  // 0xC4(0x4)
	float _bodyTemperatureToExist;  // 0xC8(0x4)
	float _bodyTemperatureToRecover;  // 0xCC(0x4)
	char pad_208[4];  // 0xD0(0x4)
	float _bodyTemperatureSampleInterval;  // 0xD4(0x4)
	char pad_216[8];  // 0xD8(0x8)
	float _bodyTemperatureAtUntreatedStart;  // 0xE0(0x4)
	float _bodyTemperatureAtStabilizationStart;  // 0xE4(0x4)
	float _bodyTemperatureAtRecoveryStart;  // 0xE8(0x4)
	uint8_t  _state;  // 0xEC(0x1)
	char pad_237[7];  // 0xED(0x7)
	float _severityRatio;  // 0xF4(0x4)
	float _severityRatioAtUntreatedStart;  // 0xF8(0x4)
	float _severityRatioAtRecoveryStart;  // 0xFC(0x4)
	char pad_256[4];  // 0x100(0x4)
	float _severityRatioInterpSpeed;  // 0x104(0x4)

}; 



// Class ConZ.LockpickingTensionToolItemTag
// Size: 0x70(Inherited: 0x30) 
struct ULockpickingTensionToolItemTag : public UBaseItemTag
{
	struct UStaticMesh* Mesh;  // 0x30(0x8)
	char pad_56[8];  // 0x38(0x8)
	struct FTransform TensionToolTransform;  // 0x40(0x30)

}; 



// Class ConZ.LockpickingWidget
// Size: 0x280(Inherited: 0x278) 
struct ULockpickingWidget : public UMinigameWidget
{
	char pad_632[8];  // 0x278(0x8)

	void ShowInfo(); // Function ConZ.LockpickingWidget.ShowInfo
	void SetLockPickingDifficulty(uint8_t  Value); // Function ConZ.LockpickingWidget.SetLockPickingDifficulty
	void OnSuccess(); // Function ConZ.LockpickingWidget.OnSuccess
	void OnFailure(); // Function ConZ.LockpickingWidget.OnFailure
	void HideInfo(); // Function ConZ.LockpickingWidget.HideInfo
	int32_t GetTensionToolCount(); // Function ConZ.LockpickingWidget.GetTensionToolCount
	float GetRemainingTime(); // Function ConZ.LockpickingWidget.GetRemainingTime
	int32_t GetLockpicksCount(); // Function ConZ.LockpickingWidget.GetLockpicksCount
	int32_t GetFamePoints(); // Function ConZ.LockpickingWidget.GetFamePoints
	float GetDuration(); // Function ConZ.LockpickingWidget.GetDuration
}; 



// Class ConZ.LogoutMessageBox
// Size: 0x2A8(Inherited: 0x298) 
struct ULogoutMessageBox : public UMessageBox
{
	char pad_664[16];  // 0x298(0x10)

}; 



// Class ConZ.PrisonerActionPullGrenadePinDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionPullGrenadePinDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.MenuGameMode
// Size: 0x358(Inherited: 0x308) 
struct AMenuGameMode : public AGameMode
{
	char pad_776[80];  // 0x308(0x50)

}; 



// Class ConZ.MainMenuGameMode
// Size: 0x3A8(Inherited: 0x358) 
struct AMainMenuGameMode : public AMenuGameMode
{
	char pad_856[80];  // 0x358(0x50)

}; 



// Class ConZ.MainMenuHUD
// Size: 0x338(Inherited: 0x310) 
struct AMainMenuHUD : public AHUD
{
	uint8_t  BaseGameModeMenu;  // 0x310(0x1)
	char pad_785[7];  // 0x311(0x7)
	struct UMasterMenu* _masterMenu;  // 0x318(0x8)
	UMasterMenu* _masterMenuClass;  // 0x320(0x8)
	struct UPrisonerCreationUIController* _prisonerCreationUIController;  // 0x328(0x8)
	UPrisonerCreationUIController* _prisonerCreationUIControllerClass;  // 0x330(0x8)

}; 



// Class ConZ.VehicleMarkersRequest
// Size: 0x28(Inherited: 0x28) 
struct UVehicleMarkersRequest : public UPlayerRpcChannelServerRequest
{

}; 



// Class ConZ.PrisonerActionPlantSeedDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionPlantSeedDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.PrisonerVehicleAction_ForceUnmount
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerVehicleAction_ForceUnmount : public UPrisonerAction
{

}; 



// Class ConZ.MasterMenu
// Size: 0x350(Inherited: 0x260) 
struct UMasterMenu : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct UWidgetSwitcher* _menuSwitcher;  // 0x290(0x8)
	struct TMap<uint8_t , UBaseMenu*> _menuClasses;  // 0x298(0x50)
	uint8_t  _menuToPreview;  // 0x2E8(0x1)
	char pad_745[103];  // 0x2E9(0x67)

}; 



// Class ConZ.MathStatics
// Size: 0x28(Inherited: 0x28) 
struct UMathStatics : public UBlueprintFunctionLibrary
{

	struct FRotator NormalizeRotator(struct FRotator& Rotator); // Function ConZ.MathStatics.NormalizeRotator
	bool LineBoxIntersection(struct FVector& HitLocation, struct FBox& Box, struct FVector& Start, struct FVector& End, struct FVector& startToEnd); // Function ConZ.MathStatics.LineBoxIntersection
	bool IsPointWithinCircle(struct FVector2D Point, struct FVector2D circleCenter, float circleRadius); // Function ConZ.MathStatics.IsPointWithinCircle
	struct FVector2D GetRandomPointWithinTwoCircles(struct FVector2D centerA, float radiusA, struct FVector2D centerB, float radiusB); // Function ConZ.MathStatics.GetRandomPointWithinTwoCircles
	struct FVector2D GetRandomPointWithinCircle(struct FVector2D Center, float Radius); // Function ConZ.MathStatics.GetRandomPointWithinCircle
	float GetCircleYForX(float X, struct FVector2D Center, float Radius, bool Up); // Function ConZ.MathStatics.GetCircleYForX
	bool AreCirclesIntersecting(struct FVector2D centerA, float radiusA, struct FVector2D centerB, float radiusB, bool onlyEdge); // Function ConZ.MathStatics.AreCirclesIntersecting
}; 



// Class ConZ.PrisonerBodySymptomCause_BlurredVision
// Size: 0x40(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_BlurredVision : public UPrisonerBodySymptomCause
{
	char pad_48[16];  // 0x30(0x10)

}; 



// Class ConZ.MechanicInstallationService
// Size: 0x38(Inherited: 0x38) 
struct UMechanicInstallationService : public UTraderService
{

}; 



// Class ConZ.MechanoidsManager
// Size: 0x290(Inherited: 0x220) 
struct AMechanoidsManager : public AActor
{
	char pad_544[32];  // 0x220(0x20)
	ADrone* _droneSpawnClass;  // 0x240(0x8)
	float _droneSpawnDistance;  // 0x248(0x4)
	float _droneSpawnHeight;  // 0x24C(0x4)
	float _droneCheckForNearbyPlayerDistance;  // 0x250(0x4)
	struct FDroneVisitTimeData _droneInitialVisitTime;  // 0x254(0x8)
	float _droneVisitClusterRadius;  // 0x25C(0x4)
	float _weightPerSightingMode[3];  // 0x260(0xC)
	struct FDroneVisitTimeData _droneVisitTimeDataPerSightingMode[3];  // 0x26C(0x18)
	char pad_644[12];  // 0x284(0xC)

	void Drone_OnDestroyed(struct AActor* sender); // Function ConZ.MechanoidsManager.Drone_OnDestroyed
}; 



// Class ConZ.MedicalSkill
// Size: 0xB0(Inherited: 0xB0) 
struct UMedicalSkill : public UIntelligenceSkill
{

}; 



// Class ConZ.MeleeCombatComponent
// Size: 0x1B8(Inherited: 0xB0) 
struct UMeleeCombatComponent : public UActorComponent
{
	char pad_176[264];  // 0xB0(0x108)

	void ToggleCombatMode(); // Function ConZ.MeleeCombatComponent.ToggleCombatMode
	void SetIsInCombatMode(bool Value); // Function ConZ.MeleeCombatComponent.SetIsInCombatMode
	void Server_StartMeleeAttack(struct FMeleeAction Action); // Function ConZ.MeleeCombatComponent.Server_StartMeleeAttack
	void Server_EnablePendingBlockOrDodge(bool Value); // Function ConZ.MeleeCombatComponent.Server_EnablePendingBlockOrDodge
	void Server_Dodge(struct FMeleeAction Action); // Function ConZ.MeleeCombatComponent.Server_Dodge
	void NetMulticast_ExecuteMeleeAction(struct FMeleeAction Action); // Function ConZ.MeleeCombatComponent.NetMulticast_ExecuteMeleeAction
	bool IsHoldingBlock(); // Function ConZ.MeleeCombatComponent.IsHoldingBlock
	bool GetIsInCombatMode(); // Function ConZ.MeleeCombatComponent.GetIsInCombatMode
}; 



// Class ConZ.MeleeDetectHitCollisionCapsule
// Size: 0x480(Inherited: 0x470) 
struct UMeleeDetectHitCollisionCapsule : public UCapsuleComponent
{
	uint8_t  DetectHitCollisionType;  // 0x470(0x1)
	char pad_1137[15];  // 0x471(0xF)

}; 



// Class ConZ.PlaceableOnRackItemTag
// Size: 0x38(Inherited: 0x30) 
struct UPlaceableOnRackItemTag : public UBaseItemTag
{
	struct FName SocketName;  // 0x30(0x8)

}; 



// Class ConZ.MeleeInterface
// Size: 0x28(Inherited: 0x28) 
struct UMeleeInterface : public UInterface
{

	void OnBeingAttackedByMelee(struct FAttackedByMeleeData& Data); // Function ConZ.MeleeInterface.OnBeingAttackedByMelee
	bool CheckMeleeAttackCapsuleCollision(struct FCheckMeleeAttackCapsuleCollisionData& Data); // Function ConZ.MeleeInterface.CheckMeleeAttackCapsuleCollision
	bool CanHoldBlock(); // Function ConZ.MeleeInterface.CanHoldBlock
	bool CanBeAttackedByMelee(); // Function ConZ.MeleeInterface.CanBeAttackedByMelee
}; 



// Class ConZ.WeaponAmmoDisplayWidget
// Size: 0x270(Inherited: 0x260) 
struct UWeaponAmmoDisplayWidget : public UUserWidget
{
	struct UTextBlock* _ammoCountText;  // 0x260(0x8)
	struct UImage* _ammoIcon;  // 0x268(0x8)

}; 



// Class ConZ.MeleeStatics
// Size: 0x28(Inherited: 0x28) 
struct UMeleeStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.MeleeWeaponItemTag
// Size: 0x38(Inherited: 0x30) 
struct UMeleeWeaponItemTag : public UBaseItemTag
{
	float CombatAnimationPlayRateModifier;  // 0x30(0x4)
	float StrengthBelowWhichCombatPerformanceBeginsToDrop;  // 0x34(0x4)

}; 



// Class ConZ.MenuButton
// Size: 0x418(Inherited: 0x260) 
struct UMenuButton : public UUserWidget
{
	char pad_608[80];  // 0x260(0x50)
	char pad_688_1 : 7;  // 0x2B0(0x1)
	bool PreviewSelectedState : 1;  // 0x2B0(0x1)
	char pad_689[7];  // 0x2B1(0x7)
	struct UImage* _backgroundFocusImage;  // 0x2B8(0x8)
	struct UTextBlock* _text;  // 0x2C0(0x8)
	struct USizeBox* _sizeBox;  // 0x2C8(0x8)
	struct FText _initialTitle;  // 0x2D0(0x18)
	struct FTabTextStyle _selectedTextStyle;  // 0x2E8(0x98)
	struct FTabTextStyle _deselectedTextStyle;  // 0x380(0x98)

}; 



// Class ConZ.PrisonerActionRepairVehicleDescription
// Size: 0x58(Inherited: 0x50) 
struct UPrisonerActionRepairVehicleDescription : public UPrisonerActionRepairDescription
{
	char pad_80[8];  // 0x50(0x8)

}; 



// Class ConZ.MenuCameraController
// Size: 0x368(Inherited: 0x220) 
struct AMenuCameraController : public AActor
{
	struct ACineCameraActor* _camera;  // 0x220(0x8)
	struct USplineComponent* _positionSpline;  // 0x228(0x8)
	struct USplineComponent* _viewTargetSpline;  // 0x230(0x8)
	struct FVector2D _mouseBasedRotationIntensity;  // 0x238(0x8)
	struct FRuntimeFloatCurve _positionWeightCurve;  // 0x240(0x88)
	struct FRuntimeFloatCurve _viewTargetWeightCurve;  // 0x2C8(0x88)
	float _interpolationSpeed;  // 0x350(0x4)
	float _mouseTrackingSpeed;  // 0x354(0x4)
	char pad_856[16];  // 0x358(0x10)

}; 



// Class ConZ.PrisonerActionDrainVehicleFuelIntoItemDescription
// Size: 0x70(Inherited: 0x38) 
struct UPrisonerActionDrainVehicleFuelIntoItemDescription : public UPrisonerActionDescription
{
	char pad_56[56];  // 0x38(0x38)

}; 



// Class ConZ.MenuHelpers
// Size: 0x68(Inherited: 0x30) 
struct UMenuHelpers : public UDataAsset
{
	UUserWidget* MainMenuClass;  // 0x30(0x8)
	UUserWidget* ServerBrowserClass;  // 0x38(0x8)
	UUserWidget* OptionsClass;  // 0x40(0x8)
	UUserWidget* AdvancedOptionsClass;  // 0x48(0x8)
	UUserWidget* CharacterCreationClass;  // 0x50(0x8)
	UUserWidget* CharacterSelectionClass;  // 0x58(0x8)
	UUserWidget* CharacterCreationSecondIterationClass;  // 0x60(0x8)

}; 



// Class ConZ.MenuPlayerController
// Size: 0x570(Inherited: 0x570) 
struct AMenuPlayerController : public APlayerController
{

	void InputComponent_MouseReleased(); // Function ConZ.MenuPlayerController.InputComponent_MouseReleased
	void InputComponent_MousePressed(); // Function ConZ.MenuPlayerController.InputComponent_MousePressed
}; 



// Class ConZ.Metabolism_ICU_GraphWidget_EKG
// Size: 0x248(Inherited: 0x218) 
struct UMetabolism_ICU_GraphWidget_EKG : public UMetabolism_ICU_GraphWidget
{
	struct UCurveFloat* TimeStretchCurveCurve;  // 0x218(0x8)
	struct UCurveFloat* HeartbeatIrregularitiesCurve;  // 0x220(0x8)
	char pad_552[32];  // 0x228(0x20)

}; 



// Class ConZ.Metabolism_ICU_GraphWidget_ST
// Size: 0x238(Inherited: 0x218) 
struct UMetabolism_ICU_GraphWidget_ST : public UMetabolism_ICU_GraphWidget
{
	struct UCurveFloat* TimeStretchCurveCurve;  // 0x218(0x8)
	char pad_544[24];  // 0x220(0x18)

}; 



// Class ConZ.VehicleAttachment_Alternator
// Size: 0x320(Inherited: 0x310) 
struct UVehicleAttachment_Alternator : public UVehicleAttachment
{
	struct FVehicleAttachmentAlternatorSetup AlternatorSetup;  // 0x310(0x8)
	char pad_792[8];  // 0x318(0x8)

}; 



// Class ConZ.Metabolism_ICU_GraphWidget_TEMP
// Size: 0x220(Inherited: 0x218) 
struct UMetabolism_ICU_GraphWidget_TEMP : public UMetabolism_ICU_GraphWidget
{
	char pad_536[8];  // 0x218(0x8)

}; 



// Class ConZ.Metabolism_BCU_ICU_StatsPanel
// Size: 0x288(Inherited: 0x260) 
struct UMetabolism_BCU_ICU_StatsPanel : public UUserWidget
{
	struct UMetabolism_ICU_EKG_Stats* Stats_EKG;  // 0x260(0x8)
	struct UMetabolism_ICU_ST_Stats* Stats_ST;  // 0x268(0x8)
	struct UMetabolism_ICU_SPO2_Stats* Stats_SPO2;  // 0x270(0x8)
	struct UMetabolism_ICU_RR_Stats* Stats_RR;  // 0x278(0x8)
	struct UMetabolism_ICU_TEMP_Stats* Stats_TEMP;  // 0x280(0x8)

}; 



// Class ConZ.Metabolism_BCU_ICU_Monitor
// Size: 0x2A0(Inherited: 0x260) 
struct UMetabolism_BCU_ICU_Monitor : public UUserWidget
{
	struct UCurveFloat* TimeStretchCurveCurve;  // 0x260(0x8)
	struct UCheckBox* _chbSwitchICUState;  // 0x268(0x8)
	struct UWidgetSwitcher* _icu_Switcher;  // 0x270(0x8)
	struct UMetabolism_BCU_ICU_StatsPanel* _icu_Collapsed;  // 0x278(0x8)
	struct UMetabolism_BCU_ICU_StatsPanel* _icu_Expanded;  // 0x280(0x8)
	char pad_648[24];  // 0x288(0x18)

	void OnICUStateChanged(bool isCollapsed); // Function ConZ.Metabolism_BCU_ICU_Monitor.OnICUStateChanged
}; 



// Class ConZ.PrisonerActionEnterCombatMode
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionEnterCombatMode : public UPrisonerAction
{

}; 



// Class ConZ.Metabolism_ICU_ST_Stats
// Size: 0x288(Inherited: 0x278) 
struct UMetabolism_ICU_ST_Stats : public UMetabolism_ICU_Expandable_Stats
{
	struct UTextBlock* _bloodPressure_mmHg;  // 0x278(0x8)
	struct UTextBlock* _bloodPressure_kPa;  // 0x280(0x8)

}; 



// Class ConZ.ZombieKamikazeComponent
// Size: 0x1F0(Inherited: 0xB0) 
struct UZombieKamikazeComponent : public UActorComponent
{
	struct AConZCharacter* _owningCharacter;  // 0xB0(0x8)
	float _beepingDistance;  // 0xB8(0x4)
	float _explosionDistance;  // 0xBC(0x4)
	float _autoExplosionTime;  // 0xC0(0x4)
	float _postMortemExplosionTime;  // 0xC4(0x4)
	float _criticalPostMortemExplosionTime;  // 0xC8(0x4)
	char pad_204[4];  // 0xCC(0x4)
	float _baseDamage;  // 0xD0(0x4)
	float _minimumDamage;  // 0xD4(0x4)
	float _damageInnerRadius;  // 0xD8(0x4)
	float _damageOuterRadius;  // 0xDC(0x4)
	float _damageFalloff;  // 0xE0(0x4)
	char pad_228[4];  // 0xE4(0x4)
	struct FTargetTypeDamageMultiplier _targetTypeMultiplier;  // 0xE8(0x10)
	float _netCullDistanceSquaredMeters;  // 0xF8(0x4)
	char pad_252[4];  // 0xFC(0x4)
	struct UAkAudioEvent* _explosionAudioEvent;  // 0x100(0x8)
	struct UAkAudioEvent* _beepingStartAudioEvent;  // 0x108(0x8)
	struct UAkAudioEvent* _beepingEndAudioEvent;  // 0x110(0x8)
	struct UAkComponent* _beepingAudioComponent;  // 0x118(0x8)
	struct UParticleSystem* _explosionPS;  // 0x120(0x8)
	UMatineeCameraShake* _explosionCameraShakeClass;  // 0x128(0x8)
	struct UMaterialInterface* _sootDecal;  // 0x130(0x8)
	float _minSootDecalSize;  // 0x138(0x4)
	float _maxSootDecalSize;  // 0x13C(0x4)
	float _minSootScalarParamValue;  // 0x140(0x4)
	float _maxSootScalarParamValue;  // 0x144(0x4)
	struct FName _sootScalarParameterValueName;  // 0x148(0x8)
	float _decalsLifeSpan;  // 0x150(0x4)
	float _decalFadeFactor;  // 0x154(0x4)
	int32_t _maximumNumberOfChunksSpawned;  // 0x158(0x4)
	float _minVelocityMagnitude;  // 0x15C(0x4)
	float _maxVelocityMagnitude;  // 0x160(0x4)
	float _velocityHalfAngle;  // 0x164(0x4)
	float _timeAfterChunksAreDeleted;  // 0x168(0x4)
	char pad_364[4];  // 0x16C(0x4)
	struct TArray<struct UStaticMesh*> _bodyPartChunks;  // 0x170(0x10)
	AMinigame* _minigameClass;  // 0x180(0x8)
	UBaseItemTag* _minigameToolTag;  // 0x188(0x8)
	AZombieKamikazeDummyTrap* _dummyTrapItemClass;  // 0x190(0x8)
	struct TArray<UItemSpawnerPreset*> _spawnerPresets;  // 0x198(0x10)
	struct TArray<UItemSpawnerPreset2*> _spawnerPresets2;  // 0x1A8(0x10)
	char pad_440[10];  // 0x1B8(0xA)
	char pad_450_1 : 7;  // 0x1C2(0x1)
	bool _isCriticalPostMortemPhase : 1;  // 0x1C2(0x1)
	char pad_451_1 : 7;  // 0x1C3(0x1)
	bool _isDisarmed : 1;  // 0x1C3(0x1)
	char pad_452[28];  // 0x1C4(0x1C)
	char pad_480_1 : 7;  // 0x1E0(0x1)
	bool _shouldExplodeOnDeath : 1;  // 0x1E0(0x1)
	char pad_481[3];  // 0x1E1(0x3)
	float _dummyTrapItemDestroyDelay;  // 0x1E4(0x4)
	char pad_488[8];  // 0x1E8(0x8)

	void OnRep_IsDisarmed(); // Function ConZ.ZombieKamikazeComponent.OnRep_IsDisarmed
	void OnRep_IsCriticalPostMortemPhase(); // Function ConZ.ZombieKamikazeComponent.OnRep_IsCriticalPostMortemPhase
	void NetMulticast_HandleExplosion(); // Function ConZ.ZombieKamikazeComponent.NetMulticast_HandleExplosion
	void Explode(); // Function ConZ.ZombieKamikazeComponent.Explode
	void Disarm(); // Function ConZ.ZombieKamikazeComponent.Disarm
}; 



// Class ConZ.WeaponStateBowActive
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateBowActive : public UWeaponState
{

}; 



// Class ConZ.MetabolismAdvancedProgressBar
// Size: 0x498(Inherited: 0x260) 
struct UMetabolismAdvancedProgressBar : public UUserWidget
{
	struct FText Title;  // 0x260(0x18)
	struct URetainerBox* _progressBarEffect;  // 0x278(0x8)
	struct UTextBlock* _titleText;  // 0x280(0x8)
	struct UTextBlock* _valueText;  // 0x288(0x8)
	struct USizeBox* _apbSize;  // 0x290(0x8)
	struct UImage* _progressBarBackground;  // 0x298(0x8)
	struct FText _defaultValue;  // 0x2A0(0x18)
	struct FMetabolismAPBFontStyle _fontStyle;  // 0x2B8(0x30)
	struct FMargin _progressBarPadding;  // 0x2E8(0x10)
	struct FVector2D _size;  // 0x2F8(0x8)
	struct FSlateBrush _backgroundImageBrush;  // 0x300(0x88)
	struct FDataTableRowHandle _normalBackgroundColor;  // 0x388(0x10)
	struct FDataTableRowHandle _normalForegroundColor;  // 0x398(0x10)
	struct FDataTableRowHandle _normalTextColorEmpty;  // 0x3A8(0x10)
	struct FDataTableRowHandle _normalTextColorFilled;  // 0x3B8(0x10)
	struct FDataTableRowHandle _alertedBackgroundColor;  // 0x3C8(0x10)
	struct FDataTableRowHandle _alertedForegroundColor;  // 0x3D8(0x10)
	struct FDataTableRowHandle _alertedTextColorEmpty;  // 0x3E8(0x10)
	struct FDataTableRowHandle _alertedTextColorFilled;  // 0x3F8(0x10)
	struct FDataTableRowHandle _badBackgroundColor;  // 0x408(0x10)
	struct FDataTableRowHandle _badForegroundColor;  // 0x418(0x10)
	struct FDataTableRowHandle _badTextColorEmpty;  // 0x428(0x10)
	struct FDataTableRowHandle _badTextColorFilled;  // 0x438(0x10)
	struct FDataTableRowHandle _goodBackgroundColor;  // 0x448(0x10)
	struct FDataTableRowHandle _goodForegroundColor;  // 0x458(0x10)
	struct FDataTableRowHandle _goodTextColorEmpty;  // 0x468(0x10)
	struct FDataTableRowHandle _goodTextColorFilled;  // 0x478(0x10)
	char pad_1160[16];  // 0x488(0x10)

}; 



// Class ConZ.MetabolismBasicInfoPanel
// Size: 0x2A8(Inherited: 0x260) 
struct UMetabolismBasicInfoPanel : public UUserWidget
{
	struct UMetabolismCurrentStatLight* _stat_Age;  // 0x260(0x8)
	struct UMetabolismCurrentStatLight* _stat_Teeth;  // 0x268(0x8)
	struct UMetabolismCurrentStatLight* _stat_Lifetime;  // 0x270(0x8)
	struct UMetabolismCurrentStatLight* _stat_BloodType;  // 0x278(0x8)
	struct UMetabolismCurrentStatLight* _stat_Weight;  // 0x280(0x8)
	struct UMetabolismCurrentStatLight* _stat_BloodVolume;  // 0x288(0x8)
	struct UMetabolismCurrentStatLight* _stat_Health;  // 0x290(0x8)
	struct UMetabolismCurrentStatLight* _stat_Temperature;  // 0x298(0x8)
	char pad_672[8];  // 0x2A0(0x8)

}; 



// Class ConZ.SpawnChoiceWidget
// Size: 0x2E0(Inherited: 0x260) 
struct USpawnChoiceWidget : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct UImage* _progressBar;  // 0x270(0x8)
	struct UMaterialInstanceDynamic* _progressMaterial;  // 0x278(0x8)
	struct UButton* _choiceButton;  // 0x280(0x8)
	struct UTextBlock* _optionText;  // 0x288(0x8)
	struct UTextBlock* _prohibitedText;  // 0x290(0x8)
	struct UTextBlock* _priceText;  // 0x298(0x8)
	struct UImage* SelectionArrow;  // 0x2A0(0x8)
	struct UBorder* Border_1;  // 0x2A8(0x8)
	float _borderFill;  // 0x2B0(0x4)
	int32_t _price;  // 0x2B4(0x4)
	uint8_t  _priceCurrency;  // 0x2B8(0x1)
	char pad_697[7];  // 0x2B9(0x7)
	struct FText _optionTextBlockText;  // 0x2C0(0x18)
	char pad_728[8];  // 0x2D8(0x8)

	void Update(); // Function ConZ.SpawnChoiceWidget.Update
	void OnChoiceButtonClicked(); // Function ConZ.SpawnChoiceWidget.OnChoiceButtonClicked
}; 



// Class ConZ.MetabolismBodyEffectProgressBar
// Size: 0x330(Inherited: 0x260) 
struct UMetabolismBodyEffectProgressBar : public UUserWidget
{
	char pad_608[40];  // 0x260(0x28)
	struct UMetabolismAdvancedProgressBar* _apb;  // 0x288(0x8)
	struct UWidget* _lifeThreateningSymbol;  // 0x290(0x8)
	struct UImage* _infectedSymbol;  // 0x298(0x8)
	struct UImage* _circularProgressBar;  // 0x2A0(0x8)
	struct UCheckBox* _interactionButton;  // 0x2A8(0x8)
	struct FDataTableRowHandle _circularProgressBarColorFront;  // 0x2B0(0x10)
	struct FDataTableRowHandle _circularProgressBarColorBack;  // 0x2C0(0x10)
	float _hoveredOpacity;  // 0x2D0(0x4)
	float _unhoveredOpacity;  // 0x2D4(0x4)
	float _otherIsSelectedUnhoveredOpacity;  // 0x2D8(0x4)
	float _otherIsSelectedHoveredOpacity;  // 0x2DC(0x4)
	float _infectedOpacity;  // 0x2E0(0x4)
	char pad_740[76];  // 0x2E4(0x4C)

	void OnInteractionButtonClicked(bool IsChecked); // Function ConZ.MetabolismBodyEffectProgressBar.OnInteractionButtonClicked
	struct UWidget* GetToolTipWidget(); // Function ConZ.MetabolismBodyEffectProgressBar.GetToolTipWidget
}; 



// Class ConZ.MetabolismBodyOverviewPanel
// Size: 0x570(Inherited: 0x260) 
struct UMetabolismBodyOverviewPanel : public UUserWidget
{
	struct UScrollBox* _symptomsScrollBox;  // 0x260(0x8)
	struct UMetabolismHumanBodyPanel* _humanBodyPanel;  // 0x268(0x8)
	struct URichTextBlock* _symptomsBreadcrumb;  // 0x270(0x8)
	struct UMetabolismTissueGroupCheckbox* _checkboxMuscles;  // 0x278(0x8)
	struct UMetabolismTissueGroupCheckbox* _checkboxBones;  // 0x280(0x8)
	struct UMetabolismTissueGroupCheckbox* _checkboxOrgans;  // 0x288(0x8)
	struct UMetabolismRadialProgressBar* _rpb_Hitpoints;  // 0x290(0x8)
	struct UMetabolismRadialProgressBar* _rpb_Blood;  // 0x298(0x8)
	struct UOverlay* _treatmentMainOverlay;  // 0x2A0(0x8)
	struct UButton* _clearSelectionButton;  // 0x2A8(0x8)
	struct UOverlay* _selectedItemsOverlay;  // 0x2B0(0x8)
	struct UOverlay* _itemSelectionReminderOverlay;  // 0x2B8(0x8)
	struct UMetabolismLightItemDisplayPanel* _selectedItemsPanel;  // 0x2C0(0x8)
	struct UMetabolismBodyEffectProgressBar* _activeConditionProgressBar;  // 0x2C8(0x8)
	struct UButton* _treatButton;  // 0x2D0(0x8)
	UMetabolismSymptomTitle* _symptomWidgetClass;  // 0x2D8(0x8)
	struct FMetabolismRadialProgressBarColorScheme _lowHPColorScheme;  // 0x2E0(0x80)
	struct FMetabolismRadialProgressBarColorScheme _midHPColorScheme;  // 0x360(0x80)
	struct FMetabolismRadialProgressBarColorScheme _highHPColorScheme;  // 0x3E0(0x80)
	struct FMetabolismRadialProgressBarColorScheme _lowBloodOxygenationColorScheme;  // 0x460(0x80)
	struct FMetabolismRadialProgressBarColorScheme _highBloodOxygenationColorScheme;  // 0x4E0(0x80)
	char pad_1376[16];  // 0x560(0x10)

	void OnTreat(); // Function ConZ.MetabolismBodyOverviewPanel.OnTreat
	void OnClearSelection(); // Function ConZ.MetabolismBodyOverviewPanel.OnClearSelection
}; 



// Class ConZ.PrisonerActionRussianRoulette
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionRussianRoulette : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.MetabolismBodyStatsPanel
// Size: 0x2D8(Inherited: 0x260) 
struct UMetabolismBodyStatsPanel : public UUserWidget
{
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Protein;  // 0x260(0x8)
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Carbs;  // 0x268(0x8)
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Fat;  // 0x270(0x8)
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Minerals;  // 0x278(0x8)
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Vitamins;  // 0x280(0x8)
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Water;  // 0x288(0x8)
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Alcohol;  // 0x290(0x8)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Bones;  // 0x298(0x8)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Blood;  // 0x2A0(0x8)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Intestines;  // 0x2A8(0x8)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Skin;  // 0x2B0(0x8)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Organs;  // 0x2B8(0x8)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Fat;  // 0x2C0(0x8)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Muscle;  // 0x2C8(0x8)
	char pad_720[8];  // 0x2D0(0x8)

}; 



// Class ConZ.MetabolismContainerSetDisplayPanel
// Size: 0x2B0(Inherited: 0x260) 
struct UMetabolismContainerSetDisplayPanel : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct UTabGroup* _containerButtons;  // 0x290(0x8)
	struct UMetabolismLightItemDisplayPanel* _containerContents;  // 0x298(0x8)
	UContainerDisplay* _containerButtonClass;  // 0x2A0(0x8)
	float _interChildDistrance;  // 0x2A8(0x4)
	char pad_684[4];  // 0x2AC(0x4)

}; 



// Class ConZ.MetabolismCurrentStatDark
// Size: 0x2E0(Inherited: 0x260) 
struct UMetabolismCurrentStatDark : public UUserWidget
{
	struct FText Title;  // 0x260(0x18)
	struct UImage* _titleBackground;  // 0x278(0x8)
	struct UTextBlock* _title;  // 0x280(0x8)
	struct UImage* _valueBackground;  // 0x288(0x8)
	struct UTextBlock* _value;  // 0x290(0x8)
	struct FDataTableRowHandle _titleBackgroundColor;  // 0x298(0x10)
	struct FDataTableRowHandle _titleForegroundColor;  // 0x2A8(0x10)
	struct FDataTableRowHandle _valueBackgroundColor;  // 0x2B8(0x10)
	struct FDataTableRowHandle _valueForegroundColor;  // 0x2C8(0x10)
	char pad_728[8];  // 0x2D8(0x8)

}; 



// Class ConZ.ZombieAIController2
// Size: 0x678(Inherited: 0x328) 
struct AZombieAIController2 : public AAIController
{
	struct UAISenseConfig_Sight* _lyingSightSenseConfig;  // 0x328(0x8)
	struct UAISenseConfig_Hearing* _lyingHearingSenseConfig;  // 0x330(0x8)
	struct UAISenseConfig_Damage* _lyingDamageSenseConfig;  // 0x338(0x8)
	float _stateMachineTickIntervalWhenInRelaxedState;  // 0x340(0x4)
	char pad_836_1 : 7;  // 0x344(0x1)
	bool _shouldWander : 1;  // 0x344(0x1)
	char pad_837_1 : 7;  // 0x345(0x1)
	bool _shouldWanderAroundWanderOrigin : 1;  // 0x345(0x1)
	char pad_838[2];  // 0x346(0x2)
	float _maxWanderingRadius;  // 0x348(0x4)
	float _minTimeToRestBeforeWandering;  // 0x34C(0x4)
	float _maxTimeToRestBeforeWandering;  // 0x350(0x4)
	char pad_852_1 : 7;  // 0x354(0x1)
	bool _shouldBecomeAlertedBySight : 1;  // 0x354(0x1)
	char pad_853[3];  // 0x355(0x3)
	float _minLineOfSightDurationToBecomeAlerted;  // 0x358(0x4)
	float _maxLineOfSightDurationToBecomeAlerted;  // 0x35C(0x4)
	char pad_864_1 : 7;  // 0x360(0x1)
	bool _shouldBecomeAlertedByHearing : 1;  // 0x360(0x1)
	char pad_865[3];  // 0x361(0x3)
	float _minDelayBeforeBecomingAlertedByHearing;  // 0x364(0x4)
	float _maxDelayBeforeBecomingAlertedByHearing;  // 0x368(0x4)
	char pad_876[4];  // 0x36C(0x4)
	struct UAISenseConfig_Sight* _relaxedIdleSightSenseConfig;  // 0x370(0x8)
	struct UAISenseConfig_Hearing* _relaxedIdleHearingSenseConfig;  // 0x378(0x8)
	struct UAISenseConfig_Damage* _relaxedIdleDamageSenseConfig;  // 0x380(0x8)
	struct UAISenseConfig_Sight* _relaxedWanderSightSenseConfig;  // 0x388(0x8)
	struct UAISenseConfig_Hearing* _relaxedWanderHearingSenseConfig;  // 0x390(0x8)
	struct UAISenseConfig_Damage* _relaxedWanderDamageSenseConfig;  // 0x398(0x8)
	float _stateMachineTickIntervalWhenInAlertedState;  // 0x3A0(0x4)
	float _minObservingForLineOfSightStartDelay;  // 0x3A4(0x4)
	float _maxObservingForLineOfSightStartDelay;  // 0x3A8(0x4)
	float _minInvestigateStimulusDelay;  // 0x3AC(0x4)
	float _maxInvestigateStimulusDelay;  // 0x3B0(0x4)
	float _minEnterCombatModeDelay;  // 0x3B4(0x4)
	float _maxEnterCombatModeDelay;  // 0x3B8(0x4)
	float _distanceAtWhichToIgnoreEnterCombatModeDelay;  // 0x3BC(0x4)
	struct UCurveVector* _observingCurve;  // 0x3C0(0x8)
	float _observingCurvePeriod;  // 0x3C8(0x4)
	float _observingCurveMaxYaw;  // 0x3CC(0x4)
	float _observingCurveMaxPitch;  // 0x3D0(0x4)
	char pad_980[4];  // 0x3D4(0x4)
	struct UAISenseConfig_Sight* _alertedSightSenseConfig;  // 0x3D8(0x8)
	struct UAISenseConfig_Hearing* _alertedHearingSenseConfig;  // 0x3E0(0x8)
	struct UAISenseConfig_Damage* _alertedDamageSenseConfig;  // 0x3E8(0x8)
	float _stateMachineTickIntervalWhenInCombatState;  // 0x3F0(0x4)
	char pad_1012_1 : 7;  // 0x3F4(0x1)
	bool _shouldAttack : 1;  // 0x3F4(0x1)
	char pad_1013_1 : 7;  // 0x3F5(0x1)
	bool _shouldBackOffIfTooCloseToFoe : 1;  // 0x3F5(0x1)
	char pad_1014_1 : 7;  // 0x3F6(0x1)
	bool _shouldPredictFoeLocation : 1;  // 0x3F6(0x1)
	char pad_1015[1];  // 0x3F7(0x1)
	struct UCurveFloat* _foeLocationPredictionStrengthVsDistanceToFoe;  // 0x3F8(0x8)
	float _attackDistance;  // 0x400(0x4)
	int32_t _minNumConsecutiveInflictedMeleeHitsToIntimidate;  // 0x404(0x4)
	int32_t _maxNumConsecutiveInflictedMeleeHitsToIntimidate;  // 0x408(0x4)
	float _minTimeBeforeFoeIsConsideredUnreachable;  // 0x40C(0x4)
	float _maxTimeBeforeFoeIsConsideredUnreachable;  // 0x410(0x4)
	float _minTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate;  // 0x414(0x4)
	float _maxTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate;  // 0x418(0x4)
	float _costOfJumpingInPathLength;  // 0x41C(0x4)
	float _minPathPointDistance;  // 0x420(0x4)
	struct FDetectionDelayTimerData _detectionDelayTimerData;  // 0x424(0x10)
	char pad_1076[4];  // 0x434(0x4)
	struct AZombie2* _zombie;  // 0x438(0x8)
	char pad_1088[568];  // 0x440(0x238)

}; 



// Class ConZ.PrisonerForeignSubstance_Toxins
// Size: 0x140(Inherited: 0x140) 
struct UPrisonerForeignSubstance_Toxins : public UPrisonerForeignSubstance
{

}; 



// Class ConZ.WeaponAttachmentBayonet
// Size: 0x930(Inherited: 0x930) 
struct AWeaponAttachmentBayonet : public AWeaponAttachment
{

}; 



// Class ConZ.MetabolismDigestionPanel
// Size: 0x298(Inherited: 0x260) 
struct UMetabolismDigestionPanel : public UUserWidget
{
	UUserWidget* FoodWidgetClass;  // 0x260(0x8)
	struct UMetabolismRadialProgressBar* _rpb_Stomach;  // 0x268(0x8)
	struct UMetabolismRadialProgressBar* _rpb_Intestine;  // 0x270(0x8)
	struct UMetabolismRadialProgressBar* _rpb_Colon;  // 0x278(0x8)
	struct UMetabolismRadialProgressBar* _rpb_Bladder;  // 0x280(0x8)
	struct UWrapBox* _foods;  // 0x288(0x8)
	char pad_656[8];  // 0x290(0x8)

}; 



// Class ConZ.MetabolismLeftPanel
// Size: 0x2D8(Inherited: 0x260) 
struct UMetabolismLeftPanel : public UUserWidget
{
	struct UTabGroup* _tabRow;  // 0x260(0x8)
	struct UWidgetSwitcher* _mainTabSwitcher;  // 0x268(0x8)
	struct UMetabolismStatsPanel* _statsPanel;  // 0x270(0x8)
	struct FText _statsName;  // 0x278(0x18)
	struct UMetabolismHealthPanel* _healthPanel;  // 0x290(0x8)
	struct FText _healthName;  // 0x298(0x18)
	UTabButtonAlertable* _buttonWidgetClass;  // 0x2B0(0x8)
	char pad_696[32];  // 0x2B8(0x20)

}; 



// Class ConZ.PrisonerActionCraftItem
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionCraftItem : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.MetabolismLightItemDisplayPanel
// Size: 0x2A0(Inherited: 0x260) 
struct UMetabolismLightItemDisplayPanel : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UPanelWidget* _itemDisplayContainer;  // 0x278(0x8)
	UItemLightDisplay* _itemDisplayClass;  // 0x280(0x8)
	float _interChildDistrance;  // 0x288(0x4)
	char pad_652[20];  // 0x28C(0x14)

}; 



// Class ConZ.MetabolismMacronutrientReserve
// Size: 0x298(Inherited: 0x260) 
struct UMetabolismMacronutrientReserve : public UUserWidget
{
	struct FText Title;  // 0x260(0x18)
	struct UTextBlock* _title;  // 0x278(0x8)
	struct UTextBlock* _value;  // 0x280(0x8)
	struct UMetabolismSegmentedProgressBar* _spb_ReservesBar;  // 0x288(0x8)
	char pad_656[8];  // 0x290(0x8)

}; 



// Class ConZ.MetabolismMacronutrientReservesPanel
// Size: 0x2A0(Inherited: 0x260) 
struct UMetabolismMacronutrientReservesPanel : public UUserWidget
{
	struct UMetabolismMacronutrientReserve* _reserve_Protein;  // 0x260(0x8)
	struct UMetabolismMacronutrientReserve* _reserve_Carbs;  // 0x268(0x8)
	struct UMetabolismMacronutrientReserve* _reserve_Fat;  // 0x270(0x8)
	struct UMetabolismMacronutrientReserve* _reserve_Fiber;  // 0x278(0x8)
	struct UMetabolismMacronutrientReserve* _reserve_Sugar;  // 0x280(0x8)
	struct UMetabolismMacronutrientReserve* _reserve_SaturatedFat;  // 0x288(0x8)
	struct UMetabolismMacronutrientReserve* _reserve_Alcohol;  // 0x290(0x8)
	char pad_664[8];  // 0x298(0x8)

}; 



// Class ConZ.PrisonerAnimInstance_Fishing
// Size: 0x2E0(Inherited: 0x2C0) 
struct UPrisonerAnimInstance_Fishing : public UAnimInstance
{
	float _aimOffsetYaw;  // 0x2B8(0x4)
	float _aimOffsetPitch;  // 0x2BC(0x4)
	char pad_712_1 : 7;  // 0x2C8(0x1)
	bool _isActivelyFishing : 1;  // 0x2C0(0x1)
	char pad_713_1 : 7;  // 0x2C9(0x1)
	bool _castingFinished : 1;  // 0x2C1(0x1)
	char pad_714_1 : 7;  // 0x2CA(0x1)
	bool _floaterHitWaterSurface : 1;  // 0x2C2(0x1)
	char pad_715_1 : 7;  // 0x2CB(0x1)
	bool _fishIsHooked : 1;  // 0x2C3(0x1)
	uint8_t  _stance;  // 0x2C4(0x1)
	char pad_717_1 : 7;  // 0x2CD(0x1)
	bool _isInFirstPersonView : 1;  // 0x2C5(0x1)
	struct FRotator _armsLagRotation;  // 0x2C8(0xC)
	float _armsLagPitch;  // 0x2D4(0x4)
	float _armsLagYaw;  // 0x2D8(0x4)

}; 



// Class ConZ.MetabolismMineralsPanel
// Size: 0x2B8(Inherited: 0x260) 
struct UMetabolismMineralsPanel : public UUserWidget
{
	struct UMetabolismVitaminAndMineralReserve* _mineral_Ca;  // 0x260(0x8)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Fe;  // 0x268(0x8)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Mg;  // 0x270(0x8)
	struct UMetabolismVitaminAndMineralReserve* _mineral_P;  // 0x278(0x8)
	struct UMetabolismVitaminAndMineralReserve* _mineral_K;  // 0x280(0x8)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Zn;  // 0x288(0x8)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Cu;  // 0x290(0x8)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Mn;  // 0x298(0x8)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Se;  // 0x2A0(0x8)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Na;  // 0x2A8(0x8)
	char pad_688[8];  // 0x2B0(0x8)

}; 



// Class ConZ.MetabolismNutritionPanel
// Size: 0x278(Inherited: 0x260) 
struct UMetabolismNutritionPanel : public UUserWidget
{
	struct UMetabolismRadialProgressBar* _rpb_Calories;  // 0x260(0x8)
	struct UMetabolismRadialProgressBar* _rpb_Water;  // 0x268(0x8)
	char pad_624[8];  // 0x270(0x8)

}; 



// Class ConZ.PrisonerBodyConditionUIData_BleedingInjury
// Size: 0x1E0(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_BleedingInjury : public UPrisonerBodyConditionUIData
{
	char pad_416[64];  // 0x1A0(0x40)

}; 



// Class ConZ.WeaponAttachmentScopeRail
// Size: 0x940(Inherited: 0x930) 
struct AWeaponAttachmentScopeRail : public AWeaponAttachment
{
	struct FName ScopeSocketName;  // 0x930(0x8)
	char pad_2360[8];  // 0x938(0x8)

}; 



// Class ConZ.MetabolismPerformanceDataPanel
// Size: 0x300(Inherited: 0x260) 
struct UMetabolismPerformanceDataPanel : public UUserWidget
{
	struct UMetabolismAdvancedProgressBar* _apb_Stamina;  // 0x260(0x8)
	struct UMetabolismAdvancedProgressBar* _apb_WeightLoad;  // 0x268(0x8)
	struct UMetabolismAdvancedProgressBar* _apb_WalkSpeed;  // 0x270(0x8)
	struct UMetabolismAdvancedProgressBar* _apb_JogSpeed;  // 0x278(0x8)
	struct UMetabolismAdvancedProgressBar* _apb_RunSpeed;  // 0x280(0x8)
	struct UMetabolismAdvancedProgressBar* _apb_HealingSpeed;  // 0x288(0x8)
	struct UMetabolismAdvancedProgressBar* _apb_BloodRecoveryRate;  // 0x290(0x8)
	struct UMetabolismAdvancedProgressBar* _apb_ImmuneSystem;  // 0x298(0x8)
	struct UMetabolismAdvancedProgressBar* _apb_PerformanceScore;  // 0x2A0(0x8)
	struct UMetabolismAdvancedProgressBar* _apb_StealthFactor;  // 0x2A8(0x8)
	struct UMetabolismAdvancedProgressBar* _apb_MeleeDamage;  // 0x2B0(0x8)
	struct UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryResting;  // 0x2B8(0x8)
	struct UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryIdle;  // 0x2C0(0x8)
	struct UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryEasy;  // 0x2C8(0x8)
	struct UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryDemanding;  // 0x2D0(0x8)
	struct UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryVeryDemanding;  // 0x2D8(0x8)
	struct UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryExtremelyDemanding;  // 0x2E0(0x8)
	struct UMetabolismCurrentStatDark* _csd_OverloadPenaltyEnergy;  // 0x2E8(0x8)
	struct UMetabolismCurrentStatDark* _csd_OverloadPenaltyWater;  // 0x2F0(0x8)
	char pad_760[8];  // 0x2F8(0x8)

}; 



// Class ConZ.MetabolismRadialProgressBar
// Size: 0x470(Inherited: 0x260) 
struct UMetabolismRadialProgressBar : public UUserWidget
{
	char pad_608_1 : 7;  // 0x260(0x1)
	bool PreviewedAlertedState : 1;  // 0x260(0x1)
	char pad_609[3];  // 0x261(0x3)
	float PrimaryPercentageMinDisplayedValue;  // 0x264(0x4)
	float PrimaryPercentageMaxDisplayedValue;  // 0x268(0x4)
	char pad_620[20];  // 0x26C(0x14)
	struct UScaleBox* _scaleBox;  // 0x280(0x8)
	struct UImage* _coloredBackground;  // 0x288(0x8)
	struct UImage* _radialProgressBar;  // 0x290(0x8)
	struct URetainerBox* _fontEffectPass1;  // 0x298(0x8)
	struct URetainerBox* _fontEffectPass2;  // 0x2A0(0x8)
	struct URichTextBlock* _percentage;  // 0x2A8(0x8)
	struct UTextBlock* _value;  // 0x2B0(0x8)
	struct UTextBlock* _title;  // 0x2B8(0x8)
	struct FMetabolismRadialProgressBarColorScheme _defaultColorScheme;  // 0x2C0(0x80)
	struct FMetabolismRadialProgressBarColorScheme _alertedColorScheme;  // 0x340(0x80)
	struct FMetabolismRadialProgressBarFontSettings _percentageFontSettings;  // 0x3C0(0x14)
	float _widgetScale;  // 0x3D4(0x4)
	char pad_984_1 : 7;  // 0x3D8(0x1)
	bool _isTitleVisible : 1;  // 0x3D8(0x1)
	char pad_985[151];  // 0x3D9(0x97)

	struct UWidget* GetToolTipWidget(); // Function ConZ.MetabolismRadialProgressBar.GetToolTipWidget
}; 



// Class ConZ.MetabolismRightPanel
// Size: 0x298(Inherited: 0x260) 
struct UMetabolismRightPanel : public UUserWidget
{
	struct UMetabolismNutritionPanel* _nutritionPanel;  // 0x260(0x8)
	struct UMetabolismMacronutrientReservesPanel* _macronutrientReservesPanel;  // 0x268(0x8)
	struct UMetabolismBodyReservesPanel* _bodyReservesPanel;  // 0x270(0x8)
	struct UMetabolismVitaminsPanel* _vitaminsPanel;  // 0x278(0x8)
	struct UMetabolismMineralsPanel* _mineralsPanel;  // 0x280(0x8)
	struct UMetabolismDigestionPanel* _digestionPanel;  // 0x288(0x8)
	char pad_656[8];  // 0x290(0x8)

}; 



// Class ConZ.MetabolismSkillProgressionPanel
// Size: 0x2A8(Inherited: 0x260) 
struct UMetabolismSkillProgressionPanel : public UUserWidget
{
	UUserWidget* SkillProgressBarWidgetClass;  // 0x260(0x8)
	struct UTabGroup* _tabRow;  // 0x268(0x8)
	UTabButton* _tabButtonClass;  // 0x270(0x8)
	struct UWidgetSwitcher* _attributeSwitcher;  // 0x278(0x8)
	struct UMetabolismSkillProgressionTab* _STR_tab;  // 0x280(0x8)
	struct UMetabolismSkillProgressionTab* _CON_tab;  // 0x288(0x8)
	struct UMetabolismSkillProgressionTab* _DEX_tab;  // 0x290(0x8)
	struct UMetabolismSkillProgressionTab* _INT_tab;  // 0x298(0x8)
	char pad_672[8];  // 0x2A0(0x8)

}; 



// Class ConZ.MetabolismStatics
// Size: 0x28(Inherited: 0x28) 
struct UMetabolismStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.MetabolismStatsPanel
// Size: 0x2D0(Inherited: 0x260) 
struct UMetabolismStatsPanel : public UUserWidget
{
	struct UMetabolismRadialAttributeProgressBar* _str_progressWidget;  // 0x260(0x8)
	struct UMetabolismRadialAttributeProgressBar* _con_progressWidget;  // 0x268(0x8)
	struct UMetabolismRadialAttributeProgressBar* _dex_progressWidget;  // 0x270(0x8)
	struct UMetabolismRadialAttributeProgressBar* _int_progressWidget;  // 0x278(0x8)
	struct UMetabolismSkillProgressionPanel* _skillProgressionPanel;  // 0x280(0x8)
	struct UMetabolismBasicInfoPanel* _basicInfoPanel;  // 0x288(0x8)
	struct UMetabolismPerformanceDataPanel* _performanceDataPanel;  // 0x290(0x8)
	struct UMetabolismBodyStatsPanel* _bodyStatsPanel;  // 0x298(0x8)
	char pad_672[48];  // 0x2A0(0x30)

}; 



// Class ConZ.MetabolismSymptomTitle
// Size: 0x278(Inherited: 0x260) 
struct UMetabolismSymptomTitle : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)
	struct UTextBlock* _title;  // 0x270(0x8)

	struct UWidget* GetToolTipWidget(); // Function ConZ.MetabolismSymptomTitle.GetToolTipWidget
}; 



// Class ConZ.PlayerManagementActivePlayersList
// Size: 0x260(Inherited: 0x260) 
struct UPlayerManagementActivePlayersList : public UUserWidget
{

}; 



// Class ConZ.MetabolismTissueGroupCheckbox
// Size: 0x290(Inherited: 0x260) 
struct UMetabolismTissueGroupCheckbox : public UUserWidget
{
	struct FText Title;  // 0x260(0x18)
	char pad_632_1 : 7;  // 0x278(0x1)
	bool IsCheckdByDefault : 1;  // 0x278(0x1)
	char pad_633[7];  // 0x279(0x7)
	struct UTextBlock* _title;  // 0x280(0x8)
	struct UCheckBox* _checkBox;  // 0x288(0x8)

}; 



// Class ConZ.MetabolismTreatmentItemsPanel
// Size: 0x310(Inherited: 0x260) 
struct UMetabolismTreatmentItemsPanel : public UUserWidget
{
	struct UMetabolismLightItemDisplayPanel* _inventoryItems;  // 0x260(0x8)
	struct UMetabolismLightItemDisplayPanel* _vicinityItems;  // 0x268(0x8)
	struct UMetabolismContainerSetDisplayPanel* _vicinityContainers;  // 0x270(0x8)
	UTabButton* _buttonWidgetClass;  // 0x278(0x8)
	struct FString _inventoryName;  // 0x280(0x10)
	struct FString _vicinityName;  // 0x290(0x10)
	char pad_672[112];  // 0x2A0(0x70)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Fatigue
// Size: 0xD0(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_Fatigue : public UPrisonerBodyConditionOrSymptomSideEffect
{
	UPrisonerBodySymptom_Fatigue* _symptomClass;  // 0x30(0x8)
	struct UPrisonerBodySymptomCause_Fatigue* _symptomCause;  // 0x38(0x8)
	struct FRuntimeFloatCurve _maxStaminaModifierVsSeverity;  // 0x40(0x88)
	char pad_200[8];  // 0xC8(0x8)

}; 



// Class ConZ.MetabolismVitaminAndMineralReserve
// Size: 0x298(Inherited: 0x260) 
struct UMetabolismVitaminAndMineralReserve : public UUserWidget
{
	struct FText Title;  // 0x260(0x18)
	struct UTextBlock* _title;  // 0x278(0x8)
	struct UTextBlock* _value;  // 0x280(0x8)
	struct UMetabolismSegmentedProgressBar* _spb_ReservesBar;  // 0x288(0x8)
	char pad_656[8];  // 0x290(0x8)

}; 



// Class ConZ.MetabolismVitaminsPanel
// Size: 0x2D0(Inherited: 0x260) 
struct UMetabolismVitaminsPanel : public UUserWidget
{
	struct UMetabolismVitaminAndMineralReserve* _vitamin_A;  // 0x260(0x8)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B1;  // 0x268(0x8)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B2;  // 0x270(0x8)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B3;  // 0x278(0x8)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B4;  // 0x280(0x8)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B5;  // 0x288(0x8)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B6;  // 0x290(0x8)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B9;  // 0x298(0x8)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B12;  // 0x2A0(0x8)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_C;  // 0x2A8(0x8)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_D;  // 0x2B0(0x8)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_E;  // 0x2B8(0x8)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_K;  // 0x2C0(0x8)
	char pad_712[8];  // 0x2C8(0x8)

}; 



// Class ConZ.WeaponStateCheckAmmo
// Size: 0x38(Inherited: 0x30) 
struct UWeaponStateCheckAmmo : public UWeaponState
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.Rabbit2
// Size: 0x980(Inherited: 0x980) 
struct ARabbit2 : public AAnimal2
{

}; 



// Class ConZ.ThermalSensorComponent
// Size: 0x100(Inherited: 0xB0) 
struct UThermalSensorComponent : public UActorComponent
{
	float _temperature;  // 0xB0(0x4)
	float _emissivity;  // 0xB4(0x4)
	float _radius;  // 0xB8(0x4)
	float _mass;  // 0xBC(0x4)
	float _specificHeatCapacity;  // 0xC0(0x4)
	float _thermalConductivity;  // 0xC4(0x4)
	char pad_200[32];  // 0xC8(0x20)
	char _packedTemperature;  // 0xE8(0x1)
	char pad_233[7];  // 0xE9(0x7)
	char pad_240_1 : 7;  // 0xF0(0x1)
	bool _temperatureReplicationEnabled : 1;  // 0xF0(0x1)
	char pad_241[3];  // 0xF1(0x3)
	float _packTemperatureOffset;  // 0xF4(0x4)
	float _packTemperatureScale;  // 0xF8(0x4)
	float _packTemperatureGamma;  // 0xFC(0x4)

	void OnRep_Temperature(); // Function ConZ.ThermalSensorComponent.OnRep_Temperature
}; 



// Class ConZ.MetalDetector
// Size: 0x960(Inherited: 0x910) 
struct AMetalDetector : public AItem
{
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent;  // 0x910(0x8)
	float _minDetectionRadius;  // 0x918(0x4)
	float _maxDetectionRadius;  // 0x91C(0x4)
	float _updatePeriod;  // 0x920(0x4)
	float _detectionFactor;  // 0x924(0x4)
	struct UAkAudioEvent* _startEvent;  // 0x928(0x8)
	struct UAkAudioEvent* _stopEvent;  // 0x930(0x8)
	struct FName _RTPCName;  // 0x938(0x8)
	int32_t _soundInterpolationTimeMs;  // 0x940(0x4)
	char pad_2372[12];  // 0x944(0xC)
	struct FName _detectionSourceSocketName;  // 0x950(0x8)
	char pad_2392[8];  // 0x958(0x8)

	void SetDetectionFactor_OnRep(); // Function ConZ.MetalDetector.SetDetectionFactor_OnRep
	void Server_ToggleTurnedOn(); // Function ConZ.MetalDetector.Server_ToggleTurnedOn
	void Server_SetDetectionFactor(float newDetectionFactor); // Function ConZ.MetalDetector.Server_SetDetectionFactor
	void OnResourceComponentDeactivated(struct UActorComponent* Component); // Function ConZ.MetalDetector.OnResourceComponentDeactivated
	void OnResourceComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.MetalDetector.OnResourceComponentActivated
}; 



// Class ConZ.Quiver
// Size: 0x1D70(Inherited: 0x9C0) 
struct AQuiver : public AClothesItem
{
	struct FName ArrowsBoneName;  // 0x9B8(0x8)
	struct TArray<struct UStaticMeshComponent*> _arrowMeshComponentsArray2;  // 0x9C0(0x10)
	float _containerDepth;  // 0x9D4(0x4)
	char pad_2524[5012];  // 0x9DC(0x1394)

}; 



// Class ConZ.SquadMemberPanel
// Size: 0x330(Inherited: 0x260) 
struct USquadMemberPanel : public UUserWidget
{
	struct UTextBlock* PlayerName;  // 0x260(0x8)
	struct UTextBlock* FameText;  // 0x268(0x8)
	struct UTextBlock* FPText;  // 0x270(0x8)
	struct UImage* RankIcon;  // 0x278(0x8)
	struct UButton* HoverButton;  // 0x280(0x8)
	struct UButton* MakeLeaderButton;  // 0x288(0x8)
	struct UButton* PromoteButton;  // 0x290(0x8)
	struct UButton* DemoteButton;  // 0x298(0x8)
	struct UButton* KickButton;  // 0x2A0(0x8)
	struct UHorizontalBox* CommandBox;  // 0x2A8(0x8)
	struct UHorizontalBox* FamePointBox;  // 0x2B0(0x8)
	struct TMap<uint8_t , struct UTexture2D*> _memberTextures;  // 0x2B8(0x50)
	char pad_776[40];  // 0x308(0x28)

	void OnReleasePromoteButton(); // Function ConZ.SquadMemberPanel.OnReleasePromoteButton
	void OnReleaseMakeLeaderButton(); // Function ConZ.SquadMemberPanel.OnReleaseMakeLeaderButton
	void OnReleaseKickButton(); // Function ConZ.SquadMemberPanel.OnReleaseKickButton
	void OnReleaseDemoteButton(); // Function ConZ.SquadMemberPanel.OnReleaseDemoteButton
	void OnButtonUnhovered(); // Function ConZ.SquadMemberPanel.OnButtonUnhovered
	void OnButtonHovered(); // Function ConZ.SquadMemberPanel.OnButtonHovered
}; 



// Class ConZ.MicInputIndicator
// Size: 0x260(Inherited: 0x260) 
struct UMicInputIndicator : public UUserWidget
{

	bool IsPushToTalkEnabled(); // Function ConZ.MicInputIndicator.IsPushToTalkEnabled
}; 



// Class ConZ.PrisonerActionMoveToLocation
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionMoveToLocation : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.MinigameValidationParams
// Size: 0x28(Inherited: 0x28) 
struct UMinigameValidationParams : public UObject
{

}; 



// Class ConZ.DefusalMinigameValidationParams
// Size: 0x30(Inherited: 0x28) 
struct UDefusalMinigameValidationParams : public UMinigameValidationParams
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.MiscStatics
// Size: 0x28(Inherited: 0x28) 
struct UMiscStatics : public UBlueprintFunctionLibrary
{

	struct FDateTime UtcToLocalDateTime(struct FDateTime utc); // Function ConZ.MiscStatics.UtcToLocalDateTime
	void Test_ProcessAdminCommand(struct UObject* WorldContextObject, struct FString commandText); // Function ConZ.MiscStatics.Test_ProcessAdminCommand
	void SortSkillsByLevelAndExperience(struct TArray<struct USkill*>& Skills); // Function ConZ.MiscStatics.SortSkillsByLevelAndExperience
	void SendChatLineToPlayer(struct AConZPlayerController* PlayerController, struct FString Text, uint8_t  ChatType, bool ShouldCopyToClientClipboard); // Function ConZ.MiscStatics.SendChatLineToPlayer
	struct FSoftObjectPath ResolveObjectPathForPIE(struct TSoftObjectPtr<UObject>& Asset, struct UObject* WorldContext); // Function ConZ.MiscStatics.ResolveObjectPathForPIE
	bool PasteLocationAndRotationFromClipboard(struct FVector& Location, struct FRotator& Rotation); // Function ConZ.MiscStatics.PasteLocationAndRotationFromClipboard
	bool ParseVectorFromString(struct FString String, struct FVector& outVector); // Function ConZ.MiscStatics.ParseVectorFromString
	bool ParseTransformFromString(struct FString String, struct FTransform& Transform); // Function ConZ.MiscStatics.ParseTransformFromString
	struct FDateTime LocalToUtcDateTime(struct FDateTime Local); // Function ConZ.MiscStatics.LocalToUtcDateTime
	bool IsUserDeveloper(struct FString UserId); // Function ConZ.MiscStatics.IsUserDeveloper
	struct ULineBatchComponent* GetLineBatcher(struct UObject* WorldContextObject, bool bPersistentLines, float LifeTime, bool bDepthIsForeground); // Function ConZ.MiscStatics.GetLineBatcher
	struct FString GetGameVersion(); // Function ConZ.MiscStatics.GetGameVersion
	struct TSet<struct FString> GetDeveloperUsers(); // Function ConZ.MiscStatics.GetDeveloperUsers
	struct UObject* GetClassDefaultObject(UObject* ObjectClass); // Function ConZ.MiscStatics.GetClassDefaultObject
	void DrawLine(struct UObject* WorldContextObject, struct FVector& LineStart, struct FVector& LineEnd, struct FColor& Color, bool persistentLines, float LifeTime, char DepthPriority, float Thickness); // Function ConZ.MiscStatics.DrawLine
	void DrawDebugNumber(struct UObject* WorldContextObject, float Number, struct FVector Location, struct FColor Color, float Size, float Duration, float Thickness, bool autoSize); // Function ConZ.MiscStatics.DrawDebugNumber
	void DrawDebugDigit(struct UObject* WorldContextObject, int32_t digit, struct FVector Location, struct FRotator Rotation, struct FColor Color, float Size, float Duration, float Thickness); // Function ConZ.MiscStatics.DrawDebugDigit
	void DrawCircle(struct UObject* WorldContextObject, struct FVector& Center, struct FVector& X, struct FVector& Y, float Radius, float numberOfSides, struct FColor& Color, bool persistentLines, float LifeTime, char DepthPriority, float Thickness); // Function ConZ.MiscStatics.DrawCircle
	void CopyLocationAndRotationToClipboard(struct FVector& Location, struct FRotator& Rotation); // Function ConZ.MiscStatics.CopyLocationAndRotationToClipboard
	void BroadcastChatLine(struct UObject* WorldContextObject, struct FString Text, uint8_t  ChatType); // Function ConZ.MiscStatics.BroadcastChatLine
}; 



// Class ConZ.Mission
// Size: 0x460(Inherited: 0x220) 
struct AMission : public AActor
{
	char pad_544[144];  // 0x220(0x90)
	struct AObjective* _activeObjective;  // 0x2B0(0x8)
	struct TArray<AObjective*> _missionObjectiveClasses;  // 0x2B8(0x10)
	struct TMap<struct FString, struct AObjective*> _missionObjectiveAssets;  // 0x2C8(0x50)
	struct TArray<struct AObjective*> _missionObjectives;  // 0x318(0x10)
	struct FText _missionName;  // 0x328(0x18)
	struct FText _missionCategory;  // 0x340(0x18)
	struct FText _missionDescription;  // 0x358(0x18)
	uint8_t  _missionType;  // 0x370(0x1)
	char pad_881[3];  // 0x371(0x3)
	int32_t _missionOrdinalNumber;  // 0x374(0x4)
	uint8_t  _missionState;  // 0x378(0x1)
	uint8_t  _missionFaction;  // 0x379(0x1)
	char pad_890[6];  // 0x37A(0x6)
	struct TSoftObjectPtr<UWorld> _missionLevel;  // 0x380(0x28)
	struct FMissionReward _missionRewards;  // 0x3A8(0x18)
	struct UTexture2D* _missionBannerImage;  // 0x3C0(0x8)
	struct TArray<struct TSoftObjectPtr<ALocationTrigger>> _missionStartingLocations;  // 0x3C8(0x10)
	int32_t _intendedNumberOfPlayers;  // 0x3D8(0x4)
	float _missionCooldownTime;  // 0x3DC(0x4)
	char pad_992[8];  // 0x3E0(0x8)
	AMissionItemSpawner* _missionItemSpawnerClass;  // 0x3E8(0x8)
	struct TArray<struct FDialogueInfo> _missionIntroDialogues;  // 0x3F0(0x10)
	struct TArray<struct FDialogueInfo> _missionOutroSuccessDialogues;  // 0x400(0x10)
	struct TArray<struct FDialogueInfo> _missionOutroFailDialogues;  // 0x410(0x10)
	struct TArray<struct FDialogueInfo> _missionOutroBelatedDialogues;  // 0x420(0x10)
	char pad_1072_1 : 7;  // 0x430(0x1)
	bool _canInterruptDialogue : 1;  // 0x430(0x1)
	char pad_1073[47];  // 0x431(0x2F)

	void Server_NotifyObjectiveWidgetInitialized(); // Function ConZ.Mission.Server_NotifyObjectiveWidgetInitialized
	void Server_NotifyObjectivesFinished(); // Function ConZ.Mission.Server_NotifyObjectivesFinished
	void Server_NotifyObjectiveDone(struct AObjective* Objective, uint8_t  ObjectiveState); // Function ConZ.Mission.Server_NotifyObjectiveDone
	void OnRep_MissionStateChanged(); // Function ConZ.Mission.OnRep_MissionStateChanged
	void OnRep_MissionObjectives(); // Function ConZ.Mission.OnRep_MissionObjectives
	void OnRep_ActiveObjectiveChanged(); // Function ConZ.Mission.OnRep_ActiveObjectiveChanged
	void OnMissionUnavailable(); // Function ConZ.Mission.OnMissionUnavailable
	void OnMissionStarted(); // Function ConZ.Mission.OnMissionStarted
	void OnMissionLevelLoaded(); // Function ConZ.Mission.OnMissionLevelLoaded
	void OnMissionFailed(); // Function ConZ.Mission.OnMissionFailed
	void OnMissionCompleted(); // Function ConZ.Mission.OnMissionCompleted
	void OnMissionBelated(); // Function ConZ.Mission.OnMissionBelated
	void OnMissionAvailable(); // Function ConZ.Mission.OnMissionAvailable
}; 



// Class ConZ.PrisonerBodySymptom_Thirst
// Size: 0x140(Inherited: 0xB8) 
struct UPrisonerBodySymptom_Thirst : public UPrisonerBodySymptom
{
	struct FRuntimeFloatCurve _severityVsHydrationRatio;  // 0xB8(0x88)

}; 



// Class ConZ.WeaponAttachmentMagazine
// Size: 0x9E0(Inherited: 0x930) 
struct AWeaponAttachmentMagazine : public AWeaponAttachment
{
	struct FGameplayTagContainer AmmunitionTags;  // 0x930(0x20)
	char pad_2384_1 : 7;  // 0x950(0x1)
	bool RequiresFullCapacityOnLoad : 1;  // 0x950(0x1)
	char pad_2385[7];  // 0x951(0x7)
	AAmmunitionItem* DefaultFillAmmo;  // 0x958(0x8)
	int32_t InitialAmmo;  // 0x960(0x4)
	char pad_2404[4];  // 0x964(0x4)
	struct TArray<struct FAmmunitionData> _ammoData;  // 0x968(0x10)
	struct TArray<struct FAmmunitionData> _ammoOwnerHelper;  // 0x978(0x10)
	char pad_2440[4];  // 0x988(0x4)
	int32_t _capacity;  // 0x98C(0x4)
	char pad_2448[8];  // 0x990(0x8)
	struct TArray<struct UStaticMeshComponent*> _cartridgeMeshComponents;  // 0x998(0x10)
	struct USkeletalMeshComponent* _skeletalMesh;  // 0x9A8(0x8)
	struct TArray<UItemActionSequenceLoadMagazine*> _loadAmmoSequences;  // 0x9B0(0x10)
	URangedWeaponsSkill* _rangedWeaponsSkillClass;  // 0x9C0(0x8)
	float _loadMagazineActionSpeedMultiplier;  // 0x9C8(0x4)
	char pad_2508[4];  // 0x9CC(0x4)
	struct UTexture2D* _inventoryIconFull;  // 0x9D0(0x8)
	char pad_2520[8];  // 0x9D8(0x8)

	void UpdateAmmunitionMeshes(struct TArray<int32_t>& ammoIndices, bool showReversed); // Function ConZ.WeaponAttachmentMagazine.UpdateAmmunitionMeshes
	void SetAmmo(struct TArray<struct FAmmunitionData>& ammo); // Function ConZ.WeaponAttachmentMagazine.SetAmmo
	void Server_InsertCartridgeIntoMagazine(struct AAmmunitionItem* ammo); // Function ConZ.WeaponAttachmentMagazine.Server_InsertCartridgeIntoMagazine
	void Server_InsertAmmoSingle(struct AAmmunitionItem* ammoItem); // Function ConZ.WeaponAttachmentMagazine.Server_InsertAmmoSingle
	void Server_EmptyAmmo(); // Function ConZ.WeaponAttachmentMagazine.Server_EmptyAmmo
	struct FAmmunitionData RemoveAmmo(); // Function ConZ.WeaponAttachmentMagazine.RemoveAmmo
	void OnRep_AmmoOwnerHelper(); // Function ConZ.WeaponAttachmentMagazine.OnRep_AmmoOwnerHelper
	void OnRep_AmmoData(); // Function ConZ.WeaponAttachmentMagazine.OnRep_AmmoData
	void OnAmmoChangedEvent(); // Function ConZ.WeaponAttachmentMagazine.OnAmmoChangedEvent
	void Multicast_SetLoadedVariables(struct TArray<struct FAmmunitionData> ammo); // Function ConZ.WeaponAttachmentMagazine.Multicast_SetLoadedVariables
	bool IsAmmoSupported(struct AAmmunitionItem* ammo); // Function ConZ.WeaponAttachmentMagazine.IsAmmoSupported
	AProjectile* GetTopmostProjectileClass(); // Function ConZ.WeaponAttachmentMagazine.GetTopmostProjectileClass
	bool GetTopmostAmmunitionData(struct FAmmunitionData& Data); // Function ConZ.WeaponAttachmentMagazine.GetTopmostAmmunitionData
	int32_t GetCapacity(); // Function ConZ.WeaponAttachmentMagazine.GetCapacity
	int32_t GetAmmoCount(); // Function ConZ.WeaponAttachmentMagazine.GetAmmoCount
	void GetAmmo(struct TArray<struct FAmmunitionData>& ammo); // Function ConZ.WeaponAttachmentMagazine.GetAmmo
	void FillWithDefaultAmmo(int32_t Count); // Function ConZ.WeaponAttachmentMagazine.FillWithDefaultAmmo
	void EmptyAmmo(); // Function ConZ.WeaponAttachmentMagazine.EmptyAmmo
	void DestroyAmmunitionMeshes(); // Function ConZ.WeaponAttachmentMagazine.DestroyAmmunitionMeshes
	void CreateAmmunitionMeshes(); // Function ConZ.WeaponAttachmentMagazine.CreateAmmunitionMeshes
	void AddAmmoSingle(struct FAmmunitionData& ammo); // Function ConZ.WeaponAttachmentMagazine.AddAmmoSingle
	void AddAmmo(struct TArray<struct FAmmunitionData>& ammo); // Function ConZ.WeaponAttachmentMagazine.AddAmmo
}; 



// Class ConZ.MissionContainerWidget
// Size: 0x288(Inherited: 0x260) 
struct UMissionContainerWidget : public UUserWidget
{
	struct USizeBox* _missionObjectivesSizeBox;  // 0x260(0x8)
	struct UTextBlock* _missionName;  // 0x268(0x8)
	struct UVerticalBox* _objectivesWidgets;  // 0x270(0x8)
	char pad_632[16];  // 0x278(0x10)

	void StartObjectiveAnimation(uint8_t  AnimationState); // Function ConZ.MissionContainerWidget.StartObjectiveAnimation
	struct UWidgetAnimation* GetStartObjectiveAnimation(); // Function ConZ.MissionContainerWidget.GetStartObjectiveAnimation
	struct UWidgetAnimation* GetCompleteObjectiveAnimation(); // Function ConZ.MissionContainerWidget.GetCompleteObjectiveAnimation
}; 



// Class ConZ.MissionDialogueManager
// Size: 0x260(Inherited: 0x220) 
struct AMissionDialogueManager : public AActor
{
	char pad_544[28];  // 0x220(0x1C)
	float _lineDurationModifier;  // 0x23C(0x4)
	float _delayBetweenDialogues;  // 0x240(0x4)
	char pad_580[4];  // 0x244(0x4)
	struct UAkAudioEvent* _missionStop;  // 0x248(0x8)
	char pad_592[16];  // 0x250(0x10)

	void StopAllDialogue(); // Function ConZ.MissionDialogueManager.StopAllDialogue
	void PlayNextDialogue(); // Function ConZ.MissionDialogueManager.PlayNextDialogue
	void OnJournalTabModeOpened(uint8_t  tabMode); // Function ConZ.MissionDialogueManager.OnJournalTabModeOpened
	void OnJournalTabModeClosed(); // Function ConZ.MissionDialogueManager.OnJournalTabModeClosed
	void AddToQueue(struct TArray<struct FDialogueInfo>& missionDialogue, bool interrupt); // Function ConZ.MissionDialogueManager.AddToQueue
}; 



// Class ConZ.RangedResourceConsumerEntityComponentSetupMultipleProviders
// Size: 0x70(Inherited: 0x68) 
struct URangedResourceConsumerEntityComponentSetupMultipleProviders : public URangedResourceConsumerEntityComponentSetup
{
	char pad_104_1 : 7;  // 0x68(0x1)
	bool AutoConnect : 1;  // 0x68(0x1)
	char pad_105[7];  // 0x69(0x7)

}; 



// Class ConZ.MissionItemSpawner
// Size: 0x280(Inherited: 0x220) 
struct AMissionItemSpawner : public AActor
{
	struct TArray<struct FMissionItemInfo> _missionItemsInfo;  // 0x220(0x10)
	char pad_560[80];  // 0x230(0x50)

}; 



// Class ConZ.MissionItemWidget
// Size: 0x450(Inherited: 0x260) 
struct UMissionItemWidget : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct UTextBlock* _missionItemName;  // 0x290(0x8)
	struct UTextBlock* _missionItemCategory;  // 0x298(0x8)
	struct UOverlay* _selectionBorder;  // 0x2A0(0x8)
	struct UImage* _stateImageIcon;  // 0x2A8(0x8)
	struct UButton* _expandButton;  // 0x2B0(0x8)
	struct UOverlay* _objectiveContentOverlay;  // 0x2B8(0x8)
	struct UVerticalBox* _objectiveContainer;  // 0x2C0(0x8)
	struct UTexture2D* _availableMissionIcon;  // 0x2C8(0x8)
	struct UTexture2D* _startedMissionIcon;  // 0x2D0(0x8)
	struct UTexture2D* _completedMissionIcon;  // 0x2D8(0x8)
	struct UTexture2D* _failedMissionIcon;  // 0x2E0(0x8)
	struct FLinearColor _widgetNormalColor;  // 0x2E8(0x10)
	struct FLinearColor _widgetCompletedColor;  // 0x2F8(0x10)
	float _activeTextFontSize;  // 0x308(0x4)
	float _inactiveTextFontSize;  // 0x30C(0x4)
	struct UAkAudioEvent* _expandButtonOpenSound;  // 0x310(0x8)
	struct UAkAudioEvent* _expandButtonClosedSound;  // 0x318(0x8)
	struct UAkAudioEvent* _menuButtonClickAudioEvent;  // 0x320(0x8)
	char pad_808[200];  // 0x328(0xC8)
	struct TMap<struct FString, struct TWeakObjectPtr<UObjectiveItemWidget>> _objectiveItemWidgets;  // 0x3F0(0x50)
	char pad_1088[16];  // 0x440(0x10)

	void OnExpandButtonClicked(); // Function ConZ.MissionItemWidget.OnExpandButtonClicked
}; 



// Class ConZ.MissionLevelManager
// Size: 0x278(Inherited: 0x220) 
struct AMissionLevelManager : public AActor
{
	char pad_544[88];  // 0x220(0x58)

}; 



// Class ConZ.MissionPrompt
// Size: 0x278(Inherited: 0x260) 
struct UMissionPrompt : public UUserWidget
{
	struct UTextBlock* _description;  // 0x260(0x8)
	char pad_616[16];  // 0x268(0x10)

	void OnYesClicked(); // Function ConZ.MissionPrompt.OnYesClicked
	void OnNoClicked(); // Function ConZ.MissionPrompt.OnNoClicked
}; 



// Class ConZ.PrisonerBodyEffect_CoolingSwingItem
// Size: 0x48(Inherited: 0x40) 
struct UPrisonerBodyEffect_CoolingSwingItem : public UPrisonerBodyEffect
{
	char pad_64[8];  // 0x40(0x8)

}; 



// Class ConZ.PrisonerVehicleAction_InstallAttachmentDescription
// Size: 0x80(Inherited: 0x38) 
struct UPrisonerVehicleAction_InstallAttachmentDescription : public UPrisonerActionDescription
{
	char pad_56[72];  // 0x38(0x48)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_HealingSpeedModifier
// Size: 0x30(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_HealingSpeedModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{

}; 



// Class ConZ.ModularTooltip
// Size: 0x280(Inherited: 0x260) 
struct UModularTooltip : public UUserWidget
{
	UModularTooltipSection* _sectionClass;  // 0x260(0x8)
	struct UTextBlock* _descriptionTextBlock;  // 0x268(0x8)
	struct UVerticalBox* _sectionsVerticalBox;  // 0x270(0x8)
	struct UTextBlock* _advancedDisplayHintTextBlock;  // 0x278(0x8)

	void PrisonerHUD_OnShouldShowExtendedWidgetTooltipChanged(bool Value); // Function ConZ.ModularTooltip.PrisonerHUD_OnShouldShowExtendedWidgetTooltipChanged
}; 



// Class ConZ.ModularTooltipElement
// Size: 0x2E8(Inherited: 0x260) 
struct UModularTooltipElement : public UUserWidget
{
	struct UModularTooltipElementData* _data;  // 0x260(0x8)
	struct FDataTableRowHandle _neutralDispositionColor;  // 0x268(0x10)
	struct FDataTableRowHandle _goodDispositionColor;  // 0x278(0x10)
	struct FDataTableRowHandle _badDispositionColor;  // 0x288(0x10)
	char pad_664[80];  // 0x298(0x50)

}; 



// Class ConZ.ModularTooltipElement_Value
// Size: 0x2F8(Inherited: 0x2E8) 
struct UModularTooltipElement_Value : public UModularTooltipElement
{
	struct UTextBlock* _nameTextBlock;  // 0x2E8(0x8)
	struct UTextBlock* _valueTextBlock;  // 0x2F0(0x8)

}; 



// Class ConZ.ModularTooltipElement_Timer
// Size: 0x2F0(Inherited: 0x2E8) 
struct UModularTooltipElement_Timer : public UModularTooltipElement
{
	struct UMetabolismAdvancedProgressBar* _remainingTimeProgressBar;  // 0x2E8(0x8)

}; 



// Class ConZ.ModularTooltipElement_Modifier
// Size: 0x2F8(Inherited: 0x2E8) 
struct UModularTooltipElement_Modifier : public UModularTooltipElement
{
	struct UTextBlock* _modifierTextBlock;  // 0x2E8(0x8)
	struct UMetabolismAdvancedProgressBar* _remainingTimeProgressBar;  // 0x2F0(0x8)

}; 



// Class ConZ.ModularTooltipElement_AffectedBy
// Size: 0x2F8(Inherited: 0x2E8) 
struct UModularTooltipElement_AffectedBy : public UModularTooltipElement
{
	struct UTextBlock* _sourceTextBlock;  // 0x2E8(0x8)
	struct UOverlay* _affectElementOverlay;  // 0x2F0(0x8)

}; 



// Class ConZ.ModularTooltipElement_Affects
// Size: 0x2F8(Inherited: 0x2E8) 
struct UModularTooltipElement_Affects : public UModularTooltipElement
{
	struct UTextBlock* _targetTextBlock;  // 0x2E8(0x8)
	struct UOverlay* _affectElementOverlay;  // 0x2F0(0x8)

}; 



// Class ConZ.ModularTooltipElementData_Modifier
// Size: 0x78(Inherited: 0x28) 
struct UModularTooltipElementData_Modifier : public UModularTooltipElementData
{
	char pad_40[80];  // 0x28(0x50)

}; 



// Class ConZ.ModularTooltipElementData_ValueWithModifier
// Size: 0x98(Inherited: 0x28) 
struct UModularTooltipElementData_ValueWithModifier : public UModularTooltipElementData
{
	char pad_40[112];  // 0x28(0x70)

}; 



// Class ConZ.PrisonerBodySymptomCause_EyePressure
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_EyePressure : public UPrisonerBodySymptomCause
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.UPrisonerActionWashClothDescription
// Size: 0x58(Inherited: 0x38) 
struct UUPrisonerActionWashClothDescription : public UPrisonerActionDescription
{
	char pad_56[32];  // 0x38(0x20)

}; 



// Class ConZ.ModularTooltipElementData_ValueWithModifier_Large
// Size: 0x98(Inherited: 0x98) 
struct UModularTooltipElementData_ValueWithModifier_Large : public UModularTooltipElementData_ValueWithModifier
{

}; 



// Class ConZ.ModularTooltipSection
// Size: 0x290(Inherited: 0x260) 
struct UModularTooltipSection : public UUserWidget
{
	struct FMargin _sectionElementsPadding;  // 0x260(0x10)
	struct UImage* _sectionSeparatorImage;  // 0x270(0x8)
	struct UTextBlock* _sectionNameTextBlock;  // 0x278(0x8)
	struct UVerticalBox* _sectionElementsVerticalBox;  // 0x280(0x8)
	char pad_648[8];  // 0x288(0x8)

}; 



// Class ConZ.PrisonerActionClean
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionClean : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerHallucinationIllusion_SeeOtherPlayersWithWeirdMasks
// Size: 0x250(Inherited: 0x220) 
struct APrisonerHallucinationIllusion_SeeOtherPlayersWithWeirdMasks : public APrisonerHallucinationIllusion
{
	struct TArray<struct UStaticMesh*> _maskMeshes;  // 0x220(0x10)
	struct TArray<struct UCharacterMesh*> _maskCharacterMeshes;  // 0x230(0x10)
	char pad_576[16];  // 0x240(0x10)

}; 



// Class ConZ.Mountable
// Size: 0x28(Inherited: 0x28) 
struct UMountable : public UInterface
{

}; 



// Class ConZ.PrisonerActionUrinateDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionUrinateDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.ResourceLockingManager
// Size: 0x1A0(Inherited: 0xB0) 
struct UResourceLockingManager : public UActorComponent
{
	char pad_176[240];  // 0xB0(0xF0)

	void OnResourceDestroyed(struct AActor* Resource); // Function ConZ.ResourceLockingManager.OnResourceDestroyed
	void OnLockOwnerDestroyed(struct AActor* lockOwner); // Function ConZ.ResourceLockingManager.OnLockOwnerDestroyed
	void NetMulticast_UnlockResource(int32_t dataVersion, struct FResourceNetworkGUID ResourceGUID, int32_t ResourceId); // Function ConZ.ResourceLockingManager.NetMulticast_UnlockResource
	void NetMulticast_UnlockIntersectingAreas(int32_t dataVersion, struct FBox Area); // Function ConZ.ResourceLockingManager.NetMulticast_UnlockIntersectingAreas
	void NetMulticast_UnlockArea(int32_t dataVersion, struct FBox Area); // Function ConZ.ResourceLockingManager.NetMulticast_UnlockArea
	void NetMulticast_RemoveAreaLocks(int32_t dataVersion, struct TArray<struct FAreaResourceLockNetwork> Locks); // Function ConZ.ResourceLockingManager.NetMulticast_RemoveAreaLocks
	void NetMulticast_RemoveActorLocks(int32_t dataVersion, struct TArray<struct FActorResourceLockNetwork> Locks); // Function ConZ.ResourceLockingManager.NetMulticast_RemoveActorLocks
	void NetMulticast_LockResource(int32_t dataVersion, struct FResourceNetworkGUID LockOwnerGUID, struct FResourceNetworkGUID ResourceGUID, int32_t ResourceId); // Function ConZ.ResourceLockingManager.NetMulticast_LockResource
	void NetMulticast_LockArea(int32_t dataVersion, struct FResourceNetworkGUID LockOwnerGUID, struct FBox Area); // Function ConZ.ResourceLockingManager.NetMulticast_LockArea
}; 



// Class ConZ.Mountee
// Size: 0x28(Inherited: 0x28) 
struct UMountee : public UInterface
{

}; 



// Class ConZ.WeaponStateRevolverActive
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateRevolverActive : public UWeaponState
{

}; 



// Class ConZ.MountPath
// Size: 0x40(Inherited: 0x28) 
struct UMountPath : public UObject
{
	struct FGameplayTag PathTag;  // 0x28(0x8)
	struct UAnimMontage* MountingMontage;  // 0x30(0x8)
	float FallbackMountTime;  // 0x38(0x4)
	uint8_t  MountingMotionIntensity;  // 0x3C(0x1)
	char pad_61[3];  // 0x3D(0x3)

}; 



// Class ConZ.PrisonerBodyCondition_Drunkenness
// Size: 0x1F0(Inherited: 0xC0) 
struct UPrisonerBodyCondition_Drunkenness : public UPrisonerBodyCondition
{
	struct FRuntimeFloatCurve _severityVsAbsorbedAlcoholRatio;  // 0xC0(0x88)
	float _alcoholAbsorptionAtRecoveryStart;  // 0x148(0x4)
	uint8_t  _state;  // 0x14C(0x1)
	char pad_333[15];  // 0x14D(0xF)
	float _vomitCheckInterval;  // 0x15C(0x4)
	float _alcoholInStomachRatioVomitThreshold;  // 0x160(0x4)
	char pad_356[4];  // 0x164(0x4)
	struct FRuntimeFloatCurve _vomitProbabilityVsSeverity;  // 0x168(0x88)

}; 



// Class ConZ.ServerPriceCache
// Size: 0x228(Inherited: 0x28) 
struct UServerPriceCache : public UObject
{
	char pad_40[512];  // 0x28(0x200)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_IntelligenceModifier
// Size: 0xC0(Inherited: 0xC0) 
struct UPrisonerBodyConditionOrSymptomSideEffect_IntelligenceModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{

}; 



// Class ConZ.ExternalMountPath
// Size: 0xA0(Inherited: 0x40) 
struct UExternalMountPath : public UMountPath
{
	struct FTransform DestinationTransform;  // 0x40(0x30)
	char pad_112_1 : 7;  // 0x70(0x1)
	bool OverrideDestinationAcceptanceRadius : 1;  // 0x70(0x1)
	char pad_113[3];  // 0x71(0x3)
	float DestinationAcceptanceRadius;  // 0x74(0x4)
	float AccesibilityCheck_MountSocketVerticalCorrection;  // 0x78(0x4)
	float AccesibilityCheck_CapsuleRadius;  // 0x7C(0x4)
	float AccesibilityCheck_SweepCapsuleHalfHeight;  // 0x80(0x4)
	float AccesibilityCheck_OverlapCapsuleHalfHeight;  // 0x84(0x4)
	struct UAnimMontage* UnmountingMontage;  // 0x88(0x8)
	float FallbackUnmountTime;  // 0x90(0x4)
	uint8_t  UnmountingMotionIntensity;  // 0x94(0x1)
	char pad_149[11];  // 0x95(0xB)

}; 



// Class ConZ.PrisonerBodyEffect_Death
// Size: 0x40(Inherited: 0x40) 
struct UPrisonerBodyEffect_Death : public UPrisonerBodyEffect
{

}; 



// Class ConZ.PlantSpecies
// Size: 0x100(Inherited: 0x30) 
struct UPlantSpecies : public UDataAsset
{
	struct FText SpeciesName;  // 0x30(0x18)
	struct FFloatInterval SeedsOptimaltemperature;  // 0x48(0x8)
	struct FFloatInterval GrowthOptimalTemperature;  // 0x50(0x8)
	float StageGrowthTimeGameHours;  // 0x58(0x4)
	uint8_t  LastStage;  // 0x5C(0x1)
	char pad_93[3];  // 0x5D(0x3)
	float LastStageLifetime;  // 0x60(0x4)
	float LastStageDeathStartPercent;  // 0x64(0x4)
	struct TArray<struct UPlantPestSpecies*> Pests;  // 0x68(0x10)
	struct TArray<struct UPlantDiseaseSpecies*> Diseases;  // 0x78(0x10)
	AItem* Seed;  // 0x88(0x8)
	struct FPlantMeshData PlantMesh;  // 0x90(0x70)

}; 



// Class ConZ.MountPathBlocker
// Size: 0x28(Inherited: 0x28) 
struct UMountPathBlocker : public UInterface
{

}; 



// Class ConZ.MountSlot
// Size: 0x28(Inherited: 0x28) 
struct UMountSlot : public UInterface
{

}; 



// Class ConZ.MovableCollisionFieldComponent
// Size: 0x118(Inherited: 0xB0) 
struct UMovableCollisionFieldComponent : public UActorComponent
{
	float _collisionCheckInterval;  // 0xB0(0x4)
	struct FMovableCollisionFieldState _currentState;  // 0xB4(0x3)
	char pad_183[25];  // 0xB7(0x19)
	struct FMovableCollisionFieldMoveInfo _moveInfo[2];  // 0xD0(0x10)
	struct FVector _startRelativeLocation;  // 0xE0(0xC)
	struct FVector _endRelativeLocation;  // 0xEC(0xC)
	char pad_248[32];  // 0xF8(0x20)

	void OnRep_CurrentState(); // Function ConZ.MovableCollisionFieldComponent.OnRep_CurrentState
	void NetMulticast_DeactivateField(); // Function ConZ.MovableCollisionFieldComponent.NetMulticast_DeactivateField
	void NetMulticast_ActivateField(); // Function ConZ.MovableCollisionFieldComponent.NetMulticast_ActivateField
	void Initialize(struct TArray<struct UStaticMeshComponent*>& movableMeshes, struct TArray<struct UStaticMeshComponent*>& collisionMeshes); // Function ConZ.MovableCollisionFieldComponent.Initialize
}; 



// Class ConZ.ScopeableItemComponentState
// Size: 0x48(Inherited: 0x40) 
struct UScopeableItemComponentState : public UItemComponentStateBase
{
	int32_t CurrentZoomLevel;  // 0x40(0x4)
	char pad_68[4];  // 0x44(0x4)

}; 



// Class ConZ.MusicPlayerDisplayWidget
// Size: 0x308(Inherited: 0x260) 
struct UMusicPlayerDisplayWidget : public UUserWidget
{
	struct UImage* _shuffleImage;  // 0x260(0x8)
	struct UImage* _repeatImage;  // 0x268(0x8)
	struct UImage* _previousImage;  // 0x270(0x8)
	struct UImage* _pauseImage;  // 0x278(0x8)
	struct UImage* _playImage;  // 0x280(0x8)
	struct UImage* _nextImage;  // 0x288(0x8)
	struct UTextBlock* _songTitleText;  // 0x290(0x8)
	float _inactiveOpacity;  // 0x298(0x4)
	float _iconActivityDuration;  // 0x29C(0x4)
	float _trackNameDuration;  // 0x2A0(0x4)
	float _radioStationNameDuration;  // 0x2A4(0x4)
	float _trackNameOffsetStep;  // 0x2A8(0x4)
	float _trackNameOffsetPadding;  // 0x2AC(0x4)
	float _trackNameWaitingDuration;  // 0x2B0(0x4)
	char pad_692[84];  // 0x2B4(0x54)

	void OnTrackNameChange(); // Function ConZ.MusicPlayerDisplayWidget.OnTrackNameChange
	void OnPreviousTrackIconTimeFinished(); // Function ConZ.MusicPlayerDisplayWidget.OnPreviousTrackIconTimeFinished
	void OnNextTrackIconTimeFinished(); // Function ConZ.MusicPlayerDisplayWidget.OnNextTrackIconTimeFinished
}; 



// Class ConZ.NameableItemComponentState
// Size: 0x50(Inherited: 0x40) 
struct UNameableItemComponentState : public UItemComponentStateBase
{
	struct FString Name;  // 0x40(0x10)

}; 



// Class ConZ.NetworkPredictionComponent
// Size: 0x1F0(Inherited: 0xB0) 
struct UNetworkPredictionComponent : public UActorComponent
{
	char pad_176[64];  // 0xB0(0x40)
	float _interpolationBackTime;  // 0xF0(0x4)
	float _timeSmoothing;  // 0xF4(0x4)
	float _positionLerpSpeed;  // 0xF8(0x4)
	float _rotationLerpSpeed;  // 0xFC(0x4)
	uint8_t  _syncPosition;  // 0x100(0x1)
	uint8_t  _syncRotation;  // 0x101(0x1)
	uint8_t  _syncVelocity;  // 0x102(0x1)
	uint8_t  _syncAngularVelocity;  // 0x103(0x1)
	char pad_260_1 : 7;  // 0x104(0x1)
	bool _isPositionCompressed : 1;  // 0x104(0x1)
	char pad_261_1 : 7;  // 0x105(0x1)
	bool _isRotationCompressed : 1;  // 0x105(0x1)
	char pad_262_1 : 7;  // 0x106(0x1)
	bool _isVelocityCompressed : 1;  // 0x106(0x1)
	char pad_263_1 : 7;  // 0x107(0x1)
	bool _isAngularVelocityCompressed : 1;  // 0x107(0x1)
	float _sendRate;  // 0x108(0x4)
	float _restSendRate;  // 0x10C(0x4)
	char pad_272[100];  // 0x110(0x64)
	float _atRestPositionThreshold;  // 0x174(0x4)
	float _atRestRotationThreshold;  // 0x178(0x4)
	float _atRestDeltaTimeThreshold;  // 0x17C(0x4)
	float _distanceThresholdToSnap;  // 0x180(0x4)
	char pad_388[76];  // 0x184(0x4C)
	float _minTimeToCoverPosition;  // 0x1D0(0x4)
	float _maxTimeToCoverPosition;  // 0x1D4(0x4)
	float _minTimeToCoverRotation;  // 0x1D8(0x4)
	float _maxTimeToCoverRotation;  // 0x1DC(0x4)
	char pad_480[16];  // 0x1E0(0x10)

	void Server_SendTransform(struct TArray<char> packedState); // Function ConZ.NetworkPredictionComponent.Server_SendTransform
	void Multicast_SendTransform(struct TArray<char> packedState); // Function ConZ.NetworkPredictionComponent.Multicast_SendTransform
	void ForceStateSendNextFrame(); // Function ConZ.NetworkPredictionComponent.ForceStateSendNextFrame
}; 



// Class ConZ.NetworkStatics
// Size: 0x28(Inherited: 0x28) 
struct UNetworkStatics : public UBlueprintFunctionLibrary
{

	void SetComponentNetAddressable(struct UActorComponent* Component); // Function ConZ.NetworkStatics.SetComponentNetAddressable
	bool ParseServerIpAndPort(struct FString Text, struct FString& Ip, int32_t& Port); // Function ConZ.NetworkStatics.ParseServerIpAndPort
	struct FString MakeAuthTokenForUser(struct UUser* User, struct FString password); // Function ConZ.NetworkStatics.MakeAuthTokenForUser
	struct FString MakeAuthTokenForCurrentUser(struct UObject* WorldContextObject, struct FString password); // Function ConZ.NetworkStatics.MakeAuthTokenForCurrentUser
	struct FString MakeAuthToken(struct FString UserId, struct FString password); // Function ConZ.NetworkStatics.MakeAuthToken
	int32_t GetDefaultDedicatedServerResponsePort(); // Function ConZ.NetworkStatics.GetDefaultDedicatedServerResponsePort
	struct FString GetAuthTokenForUser(struct UUser* User, struct FString ServerIp, int32_t ServerResponsePort); // Function ConZ.NetworkStatics.GetAuthTokenForUser
	struct FString GetAuthTokenForCurrentUser(struct UObject* WorldContextObject, struct FString ServerIp, int32_t ServerResponsePort); // Function ConZ.NetworkStatics.GetAuthTokenForCurrentUser
}; 



// Class ConZ.NightVisionGogglesItem
// Size: 0x9F0(Inherited: 0x9C0) 
struct ANightVisionGogglesItem : public AClothesItem
{
	struct UAkAudioEvent* ActivatedSound;  // 0x9B8(0x8)
	struct UAkAudioEvent* DeactivatedSound;  // 0x9C0(0x8)
	struct FMulticastInlineDelegate ActivatedChanged;  // 0x9C8(0x10)
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent;  // 0x9E0(0x8)
	struct FGameplayTag _nightVisionGogglesOnTag;  // 0x9E8(0x8)

	void OnComponentDeactivated(struct UActorComponent* Component); // Function ConZ.NightVisionGogglesItem.OnComponentDeactivated
	void OnComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.NightVisionGogglesItem.OnComponentActivated
	void ActivatedChangedEvent__DelegateSignature(struct ANightVisionGogglesItem* sender); // DelegateFunction ConZ.NightVisionGogglesItem.ActivatedChangedEvent__DelegateSignature
}; 



// Class ConZ.NotificationPanelWidget
// Size: 0x2A0(Inherited: 0x260) 
struct UNotificationPanelWidget : public UUserWidget
{
	struct UVerticalBox* _notificationBox;  // 0x260(0x8)
	struct UBorder* _nextEventBox;  // 0x268(0x8)
	struct UTextBlock* _nextEventCountdown;  // 0x270(0x8)
	struct UTextBlock* _nextEventLocation;  // 0x278(0x8)
	struct UBorder* _eventCancelBox;  // 0x280(0x8)
	struct UTextBlock* _eventCancelTime;  // 0x288(0x8)
	struct UBorder* _eventTime;  // 0x290(0x8)
	struct UTextBlock* _eventTimeText;  // 0x298(0x8)

}; 



// Class ConZ.RestAssetData
// Size: 0x50(Inherited: 0x30) 
struct URestAssetData : public UInteractionAssetData
{
	uint8_t  RestingMode;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)
	struct UAnimSequenceBase* RestingAnimation;  // 0x38(0x8)
	struct TArray<struct FVector> AdditionalEndRestLocations;  // 0x40(0x10)

}; 



// Class ConZ.NotificationsManager
// Size: 0x2D8(Inherited: 0x220) 
struct ANotificationsManager : public AActor
{
	struct TMap<struct FDbIntegerId, struct UNotificationDescription*> _queuedNotifications;  // 0x220(0x50)
	struct TArray<struct UNotificationChain*> _queuedNotificationChains;  // 0x270(0x10)
	char pad_640[80];  // 0x280(0x50)
	int64_t _notificationTimeout;  // 0x2D0(0x8)

	void OnPlayerReadyToPlay(struct AConZPlayerController* PlayerController); // Function ConZ.NotificationsManager.OnPlayerReadyToPlay
	void NetMulticast_RequestNotification(struct FNotificationDescriptionReplicationHelper Description); // Function ConZ.NotificationsManager.NetMulticast_RequestNotification
}; 



// Class ConZ.NotificationWidget
// Size: 0x2A0(Inherited: 0x260) 
struct UNotificationWidget : public UUserWidget
{
	struct USizeBox* _notificationSize;  // 0x260(0x8)
	struct UImage* _icon;  // 0x268(0x8)
	struct UTextBlock* _text;  // 0x270(0x8)
	struct UWidgetAnimation* _increaseToMaxSize;  // 0x278(0x8)
	char pad_640[32];  // 0x280(0x20)

}; 



// Class ConZ.OpenItemAction
// Size: 0xB8(Inherited: 0xA8) 
struct UOpenItemAction : public UInteractionAction
{
	char pad_168[16];  // 0xA8(0x10)

}; 



// Class ConZ.ObjectCondition
// Size: 0x28(Inherited: 0x28) 
struct UObjectCondition : public UInterface
{

}; 



// Class ConZ.ObjectiveItemWidget
// Size: 0x2D8(Inherited: 0x260) 
struct UObjectiveItemWidget : public UUserWidget
{
	struct UTextBlock* _objectiveItemText;  // 0x260(0x8)
	struct UImage* _bullet;  // 0x268(0x8)
	struct UImage* _bulletCompleted;  // 0x270(0x8)
	struct FLinearColor _objectiveActiveColor;  // 0x278(0x10)
	struct FLinearColor _objectiveCompletedColor;  // 0x288(0x10)
	struct FLinearColor _objectiveFailedColor;  // 0x298(0x10)
	char pad_680[48];  // 0x2A8(0x30)

}; 



// Class ConZ.ObjectivesWidget
// Size: 0x2C0(Inherited: 0x260) 
struct UObjectivesWidget : public UUserWidget
{
	struct UTextBlock* _objectiveDescription;  // 0x260(0x8)
	struct UHorizontalBox* _amountTracker;  // 0x268(0x8)
	struct UTextBlock* _currentAmount;  // 0x270(0x8)
	struct UTextBlock* _totalAmount;  // 0x278(0x8)
	struct FLinearColor activeObjectiveFontColor;  // 0x280(0x10)
	struct FLinearColor inctiveObjectiveFontColor;  // 0x290(0x10)
	int32_t activeObjectiveFontSize;  // 0x2A0(0x4)
	int32_t inactiveObjectiveFontSize;  // 0x2A4(0x4)
	char pad_680[24];  // 0x2A8(0x18)

}; 



// Class ConZ.PaddleItemTag
// Size: 0x50(Inherited: 0x30) 
struct UPaddleItemTag : public UBaseItemTag
{
	struct UBlendSpace* PaddlingLHandAnimation;  // 0x30(0x8)
	struct UBlendSpace* PaddlingRHandAnimation;  // 0x38(0x8)
	struct UAnimSequence* PaddlingLToRAnimation;  // 0x40(0x8)
	struct UAnimSequence* PaddlingRToLAnimation;  // 0x48(0x8)

}; 



// Class ConZ.ParachuteItemTag
// Size: 0x30(Inherited: 0x30) 
struct UParachuteItemTag : public UBaseItemTag
{

}; 



// Class ConZ.PauseMenu
// Size: 0x390(Inherited: 0x260) 
struct UPauseMenu : public UBaseMenu
{
	char pad_608[168];  // 0x260(0xA8)
	struct UConZStandardButton* _resume;  // 0x308(0x8)
	struct UConZStandardButton* _clientSettings;  // 0x310(0x8)
	struct UConZStandardButton* _serverSettings;  // 0x318(0x8)
	struct UConZStandardButton* _addToFavourites;  // 0x320(0x8)
	struct UConZStandardButton* _commitSuicide;  // 0x328(0x8)
	struct UConZStandardButton* _statistics;  // 0x330(0x8)
	struct UConZStandardButton* _mainMenu;  // 0x338(0x8)
	struct UConZStandardButton* _quitGame;  // 0x340(0x8)
	struct UVerticalBox* _messageBoxPanel;  // 0x348(0x8)
	struct UPanelWidget* _mainPanel;  // 0x350(0x8)
	struct UTextBlock* _suicideTimeCooldown;  // 0x358(0x8)
	UTextOnlyTooltip* _serverSettingsLockedTooltipClass;  // 0x360(0x8)
	struct UTextOnlyTooltip* _serverSettingsLockedTooltip;  // 0x368(0x8)
	char pad_880[32];  // 0x370(0x20)

	void OnStatisticsClicked(); // Function ConZ.PauseMenu.OnStatisticsClicked
	void OnSettingsClicked(); // Function ConZ.PauseMenu.OnSettingsClicked
	void OnServerSettingsClicked(); // Function ConZ.PauseMenu.OnServerSettingsClicked
	void OnResumeClicked(); // Function ConZ.PauseMenu.OnResumeClicked
	void OnQuitGameClicked(); // Function ConZ.PauseMenu.OnQuitGameClicked
	void OnExitToMainMenuClicked(); // Function ConZ.PauseMenu.OnExitToMainMenuClicked
	void OnCommitSuicideClicked(); // Function ConZ.PauseMenu.OnCommitSuicideClicked
	void OnAddToFavouritesClicked(); // Function ConZ.PauseMenu.OnAddToFavouritesClicked
}; 



// Class ConZ.PauseMenuUIController
// Size: 0x68(Inherited: 0x28) 
struct UPauseMenuUIController : public UObject
{
	char pad_40[24];  // 0x28(0x18)
	struct UAkAudioEvent* _resumeAllSounds;  // 0x40(0x8)
	struct UAkAudioEvent* _stopAllSounds;  // 0x48(0x8)
	struct UAkAudioEvent* _pauseAllSounds;  // 0x50(0x8)
	char pad_88[16];  // 0x58(0x10)

}; 



// Class ConZ.PhoenixTearsComponent
// Size: 0xD8(Inherited: 0xC8) 
struct UPhoenixTearsComponent : public UItemComponent
{
	char pad_200[8];  // 0xC8(0x8)
	struct UAnimMontage* _itemInjectionMontage;  // 0xD0(0x8)

}; 



// Class ConZ.PhotoModeMainPanel
// Size: 0x428(Inherited: 0x260) 
struct UPhotoModeMainPanel : public UUserWidget
{
	struct UPanelWidget* _mainPanelContainer;  // 0x260(0x8)
	struct UTabGroup* _coreMenuTabButtons;  // 0x268(0x8)
	struct UWidgetSwitcher* _coreMenu;  // 0x270(0x8)
	struct UOverlay* _inputLegend;  // 0x278(0x8)
	struct UImage* _gridLine0;  // 0x280(0x8)
	struct UImage* _gridLine1;  // 0x288(0x8)
	struct UImage* _gridLine2;  // 0x290(0x8)
	struct UImage* _gridLine3;  // 0x298(0x8)
	struct UImage* _frameDisplay;  // 0x2A0(0x8)
	struct UImage* _logoDisplay;  // 0x2A8(0x8)
	struct FText _cameraTabTitle;  // 0x2B0(0x18)
	struct FText _effectsTabTitle;  // 0x2C8(0x18)
	struct FText _frameTabTitle;  // 0x2E0(0x18)
	struct FText _bodyTabTitle;  // 0x2F8(0x18)
	struct TArray<struct TSoftObjectPtr<UTexture>> _frames;  // 0x310(0x10)
	char pad_800[8];  // 0x320(0x8)
	UTabButton* _buttonClass;  // 0x328(0x8)
	struct UCarouselWithLabel* _cameraMode;  // 0x330(0x8)
	struct USliderWithLabelAndNumber* _cameraTilt;  // 0x338(0x8)
	struct USliderWithLabelAndNumber* _fieldOfView;  // 0x340(0x8)
	struct USliderWithLabelAndNumber* _depthOfField;  // 0x348(0x8)
	struct USliderWithLabelAndNumber* _focusDistance;  // 0x350(0x8)
	struct USliderWithLabelAndNumber* _selfieLight;  // 0x358(0x8)
	struct USliderWithLabelAndNumber* _exposure;  // 0x360(0x8)
	struct USliderWithLabelAndNumber* _contrast;  // 0x368(0x8)
	struct USliderWithLabelAndNumber* _vignette;  // 0x370(0x8)
	struct USliderWithLabelAndNumber* _chromaticAberration;  // 0x378(0x8)
	struct USliderWithLabelAndNumber* _grain;  // 0x380(0x8)
	struct USliderWithLabelAndNumber* _time;  // 0x388(0x8)
	struct UCarouselWithLabel* _frame;  // 0x390(0x8)
	struct UCarouselWithLabel* _logo;  // 0x398(0x8)
	struct UCarouselWithLabel* _aspectRatio;  // 0x3A0(0x8)
	struct UCarouselWithLabel* _lookAtCamera;  // 0x3A8(0x8)
	struct UCarouselWithLabel* _upperBodyPose;  // 0x3B0(0x8)
	struct UCarouselWithLabel* _lowerBodyPose;  // 0x3B8(0x8)
	struct UCarouselWithLabel* _facialExpression;  // 0x3C0(0x8)
	struct UTextBlock* _selfieModeNote;  // 0x3C8(0x8)
	struct UTextBlock* _bodyPoseNote;  // 0x3D0(0x8)
	struct UTextBlock* _facialExpressionNote;  // 0x3D8(0x8)
	char pad_992[72];  // 0x3E0(0x48)

	void UpdateFrame(); // Function ConZ.PhotoModeMainPanel.UpdateFrame
	struct UWidget* MoveFocusUp(uint8_t  UINavigation); // Function ConZ.PhotoModeMainPanel.MoveFocusUp
	struct UWidget* MoveFocusDown(uint8_t  UINavigation); // Function ConZ.PhotoModeMainPanel.MoveFocusDown
}; 



// Class ConZ.PhotoModePawn
// Size: 0x3E0(Inherited: 0x280) 
struct APhotoModePawn : public APawn
{
	char pad_640[8];  // 0x280(0x8)
	UPhotoModeMainPanel* HudWidgetClass;  // 0x288(0x8)
	UPrisonerPhotoModeAnimInstance* AnimInstanceClass;  // 0x290(0x8)
	char pad_664[16];  // 0x298(0x10)
	struct UCineCameraComponent* _camera;  // 0x2A8(0x8)
	struct USpotLightComponent* _light;  // 0x2B0(0x8)
	struct UVisionEffectsComponent* _visionEffects;  // 0x2B8(0x8)
	struct UAkAudioEvent* _shutterSound;  // 0x2C0(0x8)
	float _maxFocusDistance;  // 0x2C8(0x4)
	float _collisionSphereRadius;  // 0x2CC(0x4)
	float _minOrbitingDistance;  // 0x2D0(0x4)
	float _maxDistanceFromTarget;  // 0x2D4(0x4)
	float _desiredOrbitDistance;  // 0x2D8(0x4)
	float _maxMultiplayerCameraHeightDifference;  // 0x2DC(0x4)
	float _maxMultiplayerExposureValue;  // 0x2E0(0x4)
	float _maxMultiplayerCameraFOV;  // 0x2E4(0x4)
	float _keyInputCameraSpeed;  // 0x2E8(0x4)
	float _timeDilationInterpSpeed;  // 0x2EC(0x4)
	char pad_752[240];  // 0x2F0(0xF0)

	void SetGameAudioPaused(bool paused); // Function ConZ.PhotoModePawn.SetGameAudioPaused
	void OnFadeOutFinished(); // Function ConZ.PhotoModePawn.OnFadeOutFinished
	void Client_Initialize(struct AActor* Target); // Function ConZ.PhotoModePawn.Client_Initialize
}; 



// Class ConZ.PrisonerAnimInstance_Airplane
// Size: 0x3A0(Inherited: 0x2C0) 
struct UPrisonerAnimInstance_Airplane : public UAnimInstance
{
	char pad_704_1 : 7;  // 0x2C0(0x1)
	bool _isDriver : 1;  // 0x2B8(0x1)
	float _pitchAmount;  // 0x2BC(0x4)
	float _rollAmount;  // 0x2C0(0x4)
	float _yawAmount;  // 0x2C4(0x4)
	char pad_717[3];  // 0x2CD(0x3)
	struct FTransform _throttleTransform;  // 0x2D0(0x30)
	struct FTransform _leftPedalTransform;  // 0x300(0x30)
	struct FTransform _rightPedalTransform;  // 0x330(0x30)
	struct FTransform _stickTransform;  // 0x360(0x30)
	struct UBlendSpace* _driverIdleAnimation;  // 0x390(0x8)
	struct UBlendSpace* _passengerIdleAnimation;  // 0x398(0x8)

}; 



// Class ConZ.PhysicsStatics
// Size: 0x28(Inherited: 0x28) 
struct UPhysicsStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.PickupItemAction
// Size: 0xA8(Inherited: 0xA8) 
struct UPickupItemAction : public UInteractionAction
{

}; 



// Class ConZ.RequestMinigameToolsResponse
// Size: 0x38(Inherited: 0x28) 
struct URequestMinigameToolsResponse : public UPlayerRpcChannelServerResponse
{
	char pad_40[16];  // 0x28(0x10)

}; 



// Class ConZ.PrisonerActionExtinguishFire
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionExtinguishFire : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PlaceableActorBaseReplicatedState
// Size: 0x50(Inherited: 0x28) 
struct UPlaceableActorBaseReplicatedState : public UObject
{
	char pad_40[40];  // 0x28(0x28)

}; 



// Class ConZ.PlaceableActorBaseBuildingReplicatedState
// Size: 0x70(Inherited: 0x50) 
struct UPlaceableActorBaseBuildingReplicatedState : public UPlaceableActorBaseReplicatedState
{
	char pad_80[32];  // 0x50(0x20)

}; 



// Class ConZ.PlaceableActorBaseBuilding
// Size: 0x5E8(Inherited: 0x4E8) 
struct APlaceableActorBaseBuilding : public APlaceableActorBase
{
	int32_t _maxNumberOfTiles;  // 0x4E8(0x4)
	float _maxHeightDifferenceForTiling;  // 0x4EC(0x4)
	float _maxTileHeightAdjustionUp;  // 0x4F0(0x4)
	float _maxTileHeightAdjustionDown;  // 0x4F4(0x4)
	float _tileSnappingAngle;  // 0x4F8(0x4)
	float _sizeVariatedTilesMaxHeightDifference;  // 0x4FC(0x4)
	float _maxGroundPointDistance;  // 0x500(0x4)
	float _groundPointsTraceHeight;  // 0x504(0x4)
	float _groundPointsTraceDepth;  // 0x508(0x4)
	float _maxPlacementLengthForSizeVariatedTiles;  // 0x50C(0x4)
	char pad_1296[56];  // 0x510(0x38)
	struct FTilesData _tilesData;  // 0x548(0x18)
	struct UStaticMeshComponent* _flagAreaMeshComponent;  // 0x560(0x8)
	struct UMaterialInstanceDynamic* _primaryMaterialFriendlyFlag;  // 0x568(0x8)
	struct FVector _replicatedFirstPointLocation;  // 0x570(0xC)
	struct FRotator _replicatedFirstPointRotation;  // 0x57C(0xC)
	uint8_t  _placementSubState;  // 0x588(0x1)
	uint8_t  _stateFlags;  // 0x589(0x1)
	char pad_1418[54];  // 0x58A(0x36)
	struct TArray<struct FSizeVariatedTilesData> _sizeVariationData;  // 0x5C0(0x10)
	char pad_1488[24];  // 0x5D0(0x18)

	void OnRep_ReplicatedFirstPointRotation(); // Function ConZ.PlaceableActorBaseBuilding.OnRep_ReplicatedFirstPointRotation
	void OnRep_ReplicatedFirstPointLocation(); // Function ConZ.PlaceableActorBaseBuilding.OnRep_ReplicatedFirstPointLocation
	void OnRep_PlacementSubState(); // Function ConZ.PlaceableActorBaseBuilding.OnRep_PlacementSubState
}; 



// Class ConZ.PlaceableActorBaseUpgrade
// Size: 0x530(Inherited: 0x4E8) 
struct APlaceableActorBaseUpgrade : public APlaceableActorBase
{
	struct FConZBaseElementIdentifier _elementToBeUpgraded;  // 0x4E8(0x20)
	char pad_1288[40];  // 0x508(0x28)

	void OnRep_ElementToBeUpgraded(); // Function ConZ.PlaceableActorBaseUpgrade.OnRep_ElementToBeUpgraded
}; 



// Class ConZ.PrisonerBodyConditionUIData_RadiationPresence
// Size: 0x1B8(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_RadiationPresence : public UPrisonerBodyConditionUIData
{
	char pad_416[24];  // 0x1A0(0x18)

}; 



// Class ConZ.PlaceableActorFortifications
// Size: 0x518(Inherited: 0x4E8) 
struct APlaceableActorFortifications : public APlaceableActorBase
{
	char pad_1256[48];  // 0x4E8(0x30)

}; 



// Class ConZ.PrisonerBodySymptomCauseUIData_Fatigue
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCauseUIData_Fatigue : public UPrisonerBodySymptomCauseUIData
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.PlaceableActorGarden
// Size: 0x5B0(Inherited: 0x4E8) 
struct APlaceableActorGarden : public APlaceableActorBase
{
	uint8_t  _gardenPlacementState;  // 0x4E8(0x1)
	char pad_1257[55];  // 0x4E9(0x37)
	struct TArray<struct UStaticMeshComponent*> _staticMeshComponents_Main;  // 0x520(0x10)
	struct TArray<struct UStaticMeshComponent*> _staticMeshComponents_Outline;  // 0x530(0x10)
	struct TArray<struct UStaticMeshComponent*> _staticMeshComponents_Depth;  // 0x540(0x10)
	struct TArray<struct UStaticMeshComponent*> _directionIndicatorStaticMeshComponents;  // 0x550(0x10)
	struct FBox2D _replicatedGardenSize;  // 0x560(0x14)
	char pad_1396[60];  // 0x574(0x3C)

	void OnRep_GardenSize(); // Function ConZ.PlaceableActorGarden.OnRep_GardenSize
	void OnRep_GardenPlacementState(); // Function ConZ.PlaceableActorGarden.OnRep_GardenPlacementState
}; 



// Class ConZ.PlaceableOnRackLargeItemTag
// Size: 0x38(Inherited: 0x38) 
struct UPlaceableOnRackLargeItemTag : public UPlaceableOnRackItemTag
{

}; 



// Class ConZ.PrisonerActionUnequipWeaponDescription
// Size: 0x38(Inherited: 0x38) 
struct UPrisonerActionUnequipWeaponDescription : public UPrisonerActionDescription
{

}; 



// Class ConZ.PlacedPlaceableWidget
// Size: 0x2B8(Inherited: 0x260) 
struct UPlacedPlaceableWidget : public UUserWidget
{
	char pad_608[80];  // 0x260(0x50)
	struct UVerticalBox* _container;  // 0x2B0(0x8)

}; 



// Class ConZ.PlantGrowthDisplay
// Size: 0x278(Inherited: 0x220) 
struct APlantGrowthDisplay : public AActor
{
	struct UPlantSpecies* _plantSpecies;  // 0x220(0x8)
	char pad_552_1 : 7;  // 0x228(0x1)
	bool _animateGrowth : 1;  // 0x228(0x1)
	char pad_553[3];  // 0x229(0x3)
	float _growthSpeed;  // 0x22C(0x4)
	float _growthPercentage;  // 0x230(0x4)
	float _dehydration;  // 0x234(0x4)
	float _pestsIntensity;  // 0x238(0x4)
	float _diseasesIntensity;  // 0x23C(0x4)
	struct FString _stageText;  // 0x240(0x10)
	struct UNiagaraSystem* _pestsParticleSystem;  // 0x250(0x8)
	struct UNiagaraComponent* _pestsParticleComponent;  // 0x258(0x8)
	char pad_608[24];  // 0x260(0x18)

	struct FString GetPlantGrowthStageString(float growth, struct UPlantSpecies* species); // Function ConZ.PlantGrowthDisplay.GetPlantGrowthStageString
	float GetPlantGrowthStagePercentage(float growth, struct UPlantSpecies* species); // Function ConZ.PlantGrowthDisplay.GetPlantGrowthStagePercentage
	float GetGrowthPercentage(); // Function ConZ.PlantGrowthDisplay.GetGrowthPercentage
}; 



// Class ConZ.PlantingPanel
// Size: 0x388(Inherited: 0x260) 
struct UPlantingPanel : public UUserWidget
{
	struct UImageSlotWidget* _seedSlot;  // 0x260(0x8)
	struct UImageSlotWidget* _fertilizerSlot;  // 0x268(0x8)
	char pad_624[8];  // 0x270(0x8)
	struct FSlateBrush _organicFertilizerIcon;  // 0x278(0x88)
	struct FSlateBrush _industrialFertilizerIcon;  // 0x300(0x88)

}; 



// Class ConZ.PrisonerActionFillVehicleFuelWithItemDescription
// Size: 0x70(Inherited: 0x38) 
struct UPrisonerActionFillVehicleFuelWithItemDescription : public UPrisonerActionDescription
{
	char pad_56[56];  // 0x38(0x38)

}; 



// Class ConZ.PlantingPanelUIController
// Size: 0x50(Inherited: 0x28) 
struct UPlantingPanelUIController : public UObject
{
	char pad_40[40];  // 0x28(0x28)

}; 



// Class ConZ.PlantPestSpecies
// Size: 0x50(Inherited: 0x30) 
struct UPlantPestSpecies : public UDataAsset
{
	struct FText SpeciesName;  // 0x30(0x18)
	float HarvestingReductionPercentage;  // 0x48(0x4)
	char pad_76[4];  // 0x4C(0x4)

}; 



// Class ConZ.PowerCableMeshSet
// Size: 0x40(Inherited: 0x30) 
struct UPowerCableMeshSet : public UDataAsset
{
	struct TArray<struct FPowerCableMeshInfo> Meshes;  // 0x30(0x10)

}; 



// Class ConZ.PlantDiseaseSpecies
// Size: 0x50(Inherited: 0x30) 
struct UPlantDiseaseSpecies : public UDataAsset
{
	struct FText SpeciesName;  // 0x30(0x18)
	float HarvestingReductionPercentage;  // 0x48(0x4)
	char pad_76[4];  // 0x4C(0x4)

}; 



// Class ConZ.PlantStatusIndicatorWidget
// Size: 0x500(Inherited: 0x260) 
struct UPlantStatusIndicatorWidget : public UUserWidget
{
	struct UTextBlock* _speciesNameText;  // 0x260(0x8)
	struct UTextBlock* _growthStageText;  // 0x268(0x8)
	struct UTextBlock* _sunEnergyRateText;  // 0x270(0x8)
	struct UTextBlock* _waterAmountText;  // 0x278(0x8)
	struct UTextBlock* _fertilizerText;  // 0x280(0x8)
	struct UVerticalBox* _conditionVerticalBox;  // 0x288(0x8)
	struct UHorizontalBox* _pestHorizontalBox;  // 0x290(0x8)
	struct UImage* _pestStatusIcon;  // 0x298(0x8)
	struct UTextBlock* _pestStatusText;  // 0x2A0(0x8)
	struct UHorizontalBox* _diseaseHorizontalBox;  // 0x2A8(0x8)
	struct UImage* _diseaseStatusIcon;  // 0x2B0(0x8)
	struct UTextBlock* _diseaseStatusText;  // 0x2B8(0x8)
	struct UHorizontalBox* _weedsHorizontalBox;  // 0x2C0(0x8)
	struct UImage* _weedsStatusIcon;  // 0x2C8(0x8)
	struct UTextBlock* _weedsStatusText;  // 0x2D0(0x8)
	struct FSlateBrush _pestIconBrush;  // 0x2D8(0x88)
	struct FSlateBrush _diseaseIconBrush;  // 0x360(0x88)
	struct FSlateBrush _weedsIconBrush;  // 0x3E8(0x88)
	struct FSlateBrush _treatmentIconBrush;  // 0x470(0x88)
	char pad_1272[8];  // 0x4F8(0x8)

}; 



// Class ConZ.PlantStatusIndicatorUIController
// Size: 0x38(Inherited: 0x28) 
struct UPlantStatusIndicatorUIController : public UObject
{
	char pad_40[16];  // 0x28(0x10)

}; 



// Class ConZ.TradeableDiscountCondition
// Size: 0x28(Inherited: 0x28) 
struct UTradeableDiscountCondition : public UObject
{

}; 



// Class ConZ.VehicleGroupSpawningPreset
// Size: 0x40(Inherited: 0x30) 
struct UVehicleGroupSpawningPreset : public UDataAsset
{
	struct TArray<struct UVehiclePreset*> VehiclePresets;  // 0x30(0x10)

}; 



// Class ConZ.PlasticSurgeryDiscountCondition
// Size: 0x28(Inherited: 0x28) 
struct UPlasticSurgeryDiscountCondition : public UTradeableDiscountCondition
{

}; 



// Class ConZ.PlasticSurgeryMenuWidget
// Size: 0x418(Inherited: 0x260) 
struct UPlasticSurgeryMenuWidget : public UBaseMenu
{
	char pad_608[8];  // 0x260(0x8)
	struct UOverlay* _overlayMenu;  // 0x268(0x8)
	struct UWidgetSwitcher* _pageSwitcher;  // 0x270(0x8)
	struct UTrashNamedCarouselWidget* _carouselGender;  // 0x278(0x8)
	struct UTrashNamedSliderWidget* _sliderHead;  // 0x280(0x8)
	struct UCCGameUpgradeConditionDisplayWidget* _appearanceUpgradeConditionDisplay;  // 0x288(0x8)
	struct UPresetColorPicker* _presetColorPickerSkinTone;  // 0x290(0x8)
	struct UTrashNamedSliderWidget* _sliderAge;  // 0x298(0x8)
	struct UTrashNamedCarouselWidget* _carouselConcealedMode;  // 0x2A0(0x8)
	struct UTrashNamedSliderWidget* _sliderPenisBreastSize;  // 0x2A8(0x8)
	struct UTrashNamedCarouselWidget* _carouselTattoos;  // 0x2B0(0x8)
	struct UTrashNamedSliderWidget* _sliderTattooStyle;  // 0x2B8(0x8)
	struct UCCGameUpgradeConditionDisplayWidget* _tattooUpgradeConditionDisplay;  // 0x2C0(0x8)
	struct UConZStandardButton* _buttonRandomizeCharacter;  // 0x2C8(0x8)
	struct UConZStandardButton* _buttonNextToFace;  // 0x2D0(0x8)
	struct UTrashNamedSliderWidget* _sliderFaceType;  // 0x2D8(0x8)
	struct UPresetColorPicker* _presetColorPickerEyeColor;  // 0x2E0(0x8)
	struct UTrashNamedSliderWidget* _sliderIrisType;  // 0x2E8(0x8)
	struct UConZStandardButton* _buttonBackToCharacter;  // 0x2F0(0x8)
	struct UConZStandardButton* _buttonRandomizeFace;  // 0x2F8(0x8)
	struct UConZStandardButton* _buttonApplyPlasticSurgery;  // 0x300(0x8)
	struct UOverlay* _overlayPlasticSurgeryConfirmation;  // 0x308(0x8)
	struct UConZStandardButton* _buttonCancelConfirmation;  // 0x310(0x8)
	struct UConZStandardButton* _buttonContinueConfirmation;  // 0x318(0x8)
	struct UScrollBox* _faceOptionsScrollbox;  // 0x320(0x8)
	char pad_808[240];  // 0x328(0xF0)

	void OnRandomizeFaceClicked(); // Function ConZ.PlasticSurgeryMenuWidget.OnRandomizeFaceClicked
	void OnRandomizeCharacterClicked(); // Function ConZ.PlasticSurgeryMenuWidget.OnRandomizeCharacterClicked
	void OnNextToFaceClicked(); // Function ConZ.PlasticSurgeryMenuWidget.OnNextToFaceClicked
	void OnContinueClickedInConfirmationPanel(); // Function ConZ.PlasticSurgeryMenuWidget.OnContinueClickedInConfirmationPanel
	void OnCancelClickedInConfirmationPanel(); // Function ConZ.PlasticSurgeryMenuWidget.OnCancelClickedInConfirmationPanel
	void OnBackToCharacterClicked(); // Function ConZ.PlasticSurgeryMenuWidget.OnBackToCharacterClicked
	void OnApplyFromFaceClicked(); // Function ConZ.PlasticSurgeryMenuWidget.OnApplyFromFaceClicked
}; 



// Class ConZ.WeaponStateBowFire
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateBowFire : public UWeaponStateFiring
{

}; 



// Class ConZ.PlasticSurgeryMugshot
// Size: 0x2E8(Inherited: 0x260) 
struct UPlasticSurgeryMugshot : public UUserWidget
{
	char pad_608[96];  // 0x260(0x60)
	struct UImage* _imgSelection;  // 0x2C0(0x8)
	struct UWidgetSwitcher* _mugshotGenderSwitcher;  // 0x2C8(0x8)
	struct UWidgetSwitcher* _maleMugshotSwitcher;  // 0x2D0(0x8)
	struct UWidgetSwitcher* _femaleMugshotSwitcher;  // 0x2D8(0x8)
	char pad_736[8];  // 0x2E0(0x8)

}; 



// Class ConZ.PrisonerHallucinationIllusion_SpawnCompanionCrow
// Size: 0x520(Inherited: 0x220) 
struct APrisonerHallucinationIllusion_SpawnCompanionCrow : public APrisonerHallucinationIllusion
{
	ACompanionCrow* _crowClass;  // 0x220(0x8)
	struct FName _crowAttachSocketName;  // 0x228(0x8)
	struct FTransform _attachedCrowRelativeTransform;  // 0x230(0x30)
	struct FFloatInterval _responseIdleInitialInterval;  // 0x260(0x8)
	struct FFloatInterval _responseIdleInterval;  // 0x268(0x8)
	struct TArray<struct UAnimMontage*> _responseIdleMontages;  // 0x270(0x10)
	struct FVector _flyoffDirection;  // 0x280(0xC)
	char pad_652[4];  // 0x28C(0x4)
	struct FRuntimeFloatCurve _flyoffSpeedVsTime;  // 0x290(0x88)
	struct UAkAudioEvent* _flyoffAudioEvent;  // 0x318(0x8)
	struct FRuntimeFloatCurve _cruisingSpeedVsTime;  // 0x320(0x88)
	struct FRuntimeFloatCurve _cruisingRotationRateVsTime;  // 0x3A8(0x88)
	struct FRuntimeFloatCurve _rollVsSteerRate;  // 0x430(0x88)
	float _landingDuration;  // 0x4B8(0x4)
	char pad_1212[4];  // 0x4BC(0x4)
	struct UAkAudioEvent* _landingAudioEvent;  // 0x4C0(0x8)
	struct UAkAudioEvent* _landedAudioEvent;  // 0x4C8(0x8)
	struct UAnimMontage* _landedMontage;  // 0x4D0(0x8)
	char pad_1240[72];  // 0x4D8(0x48)

}; 



// Class ConZ.PlasticSurgeryService
// Size: 0x38(Inherited: 0x38) 
struct UPlasticSurgeryService : public UTraderService
{

}; 



// Class ConZ.PlayerManagementActivePlayer
// Size: 0x260(Inherited: 0x260) 
struct UPlayerManagementActivePlayer : public UUserWidget
{

}; 



// Class ConZ.PlayerManagementMenu
// Size: 0x280(Inherited: 0x260) 
struct UPlayerManagementMenu : public UBaseMenu
{
	struct UButton* _buttonBack;  // 0x260(0x8)
	struct UButton* _buttonApply;  // 0x268(0x8)
	char pad_624[16];  // 0x270(0x10)

	void CloseMenu(); // Function ConZ.PlayerManagementMenu.CloseMenu
}; 



// Class ConZ.PlayerManagementUIController
// Size: 0x38(Inherited: 0x28) 
struct UPlayerManagementUIController : public UObject
{
	char pad_40[16];  // 0x28(0x10)

}; 



// Class ConZ.PrisonerActionFillVehicleFuelWithReplenishableResourceDescription
// Size: 0x88(Inherited: 0x38) 
struct UPrisonerActionFillVehicleFuelWithReplenishableResourceDescription : public UPrisonerActionDescription
{
	char pad_56[80];  // 0x38(0x50)

}; 



// Class ConZ.PlayerRpcChannel
// Size: 0xD0(Inherited: 0xB0) 
struct UPlayerRpcChannel : public UActorComponent
{
	char pad_176[32];  // 0xB0(0x20)

	void WeaponBow_Server_InsertArrow(struct AWeaponBow* bow, struct AAmmunitionArrow* arrow); // Function ConZ.PlayerRpcChannel.WeaponBow_Server_InsertArrow
	void Vehicle_Server_TakeMeleeDamage(struct UVehicleAttachment* Attachment, float damageAmount); // Function ConZ.PlayerRpcChannel.Vehicle_Server_TakeMeleeDamage
	void Vehicle_Server_TakeCollisionDamage(struct AVehicleBase* Vehicle, struct TArray<struct UVehicleAttachment*> Attachments, struct TArray<float> collisionDamages); // Function ConZ.PlayerRpcChannel.Vehicle_Server_TakeCollisionDamage
	void Vehicle_Server_SetLightsCategoryStates(struct AVehicleBase* Vehicle, uint8_t  lightsCategoryStates); // Function ConZ.PlayerRpcChannel.Vehicle_Server_SetLightsCategoryStates
	void Vehicle_Server_ProvidePrisonerWithDamage(struct AActor* Object, struct AActor* Target, struct FCollisionPointDamageEvent DamageEvent, struct AController* Instigator); // Function ConZ.PlayerRpcChannel.Vehicle_Server_ProvidePrisonerWithDamage
	void Vehicle_Server_MarkForDestruction(struct AVehicleBase* Vehicle, float timeToDestruct); // Function ConZ.PlayerRpcChannel.Vehicle_Server_MarkForDestruction
	void Vehicle_Server_DriverShouldBecomeOwner(struct APawn* Vehicle, struct ACharacter* Driver, bool IsWorldStreamed); // Function ConZ.PlayerRpcChannel.Vehicle_Server_DriverShouldBecomeOwner
	void Vehicle_Server_ApplyImpactDamage(struct APawn* Vehicle, float Damage, struct FHitResult HitResult, struct AActor* OtherActor); // Function ConZ.PlayerRpcChannel.Vehicle_Server_ApplyImpactDamage
	void Vehicle2_Server_SetPhysicsParameters(struct AVehicleBase* VehicleBase, struct FVector comPosition, struct FVector inertiaTensor, float Mass); // Function ConZ.PlayerRpcChannel.Vehicle2_Server_SetPhysicsParameters
	void TrapItem_Server_TriggerTrap(struct ATrapItem* TrapItem, struct FTrapTriggerParams Params); // Function ConZ.PlayerRpcChannel.TrapItem_Server_TriggerTrap
	void TrapItem_Server_SetNumTries(struct ATrapItem* TrapItem, int32_t numTries); // Function ConZ.PlayerRpcChannel.TrapItem_Server_SetNumTries
	void TrapItem_Server_DisarmTrap(struct APrisoner* disarmer, struct ATrapItem* TrapItem); // Function ConZ.PlayerRpcChannel.TrapItem_Server_DisarmTrap
	void TrapItem_Server_ClientAuthoritativeTriggerTrap(struct ATrapItem* TrapItem, struct FTrapTriggerParams Params); // Function ConZ.PlayerRpcChannel.TrapItem_Server_ClientAuthoritativeTriggerTrap
	void Switch_Server_Press(struct ASwitch* Actor); // Function ConZ.PlayerRpcChannel.Switch_Server_Press
	void SurvivalStats_Server_HandlePlayerLogout(struct APlayerController* PlayerController); // Function ConZ.PlayerRpcChannel.SurvivalStats_Server_HandlePlayerLogout
	void SurvivalStats_Server_HandlePlayerLogin(struct APlayerController* PlayerController); // Function ConZ.PlayerRpcChannel.SurvivalStats_Server_HandlePlayerLogin
	void Skill_Server_IncreaseExperiencePoints(struct APrisoner* Prisoner, USkill* skillClass, float ExperiencePoints, float famePointsMultiplier); // Function ConZ.PlayerRpcChannel.Skill_Server_IncreaseExperiencePoints
	void Server_UntrackMission(uint8_t  MissionType); // Function ConZ.PlayerRpcChannel.Server_UntrackMission
	void Server_UnsubscribePlayer(struct FPlayerUnsubscribeData PlayerUnsubscribeData); // Function ConZ.PlayerRpcChannel.Server_UnsubscribePlayer
	void Server_UnsubscribeFromUnachievedAchievements(struct APlayerController* PlayerController, struct TArray<struct FString> achievementsIds); // Function ConZ.PlayerRpcChannel.Server_UnsubscribeFromUnachievedAchievements
	void Server_UnlockedAchievement(struct APlayerController* PlayerController, struct FString AchievementID); // Function ConZ.PlayerRpcChannel.Server_UnlockedAchievement
	void Server_SwitchActiveMission(AMission* missionClass); // Function ConZ.PlayerRpcChannel.Server_SwitchActiveMission
	void Server_ServerSettingsSendToServer(struct TArray<int32_t> settingIndices, struct TArray<struct FString> Settings); // Function ConZ.PlayerRpcChannel.Server_ServerSettingsSendToServer
	void Server_ServerSettingsLock_RequestLockRelease(); // Function ConZ.PlayerRpcChannel.Server_ServerSettingsLock_RequestLockRelease
	void Server_ServerSettingsLock_RequestLockAcquisition(int32_t MessageIndex); // Function ConZ.PlayerRpcChannel.Server_ServerSettingsLock_RequestLockAcquisition
	void Server_ResetMission(AMission* missionClass, uint8_t  MissionType, bool restartMission); // Function ConZ.PlayerRpcChannel.Server_ResetMission
	void Server_RequestServerData(int32_t RequestID, struct FPlayerRpcChannelServerDataRequestNetSerializer request); // Function ConZ.PlayerRpcChannel.Server_RequestServerData
	void Server_RequestDoorUpdate(struct ADoor* Door); // Function ConZ.PlayerRpcChannel.Server_RequestDoorUpdate
	void Server_ReportUnachievedAchievements(struct APlayerController* PlayerController, struct TArray<struct FString> achievementsIds); // Function ConZ.PlayerRpcChannel.Server_ReportUnachievedAchievements
	void Server_PlayerSellTradeables(struct AConZPlayerController* PlayerController, struct TArray<struct UObject*> tradeables, struct ATrader* Trader, bool playerWantsCash, uint8_t  Flags, float clientsidePlayerBasedPriceMultiplier); // Function ConZ.PlayerRpcChannel.Server_PlayerSellTradeables
	void Server_PlayerPurchaseTradeable(struct AConZPlayerController* PlayerController, struct TArray<struct FTradeableClassAndQuantity> tradeableClassesAndQuantity, struct ATrader* Trader, bool isCashPreferred, float clientsidePlayerBasedPriceMultiplier); // Function ConZ.PlayerRpcChannel.Server_PlayerPurchaseTradeable
	void Server_MakeNoise(struct AActor* targetActor, float Loudness, struct APawn* Instigator, struct FVector ImpactPoint); // Function ConZ.PlayerRpcChannel.Server_MakeNoise
	void Server_InteractWithHuntingClue(struct AHuntingClue* HuntingClue); // Function ConZ.PlayerRpcChannel.Server_InteractWithHuntingClue
	void Server_DealRadialDamage(struct APrisoner* Prisoner, UObject* WeaponClass, struct FVector zeroLocation, float Damage, float InnerRadius, float OuterRadius, float Falloff, float force, struct FTargetTypeDamageMultiplier TargetTypeMultiplier); // Function ConZ.PlayerRpcChannel.Server_DealRadialDamage
	void Server_ApplyBaseDamageInteractionEventToZombie(struct AZombie2* Zombie, float Damage, struct FHitResult HitResult); // Function ConZ.PlayerRpcChannel.Server_ApplyBaseDamageInteractionEventToZombie
	void ScopeableItemComponent_Server_SetCurrentZoomLevel(struct UScopeableItemComponent* comp, int32_t Value); // Function ConZ.PlayerRpcChannel.ScopeableItemComponent_Server_SetCurrentZoomLevel
	void ResourceLockingManager_Server_UnlockResource(struct FResourceNetworkGUID ResourceGUID, int32_t ResourceId); // Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_UnlockResource
	void ResourceLockingManager_Server_UnlockIntersectingAreas(struct FBox Area); // Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_UnlockIntersectingAreas
	void ResourceLockingManager_Server_UnlockArea(struct FBox Area); // Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_UnlockArea
	void ResourceLockingManager_Server_LockResource(struct FResourceNetworkGUID LockOwnerGUID, struct FResourceNetworkGUID ResourceGUID, int32_t ResourceId); // Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_LockResource
	void ResourceLockingManager_Server_LockArea(struct FResourceNetworkGUID LockOwnerGUID, struct FBox Area); // Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_LockArea
	void Prisoner_Server_PushStaminaDrain(struct APrisoner* Prisoner, float AmountToDrain, float drainDuration, float RecoveryDelay, float RatioToRecover, float recoveryDuration); // Function ConZ.PlayerRpcChannel.Prisoner_Server_PushStaminaDrain
	void Prisoner_Server_Die(struct APrisoner* Prisoner); // Function ConZ.PlayerRpcChannel.Prisoner_Server_Die
	void Placeable_Server_FillWithItems(struct APlaceableActorBase* placeable, struct APrisoner* User, struct TArray<struct AItem*> Items); // Function ConZ.PlayerRpcChannel.Placeable_Server_FillWithItems
	void Notifications_RequestNotification(struct FNotificationDescriptionReplicationHelper Description); // Function ConZ.PlayerRpcChannel.Notifications_RequestNotification
	void Misc_Server_LogKill(struct APrisoner* victim, struct APrisoner* killer, struct FString killerUserProfileId); // Function ConZ.PlayerRpcChannel.Misc_Server_LogKill
	void Misc_Client_PostAudioEvent(struct UAkAudioEvent* AudioEvent, struct AActor* Actor, bool stopWhenAttachedToDestroyed); // Function ConZ.PlayerRpcChannel.Misc_Client_PostAudioEvent
	void Mechanic_Server_UnsubscribeFromVehicleServiceData(struct AMechanic* Mechanic); // Function ConZ.PlayerRpcChannel.Mechanic_Server_UnsubscribeFromVehicleServiceData
	void Mechanic_Server_SubscribeToVehicleServiceData(struct AMechanic* Mechanic); // Function ConZ.PlayerRpcChannel.Mechanic_Server_SubscribeToVehicleServiceData
	void Mechanic_Client_UpdateServiceDataOnClient(struct AMechanic* Mechanic, struct FVehicleAttachmentPriceDataPerClassMap Delta); // Function ConZ.PlayerRpcChannel.Mechanic_Client_UpdateServiceDataOnClient
	void Lockpickable_Server_TriggerFailurePenalty(struct UObject* Lockpickable, struct APrisoner* triggeringPrisoner); // Function ConZ.PlayerRpcChannel.Lockpickable_Server_TriggerFailurePenalty
	void Lockpickable_Server_SetNumTries(struct UObject* Lockpickable, int32_t numTries); // Function ConZ.PlayerRpcChannel.Lockpickable_Server_SetNumTries
	void ItemContainer_Server_ResetLockTimer(struct FString runtimeId); // Function ConZ.PlayerRpcChannel.ItemContainer_Server_ResetLockTimer
	void ItemContainer_Client_TriggerFailurePenalty(struct FString runtimeId, struct AActor* triggeringActor); // Function ConZ.PlayerRpcChannel.ItemContainer_Client_TriggerFailurePenalty
	void InventoryItemComponent_Server_RequestPageReplicationForController(struct UInventoryItemComponent* inventoryItemComp, int32_t pageIndex, struct AController* Controller); // Function ConZ.PlayerRpcChannel.InventoryItemComponent_Server_RequestPageReplicationForController
	void Inventory_Server_RemoveStacks(struct AConZCharacter* Character, struct FInv2021_InventoryElementRepHelper targetElement, int32_t numStacksToRemove); // Function ConZ.PlayerRpcChannel.Inventory_Server_RemoveStacks
	void Inventory_Server_DropInventoryElementAt(struct AConZCharacter* Character, struct FInv2021_InventoryElementRepHelper Element, struct FVector Location, struct FRotator Rotation, struct FInv2021_InventoryPositionObjectRepHelper position); // Function ConZ.PlayerRpcChannel.Inventory_Server_DropInventoryElementAt
	void Inventory_Server_DropInventoryElement(struct AConZCharacter* Character, struct FInv2021_InventoryElementRepHelper Element, struct FInv2021_InventoryPositionObjectRepHelper position); // Function ConZ.PlayerRpcChannel.Inventory_Server_DropInventoryElement
	void Inventory_Server_AutoAddInventoryElementToContainer(struct AConZCharacter* Character, struct FInv2021_InventoryElementRepHelper Element, struct UObject* destinationContainer); // Function ConZ.PlayerRpcChannel.Inventory_Server_AutoAddInventoryElementToContainer
	void Inventory_Server_AddToStack(struct AConZCharacter* Character, struct FInv2021_InventoryElementRepHelper elementToAdd, struct FInv2021_InventoryElementRepHelper Destination); // Function ConZ.PlayerRpcChannel.Inventory_Server_AddToStack
	void Inventory_Server_AddInventoryElementToContainer(struct AConZCharacter* Character, struct FInv2021_InventoryElementRepHelper Element, struct UObject* destinationContainer, struct FInv2021_InventoryPositionObjectRepHelper position); // Function ConZ.PlayerRpcChannel.Inventory_Server_AddInventoryElementToContainer
	void InteractWithObjectOnServer(struct UObject* interactable, struct APrisoner* User, uint8_t  interactionType, struct FInteractionData InteractionData); // Function ConZ.PlayerRpcChannel.InteractWithObjectOnServer
	void HeatSourceItemComponent_Server_AdjustDial(struct UContinuousFuelHeatSource* FueledHeatSource, char dialValue); // Function ConZ.PlayerRpcChannel.HeatSourceItemComponent_Server_AdjustDial
	void HasOwningUser_Server_RequestStateUpdate(struct UObject* Object); // Function ConZ.PlayerRpcChannel.HasOwningUser_Server_RequestStateUpdate
	void HasOwningUser_Client_UpdateState(struct UObject* Object, struct FString ownerString); // Function ConZ.PlayerRpcChannel.HasOwningUser_Client_UpdateState
	void Grapple_Server_EndGrappleAttack(struct AConZCharacter* grappler, struct APrisoner* grapplee, uint8_t  grappleEndType); // Function ConZ.PlayerRpcChannel.Grapple_Server_EndGrappleAttack
	void Door_Client_TriggerFailurePenalty(struct FString runtimeId, struct AActor* triggeringActor); // Function ConZ.PlayerRpcChannel.Door_Client_TriggerFailurePenalty
	void CustomZones_Server_UpdateCustomZoneData(struct FCustomZoneConfiguration globalConfiguration, struct TArray<struct FCustomZoneConfiguration> configurations, struct TArray<struct FCustomZoneRegion> Regions); // Function ConZ.PlayerRpcChannel.CustomZones_Server_UpdateCustomZoneData
	void CustomZones_Server_RequestCustomZoneData(); // Function ConZ.PlayerRpcChannel.CustomZones_Server_RequestCustomZoneData
	void CustomZones_Client_ReceiveCustomZoneData(struct FCustomZoneConfiguration globalConfiguration, struct TArray<struct FCustomZoneConfiguration> configurations, struct TArray<struct FCustomZoneRegion> Regions); // Function ConZ.PlayerRpcChannel.CustomZones_Client_ReceiveCustomZoneData
	void CustomZones_Client_NotifyCustomDataUpdateSuccess(); // Function ConZ.PlayerRpcChannel.CustomZones_Client_NotifyCustomDataUpdateSuccess
	void Cooking_Server_UpdateCookingSlotsFromUserSetData(struct TArray<struct FCookingUtilitySlotInstance_UserSetData> Data); // Function ConZ.PlayerRpcChannel.Cooking_Server_UpdateCookingSlotsFromUserSetData
	void Cooking_Server_StopCooking(int32_t SlotId, struct APrisoner* User); // Function ConZ.PlayerRpcChannel.Cooking_Server_StopCooking
	void Cooking_Server_RemoveFavoriteRecipe(char recipeId); // Function ConZ.PlayerRpcChannel.Cooking_Server_RemoveFavoriteRecipe
	void Cooking_Server_CreateResultItemAndAssignToPrisoner(int32_t SlotId, struct APrisoner* User); // Function ConZ.PlayerRpcChannel.Cooking_Server_CreateResultItemAndAssignToPrisoner
	void Cooking_Server_BeginCooking(int32_t SlotId, struct APrisoner* User, struct UCookingRecipe* recipe, struct TArray<struct AItem*> MainIngredients, struct TArray<struct AItem*> OptionalIngredients); // Function ConZ.PlayerRpcChannel.Cooking_Server_BeginCooking
	void Cooking_Server_AddFavoriteRecipe(char recipeId); // Function ConZ.PlayerRpcChannel.Cooking_Server_AddFavoriteRecipe
	void Client_UpdateTraderData(struct FPriceUpdateData PriceUpdateData); // Function ConZ.PlayerRpcChannel.Client_UpdateTraderData
	void Client_UnlockAchievement(struct APlayerController* PlayerController, struct FString AchievementID); // Function ConZ.PlayerRpcChannel.Client_UnlockAchievement
	void Client_SetStat(struct APlayerController* PlayerController, struct FString statId, int32_t StatValue); // Function ConZ.PlayerRpcChannel.Client_SetStat
	void Client_ServerSettingsSendToClient(struct TArray<int32_t> settingIndices, struct TArray<struct FString> Settings); // Function ConZ.PlayerRpcChannel.Client_ServerSettingsSendToClient
	void Client_ServerSettingsLock_ReceiveLockOwner(struct FString lockOwnerId, struct FString lockOwnerName, int32_t MessageIndex, bool lockIsMine); // Function ConZ.PlayerRpcChannel.Client_ServerSettingsLock_ReceiveLockOwner
	void Client_SendSellErrorMessage(struct AConZPlayerController* PlayerController, uint8_t  errorMessage); // Function ConZ.PlayerRpcChannel.Client_SendSellErrorMessage
	void Client_SendBuyErrorMessage(struct AConZPlayerController* PlayerController, uint8_t  errorMessage); // Function ConZ.PlayerRpcChannel.Client_SendBuyErrorMessage
	void Client_ResetSubscriptions(); // Function ConZ.PlayerRpcChannel.Client_ResetSubscriptions
	void Client_ReceiveServerData(int32_t RequestID, struct FPlayerRpcChannelServerDataResponseNetSerializer Response); // Function ConZ.PlayerRpcChannel.Client_ReceiveServerData
	void Client_IncreaseStat(struct APlayerController* PlayerController, struct FString statId, int32_t statIncBy); // Function ConZ.PlayerRpcChannel.Client_IncreaseStat
	void Client_AuthSucceededSync(); // Function ConZ.PlayerRpcChannel.Client_AuthSucceededSync
	void Chat_Server_ProcessAdminCommand(struct FString commandText); // Function ConZ.PlayerRpcChannel.Chat_Server_ProcessAdminCommand
	void Chat_Server_BroadcastChatMessage(struct FString Message, uint8_t  Channel); // Function ConZ.PlayerRpcChannel.Chat_Server_BroadcastChatMessage
	void Chat_Client_UpdateSquadArgumentCompletionCache(struct TArray<struct FString> completions); // Function ConZ.PlayerRpcChannel.Chat_Client_UpdateSquadArgumentCompletionCache
	void Chat_Client_UpdatePlayerArgumentCompletionCache(struct TArray<struct FString> completions); // Function ConZ.PlayerRpcChannel.Chat_Client_UpdatePlayerArgumentCompletionCache
	void Chat_Client_UnmuteUser(struct FString UserId); // Function ConZ.PlayerRpcChannel.Chat_Client_UnmuteUser
	void Chat_Client_SendMessageToChat(struct FString Message, struct AConZPlayerState* SenderPlayerState, uint8_t  Channel, bool shouldCopyToClipboard); // Function ConZ.PlayerRpcChannel.Chat_Client_SendMessageToChat
	void Chat_Client_ProcessAdminCommand(struct FString commandText); // Function ConZ.PlayerRpcChannel.Chat_Client_ProcessAdminCommand
	void Chat_Client_MuteUser(struct FString UserId, struct FString UserName); // Function ConZ.PlayerRpcChannel.Chat_Client_MuteUser
	void BCULockRegistry_Server_RequestSetClientHasActiveBCULock(); // Function ConZ.PlayerRpcChannel.BCULockRegistry_Server_RequestSetClientHasActiveBCULock
	void BCULockRegistry_Client_SetClientHasActiveBCULock(bool clientHasActiveBCULock); // Function ConZ.PlayerRpcChannel.BCULockRegistry_Client_SetClientHasActiveBCULock
	void BaseBuilding_Server_RequestElementStateUpdate(struct FVector Location, float areaSize); // Function ConZ.PlayerRpcChannel.BaseBuilding_Server_RequestElementStateUpdate
	void BaseBuilding_Server_OnFlagAreaExited(struct AConZCharacter* Character); // Function ConZ.PlayerRpcChannel.BaseBuilding_Server_OnFlagAreaExited
	void BaseBuilding_Server_OnFlagAreaEntered(struct AConZCharacter* Character); // Function ConZ.PlayerRpcChannel.BaseBuilding_Server_OnFlagAreaEntered
	void BaseBuilding_Client_UpdateElementState(struct FVector Location, float areaSize, struct TArray<struct FConZOnDemandElementData> Data); // Function ConZ.PlayerRpcChannel.BaseBuilding_Client_UpdateElementState
	void Admin_Server_TeleportTo_VehicleLocation(struct AConZPlayerController* Controller, struct FTeleportRequest TeleportRequest, struct FString vehicleName); // Function ConZ.PlayerRpcChannel.Admin_Server_TeleportTo_VehicleLocation
	void Admin_Server_TeleportTo_Location(struct AConZPlayerController* Controller, struct FTeleportRequest TeleportRequest); // Function ConZ.PlayerRpcChannel.Admin_Server_TeleportTo_Location
	void Admin_Server_TeleportTo(struct APlayerController* Controller, struct FString teleportToUserId); // Function ConZ.PlayerRpcChannel.Admin_Server_TeleportTo
	void Admin_Client_ShowSpawnedVehicles(struct APlayerController* Controller, struct FString spawnedVehiclesInfo, bool ShouldCopyToClientClipboard); // Function ConZ.PlayerRpcChannel.Admin_Client_ShowSpawnedVehicles
	void Admin_Client_SendRespawnTimes(int32_t RespawnTime, int32_t respawnTimeReset); // Function ConZ.PlayerRpcChannel.Admin_Client_SendRespawnTimes
}; 



// Class ConZ.PossibleCookingIngredientWidget
// Size: 0x270(Inherited: 0x260) 
struct UPossibleCookingIngredientWidget : public UUserWidget
{
	struct UImage* _ingredientIcon;  // 0x260(0x8)
	struct UTextBlock* _titleText;  // 0x268(0x8)

}; 



// Class ConZ.PostItemsSpawnedActions_SetCashAmount
// Size: 0x40(Inherited: 0x28) 
struct UPostItemsSpawnedActions_SetCashAmount : public UPostItemsSpawnedActions
{
	char pad_40_1 : 7;  // 0x28(0x1)
	bool _useAbsoluteAmount : 1;  // 0x28(0x1)
	char pad_41[3];  // 0x29(0x3)
	struct FInt32Interval _absoluteAmount;  // 0x2C(0x8)
	char pad_52_1 : 7;  // 0x34(0x1)
	bool _useAmountRatio : 1;  // 0x34(0x1)
	char pad_53[3];  // 0x35(0x3)
	struct FFloatInterval _amountRatio;  // 0x38(0x8)

}; 



// Class ConZ.PracticeTrapItem
// Size: 0xA60(Inherited: 0xA60) 
struct APracticeTrapItem : public ATrapItem
{

}; 



// Class ConZ.PrisonerActionCheckTime
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionCheckTime : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerActionFixTire
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionFixTire : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PresetColorPicker
// Size: 0x330(Inherited: 0x260) 
struct UPresetColorPicker : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UPanelWidget* _container;  // 0x278(0x8)
	struct UTextBlock* _name;  // 0x280(0x8)
	struct USelectionOverlayWidget* _focusBackground;  // 0x288(0x8)
	struct FText _mainLabel;  // 0x290(0x18)
	struct FSlateFontInfo _defaultFont;  // 0x2A8(0x58)
	UPresetColorPickerButton* _buttonClass;  // 0x300(0x8)
	struct FMargin _buttonPadding;  // 0x308(0x10)
	struct TArray<struct FLinearColor> _palette;  // 0x318(0x10)
	char pad_808[8];  // 0x328(0x8)

}; 



// Class ConZ.PreviousNextSwitchWidget
// Size: 0x290(Inherited: 0x260) 
struct UPreviousNextSwitchWidget : public UUserWidget
{
	struct FMulticastInlineDelegate IndexChanged;  // 0x260(0x10)
	struct UButton* PreviousButton;  // 0x270(0x8)
	struct UButton* NextButton;  // 0x278(0x8)
	char pad_640[8];  // 0x280(0x8)
	int32_t _index;  // 0x288(0x4)
	char pad_652[4];  // 0x28C(0x4)

	void SwitchToPrevious(); // Function ConZ.PreviousNextSwitchWidget.SwitchToPrevious
	void SwitchToNext(); // Function ConZ.PreviousNextSwitchWidget.SwitchToNext
	void OnSwitchClickedDelegate__DelegateSignature(int32_t widgetArrayIndex, int32_t Index); // DelegateFunction ConZ.PreviousNextSwitchWidget.OnSwitchClickedDelegate__DelegateSignature
}; 



// Class ConZ.VehicleAttachment_Gearbox
// Size: 0x360(Inherited: 0x310) 
struct UVehicleAttachment_Gearbox : public UVehicleAttachment
{
	struct FVehicleAttachmentGearboxSetup GearboxSetup;  // 0x310(0x18)
	char pad_808[24];  // 0x328(0x18)
	struct FVehicleAttachmentGearboxSimulationData _simulationData;  // 0x340(0x14)
	char pad_852[12];  // 0x354(0xC)

}; 



// Class ConZ.PrisonerAction
// Size: 0x108(Inherited: 0xF8) 
struct UPrisonerAction : public UCharacterAction
{
	char pad_248[16];  // 0xF8(0x10)

}; 



// Class ConZ.PrisonerActionAddFertilizerDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionAddFertilizerDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_StrengthModifier
// Size: 0x30(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_StrengthModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{

}; 



// Class ConZ.PrisonerActionFillGameResourceContainer
// Size: 0x130(Inherited: 0x108) 
struct UPrisonerActionFillGameResourceContainer : public UPrisonerAction
{
	char pad_264[40];  // 0x108(0x28)

}; 



// Class ConZ.PrisonerActionAddWeaponAttachment
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionAddWeaponAttachment : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionAlignTransform
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionAlignTransform : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionAnalyzeAnimalTrackDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionAnalyzeAnimalTrackDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.PrisonerActionApplyPesticide
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionApplyPesticide : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionAttachItem
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionAttachItem : public UPrisonerAction
{

}; 



// Class ConZ.RadioProgram
// Size: 0x50(Inherited: 0x28) 
struct URadioProgram : public UObject
{
	struct TArray<URadioCategory*> CategoryClasses;  // 0x28(0x10)
	struct TArray<struct URadioCategory*> Categories;  // 0x38(0x10)
	int32_t _categoryIndex;  // 0x48(0x4)
	char pad_76[4];  // 0x4C(0x4)

	struct URadioCategory* ProvideNextRadioCategory(); // Function ConZ.RadioProgram.ProvideNextRadioCategory
}; 



// Class ConZ.PrisonerActionBlowAir
// Size: 0x128(Inherited: 0x108) 
struct UPrisonerActionBlowAir : public UPrisonerAction
{
	char pad_264[32];  // 0x108(0x20)

}; 



// Class ConZ.PrisonerActionBlowAirDescription
// Size: 0x58(Inherited: 0x38) 
struct UPrisonerActionBlowAirDescription : public UCharacterActionDescription
{
	char pad_56[32];  // 0x38(0x20)

}; 



// Class ConZ.PrisonerActionBury
// Size: 0x130(Inherited: 0x108) 
struct UPrisonerActionBury : public UPrisonerAction
{
	char pad_264[40];  // 0x108(0x28)

}; 



// Class ConZ.PrisonerActionBuryDescription
// Size: 0x70(Inherited: 0x38) 
struct UPrisonerActionBuryDescription : public UCharacterActionDescription
{
	char pad_56[56];  // 0x38(0x38)

}; 



// Class ConZ.PrisonerActionChangeStance
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionChangeStance : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerActionDestroyItemDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionDestroyItemDescription : public UCharacterActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.PrisonerActionChangeStanceWaitEndOnOwningClientDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionChangeStanceWaitEndOnOwningClientDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.PrisonerBodySymptomCause_StomachGrowling
// Size: 0x38(Inherited: 0x38) 
struct UPrisonerBodySymptomCause_StomachGrowling : public UPrisonerBodySymptomCause_PeriodicSound
{

}; 



// Class ConZ.PrisonerActionChangeVehicleWeaponAimingStance
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionChangeVehicleWeaponAimingStance : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionDrinkFromReplenishableResourceDescription
// Size: 0x80(Inherited: 0x38) 
struct UPrisonerActionDrinkFromReplenishableResourceDescription : public UCharacterActionDescription
{
	char pad_56[64];  // 0x38(0x40)
	struct UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;  // 0x78(0x8)

}; 



// Class ConZ.PrisonerActionMoveToLocationDescription
// Size: 0x60(Inherited: 0x38) 
struct UPrisonerActionMoveToLocationDescription : public UPrisonerActionDescription
{
	char pad_56[40];  // 0x38(0x28)

}; 



// Class ConZ.PrisonerActionCheckChainsawFuelStatus
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionCheckChainsawFuelStatus : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerActionCheckChainsawFuelStatusDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionCheckChainsawFuelStatusDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.PrisonerActionCheckThermalSensorDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionCheckThermalSensorDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.PrisonerActionCheckTimeDescription
// Size: 0x38(Inherited: 0x38) 
struct UPrisonerActionCheckTimeDescription : public UPrisonerActionDescription
{

}; 



// Class ConZ.PrisonerActionFixTireDescription
// Size: 0x80(Inherited: 0x38) 
struct UPrisonerActionFixTireDescription : public UPrisonerActionDescription
{
	char pad_56[72];  // 0x38(0x48)

}; 



// Class ConZ.PrisonerActionCheckWeaponAmmo
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionCheckWeaponAmmo : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.WeaponBowAnimInstance
// Size: 0x320(Inherited: 0x300) 
struct UWeaponBowAnimInstance : public UWeaponAnimInstance
{
	char pad_768[8];  // 0x300(0x8)
	float _armsShakeValue;  // 0x308(0x4)
	char pad_780_1 : 7;  // 0x30C(0x1)
	bool _useArrowLookAt : 1;  // 0x30C(0x1)
	char pad_781[3];  // 0x30D(0x3)
	struct UAnimSequenceBase* _aimingDownTheSightsAnimation;  // 0x310(0x8)
	struct UAnimSequenceBase* _aimingDownTheSightsStillAnimation;  // 0x318(0x8)

}; 



// Class ConZ.PrisonerActionCheckWeaponFiringMode
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionCheckWeaponFiringMode : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.AsepsisItemTag
// Size: 0x38(Inherited: 0x30) 
struct UAsepsisItemTag : public UBaseItemTag
{
	float Asepsis;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)

}; 



// Class ConZ.PrisonerActionChopBaseElement
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionChopBaseElement : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerActionChopItem
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionChopItem : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerBodyCondition_ForeignSubstancePoisoning
// Size: 0x190(Inherited: 0xC0) 
struct UPrisonerBodyCondition_ForeignSubstancePoisoning : public UPrisonerBodyCondition
{
	struct FRuntimeFloatCurve _severityVsForeignSubstanceAmountRatio;  // 0xC0(0x88)
	float _foreignSubstanceAmountRatioToExist;  // 0x148(0x4)
	float _foreignSubstanceAmountAtRecoveryStart;  // 0x14C(0x4)
	uint8_t  _state;  // 0x150(0x1)
	char pad_337[7];  // 0x151(0x7)
	struct FPrisonerBodyBoneGroupsVsSeverity _affectedBodyBoneGroupsVsSeverity;  // 0x158(0x10)
	struct FPrisonerBodyMuscleGroupsVsSeverity _affectedBodyMuscleGroupsVsSeverity;  // 0x168(0x10)
	struct FPrisonerBodyOrganGroupsVsSeverity _affectedBodyOrganGroupsVsSeverity;  // 0x178(0x10)
	UForeignSubstance* _foreignSubstanceClass;  // 0x188(0x8)

}; 



// Class ConZ.WeaponAccuracyGroup
// Size: 0x60(Inherited: 0x30) 
struct UWeaponAccuracyGroup : public UDataAsset
{
	float NormalStandFrom;  // 0x30(0x4)
	float NormalStandTo;  // 0x34(0x4)
	float NormalCrouchFrom;  // 0x38(0x4)
	float NormalCrouchTo;  // 0x3C(0x4)
	float NormalProneFrom;  // 0x40(0x4)
	float NormalProneTo;  // 0x44(0x4)
	float ScopedStandFrom;  // 0x48(0x4)
	float ScopedStandTo;  // 0x4C(0x4)
	float ScopedCrouchFrom;  // 0x50(0x4)
	float ScopedCrouchTo;  // 0x54(0x4)
	float ScopedProneFrom;  // 0x58(0x4)
	float ScopedProneTo;  // 0x5C(0x4)

}; 



// Class ConZ.PrisonerActionClaimKillDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionClaimKillDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.PrisonerActionDefecateDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionDefecateDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.PrisonerActionClearWeaponMalfunction
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionClearWeaponMalfunction : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerBodySymptom_Bleeding
// Size: 0x260(Inherited: 0xB8) 
struct UPrisonerBodySymptom_Bleeding : public UPrisonerBodySymptom
{
	struct FRuntimeFloatCurve _vignetteEffectIntensityVsSeverityRatio;  // 0xB8(0x88)
	struct FRuntimeFloatCurve _vignetteEffectPulsationFrequencyVsSeverityRatio;  // 0x140(0x88)
	struct FRuntimeFloatCurve _vignetteEffectSeverityRatioMultiplierVsHealthRatio;  // 0x1C8(0x88)
	float _vignetteEffectIntensityInterpSpeed;  // 0x250(0x4)
	char pad_596[4];  // 0x254(0x4)
	float _vignetteEffectFrequencyInterpSpeed;  // 0x258(0x4)
	char pad_604[4];  // 0x25C(0x4)

}; 



// Class ConZ.PrisonerBodySymptomUIData_WetFeet
// Size: 0xB0(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_WetFeet : public UPrisonerBodySymptomUIData
{
	char pad_168[8];  // 0xA8(0x8)

}; 



// Class ConZ.PrisonerActionClimbOntoLadder
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionClimbOntoLadder : public UPrisonerAction
{

}; 



// Class ConZ.WeaponStateFiringAutomatic
// Size: 0x40(Inherited: 0x30) 
struct UWeaponStateFiringAutomatic : public UWeaponStateFiring
{
	char pad_48[16];  // 0x30(0x10)

}; 



// Class ConZ.PrisonerActionClimbOntoLadderDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionClimbOntoLadderDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.PrisonerConsumableDigestionHandler_FoodDisgustAntidote
// Size: 0x38(Inherited: 0x38) 
struct UPrisonerConsumableDigestionHandler_FoodDisgustAntidote : public UPrisonerConsumableDigestionHandler_FoodDisgust
{

}; 



// Class ConZ.PrisonerActionCollectSeeds
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionCollectSeeds : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerBodySymptomUIData_BoostOfEnergy
// Size: 0xD0(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_BoostOfEnergy : public UPrisonerBodySymptomUIData
{
	char pad_168[40];  // 0xA8(0x28)

}; 



// Class ConZ.PrisonerActionCommitSuicide
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionCommitSuicide : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerActionCommitSuicideDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionCommitSuicideDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.PrisonerActionCraftItemDescription
// Size: 0xE0(Inherited: 0x38) 
struct UPrisonerActionCraftItemDescription : public UPrisonerActionDescription
{
	char pad_56[168];  // 0x38(0xA8)

}; 



// Class ConZ.PrisonerDebugUI_BodyEffectItem
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerDebugUI_BodyEffectItem : public UPrisonerDebugUI_BodyConditionItem
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.PrisonerActionCutHairDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionCutHairDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.PrisonerActionDecontaminateWithReplenishableResource
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionDecontaminateWithReplenishableResource : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.WeaponActionSequence
// Size: 0x68(Inherited: 0x28) 
struct UWeaponActionSequence : public UWeaponAction
{
	char pad_40[24];  // 0x28(0x18)
	struct FBodyWeaponAnimation Animations;  // 0x40(0x10)
	char pad_80_1 : 7;  // 0x50(0x1)
	bool CanBeInterrupted : 1;  // 0x50(0x1)
	char pad_81[23];  // 0x51(0x17)

	void SetNextMontageSectionFromPrevious(struct FName previousSection, struct FName NextSection); // Function ConZ.WeaponActionSequence.SetNextMontageSectionFromPrevious
	void SetNextMontageSection(struct FName NextSection); // Function ConZ.WeaponActionSequence.SetNextMontageSection
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionSequence.OnMontageEnded
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionSequence.OnMontageBlendingOutStarted
	struct UAnimMontage* GetActiveAnimationWeapon(); // Function ConZ.WeaponActionSequence.GetActiveAnimationWeapon
	struct UAnimMontage* GetActiveAnimationBody(); // Function ConZ.WeaponActionSequence.GetActiveAnimationBody
	float Execute(); // Function ConZ.WeaponActionSequence.Execute
	void End(bool Regular); // Function ConZ.WeaponActionSequence.End
	bool CanInterrupt(); // Function ConZ.WeaponActionSequence.CanInterrupt
	bool CanExecute(); // Function ConZ.WeaponActionSequence.CanExecute
}; 



// Class ConZ.PrisonerActionDefecate
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionDefecate : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerActionDrinkInteraction
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionDrinkInteraction : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionDrinkInteractionDescription
// Size: 0x58(Inherited: 0x38) 
struct UPrisonerActionDrinkInteractionDescription : public UPrisonerActionDescription
{
	char pad_56[32];  // 0x38(0x20)

}; 



// Class ConZ.PrisonerActionForceUnlockDescription
// Size: 0xA0(Inherited: 0x38) 
struct UPrisonerActionForceUnlockDescription : public UCharacterActionDescription
{
	char pad_56[104];  // 0x38(0x68)

}; 



// Class ConZ.PrisonerActionEnterCombatModeDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionEnterCombatModeDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.PrisonerActionExecuteBodyConditionInteraction
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionExecuteBodyConditionInteraction : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerActionExecuteInteraction
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionExecuteInteraction : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionExecuteInteractionDescription
// Size: 0xF0(Inherited: 0x38) 
struct UPrisonerActionExecuteInteractionDescription : public UPrisonerActionDescription
{
	char pad_56[184];  // 0x38(0xB8)

}; 



// Class ConZ.VehicleCameraStabilizerComponent
// Size: 0x280(Inherited: 0x200) 
struct UVehicleCameraStabilizerComponent : public USceneComponent
{
	struct FVector _componentWorldOffset;  // 0x1FC(0xC)
	float _desiredDistance;  // 0x208(0x4)
	float _speedFallbackIntensity;  // 0x20C(0x4)
	float _lateralMovementResponseIntensity;  // 0x210(0x4)
	float _lockedHorizontalDampeningFactor;  // 0x214(0x4)
	float _lockedHorizontalOscillationFactor;  // 0x218(0x4)
	float _lockedVerticalDampeningFactor;  // 0x21C(0x4)
	float _lockedVerticalOscillationFactor;  // 0x220(0x4)
	float _maxFreeLookPitch;  // 0x224(0x4)
	float _freeHorizontalDampeningFactor;  // 0x228(0x4)
	float _freeHorizontalOscillationFactor;  // 0x22C(0x4)
	float _freeVerticalDampeningFactor;  // 0x230(0x4)
	float _freeVerticalOscillationFactor;  // 0x234(0x4)
	char pad_572[68];  // 0x23C(0x44)

}; 



// Class ConZ.PrisonerActionFillGameResourceContainerWithInfiniteResourceDescription
// Size: 0xF0(Inherited: 0x90) 
struct UPrisonerActionFillGameResourceContainerWithInfiniteResourceDescription : public UPrisonerActionFillGameResourceContainerDescription
{
	char pad_144[88];  // 0x90(0x58)
	struct UGameResourceContainerProxyForInfiniteResource* ProxyForInfiniteResource;  // 0xE8(0x8)

}; 



// Class ConZ.PrisonerActionFillResourceContainerWithReplenishableResourcePaid
// Size: 0x138(Inherited: 0x108) 
struct UPrisonerActionFillResourceContainerWithReplenishableResourcePaid : public UPrisonerAction
{
	char pad_264[48];  // 0x108(0x30)

}; 



// Class ConZ.PrisonerActionFillWater
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionFillWater : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionFishing
// Size: 0x100(Inherited: 0xF8) 
struct UPrisonerActionFishing : public UCharacterAction
{
	char pad_248[8];  // 0xF8(0x8)

}; 



// Class ConZ.PrisonerBodySymptom_BloodshotEyes
// Size: 0xC0(Inherited: 0xB8) 
struct UPrisonerBodySymptom_BloodshotEyes : public UPrisonerBodySymptom
{
	float _maxSeverity;  // 0xB8(0x4)
	char pad_188[4];  // 0xBC(0x4)

}; 



// Class ConZ.PrisonerActionFishingDescription
// Size: 0x38(Inherited: 0x38) 
struct UPrisonerActionFishingDescription : public UCharacterActionDescription
{

}; 



// Class ConZ.PrisonerActionFuelFire
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionFuelFire : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Damage
// Size: 0x158(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_Damage : public UPrisonerBodyConditionOrSymptomSideEffect
{
	struct FRuntimeFloatCurve _damageVsSeverity;  // 0x30(0x88)
	struct FRuntimeFloatCurve _damageRatioVsSeverity;  // 0xB8(0x88)
	char pad_320_1 : 7;  // 0x140(0x1)
	bool _useBaseMaxHealthInsteadOfMaxHealthToComputeDamageRatio : 1;  // 0x140(0x1)
	char pad_321_1 : 7;  // 0x141(0x1)
	bool _useSeverityToDetermineLifeThreateningStatus : 1;  // 0x141(0x1)
	char pad_322[2];  // 0x142(0x2)
	struct FFloatRange _severityRangeToBeLifeThreatening;  // 0x144(0x10)
	char pad_340[4];  // 0x154(0x4)

}; 



// Class ConZ.PrisonerActionFuelFireDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionFuelFireDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.PrisonerActionInjectSubstance
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionInjectSubstance : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.RestorableMeshInstancesManager
// Size: 0x350(Inherited: 0xB0) 
struct URestorableMeshInstancesManager : public UActorComponent
{
	char pad_176[272];  // 0xB0(0x110)
	float _actorsProcessingDelayOnStreamingLevelLoad;  // 0x1C0(0x4)
	float _processingBudgetPerTick;  // 0x1C4(0x4)
	char pad_456[360];  // 0x1C8(0x168)
	float _generateMeshInstancesToRestoreUpdateInterval;  // 0x330(0x4)
	char pad_820[20];  // 0x334(0x14)
	float _minDistanceToPlayerPawnToRestoreMeshInstance;  // 0x348(0x4)
	char pad_844[4];  // 0x34C(0x4)

	void NetMulticast_RestoreRemovedMeshInstance(int32_t dataVersion, struct FRestorableMeshInstanceId InstanceId); // Function ConZ.RestorableMeshInstancesManager.NetMulticast_RestoreRemovedMeshInstance
	void NetMulticast_RemoveMeshInstance(int32_t dataVersion, struct UInstancedStaticMeshComponent* Component, struct FRestorableMeshInstanceId InstanceId, struct FTransform InstanceTransform); // Function ConZ.RestorableMeshInstancesManager.NetMulticast_RemoveMeshInstance
}; 



// Class ConZ.PrisonerActionLightFire
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionLightFire : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerActionLoadAmmoIntoMagazineDescription
// Size: 0x60(Inherited: 0x38) 
struct UPrisonerActionLoadAmmoIntoMagazineDescription : public UPrisonerActionDescription
{
	char pad_56[40];  // 0x38(0x28)

}; 



// Class ConZ.Sentry2
// Size: 0xCB0(Inherited: 0x7A0) 
struct ASentry2 : public AConZCharacter
{
	char pad_1952[80];  // 0x7A0(0x50)
	struct FName _pelvisBoneName;  // 0x7F0(0x8)
	struct FName _eyesViewPointSocketName;  // 0x7F8(0x8)
	struct FName _longRangeWeaponSocketName;  // 0x800(0x8)
	struct TArray<struct FName> _longRangeWeaponMuzzleFlashBoneNames;  // 0x808(0x10)
	struct FName _longRangeWeaponBoneName;  // 0x818(0x8)
	struct FName _highPrecisionWeaponSocketName;  // 0x820(0x8)
	struct FName _highPrecisionWeaponBoneName;  // 0x828(0x8)
	struct TArray<struct FName> _grenadeLauncherSocketNames;  // 0x830(0x10)
	struct FName _highPrecisionWeaponChargingSocket;  // 0x840(0x8)
	struct FName _meleeAttackFailureGrenadeDropSocket;  // 0x848(0x8)
	float _sensorHeightOffset;  // 0x850(0x4)
	char pad_2132[4];  // 0x854(0x4)
	struct TArray<struct FName> _damageParticlesSockets;  // 0x858(0x10)
	struct UAkAudioEvent* _fireBulletAudioEvent;  // 0x868(0x8)
	struct UAkAudioEvent* _startHighFireRateAttack;  // 0x870(0x8)
	struct UAkAudioEvent* _endHighFireRateAttack;  // 0x878(0x8)
	struct UAkAudioEvent* _reloadAudioEvent;  // 0x880(0x8)
	struct UAkAudioEvent* _highPrecisionWeaponFireShotAudioEvent;  // 0x888(0x8)
	struct UAkAudioEvent* _grenadeLaunchAudioEffect;  // 0x890(0x8)
	struct UAkAudioEvent* _tearGasGrenadeLaunchAudioEffect;  // 0x898(0x8)
	struct UAkAudioEvent* _stunGrenadeLaunchAudioEffect;  // 0x8A0(0x8)
	struct UAkAudioEvent* _deathAudioEvent;  // 0x8A8(0x8)
	struct UAkAudioEvent* _freezeWarningAudioEvent;  // 0x8B0(0x8)
	struct UAkAudioEvent* _dropWeaponsRaiseHandsAudioEvent;  // 0x8B8(0x8)
	struct UAkAudioEvent* _walkAwayAudioEvent;  // 0x8C0(0x8)
	struct UAkAudioEvent* _beginCombatAudioEvent;  // 0x8C8(0x8)
	struct UAkAudioEvent* _startSearchCorpseAudioEvent;  // 0x8D0(0x8)
	struct UAkAudioEvent* _stopSearchCorpseAudioEvent;  // 0x8D8(0x8)
	struct UAkAudioEvent* _upperBodyRotationAudioEvent;  // 0x8E0(0x8)
	struct UAnimMontage* _normalAttackMontage;  // 0x8E8(0x8)
	struct UAnimMontage* _reloadMontageLongRangeWeapon;  // 0x8F0(0x8)
	struct UAnimMontage* _deathMontage;  // 0x8F8(0x8)
	struct TArray<struct FSentryMeleeAttackDescription> _meleeMontageDescriptions;  // 0x900(0x10)
	struct UAnimMontage* _highprecisionAttackMontage;  // 0x910(0x8)
	struct UAnimMontage* _enemySpottedMontage;  // 0x918(0x8)
	char pad_2336_1 : 7;  // 0x920(0x1)
	bool _hasUpperBodyRotation : 1;  // 0x920(0x1)
	char pad_2337[3];  // 0x921(0x3)
	float _upperBodyRotationMaxYawDegrees;  // 0x924(0x4)
	float _upperBodyRotationHighPrecisionAttackMaxYawDegrees;  // 0x928(0x4)
	float _upperBodyRotationFactor;  // 0x92C(0x4)
	float _upperBodyNetSmoothUpdateRotationTime;  // 0x930(0x4)
	float _upperBodyRotationAngularVelocitySoundThreshold;  // 0x934(0x4)
	char pad_2360[4];  // 0x938(0x4)
	struct FVector _upperBodyFocusLocation;  // 0x93C(0xC)
	char pad_2376[9];  // 0x948(0x9)
	char pad_2385_1 : 7;  // 0x951(0x1)
	bool _hasHighFireRateAttackAnimation : 1;  // 0x951(0x1)
	char pad_2386[2];  // 0x952(0x2)
	float _gunsLerpFactor;  // 0x954(0x4)
	AProjectile* _projectileClass;  // 0x958(0x8)
	float _maxLongRangeWeaponHalfAngle;  // 0x960(0x4)
	char pad_2404[12];  // 0x964(0xC)
	AProjectile* _highPrecisonWeaponProjectileClass;  // 0x970(0x8)
	float _maxHighPrecisionWeaponHalfAngle;  // 0x978(0x4)
	char pad_2428[12];  // 0x97C(0xC)
	AProjectile* _grenadeProjectileClass;  // 0x988(0x8)
	AItem* _tearGasGrenadeItemClass;  // 0x990(0x8)
	AItem* _stunGrenadeItemClass;  // 0x998(0x8)
	AItem* _meleeAttackFailureGrenadeItemClass;  // 0x9A0(0x8)
	float _stunGreandeExplosionDelayAfterReachingGround;  // 0x9A8(0x4)
	float _itemGreandeDirectionRandomizationAngle;  // 0x9AC(0x4)
	char pad_2480[8];  // 0x9B0(0x8)
	struct USentryMovementComponent* _sentryMovementComponent;  // 0x9B8(0x8)
	struct UHitReactComponent* _hitReactComponent;  // 0x9C0(0x8)
	struct FGameplayTag _hitReactTag;  // 0x9C8(0x8)
	char pad_2512_1 : 7;  // 0x9D0(0x1)
	bool _isAlive : 1;  // 0x9D0(0x1)
	char pad_2513[3];  // 0x9D1(0x3)
	float _maxHealth;  // 0x9D4(0x4)
	char pad_2520[8];  // 0x9D8(0x8)
	float _healthStateThresholds[6];  // 0x9E0(0x18)
	float _armorDamageReductionExplosion;  // 0x9F8(0x4)
	float _armorDamageReductionCollision;  // 0x9FC(0x4)
	float _exlosionDamageHitReactThreshold;  // 0xA00(0x4)
	char pad_2564_1 : 7;  // 0xA04(0x1)
	bool _isStunnedDuringHitReact : 1;  // 0xA04(0x1)
	char pad_2565[3];  // 0xA05(0x3)
	float _longRangeWeaponFireRate;  // 0xA08(0x4)
	float _longRangeWeaponFireRateVariation;  // 0xA0C(0x4)
	float _longRangeWeaponHalfAngleDegrees;  // 0xA10(0x4)
	int32_t _maxAmmunitionLongRangeWeapon;  // 0xA14(0x4)
	char pad_2584[4];  // 0xA18(0x4)
	int32_t _maxAmmunitionMediumRangeWeapon;  // 0xA1C(0x4)
	char pad_2592[4];  // 0xA20(0x4)
	float _longRangeWeaponSpreadHalfAngle;  // 0xA24(0x4)
	float _mediumRangeWeaponFireRate;  // 0xA28(0x4)
	float _mediumRangeWeaponHalfAngleDegrees;  // 0xA2C(0x4)
	float _mediumRangeWeaponActivationDistance;  // 0xA30(0x4)
	float _meleeAttackRate;  // 0xA34(0x4)
	float _meleeAttackActivationDistance;  // 0xA38(0x4)
	char pad_2620[8];  // 0xA3C(0x8)
	struct FVector _weaponOverrideAimLocationRep;  // 0xA44(0xC)
	char pad_2640[40];  // 0xA50(0x28)
	struct TArray<struct FSentryPatrolPoint> _patrolPoints;  // 0xA78(0x10)
	struct UParticleSystem* _muzzlePS;  // 0xA88(0x8)
	struct TArray<struct UParticleSystemComponent*> _muzzlePSCs;  // 0xA90(0x10)
	struct UParticleSystem* _highPrecisionWeaponMuzzlePS;  // 0xAA0(0x8)
	struct UParticleSystemComponent* _highPrecisionWeaponMuzzlePSC;  // 0xAA8(0x8)
	float _muzzleEffectsScaleDistanceStart;  // 0xAB0(0x4)
	float _muzzleEffectsScaleDistanceRange;  // 0xAB4(0x4)
	float _muzzleEffectsScaleByDistanceFactor;  // 0xAB8(0x4)
	char pad_2748[4];  // 0xABC(0x4)
	struct UNiagaraSystem* _highPrecisionWeaponChargingPS;  // 0xAC0(0x8)
	struct UNiagaraComponent* _highPrecisionWeaponChargingPSC;  // 0xAC8(0x8)
	char pad_2768[56];  // 0xAD0(0x38)
	struct FName _lightMaterialSlotName;  // 0xB08(0x8)
	struct TArray<struct FName> _additionalLightsMaterialSlotNames;  // 0xB10(0x10)
	struct FColor _normalLightColor;  // 0xB20(0x4)
	struct FColor _alertedLightColor;  // 0xB24(0x4)
	struct FColor _combatLightColor;  // 0xB28(0x4)
	char pad_2860[4];  // 0xB2C(0x4)
	struct FName _emissionColorParameterName;  // 0xB30(0x8)
	float _spottingPercentage;  // 0xB38(0x4)
	struct FInt32Range _damageEffectsNumPerHealthStateData[6];  // 0xB3C(0x60)
	char pad_2972[4];  // 0xB9C(0x4)
	struct TArray<struct FSentryDamageEffectData> _damageParticleEffectsPSData;  // 0xBA0(0x10)
	char pad_2992[80];  // 0xBB0(0x50)
	float _damageParticleIntensityPerHealthState[6];  // 0xC00(0x18)
	float _stompShakeEffectRadius;  // 0xC18(0x4)
	float _stompShakeMaxEffectRadius;  // 0xC1C(0x4)
	float _stompShakeEffectFalloffExponent;  // 0xC20(0x4)
	char pad_3108[4];  // 0xC24(0x4)
	UMatineeCameraShake* _stompCameraShake;  // 0xC28(0x8)
	struct UStaticMeshComponent* _laserMeshComponent;  // 0xC30(0x8)
	char pad_3128_1 : 7;  // 0xC38(0x1)
	bool _canEverDrawLaser : 1;  // 0xC38(0x1)
	char pad_3129[3];  // 0xC39(0x3)
	float _walkSpeedMultiplier;  // 0xC3C(0x4)
	float _walkSpeedMultiplierMin;  // 0xC40(0x4)
	float _walkSpeedMultiplierMax;  // 0xC44(0x4)
	char pad_3144[4];  // 0xC48(0x4)
	float _corpseSearchDuration;  // 0xC4C(0x4)
	char pad_3152[1];  // 0xC50(0x1)
	char _packedGeneralData;  // 0xC51(0x1)
	uint16_t _packedCombatData;  // 0xC52(0x2)
	char pad_3156[12];  // 0xC54(0xC)
	float _autoSaveInterval;  // 0xC60(0x4)
	char pad_3172[4];  // 0xC64(0x4)
	char pad_3176_1 : 7;  // 0xC68(0x1)
	bool _shouldSaveAndLoadSentry : 1;  // 0xC68(0x1)
	char pad_3177[31];  // 0xC69(0x1F)
	struct TWeakObjectPtr<APawn> _foe;  // 0xC88(0x8)
	char pad_3216[32];  // 0xC90(0x20)

	void OnRep_SpottingPercentage(); // Function ConZ.Sentry2.OnRep_SpottingPercentage
	void OnRep_PackedGeneralData(); // Function ConZ.Sentry2.OnRep_PackedGeneralData
	void OnRep_PackedCombatData(); // Function ConZ.Sentry2.OnRep_PackedCombatData
	void ObstacleCapsuleBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function ConZ.Sentry2.ObstacleCapsuleBeginOverlap
	void NetMulticast_StopShotEffectsLongRangeWeapon(); // Function ConZ.Sentry2.NetMulticast_StopShotEffectsLongRangeWeapon
	void NetMulticast_StartHighSpreadAttackEffects(); // Function ConZ.Sentry2.NetMulticast_StartHighSpreadAttackEffects
	void NetMulticast_PlayWalkAwaySound(); // Function ConZ.Sentry2.NetMulticast_PlayWalkAwaySound
	void NetMulticast_PlayTearGasGrenadeLaunchEffects(); // Function ConZ.Sentry2.NetMulticast_PlayTearGasGrenadeLaunchEffects
	void NetMulticast_PlayStunGrenadeLaunchEffects(); // Function ConZ.Sentry2.NetMulticast_PlayStunGrenadeLaunchEffects
	void NetMulticast_PlayReloadMontageLongRangeWeapon(); // Function ConZ.Sentry2.NetMulticast_PlayReloadMontageLongRangeWeapon
	void NetMulticast_PlayMeleeAttackMontage(int32_t kickIndex); // Function ConZ.Sentry2.NetMulticast_PlayMeleeAttackMontage
	void NetMulticast_PlayHighPrecisionAttackMontage(); // Function ConZ.Sentry2.NetMulticast_PlayHighPrecisionAttackMontage
	void NetMulticast_PlayGrenadeLaunchEffects(); // Function ConZ.Sentry2.NetMulticast_PlayGrenadeLaunchEffects
	void NetMulticast_PlayFreezeWarningSound(); // Function ConZ.Sentry2.NetMulticast_PlayFreezeWarningSound
	void NetMulticast_PlayEnemySpottedMontage(); // Function ConZ.Sentry2.NetMulticast_PlayEnemySpottedMontage
	void NetMulticast_PlayDropWeaponsRaiseHandsSound(); // Function ConZ.Sentry2.NetMulticast_PlayDropWeaponsRaiseHandsSound
	void NetMulticast_PlayBeginCombatSound(); // Function ConZ.Sentry2.NetMulticast_PlayBeginCombatSound
	void NetMulticast_OnSentryDeath(); // Function ConZ.Sentry2.NetMulticast_OnSentryDeath
	void NetMulticast_HandleHit(uint8_t  hitDirectionType); // Function ConZ.Sentry2.NetMulticast_HandleHit
	void NetMulticast_FireShotEffectsLongRangeWeapon(); // Function ConZ.Sentry2.NetMulticast_FireShotEffectsLongRangeWeapon
	void NetMulticast_FireShotEffectsHighSpread(); // Function ConZ.Sentry2.NetMulticast_FireShotEffectsHighSpread
	void NetMulticast_EndHighSpreadAttackEffects(); // Function ConZ.Sentry2.NetMulticast_EndHighSpreadAttackEffects
}; 



// Class ConZ.PrisonerActionLootCorpse
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionLootCorpse : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerActionLootCorpseDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionLootCorpseDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.PrisonerActionLootPrisonerDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionLootPrisonerDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.PrisonerActionPullGrenadePin
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionPullGrenadePin : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionManipulateTrap
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionManipulateTrap : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerActionMinigame
// Size: 0x140(Inherited: 0x108) 
struct UPrisonerActionMinigame : public UPrisonerAction
{
	char pad_264[56];  // 0x108(0x38)

}; 



// Class ConZ.PrisonerSoundComponent
// Size: 0x298(Inherited: 0xD8) 
struct UPrisonerSoundComponent : public UCharacterSoundComponent
{
	float MinBreathingRateToPostPeriodicInhaleExhaleAudioEvents;  // 0xD8(0x4)
	float MaxDistanceToListenerToPostPeriodicInhaleExhaleAudioEvents;  // 0xDC(0x4)
	struct UAkAudioEvent* PeriodicInhaleAudioEvent;  // 0xE0(0x8)
	struct UAkAudioEvent* PeriodicExhaleAudioEvent;  // 0xE8(0x8)
	struct UAkAudioEvent* HoldBreathInhaleAudioEvent;  // 0xF0(0x8)
	struct UAkAudioEvent* HoldBreathExhaleAudioEvent;  // 0xF8(0x8)
	struct UAkAudioEvent* HoldBreathBreathlessExhaleAudioEvent;  // 0x100(0x8)
	float MinHeartRateToPostHeartbeatAudioEvent;  // 0x108(0x4)
	char pad_268[4];  // 0x10C(0x4)
	struct UAkAudioEvent* HeartbeatAudioEvent;  // 0x110(0x8)
	struct UAkAudioEvent* FootstepsAudioEvent;  // 0x118(0x8)
	struct UAkAudioEvent* FootstepsEnhancerAudioEvent;  // 0x120(0x8)
	float MovingThroughFoliageGateDuration;  // 0x128(0x4)
	char pad_300[4];  // 0x12C(0x4)
	struct UAkAudioEvent* StartGenericMovingThroughFoliageAudioEvent;  // 0x130(0x8)
	struct UAkAudioEvent* StopGenericMovingThroughFoliageAudioEvent;  // 0x138(0x8)
	struct UAkAudioEvent* GenericOneShotMovingThroughFoliageAudioEvent;  // 0x140(0x8)
	struct UAkAudioEvent* GearNoiseAudioEvent;  // 0x148(0x8)
	struct UAkAudioEvent* GearNoiseAudioEventWhenInWater;  // 0x150(0x8)
	float ItemMotionNoiseTimeToLive;  // 0x158(0x4)
	char pad_348[4];  // 0x15C(0x4)
	struct UAkAudioEvent* StartGenericEatItemAudioEvent;  // 0x160(0x8)
	struct UAkAudioEvent* StopGenericEatItemAudioEvent;  // 0x168(0x8)
	struct UAkAudioEvent* StartGenericDrinkItemAudioEvent;  // 0x170(0x8)
	struct UAkAudioEvent* StopGenericDrinkItemAudioEvent;  // 0x178(0x8)
	struct UAkAudioEvent* StartGenericDrinkWaterAudioEvent;  // 0x180(0x8)
	struct UAkAudioEvent* StopGenericDrinkWaterAudioEvent;  // 0x188(0x8)
	struct UAkAudioEvent* StartGenericExamineObjectAudioEvent;  // 0x190(0x8)
	struct UAkAudioEvent* StopGenericExamineObjectAudioEvent;  // 0x198(0x8)
	struct UAkAudioEvent* StartGenericCraftAudioEvent;  // 0x1A0(0x8)
	struct UAkAudioEvent* StopGenericCraftAudioEvent;  // 0x1A8(0x8)
	struct UAkAudioEvent* StartGenericUncraftAudioEvent;  // 0x1B0(0x8)
	struct UAkAudioEvent* StopGenericUncraftAudioEvent;  // 0x1B8(0x8)
	struct UAkAudioEvent* StartGenericVehicleRepairAudioEvent;  // 0x1C0(0x8)
	struct UAkAudioEvent* StopGenericVehicleRepairAudioEvent;  // 0x1C8(0x8)
	struct UAkAudioEvent* StartWashClothAudioEvent;  // 0x1D0(0x8)
	struct UAkAudioEvent* StopWashClothAudioEvent;  // 0x1D8(0x8)
	struct UAkAudioEvent* StartInGameAudioEvent;  // 0x1E0(0x8)
	struct UAkAudioEvent* StopInGameAudioEvent;  // 0x1E8(0x8)
	struct UAkAudioEvent* CalmStateAudioEvent;  // 0x1F0(0x8)
	struct UAkAudioEvent* IntenseStateAudioEvent;  // 0x1F8(0x8)
	struct UAkAudioEvent* CombatStateAudioEvent;  // 0x200(0x8)
	struct USoundCue* OutOfBoundsSound;  // 0x208(0x8)
	struct UAkAudioEvent* ChipExplosionSound;  // 0x210(0x8)
	char pad_536[72];  // 0x218(0x48)
	struct TArray<struct FActiveMovingThroughFoliageSounds> _activeMovingThroughFoliageSounds;  // 0x260(0x10)
	char pad_624[28];  // 0x270(0x1C)
	int32_t _maxNumberOfFootstepsToPlayFootstepEnhancerSound;  // 0x28C(0x4)
	int32_t _minNumberOfFootstepsToPlayFootstepEnhancerSound;  // 0x290(0x4)
	char pad_660[4];  // 0x294(0x4)

	bool UpdateMovingThroughFoliageSounds(int32_t PlayingID, uint8_t  motionIntensity); // Function ConZ.PrisonerSoundComponent.UpdateMovingThroughFoliageSounds
	bool StopMovingThroughFoliageSounds(int32_t PlayingID); // Function ConZ.PrisonerSoundComponent.StopMovingThroughFoliageSounds
	void StopAllMovingThroughFoliageSounds(); // Function ConZ.PrisonerSoundComponent.StopAllMovingThroughFoliageSounds
	int32_t PlayMovingThroughFoliageSounds(struct UAkAudioEvent* StartAudioEvent, struct UAkAudioEvent* StopAudioEvent, uint8_t  motionIntensity); // Function ConZ.PrisonerSoundComponent.PlayMovingThroughFoliageSounds
	void PlayGearSounds(uint8_t  motionIntensity); // Function ConZ.PrisonerSoundComponent.PlayGearSounds
	void PlayFootstepSounds(char EPhysicalSurface inPhysicalSurface); // Function ConZ.PrisonerSoundComponent.PlayFootstepSounds
	void OnOutOfBoundsSoundPercentChanged(struct USoundWave* PlayingSoundWave, float PlaybackPercent); // Function ConZ.PrisonerSoundComponent.OnOutOfBoundsSoundPercentChanged
	void OnBorderCrossingStateChanged(struct APrisoner* Prisoner, uint8_t  penalty); // Function ConZ.PrisonerSoundComponent.OnBorderCrossingStateChanged
}; 



// Class ConZ.PrisonerActionMinigameDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionMinigameDescription : public UPrisonerActionDescription
{
	struct UMinigameConfiguration* MinigameConfiguration;  // 0x38(0x8)

}; 



// Class ConZ.VehicleCorpse
// Size: 0x2C0(Inherited: 0x220) 
struct AVehicleCorpse : public AActor
{
	char pad_544[8];  // 0x220(0x8)
	struct UStaticMeshComponent* _mesh;  // 0x228(0x8)
	struct UParticleSystem* _explosionParticles;  // 0x230(0x8)
	char pad_568[8];  // 0x238(0x8)
	struct FTransform _explosionParticlesTransform;  // 0x240(0x30)
	struct UAkAudioEvent* _explosionAudioEvent;  // 0x270(0x8)
	float _explosionForceMagnitude;  // 0x278(0x4)
	char pad_636[4];  // 0x27C(0x4)
	struct TArray<struct FVehicleCorpseBurningParticles> _burningParticles;  // 0x280(0x10)
	struct UAkAudioEvent* _burningAudioEvent;  // 0x290(0x8)
	float _endOfLifeFadingTime;  // 0x298(0x4)
	char pad_668[36];  // 0x29C(0x24)

	struct UStaticMeshComponent* GetMesh(); // Function ConZ.VehicleCorpse.GetMesh
}; 



// Class ConZ.PrisonerActionOpenItem
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionOpenItem : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionOpenItemDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionOpenItemDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.PrisonerActionOperateBondageDescription
// Size: 0x58(Inherited: 0x38) 
struct UPrisonerActionOperateBondageDescription : public UPrisonerActionDescription
{
	char pad_56[32];  // 0x38(0x20)

}; 



// Class ConZ.PrisonerActionPickUpVehicle2W
// Size: 0x130(Inherited: 0x108) 
struct UPrisonerActionPickUpVehicle2W : public UPrisonerAction
{
	char pad_264[40];  // 0x108(0x28)

}; 



// Class ConZ.PrisonerSkillComponentUIController
// Size: 0x50(Inherited: 0x28) 
struct UPrisonerSkillComponentUIController : public UObject
{
	char pad_40[40];  // 0x28(0x28)

}; 



// Class ConZ.PrisonerActionPickUpVehicle2WDescription
// Size: 0xA0(Inherited: 0x38) 
struct UPrisonerActionPickUpVehicle2WDescription : public UPrisonerActionDescription
{
	char pad_56[104];  // 0x38(0x68)

}; 



// Class ConZ.PrisonerBodyCondition_ColonFull
// Size: 0x100(Inherited: 0xC0) 
struct UPrisonerBodyCondition_ColonFull : public UPrisonerBodyCondition
{
	float _colonFullnessToExist;  // 0xC0(0x4)
	float _colonFullnessToForceDefecate;  // 0xC4(0x4)
	UPrisonerBodySymptom_NeedToDefecate* _needToDefecateSymptomClass;  // 0xC8(0x8)
	struct UPrisonerBodySymptomCause* _needToDefecateSymptomCause;  // 0xD0(0x8)
	float _colonFullnessAtWhichFartingStarts;  // 0xD8(0x4)
	float _fartingInterval;  // 0xDC(0x4)
	UPrisonerBodySymptom_Farting* _fartingSymptomClass;  // 0xE0(0x8)
	struct UPrisonerBodySymptomCause_Farting* _fartingSymptomCause;  // 0xE8(0x8)
	char pad_240[16];  // 0xF0(0x10)

}; 



// Class ConZ.PrisonerActionPlaceItemOnRackDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerActionPlaceItemOnRackDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.PrisonerActionPlantSeed
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionPlantSeed : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.WeaponStateRocketLauncherActiveArmed
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateRocketLauncherActiveArmed : public UWeaponState
{

}; 



// Class ConZ.PrisonerActionRussianRouletteDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionRussianRouletteDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.PrisonerActionReloadWeapon
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionReloadWeapon : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerActionRepair
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionRepair : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerActionReloadWeaponDescription
// Size: 0x70(Inherited: 0x38) 
struct UPrisonerActionReloadWeaponDescription : public UPrisonerActionDescription
{
	char pad_56[56];  // 0x38(0x38)

}; 



// Class ConZ.PrisonerActionRemoveItemFromHands
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionRemoveItemFromHands : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerActionTreatPatient
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionTreatPatient : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerActionRemoveWeed
// Size: 0x120(Inherited: 0x108) 
struct UPrisonerActionRemoveWeed : public UPrisonerAction
{
	char pad_264[24];  // 0x108(0x18)

}; 



// Class ConZ.PrisonerActionRepairDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionRepairDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.WetnessManager
// Size: 0x270(Inherited: 0x220) 
struct AWetnessManager : public AActor
{
	int32_t MaxNumberOfActiveWettables;  // 0x220(0x4)
	float MaxWettableLifeTime;  // 0x224(0x4)
	float WeatherAndWettableObjectParametersUpdateInterval;  // 0x228(0x4)
	char pad_556[4];  // 0x22C(0x4)
	struct UCurveFloat* WettingRateFromRainVsRainIntensity;  // 0x230(0x8)
	float WettingRateFromWaterImmersion;  // 0x238(0x4)
	float WettingRateFromWetSurfaces;  // 0x23C(0x4)
	float DryingRate;  // 0x240(0x4)
	char pad_580[4];  // 0x244(0x4)
	struct UCurveFloat* DryingRateModifierVsTemperature;  // 0x248(0x8)
	struct UCurveFloat* DryingRateModifierVsRelativeHumidity;  // 0x250(0x8)
	float AirTemperatureModifierWhenNotExposedToSunlight;  // 0x258(0x4)
	char pad_604[20];  // 0x25C(0x14)

}; 



// Class ConZ.PrisonerActionRepairBaseElementDescription
// Size: 0xA0(Inherited: 0x50) 
struct UPrisonerActionRepairBaseElementDescription : public UPrisonerActionRepairDescription
{
	char pad_80[80];  // 0x50(0x50)

}; 



// Class ConZ.PrisonerActionRepairItem
// Size: 0x118(Inherited: 0x118) 
struct UPrisonerActionRepairItem : public UPrisonerActionRepair
{

}; 



// Class ConZ.PrisonerActionResuscitateDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionResuscitateDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.WeaponAttachmentGhillie
// Size: 0x990(Inherited: 0x930) 
struct AWeaponAttachmentGhillie : public AWeaponAttachment
{
	struct USkeletalMeshComponent* EquippedSkeletalMeshComponent;  // 0x930(0x8)
	struct TMap<AWeapon*, struct FMeshMaterialPair> WeaponToSkeletalMeshMapping;  // 0x938(0x50)
	char pad_2440[8];  // 0x988(0x8)

}; 



// Class ConZ.PrisonerActionRollRevolverDrumDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionRollRevolverDrumDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.PrisonerActionSearchGround
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionSearchGround : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionSearchPrisonerDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionSearchPrisonerDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.PrisonerActionSpillDescription
// Size: 0x90(Inherited: 0x38) 
struct UPrisonerActionSpillDescription : public UCharacterActionDescription
{
	char pad_56[88];  // 0x38(0x58)

}; 



// Class ConZ.PrisonerActionSpillAtLocation
// Size: 0x150(Inherited: 0x150) 
struct UPrisonerActionSpillAtLocation : public UPrisonerActionSpill
{

}; 



// Class ConZ.PrisonerActionSpillAtLocationDescription
// Size: 0xB8(Inherited: 0x90) 
struct UPrisonerActionSpillAtLocationDescription : public UPrisonerActionSpillDescription
{
	char pad_144[40];  // 0x90(0x28)

}; 



// Class ConZ.PrisonerActionStartCarryingItemDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionStartCarryingItemDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.PrisonerActionStartChainsawEngine
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionStartChainsawEngine : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionStartResting
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionStartResting : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerConsumableDigestionHandler_FoodDisgust
// Size: 0x38(Inherited: 0x28) 
struct UPrisonerConsumableDigestionHandler_FoodDisgust : public UConsumableDigestionHandler
{
	float _disgustAmountPerMassInStomach;  // 0x28(0x4)
	char pad_44[12];  // 0x2C(0xC)

}; 



// Class ConZ.PrisonerActionThrowItemDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionThrowItemDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.PrisonerBodyConditionCauseUIData
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerBodyConditionCauseUIData : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.PrisonerActionTriggerRemoteKey
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionTriggerRemoteKey : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerActionTriggerRemoteKeyDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerActionTriggerRemoteKeyDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.PrisonerBodyEffect_InfectionController
// Size: 0xD0(Inherited: 0x40) 
struct UPrisonerBodyEffect_InfectionController : public UPrisonerBodyEffect
{
	struct FRuntimeFloatCurve _passiveContaminationIncreaseRateVsContaminationRatio;  // 0x40(0x88)
	float _contaminationSuppressionRate;  // 0xC8(0x4)
	char pad_204[4];  // 0xCC(0x4)

}; 



// Class ConZ.PrisonerActionUncraftItem
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionUncraftItem : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionUnequipWeapon
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionUnequipWeapon : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.VehicleWithDashboard
// Size: 0x28(Inherited: 0x28) 
struct UVehicleWithDashboard : public UInterface
{

}; 



// Class ConZ.PrisonerActionUnloadAmmoFromWeapon
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionUnloadAmmoFromWeapon : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerActionUnloadAmmoFromWeaponDescription
// Size: 0x50(Inherited: 0x38) 
struct UPrisonerActionUnloadAmmoFromWeaponDescription : public UPrisonerActionDescription
{
	char pad_56[24];  // 0x38(0x18)

}; 



// Class ConZ.PrisonerBodySymptomUIData_FeelingHot
// Size: 0xA8(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_FeelingHot : public UPrisonerBodySymptomUIData
{

}; 



// Class ConZ.PrisonerActionUrinate
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionUrinate : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerActionVoiceline
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionVoiceline : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerActionWashCloth
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionWashCloth : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionWashEyes
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerActionWashEyes : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerActionWashEyesWithReplenishableResourceDescription
// Size: 0x78(Inherited: 0x38) 
struct UPrisonerActionWashEyesWithReplenishableResourceDescription : public UCharacterActionDescription
{
	char pad_56[56];  // 0x38(0x38)
	struct UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;  // 0x70(0x8)

}; 



// Class ConZ.PrisonerActionWashWithReplenishableResource
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerActionWashWithReplenishableResource : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerActionWhistle
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerActionWhistle : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerActionWhistleDescription
// Size: 0x38(Inherited: 0x38) 
struct UPrisonerActionWhistleDescription : public UPrisonerActionDescription
{

}; 



// Class ConZ.PrisonerAnimInstance_Aerial
// Size: 0x330(Inherited: 0x2C0) 
struct UPrisonerAnimInstance_Aerial : public UAnimInstance
{
	uint8_t  _upcomingPose;  // 0x2B8(0x1)
	uint8_t  _previousPose;  // 0x2B9(0x1)
	struct UAnimSequence* _blendAnimationOverride;  // 0x2C0(0x8)
	float _blendAnimationOverrideTime;  // 0x2C8(0x4)
	float _poseBlendWeight;  // 0x2CC(0x4)
	struct FVector2D _fallingControl;  // 0x2D0(0x8)
	float _fallSpeed;  // 0x2D8(0x4)
	float _yawRotationRate;  // 0x2DC(0x4)
	char pad_738_1 : 7;  // 0x2E2(0x1)
	bool _isInFirstPersonView : 1;  // 0x2E0(0x1)
	char pad_739_1 : 7;  // 0x2E3(0x1)
	bool _hasHandBondage : 1;  // 0x2E1(0x1)
	char pad_740_1 : 7;  // 0x2E4(0x1)
	bool _jumpingAfterApex : 1;  // 0x2E2(0x1)
	char pad_741_1 : 7;  // 0x2E5(0x1)
	bool _shouldUsePoseSnapshot : 1;  // 0x2E3(0x1)
	char pad_742[2];  // 0x2E6(0x2)
	struct UAnimSequenceBase* _handsBoundIdleFPAnimation;  // 0x2E8(0x8)
	struct UAnimSequenceBase* _handsBoundIdleTPAnimation;  // 0x2F0(0x8)
	float _distanceToJumpApexNormalized;  // 0x2F8(0x4)
	float _legsPoseBeforeJump;  // 0x2FC(0x4)
	uint8_t  _movementPaceBeforeJump;  // 0x300(0x1)
	char pad_769[47];  // 0x301(0x2F)

	float FindJumpTime(struct UAnimSequenceBase* AnimSequence, float distanceToApex, bool afterApex); // Function ConZ.PrisonerAnimInstance_Aerial.FindJumpTime
}; 



// Class ConZ.PrisonerAnimInstance_Boat
// Size: 0x430(Inherited: 0x2C0) 
struct UPrisonerAnimInstance_Boat : public UAnimInstance
{
	float _vehicleSpeed;  // 0x2B8(0x4)
	float _vehicleSpeedKph;  // 0x2BC(0x4)
	char pad_712_1 : 7;  // 0x2C8(0x1)
	bool _isVehicleDriver : 1;  // 0x2C0(0x1)
	char pad_713_1 : 7;  // 0x2C9(0x1)
	bool _isRowing : 1;  // 0x2C1(0x1)
	char pad_714_1 : 7;  // 0x2CA(0x1)
	bool _isPaddling : 1;  // 0x2C2(0x1)
	char pad_715_1 : 7;  // 0x2CB(0x1)
	bool _isMotorPropelled : 1;  // 0x2C3(0x1)
	char pad_716_1 : 7;  // 0x2CC(0x1)
	bool _isSailing : 1;  // 0x2C4(0x1)
	float _sailsDeployAmount;  // 0x2C8(0x4)
	float _sailsSteerAmount;  // 0x2CC(0x4)
	float _sailsTurnAmount;  // 0x2D0(0x4)
	int32_t _paddleCounter;  // 0x2D4(0x4)
	float _vehicleThrottleAmount;  // 0x2D8(0x4)
	float _vehicleBrakeAmount;  // 0x2DC(0x4)
	float _vehicleSteerAmount;  // 0x2E0(0x4)
	int32_t _numPaddleSwingsInOneHand;  // 0x2E4(0x4)
	struct UBlendSpace* _vehicleDriverForwardIdleAnimation;  // 0x2E8(0x8)
	struct UBlendSpace* _vehiclePassengerIdleAnimation;  // 0x2F0(0x8)
	struct UBlendSpace* _boatDriverPaddleLAnimation;  // 0x2F8(0x8)
	struct UBlendSpace* _boatDriverPaddleRAnimation;  // 0x300(0x8)
	struct UAnimSequence* _boatDriverPaddleLToRAnimation;  // 0x308(0x8)
	struct UAnimSequence* _boatDriverPaddleRToLAnimation;  // 0x310(0x8)
	float _paddleInHand;  // 0x318(0x4)
	struct FTransform _motorHandleSocketTransform;  // 0x320(0x30)
	struct FTransform _sailsHandleSocketTransform;  // 0x350(0x30)
	struct FTransform _rudderSocketTransform;  // 0x380(0x30)
	float _maxSpineLeanAngle;  // 0x3B0(0x4)
	float _spineLeanAmountForHandlingMotor;  // 0x3B4(0x4)
	uint8_t  _movementPace;  // 0x3B8(0x1)
	char pad_954[2];  // 0x3BA(0x2)
	float _normalizedMovementPace;  // 0x3BC(0x4)
	float _playRateFromMovementPace;  // 0x3C0(0x4)
	uint8_t  _engineState;  // 0x3C4(0x1)
	char pad_965_1 : 7;  // 0x3C5(0x1)
	bool _useVehicleWAPLowerBodyIdleTP : 1;  // 0x3C5(0x1)
	char pad_966[2];  // 0x3C6(0x2)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingTP;  // 0x3C8(0x8)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedTP;  // 0x3D0(0x8)
	char pad_984_1 : 7;  // 0x3D8(0x1)
	bool _isInCombatMode : 1;  // 0x3D8(0x1)
	char pad_985[7];  // 0x3D9(0x7)
	struct UAnimSequence* _startEngineStartAnimation;  // 0x3E0(0x8)
	struct UAnimSequence* _startEngineLoopAnimation;  // 0x3E8(0x8)
	struct UAnimSequence* _startEngineLongLoopAnimation;  // 0x3F0(0x8)
	struct UAnimSequence* _startEngineEndAnimation;  // 0x3F8(0x8)
	char pad_1024[48];  // 0x400(0x30)

}; 



// Class ConZ.PrisonerAnimInstance_FemaleCorrections
// Size: 0x2D0(Inherited: 0x2C0) 
struct UPrisonerAnimInstance_FemaleCorrections : public UAnimInstance
{
	struct FName _correctionsDisabledCurveName;  // 0x2B8(0x8)
	float _correctionsDisabledCurveValue;  // 0x2C0(0x4)
	float _correctionsDisabledCurveValueInverse;  // 0x2C4(0x4)

}; 



// Class ConZ.VerificationStatics
// Size: 0x28(Inherited: 0x28) 
struct UVerificationStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.PrisonerDebugUI_SkillEntryWidget
// Size: 0x270(Inherited: 0x260) 
struct UPrisonerDebugUI_SkillEntryWidget : public UUserWidget
{
	char pad_608[8];  // 0x260(0x8)
	struct UTextBlock* _nameTextBlock;  // 0x268(0x8)

}; 



// Class ConZ.PrisonerVehicleAction_QuickRepairAttachmentDescription
// Size: 0x60(Inherited: 0x38) 
struct UPrisonerVehicleAction_QuickRepairAttachmentDescription : public UPrisonerActionDescription
{
	char pad_56[40];  // 0x38(0x28)

}; 



// Class ConZ.PrisonerAnimInstance_Grappled
// Size: 0x2C0(Inherited: 0x2C0) 
struct UPrisonerAnimInstance_Grappled : public UAnimInstance
{
	struct UAnimSequence* _idleAnimation;  // 0x2B8(0x8)

}; 



// Class ConZ.PrisonerAnimInstance_Parachute
// Size: 0x2E0(Inherited: 0x2C0) 
struct UPrisonerAnimInstance_Parachute : public UAnimInstance
{
	struct UAnimSequence* _defaultOpeningAnimation;  // 0x2B8(0x8)
	struct UAnimSequence* _openingAnimation;  // 0x2C0(0x8)
	float _openingAnimationTime;  // 0x2C8(0x4)
	char pad_724[12];  // 0x2D4(0xC)

}; 



// Class ConZ.PrisonerBodyCondition_BandagesTreatment
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerBodyCondition_BandagesTreatment : public UInterface
{

}; 



// Class ConZ.PrisonerAnimInstance_VehicleBase
// Size: 0x11E0(Inherited: 0x1150) 
struct UPrisonerAnimInstance_VehicleBase : public UPrisonerAnimInstance
{
	char pad_4432_1 : 7;  // 0x1150(0x1)
	bool _isDriver : 1;  // 0x1150(0x1)
	char pad_4433_1 : 7;  // 0x1151(0x1)
	bool _isPushing : 1;  // 0x1151(0x1)
	char pad_4434[6];  // 0x1152(0x6)
	struct UBlendSpace* _mountedBlendspace;  // 0x1158(0x8)
	float _maxPushingSpeedKmh;  // 0x1160(0x4)
	char pad_4452[12];  // 0x1164(0xC)
	struct FTransform _leftHandIKTransform;  // 0x1170(0x30)
	struct FTransform _rightHandIKTransform;  // 0x11A0(0x30)
	char pad_4560_1 : 7;  // 0x11D0(0x1)
	bool _hasDashboard : 1;  // 0x11D0(0x1)
	char pad_4561[15];  // 0x11D1(0xF)

}; 



// Class ConZ.PrisonerAnimInstance_WeightLoad
// Size: 0x2C0(Inherited: 0x2C0) 
struct UPrisonerAnimInstance_WeightLoad : public UAnimInstance
{

}; 



// Class ConZ.PrisonerAnimInstance_WheelBarrow
// Size: 0x3A0(Inherited: 0x2C0) 
struct UPrisonerAnimInstance_WheelBarrow : public UAnimInstance
{
	float _wheelBarrowSpeed;  // 0x2B8(0x4)
	float _wheelBarrowSpeedKph;  // 0x2BC(0x4)
	float _wheelBarrowBumpiness;  // 0x2C0(0x4)
	float _wheelBarrowRollAngleRelativeToDriver;  // 0x2C4(0x4)
	char pad_720_1 : 7;  // 0x2D0(0x1)
	bool _isInCombatMode : 1;  // 0x2C8(0x1)
	char pad_721_1 : 7;  // 0x2D1(0x1)
	bool _isLimping : 1;  // 0x2C9(0x1)
	char pad_722_1 : 7;  // 0x2D2(0x1)
	bool _isDriver : 1;  // 0x2CA(0x1)
	struct UAnimSequenceBase* _driverIdleAnimation;  // 0x2D0(0x8)
	struct UBlendSpace* _driverWalkJogAnimation;  // 0x2D8(0x8)
	struct UBlendSpace* _driverWalkJogLimpingAnimation;  // 0x2E0(0x8)
	char pad_747[5];  // 0x2EB(0x5)
	struct FTransform _driverLHandGripTransform;  // 0x2F0(0x30)
	struct FTransform _driverRHandGripTransform;  // 0x320(0x30)
	float _driverSpineBendAngle;  // 0x350(0x4)
	float _driverSpineBendScale;  // 0x354(0x4)
	float _driverSpineBendAngleInterpSpeed;  // 0x358(0x4)
	float _driverSpineLeanAngle;  // 0x35C(0x4)
	float _driverSpineLeanScale;  // 0x360(0x4)
	float _driverSpineLeanAngleInterpSpeed;  // 0x364(0x4)
	char pad_872_1 : 7;  // 0x368(0x1)
	bool _driverHasFloor : 1;  // 0x368(0x1)
	char pad_873_1 : 7;  // 0x369(0x1)
	bool _isDriverMoving : 1;  // 0x369(0x1)
	char pad_874[2];  // 0x36A(0x2)
	float _driverSpeed;  // 0x36C(0x4)
	float _driverCourseAngle;  // 0x370(0x4)
	char pad_884[4];  // 0x374(0x4)
	struct UBlendSpace* _passengerIdleAnimation;  // 0x378(0x8)
	char pad_896_1 : 7;  // 0x380(0x1)
	bool _useVehicleWAPLowerBodyIdleTP : 1;  // 0x380(0x1)
	char pad_897[7];  // 0x381(0x7)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingTP;  // 0x388(0x8)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedTP;  // 0x390(0x8)
	char pad_920[8];  // 0x398(0x8)

	void AnimNotify_RFootDown(); // Function ConZ.PrisonerAnimInstance_WheelBarrow.AnimNotify_RFootDown
	void AnimNotify_LFootDown(); // Function ConZ.PrisonerAnimInstance_WheelBarrow.AnimNotify_LFootDown
}; 



// Class ConZ.PrisonerAnimNotify_PlayGearSound
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerAnimNotify_PlayGearSound : public UAnimNotify
{
	uint8_t  motionIntensity;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 



// Class ConZ.PBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages
// Size: 0xC8(Inherited: 0x50) 
struct UPBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages : public UPrisonerBodyConditionTreatInteractionItemTag
{
	struct TArray<float> TreatmentDurationPerSeverityLevel;  // 0x50(0x10)
	struct TArray<float> TreatmentDurationPerUsePerSeverityLevel;  // 0x60(0x10)
	float StabilizationDurationReduction;  // 0x70(0x4)
	char pad_116[4];  // 0x74(0x4)
	struct FPBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages_PerSkillData SkillData[5];  // 0x78(0x50)

}; 



// Class ConZ.PrisonerAppearanceComponent
// Size: 0x140(Inherited: 0xB0) 
struct UPrisonerAppearanceComponent : public UActorComponent
{
	uint32_t _repData;  // 0xB0(0x4)
	char pad_180[4];  // 0xB4(0x4)
	uint64_t _femaleRepData;  // 0xB8(0x8)
	char pad_192[20];  // 0xC0(0x14)
	struct FColor _eyeshadowColor;  // 0xD4(0x4)
	struct FColor _eyelinerColor;  // 0xD8(0x4)
	struct FColor _lipstickColor;  // 0xDC(0x4)
	char pad_224[72];  // 0xE0(0x48)
	char pad_296_1 : 7;  // 0x128(0x1)
	bool _overrideVisualParameters : 1;  // 0x128(0x1)
	char pad_297[7];  // 0x129(0x7)
	struct TArray<struct FVisualParameter> _visualParameterOverrides;  // 0x130(0x10)

	void OnRep_RepData(); // Function ConZ.PrisonerAppearanceComponent.OnRep_RepData
	void OnRep_MakeupColor(); // Function ConZ.PrisonerAppearanceComponent.OnRep_MakeupColor
	void OnRep_FemaleRepData(); // Function ConZ.PrisonerAppearanceComponent.OnRep_FemaleRepData
	void NetMulticast_UpdateRepData(uint32_t RepData); // Function ConZ.PrisonerAppearanceComponent.NetMulticast_UpdateRepData
	void NetMulticast_UpdateHair(char hairParams); // Function ConZ.PrisonerAppearanceComponent.NetMulticast_UpdateHair
	void NetMulticast_UpdateFemaleRepData(uint64_t RepData, struct FColor EyeshadowColor, struct FColor EyelinerColor, struct FColor LipstickColor); // Function ConZ.PrisonerAppearanceComponent.NetMulticast_UpdateFemaleRepData
	void NetMulticast_UpdateChipLightColorIndex(int8_t chipLightColor); // Function ConZ.PrisonerAppearanceComponent.NetMulticast_UpdateChipLightColorIndex
}; 



// Class ConZ.PrisonerBodyCompositionMorphsComputer
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerBodyCompositionMorphsComputer : public UObject
{

}; 



// Class ConZ.VoteTopic_InitiateCargoDrop
// Size: 0x48(Inherited: 0x48) 
struct UVoteTopic_InitiateCargoDrop : public UVoteTopic
{

}; 



// Class ConZ.PrisonerBodyCompositionMorphsComputer_CharacterCreationOrMugshot
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerBodyCompositionMorphsComputer_CharacterCreationOrMugshot : public UPrisonerBodyCompositionMorphsComputer
{

}; 



// Class ConZ.ReplicatedExplosionEffectsActor
// Size: 0x2D0(Inherited: 0x228) 
struct AReplicatedExplosionEffectsActor : public AReplicatedEffectsActor
{
	char pad_552[8];  // 0x228(0x8)
	struct FTransform _explosionParticlesTransform;  // 0x230(0x30)
	struct UParticleSystem* _defaultParticleSystem;  // 0x260(0x8)
	struct TMap<char EPhysicalSurface, struct UParticleSystem*> _onImpactExplosionEffectsOverrides;  // 0x268(0x50)
	struct UAkAudioEvent* _explosionSound;  // 0x2B8(0x8)
	char pad_704[16];  // 0x2C0(0x10)

}; 



// Class ConZ.PrisonerAppearanceUIController
// Size: 0x1F0(Inherited: 0x28) 
struct UPrisonerAppearanceUIController : public UObject
{
	char pad_40[456];  // 0x28(0x1C8)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerBodyConditionOrSymptomSideEffect : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerBodyConditionOrSymptomSideEffectUIData : public UObject
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_Damage
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_Damage : public UPrisonerBodyConditionOrSymptomSideEffectUIData
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_MaxMovementPace
// Size: 0x48(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_MaxMovementPace : public UPrisonerBodyConditionOrSymptomSideEffect
{
	struct FPrisonerMaxMovementPaceVsSeverity _maxMovementPaceVsSeverity;  // 0x30(0x10)
	char pad_64[8];  // 0x40(0x8)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_PeriodicAffect
// Size: 0x160(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_PeriodicAffect : public UPrisonerBodyConditionOrSymptomSideEffect
{
	UPrisonerBodySymptom_PeriodicAffect* _symptomClass;  // 0x30(0x8)
	struct UPrisonerBodySymptomCause_PeriodicAffect* _symptomCause;  // 0x38(0x8)
	struct FRuntimeFloatCurve _intervalVsSeverity;  // 0x40(0x88)
	struct FRuntimeFloatCurve _chanceVsSeverity;  // 0xC8(0x88)
	struct FFloatInterval _durationVsConstitution;  // 0x150(0x8)
	struct FFloatInterval _intensityVsConstitution;  // 0x158(0x8)

}; 



// Class ConZ.WeaponStateEquipping
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateEquipping : public UWeaponState
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
// Size: 0xC0(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier : public UPrisonerBodyConditionOrSymptomSideEffect
{
	struct FRuntimeFloatCurve _modifierVsSeverity;  // 0x30(0x88)
	char pad_184[8];  // 0xB8(0x8)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.RadiationManager
// Size: 0x2F8(Inherited: 0x220) 
struct ARadiationManager : public AActor
{
	char pad_544[24];  // 0x220(0x18)
	struct TArray<struct FRadiationSourceDescription> _levelRadiationSources;  // 0x238(0x10)
	char pad_584[4];  // 0x248(0x4)
	float _radiationDispersionRate;  // 0x24C(0x4)
	char pad_592[168];  // 0x250(0xA8)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_StrengthModifier
// Size: 0xC0(Inherited: 0xC0) 
struct UPrisonerBodyConditionOrSymptomSideEffect_StrengthModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{

}; 



// Class ConZ.PrisonerMakeoverUIController
// Size: 0x140(Inherited: 0x28) 
struct UPrisonerMakeoverUIController : public UObject
{
	char pad_40[280];  // 0x28(0x118)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_ConstitutionModifier
// Size: 0xC0(Inherited: 0xC0) 
struct UPrisonerBodyConditionOrSymptomSideEffect_ConstitutionModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{

}; 



// Class ConZ.PrisonerFirstPersonVehicleAimingSubviewComponent
// Size: 0x8C0(Inherited: 0x8C0) 
struct UPrisonerFirstPersonVehicleAimingSubviewComponent : public UPrisonerFirstPersonSubviewComponent
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_ConstitutionModifier
// Size: 0x30(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_ConstitutionModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{

}; 



// Class ConZ.RemoveMagazineInsertCartridge
// Size: 0x90(Inherited: 0x90) 
struct URemoveMagazineInsertCartridge : public UWeaponActionReloadSequence
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_DexterityModifier
// Size: 0xC0(Inherited: 0xC0) 
struct UPrisonerBodyConditionOrSymptomSideEffect_DexterityModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_DexterityModifier
// Size: 0x30(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_DexterityModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_HealingSpeedModifier
// Size: 0xC0(Inherited: 0xC0) 
struct UPrisonerBodyConditionOrSymptomSideEffect_HealingSpeedModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_ImmuneSystemEfficiencyModifier
// Size: 0x30(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_ImmuneSystemEfficiencyModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_GroundMovementSpeedModifier
// Size: 0xC0(Inherited: 0xC0) 
struct UPrisonerBodyConditionOrSymptomSideEffect_GroundMovementSpeedModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_WaterMovementSpeedModifier
// Size: 0xC0(Inherited: 0xC0) 
struct UPrisonerBodyConditionOrSymptomSideEffect_WaterMovementSpeedModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_MaxStaminaModifier
// Size: 0xC0(Inherited: 0xC0) 
struct UPrisonerBodyConditionOrSymptomSideEffect_MaxStaminaModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_MaxStaminaModifier
// Size: 0x30(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_MaxStaminaModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{

}; 



// Class ConZ.VehicleAttachment_ConstrainedWheel
// Size: 0x500(Inherited: 0x360) 
struct UVehicleAttachment_ConstrainedWheel : public UVehicleAttachment_Wheel
{
	struct FVehicleAttachmentWheelSetup WheelSetup;  // 0x360(0x44)
	char pad_932[12];  // 0x3A4(0xC)
	struct FVehicleAttachmentMeshSetup VisualMeshSetup;  // 0x3B0(0x90)
	char pad_1088[16];  // 0x440(0x10)
	struct FVehicleAttachmentMeshSetup SteeringMeshSetup;  // 0x450(0x90)
	char pad_1248[32];  // 0x4E0(0x20)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptom
// Size: 0xA0(Inherited: 0x40) 
struct UPrisonerBodyConditionOrSymptom : public UPrisonerBodyEffect
{
	char pad_64[24];  // 0x40(0x18)
	UPrisonerBodyConditionOrSymptomUIData* _uiDataClass;  // 0x58(0x8)
	char pad_96_1 : 7;  // 0x60(0x1)
	bool _useSeverityToDetermineLifeThreateningStatus : 1;  // 0x60(0x1)
	char pad_97[3];  // 0x61(0x3)
	struct FFloatRange _severityRangeToBeLifeThreatening;  // 0x64(0x10)
	float _severityRatioChangeToReplicate;  // 0x74(0x4)
	float _clientSeverityRatioInterpSpeed;  // 0x78(0x4)
	char pad_124[4];  // 0x7C(0x4)
	struct TArray<struct UPrisonerBodyConditionOrSymptomSideEffect*> _sideEffects;  // 0x80(0x10)
	char pad_144[8];  // 0x90(0x8)
	float _repSeverity;  // 0x98(0x4)
	float _repMaxSeverity;  // 0x9C(0x4)

}; 



// Class ConZ.PrisonerBodyCondition
// Size: 0xC0(Inherited: 0xA0) 
struct UPrisonerBodyCondition : public UPrisonerBodyConditionOrSymptom
{
	struct TArray<UPrisonerBodyConditionInteraction*> _initialInteractions;  // 0xA0(0x10)
	char pad_176[16];  // 0xB0(0x10)

}; 



// Class ConZ.PrisonerBodyCondition_Injury
// Size: 0xC0(Inherited: 0xC0) 
struct UPrisonerBodyCondition_Injury : public UPrisonerBodyCondition
{

}; 



// Class ConZ.PrisonerBodyCondition_BasicInjury
// Size: 0x158(Inherited: 0xC0) 
struct UPrisonerBodyCondition_BasicInjury : public UPrisonerBodyCondition_Injury
{
	struct FRuntimeFloatCurve _severityVsDamageRatio;  // 0xC0(0x88)
	float _healingRate;  // 0x148(0x4)
	float _damage;  // 0x14C(0x4)
	float _damageToRecover;  // 0x150(0x4)
	char pad_340[4];  // 0x154(0x4)

}; 



// Class ConZ.PrisonerVehicleAction_ForceUnmountDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerVehicleAction_ForceUnmountDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.PrisonerBodyConditionUIData_Abrasions
// Size: 0x1E0(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_Abrasions : public UPrisonerBodyConditionUIData
{
	char pad_416[64];  // 0x1A0(0x40)

}; 



// Class ConZ.ScreenSpaceHealthWidget
// Size: 0x260(Inherited: 0x260) 
struct UScreenSpaceHealthWidget : public UUserWidget
{

	void SetMaxHealthPercentage(float Value); // Function ConZ.ScreenSpaceHealthWidget.SetMaxHealthPercentage
	void SetHealthPercentage(float Value); // Function ConZ.ScreenSpaceHealthWidget.SetHealthPercentage
}; 



// Class ConZ.WindVane
// Size: 0x250(Inherited: 0x220) 
struct AWindVane : public AActor
{
	struct UStaticMeshComponent* _column;  // 0x220(0x8)
	struct UStaticMeshComponent* _body;  // 0x228(0x8)
	struct UStaticMeshComponent* _propeller;  // 0x230(0x8)
	float _bodyRotationRate;  // 0x238(0x4)
	float _propellerSpinRate;  // 0x23C(0x4)
	struct FName _rotationRateRTPC;  // 0x240(0x8)
	char pad_584[8];  // 0x248(0x8)

}; 



// Class ConZ.QuartalPieProgressBar
// Size: 0x278(Inherited: 0x260) 
struct UQuartalPieProgressBar : public UUserWidget
{
	struct TArray<struct FSlateBrush> ProgressIcons;  // 0x260(0x10)
	struct UImage* _displayedImage;  // 0x270(0x8)

	void SetProgressIndex(int32_t progressIndex); // Function ConZ.QuartalPieProgressBar.SetProgressIndex
}; 



// Class ConZ.PrisonerBodyCondition_AcuteRadiationSyndrome
// Size: 0x310(Inherited: 0xC0) 
struct UPrisonerBodyCondition_AcuteRadiationSyndrome : public UPrisonerBodyCondition
{
	float _amount;  // 0xC0(0x4)
	float _maxAmount;  // 0xC4(0x4)
	float _amountAtRecoveryStart;  // 0xC8(0x4)
	char pad_204[4];  // 0xCC(0x4)
	struct FRuntimeFloatCurve _severityVsAmountRatio;  // 0xD0(0x88)
	struct FRuntimeFloatCurve _increaseRateVsEffectiveRadiationAmountRatio;  // 0x158(0x88)
	struct FRuntimeFloatCurve _decreaseRateVsSeverity;  // 0x1E0(0x88)
	struct FFloatInterval _decreaseRateMultiplierVsConstitutionRatio;  // 0x268(0x8)
	struct FFloatInterval _randomBleedingIntervalRange;  // 0x270(0x8)
	struct FRuntimeFloatCurve _randomBleedingChanceVsSeverity;  // 0x278(0x88)
	float _randomBleedingTimer;  // 0x300(0x4)
	float _chosenRandomBleedingInterval;  // 0x304(0x4)
	uint8_t  _state;  // 0x308(0x1)
	char pad_777[7];  // 0x309(0x7)

}; 



// Class ConZ.PrisonerBodyCondition_Choking
// Size: 0xD0(Inherited: 0xC0) 
struct UPrisonerBodyCondition_Choking : public UPrisonerBodyCondition
{
	float _oxygenSaturationToExist;  // 0xC0(0x4)
	char pad_196[12];  // 0xC4(0xC)

}; 



// Class ConZ.PrisonerBodyConditionUIData_EnergyDeficiency
// Size: 0x1A8(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_EnergyDeficiency : public UPrisonerBodyConditionUIData
{
	char pad_416[8];  // 0x1A0(0x8)

}; 



// Class ConZ.PrisonerVehicleAction_RepairAttachment
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerVehicleAction_RepairAttachment : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerBodyCondition_Exhaustion
// Size: 0x170(Inherited: 0xC0) 
struct UPrisonerBodyCondition_Exhaustion : public UPrisonerBodyCondition
{
	uint8_t  _state;  // 0xC0(0x1)
	char pad_193[7];  // 0xC1(0x7)
	float _exhaustionAmount;  // 0xC8(0x4)
	float _exhaustionAmountAtRecoveryStart;  // 0xCC(0x4)
	struct FRuntimeFloatCurve _severityVsExhaustion;  // 0xD0(0x88)
	float _severityToStartMaxStaminaReduction;  // 0x158(0x4)
	float _maxStaminaReduction;  // 0x15C(0x4)
	char pad_352[16];  // 0x160(0x10)

}; 



// Class ConZ.PrisonerBodySymptom_NeedToDefecate
// Size: 0x140(Inherited: 0xB8) 
struct UPrisonerBodySymptom_NeedToDefecate : public UPrisonerBodySymptom
{
	struct FRuntimeFloatCurve _severityVsColonFullness;  // 0xB8(0x88)

}; 



// Class ConZ.PrisonerBodyConditionUIData_Exhaustion
// Size: 0x1B8(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_Exhaustion : public UPrisonerBodyConditionUIData
{
	char pad_416[24];  // 0x1A0(0x18)

}; 



// Class ConZ.PrisonerBodyConditionUIData_FoodDisgust
// Size: 0x1A0(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_FoodDisgust : public UPrisonerBodyConditionUIData
{

}; 



// Class ConZ.PrisonerBodyCondition_FootAbrasions
// Size: 0x6E8(Inherited: 0x6E8) 
struct UPrisonerBodyCondition_FootAbrasions : public UPrisonerBodyCondition_Abrasions
{

}; 



// Class ConZ.PrisonerBodyConditionUIData_ForeignSubstancePoisoning
// Size: 0x1C8(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_ForeignSubstancePoisoning : public UPrisonerBodyConditionUIData
{
	char pad_416[40];  // 0x1A0(0x28)

}; 



// Class ConZ.PrisonerBodyCondition_HandAbrasions
// Size: 0x6F0(Inherited: 0x6E8) 
struct UPrisonerBodyCondition_HandAbrasions : public UPrisonerBodyCondition_Abrasions
{
	float _vehiclePropellingAbrasivenessMultiplier;  // 0x6E8(0x4)
	char pad_1772[4];  // 0x6EC(0x4)

}; 



// Class ConZ.PrisonerBodyConditionUIData_Hyperthermia
// Size: 0x1A0(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_Hyperthermia : public UPrisonerBodyConditionUIData
{

}; 



// Class ConZ.PrisonerBodyCondition_Hyperthermia
// Size: 0x108(Inherited: 0xC0) 
struct UPrisonerBodyCondition_Hyperthermia : public UPrisonerBodyCondition
{
	float _maxSeverity;  // 0xC0(0x4)
	float _bodyTemperatureToDie;  // 0xC4(0x4)
	float _bodyTemperatureToExist;  // 0xC8(0x4)
	float _bodyTemperatureToRecover;  // 0xCC(0x4)
	char pad_208[4];  // 0xD0(0x4)
	float _bodyTemperatureSampleInterval;  // 0xD4(0x4)
	char pad_216[4];  // 0xD8(0x4)
	float _bodyTemperatureAtUntreatedStart;  // 0xDC(0x4)
	float _bodyTemperatureAtStabilizationStart;  // 0xE0(0x4)
	float _bodyTemperatureAtRecoveryStart;  // 0xE4(0x4)
	uint8_t  _state;  // 0xE8(0x1)
	char pad_233[7];  // 0xE9(0x7)
	float _severityRatio;  // 0xF0(0x4)
	float _severityRatioAtUntreatedStart;  // 0xF4(0x4)
	float _severityRatioAtRecoveryStart;  // 0xF8(0x4)
	char pad_252[4];  // 0xFC(0x4)
	float _severityRatioInterpSpeed;  // 0x100(0x4)
	char pad_260[4];  // 0x104(0x4)

}; 



// Class ConZ.PrisonerBodyCondition_Infection
// Size: 0x128(Inherited: 0xC0) 
struct UPrisonerBodyCondition_Infection : public UPrisonerBodyCondition
{
	float _maxSeverity;  // 0xC0(0x4)
	float _maxContamination;  // 0xC4(0x4)
	float _toleratedContamination;  // 0xC8(0x4)
	char pad_204[4];  // 0xCC(0x4)
	UPrisonerBodyCondition_Sepsis* _sepsisClass;  // 0xD0(0x8)
	struct UPrisonerBodyConditionCause_Sepsis* _sepsisCause;  // 0xD8(0x8)
	UNotificationDescription* _infectedNotification;  // 0xE0(0x8)
	float _infectedNotificationCooldown;  // 0xE8(0x4)
	char pad_236[16];  // 0xEC(0x10)
	float _contamination;  // 0xFC(0x4)
	float _contaminationAtRecoveryStart;  // 0x100(0x4)
	float _contaminationIncreaseRate;  // 0x104(0x4)
	char pad_264[8];  // 0x108(0x8)
	float _contaminationDecreaseRate;  // 0x110(0x4)
	char pad_276[8];  // 0x114(0x8)
	uint8_t  _state;  // 0x11C(0x1)
	char pad_285[11];  // 0x11D(0xB)

}; 



// Class ConZ.PrisonerBodyCondition_KillBoxGasPoisoning
// Size: 0xF8(Inherited: 0xC0) 
struct UPrisonerBodyCondition_KillBoxGasPoisoning : public UPrisonerBodyCondition
{
	float _maxSeverity;  // 0xC0(0x4)
	float _poisoningDuration;  // 0xC4(0x4)
	float _poisoningTriggerCooldown;  // 0xC8(0x4)
	float _poisoningTriggerTimer;  // 0xCC(0x4)
	float _recoveryDuration;  // 0xD0(0x4)
	float _damagedEffectTriggerInterval;  // 0xD4(0x4)
	float _damagedEffectDuration;  // 0xD8(0x4)
	float _damagedEffectIntensity;  // 0xDC(0x4)
	char pad_224[4];  // 0xE0(0x4)
	uint8_t  _state;  // 0xE4(0x1)
	char pad_229[7];  // 0xE5(0x7)
	float _severityRatio;  // 0xEC(0x4)
	float _severityRatioAtRecoveryStart;  // 0xF0(0x4)
	float _drunkenness;  // 0xF4(0x4)

	void Client_TriggerDamagedEffect(float Duration, float Intensity); // Function ConZ.PrisonerBodyCondition_KillBoxGasPoisoning.Client_TriggerDamagedEffect
}; 



// Class ConZ.PrisonerBodyConditionUIData_KillBoxGasPoisoning
// Size: 0x1A0(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_KillBoxGasPoisoning : public UPrisonerBodyConditionUIData
{

}; 



// Class ConZ.PrisonerBodyConditionUIData_NutrientDeficiency
// Size: 0x1A8(Inherited: 0x1A0) 
struct UPrisonerBodyConditionUIData_NutrientDeficiency : public UPrisonerBodyConditionUIData
{
	char pad_416[4];  // 0x1A0(0x4)
	uint8_t  NutrientUnit;  // 0x1A4(0x1)
	char pad_421[3];  // 0x1A5(0x3)

}; 



// Class ConZ.PrisonerBodyCondition_RadiationPresence
// Size: 0x160(Inherited: 0xC0) 
struct UPrisonerBodyCondition_RadiationPresence : public UPrisonerBodyCondition
{
	float _radiationAmount;  // 0xC0(0x4)
	float _radiationMaxAmount;  // 0xC4(0x4)
	float _radiationAmountAtRecoveryStart;  // 0xC8(0x4)
	float _baseRadiationDispersionRate;  // 0xCC(0x4)
	struct FPrisonerActionDifficultyCurve _radiationDispersionRatePerActionDifficulty;  // 0xD0(0x18)
	float _radiationDispersionRateIncreaseWhileSwimming;  // 0xE8(0x4)
	char pad_236[4];  // 0xEC(0x4)
	struct TMap<UForeignSubstance*, struct FRuntimeFloatCurve> _effectiveRadiationAmountChangePerForeignSubstancePresence;  // 0xF0(0x50)
	float _radiationAmountDecreaseViaUrination;  // 0x140(0x4)
	float _radiationIncreaseRateToInstantlyDie;  // 0x144(0x4)
	uint8_t  _state;  // 0x148(0x1)
	char pad_329[23];  // 0x149(0x17)

}; 



// Class ConZ.PrisonerBodyConditionWithCauses
// Size: 0xD0(Inherited: 0xC0) 
struct UPrisonerBodyConditionWithCauses : public UPrisonerBodyCondition
{
	char pad_192[16];  // 0xC0(0x10)

}; 



// Class ConZ.ReportingManager
// Size: 0x7D0(Inherited: 0x220) 
struct AReportingManager : public AActor
{
	char pad_544[360];  // 0x220(0x168)
	struct FMulticastInlineDelegate PrisonerWhistled;  // 0x388(0x10)
	char pad_920[1080];  // 0x398(0x438)

}; 



// Class ConZ.PrisonerBodyCondition_StomachFull
// Size: 0x138(Inherited: 0xC0) 
struct UPrisonerBodyCondition_StomachFull : public UPrisonerBodyCondition
{
	float _stomachFullnessToExist;  // 0xC0(0x4)
	float _stomachFullnessToDie;  // 0xC4(0x4)
	float _stomachFullnessToBeRecovered;  // 0xC8(0x4)
	float _stomachFullnessAtWhichToAutoCancelConsumptionOnce;  // 0xCC(0x4)
	float _stomachFullnessAtWhichToEnableAutoConsumptionCancelationAgain;  // 0xD0(0x4)
	float _minMaxStaminaModifierForFatigueSymptom;  // 0xD4(0x4)
	float _stomachFullnessAtWhichBurpingStarts;  // 0xD8(0x4)
	float _burpingInterval;  // 0xDC(0x4)
	UPrisonerBodySymptom_StomachFullness* _stomachFullnessSymptomClass;  // 0xE0(0x8)
	struct UPrisonerBodySymptomCause* _stomachFullnessSymptomCause;  // 0xE8(0x8)
	UPrisonerBodySymptom_Fatigue* _fatigueSymptomClass;  // 0xF0(0x8)
	struct UPrisonerBodySymptomCause_Fatigue* _fatigueSymptomCause;  // 0xF8(0x8)
	UPrisonerBodySymptom_Burping* _burpingSymptomClass;  // 0x100(0x8)
	struct UPrisonerBodySymptomCause_Burping* _burpingSymptomCause;  // 0x108(0x8)
	UNotificationDescription* _stomachRuptureWarningNotificationClass;  // 0x110(0x8)
	UNotificationDescription* _stomachRuptureNotificationClass;  // 0x118(0x8)
	char pad_288[24];  // 0x120(0x18)

}; 



// Class ConZ.PrisonerBodyCondition_TearGasExposure
// Size: 0x160(Inherited: 0xC0) 
struct UPrisonerBodyCondition_TearGasExposure : public UPrisonerBodyCondition
{
	struct FRuntimeFloatCurve _severityVsTime;  // 0xC0(0x88)
	float _timeSinceExposure;  // 0x148(0x4)
	float _timeAtRecoveryStart;  // 0x14C(0x4)
	char pad_336[16];  // 0x150(0x10)

}; 



// Class ConZ.PrisonerBodyCondition_TrenchFoot
// Size: 0x6F8(Inherited: 0xC0) 
struct UPrisonerBodyCondition_TrenchFoot : public UPrisonerBodyCondition_Injury
{
	struct FRuntimeFloatCurve _trenchnessIncreaseRateVsFeetWetness;  // 0xC0(0x88)
	struct FFloatInterval _trenchnessIncreaseRateMultiplierVsConstitution;  // 0x148(0x8)
	struct FRuntimeFloatCurve _trenchnessIncreaseRateMultiplierVsAirTemperature;  // 0x150(0x88)
	struct FRuntimeFloatCurve _trenchnessDecreaseRateMultiplierVsAirTemperature;  // 0x1D8(0x88)
	struct FRuntimeFloatCurve _recoveryDurationMultiplierVsAirTemperature;  // 0x260(0x88)
	float _trenchnessFallRate;  // 0x2E8(0x4)
	char pad_748[4];  // 0x2EC(0x4)
	struct FRuntimeFloatCurve _severityVsTrenchness;  // 0x2F0(0x88)
	float _trenchness;  // 0x378(0x4)
	float _trenchnessTreated;  // 0x37C(0x4)
	float _trenchnessAtRecoveryStart;  // 0x380(0x4)
	char pad_900[4];  // 0x384(0x4)
	struct FRuntimeFloatCurve _stabilizationDurationVsSeverity;  // 0x388(0x88)
	struct FRuntimeFloatCurve _recoveryDurationVsSeverity;  // 0x410(0x88)
	struct UAkAudioEvent* _painGruntAudioEvent;  // 0x498(0x8)
	struct FRuntimeFloatCurve _painGruntIntervalVsSeverity;  // 0x4A0(0x88)
	char pad_1320[8];  // 0x528(0x8)
	UPrisonerBodySymptom_Pain* _painSymptomClass;  // 0x530(0x8)
	struct UPrisonerBodySymptomCause_Pain* _painSymptomCause;  // 0x538(0x8)
	struct FRuntimeFloatCurve _painSymptomOverallIntensityVsSeverity;  // 0x540(0x88)
	struct FRuntimeFloatCurve _painSymptomLimpingIntensityVsSeverity;  // 0x5C8(0x88)
	struct FPrisonerMaxMovementPaceVsSeverity _painSymptomMaxMovementPaceVsSeverity;  // 0x650(0x10)
	struct FRuntimeFloatCurve _painSymptomMovementSpeedModifierVsSeverity;  // 0x660(0x88)
	uint8_t  _state;  // 0x6E8(0x1)
	char pad_1769[7];  // 0x6E9(0x7)
	float _timerElapsedTime;  // 0x6F0(0x4)
	float _timerDuration;  // 0x6F4(0x4)

}; 



// Class ConZ.PrisonerBodyConditionCause
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerBodyConditionCause : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.PrisonerBodySymptom_PeriodicAffect
// Size: 0xE8(Inherited: 0xB8) 
struct UPrisonerBodySymptom_PeriodicAffect : public UPrisonerBodySymptom
{
	struct FFloatInterval _affectIntervalDeviationRatio;  // 0xB8(0x8)
	struct FFloatInterval _affectDurationDeviationRatio;  // 0xC0(0x8)
	char pad_200[32];  // 0xC8(0x20)

	void Client_PendAffect(float Duration, float Intensity); // Function ConZ.PrisonerBodySymptom_PeriodicAffect.Client_PendAffect
}; 



// Class ConZ.PrisonerBodyConditionInteraction_RemoveBandages
// Size: 0x88(Inherited: 0x80) 
struct UPrisonerBodyConditionInteraction_RemoveBandages : public UPrisonerBodyConditionInteraction
{
	char pad_128[8];  // 0x80(0x8)

}; 



// Class ConZ.RemoteSensorItem
// Size: 0x950(Inherited: 0x910) 
struct ARemoteSensorItem : public AItem
{
	char pad_2320[24];  // 0x910(0x18)
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent;  // 0x928(0x8)
	int32_t _maxPairedDevices;  // 0x930(0x4)
	char pad_2356_1 : 7;  // 0x934(0x1)
	bool _hasAvailableSlots : 1;  // 0x934(0x1)
	char pad_2357[27];  // 0x935(0x1B)

	void OnResourceAmountChanged(struct UBasicGameResourceContainerComponent* containerComponent, float newAmount); // Function ConZ.RemoteSensorItem.OnResourceAmountChanged
}; 



// Class ConZ.PrisonerBodyConditionInteractionItemTag
// Size: 0x50(Inherited: 0x30) 
struct UPrisonerBodyConditionInteractionItemTag : public UBaseItemTag
{
	struct FText InteractionCaption;  // 0x30(0x18)
	uint8_t  BeginInteractionMontage;  // 0x48(0x1)
	uint8_t  EndInteractionMontage;  // 0x49(0x1)
	char pad_74[6];  // 0x4A(0x6)

}; 



// Class ConZ.PBCTIIT_ApplyBandagesOrDisinfect_Disinfect
// Size: 0xC0(Inherited: 0x50) 
struct UPBCTIIT_ApplyBandagesOrDisinfect_Disinfect : public UPrisonerBodyConditionTreatInteractionItemTag
{
	struct TArray<float> TreatmentDurationPerSeverityLevel;  // 0x50(0x10)
	struct TArray<float> TreatmentDurationPerUsePerSeverityLevel;  // 0x60(0x10)
	struct FPBCTIIT_ApplyBandagesOrDisinfect_Disinfect_PerSkillData SkillData[5];  // 0x70(0x50)

}; 



// Class ConZ.PBCIQR_ApplyBandagesOrDisinfect_Disinfect
// Size: 0xA8(Inherited: 0xA0) 
struct UPBCIQR_ApplyBandagesOrDisinfect_Disinfect : public UPrisonerBodyConditionInteractionQueryResults
{
	char pad_160[8];  // 0xA0(0x8)

}; 



// Class ConZ.PrisonerBodyConditionTreatInteraction
// Size: 0x80(Inherited: 0x80) 
struct UPrisonerBodyConditionTreatInteraction : public UPrisonerBodyConditionInteraction
{

}; 



// Class ConZ.PrisonerBodyEffect_Coma
// Size: 0x40(Inherited: 0x40) 
struct UPrisonerBodyEffect_Coma : public UPrisonerBodyEffect
{

}; 



// Class ConZ.ExplosiveAmmunitionArrowSpawningParams
// Size: 0x40(Inherited: 0x38) 
struct UExplosiveAmmunitionArrowSpawningParams : public UAmmunitionArrowSpawningParams
{
	char EPhysicalSurface HitPhysicalSurface;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)

}; 



// Class ConZ.PrisonerBodyEffect_Limping
// Size: 0x48(Inherited: 0x40) 
struct UPrisonerBodyEffect_Limping : public UPrisonerBodyEffect
{
	float _duration;  // 0x40(0x4)
	float _elapsedTime;  // 0x44(0x4)

}; 



// Class ConZ.PrisonerBodyEffect_NotificationCooldown
// Size: 0x50(Inherited: 0x40) 
struct UPrisonerBodyEffect_NotificationCooldown : public UPrisonerBodyEffect
{
	UNotificationDescription* _notificationClass;  // 0x40(0x8)
	char pad_72[8];  // 0x48(0x8)

}; 



// Class ConZ.PrisonerBodyMuscleGroupToInfectionClassMappings
// Size: 0xF8(Inherited: 0x30) 
struct UPrisonerBodyMuscleGroupToInfectionClassMappings : public UDataAsset
{
	UPrisonerBodyCondition_Infection* _infectionClasses[19];  // 0x30(0xC8)

}; 



// Class ConZ.SpawnDecalWhenParticleCollides
// Size: 0x38(Inherited: 0x28) 
struct USpawnDecalWhenParticleCollides : public UParticleModuleEventSendToGame
{
	struct TArray<struct FParticleCollisionDecalData> Decals;  // 0x28(0x10)

}; 



// Class ConZ.PrisonerBodyInfectionStatics
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerBodyInfectionStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.PrisonerVehicleAction_Mount
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerVehicleAction_Mount : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerBodySimulationData
// Size: 0x6F8(Inherited: 0x30) 
struct UPrisonerBodySimulationData : public UDataAsset
{
	struct FRuntimeFloatCurve MaxStrengthGainRateVsStrength;  // 0x30(0x88)
	float StrengthLossPerMissingProtein;  // 0xB8(0x4)
	float MaxConstitutionGainRate;  // 0xBC(0x4)
	float MaxConstitutionLossRate;  // 0xC0(0x4)
	float DexterityChangePerStorageFatEnergy;  // 0xC4(0x4)
	float MaxBleedingSeverity;  // 0xC8(0x4)
	struct FFloatInterval BleedOutDurationVsBleedingSeverity;  // 0xCC(0x8)
	struct FFloatInterval BleedOutDurationMultiplierVsConstitution;  // 0xD4(0x8)
	char pad_220[4];  // 0xDC(0x4)
	struct FRuntimeFloatCurve DamageRatioVsBloodLossRatio;  // 0xE0(0x88)
	struct FFloatInterval HealingSpeedMultiplierVsConstitution;  // 0x168(0x8)
	struct FRuntimeFloatCurve HealingSpeedMultiplierVsActionDifficultyRatio;  // 0x170(0x88)
	struct FFloatInterval ImmuneSystemEfficiencyMultiplierVsConstitution;  // 0x1F8(0x8)
	struct FRuntimeFloatCurve ImmuneSystemEfficiencyMultiplierVsActionDifficultyRatio;  // 0x200(0x88)
	struct FPrisonerActionDifficultyCurve StaminaChangeRateVsActionDifficulty;  // 0x288(0x18)
	float ExhaustionIncrement;  // 0x2A0(0x4)
	float ExhaustionFallRate;  // 0x2A4(0x4)
	float ExhaustionFallRateMultiplierWhenLyingOnFurniture;  // 0x2A8(0x4)
	float ExhaustionBonusModifierPerConsumedItem;  // 0x2AC(0x4)
	float ExhaustionBonusMaxModifier;  // 0x2B0(0x4)
	float MaxStaminaReductionIncreaseMultiplier;  // 0x2B4(0x4)
	struct FPrisonerActionDifficultyCurve HeartRateRatioVsActionDifficulty;  // 0x2B8(0x18)
	float HeartRateRaiseInterpSpeed;  // 0x2D0(0x4)
	float HeartRateFallRate;  // 0x2D4(0x4)
	float BreathingRateInterpSpeed;  // 0x2D8(0x4)
	struct FPrisonerActionDifficultyCurve OxygenSaturationRaiseRateVsActionDifficulty;  // 0x2DC(0x18)
	struct FPrisonerActionDifficultyCurve OxygenSaturationFallRateVsActionDifficulty;  // 0x2F4(0x18)
	float PreferredEnvironmentTemperatureWhenNaked;  // 0x30C(0x4)
	struct FRuntimeFloatCurve PhoenixTearsDiscardRateVsAmount;  // 0x310(0x88)
	struct FRuntimeFloatCurve HealingSpeedMultiplierVsPhoenixTearsAmount;  // 0x398(0x88)
	struct FRuntimeFloatCurve ImmuneSystemEfficiencyMultiplierVsPhoenixTearsAmount;  // 0x420(0x88)
	UMetabolism* MetabolismClass;  // 0x4A8(0x8)
	float MetabolismUpdateInterval;  // 0x4B0(0x4)
	char pad_1204[4];  // 0x4B4(0x4)
	struct FRuntimeFloatCurve CaloriesConsumptionMultiplierVsHeartRateRatio;  // 0x4B8(0x88)
	struct FRuntimeFloatCurve WaterConsumptionMultiplierVsHeartRateRatio;  // 0x540(0x88)
	struct FFloatInterval NutrientsConsumptionFactorVsConstitutionRatio;  // 0x5C8(0x8)
	float StomachFullnessToBeAbleToVomit;  // 0x5D0(0x4)
	float BladderFullnessToBeAbleToUrinate;  // 0x5D4(0x4)
	float ColonFullnessToBeAbleToDefecate;  // 0x5D8(0x4)
	float ColonWaterContentRatioToHaveDiarrhea;  // 0x5DC(0x4)
	struct FFloatInterval ConsumptionDurationMultiplierVsEatingSpeed;  // 0x5E0(0x8)
	struct TMap<struct FGameplayTag, float> ConsumptionDurations;  // 0x5E8(0x50)
	struct FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges DigestionHandlersPerConsumableHealthRatios;  // 0x638(0x10)
	struct FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges DigestionHandlersPerConsumableFatsContentRatios;  // 0x648(0x10)
	struct TMap<uint8_t , struct FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges> DigestionHandlersPerConsumableNutrientContentRatios;  // 0x658(0x50)
	struct FPrisonerBodySimulationData_Effects Effects;  // 0x6A8(0x50)

}; 



// Class ConZ.PrisonerBodySimulationSave
// Size: 0xC8(Inherited: 0x28) 
struct UPrisonerBodySimulationSave : public UObject
{
	char pad_40_1 : 7;  // 0x28(0x1)
	bool IsDead : 1;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)
	double BaseStrength;  // 0x30(0x8)
	double BaseConstitution;  // 0x38(0x8)
	double BaseDexterity;  // 0x40(0x8)
	double BaseIntelligence;  // 0x48(0x8)
	float InitialAge;  // 0x50(0x4)
	char pad_84[4];  // 0x54(0x4)
	double LifeTimeSinceInitialization;  // 0x58(0x8)
	double LifeTimeSinceSpawn;  // 0x60(0x8)
	int64_t TimeOfDeath;  // 0x68(0x8)
	int64_t TimeOfRevive;  // 0x70(0x8)
	int64_t TimeOfComa;  // 0x78(0x8)
	int64_t TimeOfComaWakeUp;  // 0x80(0x8)
	float Stamina;  // 0x88(0x4)
	float AccumulatedFatigue;  // 0x8C(0x4)
	float HeartRate;  // 0x90(0x4)
	float BreathingRate;  // 0x94(0x4)
	float OxygenSaturation;  // 0x98(0x4)
	float BodyTemperature;  // 0x9C(0x4)
	float PhoenixTearsAmount;  // 0xA0(0x4)
	char pad_164[4];  // 0xA4(0x4)
	struct TArray<struct FPrisonerBodyEffectSave> BodyEffects;  // 0xA8(0x10)
	struct TArray<char> Metabolism;  // 0xB8(0x10)

}; 



// Class ConZ.PrisonerBodySimulationStatics
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerBodySimulationStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.PrisonerBodySimulationUIDataImpl
// Size: 0x110(Inherited: 0x58) 
struct UPrisonerBodySimulationUIDataImpl : public UPrisonerBodySimulationUIData
{
	char pad_88[160];  // 0x58(0xA0)
	struct TArray<struct UPrisonerBodyEffectUIData*> BodyEffectsUIData;  // 0xF8(0x10)
	struct UPrisonerMetabolismUIData* MetabolismUIData;  // 0x108(0x8)

}; 



// Class ConZ.PrisonerBodySimulationUIStatics
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerBodySimulationUIStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.PrisonerBodySymptomUIData
// Size: 0xA8(Inherited: 0x90) 
struct UPrisonerBodySymptomUIData : public UPrisonerBodyConditionOrSymptomUIData
{
	char pad_144_1 : 7;  // 0x90(0x1)
	bool _shouldCreateTooltipElementForSeverity : 1;  // 0x90(0x1)
	char pad_145[7];  // 0x91(0x7)
	struct TArray<struct UPrisonerBodySymptomCauseUIData*> _causes;  // 0x98(0x10)

}; 



// Class ConZ.PrisonerBodySymptomUIData_Bleeding
// Size: 0xB0(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_Bleeding : public UPrisonerBodySymptomUIData
{
	char pad_168[8];  // 0xA8(0x8)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_BloodshotEyes
// Size: 0xD0(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_BloodshotEyes : public UPrisonerBodyConditionOrSymptomSideEffect
{
	UPrisonerBodySymptom_BloodshotEyes* _symptomClass;  // 0x30(0x8)
	struct UPrisonerBodySymptomCause_BloodshotEyes* _symptomCause;  // 0x38(0x8)
	struct FRuntimeFloatCurve _intensityVsSeverity;  // 0x40(0x88)
	char pad_200[8];  // 0xC8(0x8)

}; 



// Class ConZ.PrisonerBodySymptom_BlurredVision
// Size: 0xD0(Inherited: 0xB8) 
struct UPrisonerBodySymptom_BlurredVision : public UPrisonerBodySymptom
{
	char pad_184[12];  // 0xB8(0xC)
	float _repOffset;  // 0xC4(0x4)
	float _repFalloff;  // 0xC8(0x4)
	char pad_204[4];  // 0xCC(0x4)

}; 



// Class ConZ.PrisonerFirstPersonSubviewComponent
// Size: 0x8C0(Inherited: 0x7D0) 
struct UPrisonerFirstPersonSubviewComponent : public UCameraComponent
{
	char pad_2000[8];  // 0x7D0(0x8)
	uint8_t  SubviewID;  // 0x7D8(0x1)
	char pad_2009[3];  // 0x7D9(0x3)
	float WeaponFOV;  // 0x7DC(0x4)
	struct FVector WeaponFoveationOffset;  // 0x7E0(0xC)
	float MinViewPitch;  // 0x7EC(0x4)
	float MaxViewPitch;  // 0x7F0(0x4)
	float MinViewYaw;  // 0x7F4(0x4)
	float MaxViewYaw;  // 0x7F8(0x4)
	char pad_2044[4];  // 0x7FC(0x4)
	struct UCurveLinearColor* MinMaxViewPitchByYawAndSpeed;  // 0x800(0x8)
	struct UCurveVector* LocalSpaceOffsetByYaw;  // 0x808(0x8)
	struct UCurveVector* LocalSpaceOffsetByPitch;  // 0x810(0x8)
	struct UCurveVector* ActorSpaceOffsetByYaw;  // 0x818(0x8)
	struct UCurveVector* ActorSpaceOffsetByPitch;  // 0x820(0x8)
	struct FName LockRotationToSocketAnimationCurveName;  // 0x828(0x8)
	struct FName LockRotationToSocketSocketName;  // 0x830(0x8)
	float ProbeSize;  // 0x838(0x4)
	char ECollisionChannel ProbeChannel;  // 0x83C(0x1)
	char pad_2109_1 : 7;  // 0x83D(0x1)
	bool DoCollisionTest : 1;  // 0x83D(0x1)
	char pad_2110[2];  // 0x83E(0x2)
	struct FName AnimationBobbingTXCurveName;  // 0x840(0x8)
	struct FName AnimationBobbingTYCurveName;  // 0x848(0x8)
	struct FName AnimationBobbingTZCurveName;  // 0x850(0x8)
	struct FName AnimationBobbingRYCurveName;  // 0x858(0x8)
	struct FName AnimationBobbingRPCurveName;  // 0x860(0x8)
	struct FName AnimationBobbingRRCurveName;  // 0x868(0x8)
	float AnimationBobbingTScale;  // 0x870(0x4)
	float AnimationBobbingRScale;  // 0x874(0x4)
	struct FName AnimationCameraOffsetTXCurveName;  // 0x878(0x8)
	struct FName AnimationCameraOffsetTYCurveName;  // 0x880(0x8)
	struct FName AnimationCameraOffsetTZCurveName;  // 0x888(0x8)
	struct FName AnimationCameraOffsetRYCurveName;  // 0x890(0x8)
	struct FName AnimationCameraOffsetRPCurveName;  // 0x898(0x8)
	struct FName AnimationCameraOffsetRRCurveName;  // 0x8A0(0x8)
	float AnimationCameraOffsetTScale;  // 0x8A8(0x4)
	float AnimationCameraOffsetRScale;  // 0x8AC(0x4)
	float BlendInDuration;  // 0x8B0(0x4)
	float BlendOutDuration;  // 0x8B4(0x4)
	float _minFactorForPrisonerHiding;  // 0x8B8(0x4)
	char pad_2236[4];  // 0x8BC(0x4)

}; 



// Class ConZ.PrisonerBodySymptomUIData_BlurredVision
// Size: 0xA8(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_BlurredVision : public UPrisonerBodySymptomUIData
{

}; 



// Class ConZ.VehicleServiceItemComponent
// Size: 0xC8(Inherited: 0xB0) 
struct UVehicleServiceItemComponent : public UActorComponent
{
	APortableVehicleServiceStation* _serviceStationClass;  // 0xB0(0x8)
	struct TArray<struct FGameplayTag> _supportedServiceTags;  // 0xB8(0x10)

}; 



// Class ConZ.PrisonerBodySymptom_BoostOfEnergy
// Size: 0x148(Inherited: 0xB8) 
struct UPrisonerBodySymptom_BoostOfEnergy : public UPrisonerBodySymptom
{
	struct FRuntimeFloatCurve _severityVsEnergyBoosterSubstanceAmountRatio;  // 0xB8(0x88)
	UForeignSubstance* _energyBoosterSubstanceClass;  // 0x140(0x8)

}; 



// Class ConZ.PrisonerBodySymptomUIData_BreathingObstructed
// Size: 0xA8(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_BreathingObstructed : public UPrisonerBodySymptomUIData
{

}; 



// Class ConZ.PrisonerBodySymptomCause_PeriodicSound
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_PeriodicSound : public UPrisonerBodySymptomCause
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.PrisonerBodySymptomUIData_FeelingCold
// Size: 0xA8(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_FeelingCold : public UPrisonerBodySymptomUIData
{

}; 



// Class ConZ.PrisonerPhotoModeAnimInstance
// Size: 0x360(Inherited: 0x2C0) 
struct UPrisonerPhotoModeAnimInstance : public UAnimInstance
{
	float PoseBlendTime;  // 0x2B8(0x4)
	struct TArray<struct UAnimSequence*> _unarmedPoses;  // 0x2C0(0x10)
	struct TArray<struct UAnimSequence*> _riflePoses;  // 0x2D0(0x10)
	struct TArray<struct UAnimSequence*> _handgunPoses;  // 0x2E0(0x10)
	struct TArray<struct UAnimSequence*> _meleePoses;  // 0x2F0(0x10)
	struct TArray<struct UAnimSequence*> _lowerBodyPoses;  // 0x300(0x10)
	struct TArray<struct UAnimSequence*> _facialExpressions;  // 0x310(0x10)
	uint8_t  _poseGroup;  // 0x320(0x1)
	float _spineCurvature;  // 0x324(0x4)
	float _spineRotation;  // 0x328(0x4)
	int32_t _upperBodyPoseIndex;  // 0x32C(0x4)
	int32_t _lowerBodyPoseIndex;  // 0x330(0x4)
	int32_t _lastUpperBodyPoseIndex;  // 0x334(0x4)
	int32_t _lastLowerBodyPoseIndex;  // 0x338(0x4)
	int32_t _facialExpressionIndex;  // 0x33C(0x4)
	int32_t _lastFacialExpressionIndex;  // 0x340(0x4)
	char pad_837[3];  // 0x345(0x3)
	struct UAnimSequenceBase* _correctionPose;  // 0x348(0x8)
	float _upperBodyPoseBlendAlpha;  // 0x350(0x4)
	float _lowerBodyPoseBlendAlpha;  // 0x354(0x4)
	float _facialExpressionBlendAlpha;  // 0x358(0x4)
	char pad_860_1 : 7;  // 0x35C(0x1)
	bool _isFemale : 1;  // 0x35C(0x1)
	char pad_861[3];  // 0x35D(0x3)

}; 



// Class ConZ.PrisonerBodySymptom_PeriodicSound
// Size: 0xD8(Inherited: 0xB8) 
struct UPrisonerBodySymptom_PeriodicSound : public UPrisonerBodySymptom
{
	struct UAkAudioEvent* _sound;  // 0xB8(0x8)
	struct FFloatInterval _soundInitialDelay;  // 0xC0(0x8)
	struct FFloatInterval _soundIntervalDeviationRatio;  // 0xC8(0x8)
	char pad_208[8];  // 0xD0(0x8)

	void NetMulticast_PlaySound(); // Function ConZ.PrisonerBodySymptom_PeriodicSound.NetMulticast_PlaySound
}; 



// Class ConZ.PrisonerBodySymptomCause_PeriodicAffect
// Size: 0x40(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_PeriodicAffect : public UPrisonerBodySymptomCause
{
	char pad_48[16];  // 0x30(0x10)

}; 



// Class ConZ.PrisonerHallucinationIllusion_SeeOtherPlayersExtremelyFatOrSkinny
// Size: 0x270(Inherited: 0x220) 
struct APrisonerHallucinationIllusion_SeeOtherPlayersExtremelyFatOrSkinny : public APrisonerHallucinationIllusion
{
	char pad_544[80];  // 0x220(0x50)

}; 



// Class ConZ.PrisonerBodySymptom_Diarrhea
// Size: 0xE8(Inherited: 0xE8) 
struct UPrisonerBodySymptom_Diarrhea : public UPrisonerBodySymptom_PeriodicAffect
{

}; 



// Class ConZ.PrisonerBodySymptomCause_Disorientation
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_Disorientation : public UPrisonerBodySymptomCause
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.PrisonerBodySymptomCause_Dizziness
// Size: 0x40(Inherited: 0x40) 
struct UPrisonerBodySymptomCause_Dizziness : public UPrisonerBodySymptomCause_PeriodicAffect
{

}; 



// Class ConZ.PrisonerBodySymptom_Dizziness
// Size: 0x178(Inherited: 0xE8) 
struct UPrisonerBodySymptom_Dizziness : public UPrisonerBodySymptom_PeriodicAffect
{
	struct FRuntimeFloatCurve _blackoutIntensityVsElapsedTime;  // 0xE8(0x88)
	float _unconsciousnessDelay;  // 0x170(0x4)
	char pad_372[4];  // 0x174(0x4)

}; 



// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_DoubleVision
// Size: 0xD0(Inherited: 0x30) 
struct UPrisonerBodyConditionOrSymptomSideEffect_DoubleVision : public UPrisonerBodyConditionOrSymptomSideEffect
{
	UPrisonerBodySymptom_DoubleVision* _symptomClass;  // 0x30(0x8)
	struct UPrisonerBodySymptomCause_DoubleVision* _symptomCause;  // 0x38(0x8)
	struct FRuntimeFloatCurve _intensityVsSeverity;  // 0x40(0x88)
	char pad_200[8];  // 0xC8(0x8)

}; 



// Class ConZ.PrisonerBodySymptom_EyePressure
// Size: 0xC0(Inherited: 0xB8) 
struct UPrisonerBodySymptom_EyePressure : public UPrisonerBodySymptom
{
	float _maxSeverity;  // 0xB8(0x4)
	char pad_188[4];  // 0xBC(0x4)

}; 



// Class ConZ.PrisonerBodySymptom_Farting
// Size: 0xD8(Inherited: 0xD8) 
struct UPrisonerBodySymptom_Farting : public UPrisonerBodySymptom_PeriodicSound
{

}; 



// Class ConZ.PrisonerBodySymptomUIData_Fatigue
// Size: 0xB0(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_Fatigue : public UPrisonerBodySymptomUIData
{
	char pad_168[8];  // 0xA8(0x8)

}; 



// Class ConZ.PrisonerBodySymptomCauseUIData
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerBodySymptomCauseUIData : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.VehicleAttachment_EngineBlock
// Size: 0x490(Inherited: 0x310) 
struct UVehicleAttachment_EngineBlock : public UVehicleAttachment
{
	struct FVehicleAttachmentEngineBlockSetup EngineSetup;  // 0x310(0x110)
	char pad_1056[16];  // 0x420(0x10)
	struct FVehicleAttachmentEngineBlockSimulationData _simulationData;  // 0x430(0x2C)
	char pad_1116[4];  // 0x45C(0x4)
	struct TSoftClassPtr<UObject> _tradeableClass;  // 0x460(0x28)
	uint8_t  _repEngineBlockState;  // 0x488(0x1)
	char pad_1161[7];  // 0x489(0x7)

	void OnRep_EngineBlockState(); // Function ConZ.VehicleAttachment_EngineBlock.OnRep_EngineBlockState
}; 



// Class ConZ.PrisonerBodySymptom_FeelingHot
// Size: 0xC0(Inherited: 0xB8) 
struct UPrisonerBodySymptom_FeelingHot : public UPrisonerBodySymptom
{
	float _maxSeverity;  // 0xB8(0x4)
	float _temperatureDeltaAtMaxSeverity;  // 0xBC(0x4)

}; 



// Class ConZ.RangedResourceProviderEntityComponentContinousAmountSave
// Size: 0x60(Inherited: 0x60) 
struct URangedResourceProviderEntityComponentContinousAmountSave : public URangedResourceProviderEntityComponentSave
{

}; 



// Class ConZ.PrisonerBodySymptomCause_Hallucinations
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_Hallucinations : public UPrisonerBodySymptomCause
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.PrisonerHallucinationEpisode
// Size: 0x110(Inherited: 0x28) 
struct UPrisonerHallucinationEpisode : public UObject
{
	struct UAkAudioEvent* _begunAudioEvent;  // 0x28(0x8)
	struct UAkAudioEvent* _endedAudioEvent;  // 0x30(0x8)
	struct FRuntimeFloatCurve _visualEffectIntensityVsTime;  // 0x38(0x88)
	float _illusionsPreSpawnEffectsDelay;  // 0xC0(0x4)
	char pad_196[4];  // 0xC4(0x4)
	struct UAkAudioEvent* _illusionsPreSpawnAudioEvent;  // 0xC8(0x8)
	float _spawnIllusionsDelay;  // 0xD0(0x4)
	char pad_212[44];  // 0xD4(0x2C)
	struct TArray<UObject*> _loadedIllusionClasses;  // 0x100(0x10)

}; 



// Class ConZ.ThieverySkill
// Size: 0xD0(Inherited: 0xB0) 
struct UThieverySkill : public UDexteritySkill
{
	struct UCurveFloat* _lockpickingDurationModifierCurve;  // 0xB0(0x8)
	struct UCurveFloat* _lockpickingStartAngleModifierCurve;  // 0xB8(0x8)
	struct UCurveFloat* _lockpickingAngleModifierCurve;  // 0xC0(0x8)
	struct UCurveFloat* _lockpickingDurabilityModifierCurve;  // 0xC8(0x8)

}; 



// Class ConZ.PrisonerBodySymptom_Nausea
// Size: 0xC0(Inherited: 0xB8) 
struct UPrisonerBodySymptom_Nausea : public UPrisonerBodySymptom
{
	float _maxSeverity;  // 0xB8(0x4)
	char pad_188[4];  // 0xBC(0x4)

}; 



// Class ConZ.PrisonerBodySymptomUIData_Nausea
// Size: 0xB0(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_Nausea : public UPrisonerBodySymptomUIData
{
	char pad_168[8];  // 0xA8(0x8)

}; 



// Class ConZ.PrisonerBodySymptom_NeedToUrinate
// Size: 0x140(Inherited: 0xB8) 
struct UPrisonerBodySymptom_NeedToUrinate : public UPrisonerBodySymptom
{
	struct FRuntimeFloatCurve _severityVsBladderFullness;  // 0xB8(0x88)

}; 



// Class ConZ.PrisonerBodySymptom_Pain
// Size: 0xC8(Inherited: 0xB8) 
struct UPrisonerBodySymptom_Pain : public UPrisonerBodySymptom
{
	float _maxSeverity;  // 0xB8(0x4)
	struct FFloatInterval _painSuppressorsRatioForPainToBeSuppressedVsConstitution;  // 0xBC(0x8)
	char pad_196[4];  // 0xC4(0x4)

}; 



// Class ConZ.PrisonerBodySymptomCause_PhoenixTearsPresence
// Size: 0x30(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_PhoenixTearsPresence : public UPrisonerBodySymptomCause
{

}; 



// Class ConZ.PrisonerBodySymptomUIData_StomachFullness
// Size: 0xB0(Inherited: 0xA8) 
struct UPrisonerBodySymptomUIData_StomachFullness : public UPrisonerBodySymptomUIData
{
	char pad_168[8];  // 0xA8(0x8)

}; 



// Class ConZ.PrisonerBodySymptom_StomachGrowling
// Size: 0xD8(Inherited: 0xD8) 
struct UPrisonerBodySymptom_StomachGrowling : public UPrisonerBodySymptom_PeriodicSound
{

}; 



// Class ConZ.PrisonerBodySymptom_Unconsciousness
// Size: 0xB8(Inherited: 0xB8) 
struct UPrisonerBodySymptom_Unconsciousness : public UPrisonerBodySymptom
{

}; 



// Class ConZ.PrisonerBodySymptomCause_Weakness
// Size: 0x40(Inherited: 0x30) 
struct UPrisonerBodySymptomCause_Weakness : public UPrisonerBodySymptomCause
{
	char pad_48[16];  // 0x30(0x10)

}; 



// Class ConZ.PrisonerBodySymptom_Weakness
// Size: 0xC0(Inherited: 0xB8) 
struct UPrisonerBodySymptom_Weakness : public UPrisonerBodySymptom
{
	float _maxSeverity;  // 0xB8(0x4)
	float _maxSeverityPerformanceScoreModifier;  // 0xBC(0x4)

}; 



// Class ConZ.PrisonerBodySymptomNotifier
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerBodySymptomNotifier : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.BasicPrisonerBodySymptomNotifier
// Size: 0x60(Inherited: 0x30) 
struct UBasicPrisonerBodySymptomNotifier : public UPrisonerBodySymptomNotifier
{
	struct FFloatInterval _triggerDelay;  // 0x30(0x8)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool _shouldDisplayNotificationOnChangeForWorse : 1;  // 0x38(0x1)
	char pad_57_1 : 7;  // 0x39(0x1)
	bool _shouldResetNotificationTimerOnSeverityChange : 1;  // 0x39(0x1)
	char pad_58[6];  // 0x3A(0x6)
	struct TArray<struct FBasicPrisonerBodySymptomNotificationParameters> _notificationParameters;  // 0x40(0x10)
	char pad_80[16];  // 0x50(0x10)

}; 



// Class ConZ.PrisonerConsumableUserData
// Size: 0x48(Inherited: 0x28) 
struct UPrisonerConsumableUserData : public UConsumableUserData
{
	uint8_t  ConsumptionMethod;  // 0x28(0x1)
	char pad_41[7];  // 0x29(0x7)
	AItem* ItemClass;  // 0x30(0x8)
	UGameResourceType* ResourceTypeClass;  // 0x38(0x8)
	float RadiationAmount;  // 0x40(0x4)
	char pad_68[4];  // 0x44(0x4)

}; 



// Class ConZ.PrisonerDebugUI_SkillItem
// Size: 0x38(Inherited: 0x28) 
struct UPrisonerDebugUI_SkillItem : public UObject
{
	char pad_40[16];  // 0x28(0x10)

}; 



// Class ConZ.PrisonerDebugUI_BodyConditionItem
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerDebugUI_BodyConditionItem : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.PrisonerDebugUI_BodyStateItem
// Size: 0x38(Inherited: 0x30) 
struct UPrisonerDebugUI_BodyStateItem : public UPrisonerDebugUI_BodyConditionItem
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.PrisonerDebugUI_MainWidget
// Size: 0x2F0(Inherited: 0x260) 
struct UPrisonerDebugUI_MainWidget : public UUserWidget
{
	struct UComboBoxString* _prisonersComboBox;  // 0x260(0x8)
	struct UTextBlock* _lifeTimeTextBlock;  // 0x268(0x8)
	struct UTextBlock* _strengthTextBlock;  // 0x270(0x8)
	struct UTextBlock* _constitutionTextBlock;  // 0x278(0x8)
	struct UTextBlock* _dexterityTextBlock;  // 0x280(0x8)
	struct UTextBlock* _intelligenceTextBlock;  // 0x288(0x8)
	struct UTextBlock* _healthTextBlock;  // 0x290(0x8)
	struct UTextBlock* _bodyTemperatureTextBlock;  // 0x298(0x8)
	struct UTextBlock* _apparentTemperatureTextBlock;  // 0x2A0(0x8)
	struct UTextBlock* _clothesTemperatureTextBlock;  // 0x2A8(0x8)
	struct UListView* _skillsListView;  // 0x2B0(0x8)
	struct UListView* _bodyConditionsListView;  // 0x2B8(0x8)
	char pad_704[8];  // 0x2C0(0x8)
	struct UPrisonerUIData* _data;  // 0x2C8(0x8)
	struct UPrisonerUITooltipCache* _tooltipCache;  // 0x2D0(0x8)
	char pad_728[4];  // 0x2D8(0x4)
	float _dataRequestTimerInterval;  // 0x2DC(0x4)
	char pad_736[4];  // 0x2E0(0x4)
	float _dataApplyTimerInterval;  // 0x2E4(0x4)
	struct UTextBlock* _prisonerBodyEffects;  // 0x2E8(0x8)

	void PrisonersComboBox_SelectionChanged(struct FString SelectedItem, char ESelectInfo SelectionType); // Function ConZ.PrisonerDebugUI_MainWidget.PrisonersComboBox_SelectionChanged
}; 



// Class ConZ.PrisonerMetabolismUIData
// Size: 0x100(Inherited: 0x28) 
struct UPrisonerMetabolismUIData : public UObject
{
	char pad_40[216];  // 0x28(0xD8)

}; 



// Class ConZ.PrisonerEntitySetup
// Size: 0x80(Inherited: 0x80) 
struct UPrisonerEntitySetup : public UEntitySetup
{

}; 



// Class ConZ.PrisonerExcretionUserData
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerExcretionUserData : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.PrisonerViewComponent
// Size: 0xD0(Inherited: 0xB0) 
struct UPrisonerViewComponent : public UActorComponent
{
	float DefaultSubviewBlendDuration;  // 0xB0(0x4)
	char pad_180[28];  // 0xB4(0x1C)

}; 



// Class ConZ.PrisonerFirstPersonViewComponent
// Size: 0x200(Inherited: 0xD0) 
struct UPrisonerFirstPersonViewComponent : public UPrisonerViewComponent
{
	struct TArray<uint8_t > SubviewBlendingPriorities;  // 0xD0(0x10)
	struct TArray<struct FPrisonerFirstPersonSubviewBlendOverride> SubviewBlendOverrides;  // 0xE0(0x10)
	char pad_240[272];  // 0xF0(0x110)

}; 



// Class ConZ.PrisonerForeignSubstance
// Size: 0x140(Inherited: 0xA8) 
struct UPrisonerForeignSubstance : public UForeignSubstance
{
	char pad_168_1 : 7;  // 0xA8(0x1)
	bool _shouldConstitutionAffectAbsorptionCapacity : 1;  // 0xA8(0x1)
	char pad_169[7];  // 0xA9(0x7)
	struct FRuntimeFloatCurve _absorptionCapacityModifierVsConstitutionRatio;  // 0xB0(0x88)
	char pad_312_1 : 7;  // 0x138(0x1)
	bool _shouldBeDiscardedWithPhoenixTears : 1;  // 0x138(0x1)
	char pad_313[7];  // 0x139(0x7)

}; 



// Class ConZ.PrisonerForeignSubstanceStatics
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerForeignSubstanceStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.PrisonerHallucinationIllusion
// Size: 0x220(Inherited: 0x220) 
struct APrisonerHallucinationIllusion : public AActor
{

}; 



// Class ConZ.PrisonerHallucinationIllusion_SpawnMiniatureZombies
// Size: 0x288(Inherited: 0x220) 
struct APrisonerHallucinationIllusion_SpawnMiniatureZombies : public APrisonerHallucinationIllusion
{
	struct TArray<AZombie2*> _zombieClasses;  // 0x220(0x10)
	AZombieAIController2* _aiControllerClass;  // 0x230(0x8)
	int32_t _zombieGroupSize;  // 0x238(0x4)
	int32_t _maxZombiesToSpawnPerTick;  // 0x23C(0x4)
	int32_t _maxZombiesToDestroyPerTick;  // 0x240(0x4)
	struct FFloatInterval _zombieGroupSpawnInterval;  // 0x244(0x8)
	struct FFloatInterval _zombieSpawnDistance;  // 0x24C(0x8)
	float _maxZombieDistance;  // 0x254(0x4)
	float _maxTimeWithoutZombieLineOfSight;  // 0x258(0x4)
	float _zombieSoundAttenuationScalingFactor;  // 0x25C(0x4)
	char pad_608[24];  // 0x260(0x18)
	struct TArray<struct AController*> _zombieControllers;  // 0x278(0x10)

}; 



// Class ConZ.PrisonerSpawnEquipment
// Size: 0xA8(Inherited: 0x30) 
struct UPrisonerSpawnEquipment : public UDataAsset
{
	struct FGameplayTagQuery Condition;  // 0x30(0x48)
	struct TSoftClassPtr<UObject> ItemClass;  // 0x78(0x28)
	uint8_t  EquipType;  // 0xA0(0x1)
	char pad_161[7];  // 0xA1(0x7)

}; 



// Class ConZ.PrisonerMeshManager
// Size: 0x810(Inherited: 0x230) 
struct UPrisonerMeshManager : public UCharacterMeshManager
{
	char pad_560[576];  // 0x230(0x240)
	struct FGameplayTagContainer _bodyPartVsCharacterMeshSlotMapping[c];  // 0x470(0x180)
	struct FGameplayTagContainer _wettablePartVsCharacterMeshSlotMapping[4];  // 0x5F0(0x80)
	struct FGameplayTagContainer _clothesPartVsCharacterMeshSlotMapping[b];  // 0x670(0x160)
	UCharacterMesh* _characterBodyClass;  // 0x7D0(0x8)
	UCharacterMesh* _characterHairClass;  // 0x7D8(0x8)
	UCharacterMesh* _characterFacialHairClass;  // 0x7E0(0x8)
	struct TArray<UCharacterMesh*> _classesIgnoringFPVHiding;  // 0x7E8(0x10)
	struct FGameplayTag _highHeelsTag;  // 0x7F8(0x8)
	char pad_2048[16];  // 0x800(0x10)

}; 



// Class ConZ.PrisonerMovementComponent
// Size: 0x13E0(Inherited: 0xC10) 
struct UPrisonerMovementComponent : public UConZCharacterMovementComponent
{
	float CapsuleHalfHeightWhenCrouched;  // 0xC08(0x4)
	float CapsuleHalfHeightWhenProne;  // 0xC0C(0x4)
	float CapsuleHalfHeightWhenSwimming;  // 0xC10(0x4)
	char pad_3100_1 : 7;  // 0xC1C(0x1)
	bool UseCustomRotationRate : 1;  // 0xC14(0x1)
	char pad_3101_1 : 7;  // 0xC1D(0x1)
	bool RequestedPathMovesForwardOnly : 1;  // 0xC15(0x1)
	float RotationInterpolationSpeed;  // 0xC18(0x4)
	struct UCurveFloat* MaxRotationRateCurve;  // 0xC20(0x8)
	float RotationRateMultiplierWhenStanding;  // 0xC28(0x4)
	float RotationRateMultiplierWhenCrouched;  // 0xC2C(0x4)
	float RotationRateMultiplierWhenProne;  // 0xC30(0x4)
	float RotationRateMultiplierWhenSwimming;  // 0xC34(0x4)
	float RotationRateMultiplierWhenSwimmingAndDiving;  // 0xC38(0x4)
	float GroundSlopeAngleForSpeedScalingSmoothingRate;  // 0xC3C(0x4)
	float GroundSlopeAngleSmoothingRate;  // 0xC40(0x4)
	char pad_3142_1 : 7;  // 0xC46(0x1)
	bool UseSmoothedGroundSlopeAngleForPaceChecks : 1;  // 0xC44(0x1)
	char pad_3143[1];  // 0xC47(0x1)
	float MinGroundSlopeAngleForJogging;  // 0xC48(0x4)
	float MaxGroundSlopeAngleForJogging;  // 0xC4C(0x4)
	float MinGroundSlopeAngleForRunning;  // 0xC50(0x4)
	float MaxGroundSlopeAngleForRunning;  // 0xC54(0x4)
	float MinSpeedModifierWhenMovingUphill;  // 0xC58(0x4)
	float BaseJumpZVelocity;  // 0xC5C(0x4)
	char pad_3168[56];  // 0xC60(0x38)
	float MaxAbsoluteVelocityZAfterClimb;  // 0xC98(0x4)
	float StaminaUnitsToDrainOnJump;  // 0xC9C(0x4)
	struct UCurveFloat* JumpZVelocityMultiplierVsSpeed;  // 0xCA0(0x8)
	struct UCurveFloat* JumpZVelocityMultiplierVsGroundSlopeAngle;  // 0xCA8(0x8)
	struct TArray<struct FPrisonerClimbAnimationInfo> ClimbAnimations;  // 0xCB0(0x10)
	float ClimbingStaminaDrainModifier;  // 0xCC0(0x4)
	float ClimbingPlayRateMultiplierWhenRequiredHandIsNotFree;  // 0xCC4(0x4)
	char pad_3272_1 : 7;  // 0xCC8(0x1)
	bool ClimbingDebuggingEnabled : 1;  // 0xCC8(0x1)
	char pad_3273[3];  // 0xCC9(0x3)
	float ClimbingDebuggingDrawTime;  // 0xCCC(0x4)
	struct FVector LadderClimbingCapsuleBias;  // 0xCD0(0xC)
	float LadderClimbingMaxSpeed;  // 0xCDC(0x4)
	char pad_3296_1 : 7;  // 0xCE0(0x1)
	bool CanClimbOffLadderUpwardsAutomatically : 1;  // 0xCE0(0x1)
	char pad_3297_1 : 7;  // 0xCE1(0x1)
	bool CanClimbOffLadderDownwardsAutomatically : 1;  // 0xCE1(0x1)
	char pad_3298[2];  // 0xCE2(0x2)
	float MaxHorzDistanceToLadderForClimbing;  // 0xCE4(0x4)
	int32_t NumberOfLadderPeekSteps;  // 0xCE8(0x4)
	struct FVector PostLadderClimbingLaunchVelocity;  // 0xCEC(0xC)
	float MaxHeightToJumpOffLadderSafely;  // 0xCF8(0x4)
	float MaxFallingSpeedAllowedForLadderClimbing;  // 0xCFC(0x4)
	float MaxGroundSlopeAllowedForLadderClimbing;  // 0xD00(0x4)
	char pad_3332[4];  // 0xD04(0x4)
	struct UCurveFloat* MaxHorzDistanceToWindowForClimbingVsSpeed;  // 0xD08(0x8)
	struct TArray<struct FWindowClimbingAnimationInfo> WindowClimbingAnimations;  // 0xD10(0x10)
	float WaterImmersionToStartSwimming;  // 0xD20(0x4)
	float WaterImmersionToStopSwimming;  // 0xD24(0x4)
	float SwimmingToWalkingDepthTolerance;  // 0xD28(0x4)
	float SwimmingToWalkingCapsuleCollisionTolerance;  // 0xD2C(0x4)
	float DesiredWaterImmersion;  // 0xD30(0x4)
	float DesiredWaterImmersionCorrectionAcceleration;  // 0xD34(0x4)
	struct UCurveFloat* DesiredWaterImmersionCorrectionAccelerationCurve;  // 0xD38(0x8)
	float WaterResurfaceAcceleration;  // 0xD40(0x4)
	struct FVector2D OceanWavesAcceleration;  // 0xD44(0x8)
	float WaterImmersionAfterWhichRunningIsDisabled;  // 0xD4C(0x4)
	float ImmersionCorrectionDownMultiplier;  // 0xD50(0x4)
	float RotationRateMultiplierWhenImmersedInWater;  // 0xD54(0x4)
	float DiveInAccelerationScale;  // 0xD58(0x4)
	float DiveInAccelerationTimeout;  // 0xD5C(0x4)
	float DiveInCollisionCheckOffset;  // 0xD60(0x4)
	float BuoyancyWhenDiving;  // 0xD64(0x4)
	float BuoyancyWhenNotDiving;  // 0xD68(0x4)
	float RotationRatePitchWhenDiving;  // 0xD6C(0x4)
	float SurfaceTensionForce;  // 0xD70(0x4)
	float MaxWindSpeedForAerialDrag;  // 0xD74(0x4)
	float LongFallSpeedThreshold;  // 0xD78(0x4)
	float BodyRotationCorrectionRate;  // 0xD7C(0x4)
	struct FVector BodyRotationDrag;  // 0xD80(0xC)
	struct FWaterForceWhenSwimmingParams WaterForceWhenSwimmingParams;  // 0xD8C(0x14)
	struct FVector_NetQuantizeNormal _repAccelerationNormal;  // 0xDA0(0xC)
	char pad_3500[48];  // 0xDAC(0x30)
	float _timeToSpendFallingBeforeHandsAreFree;  // 0xDDC(0x4)
	float _maxLatencyForStanceCheckInterpolation;  // 0xDE0(0x4)
	char pad_3556[300];  // 0xDE4(0x12C)
	char _repBuoyancy;  // 0xF10(0x1)
	char pad_3857[463];  // 0xF11(0x1CF)
	struct FLadderInfoRepData _ladderInfoRepData;  // 0x10E0(0x50)
	char pad_4400[514];  // 0x1130(0x202)
	uint16_t _fallingPoseBlendRepData;  // 0x1332(0x2)
	char _fallingControlRepData;  // 0x1334(0x1)
	char pad_4917[171];  // 0x1335(0xAB)

	void Server_SetFallingControlRepData(char RepData); // Function ConZ.PrisonerMovementComponent.Server_SetFallingControlRepData
	void Server_SetDivingState(uint8_t  Value); // Function ConZ.PrisonerMovementComponent.Server_SetDivingState
	void Server_SetDesiredFallingPose(uint8_t  Pose, bool force); // Function ConZ.PrisonerMovementComponent.Server_SetDesiredFallingPose
	void Server_ClimbOffLadder(); // Function ConZ.PrisonerMovementComponent.Server_ClimbOffLadder
	void OnRep_FallingPoseBlend(); // Function ConZ.PrisonerMovementComponent.OnRep_FallingPoseBlend
	void OnRep_FallingControl(); // Function ConZ.PrisonerMovementComponent.OnRep_FallingControl
	void OnRep_Buoyancy(); // Function ConZ.PrisonerMovementComponent.OnRep_Buoyancy
	void OnRep_AccelerationNormal(); // Function ConZ.PrisonerMovementComponent.OnRep_AccelerationNormal
	void NetMulticast_SetDesiredFallingPose(uint8_t  Pose, bool force); // Function ConZ.PrisonerMovementComponent.NetMulticast_SetDesiredFallingPose
	void NetMulticast_SetBodyRotation(struct FQuat Rotation, struct FVector AngularVelocity); // Function ConZ.PrisonerMovementComponent.NetMulticast_SetBodyRotation
	void NetMulticast_PlayAnimMontageIfSimulatedProxy(struct UAnimMontage* Montage, float PlayRate); // Function ConZ.PrisonerMovementComponent.NetMulticast_PlayAnimMontageIfSimulatedProxy
	void NetMulticast_FinishAnchoring(bool anchoringSucceded); // Function ConZ.PrisonerMovementComponent.NetMulticast_FinishAnchoring
	bool JumpOffLadder(struct FVector& jumpVelocity); // Function ConZ.PrisonerMovementComponent.JumpOffLadder
	float IsFlyingOrFalling(); // Function ConZ.PrisonerMovementComponent.IsFlyingOrFalling
	bool IsDiving(); // Function ConZ.PrisonerMovementComponent.IsDiving
	bool IsClimbingWindow(); // Function ConZ.PrisonerMovementComponent.IsClimbingWindow
	bool IsClimbingLadder(); // Function ConZ.PrisonerMovementComponent.IsClimbingLadder
	bool IsClimbing(); // Function ConZ.PrisonerMovementComponent.IsClimbing
	struct FWindowInfo GetWindowInfo(); // Function ConZ.PrisonerMovementComponent.GetWindowInfo
	float GetWaterImmersionDepth(); // Function ConZ.PrisonerMovementComponent.GetWaterImmersionDepth
	float GetTimeSpentInAir(); // Function ConZ.PrisonerMovementComponent.GetTimeSpentInAir
	float GetTimeSpentFalling(); // Function ConZ.PrisonerMovementComponent.GetTimeSpentFalling
	uint8_t  GetMaxAllowedPace(); // Function ConZ.PrisonerMovementComponent.GetMaxAllowedPace
	struct FLadderInfo GetLadderInfo(); // Function ConZ.PrisonerMovementComponent.GetLadderInfo
	float GetGroundSlopeAngleSmoothed(); // Function ConZ.PrisonerMovementComponent.GetGroundSlopeAngleSmoothed
	float GetGroundSlopeAngleForSpeedScaling(); // Function ConZ.PrisonerMovementComponent.GetGroundSlopeAngleForSpeedScaling
	float GetGroundSlopeAngle(); // Function ConZ.PrisonerMovementComponent.GetGroundSlopeAngle
	float GetDivingDepth(); // Function ConZ.PrisonerMovementComponent.GetDivingDepth
	float GetDesiredCoursePitchAngle(); // Function ConZ.PrisonerMovementComponent.GetDesiredCoursePitchAngle
	float GetDesiredCourseAngle(); // Function ConZ.PrisonerMovementComponent.GetDesiredCourseAngle
	uint8_t  GetCustomMovementMode(); // Function ConZ.PrisonerMovementComponent.GetCustomMovementMode
	struct FClimbableObstacleInfo GetClimbableObstacleInfo(); // Function ConZ.PrisonerMovementComponent.GetClimbableObstacleInfo
	struct FHitResult GetAnticipatedLandingSpot(); // Function ConZ.PrisonerMovementComponent.GetAnticipatedLandingSpot
	float GetActualCourseAngle(); // Function ConZ.PrisonerMovementComponent.GetActualCourseAngle
	bool DetectWindow(struct FWindowInfo& Result); // Function ConZ.PrisonerMovementComponent.DetectWindow
	bool DetectLadderDisembarkLocation(struct FLadderInfo& LadderInfo, struct FVector& newCapsuleLocation, struct FRotator& newCapsuleRotation); // Function ConZ.PrisonerMovementComponent.DetectLadderDisembarkLocation
	bool DetectLadder(struct FLadderInfo& Result); // Function ConZ.PrisonerMovementComponent.DetectLadder
	bool DetectClimbableObstacle(struct FClimbableObstacleInfo& Result); // Function ConZ.PrisonerMovementComponent.DetectClimbableObstacle
	bool ClimbWindow(struct FWindowInfo& WindowInfo); // Function ConZ.PrisonerMovementComponent.ClimbWindow
	bool ClimbOntoLadder(struct FLadderInfo& LadderInfo); // Function ConZ.PrisonerMovementComponent.ClimbOntoLadder
	bool ClimbOffLadder(); // Function ConZ.PrisonerMovementComponent.ClimbOffLadder
	bool Climb(); // Function ConZ.PrisonerMovementComponent.Climb
	bool CanClimbWindow(); // Function ConZ.PrisonerMovementComponent.CanClimbWindow
	bool CanClimbOntoLadder(); // Function ConZ.PrisonerMovementComponent.CanClimbOntoLadder
	bool CanClimb(); // Function ConZ.PrisonerMovementComponent.CanClimb
}; 



// Class ConZ.PrisonerMusicPlayerComponent
// Size: 0x150(Inherited: 0xC0) 
struct UPrisonerMusicPlayerComponent : public UCharacterActionComponent
{
	struct FName _musicRootFolder;  // 0xC0(0x8)
	float _volumeChangeRate;  // 0xC8(0x4)
	char pad_204[4];  // 0xCC(0x4)
	int64_t _fileSizeLimitInMB;  // 0xD0(0x8)
	struct UAkAudioEvent* _turnOnAudioEvent;  // 0xD8(0x8)
	struct UAkAudioEvent* _turnOffAudioEvent;  // 0xE0(0x8)
	struct URuntimeAudioImporterLibrary* _importerLibrary;  // 0xE8(0x8)
	struct UAudioComponent* _audioComponent;  // 0xF0(0x8)
	struct URadioComponent* _radioComponent;  // 0xF8(0x8)
	struct TWeakObjectPtr<UImportedSoundWave> _playingSoundWave;  // 0x100(0x8)
	char pad_264[72];  // 0x108(0x48)

	void OnResult(struct URuntimeAudioImporterLibrary* RuntimeAudioImporterObjectRef, struct UImportedSoundWave* SoundWaveRef, uint8_t  Status); // Function ConZ.PrisonerMusicPlayerComponent.OnResult
	void OnRadioTrackStarted(); // Function ConZ.PrisonerMusicPlayerComponent.OnRadioTrackStarted
	void OnAudioPlaybackFinished(); // Function ConZ.PrisonerMusicPlayerComponent.OnAudioPlaybackFinished
}; 



// Class ConZ.PrisonerPrisonWalletComponent
// Size: 0xF0(Inherited: 0xC0) 
struct UPrisonerPrisonWalletComponent : public UCharacterActionComponent
{
	struct TArray<AItem*> _deluxeItems;  // 0xC0(0x10)
	struct TArray<AItem*> _milestoneEventItems;  // 0xD0(0x10)
	uint8_t  _milestoneItemChoiceType;  // 0xE0(0x1)
	char pad_225[3];  // 0xE1(0x3)
	int32_t _lastMilestone;  // 0xE4(0x4)
	char pad_232[8];  // 0xE8(0x8)

}; 



// Class ConZ.PrisonerResponseIdle
// Size: 0x98(Inherited: 0x28) 
struct UPrisonerResponseIdle : public UObject
{
	struct TArray<struct UAnimMontage*> Montages;  // 0x28(0x10)
	float PreMontageDelay;  // 0x38(0x4)
	float PostMontageDelay;  // 0x3C(0x4)
	float CooldownDuration;  // 0x40(0x4)
	char pad_68_1 : 7;  // 0x44(0x1)
	bool CanBeUsedWhenItemIsInHands : 1;  // 0x44(0x1)
	char pad_69[3];  // 0x45(0x3)
	struct TSet<uint8_t > CombatibleAnimationsSets;  // 0x48(0x50)

}; 



// Class ConZ.RichTextInlineTextDecorator
// Size: 0x28(Inherited: 0x28) 
struct URichTextInlineTextDecorator : public URichTextBlockDecorator
{

}; 



// Class ConZ.PrisonerRestingComponent
// Size: 0x118(Inherited: 0xC0) 
struct UPrisonerRestingComponent : public UCharacterActionComponent
{
	struct FPrisonerRestingData _restingData;  // 0xC0(0x10)
	struct FPrisonerRestingDataAutonomous _restingDataAutonomous;  // 0xD0(0x1C)
	char pad_236[44];  // 0xEC(0x2C)

	void OnRep_RestingDataAutonomous(); // Function ConZ.PrisonerRestingComponent.OnRep_RestingDataAutonomous
	void OnRep_RestingData(); // Function ConZ.PrisonerRestingComponent.OnRep_RestingData
}; 



// Class ConZ.VehicleWithGearbox
// Size: 0x28(Inherited: 0x28) 
struct UVehicleWithGearbox : public UInterface
{

}; 



// Class ConZ.TeleportUserData
// Size: 0x28(Inherited: 0x28) 
struct UTeleportUserData : public UObject
{

}; 



// Class ConZ.PrisonerTeleportUserData
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerTeleportUserData : public UTeleportUserData
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.PrisonerSkillsUIDataImpl
// Size: 0x38(Inherited: 0x28) 
struct UPrisonerSkillsUIDataImpl : public UPrisonerSkillsUIData
{
	struct TArray<struct UPrisonerSkillUIData*> SkillsUIData;  // 0x28(0x10)

}; 



// Class ConZ.PrisonerSubview
// Size: 0x28(Inherited: 0x28) 
struct UPrisonerSubview : public UInterface
{

}; 



// Class ConZ.PrisonerThirdPersonAerialSubviewComponent
// Size: 0x7B0(Inherited: 0x200) 
struct UPrisonerThirdPersonAerialSubviewComponent : public USceneComponent
{
	float FieldOfView;  // 0x200(0x4)
	char pad_516_1 : 7;  // 0x204(0x1)
	bool UseFieldOfViewForLOD : 1;  // 0x204(0x1)
	char pad_517_1 : 7;  // 0x205(0x1)
	bool ConstrainAspectRatio : 1;  // 0x205(0x1)
	char pad_518[2];  // 0x206(0x2)
	float AspectRatio;  // 0x208(0x4)
	float MinViewYaw;  // 0x20C(0x4)
	float MaxViewYaw;  // 0x210(0x4)
	float MinViewPitch;  // 0x214(0x4)
	float MaxViewPitch;  // 0x218(0x4)
	float PostProcessBlendWeight;  // 0x21C(0x4)
	struct FPostProcessSettings PostProcessSettings;  // 0x220(0x560)
	float BlendInDuration;  // 0x780(0x4)
	float BlendOutDuration;  // 0x784(0x4)
	float BaseOrbitDistance;  // 0x788(0x4)
	float SpeedOrbitDistanceIncreaseFactor;  // 0x78C(0x4)
	char pad_1936[32];  // 0x790(0x20)

}; 



// Class ConZ.PrisonerThirdPersonViewComponent
// Size: 0x200(Inherited: 0xD0) 
struct UPrisonerThirdPersonViewComponent : public UPrisonerViewComponent
{
	struct TArray<uint8_t > SubviewBlendingPriorities;  // 0xD0(0x10)
	struct TArray<struct FPrisonerThirdPersonSubviewBlendOverride> SubviewBlendOverrides;  // 0xE0(0x10)
	char pad_240[272];  // 0xF0(0x110)

}; 



// Class ConZ.PrisonerThrowComponent
// Size: 0xD0(Inherited: 0xC0) 
struct UPrisonerThrowComponent : public UCharacterActionComponent
{
	uint8_t  _throwingState;  // 0xC0(0x1)
	char pad_193[3];  // 0xC1(0x3)
	struct TWeakObjectPtr<AItem> _itemToThrow;  // 0xC4(0x8)
	char pad_204[4];  // 0xCC(0x4)

	void OnRep_ThrowState(); // Function ConZ.PrisonerThrowComponent.OnRep_ThrowState
}; 



// Class ConZ.PrisonerTreatmentUIController
// Size: 0x4B8(Inherited: 0x28) 
struct UPrisonerTreatmentUIController : public UObject
{
	char pad_40[1168];  // 0x28(0x490)

	void OnInventoryContainerAddedOrRemoved(struct UPrisonerInventoryComponent* sender, struct AItem* Item); // Function ConZ.PrisonerTreatmentUIController.OnInventoryContainerAddedOrRemoved
}; 



// Class ConZ.PrisonerUIDataRequest
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerUIDataRequest : public UPlayerRpcChannelServerRequest
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.PrisonerUIDebugDataResponse
// Size: 0x30(Inherited: 0x28) 
struct UPrisonerUIDebugDataResponse : public UPlayerRpcChannelServerResponse
{
	struct UPrisonerUIDebugData* _payload;  // 0x28(0x8)

}; 



// Class ConZ.WetnessStatics
// Size: 0x28(Inherited: 0x28) 
struct UWetnessStatics : public UBlueprintFunctionLibrary
{

	void SetMaterialsWetness(struct UPrimitiveComponent* Component, float Wetness); // Function ConZ.WetnessStatics.SetMaterialsWetness
}; 



// Class ConZ.WeaponAttachmentFlashlight
// Size: 0x960(Inherited: 0x930) 
struct AWeaponAttachmentFlashlight : public AWeaponAttachment
{
	struct UAkAudioEvent* _lightActivatedAudioEvent;  // 0x930(0x8)
	struct FName _lightSocketName;  // 0x938(0x8)
	struct FName _materialEmissiveParameterName;  // 0x940(0x8)
	char pad_2376[8];  // 0x948(0x8)
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent;  // 0x950(0x8)
	char pad_2392[8];  // 0x958(0x8)

	void Server_SetTurnedOn(bool Value); // Function ConZ.WeaponAttachmentFlashlight.Server_SetTurnedOn
	void OnComponentDeactivated(struct UActorComponent* Component); // Function ConZ.WeaponAttachmentFlashlight.OnComponentDeactivated
	void OnComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.WeaponAttachmentFlashlight.OnComponentActivated
}; 



// Class ConZ.PrisonerVehicleAction_ForcePush
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerVehicleAction_ForcePush : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerVehicleAction_ForcePushDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerVehicleAction_ForcePushDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.SpawnMenuWidget
// Size: 0x340(Inherited: 0x260) 
struct USpawnMenuWidget : public UUserWidget
{
	struct USpawnChoiceWidget* _randomLocationButton;  // 0x260(0x8)
	struct USpawnChoiceWidget* _sectorLocationButton;  // 0x268(0x8)
	struct USpawnChoiceWidget* _shelterLocationButton;  // 0x270(0x8)
	struct USpawnChoiceWidget* _squadLocationButton;  // 0x278(0x8)
	struct UVerticalBox* _locationOptions;  // 0x280(0x8)
	struct UBorder* _respawnDisabledLabel;  // 0x288(0x8)
	struct UBorder* _combatLabel;  // 0x290(0x8)
	struct UBorder* _noAvailableLabel;  // 0x298(0x8)
	struct UBorder* _limitExceededLabel;  // 0x2A0(0x8)
	struct UOverlay* _deathTitlePanel;  // 0x2A8(0x8)
	struct UOverlay* _comaTitlePanel;  // 0x2B0(0x8)
	struct UOverlay* _timerPanel;  // 0x2B8(0x8)
	struct UTextBlock* _timerLabel;  // 0x2C0(0x8)
	struct UTextBlock* _timer;  // 0x2C8(0x8)
	struct UOverlay* _wakeUpPanel;  // 0x2D0(0x8)
	struct UButton* _wakeUpButton;  // 0x2D8(0x8)
	struct UTextBlock* _healthCriticalLabel;  // 0x2E0(0x8)
	struct USpawnSectorSelectorWidget* _spawnSectorSelector;  // 0x2E8(0x8)
	struct FText _suddenDeathText;  // 0x2F0(0x18)
	struct FText _permadeathText;  // 0x308(0x18)
	char pad_800[32];  // 0x320(0x20)

	void SelectLocation(struct USpawnChoiceWidget* Button); // Function ConZ.SpawnMenuWidget.SelectLocation
	float Prisoner_GetHealthRatio(struct APrisoner* Prisoner); // Function ConZ.SpawnMenuWidget.Prisoner_GetHealthRatio
	float Prisoner_GetComaDuration(struct APrisoner* Prisoner); // Function ConZ.SpawnMenuWidget.Prisoner_GetComaDuration
	void Prisoner_Die(struct APrisoner* Prisoner); // Function ConZ.SpawnMenuWidget.Prisoner_Die
	void OnWakeUpButtonClicked(); // Function ConZ.SpawnMenuWidget.OnWakeUpButtonClicked
	struct FText GetTotalPriceText(); // Function ConZ.SpawnMenuWidget.GetTotalPriceText
	uint8_t  GetSectorSelectorVisibility(); // Function ConZ.SpawnMenuWidget.GetSectorSelectorVisibility
	struct FSectorId GetSectorId(int32_t X, int32_t Y); // Function ConZ.SpawnMenuWidget.GetSectorId
	struct FText GetRespawnDisabledLabelText(); // Function ConZ.SpawnMenuWidget.GetRespawnDisabledLabelText
	struct FSlateColor GetRemainingCurrencyTextColorAndOpacity(); // Function ConZ.SpawnMenuWidget.GetRemainingCurrencyTextColorAndOpacity
	struct FText GetRemainingCurrencyText(); // Function ConZ.SpawnMenuWidget.GetRemainingCurrencyText
	struct FSlateColor GetCurrentCurrencyTextColorAndOpacity(); // Function ConZ.SpawnMenuWidget.GetCurrentCurrencyTextColorAndOpacity
	struct FText GetCurrentCurrencyText(); // Function ConZ.SpawnMenuWidget.GetCurrentCurrencyText
}; 



// Class ConZ.PrisonerVehicleAction_InstallAttachment
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerVehicleAction_InstallAttachment : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerVehicleAction_OpenOrCloseDoor
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerVehicleAction_OpenOrCloseDoor : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerVehicleAction_OpenOrCloseDoorDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerVehicleAction_OpenOrCloseDoorDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.PrisonerVehicleAction_QuickInstallAttachmentDescription
// Size: 0x60(Inherited: 0x38) 
struct UPrisonerVehicleAction_QuickInstallAttachmentDescription : public UPrisonerActionDescription
{
	char pad_56[40];  // 0x38(0x28)

}; 



// Class ConZ.PrisonerVehicleAction_QuickRemoveAttachment
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerVehicleAction_QuickRemoveAttachment : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerVehicleAction_QuickRepairAttachment
// Size: 0x118(Inherited: 0x108) 
struct UPrisonerVehicleAction_QuickRepairAttachment : public UPrisonerAction
{
	char pad_264[16];  // 0x108(0x10)

}; 



// Class ConZ.PrisonerVehicleAction_RemoveAttachment
// Size: 0x110(Inherited: 0x108) 
struct UPrisonerVehicleAction_RemoveAttachment : public UPrisonerAction
{
	char pad_264[8];  // 0x108(0x8)

}; 



// Class ConZ.PrisonerVehicleAction_RemoveAttachmentDescription
// Size: 0x78(Inherited: 0x38) 
struct UPrisonerVehicleAction_RemoveAttachmentDescription : public UPrisonerActionDescription
{
	char pad_56[64];  // 0x38(0x40)

}; 



// Class ConZ.PrisonerVehicleAction_RepairAttachmentDescription
// Size: 0x70(Inherited: 0x38) 
struct UPrisonerVehicleAction_RepairAttachmentDescription : public UPrisonerActionDescription
{
	char pad_56[56];  // 0x38(0x38)

}; 



// Class ConZ.PrisonerVehicleAction_SwitchMountSlot
// Size: 0x108(Inherited: 0x108) 
struct UPrisonerVehicleAction_SwitchMountSlot : public UPrisonerAction
{

}; 



// Class ConZ.PrisonerVehicleAction_SwitchMountSlotDescription
// Size: 0x40(Inherited: 0x38) 
struct UPrisonerVehicleAction_SwitchMountSlotDescription : public UPrisonerActionDescription
{
	char pad_56[8];  // 0x38(0x8)

}; 



// Class ConZ.PrisonerVehicleAction_UnmountDescription
// Size: 0x48(Inherited: 0x38) 
struct UPrisonerVehicleAction_UnmountDescription : public UPrisonerActionDescription
{
	char pad_56[16];  // 0x38(0x10)

}; 



// Class ConZ.Projectile
// Size: 0x438(Inherited: 0x220) 
struct AProjectile : public AActor
{
	struct UStaticMeshComponent* StaticMesh;  // 0x220(0x8)
	char pad_552_1 : 7;  // 0x228(0x1)
	bool RotationFollowsVelocity : 1;  // 0x228(0x1)
	char pad_553_1 : 7;  // 0x229(0x1)
	bool AddImpulseOnHit : 1;  // 0x229(0x1)
	char pad_554[2];  // 0x22A(0x2)
	float ImpulseMultiplier;  // 0x22C(0x4)
	float MaxImpulse;  // 0x230(0x4)
	char pad_564[4];  // 0x234(0x4)
	struct UProjectileImpactEffects* ImpactEffects;  // 0x238(0x8)
	struct FProjectileData ProjectileData;  // 0x240(0x60)
	float MeshScaleStartLocal;  // 0x2A0(0x4)
	float MeshScaleRangeLocal;  // 0x2A4(0x4)
	float MeshScaleMinLocal;  // 0x2A8(0x4)
	float MeshScaleMaxLocal;  // 0x2AC(0x4)
	float MeshScaleStart;  // 0x2B0(0x4)
	float MeshScaleRange;  // 0x2B4(0x4)
	float MeshScaleMin;  // 0x2B8(0x4)
	float MeshScaleMax;  // 0x2BC(0x4)
	float TraceScaleMultiplier;  // 0x2C0(0x4)
	float GravityScale;  // 0x2C4(0x4)
	float Sharpness;  // 0x2C8(0x4)
	char pad_716[4];  // 0x2CC(0x4)
	struct UAkAudioEvent* FlyByAudioEvent;  // 0x2D0(0x8)
	struct FName ColorMaterialParameterName;  // 0x2D8(0x8)
	struct FLinearColor InitialColor;  // 0x2E0(0x10)
	struct FLinearColor FinalColor;  // 0x2F0(0x10)
	int32_t MaxHitCount;  // 0x300(0x4)
	float NoiseLoudnessOnHit;  // 0x304(0x4)
	char pad_776_1 : 7;  // 0x308(0x1)
	bool IgnoreCallingWeaponsFiringEffects : 1;  // 0x308(0x1)
	char pad_777[3];  // 0x309(0x3)
	float ExperienceMultiplier;  // 0x30C(0x4)
	char pad_784_1 : 7;  // 0x310(0x1)
	bool ShouldForceStopWhenNoVelocity : 1;  // 0x310(0x1)
	char pad_785_1 : 7;  // 0x311(0x1)
	bool CanEverCollide : 1;  // 0x311(0x1)
	char pad_786[6];  // 0x312(0x6)
	struct UNiagaraSystem* TrailNiagaraSystem;  // 0x318(0x8)
	struct UParticleSystem* WaterSplashParticleSystem;  // 0x320(0x8)
	char pad_808[24];  // 0x328(0x18)
	float _lifeSpanAfterStopping;  // 0x340(0x4)
	char pad_836_1 : 7;  // 0x344(0x1)
	bool _useFixedTimestep : 1;  // 0x344(0x1)
	char pad_837[3];  // 0x345(0x3)
	float _fixedTimestep;  // 0x348(0x4)
	char pad_844[24];  // 0x34C(0x18)
	int32_t _zeroRange;  // 0x364(0x4)
	float _windage;  // 0x368(0x4)
	float _distanceTraveled;  // 0x36C(0x4)
	float _meshScaleFactor;  // 0x370(0x4)
	char pad_884[32];  // 0x374(0x20)
	float _offsetFromBarrel;  // 0x394(0x4)
	char pad_920[4];  // 0x398(0x4)
	int32_t _randomSeed;  // 0x39C(0x4)
	char pad_928[80];  // 0x3A0(0x50)
	struct UNiagaraComponent* _trailNiagaraComponent;  // 0x3F0(0x8)
	char pad_1016_1 : 7;  // 0x3F8(0x1)
	bool _doNotForceInitialReplication : 1;  // 0x3F8(0x1)
	char pad_1017[3];  // 0x3F9(0x3)
	float _muzzleVelocity;  // 0x3FC(0x4)
	char pad_1024_1 : 7;  // 0x400(0x1)
	bool _createdOnServer : 1;  // 0x400(0x1)
	char pad_1025[3];  // 0x401(0x3)
	float _halfAngle;  // 0x404(0x4)
	char pad_1032[32];  // 0x408(0x20)
	uint8_t  _weaponFiringModeWhenShot;  // 0x428(0x1)
	char pad_1065[7];  // 0x429(0x7)
	struct FFiredShotDescriptionRep _firedShotDescriptionRep;  // 0x430(0x4)
	char pad_1076[4];  // 0x434(0x4)

	void OnStop(struct FHitResult& HitResult); // Function ConZ.Projectile.OnStop
}; 



// Class ConZ.AmmunitionArrowSpawningParams
// Size: 0x38(Inherited: 0x28) 
struct UAmmunitionArrowSpawningParams : public UObject
{
	UObject* AmmunitionArrowClass;  // 0x28(0x8)
	float ItemsHealth;  // 0x30(0x4)
	char pad_52_1 : 7;  // 0x34(0x1)
	bool IsPartOfEvent : 1;  // 0x34(0x1)
	char pad_53[3];  // 0x35(0x3)

}; 



// Class ConZ.ProjectileArrow
// Size: 0x478(Inherited: 0x438) 
struct AProjectileArrow : public AProjectile
{
	struct USceneComponent* _tempSceneComponent;  // 0x438(0x8)
	struct USceneComponent* _relativeRotationSceneComponent;  // 0x440(0x8)
	struct FProjectileArrowData _projectileArrowData;  // 0x448(0x20)
	char pad_1128[16];  // 0x468(0x10)

	void UpdateParameters(); // Function ConZ.ProjectileArrow.UpdateParameters
}; 



// Class ConZ.ProjectileFlare
// Size: 0x498(Inherited: 0x438) 
struct AProjectileFlare : public AProjectile
{
	struct UParticleSystemComponent* _particleSystemComponent;  // 0x438(0x8)
	struct UPointLightComponent* _pointLightComponent;  // 0x440(0x8)
	struct UAkComponent* _akFlareComponent;  // 0x448(0x8)
	char pad_1104_1 : 7;  // 0x450(0x1)
	bool _hasParachute : 1;  // 0x450(0x1)
	char pad_1105[3];  // 0x451(0x3)
	float _parachuteGravityScale;  // 0x454(0x4)
	float _parachuteEffectiveBallisticCoefficient;  // 0x458(0x4)
	struct FVector _parachuteParticlesScale;  // 0x45C(0xC)
	float _parachuteParticlesScaleSpeed;  // 0x468(0x4)
	char pad_1132[4];  // 0x46C(0x4)
	struct UAkAudioEvent* _burnStart;  // 0x470(0x8)
	struct UAkAudioEvent* _burnEnd;  // 0x478(0x8)
	float _burnTime;  // 0x480(0x4)
	char pad_1156[20];  // 0x484(0x14)

}; 



// Class ConZ.ProjectileGrenade
// Size: 0x478(Inherited: 0x478) 
struct AProjectileGrenade : public AProjectileExplosive
{

}; 



// Class ConZ.WeaponStateFiringBurst
// Size: 0x40(Inherited: 0x40) 
struct UWeaponStateFiringBurst : public UWeaponStateFiringAutomatic
{

}; 



// Class ConZ.ProjectileImpactEffects
// Size: 0x470(Inherited: 0x30) 
struct UProjectileImpactEffects : public UDataAsset
{
	float MinDecalSize;  // 0x30(0x4)
	float MaxDecalSize;  // 0x34(0x4)
	float MinDecalLifetime;  // 0x38(0x4)
	float MaxDecalLifetime;  // 0x3C(0x4)
	float DecalFadeFactor;  // 0x40(0x4)
	float ParticleEffectsInitialScale;  // 0x44(0x4)
	float ParticleEffectsScaleDistanceStart;  // 0x48(0x4)
	float ParticleEffectsScaleDistanceRange;  // 0x4C(0x4)
	float ParticleEffectsScaleByDistanceFactor;  // 0x50(0x4)
	char pad_84[4];  // 0x54(0x4)
	struct UParticleSystem* BulletPenetrationExitParticlesDaytime;  // 0x58(0x8)
	struct UParticleSystem* BulletPenetrationExitParticlesNighttime;  // 0x60(0x8)
	struct UMaterial* DayTimePenetrationDecal;  // 0x68(0x8)
	struct UMaterial* NightTimePenetrationDecal;  // 0x70(0x8)
	struct UAkAudioEvent* AudioEvent;  // 0x78(0x8)
	struct FImpactEffectData Default;  // 0x80(0x18)
	struct FImpactEffectData grass;  // 0x98(0x18)
	struct FImpactEffectData ForrestGroundCoastal;  // 0xB0(0x18)
	struct FImpactEffectData ForrestGroundContinental;  // 0xC8(0x18)
	struct FImpactEffectData Rock;  // 0xE0(0x18)
	struct FImpactEffectData Stone;  // 0xF8(0x18)
	struct FImpactEffectData Gravel;  // 0x110(0x18)
	struct FImpactEffectData GravelBeach;  // 0x128(0x18)
	struct FImpactEffectData Pebbles;  // 0x140(0x18)
	struct FImpactEffectData Snow;  // 0x158(0x18)
	struct FImpactEffectData Ice;  // 0x170(0x18)
	struct FImpactEffectData Sand;  // 0x188(0x18)
	struct FImpactEffectData Asphalt;  // 0x1A0(0x18)
	struct FImpactEffectData Dirt;  // 0x1B8(0x18)
	struct FImpactEffectData Water;  // 0x1D0(0x18)
	struct FImpactEffectData WaterOcean;  // 0x1E8(0x18)
	struct FImpactEffectData Cloth;  // 0x200(0x18)
	struct FImpactEffectData Metal;  // 0x218(0x18)
	struct FImpactEffectData Aluminium;  // 0x230(0x18)
	struct FImpactEffectData Concrete;  // 0x248(0x18)
	struct FImpactEffectData Brick;  // 0x260(0x18)
	struct FImpactEffectData Wood;  // 0x278(0x18)
	struct FImpactEffectData Plastic;  // 0x290(0x18)
	struct FImpactEffectData Rubber;  // 0x2A8(0x18)
	struct FImpactEffectData Glass;  // 0x2C0(0x18)
	struct FImpactEffectData Folliage;  // 0x2D8(0x18)
	struct FImpactEffectData Bark;  // 0x2F0(0x18)
	struct FImpactEffectData Flesh;  // 0x308(0x18)
	struct FImpactEffectData RoofTile;  // 0x320(0x18)
	struct FImpactEffectData CeramicsTiles;  // 0x338(0x18)
	struct FImpactEffectData Scrap;  // 0x350(0x18)
	struct FImpactEffectData Trunk;  // 0x368(0x18)
	struct FImpactEffectData Leaves;  // 0x380(0x18)
	struct FImpactEffectData Cardboard;  // 0x398(0x18)
	struct FImpactEffectData Plaster;  // 0x3B0(0x18)
	struct FImpactEffectData Kevlar;  // 0x3C8(0x18)
	struct FImpactEffectData ForceField;  // 0x3E0(0x18)
	struct FImpactEffectData NoEffect;  // 0x3F8(0x18)
	struct FImpactEffectData WhiteGravel;  // 0x410(0x18)
	struct FImpactEffectData Mud;  // 0x428(0x18)
	struct FImpactEffectData RiverSand;  // 0x440(0x18)
	struct FImpactEffectData GrassContinental;  // 0x458(0x18)

}; 



// Class ConZ.ProjectileRocket
// Size: 0x4A8(Inherited: 0x478) 
struct AProjectileRocket : public AProjectileExplosive
{
	float _alternateMashDelay;  // 0x478(0x4)
	char pad_1148[4];  // 0x47C(0x4)
	struct UStaticMesh* _alternateMash;  // 0x480(0x8)
	float _propulsionDelay;  // 0x488(0x4)
	char pad_1164[4];  // 0x48C(0x4)
	struct UParticleSystem* _propulsionParticleSystem;  // 0x490(0x8)
	char pad_1176[16];  // 0x498(0x10)

}; 



// Class ConZ.ReplenishableResourceComponent
// Size: 0x680(Inherited: 0x620) 
struct UReplenishableResourceComponent : public UReplenishableResourceBaseComponent
{
	struct FFillItemWithReplenishableResourceInteractionData _replenishableResourceFillItemInteractionData;  // 0x620(0x40)
	float QuantityPerDrink;  // 0x660(0x4)
	float Salinity;  // 0x664(0x4)
	struct UAkAudioEvent* StartDrinkingAudioEvent;  // 0x668(0x8)
	struct UAkAudioEvent* StopDrinkingAudioEvent;  // 0x670(0x8)
	float QuantityPerWash;  // 0x678(0x4)
	float WashDuration;  // 0x67C(0x4)

}; 



// Class ConZ.ServerInfoWidget
// Size: 0x3A8(Inherited: 0x260) 
struct UServerInfoWidget : public UUserWidget
{
	char pad_608[72];  // 0x260(0x48)
	struct FServerInfo _serverInfo;  // 0x2A8(0x50)
	int32_t FontSize;  // 0x2F8(0x4)
	char pad_764[12];  // 0x2FC(0xC)
	struct UAkAudioEvent* ClickSound;  // 0x308(0x8)
	struct UButton* DeleteServerButton;  // 0x310(0x8)
	struct UButton* Button_1;  // 0x318(0x8)
	struct UTextBlock* NameText;  // 0x320(0x8)
	struct UTextBlock* PingText;  // 0x328(0x8)
	struct UTextBlock* PlayersText;  // 0x330(0x8)
	struct UTextBlock* PasswordText;  // 0x338(0x8)
	struct UTextBlock* TimeText;  // 0x340(0x8)
	struct UTextBlock* ModeText;  // 0x348(0x8)
	struct UTextBlock* VersionText;  // 0x350(0x8)
	struct UTextBlock* FriendsText;  // 0x358(0x8)
	struct UThrobber* Throbber_1;  // 0x360(0x8)
	struct UImage* Image_1;  // 0x368(0x8)
	struct UImage* Image_2;  // 0x370(0x8)
	struct UImage* Image_3;  // 0x378(0x8)
	struct UImage* Image_4;  // 0x380(0x8)
	struct UImage* Image_5;  // 0x388(0x8)
	struct UImage* Image_6;  // 0x390(0x8)
	struct UImage* Image_7;  // 0x398(0x8)
	struct UImage* Image_8;  // 0x3A0(0x8)

	void OnDeleteClicked(); // Function ConZ.ServerInfoWidget.OnDeleteClicked
	void OnClickedButton_1(); // Function ConZ.ServerInfoWidget.OnClickedButton_1
}; 



// Class ConZ.ProjectileShotgun
// Size: 0x448(Inherited: 0x438) 
struct AProjectileShotgun : public AProjectile
{
	AProjectile* projectileClass;  // 0x438(0x8)
	int32_t ShotsCount;  // 0x440(0x4)
	char pad_1092[4];  // 0x444(0x4)

}; 



// Class ConZ.ProjectileStatics
// Size: 0x28(Inherited: 0x28) 
struct UProjectileStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.QuickAccessItemWidget
// Size: 0x3D8(Inherited: 0x260) 
struct UQuickAccessItemWidget : public UUserWidget
{
	struct UImage* _imageWidget;  // 0x260(0x8)
	char pad_616[24];  // 0x268(0x18)
	float DefaultWidth;  // 0x280(0x4)
	float DefaultHeight;  // 0x284(0x4)
	struct FVector2D DefaultPosition;  // 0x288(0x8)
	char pad_656[8];  // 0x290(0x8)
	struct UImage* _additionalIcon;  // 0x298(0x8)
	struct UTextBlock* _additionalText;  // 0x2A0(0x8)
	char pad_680[128];  // 0x2A8(0x80)
	struct USizeBox* _lowerLeftBox;  // 0x328(0x8)
	struct USizeBox* _additionalIconSizeBox;  // 0x330(0x8)
	char pad_824[32];  // 0x338(0x20)
	struct FLinearColor TextColor;  // 0x358(0x10)
	struct FText _itemSlotNumber;  // 0x368(0x18)
	struct FLinearColor _alarmColor;  // 0x380(0x10)
	struct UTextBlock* TextBlockSlotNumber;  // 0x390(0x8)
	struct USizeBox* SizeBox_1;  // 0x398(0x8)
	struct UWidgetAnimation* LowerLeftBoxFadeIn;  // 0x3A0(0x8)
	struct UWidgetAnimation* LowerLeftBoxFadeOut;  // 0x3A8(0x8)
	struct UWidgetAnimation* BlinkingBackground;  // 0x3B0(0x8)
	struct UWidgetAnimation* AdditionalIconFadeIn;  // 0x3B8(0x8)
	struct UWidgetAnimation* AdditionalIconFadeOut;  // 0x3C0(0x8)
	struct UWidgetAnimation* ShowLowerLeftBoxAnimation;  // 0x3C8(0x8)
	struct UWidgetAnimation* ShowAdditionalIconAnimation;  // 0x3D0(0x8)

	void OnItemDestroyed(struct AActor* itemActor); // Function ConZ.QuickAccessItemWidget.OnItemDestroyed
	struct FEventReply OnImageWidgetMouseButtonDown(struct FGeometry inGeometry, struct FPointerEvent& InMouseEvent); // Function ConZ.QuickAccessItemWidget.OnImageWidgetMouseButtonDown
}; 



// Class ConZ.QuickAccessManager
// Size: 0x120(Inherited: 0x28) 
struct UQuickAccessManager : public UObject
{
	char pad_40[248];  // 0x28(0xF8)

}; 



// Class ConZ.Rabbit2AIController
// Size: 0x3D0(Inherited: 0x3C0) 
struct ARabbit2AIController : public ASimpleAnimalAIController
{
	float MoveSegment;  // 0x3C0(0x4)
	float MovementPauseMinTime;  // 0x3C4(0x4)
	float MovementPauseMaxTime;  // 0x3C8(0x4)
	float AngleOffset;  // 0x3CC(0x4)

	void Wander(); // Function ConZ.Rabbit2AIController.Wander
}; 



// Class ConZ.RadioTrack
// Size: 0x48(Inherited: 0x30) 
struct URadioTrack : public UDataAsset
{
	struct UAkAudioEvent* audio;  // 0x30(0x8)
	float Duration;  // 0x38(0x4)
	struct FName TrackName;  // 0x3C(0x8)
	char pad_68[4];  // 0x44(0x4)

}; 



// Class ConZ.RadioCategoryShuffle
// Size: 0x58(Inherited: 0x40) 
struct URadioCategoryShuffle : public URadioCategory
{
	char pad_64_1 : 7;  // 0x40(0x1)
	bool _canTracksRepeat : 1;  // 0x40(0x1)
	char pad_65[7];  // 0x41(0x7)
	struct TArray<struct URadioTrack*> _tracksAlreadyPlayed;  // 0x48(0x10)

}; 



// Class ConZ.RainCollectionManager
// Size: 0x138(Inherited: 0xB0) 
struct URainCollectionManager : public UActorComponent
{
	char pad_176[136];  // 0xB0(0x88)

}; 



// Class ConZ.RangedResourceConsumerComponent
// Size: 0xF0(Inherited: 0xC8) 
struct URangedResourceConsumerComponent : public UItemComponent
{
	char pad_200[24];  // 0xC8(0x18)
	UGameResourceType* _repResourceType;  // 0xE0(0x8)
	float _repResourceAmount;  // 0xE8(0x4)
	float _repRequiredResourceAmount;  // 0xEC(0x4)

	void OnRep_ResourceType(); // Function ConZ.RangedResourceConsumerComponent.OnRep_ResourceType
	void OnRep_ResourceAmount(); // Function ConZ.RangedResourceConsumerComponent.OnRep_ResourceAmount
	void OnRep_RequiredResourceAmount(); // Function ConZ.RangedResourceConsumerComponent.OnRep_RequiredResourceAmount
}; 



// Class ConZ.RangedResourceConsumerComponentMultipleProviders
// Size: 0xF0(Inherited: 0xF0) 
struct URangedResourceConsumerComponentMultipleProviders : public URangedResourceConsumerComponent
{

}; 



// Class ConZ.VoteTopic_SetTimeOfDay
// Size: 0x50(Inherited: 0x48) 
struct UVoteTopic_SetTimeOfDay : public UVoteTopic
{
	char pad_72[8];  // 0x48(0x8)

}; 



// Class ConZ.RangedResourceConsumerComponentSingleProvider
// Size: 0xF0(Inherited: 0xF0) 
struct URangedResourceConsumerComponentSingleProvider : public URangedResourceConsumerComponent
{

}; 



// Class ConZ.RangedResourceConsumerEntityComponentSave
// Size: 0x70(Inherited: 0x28) 
struct URangedResourceConsumerEntityComponentSave : public UObject
{
	UGameResourceType* ResourceType;  // 0x28(0x8)
	float ResourceAmount;  // 0x30(0x4)
	float RequiredResourceAmount;  // 0x34(0x4)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool ResourceUsageEnabled : 1;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)
	struct FEntityComponentId ResourceSupplierId;  // 0x40(0x10)
	struct TArray<struct FEntityComponentId> RegisteredProviders;  // 0x50(0x10)
	struct TArray<struct FConnectionSaveData> Connections;  // 0x60(0x10)

}; 



// Class ConZ.RangedResourceConsumerEntityComponentStateSingleProvider
// Size: 0x70(Inherited: 0x70) 
struct URangedResourceConsumerEntityComponentStateSingleProvider : public URangedResourceConsumerEntityComponentSave
{

}; 



// Class ConZ.RangedResourceConsumerEntityComponentSetupSingleProvider
// Size: 0x68(Inherited: 0x68) 
struct URangedResourceConsumerEntityComponentSetupSingleProvider : public URangedResourceConsumerEntityComponentSetup
{

}; 



// Class ConZ.RangedResourceProviderEntityComponentSave
// Size: 0x60(Inherited: 0x28) 
struct URangedResourceProviderEntityComponentSave : public UObject
{
	UGameResourceType* ResourceType;  // 0x28(0x8)
	float ResourceAmount;  // 0x30(0x4)
	float AvailableResourceAmount;  // 0x34(0x4)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool ResourceUsageEnabled : 1;  // 0x38(0x1)
	char pad_57[7];  // 0x39(0x7)
	struct FEntityComponentId ResourceSupplierId;  // 0x40(0x10)
	struct TArray<struct FConnectionSaveData> Connections;  // 0x50(0x10)

}; 



// Class ConZ.RangedResourceProviderEntityComponentSetup
// Size: 0x68(Inherited: 0x48) 
struct URangedResourceProviderEntityComponentSetup : public UEntityComponentSetup
{
	UGameResourceType* ResourceType;  // 0x48(0x8)
	float ResourceAmount;  // 0x50(0x4)
	char pad_84_1 : 7;  // 0x54(0x1)
	bool AutoFindResourceSupplier : 1;  // 0x54(0x1)
	char pad_85[3];  // 0x55(0x3)
	struct FName ResourceSupplierName;  // 0x58(0x8)
	char pad_96_1 : 7;  // 0x60(0x1)
	bool MirrorResourceSupplierResources : 1;  // 0x60(0x1)
	char pad_97[7];  // 0x61(0x7)

}; 



// Class ConZ.RangedResourceProviderEntityComponentContinousAmountSetup
// Size: 0x68(Inherited: 0x68) 
struct URangedResourceProviderEntityComponentContinousAmountSetup : public URangedResourceProviderEntityComponentSetup
{

}; 



// Class ConZ.RecastNavMesh_Humanoids
// Size: 0x4D8(Inherited: 0x4D8) 
struct ARecastNavMesh_Humanoids : public ARecastNavMesh
{

}; 



// Class ConZ.RefrigeratorItem
// Size: 0xA30(Inherited: 0xA20) 
struct ARefrigeratorItem : public AChestItem
{
	struct URangedResourceConsumerComponentMultipleProviders* _rangedResourceConsumerComponent;  // 0xA20(0x8)
	char pad_2600[8];  // 0xA28(0x8)

}; 



// Class ConZ.RegularDoorStatic
// Size: 0x500(Inherited: 0x4F0) 
struct ARegularDoorStatic : public ADoor
{
	struct FRotator _openRotation;  // 0x4E8(0xC)
	struct FRotator _closedRotation;  // 0x4F4(0xC)

}; 



// Class ConZ.RemoteSensorItemState
// Size: 0x100(Inherited: 0x100) 
struct URemoteSensorItemState : public UItemState
{

}; 



// Class ConZ.TraderForPlayerAndDepotItemResponse
// Size: 0x30(Inherited: 0x28) 
struct UTraderForPlayerAndDepotItemResponse : public UPlayerRpcChannelServerResponse
{
	struct ATrader* _payload;  // 0x28(0x8)

}; 



// Class ConZ.RemoteSensorRegistry
// Size: 0x48(Inherited: 0x28) 
struct URemoteSensorRegistry : public UObject
{
	char pad_40[32];  // 0x28(0x20)

}; 



// Class ConZ.WeaponActionUnloadAmmoSequence
// Size: 0x50(Inherited: 0x28) 
struct UWeaponActionUnloadAmmoSequence : public UWeaponAction
{
	struct FBodyWeaponAnimation Animations;  // 0x28(0x10)
	char pad_56_1 : 7;  // 0x38(0x1)
	bool CanBeInterrupted : 1;  // 0x38(0x1)
	char pad_57[23];  // 0x39(0x17)

	void SetNextMontageSectionFromPrevious(struct FName previousSection, struct FName NextSection); // Function ConZ.WeaponActionUnloadAmmoSequence.SetNextMontageSectionFromPrevious
	void SetNextMontageSection(struct FName NextSection); // Function ConZ.WeaponActionUnloadAmmoSequence.SetNextMontageSection
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionUnloadAmmoSequence.OnMontageEnded
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionUnloadAmmoSequence.OnMontageBlendingOutStarted
	int32_t GetAmmoCount(); // Function ConZ.WeaponActionUnloadAmmoSequence.GetAmmoCount
	struct UAnimMontage* GetActiveAnimationWeapon(); // Function ConZ.WeaponActionUnloadAmmoSequence.GetActiveAnimationWeapon
	struct UAnimMontage* GetActiveAnimationBody(); // Function ConZ.WeaponActionUnloadAmmoSequence.GetActiveAnimationBody
	float Execute(int32_t AmmoCount); // Function ConZ.WeaponActionUnloadAmmoSequence.Execute
	void End(bool Regular); // Function ConZ.WeaponActionUnloadAmmoSequence.End
	bool CanInterrupt(); // Function ConZ.WeaponActionUnloadAmmoSequence.CanInterrupt
	bool CanExecute(); // Function ConZ.WeaponActionUnloadAmmoSequence.CanExecute
}; 



// Class ConZ.RepairableItemTag
// Size: 0x68(Inherited: 0x30) 
struct URepairableItemTag : public UBaseItemTag
{
	struct FRepairableParams Params;  // 0x30(0x38)

}; 



// Class ConZ.RepairStatics
// Size: 0x28(Inherited: 0x28) 
struct URepairStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.RepairToolItemTag
// Size: 0x88(Inherited: 0x30) 
struct URepairToolItemTag : public UBaseItemTag
{
	struct FRepairToolItemParams Params;  // 0x30(0x58)

}; 



// Class ConZ.ReplicatedEffectsActor
// Size: 0x228(Inherited: 0x220) 
struct AReplicatedEffectsActor : public AActor
{
	float _lifeSpan;  // 0x220(0x4)
	char pad_548[4];  // 0x224(0x4)

}; 



// Class ConZ.RequestMinigameToolsRequest
// Size: 0x40(Inherited: 0x28) 
struct URequestMinigameToolsRequest : public UPlayerRpcChannelServerRequest
{
	char pad_40[24];  // 0x28(0x18)

}; 



// Class ConZ.ResourceIndicatorWidget
// Size: 0x270(Inherited: 0x260) 
struct UResourceIndicatorWidget : public UUserWidget
{
	char pad_608[16];  // 0x260(0x10)

	float GetResourceAmountRatio(); // Function ConZ.ResourceIndicatorWidget.GetResourceAmountRatio
}; 



// Class ConZ.RespawnSettings
// Size: 0xB8(Inherited: 0x30) 
struct URespawnSettings : public UDataAsset
{
	char pad_48[24];  // 0x30(0x18)
	struct FRespawnParameters parameters;  // 0x48(0x6C)
	char pad_180[4];  // 0xB4(0x4)

}; 



// Class ConZ.SentryAIController2
// Size: 0x728(Inherited: 0x328) 
struct ASentryAIController2 : public AAIController
{
	char pad_808[184];  // 0x328(0xB8)
	char pad_992_1 : 7;  // 0x3E0(0x1)
	bool _canHear : 1;  // 0x3E0(0x1)
	char pad_993_1 : 7;  // 0x3E1(0x1)
	bool _canSee : 1;  // 0x3E1(0x1)
	char pad_994[6];  // 0x3E2(0x6)
	struct UAISenseConfig_Sight* _currentSightSenseConfig;  // 0x3E8(0x8)
	struct UAISenseConfig_Hearing* _currentHearingSenseConfig;  // 0x3F0(0x8)
	struct UAISenseConfig_Sight* _sightSenseConfigPatrolling;  // 0x3F8(0x8)
	struct UAISenseConfig_Sight* _sightSenseConfigAlerted;  // 0x400(0x8)
	struct UAISenseConfig_Sight* _sightSenseConfigCombat;  // 0x408(0x8)
	struct UAISenseConfig_Hearing* _hearingSenseConfigPatrolling;  // 0x410(0x8)
	struct UAISenseConfig_Hearing* _hearingSenseConfigAlerted;  // 0x418(0x8)
	struct UAISenseConfig_Hearing* _hearingSenseConfigCombat;  // 0x420(0x8)
	float _spottingTimeDecayMultiplier;  // 0x428(0x4)
	float _forgetKnownEnemyTime;  // 0x42C(0x4)
	int32_t _noiseStimuliBeforeInstantlyLocatingCharacter;  // 0x430(0x4)
	char pad_1076[4];  // 0x434(0x4)
	struct TArray<struct FName> _specialNoiseTags;  // 0x438(0x10)
	float _timeUntilNoiseStimuliCounterReset;  // 0x448(0x4)
	char pad_1100[12];  // 0x44C(0xC)
	float _threatLevelAccumulationMultiplier;  // 0x458(0x4)
	float _onHearNoiseThreatLevelIncrease;  // 0x45C(0x4)
	float _onDamageTakeThreatLevelIncrease;  // 0x460(0x4)
	char pad_1124[4];  // 0x464(0x4)
	float _switchTargetCharacterTime;  // 0x468(0x4)
	struct FDetectionDelayTimerData _detectionDelayTimerData;  // 0x46C(0x10)
	float _distanceWhenConsideredCharacterEnteredHotZone;  // 0x47C(0x4)
	float _maxDistanceWhenTemporaryPointIsConsideredTooClose;  // 0x480(0x4)
	int32_t _temporaryPatrolPointVisitsUntilDeleted;  // 0x484(0x4)
	char pad_1160[4];  // 0x488(0x4)
	float _checkSurroundingsTime;  // 0x48C(0x4)
	char pad_1168[4];  // 0x490(0x4)
	char pad_1172_1 : 7;  // 0x494(0x1)
	bool _shouldRotateDuringCheck : 1;  // 0x494(0x1)
	char pad_1173[3];  // 0x495(0x3)
	float _checkSurroundingsAngle;  // 0x498(0x4)
	char pad_1180[12];  // 0x49C(0xC)
	float _investigatingLocationOverallTime;  // 0x4A8(0x4)
	char pad_1196[4];  // 0x4AC(0x4)
	float _investigatingLocationTime;  // 0x4B0(0x4)
	char pad_1204[4];  // 0x4B4(0x4)
	float _investigatingBuildingTime;  // 0x4B8(0x4)
	char pad_1212[36];  // 0x4BC(0x24)
	float _guardLocationTime;  // 0x4E0(0x4)
	char pad_1252[4];  // 0x4E4(0x4)
	float _guardLocationSwitchFocusTime;  // 0x4E8(0x4)
	char pad_1260[36];  // 0x4EC(0x24)
	float _enemySpottedWarningTime;  // 0x510(0x4)
	char pad_1300[4];  // 0x514(0x4)
	float _maxTolerance;  // 0x518(0x4)
	char pad_1308[4];  // 0x51C(0x4)
	float _enemySpottedOutOfSightTimeLimit;  // 0x520(0x4)
	char pad_1316[8];  // 0x524(0x8)
	float _distanceWhenConsideredCharacterLeavingHotZone;  // 0x52C(0x4)
	float _freezeCheckTime;  // 0x530(0x4)
	float _freezeCheckToleranceDrainMultiplier;  // 0x534(0x4)
	int32_t _numberOfWarningShots;  // 0x538(0x4)
	char pad_1340[4];  // 0x53C(0x4)
	float _raiseHandsCheckTime;  // 0x540(0x4)
	float _raiseHandsCheckToleranceDrainMultiplier;  // 0x544(0x4)
	float _walkAwayCheckToleranceDrainMultiplier;  // 0x548(0x4)
	float _movingToHotZoneToleranceDrainMultiplier;  // 0x54C(0x4)
	float _minMovingToHotZoneRange;  // 0x550(0x4)
	float _otherToleranceDrainMultiplier;  // 0x554(0x4)
	float _minimumAlertedTime;  // 0x558(0x4)
	char pad_1372[4];  // 0x55C(0x4)
	float _observeEnemyMovementTime;  // 0x560(0x4)
	char pad_1380[4];  // 0x564(0x4)
	float _observeEnemyMovementThreatLevelIncreasePerStateEntry;  // 0x568(0x4)
	float _observeEnemyMovementOpenFireThreshold;  // 0x56C(0x4)
	char pad_1392[12];  // 0x570(0xC)
	float _beginShootingTime;  // 0x57C(0x4)
	char pad_1408[8];  // 0x580(0x8)
	struct TArray<struct FSentryCombatBehaviorMode> _sentryCombatBehaviorModes;  // 0x588(0x10)
	char pad_1432[4];  // 0x598(0x4)
	float _combatBehaviorModeIncreaseTime;  // 0x59C(0x4)
	char pad_1440[4];  // 0x5A0(0x4)
	float _combatBehaviorModeTimeIncreasePerDamageTaken;  // 0x5A4(0x4)
	float _combatBehaviorModeDecreaseTime;  // 0x5A8(0x4)
	char pad_1452[4];  // 0x5AC(0x4)
	float _combatSwitchVariationTimeMin;  // 0x5B0(0x4)
	float _combatSwitchVariationTimeMax;  // 0x5B4(0x4)
	char pad_1464[8];  // 0x5B8(0x8)
	float _combatModeOnEnterCombatSwitchVariationTimeElapsedTimePercentage;  // 0x5C0(0x4)
	float _maxFireRateTime;  // 0x5C4(0x4)
	char pad_1480[4];  // 0x5C8(0x4)
	float _fireRateAccumulationSpeed;  // 0x5CC(0x4)
	float _startingHighFireRate;  // 0x5D0(0x4)
	float _highFireRateSpreadMultiplier;  // 0x5D4(0x4)
	float _highFireRateInitialAttackDelay;  // 0x5D8(0x4)
	char pad_1500[4];  // 0x5DC(0x4)
	float _highPrecisionShotAimTime;  // 0x5E0(0x4)
	float _highPrecisionShotCooldownTime;  // 0x5E4(0x4)
	float _grenadeLaunchMinDistance;  // 0x5E8(0x4)
	float _grenadeLaunchPredictionVariationMin;  // 0x5EC(0x4)
	float _grenadeLaunchPredictionVariationMax;  // 0x5F0(0x4)
	float _grenadeLaunchAimTime;  // 0x5F4(0x4)
	int32_t _grenadeLaunchAmountMax;  // 0x5F8(0x4)
	char pad_1532[4];  // 0x5FC(0x4)
	float _grenadeLaunchPauseBetweenShotsTime;  // 0x600(0x4)
	char pad_1540[4];  // 0x604(0x4)
	float _grenadeLaunchCooldownTime;  // 0x608(0x4)
	char pad_1548[4];  // 0x60C(0x4)
	float _combatMoveCloserDistance;  // 0x610(0x4)
	float _combatDistance;  // 0x614(0x4)
	char pad_1560[12];  // 0x618(0xC)
	int32_t _consecutiveMeleeAttacksNeededToDropGrenade;  // 0x624(0x4)
	char pad_1576[4];  // 0x628(0x4)
	float _combatNoSightTime;  // 0x62C(0x4)
	float _searchForEnemyAfterLostStimulusTime;  // 0x630(0x4)
	float _combatLostSightInvestigateLocationTime;  // 0x634(0x4)
	char pad_1592[4];  // 0x638(0x4)
	float _distanceFromActorWhenInvestigationLocationIsChanged;  // 0x63C(0x4)
	float _relocatingAngle;  // 0x640(0x4)
	float _relocatingRadius;  // 0x644(0x4)
	float _destroyingVehicleGiveUpTime;  // 0x648(0x4)
	char pad_1612[32];  // 0x64C(0x20)
	float _maximumOperatingRadius;  // 0x66C(0x4)
	char pad_1648[12];  // 0x670(0xC)
	float _movingAwayHalfAngleDegrees;  // 0x67C(0x4)
	float _movingTowardsHalfAngleDegrees;  // 0x680(0x4)
	float _acceptanceRadius;  // 0x684(0x4)
	char pad_1672[16];  // 0x688(0x10)
	float _timeToBeConsideredStuck;  // 0x698(0x4)
	char pad_1692[8];  // 0x69C(0x8)
	float _rotationAngleCosToStartWalking;  // 0x6A4(0x4)
	char pad_1704[128];  // 0x6A8(0x80)

	void SensingComponent_OnSensePawn(struct TArray<struct AActor*>& actorsPercepted); // Function ConZ.SentryAIController2.SensingComponent_OnSensePawn
}; 



// Class ConZ.RewardItemWidget
// Size: 0x270(Inherited: 0x260) 
struct URewardItemWidget : public UUserWidget
{
	struct UImage* _bulletImage;  // 0x260(0x8)
	struct UTextBlock* _rewardItemText;  // 0x268(0x8)

}; 



// Class ConZ.RiflesSkill
// Size: 0xF0(Inherited: 0xF0) 
struct URiflesSkill : public URangedWeaponsSkill
{

}; 



// Class ConZ.SearchBox
// Size: 0x2E0(Inherited: 0x260) 
struct USearchBox : public UUserWidget
{
	char pad_608[64];  // 0x260(0x40)
	char pad_672_1 : 7;  // 0x2A0(0x1)
	bool PreviewSelectedState : 1;  // 0x2A0(0x1)
	char pad_673[7];  // 0x2A1(0x7)
	struct UEditableText* _editBox;  // 0x2A8(0x8)
	struct UWidgetSwitcher* _backgroundSwitcher;  // 0x2B0(0x8)
	struct UClearSearchButton* _clearSearchButton;  // 0x2B8(0x8)
	char pad_704[32];  // 0x2C0(0x20)

	void TextChanged(struct FText& Text); // Function ConZ.SearchBox.TextChanged
}; 



// Class ConZ.SearchItemDataAsset
// Size: 0x78(Inherited: 0x30) 
struct USearchItemDataAsset : public UDataAsset
{
	struct FText Caption;  // 0x30(0x18)
	float Duration;  // 0x48(0x4)
	char pad_76[4];  // 0x4C(0x4)
	struct TArray<struct FSearchPerItemData> SearchData;  // 0x50(0x10)
	struct UAkAudioEvent* StartSearchAudioEvent;  // 0x60(0x8)
	struct UAkAudioEvent* StopSearchAudioEvent;  // 0x68(0x8)
	uint8_t  noiseLevel;  // 0x70(0x1)
	char pad_113[7];  // 0x71(0x7)

}; 



// Class ConZ.SearchGroundObjective
// Size: 0x340(Inherited: 0x320) 
struct ASearchGroundObjective : public AObjective
{
	struct TArray<AItem*> _itemToSearch;  // 0x320(0x10)
	int32_t _itemAmount;  // 0x330(0x4)
	char pad_820[12];  // 0x334(0xC)

}; 



// Class ConZ.SedentaryNPCBackgroundInteraction
// Size: 0xA0(Inherited: 0x28) 
struct USedentaryNPCBackgroundInteraction : public UObject
{
	uint8_t  _backgroundInteractionType;  // 0x28(0x1)
	char pad_41[3];  // 0x29(0x3)
	int32_t _priority;  // 0x2C(0x4)
	float _cooldownTime;  // 0x30(0x4)
	char pad_52_1 : 7;  // 0x34(0x1)
	bool _canEverTick : 1;  // 0x34(0x1)
	char pad_53[3];  // 0x35(0x3)
	struct FFloatRange _newBackgroundInteractionInterval;  // 0x38(0x10)
	char pad_72[16];  // 0x48(0x10)
	struct TArray<struct FSedentaryNPCHeadAnimationAndAudio> _animationVariationsBegin;  // 0x58(0x10)
	struct TArray<struct FSedentaryNPCHeadAnimationAndAudio> _animationVariationsTick;  // 0x68(0x10)
	struct TArray<struct FSedentaryNPCHeadAnimationAndAudio> _animationVariationsEnd;  // 0x78(0x10)
	struct TArray<struct FSedentaryNPCHeadAnimationAndAudio> _animationVariationsOneShot;  // 0x88(0x10)
	struct UAkAudioEvent* _stopOwningPawnAudioEvent;  // 0x98(0x8)

	void NetMulticast_PlayBackgroundInteraction(int32_t animationAudioPairIndex, uint8_t  playType); // Function ConZ.SedentaryNPCBackgroundInteraction.NetMulticast_PlayBackgroundInteraction
}; 



// Class ConZ.SedentaryNPCHeadAnimInstance
// Size: 0x400(Inherited: 0x2C0) 
struct USedentaryNPCHeadAnimInstance : public UAnimInstance
{
	struct TArray<struct FName> _updateableBones;  // 0x2C0(0x10)
	struct TMap<struct FName, struct FTransform> _bonesWithUpdateableTransforms;  // 0x2D0(0x50)
	struct UAnimSequenceBase* _faceIdleAnimation;  // 0x320(0x8)
	struct FName _headBoneName;  // 0x328(0x8)
	struct FRotator _headFollowingRotation;  // 0x330(0xC)
	char pad_828[68];  // 0x33C(0x44)
	struct FVector _animationHeadScale;  // 0x380(0xC)
	char pad_908[32];  // 0x38C(0x20)
	float _eyesYawCurveValue;  // 0x3AC(0x4)
	float _eyesPitchCurveValue;  // 0x3B0(0x4)
	char pad_948[68];  // 0x3B4(0x44)
	float _blinkCurveValue;  // 0x3F8(0x4)
	char pad_1020[4];  // 0x3FC(0x4)

}; 



// Class ConZ.SelectionOverlayWidget
// Size: 0x2E0(Inherited: 0x260) 
struct USelectionOverlayWidget : public UUserWidget
{
	char pad_608[72];  // 0x260(0x48)
	struct UImage* _solidShown;  // 0x2A8(0x8)
	struct UImage* _gradientShown;  // 0x2B0(0x8)
	struct UImage* _solidSelected;  // 0x2B8(0x8)
	struct UImage* _gradientSelected;  // 0x2C0(0x8)
	struct FDataTableRowHandle _highlightColorRef;  // 0x2C8(0x10)
	float _solidWidth;  // 0x2D8(0x4)
	char pad_732[4];  // 0x2DC(0x4)

}; 



// Class ConZ.SentryMovementComponent
// Size: 0xC40(Inherited: 0xC10) 
struct USentryMovementComponent : public UConZCharacterMovementComponent
{
	struct UCurveFloat* MaxRotationRateCurve;  // 0xC08(0x8)
	float RotationInterpolationSpeed;  // 0xC10(0x4)
	char pad_3100_1 : 7;  // 0xC1C(0x1)
	bool CorrectServerReceivedZ : 1;  // 0xC14(0x1)
	char pad_3101[35];  // 0xC1D(0x23)

}; 



// Class ConZ.SentrySpawner2
// Size: 0x298(Inherited: 0x220) 
struct ASentrySpawner2 : public AActor
{
	float ActivationDistance;  // 0x220(0x4)
	char pad_548[4];  // 0x224(0x4)
	ASentry2* SentryClass;  // 0x228(0x8)
	struct TArray<struct FSentryPatrolPoint> PatrolPoints;  // 0x230(0x10)
	struct UBillboardComponent* Sprite;  // 0x240(0x8)
	float SentryOperatingRange;  // 0x248(0x4)
	char pad_588_1 : 7;  // 0x24C(0x1)
	bool ForceUndergroundSentry : 1;  // 0x24C(0x1)
	char pad_589[39];  // 0x24D(0x27)
	char pad_628_1 : 7;  // 0x274(0x1)
	bool _shouldSaveAndLoadSentry : 1;  // 0x274(0x1)
	char pad_629[3];  // 0x275(0x3)
	float _autoSaveTime;  // 0x278(0x4)
	char pad_636[28];  // 0x27C(0x1C)

}; 



// Class ConZ.SkydivingHUD
// Size: 0x260(Inherited: 0x260) 
struct USkydivingHUD : public UUserWidget
{

}; 



// Class ConZ.SentryThirdPersonViewComponent
// Size: 0x100(Inherited: 0xD0) 
struct USentryThirdPersonViewComponent : public UPrisonerViewComponent
{
	struct FName StandingSubviewName;  // 0xD0(0x8)
	struct FName StandingAimingSubviewName;  // 0xD8(0x8)
	char pad_224[32];  // 0xE0(0x20)

}; 



// Class ConZ.SpawnSectorSelectorWidget
// Size: 0x270(Inherited: 0x260) 
struct USpawnSectorSelectorWidget : public UUserWidget
{
	struct UImage* _selectorImage;  // 0x260(0x8)
	struct UImage* _deathImage;  // 0x268(0x8)

	void SelectSector(struct UButton* Button); // Function ConZ.SpawnSectorSelectorWidget.SelectSector
}; 



// Class ConZ.SerializationStatics
// Size: 0x28(Inherited: 0x28) 
struct USerializationStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.ServerBrowser
// Size: 0x450(Inherited: 0x260) 
struct UServerBrowser : public UBaseMenu
{
	char pad_608[112];  // 0x260(0x70)
	struct UVerticalBox* PasswordPopup;  // 0x2D0(0x8)
	struct UEditableTextBox* PasswordPopupTextBox;  // 0x2D8(0x8)
	struct UVerticalBox* MenuVerticalBox;  // 0x2E0(0x8)
	struct UConZStandardButton* Back;  // 0x2E8(0x8)
	struct UEditableTextBox* DirectConnectTextBox;  // 0x2F0(0x8)
	struct UVerticalBox* MainVerticalBox;  // 0x2F8(0x8)
	struct UConZStandardButton* PasswordPopupCancelButton;  // 0x300(0x8)
	struct UConZStandardButton* PasswordPopupOkButton;  // 0x308(0x8)
	struct UConZStandardButton* Refresh;  // 0x310(0x8)
	struct UEditableTextBox* SearchBox;  // 0x318(0x8)
	struct UOverlay* ServersCategoryOverlay;  // 0x320(0x8)
	struct USortByButton* SortByFriends;  // 0x328(0x8)
	struct USortByButton* SortByHost;  // 0x330(0x8)
	struct USortByButton* SortByMode;  // 0x338(0x8)
	struct USortByButton* SortByPassword;  // 0x340(0x8)
	struct USortByButton* SortByPing;  // 0x348(0x8)
	struct USortByButton* SortByPlayers;  // 0x350(0x8)
	struct USortByButton* SortByTime;  // 0x358(0x8)
	struct USortByButton* SortByVersion;  // 0x360(0x8)
	struct UCursedScrollBar* UI_ScrollBar;  // 0x368(0x8)
	struct UCarousel* ServersCategorySwitch2;  // 0x370(0x8)
	struct UCircularThrobber* CircularThrobber_53;  // 0x378(0x8)
	struct UVerticalBox* _messageBoxPanel;  // 0x380(0x8)
	struct UServerInfoWidget* SelectedServer;  // 0x388(0x8)
	char pad_912[40];  // 0x390(0x28)
	struct UConZStandardButton* _lastButton;  // 0x3B8(0x8)
	struct UWidget* _lastWidget;  // 0x3C0(0x8)
	struct UVerticalBox* _serverList;  // 0x3C8(0x8)
	struct UConZStandardButton* _connectButton;  // 0x3D0(0x8)
	char pad_984[104];  // 0x3D8(0x68)
	struct UMessageBox* _serverBrowserMessageBox;  // 0x440(0x8)
	UServerInfoWidget* _serverInfoWidgetClass;  // 0x448(0x8)

	void UpdateList(); // Function ConZ.ServerBrowser.UpdateList
	void OnSearchBoxTextChanged(struct FText& Text); // Function ConZ.ServerBrowser.OnSearchBoxTextChanged
	void OnPasswordPopupTextBoxTextCommitted(struct FText& Text, char ETextCommit CommitMethod); // Function ConZ.ServerBrowser.OnPasswordPopupTextBoxTextCommitted
	void OnDirectConnectTextBoxTextCommitted(struct FText& Text, char ETextCommit CommitMethod); // Function ConZ.ServerBrowser.OnDirectConnectTextBoxTextCommitted
	void OnDirectConnectTextBoxTextChanged(struct FText& Text); // Function ConZ.ServerBrowser.OnDirectConnectTextBoxTextChanged
}; 



// Class ConZ.ServerSettingsMenu
// Size: 0x630(Inherited: 0x628) 
struct UServerSettingsMenu : public UConZSettingsMenu
{
	char pad_1576[8];  // 0x628(0x8)

}; 



// Class ConZ.SharpMeleeWeaponItemTag
// Size: 0x30(Inherited: 0x30) 
struct USharpMeleeWeaponItemTag : public UBaseItemTag
{

}; 



// Class ConZ.ShelterItem
// Size: 0x920(Inherited: 0x910) 
struct AShelterItem : public AItem
{
	char pad_2320_1 : 7;  // 0x910(0x1)
	bool _canBeAddedToInventory : 1;  // 0x910(0x1)
	char pad_2321[15];  // 0x911(0xF)

}; 



// Class ConZ.ShotsFiredTrackerWidget
// Size: 0x268(Inherited: 0x260) 
struct UShotsFiredTrackerWidget : public UUserWidget
{
	struct UTextBlock* _widgetText;  // 0x260(0x8)

}; 



// Class ConZ.TraderSellPanel
// Size: 0x348(Inherited: 0x260) 
struct UTraderSellPanel : public UUserWidget
{
	struct UTabContainer* _cashOrCreditRadioBtn;  // 0x260(0x8)
	struct UVerticalBox* _sellList;  // 0x268(0x8)
	struct UTextBlock* _headerBannerPrisonerCashOnHand;  // 0x270(0x8)
	struct UTextBlock* _headerBannerPrisonerCashInBank;  // 0x278(0x8)
	struct UTextBlock* _prisonerCashOnHand;  // 0x280(0x8)
	struct UTextBlock* _prisonerCashInBank;  // 0x288(0x8)
	struct UTextBlock* _prisonerGoldInBank;  // 0x290(0x8)
	struct UTextBlock* _prisonerFamePoints;  // 0x298(0x8)
	struct UTextBlock* _traderFunds;  // 0x2A0(0x8)
	struct UTextBlock* _saleTotal;  // 0x2A8(0x8)
	struct UTextBlock* _warningMessage;  // 0x2B0(0x8)
	struct UButton* _btnExit;  // 0x2B8(0x8)
	struct UButton* _btnSell;  // 0x2C0(0x8)
	struct UVerticalBox* _messageBoxPanel;  // 0x2C8(0x8)
	UTraderSellListEntry* _sellListEntryWidgetClass;  // 0x2D0(0x8)
	char pad_728[32];  // 0x2D8(0x20)
	struct FText _partialPriceSellText;  // 0x2F8(0x18)
	struct FText _worthlessPriceSellText;  // 0x310(0x18)
	float _sellWarningPopupTextWidth;  // 0x328(0x4)
	char pad_812[4];  // 0x32C(0x4)
	struct UAkAudioEvent* _soundOnButtonHovered;  // 0x330(0x8)
	struct UAkAudioEvent* _soundExitOnClick;  // 0x338(0x8)
	int32_t _cashOrCreditFontSizeUnselected;  // 0x340(0x4)
	int32_t _cashOrCreditFontSizeSelected;  // 0x344(0x4)

	void OnSellClicked(); // Function ConZ.TraderSellPanel.OnSellClicked
	void OnExitClicked(); // Function ConZ.TraderSellPanel.OnExitClicked
	void OnAnyButtonHovered(); // Function ConZ.TraderSellPanel.OnAnyButtonHovered
}; 



// Class ConZ.SimpleTextDropdownEntryWithCheckBox
// Size: 0x2C0(Inherited: 0x2A8) 
struct USimpleTextDropdownEntryWithCheckBox : public USimpleTextDropdownEntry
{
	char pad_680[16];  // 0x2A8(0x10)
	struct USquareCheckbox* _checkBox;  // 0x2B8(0x8)

}; 



// Class ConZ.SkillEventHandler
// Size: 0x30(Inherited: 0x28) 
struct USkillEventHandler : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.SmokableItemComponent
// Size: 0x280(Inherited: 0x1A0) 
struct USmokableItemComponent : public UIgnitableItemComponent
{
	char pad_416[16];  // 0x1A0(0x10)
	UPrisonerBodyCondition_InhalationPoisoning* _typeOfInhalationPoisoning;  // 0x1B0(0x8)
	float _inhalableSubstanceAmount;  // 0x1B8(0x4)
	float _exhaustionRecoveryAmount;  // 0x1BC(0x4)
	struct UTexture2D* _burningIcon;  // 0x1C0(0x8)
	float _minEmissivity;  // 0x1C8(0x4)
	float _maxEmissivity;  // 0x1CC(0x4)
	struct UMaterialInterface* _burningMaterial;  // 0x1D0(0x8)
	float _timeBetweenExhalation;  // 0x1D8(0x4)
	struct FName _itemInHandsSocketName;  // 0x1DC(0x8)
	struct FName _itemEquippedSocketName;  // 0x1E4(0x8)
	char pad_492[20];  // 0x1EC(0x14)
	struct FTransform _offsetWhenEquipped;  // 0x200(0x30)
	char pad_560[80];  // 0x230(0x50)

}; 



// Class ConZ.SnipingSkill
// Size: 0xB8(Inherited: 0xB0) 
struct USnipingSkill : public UIntelligenceSkill
{
	char pad_176[8];  // 0xB0(0x8)

}; 



// Class ConZ.SoundEmitter
// Size: 0x228(Inherited: 0x220) 
struct ASoundEmitter : public AActor
{
	struct UAkAudioEvent* AudioEvent;  // 0x220(0x8)

}; 



// Class ConZ.SoundNotification
// Size: 0x30(Inherited: 0x30) 
struct USoundNotification : public UConZNotification
{

}; 



// Class ConZ.Spline
// Size: 0x230(Inherited: 0x220) 
struct ASpline : public AActor
{
	struct USceneComponent* SceneComponent;  // 0x220(0x8)
	struct USplineComponent* SplineComponent;  // 0x228(0x8)

}; 



// Class ConZ.SoundSpline
// Size: 0x288(Inherited: 0x230) 
struct ASoundSpline : public ASpline
{
	float MinCameraLocationDeltaForUpdate;  // 0x230(0x4)
	float WorldStreamedCheckInterval;  // 0x234(0x4)
	float MaxCameraDistance;  // 0x238(0x4)
	char pad_572[4];  // 0x23C(0x4)
	struct UAkAudioEvent* AudioEvent;  // 0x240(0x8)
	struct UAkAudioEvent* InsideSplineAudioEvent;  // 0x248(0x8)
	struct UAkAudioEvent* OutsideSplineAudioEvent;  // 0x250(0x8)
	char pad_600[48];  // 0x258(0x30)

}; 



// Class ConZ.SplineSnagGeneratedActor
// Size: 0x220(Inherited: 0x220) 
struct ASplineSnagGeneratedActor : public AActor
{

}; 



// Class ConZ.SplineZone
// Size: 0x238(Inherited: 0x230) 
struct ASplineZone : public ASpline
{
	struct UZoneConfigurationDataAsset* configuration;  // 0x230(0x8)

}; 



// Class ConZ.SquadEditor
// Size: 0x348(Inherited: 0x260) 
struct USquadEditor : public UUserWidget
{
	UDropdownMenuSelectionWidget* _dropdownMenuTextureSelectionWidgetClass;  // 0x260(0x8)
	UDropdownMenuSelectionWidget* _dropdownMenuColorSelectionWidgetClass;  // 0x268(0x8)
	struct UUniformGridPanel* BackgroundGrid;  // 0x270(0x8)
	struct UUniformGridPanel* SymbolGrid;  // 0x278(0x8)
	struct UUniformGridPanel* ColorGrid;  // 0x280(0x8)
	struct UDropdownMenuTextureSelectionWidget* BackgroundSelector;  // 0x288(0x8)
	struct UDropdownMenuWidget* BackgroundDropdownMenu;  // 0x290(0x8)
	struct UDropdownMenuTextureSelectionWidget* SymbolSelector;  // 0x298(0x8)
	struct UDropdownMenuWidget* SymbolDropdownMenu;  // 0x2A0(0x8)
	struct UDropdownMenuColorSelectionWidget* BackgroundPrimaryColorSelector;  // 0x2A8(0x8)
	struct UDropdownMenuColorSelectionWidget* BackgroundSecondaryColorSelector;  // 0x2B0(0x8)
	struct UDropdownMenuColorSelectionWidget* BackgroundTertiaryColorSelector;  // 0x2B8(0x8)
	struct UDropdownMenuWidget* ColorDropdownMenu;  // 0x2C0(0x8)
	struct UDropdownMenuColorSelectionWidget* SymbolPrimaryColorSelector;  // 0x2C8(0x8)
	struct UDropdownMenuColorSelectionWidget* SymbolSecondaryColorSelector;  // 0x2D0(0x8)
	struct UDropdownMenuColorSelectionWidget* SymbolTertiaryColorSelector;  // 0x2D8(0x8)
	struct USquadEmblemWidget* UI_SquadEmblem;  // 0x2E0(0x8)
	struct UEditableTextBox* NameTextBox;  // 0x2E8(0x8)
	struct UMultiLineEditableText* MessageTextBox;  // 0x2F0(0x8)
	struct UMultiLineEditableText* InformationTextBox;  // 0x2F8(0x8)
	struct UVerticalBox* InformationBox;  // 0x300(0x8)
	struct UVerticalBox* MessageBoxBox;  // 0x308(0x8)
	struct UVerticalBox* EmblemBox;  // 0x310(0x8)
	struct UButton* AcceptButton;  // 0x318(0x8)
	struct UButton* CancelButton;  // 0x320(0x8)
	struct UImage* Image_2;  // 0x328(0x8)
	char pad_816[24];  // 0x330(0x18)

	void OnTextCommittedNameTextBox(struct FText& Text, char ETextCommit CommitMethod); // Function ConZ.SquadEditor.OnTextCommittedNameTextBox
	void OnTextChangedMessageTextBox(struct FText& Text); // Function ConZ.SquadEditor.OnTextChangedMessageTextBox
	void OnTextChangedInformationTextBox(struct FText& Text); // Function ConZ.SquadEditor.OnTextChangedInformationTextBox
	void OnSymbolClicked(struct UDropdownMenuSelectionWidget* Widget); // Function ConZ.SquadEditor.OnSymbolClicked
	void OnReleasedCancelButton(); // Function ConZ.SquadEditor.OnReleasedCancelButton
	void OnReleasedAcceptButton(); // Function ConZ.SquadEditor.OnReleasedAcceptButton
	void OnEmblemUpdate(struct UDropdownMenuSelectionWidget* Widget); // Function ConZ.SquadEditor.OnEmblemUpdate
	void OnColorClicked(struct UDropdownMenuSelectionWidget* Widget); // Function ConZ.SquadEditor.OnColorClicked
	void OnBackgroundClicked(struct UDropdownMenuSelectionWidget* Widget); // Function ConZ.SquadEditor.OnBackgroundClicked
}; 



// Class ConZ.SquadEmblemWidget
// Size: 0x280(Inherited: 0x260) 
struct USquadEmblemWidget : public UUserWidget
{
	struct UImage* _symbol;  // 0x260(0x8)
	struct UImage* _background;  // 0x268(0x8)
	struct UMaterialInterface* _material;  // 0x270(0x8)
	char pad_632[8];  // 0x278(0x8)

	void SetEmblemData(struct FConZSquadEmblem& Value); // Function ConZ.SquadEmblemWidget.SetEmblemData
	struct FConZSquadEmblem GetEmblemData(); // Function ConZ.SquadEmblemWidget.GetEmblemData
}; 



// Class ConZ.SquadListing
// Size: 0x2E0(Inherited: 0x260) 
struct USquadListing : public UUserWidget
{
	struct UTextBlock* SquadName;  // 0x260(0x8)
	struct UTextBlock* squadRank;  // 0x268(0x8)
	struct UTextBlock* SquadScore;  // 0x270(0x8)
	struct UImage* Highlight;  // 0x278(0x8)
	struct UHorizontalBox* ContentBox;  // 0x280(0x8)
	struct UHorizontalBox* SeparatorBox;  // 0x288(0x8)
	USquadTooltip* _squadTooltipClass;  // 0x290(0x8)
	char pad_664[72];  // 0x298(0x48)

}; 



// Class ConZ.SquadRightPanel
// Size: 0x308(Inherited: 0x260) 
struct USquadRightPanel : public UUserWidget
{
	char pad_608[136];  // 0x260(0x88)
	struct UVerticalBox* RankingBox;  // 0x2E8(0x8)
	USquadListing* _squadListingClass;  // 0x2F0(0x8)
	struct USquadLeftPanel* _squadLeftPanel;  // 0x2F8(0x8)
	char pad_768[8];  // 0x300(0x8)

}; 



// Class ConZ.StartLocationManager
// Size: 0x230(Inherited: 0x220) 
struct AStartLocationManager : public AActor
{
	struct TArray<struct FStartLocationDescription> _startLocationDescriptions;  // 0x220(0x10)

}; 



// Class ConZ.StaticDoorReplicator
// Size: 0x110(Inherited: 0xB0) 
struct UStaticDoorReplicator : public UActorComponent
{
	char pad_176[96];  // 0xB0(0x60)

	void NetMulticast_OnDoorRepDataChanged(int32_t dataVersion, struct FVector doorLocationZeroOrigin, struct FDoorRepData RepData); // Function ConZ.StaticDoorReplicator.NetMulticast_OnDoorRepDataChanged
}; 



// Class ConZ.StaticRadioItem
// Size: 0x920(Inherited: 0x920) 
struct AStaticRadioItem : public ARadioItem
{

}; 



// Class ConZ.StatisticsDetailsWidget
// Size: 0x390(Inherited: 0x260) 
struct UStatisticsDetailsWidget : public UUserWidget
{
	struct UStatisticsSubcategoryTab* _generalSubcategoryTab;  // 0x260(0x8)
	struct UStatisticsSubcategoryTab* _foodSubcategoryTab;  // 0x268(0x8)
	struct UStatisticsSubcategoryTab* _huntingSubcategoryTab;  // 0x270(0x8)
	struct UStatisticsSubcategoryTab* _fishingSubcategoryTab;  // 0x278(0x8)
	struct UStatisticsSubcategoryTab* _travelSubcategoryTab;  // 0x280(0x8)
	struct UStatisticsSubcategoryTab* _metabolismSubcategoryTab;  // 0x288(0x8)
	struct UStatisticsSubcategoryTab* _craftingSubcategoryTab;  // 0x290(0x8)
	struct UStatisticsSubcategoryTab* _combatSubcategoryTab;  // 0x298(0x8)
	struct UStatisticsSubcategoryTab* _eventsSubcategoryTab;  // 0x2A0(0x8)
	struct UWidgetSwitcher* _subcategorySwitcher;  // 0x2A8(0x8)
	char pad_688[152];  // 0x2B0(0x98)
	struct UStatisticsListWidget* _generalStatisticsList;  // 0x348(0x8)
	struct UStatisticsListWidget* _foodStatisticsList;  // 0x350(0x8)
	struct UStatisticsListWidget* _huntingStatisticsList;  // 0x358(0x8)
	struct UStatisticsListWidget* _fishingStatisticsList;  // 0x360(0x8)
	struct UStatisticsListWidget* _travelStatisticsList;  // 0x368(0x8)
	struct UStatisticsListWidget* _metabolismStatisticsList;  // 0x370(0x8)
	struct UStatisticsListWidget* _craftingStatisticsList;  // 0x378(0x8)
	struct UStatisticsListWidget* _combatStatisticsList;  // 0x380(0x8)
	struct UStatisticsListWidget* _eventsStatisticsList;  // 0x388(0x8)

	void OnTravelSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnTravelSubcategoryButtonClicked
	void OnMetabolismSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnMetabolismSubcategoryButtonClicked
	void OnHuntingSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnHuntingSubcategoryButtonClicked
	void OnGeneralSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnGeneralSubcategoryButtonClicked
	void OnFoodSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnFoodSubcategoryButtonClicked
	void OnFishingSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnFishingSubcategoryButtonClicked
	void OnEventsSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnEventsSubcategoryButtonClicked
	void OnCraftingSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnCraftingSubcategoryButtonClicked
	void OnCombatSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnCombatSubcategoryButtonClicked
}; 



// Class ConZ.StatisticsListRow
// Size: 0x278(Inherited: 0x260) 
struct UStatisticsListRow : public UUserWidget
{
	struct UTextBlock* _statNameTextBox;  // 0x260(0x8)
	struct UTextBlock* _statValueTextBox;  // 0x268(0x8)
	struct UTextBlock* _statUnitTextBox;  // 0x270(0x8)

}; 



// Class ConZ.StatisticsListWidget
// Size: 0x288(Inherited: 0x260) 
struct UStatisticsListWidget : public UUserWidget
{
	struct FText _subcategoryName;  // 0x260(0x18)
	struct UTextBlock* _subcategoryTextBox;  // 0x278(0x8)
	struct UScrollBox* _scrollBox;  // 0x280(0x8)

}; 



// Class ConZ.StatisticsPanelWidget
// Size: 0x270(Inherited: 0x260) 
struct UStatisticsPanelWidget : public UBaseMenu
{
	struct UStatisticsDetailsWidget* _survivalDetailsWidget;  // 0x260(0x8)
	struct UConZStandardButton* _backButton;  // 0x268(0x8)

	void CloseMenu(); // Function ConZ.StatisticsPanelWidget.CloseMenu
}; 



// Class ConZ.StatisticsSubcategoryTab
// Size: 0x2A0(Inherited: 0x260) 
struct UStatisticsSubcategoryTab : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UTexture2D* _subcategoryIcon;  // 0x278(0x8)
	struct UImage* _tabSelectionImage;  // 0x280(0x8)
	struct UImage* _subcategoryImage;  // 0x288(0x8)
	struct UTexture2D* _selectedTabTexture;  // 0x290(0x8)
	char pad_664[8];  // 0x298(0x8)

}; 



// Class ConZ.StealthSkill
// Size: 0xB0(Inherited: 0xB0) 
struct UStealthSkill : public UDexteritySkill
{

}; 



// Class ConZ.Wettable
// Size: 0x28(Inherited: 0x28) 
struct UWettable : public UInterface
{

	void SetWaterWeight(float Value); // Function ConZ.Wettable.SetWaterWeight
	float GetWaterWeight(); // Function ConZ.Wettable.GetWaterWeight
	float GetMaxWaterWeight(); // Function ConZ.Wettable.GetMaxWaterWeight
}; 



// Class ConZ.SubtitleWidget
// Size: 0x270(Inherited: 0x260) 
struct USubtitleWidget : public UUserWidget
{
	struct UTextBlock* _subtitle;  // 0x260(0x8)
	struct UOverlay* _subtitleOverlay;  // 0x268(0x8)

}; 



// Class ConZ.SurfaceHardnessData
// Size: 0x88(Inherited: 0x30) 
struct USurfaceHardnessData : public UDataAsset
{
	float DefaultSurfaceHardness;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)
	struct TMap<char EPhysicalSurface, float> SurfaceHardnessMap;  // 0x38(0x50)

}; 



// Class ConZ.SurvivalSkill
// Size: 0xB8(Inherited: 0xB0) 
struct USurvivalSkill : public UIntelligenceSkill
{
	struct FCompassSkillParametersPerSkillLevel NoSkillParameters;  // 0xB0(0x1)
	struct FCompassSkillParametersPerSkillLevel BasicSkillParameters;  // 0xB1(0x1)
	struct FCompassSkillParametersPerSkillLevel MediumSkillParameters;  // 0xB2(0x1)
	struct FCompassSkillParametersPerSkillLevel AdvancedSkillParameters;  // 0xB3(0x1)
	struct FCompassSkillParametersPerSkillLevel AboveAdvancedSkillParameters;  // 0xB4(0x1)
	char pad_181[3];  // 0xB5(0x3)

}; 



// Class ConZ.SurvivalStatsHandler
// Size: 0x298(Inherited: 0x220) 
struct ASurvivalStatsHandler : public AActor
{
	char pad_544[120];  // 0x220(0x78)

}; 



// Class ConZ.SwimmingSkill
// Size: 0xC8(Inherited: 0xC8) 
struct USwimmingSkill : public UConstitutionSkill
{

}; 



// Class ConZ.TabButtonAlertable
// Size: 0xCD8(Inherited: 0xC58) 
struct UTabButtonAlertable : public UTabButton
{
	struct FDataTableRowHandle _alertedTextColorHandle;  // 0xC58(0x10)
	struct FDataTableRowHandle _alertedBackgroundColorHandle;  // 0xC68(0x10)
	float _blinkSpeed;  // 0xC78(0x4)
	char pad_3196[92];  // 0xC7C(0x5C)

}; 



// Class ConZ.TabContainer
// Size: 0x2B8(Inherited: 0x260) 
struct UTabContainer : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct UNamedSlot* _containerContent;  // 0x290(0x8)
	uint8_t  _previous;  // 0x298(0x1)
	uint8_t  _next;  // 0x299(0x1)
	uint8_t  _in;  // 0x29A(0x1)
	char pad_667_1 : 7;  // 0x29B(0x1)
	bool _canWrap : 1;  // 0x29B(0x1)
	char pad_668[28];  // 0x29C(0x1C)

}; 



// Class ConZ.TabElement
// Size: 0x2B0(Inherited: 0x260) 
struct UTabElement : public UUserWidget
{
	struct UWidget* CategoryNameWidget;  // 0x260(0x8)
	char MaxIndex;  // 0x268(0x1)
	char Index;  // 0x269(0x1)
	char pad_618[2];  // 0x26A(0x2)
	struct FVector2D _initialPosition;  // 0x26C(0x8)
	struct FVector2D _oldPosition;  // 0x274(0x8)
	struct FVector2D _newPosition;  // 0x27C(0x8)
	struct FVector2D _initialSize;  // 0x284(0x8)
	struct FVector2D _oldSize;  // 0x28C(0x8)
	struct FVector2D _newSize;  // 0x294(0x8)
	float _oldAlpha;  // 0x29C(0x4)
	float _newAlpha;  // 0x2A0(0x4)
	float _interpolationTime;  // 0x2A4(0x4)
	float _interpolationDuration;  // 0x2A8(0x4)
	char pad_684[4];  // 0x2AC(0x4)

	void Update(bool Up, struct FVector2D Offset); // Function ConZ.TabElement.Update
	int32_t GetNextIndex(bool Up); // Function ConZ.TabElement.GetNextIndex
}; 



// Class ConZ.TabMenuReborn
// Size: 0x320(Inherited: 0x260) 
struct UTabMenuReborn : public UUserWidget
{
	struct UTabModeTabsContainer* _tabModeTabsContainer;  // 0x260(0x8)
	struct UOverlay* _centralSwitcher;  // 0x268(0x8)
	struct UOverlay* _leftSwitcher;  // 0x270(0x8)
	struct UOverlay* _rightSwitcher;  // 0x278(0x8)
	struct UVerticalBox* _messageBoxPanel;  // 0x280(0x8)
	struct UInventoryPanelThirdIteration* _inventoryLeftPanel;  // 0x288(0x8)
	struct UHandPanel3* _inventoryRightPanel;  // 0x290(0x8)
	struct UInventoryCentralPanel* _inventoryCentralPanel;  // 0x298(0x8)
	struct UCraftingRecipeDescriptionPanel* _craftingRecipeDescriptionPanel;  // 0x2A0(0x8)
	struct UCraftingPanel* _craftingPanel;  // 0x2A8(0x8)
	struct UBuildingPanel* _buildingPanel;  // 0x2B0(0x8)
	struct UCentralBuildingPanel* _centralBuildingPanel;  // 0x2B8(0x8)
	struct UMetabolismLeftPanel* _metabolismLeftPanel;  // 0x2C0(0x8)
	struct UMetabolismRightPanel* _metabolismRightPanel;  // 0x2C8(0x8)
	struct UMetabolismTreatmentItemsPanel* _metabolismTreatmentItemsPanel;  // 0x2D0(0x8)
	struct UJournalMissionPanel* _journalMissionPanel;  // 0x2D8(0x8)
	struct UJournalObjectiveContainer* _journalObjectiveContainer;  // 0x2E0(0x8)
	struct USquadLeftPanel* _squadLeftPanel;  // 0x2E8(0x8)
	struct USquadRightPanel* _squadRightPanel;  // 0x2F0(0x8)
	struct UGameEventLeftPanel* _gameEventLeftPanel;  // 0x2F8(0x8)
	struct UGameEventRightPanel* _gameEventRightPanel;  // 0x300(0x8)
	struct UCookingPanelWidget* _cookingPanel;  // 0x308(0x8)
	struct USquadEditor* _squadEditor;  // 0x310(0x8)
	struct UMessageBox* _messageBox;  // 0x318(0x8)

}; 



// Class ConZ.TabModeTab
// Size: 0x518(Inherited: 0x260) 
struct UTabModeTab : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct USizeBox* _mainSizeBox;  // 0x278(0x8)
	struct UImage* _backgroundImage;  // 0x280(0x8)
	struct UImage* _icon;  // 0x288(0x8)
	struct UTextBlock* _titleText;  // 0x290(0x8)
	struct UTextBlock* _hotkeyText;  // 0x298(0x8)
	struct FText _title;  // 0x2A0(0x18)
	struct FText _hotkey;  // 0x2B8(0x18)
	struct FSlateBrush _activeIcon;  // 0x2D0(0x88)
	struct FSlateBrush _inactiveIcon;  // 0x358(0x88)
	struct FSlateBrush _backgroundTextureActive;  // 0x3E0(0x88)
	struct FSlateBrush _backgroundTextureInactive;  // 0x468(0x88)
	struct FLinearColor _inactiveUnalertedColor;  // 0x4F0(0x10)
	struct FLinearColor _inactiveAlertedColor;  // 0x500(0x10)
	float _alertBlinkTime;  // 0x510(0x4)
	char pad_1300[2];  // 0x514(0x2)
	uint8_t  _tabMode;  // 0x516(0x1)
	char pad_1303[1];  // 0x517(0x1)

}; 



// Class ConZ.TacticsSkill
// Size: 0x160(Inherited: 0xB0) 
struct UTacticsSkill : public UIntelligenceSkill
{
	char pad_176[80];  // 0xB0(0x50)
	float _updateTime;  // 0x100(0x4)
	float _serverUpdateTime;  // 0x104(0x4)
	float _noSkillDetectionRange;  // 0x108(0x4)
	float _basicDetectionRange;  // 0x10C(0x4)
	float _mediumDetectionRange;  // 0x110(0x4)
	float _advancedDetectionRange;  // 0x114(0x4)
	float _aboveAdvancedDetectionRange;  // 0x118(0x4)
	float _noSkillDetectionTime;  // 0x11C(0x4)
	float _basicDetectionTime;  // 0x120(0x4)
	float _mediumDetectionTime;  // 0x124(0x4)
	float _advancedDetectionTime;  // 0x128(0x4)
	float _aboveAdvancedDetectionTime;  // 0x12C(0x4)
	float _fadeOutTime;  // 0x130(0x4)
	char pad_308[4];  // 0x134(0x4)
	struct UCurveFloat* _detectionTimeDistanceScale;  // 0x138(0x8)
	float _noSkillExperiencePerSecond;  // 0x140(0x4)
	float _basicExperiencePerSecond;  // 0x144(0x4)
	float _mediumExperiencePerSecond;  // 0x148(0x4)
	float _advancedExperiencePerSecond;  // 0x14C(0x4)
	float _tacticsDetectionCurveCoefficient1;  // 0x150(0x4)
	float _tacticsDetectionCurveCoefficient2;  // 0x154(0x4)
	float _tacticsDetectionCurveCoefficient3;  // 0x158(0x4)
	char pad_348[4];  // 0x15C(0x4)

	bool ShouldDetectPrisoner(struct APrisoner* Prisoner); // Function ConZ.TacticsSkill.ShouldDetectPrisoner
	bool IsPrisonerDetected(struct APrisoner* Prisoner); // Function ConZ.TacticsSkill.IsPrisonerDetected
}; 



// Class ConZ.TeamDeathmatchGameEvent
// Size: 0x580(Inherited: 0x560) 
struct ATeamDeathmatchGameEvent : public AGameEventBase
{
	struct FTeamDeathmatchParameters _teamDeathmatchParameters;  // 0x560(0x14)
	char pad_1396[12];  // 0x574(0xC)

	void SetTeamDeathmatchParameters(struct FTeamDeathmatchParameters& Params); // Function ConZ.TeamDeathmatchGameEvent.SetTeamDeathmatchParameters
	void RestrictGameEventArea(); // Function ConZ.TeamDeathmatchGameEvent.RestrictGameEventArea
	struct FTeamDeathmatchParameters GetTeamDeathmatchParameters(); // Function ConZ.TeamDeathmatchGameEvent.GetTeamDeathmatchParameters
}; 



// Class ConZ.TeamDeathmatchLocationMarker
// Size: 0x440(Inherited: 0x418) 
struct ATeamDeathmatchLocationMarker : public AGameEventLocationMarker
{
	struct FTeamDeathmatchParameters TeamDeathmatchParameters;  // 0x418(0x14)
	struct FVector FocusOffset;  // 0x42C(0xC)
	float MinimalRadius;  // 0x438(0x4)
	char pad_1084[4];  // 0x43C(0x4)

}; 



// Class ConZ.TeleportComponent
// Size: 0xF0(Inherited: 0xB0) 
struct UTeleportComponent : public UActorComponent
{
	char pad_176[8];  // 0xB0(0x8)
	struct FTeleportRepData _repData;  // 0xB8(0x30)
	char pad_232[8];  // 0xE8(0x8)

	void Server_ReportClientReadyToFinishTeleport(char RequestID); // Function ConZ.TeleportComponent.Server_ReportClientReadyToFinishTeleport
	void OnRep_Data(); // Function ConZ.TeleportComponent.OnRep_Data
}; 



// Class ConZ.TeleportComponentOwner
// Size: 0x28(Inherited: 0x28) 
struct UTeleportComponentOwner : public UInterface
{

}; 



// Class ConZ.TeleportSubject
// Size: 0x28(Inherited: 0x28) 
struct UTeleportSubject : public UInterface
{

}; 



// Class ConZ.TempPlayerStart
// Size: 0x250(Inherited: 0x250) 
struct ATempPlayerStart : public APlayerStart
{

}; 



// Class ConZ.TextInputWidget
// Size: 0x320(Inherited: 0x260) 
struct UTextInputWidget : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UButton* MainButton;  // 0x278(0x8)
	struct UEditableTextBox* TextBox;  // 0x280(0x8)
	struct UTextBlock* TextBlock_1;  // 0x288(0x8)
	struct USizeBox* TitleSizeBox;  // 0x290(0x8)
	struct USizeBox* InputSizeBox;  // 0x298(0x8)
	struct UImage* InputImage;  // 0x2A0(0x8)
	struct UImage* Image_1;  // 0x2A8(0x8)
	struct UImage* Image_2;  // 0x2B0(0x8)
	int32_t InputFontSize;  // 0x2B8(0x4)
	int32_t TitleFontSize;  // 0x2BC(0x4)
	int32_t TitleFontSizeHighlighted;  // 0x2C0(0x4)
	float TitleWidth;  // 0x2C4(0x4)
	float InputWidth;  // 0x2C8(0x4)
	float Height;  // 0x2CC(0x4)
	struct FText Title;  // 0x2D0(0x18)
	struct FText DefaultValue;  // 0x2E8(0x18)
	float InputPadding;  // 0x300(0x4)
	char EHorizontalAlignment ValueJustification;  // 0x304(0x1)
	char pad_773[3];  // 0x305(0x3)
	struct FLinearColor InputBackgroundColor;  // 0x308(0x10)
	char ETextInputType InputType;  // 0x318(0x1)
	char pad_793[7];  // 0x319(0x7)

	void OnTextBoxTextCommitted(struct FText& Text, char ETextCommit CommitMethod); // Function ConZ.TextInputWidget.OnTextBoxTextCommitted
	void OnTextBoxTextChanged(struct FText& Text); // Function ConZ.TextInputWidget.OnTextBoxTextChanged
	int32_t GetValueInt(); // Function ConZ.TextInputWidget.GetValueInt
	struct FText GetValue(); // Function ConZ.TextInputWidget.GetValue
}; 



// Class ConZ.TextOnlyTooltip
// Size: 0x280(Inherited: 0x260) 
struct UTextOnlyTooltip : public UUserWidget
{
	struct FText Text;  // 0x260(0x18)
	struct UTextBlock* _textBlock;  // 0x278(0x8)

}; 



// Class ConZ.Texture2DStatics
// Size: 0x28(Inherited: 0x28) 
struct UTexture2DStatics : public UObject
{

}; 



// Class ConZ.Thermometer
// Size: 0x920(Inherited: 0x910) 
struct AThermometer : public AItem
{
	struct UThermalSensorComponent* _thermalSensorComponent;  // 0x910(0x8)
	int32_t _thermometerFluidMaterialId;  // 0x918(0x4)
	char pad_2332[4];  // 0x91C(0x4)

}; 



// Class ConZ.ThrowingComponent
// Size: 0x15D0(Inherited: 0x1D0) 
struct UThrowingComponent : public UProjectileMovementComponent
{
	uint8_t  ItemThrowingBehavior;  // 0x1D0(0x1)
	char pad_465[3];  // 0x1D1(0x3)
	float PierceMaxDensity;  // 0x1D4(0x4)
	float ThrowEnergyMultiplier;  // 0x1D8(0x4)
	struct FRotator InitialRotation;  // 0x1DC(0xC)
	struct FRotator UpdatedRotation;  // 0x1E8(0xC)
	struct FRotator MinRandomImpactRotation;  // 0x1F4(0xC)
	struct FRotator MaxRandomImpactRotation;  // 0x200(0xC)
	float PenetrationDepth;  // 0x20C(0x4)
	char pad_528_1 : 7;  // 0x210(0x1)
	bool IsFloatable : 1;  // 0x210(0x1)
	uint8_t  MinStance;  // 0x211(0x1)
	char pad_530[5038];  // 0x212(0x13AE)
	struct UParticleSystem* _splashParticleSystem;  // 0x15C0(0x8)
	struct UAkAudioEvent* _splashAudioEvent;  // 0x15C8(0x8)

	void OnProjectileStopped(struct FHitResult& ImpactResult); // Function ConZ.ThrowingComponent.OnProjectileStopped
	void OnProjectileBounced(struct FHitResult& ImpactResult, struct FVector& ImpactVelocity); // Function ConZ.ThrowingComponent.OnProjectileBounced
	void Multicast_PierceHitObject(struct FVector ImpactVelocity, struct FHitResult ZeroBasedImpactResult); // Function ConZ.ThrowingComponent.Multicast_PierceHitObject
}; 



// Class ConZ.ThrowingQuickAccessItemWidget
// Size: 0x2B8(Inherited: 0x260) 
struct UThrowingQuickAccessItemWidget : public UUserWidget
{
	char MaxWidth;  // 0x260(0x1)
	char MaxHeight;  // 0x261(0x1)
	char pad_610[6];  // 0x262(0x6)
	struct UImage* _imageWidget;  // 0x268(0x8)
	char pad_624[8];  // 0x270(0x8)
	float DefaultWidth;  // 0x278(0x4)
	float DefaultHeight;  // 0x27C(0x4)
	struct FVector2D DefaultPosition;  // 0x280(0x8)
	struct UWidget* _itemWidget;  // 0x288(0x8)
	struct USizeBox* SizeBox_1;  // 0x290(0x8)
	struct UImage* _additionalIcon;  // 0x298(0x8)
	struct UTextBlock* _additionalText;  // 0x2A0(0x8)
	struct UTextBlock* TextBlockItemSlotNumber;  // 0x2A8(0x8)
	char pad_688[8];  // 0x2B0(0x8)

	struct FEventReply OnImageWidgetMouseButtonDown(struct FGeometry MyGeometry, struct FPointerEvent& MouseEvent); // Function ConZ.ThrowingQuickAccessItemWidget.OnImageWidgetMouseButtonDown
}; 



// Class ConZ.ThrowingSkill
// Size: 0xC0(Inherited: 0xB0) 
struct UThrowingSkill : public UDexteritySkill
{
	char pad_176[4];  // 0xB0(0x4)
	float _minPlayRate;  // 0xB4(0x4)
	float _maxPlayRate;  // 0xB8(0x4)
	char pad_188[4];  // 0xBC(0x4)

}; 



// Class ConZ.TimeControllableLight
// Size: 0x248(Inherited: 0x230) 
struct ATimeControllableLight : public ALight
{
	char pad_560_1 : 7;  // 0x230(0x1)
	bool _shouldExistOnDedicatedServer : 1;  // 0x230(0x1)
	char pad_561[7];  // 0x231(0x7)
	struct UCurveFloat* _intensityVsTimeOfDayCurve;  // 0x238(0x8)
	struct UPointLightComponent* _pointLightComponent;  // 0x240(0x8)

	void OnTimeOfDayChanged(struct AWeatherController2* sender); // Function ConZ.TimeControllableLight.OnTimeOfDayChanged
}; 



// Class ConZ.TimeControllableSpotLight
// Size: 0x248(Inherited: 0x230) 
struct ATimeControllableSpotLight : public ALight
{
	char pad_560_1 : 7;  // 0x230(0x1)
	bool _shouldExistOnDedicatedServer : 1;  // 0x230(0x1)
	char pad_561[7];  // 0x231(0x7)
	struct UCurveFloat* _intensityVsTimeOfDayCurve;  // 0x238(0x8)
	struct USpotLightComponent* _pointLightComponent;  // 0x240(0x8)

	void OnTimeOfDayChanged(struct AWeatherController2* sender); // Function ConZ.TimeControllableSpotLight.OnTimeOfDayChanged
}; 



// Class ConZ.WeaponAnimInstance
// Size: 0x300(Inherited: 0x2D0) 
struct UWeaponAnimInstance : public UItemAnimInstance
{
	float _owningPrisonerWeaponBreathFactor;  // 0x2D0(0x4)
	float _owningPrisonerWeaponAimDownTheSightsStillBlendFactor;  // 0x2D4(0x4)
	char pad_728_1 : 7;  // 0x2D8(0x1)
	bool _isOwningPrisonerAimingDownTheSights : 1;  // 0x2D8(0x1)
	char pad_729_1 : 7;  // 0x2D9(0x1)
	bool _isChamberOpened : 1;  // 0x2D9(0x1)
	char pad_730[2];  // 0x2DA(0x2)
	int32_t _ammoCount;  // 0x2DC(0x4)
	int32_t _loadedAmmoCount;  // 0x2E0(0x4)
	char pad_740_1 : 7;  // 0x2E4(0x1)
	bool _shouldPlayChamberOpenedIdle : 1;  // 0x2E4(0x1)
	char pad_741_1 : 7;  // 0x2E5(0x1)
	bool _isInGameEvent : 1;  // 0x2E5(0x1)
	uint8_t  _malfunction;  // 0x2E6(0x1)
	char pad_743_1 : 7;  // 0x2E7(0x1)
	bool _useFiringModeBoneRotation : 1;  // 0x2E7(0x1)
	struct FRotator _firingModeBoneRotation;  // 0x2E8(0xC)
	float _hideBoneCurveValue;  // 0x2F4(0x4)
	float _zeroRange;  // 0x2F8(0x4)
	uint8_t  _aiminDownTheSightsMode;  // 0x2FC(0x1)
	char pad_765_1 : 7;  // 0x2FD(0x1)
	bool _hasUnusedLoadedAmmo : 1;  // 0x2FD(0x1)
	char pad_766[2];  // 0x2FE(0x2)

}; 



// Class ConZ.TriggerComponentState
// Size: 0x28(Inherited: 0x28) 
struct UTriggerComponentState : public UObject
{

}; 



// Class ConZ.TimedTriggerComponent
// Size: 0x500(Inherited: 0x4D0) 
struct UTimedTriggerComponent : public UTriggerComponent
{
	float _countdownDuration;  // 0x4D0(0x4)
	char pad_1236[4];  // 0x4D4(0x4)
	struct UAkAudioEvent* _countdownStartAudioEvent;  // 0x4D8(0x8)
	struct UAkAudioEvent* _countdownStopAudioEvent;  // 0x4E0(0x8)
	float _countdownRemainingTime;  // 0x4E8(0x4)
	char pad_1260[20];  // 0x4EC(0x14)

	void OnCountdownTimer(); // Function ConZ.TimedTriggerComponent.OnCountdownTimer
}; 



// Class ConZ.VoiceDecoder
// Size: 0x38(Inherited: 0x28) 
struct UVoiceDecoder : public UObject
{
	char pad_40[16];  // 0x28(0x10)

	void DecompressVoiceData(struct TArray<char>& InCompressedVoiceData, int32_t InCompressedVoiceBytes, struct TArray<char>& OutDecompressedVoiceData, int32_t& OutDecompressedVoiceBytes); // Function ConZ.VoiceDecoder.DecompressVoiceData
	struct UVoiceDecoder* CreateVoiceDecoder(struct UObject* Owner); // Function ConZ.VoiceDecoder.CreateVoiceDecoder
}; 



// Class ConZ.ToggleCamouflageAction
// Size: 0xA8(Inherited: 0xA0) 
struct UToggleCamouflageAction : public USkillAction
{
	char pad_160[8];  // 0xA0(0x8)

}; 



// Class ConZ.TooltipBase
// Size: 0x298(Inherited: 0x260) 
struct UTooltipBase : public UUserWidget
{
	struct UImage* BackgroundImage;  // 0x260(0x8)
	struct UImage* ItemImage;  // 0x268(0x8)
	struct UVerticalBox* ItemImageBox;  // 0x270(0x8)
	struct UTextBlock* NameText;  // 0x278(0x8)
	struct UTextBlock* DescriptionText;  // 0x280(0x8)
	struct UProgressBar* ProgressBar_1;  // 0x288(0x8)
	struct AItem* _item;  // 0x290(0x8)

	void InitFromItem(struct AItem* Item); // Function ConZ.TooltipBase.InitFromItem
	void InitFromCaptionAndDescription(struct FText& Caption, struct FText& Description); // Function ConZ.TooltipBase.InitFromCaptionAndDescription
}; 



// Class ConZ.Tournament
// Size: 0x270(Inherited: 0x220) 
struct ATournament : public AActor
{
	char pad_544[16];  // 0x220(0x10)
	struct UAkAudioEvent* StartAnnouncement;  // 0x230(0x8)
	struct UAkAudioEvent* SuddenDeathAnnouncement;  // 0x238(0x8)
	struct UAkAudioEvent* EndAnnouncement;  // 0x240(0x8)
	char pad_584_1 : 7;  // 0x248(0x1)
	bool _inProgress : 1;  // 0x248(0x1)
	char pad_585_1 : 7;  // 0x249(0x1)
	bool _inSuddenDeath : 1;  // 0x249(0x1)
	char pad_586_1 : 7;  // 0x24A(0x1)
	bool _hasEnded : 1;  // 0x24A(0x1)
	char pad_587[5];  // 0x24B(0x5)
	struct TArray<struct FTournamentStats> _stats;  // 0x250(0x10)
	struct UTournamentScoreboardWidget* _scoreboardWidget;  // 0x260(0x8)
	char pad_616[8];  // 0x268(0x8)

	void OnRep_Stats(); // Function ConZ.Tournament.OnRep_Stats
	void Multicast_PlayAnnouncement(struct UAkAudioEvent* AudioEvent); // Function ConZ.Tournament.Multicast_PlayAnnouncement
	bool IsInSuddenDeath(); // Function ConZ.Tournament.IsInSuddenDeath
	bool IsInProgress(); // Function ConZ.Tournament.IsInProgress
	bool HasEnded(); // Function ConZ.Tournament.HasEnded
	void GetStatsOrderedByDeath(struct TArray<struct FTournamentStats>& stats); // Function ConZ.Tournament.GetStatsOrderedByDeath
	struct TArray<struct FTournamentStats> GetStats(); // Function ConZ.Tournament.GetStats
	struct UTournamentScoreboardWidget* GetScoreboardWidget(); // Function ConZ.Tournament.GetScoreboardWidget
}; 



// Class ConZ.TournamentScoreboardRowWidget
// Size: 0x288(Inherited: 0x260) 
struct UTournamentScoreboardRowWidget : public UUserWidget
{
	struct UTextBlock* _rankText;  // 0x260(0x8)
	struct UTextBlock* _playerNameText;  // 0x268(0x8)
	struct UTextBlock* _famePointsText;  // 0x270(0x8)
	struct UTextBlock* _killsText;  // 0x278(0x8)
	struct UImage* _deathIcon;  // 0x280(0x8)

}; 



// Class ConZ.TournamentScoreboardWidget
// Size: 0x278(Inherited: 0x260) 
struct UTournamentScoreboardWidget : public UUserWidget
{
	struct UTextBlock* _instruction;  // 0x260(0x8)
	struct UVerticalBox* _table;  // 0x268(0x8)
	UTournamentScoreboardRowWidget* _rowClass;  // 0x270(0x8)

}; 



// Class ConZ.TrackingMarker2
// Size: 0x288(Inherited: 0x220) 
struct ATrackingMarker2 : public AActor
{
	char pad_544[8];  // 0x220(0x8)
	struct USceneComponent* SceneComponent;  // 0x228(0x8)
	struct UArrowComponent* DirectionArrow;  // 0x230(0x8)
	struct UDecalComponent* ConeDecal;  // 0x238(0x8)
	struct UParticleSystemComponent* Particles;  // 0x240(0x8)
	float TickFrequency;  // 0x248(0x4)
	char pad_588[4];  // 0x24C(0x4)
	AAnimal2* AnimalClass;  // 0x250(0x8)
	float Duration;  // 0x258(0x4)
	struct FVector Direction;  // 0x25C(0xC)
	float health;  // 0x268(0x4)
	uint8_t  BleedingSeverity;  // 0x26C(0x1)
	char pad_621_1 : 7;  // 0x26D(0x1)
	bool ShowBleedingInfo : 1;  // 0x26D(0x1)
	char pad_622_1 : 7;  // 0x26E(0x1)
	bool ShowWoundInfo : 1;  // 0x26E(0x1)
	char pad_623_1 : 7;  // 0x26F(0x1)
	bool ShowBasicWoundInfo : 1;  // 0x26F(0x1)
	float MaxSevereBleedTime;  // 0x270(0x4)
	float MaxHeavyBleedTime;  // 0x274(0x4)
	float MaxModerateBleedTime;  // 0x278(0x4)
	float MaxLightBleedTime;  // 0x27C(0x4)
	char pad_640[8];  // 0x280(0x8)

}; 



// Class ConZ.Tradeable
// Size: 0x28(Inherited: 0x28) 
struct UTradeable : public UInterface
{

}; 



// Class ConZ.NPCInteractionBoxComponent
// Size: 0x480(Inherited: 0x480) 
struct UNPCInteractionBoxComponent : public UBoxComponent
{
	char pad_1152_1 : 7;  // 0x480(0x1)
	bool IsAreaForbidden : 1;  // 0x478(0x1)

}; 



// Class ConZ.TradeOutpostManager
// Size: 0x260(Inherited: 0x220) 
struct ATradeOutpostManager : public AActor
{
	struct UBillboardComponent* _sprite;  // 0x220(0x8)
	struct UTradingOutpostDescriptionDataAsset* _outpostDescription;  // 0x228(0x8)
	uint8_t  _startingProsperityLevel;  // 0x230(0x1)
	char pad_561[7];  // 0x231(0x7)
	struct TArray<struct ATradePost*> _assignedTradePosts;  // 0x238(0x10)
	struct TArray<struct ATradeOutpostBuilding*> _otherAssignedTradeOutpostBuildings;  // 0x248(0x10)
	char pad_600[8];  // 0x258(0x8)

}; 



// Class ConZ.VehicleSpawnBoxComponent
// Size: 0x480(Inherited: 0x480) 
struct UVehicleSpawnBoxComponent : public UBoxComponent
{
	int32_t SpawnPriority;  // 0x478(0x4)

}; 



// Class ConZ.TraderBuyPanel
// Size: 0x478(Inherited: 0x260) 
struct UTraderBuyPanel : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	UTraderItemButton* _traderItemButtonClass;  // 0x278(0x8)
	struct UTabContainer* _cashOrCreditRadioBtn;  // 0x280(0x8)
	struct UWidgetSwitcher* _subpanelSwitcher;  // 0x288(0x8)
	struct UPanelWidget* _catResults;  // 0x290(0x8)
	struct UWrapBox* _itemsOfChosenCategory;  // 0x298(0x8)
	struct UTraderItemButton* _chosenItem;  // 0x2A0(0x8)
	struct UWrapBox* _relatedItems;  // 0x2A8(0x8)
	struct USearchBox* _itemSearchBox;  // 0x2B0(0x8)
	struct UTraderDropdownMenu* _itemCategoryDropdown;  // 0x2B8(0x8)
	struct UTraderDropdownMenu* _itemSortingDropdown;  // 0x2C0(0x8)
	struct UTextBlock* _categoryTitle;  // 0x2C8(0x8)
	struct UTraderFilterFamePointsButton* _btnFilterSufficientFP;  // 0x2D0(0x8)
	struct UTraderFilterFamePointsButton* _btnFilterInsufficientFP;  // 0x2D8(0x8)
	struct UTextBlock* _warningMessage;  // 0x2E0(0x8)
	struct UTextBlock* _headerBannerPrisonerCashOnHand;  // 0x2E8(0x8)
	struct UTextBlock* _headerBannerPrisonerCashInBank;  // 0x2F0(0x8)
	struct UTextBlock* _prisonerCashOnHand;  // 0x2F8(0x8)
	struct UTextBlock* _prisonerCashInBank;  // 0x300(0x8)
	struct UTextBlock* _prisonerGoldInBank;  // 0x308(0x8)
	struct UTextBlock* _prisonerFamePoints;  // 0x310(0x8)
	struct UTextBlock* _buyTotal;  // 0x318(0x8)
	struct UTextBlock* _buyTotalGold;  // 0x320(0x8)
	struct UWidgetSwitcher* _exitBackSwitcher;  // 0x328(0x8)
	struct UButton* _btnExit;  // 0x330(0x8)
	struct UButton* _btnBack;  // 0x338(0x8)
	struct UWidgetSwitcher* _cartBuySwitcher;  // 0x340(0x8)
	struct UButton* _btnCart;  // 0x348(0x8)
	struct UButton* _btnBuy;  // 0x350(0x8)
	struct UAkAudioEvent* _soundExitOnClick;  // 0x358(0x8)
	struct UAkAudioEvent* _soundBackOnClick;  // 0x360(0x8)
	struct UAkAudioEvent* _soundCartOnClick;  // 0x368(0x8)
	struct UAkAudioEvent* _soundButtonOnHover;  // 0x370(0x8)
	int32_t _cashOrCreditFontSizeUnselected;  // 0x378(0x4)
	int32_t _cashOrCreditFontSizeSelected;  // 0x37C(0x4)
	char pad_896[112];  // 0x380(0x70)
	struct FSlateColor _buyTotalZeroColor;  // 0x3F0(0x28)
	struct FSlateColor _buyTotalNonZeroColor;  // 0x418(0x28)
	struct FSlateColor _noOwnedCardInInventoryColor;  // 0x440(0x28)
	struct TArray<struct FSlateBrush> _sortTypeBrushes;  // 0x468(0x10)

	void OnExitButtonClicked(); // Function ConZ.TraderBuyPanel.OnExitButtonClicked
	void OnCartButtonClicked(); // Function ConZ.TraderBuyPanel.OnCartButtonClicked
	void OnBuyButtonClicked(); // Function ConZ.TraderBuyPanel.OnBuyButtonClicked
	void OnBackButtonClicked(); // Function ConZ.TraderBuyPanel.OnBackButtonClicked
	void OnAnyButtonHovered(); // Function ConZ.TraderBuyPanel.OnAnyButtonHovered
}; 



// Class ConZ.TraderDepotPanel
// Size: 0x2A0(Inherited: 0x260) 
struct UTraderDepotPanel : public UUserWidget
{
	struct UTextBlock* _prisonerCashOnHand;  // 0x260(0x8)
	struct UTextBlock* _prisonerCashInBank;  // 0x268(0x8)
	struct UTextBlock* _prisonerGoldInBank;  // 0x270(0x8)
	struct UButton* _btnExit;  // 0x278(0x8)
	struct UItemInventoryDepotWidget2* _inventoryDepotWidget2;  // 0x280(0x8)
	struct UAkAudioEvent* _soundExitOnClick;  // 0x288(0x8)
	struct UAkAudioEvent* _soundButtonOnHover;  // 0x290(0x8)
	char pad_664[8];  // 0x298(0x8)

	void OnExitClicked(); // Function ConZ.TraderDepotPanel.OnExitClicked
	void OnAnyButtonHover(); // Function ConZ.TraderDepotPanel.OnAnyButtonHover
}; 



// Class ConZ.TraderFilterFamePointsButton
// Size: 0x3C8(Inherited: 0x260) 
struct UTraderFilterFamePointsButton : public UUserWidget
{
	char pad_608[80];  // 0x260(0x50)
	struct UImage* _lockImage;  // 0x2B0(0x8)
	struct FSlateBrush _selectedLookBrush;  // 0x2B8(0x88)
	struct FSlateBrush _deselectedLookBrush;  // 0x340(0x88)

}; 



// Class ConZ.TraderMainPanel
// Size: 0x298(Inherited: 0x260) 
struct UTraderMainPanel : public UUserWidget
{
	struct UTabContainer* _tabRow;  // 0x260(0x8)
	struct UWidgetSwitcher* _panelSwitcher;  // 0x268(0x8)
	struct UTraderBuyPanel* _buyPanel;  // 0x270(0x8)
	struct UTraderSellPanel* _sellPanel;  // 0x278(0x8)
	struct UTraderDepotPanel* _depotPanel;  // 0x280(0x8)
	struct UPanelWidget* _loadingScreen;  // 0x288(0x8)
	char pad_656[8];  // 0x290(0x8)

}; 



// Class ConZ.TraderSellListEntry
// Size: 0x308(Inherited: 0x260) 
struct UTraderSellListEntry : public UUserWidget
{
	char pad_608[24];  // 0x260(0x18)
	struct UImage* _entryIcon;  // 0x278(0x8)
	struct UTextBlock* _entryCaption;  // 0x280(0x8)
	struct UTextBlock* _entryPrice;  // 0x288(0x8)
	struct UButton* _btnCancel;  // 0x290(0x8)
	char pad_664[104];  // 0x298(0x68)
	struct UTexture2D* _missingTextureIcon;  // 0x300(0x8)

	void OnCancelClicked(); // Function ConZ.TraderSellListEntry.OnCancelClicked
}; 



// Class ConZ.TraderSellUIController
// Size: 0x88(Inherited: 0x28) 
struct UTraderSellUIController : public UObject
{
	char pad_40[96];  // 0x28(0x60)

}; 



// Class ConZ.EconomyManagerResponseData
// Size: 0x50(Inherited: 0x28) 
struct UEconomyManagerResponseData : public UObject
{
	char pad_40[8];  // 0x28(0x8)
	struct ADepotItem* _assignedDepotItem;  // 0x30(0x8)
	char pad_56[8];  // 0x38(0x8)
	struct TArray<struct FTradeablesResponseData> _tradeables;  // 0x40(0x10)

}; 



// Class ConZ.TradeStatics
// Size: 0x28(Inherited: 0x28) 
struct UTradeStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.TrapData
// Size: 0x50(Inherited: 0x30) 
struct UTrapData : public UDataAsset
{
	USphereMotionTriggerComponent* SphereMotionTriggerComponentClass;  // 0x30(0x8)
	UBoxMotionTriggerComponent* BoxMotionTriggerComponentClass;  // 0x38(0x8)
	ULaserTriggerComponent* LaserTriggerComponentClass;  // 0x40(0x8)
	UTimedTriggerComponent* TimedTriggerComponentClass;  // 0x48(0x8)

}; 



// Class ConZ.TrapItemUserData
// Size: 0x38(Inherited: 0x28) 
struct UTrapItemUserData : public UVirtualizedItemUserData
{
	struct FDbIntegerId OwnerUserProfileId;  // 0x28(0x8)
	char pad_48_1 : 7;  // 0x30(0x1)
	bool IsOwnerUserProfileIdDirty : 1;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 



// Class ConZ.TrapRefuelItemTag
// Size: 0x38(Inherited: 0x30) 
struct UTrapRefuelItemTag : public UBaseItemTag
{
	int32_t UsesOnRefuel;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)

}; 



// Class ConZ.TrashCarouselWidget
// Size: 0x548(Inherited: 0x260) 
struct UTrashCarouselWidget : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct FSlateBrush _leftArrowIcon;  // 0x290(0x88)
	struct FSlateBrush _rightArrowIcon;  // 0x318(0x88)
	struct FSlateBrush _disabledLeftArrowIcon;  // 0x3A0(0x88)
	struct FSlateBrush _disabledRightArrowIcon;  // 0x428(0x88)
	struct UTextBlock* _selectionDisplay;  // 0x4B0(0x8)
	struct UButton* _leftArrow;  // 0x4B8(0x8)
	struct UButton* _rightArrow;  // 0x4C0(0x8)
	struct FSlateFontInfo _font;  // 0x4C8(0x58)
	struct TArray<struct FString> _possibleValues;  // 0x520(0x10)
	struct TArray<struct FText> _carouselValues;  // 0x530(0x10)
	char pad_1344_1 : 7;  // 0x540(0x1)
	bool _canWrap : 1;  // 0x540(0x1)
	char pad_1345[7];  // 0x541(0x7)

	void OnValueChanged(int32_t NewValue); // Function ConZ.TrashCarouselWidget.OnValueChanged
	void ClickRight(); // Function ConZ.TrashCarouselWidget.ClickRight
	void ClickLeft(); // Function ConZ.TrashCarouselWidget.ClickLeft
}; 



// Class ConZ.TrashNamedSliderWidget
// Size: 0x3E8(Inherited: 0x260) 
struct UTrashNamedSliderWidget : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct FMulticastInlineDelegate ValueChangedTemp_DONOTUSE;  // 0x290(0x10)
	struct USizeBox* _nameBox;  // 0x2A0(0x8)
	struct UTextBlock* _name;  // 0x2A8(0x8)
	struct USizeBox* _valueDisplayBox;  // 0x2B0(0x8)
	struct UTextBlock* _valueDisplay;  // 0x2B8(0x8)
	struct UTrashSliderWidget* _slider;  // 0x2C0(0x8)
	struct USelectionOverlayWidget* _focusBackground;  // 0x2C8(0x8)
	struct FString _label;  // 0x2D0(0x10)
	struct FText _mainLabel;  // 0x2E0(0x18)
	struct FSlateFontInfo _defaultFont;  // 0x2F8(0x58)
	char pad_848[88];  // 0x350(0x58)
	float _stepSpeedTreshold;  // 0x3A8(0x4)
	float _valueDisplayWidth;  // 0x3AC(0x4)
	float _minValue;  // 0x3B0(0x4)
	float _maxValue;  // 0x3B4(0x4)
	int32_t _stepCount;  // 0x3B8(0x4)
	int32_t _decimalPlacesShown;  // 0x3BC(0x4)
	char pad_960[28];  // 0x3C0(0x1C)
	float _nameBoxWidth;  // 0x3DC(0x4)
	char pad_992[8];  // 0x3E0(0x8)

	void SetValue(float Value); // Function ConZ.TrashNamedSliderWidget.SetValue
	void SetName(struct FText Name); // Function ConZ.TrashNamedSliderWidget.SetName
	void SetLimits(float MinValue, float MaxValue, int32_t stepCount); // Function ConZ.TrashNamedSliderWidget.SetLimits
	void OnValueChanged(float NewValue); // Function ConZ.TrashNamedSliderWidget.OnValueChanged
	float GetValue(); // Function ConZ.TrashNamedSliderWidget.GetValue
	float GetMinValue(); // Function ConZ.TrashNamedSliderWidget.GetMinValue
	float GetMaxValue(); // Function ConZ.TrashNamedSliderWidget.GetMaxValue
}; 



// Class ConZ.TrashSliderWidget
// Size: 0x720(Inherited: 0x260) 
struct UTrashSliderWidget : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct FMulticastInlineDelegate ValueChangedTemp_DONOTUSE;  // 0x290(0x10)
	struct FSlateBrush _emptySlider;  // 0x2A0(0x88)
	struct FSlateBrush _filledSlider;  // 0x328(0x88)
	struct FSlateBrush _selectedSlider;  // 0x3B0(0x88)
	char pad_1080[272];  // 0x438(0x110)
	struct FSlateBrush _normalThumb;  // 0x548(0x88)
	struct FSlateBrush _selectedThumb;  // 0x5D0(0x88)
	char pad_1624[136];  // 0x658(0x88)
	struct USlider* _slider;  // 0x6E0(0x8)
	struct UProgressBar* _progressBar;  // 0x6E8(0x8)
	struct FDataTableRowHandle _selectedColor;  // 0x6F0(0x10)
	struct FDataTableRowHandle _disabledColor;  // 0x700(0x10)
	float _minValue;  // 0x710(0x4)
	float _maxValue;  // 0x714(0x4)
	int32_t _stepCount;  // 0x718(0x4)
	char pad_1820[4];  // 0x71C(0x4)

	void SetValue(float Value); // Function ConZ.TrashSliderWidget.SetValue
	void OnValueChanged(float NewValue); // Function ConZ.TrashSliderWidget.OnValueChanged
	float GetValue(); // Function ConZ.TrashSliderWidget.GetValue
}; 



// Class ConZ.TriggerFailurePenalty
// Size: 0x30(Inherited: 0x30) 
struct UTriggerFailurePenalty : public UFailurePenalty
{

}; 



// Class ConZ.TriggerItemTag
// Size: 0x38(Inherited: 0x30) 
struct UTriggerItemTag : public UBaseItemTag
{
	uint8_t  TriggerType;  // 0x30(0x1)
	char pad_49[7];  // 0x31(0x7)

}; 



// Class ConZ.UIStatics
// Size: 0x28(Inherited: 0x28) 
struct UUIStatics : public UBlueprintFunctionLibrary
{

	bool ProjectWorldToScreen(struct APlayerController* Controller, struct FVector& WorldPosition, struct FVector2D& Size, struct FVector2D& screenPosition); // Function ConZ.UIStatics.ProjectWorldToScreen
	struct UWidget* GetWidgetParentOfType(struct UWidget* Widget, UWidget* Type, bool includeUserWidgets); // Function ConZ.UIStatics.GetWidgetParentOfType
	struct FVector GetMuscleLeanFatFactorsFromCoordinates(struct FVector2D Coordinates); // Function ConZ.UIStatics.GetMuscleLeanFatFactorsFromCoordinates
	UUserWidget* GetDesiredWidgetClass(uint8_t  Type); // Function ConZ.UIStatics.GetDesiredWidgetClass
	struct FText GetDataForFieldName(struct FName Name, struct UStruct* str, struct UStruct* Type); // Function ConZ.UIStatics.GetDataForFieldName
	struct FVector4 GetAttributesFromMuscularAndFatFactors(float muscular, float Fat); // Function ConZ.UIStatics.GetAttributesFromMuscularAndFatFactors
	struct FVector4 GetAgeModifiersFromAge(int32_t Age); // Function ConZ.UIStatics.GetAgeModifiersFromAge
	struct FString FilterNonNumbersFromString(struct FString& String); // Function ConZ.UIStatics.FilterNonNumbersFromString
	void ColorToHex(struct FSlateColor& Color, struct FText& Text); // Function ConZ.UIStatics.ColorToHex
	bool CanDropIfDraggingItem(struct UObject* draggedObject, struct APawn* draggingPlayerPawn); // Function ConZ.UIStatics.CanDropIfDraggingItem
}; 



// Class ConZ.UnarmedCombatInputRedirector
// Size: 0x60(Inherited: 0x28) 
struct UUnarmedCombatInputRedirector : public UObject
{
	char pad_40[56];  // 0x28(0x38)

}; 



// Class ConZ.UnderwaterPostProcessVolume
// Size: 0x7D0(Inherited: 0x7D0) 
struct AUnderwaterPostProcessVolume : public APostProcessVolume
{

}; 



// Class ConZ.UpdateableNotificationDescription
// Size: 0x90(Inherited: 0x78) 
struct UUpdateableNotificationDescription : public UBasicNotificationDescription
{
	struct FString NotificationName;  // 0x78(0x10)
	char pad_136[8];  // 0x88(0x8)

}; 



// Class ConZ.UseItemObjective
// Size: 0x378(Inherited: 0x320) 
struct AUseItemObjective : public AObjective
{
	struct TMap<struct TSoftObjectPtr<AActor>, struct FUsableObjectiveItem> _targetMeshes;  // 0x320(0x50)
	char pad_880[8];  // 0x370(0x8)

}; 



// Class ConZ.UserProfile
// Size: 0x108(Inherited: 0x28) 
struct UUserProfile : public UObject
{
	char pad_40[208];  // 0x28(0xD0)
	struct USpamProtectionState* _globalSpamProtectionState;  // 0xF8(0x8)
	struct USpamProtectionState* _localSpamProtectionState;  // 0x100(0x8)

	void UnmarkProfileForDeletion(); // Function ConZ.UserProfile.UnmarkProfileForDeletion
	void SetPrisonerId(struct FDbIntegerId Value); // Function ConZ.UserProfile.SetPrisonerId
	void SetName(struct FString Value); // Function ConZ.UserProfile.SetName
	void SetLastLogoutTime(struct FDateTime& Value); // Function ConZ.UserProfile.SetLastLogoutTime
	void SetLastLoginTime(struct FDateTime& Value); // Function ConZ.UserProfile.SetLastLoginTime
	void SetFamePoints(float Value); // Function ConZ.UserProfile.SetFamePoints
	void SetCreationTemplateXml(struct FString Value); // Function ConZ.UserProfile.SetCreationTemplateXml
	void SetAuthorityInfo(struct FUserProfileAuthorityInfo& Value); // Function ConZ.UserProfile.SetAuthorityInfo
	void MarkProfileForDeletion(); // Function ConZ.UserProfile.MarkProfileForDeletion
	struct FCharacterTemplate MakeCharacterTemplate(); // Function ConZ.UserProfile.MakeCharacterTemplate
	struct FCharacterTemplate LoadCharacterTemplate(); // Function ConZ.UserProfile.LoadCharacterTemplate
	bool IsProfileMarkedForDeletion(); // Function ConZ.UserProfile.IsProfileMarkedForDeletion
	struct UUser* GetUser(); // Function ConZ.UserProfile.GetUser
	uint8_t  GetType(); // Function ConZ.UserProfile.GetType
	struct FDbIntegerId GetPrisonerId(); // Function ConZ.UserProfile.GetPrisonerId
	struct FString GetName(); // Function ConZ.UserProfile.GetName
	struct FDateTime GetLastLogoutTime(); // Function ConZ.UserProfile.GetLastLogoutTime
	struct FDateTime GetLastLoginTime(); // Function ConZ.UserProfile.GetLastLoginTime
	struct FDbIntegerId GetId(); // Function ConZ.UserProfile.GetId
	float GetFamePoints(); // Function ConZ.UserProfile.GetFamePoints
	struct FString GetCreationTemplateXml(); // Function ConZ.UserProfile.GetCreationTemplateXml
	struct FCharacterTemplate GetCreationTemplate(); // Function ConZ.UserProfile.GetCreationTemplate
	struct FUserProfileAuthorityInfo GetAuthorityInfo(); // Function ConZ.UserProfile.GetAuthorityInfo
}; 



// Class ConZ.ValueProviderString
// Size: 0x28(Inherited: 0x28) 
struct UValueProviderString : public UInterface
{

}; 



// Class ConZ.VehicleBaseSave
// Size: 0x68(Inherited: 0x28) 
struct UVehicleBaseSave : public UObject
{
	int64_t LastAccessTime;  // 0x28(0x8)
	float TimeUntilDestructionInSeconds;  // 0x30(0x4)
	char pad_52[4];  // 0x34(0x4)
	uint64_t PackedSimulationState;  // 0x38(0x8)
	float Mileage;  // 0x40(0x4)
	char pad_68[4];  // 0x44(0x4)
	struct TArray<struct FVehicleAttachmentSave> VehicleAttachments;  // 0x48(0x10)
	struct FVector LastSteadyLocation;  // 0x58(0xC)
	char pad_100[4];  // 0x64(0x4)

}; 



// Class ConZ.VehicleAttachment_Armor
// Size: 0x310(Inherited: 0x310) 
struct UVehicleAttachment_Armor : public UVehicleAttachment
{

}; 



// Class ConZ.VehicleAttachment_Battery
// Size: 0x360(Inherited: 0x310) 
struct UVehicleAttachment_Battery : public UVehicleAttachment
{
	char pad_784[24];  // 0x310(0x18)
	struct FVehicleAttachmentBatterySetup BatterySetup;  // 0x328(0x30)
	struct FVehicleAttachmentBatterySimulationData _simulationData;  // 0x358(0x4)
	char pad_860[4];  // 0x35C(0x4)

}; 



// Class ConZ.VehicleAttachment_Door
// Size: 0x3A0(Inherited: 0x310) 
struct UVehicleAttachment_Door : public UVehicleAttachment
{
	char pad_784[16];  // 0x310(0x10)
	struct FVehicleAttachmentDoorSetup DoorSetup;  // 0x320(0x60)
	uint8_t  _flags;  // 0x380(0x1)
	char pad_897[7];  // 0x381(0x7)
	struct UObject* _reservee;  // 0x388(0x8)
	struct TArray<struct FGameplayTag> _mountPathObstructionTags;  // 0x390(0x10)

	void OnRep_Flags(); // Function ConZ.VehicleAttachment_Door.OnRep_Flags
}; 



// Class ConZ.VehicleWithDoors
// Size: 0x28(Inherited: 0x28) 
struct UVehicleWithDoors : public UInterface
{

}; 



// Class ConZ.VehicleAttachment_Lights
// Size: 0x350(Inherited: 0x310) 
struct UVehicleAttachment_Lights : public UVehicleAttachment
{
	uint8_t  _lightCategory;  // 0x310(0x1)
	char pad_785[7];  // 0x311(0x7)
	struct TArray<struct FVehicleLightReference> _lightReferences;  // 0x318(0x10)
	char pad_808[16];  // 0x328(0x10)
	struct TArray<struct FVATMaterialParam> _materialParameters;  // 0x338(0x10)
	char pad_840[8];  // 0x348(0x8)

}; 



// Class ConZ.VehicleWithLights
// Size: 0x28(Inherited: 0x28) 
struct UVehicleWithLights : public UInterface
{

}; 



// Class ConZ.VehicleAttachment_Seat
// Size: 0x340(Inherited: 0x310) 
struct UVehicleAttachment_Seat : public UVehicleAttachment
{
	char pad_784[8];  // 0x310(0x8)
	struct TArray<UVehicleBaseMountSlot*> _mountSlotClasses;  // 0x318(0x10)
	struct TArray<struct UVehicleBaseMountSlot*> _mountSlots;  // 0x328(0x10)
	float _minimalHealthPercentWhenMounted;  // 0x338(0x4)
	float _minimalHealthPercentToMounted;  // 0x33C(0x4)

}; 



// Class ConZ.VehicleAttachment_StaticPart
// Size: 0x310(Inherited: 0x310) 
struct UVehicleAttachment_StaticPart : public UVehicleAttachment
{

}; 



// Class ConZ.VehicleAttachment_Dashboard
// Size: 0x310(Inherited: 0x310) 
struct UVehicleAttachment_Dashboard : public UVehicleAttachment_StaticPart
{

}; 



// Class ConZ.VehicleAttachment_Wheel
// Size: 0x360(Inherited: 0x310) 
struct UVehicleAttachment_Wheel : public UVehicleAttachment
{
	char pad_784[80];  // 0x310(0x50)

}; 



// Class ConZ.VehicleWithWheels
// Size: 0x28(Inherited: 0x28) 
struct UVehicleWithWheels : public UInterface
{

}; 



// Class ConZ.VehicleAttachmentDashboardAnimInstance
// Size: 0x2D0(Inherited: 0x2C0) 
struct UVehicleAttachmentDashboardAnimInstance : public UAnimInstance
{
	struct FRotator _steerRotator;  // 0x2BC(0xC)
	char pad_716[4];  // 0x2CC(0x4)

}; 



// Class ConZ.VehicleAttachmentHealthWidget
// Size: 0x290(Inherited: 0x260) 
struct UVehicleAttachmentHealthWidget : public UUserWidget
{
	struct UTextBlock* _text;  // 0x260(0x8)
	struct UProgressBar* _progressBar;  // 0x268(0x8)
	char pad_624[32];  // 0x270(0x20)

}; 



// Class ConZ.VehicleAttachmentParent
// Size: 0x28(Inherited: 0x28) 
struct UVehicleAttachmentParent : public UInterface
{

}; 



// Class ConZ.VehicleSlotIdAssetData
// Size: 0x40(Inherited: 0x28) 
struct UVehicleSlotIdAssetData : public UAssetUserData
{
	char pad_40[24];  // 0x28(0x18)

}; 



// Class ConZ.MountableVehicleAttachment
// Size: 0x28(Inherited: 0x28) 
struct UMountableVehicleAttachment : public UInterface
{

}; 



// Class ConZ.VehicleBaseAnimInstance
// Size: 0x2C0(Inherited: 0x2C0) 
struct UVehicleBaseAnimInstance : public UAnimInstance
{

}; 



// Class ConZ.VehicleBasePushMountSlot
// Size: 0x150(Inherited: 0x140) 
struct UVehicleBasePushMountSlot : public UVehicleBaseMountSlot
{
	struct FName LeftHandIKSocketName;  // 0x140(0x8)
	struct FName RightHandIKSocketName;  // 0x148(0x8)

}; 



// Class ConZ.VehicleCraftedItem
// Size: 0x930(Inherited: 0x910) 
struct AVehicleCraftedItem : public AItem
{
	AActor* _vehicleClass;  // 0x910(0x8)
	struct FPrimaryAssetId _vehiclePrimaryAssetId;  // 0x918(0x10)
	char pad_2344[8];  // 0x928(0x8)

	struct AActor* SpawnVehicle(AActor* vehicleClass); // Function ConZ.VehicleCraftedItem.SpawnVehicle
}; 



// Class ConZ.VehicleEntitySetup
// Size: 0x80(Inherited: 0x80) 
struct UVehicleEntitySetup : public UEntitySetup
{

}; 



// Class ConZ.VehicleForcePushComponent
// Size: 0xD0(Inherited: 0xB0) 
struct UVehicleForcePushComponent : public UActorComponent
{
	struct TArray<struct FVehicleForcePushParams> _forcePushParams;  // 0xB0(0x10)
	char pad_192[16];  // 0xC0(0x10)

}; 



// Class ConZ.VehicleHitZoneManager
// Size: 0x130(Inherited: 0xD0) 
struct UVehicleHitZoneManager : public UMeshHitZones
{
	struct FName _vehicleHitMeshName;  // 0xD0(0x8)
	struct TArray<struct UMaterialInterface*> _engineBlock;  // 0xD8(0x10)
	struct TArray<struct FVehicleHitZoneData> _doors;  // 0xE8(0x10)
	struct TArray<struct FVehicleHitZoneData> _doorWindows;  // 0xF8(0x10)
	struct TArray<struct FVehicleHitZoneData> _wheelTires;  // 0x108(0x10)
	struct TArray<struct FAirplaneWingHitZoneData> _airplaneWings;  // 0x118(0x10)
	char pad_296[8];  // 0x128(0x8)

	void SetVehicleDoorWindowHitMeshAttached(int32_t doorIndex, bool Value); // Function ConZ.VehicleHitZoneManager.SetVehicleDoorWindowHitMeshAttached
	void SetVehicleDoorHitMeshAttached(int32_t doorIndex, bool Value); // Function ConZ.VehicleHitZoneManager.SetVehicleDoorHitMeshAttached
	struct TArray<struct FVehicleHitZoneData> GetWheelTires(); // Function ConZ.VehicleHitZoneManager.GetWheelTires
	struct FName GetVehicleHitMeshName(); // Function ConZ.VehicleHitZoneManager.GetVehicleHitMeshName
	struct TArray<struct FVehicleHitZoneData> GetDoorWindows(); // Function ConZ.VehicleHitZoneManager.GetDoorWindows
	struct TArray<struct FVehicleHitZoneData> GetDoors(); // Function ConZ.VehicleHitZoneManager.GetDoors
	struct TArray<struct FAirplaneWingHitZoneData> GetAirplaneWings(); // Function ConZ.VehicleHitZoneManager.GetAirplaneWings
}; 



// Class ConZ.VehicleItemContainer
// Size: 0xA30(Inherited: 0xA20) 
struct AVehicleItemContainer : public AChestItem
{
	char pad_2592[16];  // 0xA20(0x10)

}; 



// Class ConZ.VehicleMeshComponent
// Size: 0xED0(Inherited: 0xED0) 
struct UVehicleMeshComponent : public USkeletalMeshComponent
{
	float _minCcdAdvanceCoefficient;  // 0xEC8(0x4)

}; 



// Class ConZ.VehicleMountSlotIndicators
// Size: 0x280(Inherited: 0x260) 
struct UVehicleMountSlotIndicators : public UUserWidget
{
	struct UImage* _backgroundGradient;  // 0x260(0x8)
	struct UContentWidget* _vehicleMountSlotsContainer;  // 0x268(0x8)
	char pad_624[16];  // 0x270(0x10)

}; 



// Class ConZ.VehicleMountSlotWidget
// Size: 0x270(Inherited: 0x260) 
struct UVehicleMountSlotWidget : public UUserWidget
{
	struct UWidgetSwitcher* _slotStateSwitcher;  // 0x260(0x8)
	struct UTextBlock* _keybindLabel;  // 0x268(0x8)

}; 



// Class ConZ.VehiclePartDescriptionComponent
// Size: 0x480(Inherited: 0x480) 
struct UVehiclePartDescriptionComponent : public UBoxComponent
{

}; 



// Class ConZ.VehicleGearedEnginePowertrainComponent
// Size: 0xD8(Inherited: 0xC8) 
struct UVehicleGearedEnginePowertrainComponent : public UVehicleEnginePowertrainComponent
{
	char pad_200[8];  // 0xC8(0x8)
	float _differentialRatio;  // 0xD0(0x4)
	char pad_212[4];  // 0xD4(0x4)

}; 



// Class ConZ.VehiclePresetNode
// Size: 0x70(Inherited: 0x28) 
struct UVehiclePresetNode : public UObject
{
	struct TArray<struct FPrimaryAssetId> PossibleAttachmentAssetIds;  // 0x28(0x10)
	struct FPrimaryAssetId AttachmentAssetId;  // 0x38(0x10)
	char pad_72_1 : 7;  // 0x48(0x1)
	bool IsFunctionalityAttachment : 1;  // 0x48(0x1)
	char pad_73[7];  // 0x49(0x7)
	struct TArray<struct FVehicleAttachmentSpawnData> SpawnData;  // 0x50(0x10)
	struct TArray<struct UVehiclePresetNode*> Children;  // 0x60(0x10)

}; 



// Class ConZ.VehiclePreset
// Size: 0xA0(Inherited: 0x30) 
struct UVehiclePreset : public UDataAsset
{
	struct FPrimaryAssetId VehicleAssetId;  // 0x30(0x10)
	struct UCurveFloat* MileageCurve;  // 0x40(0x8)
	struct UVehiclePresetNode* RootNode;  // 0x48(0x8)
	struct FFloatRange FuelAmountSpawnPercentageRange;  // 0x50(0x10)
	struct FFloatRange BatteryChargeSpawnPercentageRange;  // 0x60(0x10)
	struct TSoftClassPtr<UObject> LockClass;  // 0x70(0x28)
	float VerticalSpawnOffset;  // 0x98(0x4)
	char pad_156[4];  // 0x9C(0x4)

}; 



// Class ConZ.WashEyesAssetData
// Size: 0x40(Inherited: 0x30) 
struct UWashEyesAssetData : public UInteractionAssetData
{
	UGameResourceType* ResourceType;  // 0x30(0x8)
	float QuantityPerWash;  // 0x38(0x4)
	float WashDuration;  // 0x3C(0x4)

}; 



// Class ConZ.VehicleQueryComponent
// Size: 0xB8(Inherited: 0xB0) 
struct UVehicleQueryComponent : public UActorComponent
{
	char pad_176_1 : 7;  // 0xB0(0x1)
	bool _isReady : 1;  // 0xB0(0x1)
	char pad_177[7];  // 0xB1(0x7)

}; 



// Class ConZ.VehicleServiceComponent
// Size: 0xD0(Inherited: 0xB0) 
struct UVehicleServiceComponent : public UActorComponent
{
	struct AVehicleServiceStation* _serviceStation;  // 0xB0(0x8)
	struct FDbIntegerId _serviceInitiatorId;  // 0xB8(0x8)
	struct TWeakObjectPtr<UObject> _currentAction;  // 0xC0(0x8)
	char pad_200[8];  // 0xC8(0x8)

	void OnRep_ServiceStation(); // Function ConZ.VehicleServiceComponent.OnRep_ServiceStation
}; 



// Class ConZ.VehicleServiceStationSaveObject
// Size: 0x28(Inherited: 0x28) 
struct UVehicleServiceStationSaveObject : public UObject
{

}; 



// Class ConZ.StaticVehicleServiceStationSaveObject
// Size: 0x30(Inherited: 0x28) 
struct UStaticVehicleServiceStationSaveObject : public UVehicleServiceStationSaveObject
{
	int64_t StaticId;  // 0x28(0x8)

}; 



// Class ConZ.VehicleServiceStation
// Size: 0x2A0(Inherited: 0x220) 
struct AVehicleServiceStation : public AActor
{
	struct FGameplayTag _serviceMode;  // 0x220(0x8)
	struct USkeletalMeshComponent* _mesh;  // 0x228(0x8)
	struct FText _displayName;  // 0x230(0x18)
	struct FName _vehicleAttachSocketName;  // 0x248(0x8)
	float _maxServiceDistanceSquared;  // 0x250(0x4)
	float _minUpAlignmentAngleDeg;  // 0x254(0x4)
	float _minForwardAbsAlignmentAngleDeg;  // 0x258(0x4)
	struct FVector _blockCheckBoxExtent;  // 0x25C(0xC)
	struct UAkAudioEvent* _movingStartAudioEvent;  // 0x268(0x8)
	struct UAkAudioEvent* _movingStopAudioEvent;  // 0x270(0x8)
	struct ATradePost* _assignedTradePost;  // 0x278(0x8)
	char pad_640[8];  // 0x280(0x8)
	struct AVehicleBase* _servicedVehicle;  // 0x288(0x8)
	int64_t _staticId;  // 0x290(0x8)
	char pad_664[8];  // 0x298(0x8)

	void OnRep_ServicedVehicle(); // Function ConZ.VehicleServiceStation.OnRep_ServicedVehicle
	void OnAttachedVehicleDestroyed(struct AActor* DestroyedActor); // Function ConZ.VehicleServiceStation.OnAttachedVehicleDestroyed
	void NetMulticast_StartLowering(); // Function ConZ.VehicleServiceStation.NetMulticast_StartLowering
}; 



// Class ConZ.PortableVehicleServiceStationSaveObject
// Size: 0x88(Inherited: 0x28) 
struct UPortableVehicleServiceStationSaveObject : public UVehicleServiceStationSaveObject
{
	struct FPrimaryAssetId AssetId;  // 0x28(0x10)
	struct FGameplayTag ServiceMode;  // 0x38(0x8)
	struct FVector Location;  // 0x40(0xC)
	struct FRotator Rotation;  // 0x4C(0xC)
	struct TSoftClassPtr<UObject> OriginalItemClass;  // 0x58(0x28)
	float HealthRatio;  // 0x80(0x4)
	char pad_132[4];  // 0x84(0x4)

}; 



// Class ConZ.PortableVehicleServiceStation
// Size: 0x308(Inherited: 0x2A0) 
struct APortableVehicleServiceStation : public AVehicleServiceStation
{
	struct FGameplayTag _serviceModeRep;  // 0x2A0(0x8)
	struct TMap<struct FGameplayTag, struct UAnimSequenceBase*> _poseVsSericeModeMap;  // 0x2A8(0x50)
	char pad_760[16];  // 0x2F8(0x10)

	void OnRep_ServiceMode(); // Function ConZ.PortableVehicleServiceStation.OnRep_ServiceMode
}; 



// Class ConZ.VehicleServiceToolTag
// Size: 0x40(Inherited: 0x30) 
struct UVehicleServiceToolTag : public UBaseItemTag
{
	struct FGameplayTag GameplayTag;  // 0x30(0x8)
	int32_t UsesPerService;  // 0x38(0x4)
	char pad_60[4];  // 0x3C(0x4)

}; 



// Class ConZ.VehicleWeaponAimingParameters
// Size: 0x128(Inherited: 0x28) 
struct UVehicleWeaponAimingParameters : public UObject
{
	struct TArray<uint8_t > SupportedStance;  // 0x28(0x10)
	struct FVehicleWeaponAimingStanceData StanceData[2];  // 0x38(0xF0)

	bool CanPrisonerTakeItemInHands(struct APrisoner* Prisoner, struct AItem* Item, uint8_t  stance); // Function ConZ.VehicleWeaponAimingParameters.CanPrisonerTakeItemInHands
	bool CanPrisonerEnterCombatModeUsingItem(struct APrisoner* Prisoner, struct AItem* Item, uint8_t  stance); // Function ConZ.VehicleWeaponAimingParameters.CanPrisonerEnterCombatModeUsingItem
	bool CanExecutePrisonerAction(struct APrisoner* Prisoner, struct UPrisonerActionDescription* desc); // Function ConZ.VehicleWeaponAimingParameters.CanExecutePrisonerAction
}; 



// Class ConZ.VehicleSpawner
// Size: 0x228(Inherited: 0x220) 
struct AVehicleSpawner : public AActor
{
	struct UVehicleSpawnerComponent* SpawnerComponent;  // 0x220(0x8)

}; 



// Class ConZ.VehicleSpawnerComponent
// Size: 0x210(Inherited: 0x200) 
struct UVehicleSpawnerComponent : public USceneComponent
{
	struct TArray<struct FVehicleSpawnerMarker> SpawnerMarkers;  // 0x1F8(0x10)

}; 



// Class ConZ.VehicleSpawningManager2
// Size: 0x5C8(Inherited: 0x220) 
struct AVehicleSpawningManager2 : public AActor
{
	float _maxAllowedTimeInForbiddenZones;  // 0x220(0x4)
	float _forbiddenZoneCheckInterval;  // 0x224(0x4)
	char pad_552[4];  // 0x228(0x4)
	float _relevantSpawnerGroupsUpdateTimeElapsed;  // 0x22C(0x4)
	char pad_560[4];  // 0x230(0x4)
	float _minPlayerLocationDeltaToUpdateRelevantSpawners;  // 0x234(0x4)
	float _relevantSpawnerGroupsUpdateTimeBudget;  // 0x238(0x4)
	float _defaultSpawnerNetCullDistance;  // 0x23C(0x4)
	char pad_576_1 : 7;  // 0x240(0x1)
	bool _alwaysUseDefaultSpawnerNetCullDistance : 1;  // 0x240(0x1)
	char pad_577[3];  // 0x241(0x3)
	float _numDaysToKeepSpawnerAliveIfVehicleIsInactive;  // 0x244(0x4)
	float _spawnerTasksProcessingTimeElapsed;  // 0x248(0x4)
	char pad_588[4];  // 0x24C(0x4)
	float _spawnerTasksProcessingTimeBudget;  // 0x250(0x4)
	float _addSpawnerUpdateInterval;  // 0x254(0x4)
	char pad_600[4];  // 0x258(0x4)
	float _relevantSpawnersUpdateInterval;  // 0x25C(0x4)
	char pad_608[4];  // 0x260(0x4)
	float _autoSaveCheckIntervalForMovingVehicles;  // 0x264(0x4)
	char pad_616[4];  // 0x268(0x4)
	float _autoSaveIntervalForMovingVehicles;  // 0x26C(0x4)
	float _autoSaveCheckIntervalForStationaryVehicles;  // 0x270(0x4)
	char pad_628[4];  // 0x274(0x4)
	float _autoSaveIntervalForStationaryVehicles;  // 0x278(0x4)
	char pad_636[4];  // 0x27C(0x4)
	struct TMap<struct FPrimaryAssetId, struct FVehicleManualSpawnPresetArray> _manualSpawnPresetsMap;  // 0x280(0x50)
	struct TMap<struct FPrimaryAssetId, struct UVehiclePreset*> _purchaseSpawnPresetsMap;  // 0x2D0(0x50)
	char pad_800[80];  // 0x320(0x50)
	struct FGameplayTag _spawnGroupParentTag;  // 0x370(0x8)
	int32_t _defaultMaxNumSpawnersPerSpawnGroup;  // 0x378(0x4)
	char pad_892[244];  // 0x37C(0xF4)
	float _minDistanceBetweenVisitorAndSpawnLocation;  // 0x470(0x4)
	float _spawnPointsSearchExtension;  // 0x474(0x4)
	float _preferredDistanceBetweenSpawners;  // 0x478(0x4)
	float _preferredDistanceBetweenSpawnersOfSameType;  // 0x47C(0x4)
	struct TArray<struct FVehicleSpawnPointData> _vehicleSpawnPoints;  // 0x480(0x10)
	char pad_1168[312];  // 0x490(0x138)

}; 



// Class ConZ.VehicleUIDataController
// Size: 0xB8(Inherited: 0x28) 
struct UVehicleUIDataController : public UObject
{
	char pad_40[144];  // 0x28(0x90)

}; 



// Class ConZ.VerticalScrollBoxDropdownContent
// Size: 0x268(Inherited: 0x260) 
struct UVerticalScrollBoxDropdownContent : public UUserWidget
{
	struct UScrollBox* _entriesScrollBox;  // 0x260(0x8)

}; 



// Class ConZ.VicinityContainerRowItemWidget
// Size: 0x598(Inherited: 0x550) 
struct UVicinityContainerRowItemWidget : public UItemWidget2
{
	struct UTextBlock* _caption;  // 0x550(0x8)
	struct UImage* Image_1;  // 0x558(0x8)
	struct UImage* Image_3;  // 0x560(0x8)
	struct UImage* Image_10;  // 0x568(0x8)
	struct UTextBlock* TextBlock_21;  // 0x570(0x8)
	struct UImage* UpperLeftIcon;  // 0x578(0x8)
	struct UProgressBar* ProgressBarLeftFirst;  // 0x580(0x8)
	struct UProgressBar* ProgressBarLeftSecond;  // 0x588(0x8)
	struct USizeBox* SizeBox_1;  // 0x590(0x8)

}; 



// Class ConZ.VisionEffectsComponent
// Size: 0x14F0(Inherited: 0xB0) 
struct UVisionEffectsComponent : public UActorComponent
{
	char pad_176[56];  // 0xB0(0x38)
	float PostProcessPriority;  // 0xE8(0x4)
	char pad_236[4];  // 0xEC(0x4)
	struct UMaterialInterface* FadeOutMaterial;  // 0xF0(0x8)
	struct UMaterialInterface* LowLightVisionMaterial;  // 0xF8(0x8)
	struct UMaterialInterface* NightVisionMaterial;  // 0x100(0x8)
	float NightVisionBlendInDuration;  // 0x108(0x4)
	float NightVisionBlendOutDuration;  // 0x10C(0x4)
	struct UMaterialParameterCollection* AnimalEyesMaterialParameterCollection;  // 0x110(0x8)
	struct FName AnimalEyesEmissiveMaterialName;  // 0x118(0x8)
	float AnimalEyesEmissiveValueWhenNightVisionIsEnabled;  // 0x120(0x4)
	char pad_292[4];  // 0x124(0x4)
	struct UMaterialInterface* FlashbangEffectMaterial;  // 0x128(0x8)
	struct UMaterialInterface* FallingBlurMaterial;  // 0x130(0x8)
	struct UMaterialInterface* TakenDamageMaterial;  // 0x138(0x8)
	struct UMaterialParameterCollection* TakenDamageMaterialParameterCollection;  // 0x140(0x8)
	struct FName TakenDamageBlurIntensityParameterName;  // 0x148(0x8)
	struct FName TakenDamageStainsIntensityParameterName;  // 0x150(0x8)
	struct FName TakenDamageVignetteIntensityParameterName;  // 0x158(0x8)
	struct UCurveFloat* TakenDamageBlurShapeCurve;  // 0x160(0x8)
	struct UCurveFloat* TakenDamageBlurIntensityCurve;  // 0x168(0x8)
	struct UCurveFloat* TakenDamageBlurDurationCurve;  // 0x170(0x8)
	struct UCurveFloat* TakenDamageStainsShapeCurve;  // 0x178(0x8)
	struct UCurveFloat* TakenDamageStainsIntensityCurve;  // 0x180(0x8)
	struct UCurveFloat* TakenDamageStainsDurationCurve;  // 0x188(0x8)
	struct UCurveFloat* TakenDamageVignetteShapeCurve;  // 0x190(0x8)
	struct UCurveFloat* TakenDamageVignetteIntensityCurve;  // 0x198(0x8)
	struct UCurveFloat* TakenDamageVignetteDurationCurve;  // 0x1A0(0x8)
	float TakenDamageMaxChromaticAberration;  // 0x1A8(0x4)
	char pad_428[4];  // 0x1AC(0x4)
	UMatineeCameraShake* TakenDamageCameraShakeClass;  // 0x1B0(0x8)
	struct UCurveFloat* TakenDamageCameraShakeScaleCurve;  // 0x1B8(0x8)
	struct UMaterialInterface* TacticsEffectMaterial;  // 0x1C0(0x8)
	struct UMaterialInterface* FocusModeMaterial;  // 0x1C8(0x8)
	struct UMaterialInterface* DoubleVisionMaterial;  // 0x1D0(0x8)
	struct FName DoubleVisionIntensityParameterName;  // 0x1D8(0x8)
	struct UMaterialInterface* UnderwaterBlurMaterial;  // 0x1E0(0x8)
	struct UMaterialInterface* PhotoModeTransitionMaterial;  // 0x1E8(0x8)
	struct UMaterialInterface* ScopeZoomMaterial;  // 0x1F0(0x8)
	struct FName ScopeZoomBlendPPParameterName;  // 0x1F8(0x8)
	struct FName ScopeZoomBlackoutDensityParameterName;  // 0x200(0x8)
	struct FName ScopeZoomChromaticAberrationDampeningParameterName;  // 0x208(0x8)
	struct FName ScopeZoomCrosshairBaseScaleParameterName;  // 0x210(0x8)
	struct FName ScopeZoomCrosshairDepthOffsetMultiplierParameterName;  // 0x218(0x8)
	struct FName ScopeZoomCrosshairScaleMultiplierParameterName;  // 0x220(0x8)
	struct FName ScopeZoomDistortionPowerParameterName;  // 0x228(0x8)
	struct FName ScopeZoomDistortionScaleParameterName;  // 0x230(0x8)
	struct FName ScopeZoomEyeDistanceBlackoutMultiplierParameterName;  // 0x238(0x8)
	struct FName ScopeZoomGlowIntensityAtNightParameterName;  // 0x240(0x8)
	struct FName ScopeZoomLensDepthOffsetMultiplierParameterName;  // 0x248(0x8)
	struct FName ScopeZoomLensScaleParameterName;  // 0x250(0x8)
	struct FName ScopeZoomLensUIScaleParameterName;  // 0x258(0x8)
	struct FName ScopeZoomLensZoomParameterName;  // 0x260(0x8)
	struct FName ScopeZoomOptimalEyeDistanceParameterName;  // 0x268(0x8)
	struct FName ScopeZoomCrosshairCenterScreenOffsetParameterName;  // 0x270(0x8)
	struct FName ScopeZoomLensCenterScreenOffsetParameterName;  // 0x278(0x8)
	struct FName ScopeZoomCrosshairParameterName;  // 0x280(0x8)
	struct FName ScopeZoomCrosshairColorParameterName;  // 0x288(0x8)
	struct FName ScopeZoomCrosshairColorAtNightParameterName;  // 0x290(0x8)
	struct FName ScopeZoomCrosshairGlowColorParameterName;  // 0x298(0x8)
	struct FName ScopeZoomDirtMaskParameterName;  // 0x2A0(0x8)
	struct FName ScopeZoomDirtinessParameterName;  // 0x2A8(0x8)
	struct FName ScopeZoomDarkeningParameterName;  // 0x2B0(0x8)
	struct FName ScopeZoomLensNormalMapParameterName;  // 0x2B8(0x8)
	struct FName ScopeZoomLensUIParameterName;  // 0x2C0(0x8)
	struct UMaterialInterface* InjuryMaterial;  // 0x2C8(0x8)
	struct UMaterialInterface* TraumaMaterial;  // 0x2D0(0x8)
	struct UMaterialInterface* BulletHitMaterial;  // 0x2D8(0x8)
	struct UMaterialInterface* SickMaterial;  // 0x2E0(0x8)
	struct UMaterialInterface* ColdMaterial;  // 0x2E8(0x8)
	struct UMaterialInterface* HotMaterial;  // 0x2F0(0x8)
	struct UMaterialInterface* FatigueMaterial;  // 0x2F8(0x8)
	struct UMaterialInterface* HallucinationMaterial;  // 0x300(0x8)
	struct UMaterialInterface* EyePressureMaterial;  // 0x308(0x8)
	struct UMaterialInterface* BloodyEyesMaterial;  // 0x310(0x8)
	struct UMaterialInterface* RadiationMaterial;  // 0x318(0x8)
	struct UMaterialInterface* BlackoutMaterial;  // 0x320(0x8)
	struct UMaterialInterface* BlurredVisionMaterial;  // 0x328(0x8)
	struct UMaterialInterface* DepthOfFieldMaterial;  // 0x330(0x8)
	struct UMaterialInterface* PhoenixTearsMaterial;  // 0x338(0x8)
	struct FVector4 HeightenedSensesSaturationColor;  // 0x340(0x10)
	struct FPostProcessSettings _postProcessSettings;  // 0x350(0x560)
	char pad_2224[1496];  // 0x8B0(0x5D8)
	struct UMaterialInstanceDynamic* _doubleVisionIntensityMaterialInstance;  // 0xE88(0x8)
	struct UMaterialInterface* _headgearOverlayMaterialInstance;  // 0xE90(0x8)
	struct UMaterialInstanceDynamic* _scopeZoomMaterialInstance;  // 0xE98(0x8)
	struct UMaterialInstanceDynamic* _fallingBlurMaterialInstance;  // 0xEA0(0x8)
	struct UMaterialInterface* _underwaterPostProcessingCurrent;  // 0xEA8(0x8)
	struct UMaterialInterface* _underwaterPostProcessingLast;  // 0xEB0(0x8)
	float _underwaterPostProcessingBlendTime;  // 0xEB8(0x4)
	char pad_3772[8];  // 0xEBC(0x8)
	float _DOFBlurTime;  // 0xEC4(0x4)
	float _DOFClearBlurTime;  // 0xEC8(0x4)
	float _DOFScopingBlurTime;  // 0xECC(0x4)
	float _DOFBlurDistanceADS;  // 0xED0(0x4)
	float _DOFFstopADS;  // 0xED4(0x4)
	struct UMaterialInstanceDynamic* _injuryMaterial;  // 0xED8(0x8)
	char pad_3808[8];  // 0xEE0(0x8)
	struct UMaterialInstanceDynamic* _traumaMaterial;  // 0xEE8(0x8)
	char pad_3824[8];  // 0xEF0(0x8)
	struct UMaterialInstanceDynamic* _hallucinationMaterial;  // 0xEF8(0x8)
	char pad_3840[8];  // 0xF00(0x8)
	struct UMaterialInstanceDynamic* _eyePressureMaterial;  // 0xF08(0x8)
	char pad_3856[8];  // 0xF10(0x8)
	struct UMaterialInstanceDynamic* _bloodyEyesMaterial;  // 0xF18(0x8)
	char pad_3872[8];  // 0xF20(0x8)
	struct UMaterialInstanceDynamic* _bulletHitMaterial;  // 0xF28(0x8)
	char pad_3888[8];  // 0xF30(0x8)
	struct UMaterialInstanceDynamic* _sickMaterial;  // 0xF38(0x8)
	char pad_3904[8];  // 0xF40(0x8)
	struct UMaterialInstanceDynamic* _coldMaterial;  // 0xF48(0x8)
	char pad_3920[8];  // 0xF50(0x8)
	struct UMaterialInstanceDynamic* _hotMaterial;  // 0xF58(0x8)
	char pad_3936[8];  // 0xF60(0x8)
	struct UMaterialInstanceDynamic* _fatigueMaterial;  // 0xF68(0x8)
	char pad_3952[8];  // 0xF70(0x8)
	struct UMaterialInstanceDynamic* _radiationMaterial;  // 0xF78(0x8)
	char pad_3968[8];  // 0xF80(0x8)
	struct UMaterialInstanceDynamic* _blackoutMaterial;  // 0xF88(0x8)
	char pad_3984[8];  // 0xF90(0x8)
	struct UMaterialInstanceDynamic* _blurredVisionMaterial;  // 0xF98(0x8)
	char pad_4000[8];  // 0xFA0(0x8)
	struct UMaterialInstanceDynamic* _depthOfFieldMaterial;  // 0xFA8(0x8)
	char pad_4016[8];  // 0xFB0(0x8)
	struct UMaterialInstanceDynamic* _phoenixTearsMaterial;  // 0xFB8(0x8)
	char pad_4032[1328];  // 0xFC0(0x530)

}; 



// Class ConZ.VisualOverlayItemTag
// Size: 0x40(Inherited: 0x30) 
struct UVisualOverlayItemTag : public UBaseItemTag
{
	struct UMaterialInterface* OverlayMaterial;  // 0x30(0x8)
	int32_t Priority;  // 0x38(0x4)
	char pad_60_1 : 7;  // 0x3C(0x1)
	bool ShouldBeVisibleInFirstPersonView : 1;  // 0x3C(0x1)
	char pad_61_1 : 7;  // 0x3D(0x1)
	bool ShouldBeVisibleInThirdPersonView : 1;  // 0x3D(0x1)
	char pad_62[2];  // 0x3E(0x2)

}; 



// Class ConZ.VolumeZone
// Size: 0x260(Inherited: 0x258) 
struct AVolumeZone : public AVolume
{
	struct UZoneConfigurationDataAsset* configuration;  // 0x258(0x8)

}; 



// Class ConZ.VoteSystemManager
// Size: 0x2C8(Inherited: 0x220) 
struct AVoteSystemManager : public AActor
{
	struct TArray<UVoteTopic*> VoteTopics;  // 0x220(0x10)
	struct UUpdateableNotificationDescription* _activeTopicDesc;  // 0x230(0x8)
	struct UVoteTopic* _activeTopic;  // 0x238(0x8)
	char pad_576[136];  // 0x240(0x88)

}; 



// Class ConZ.VoteTopic
// Size: 0x48(Inherited: 0x28) 
struct UVoteTopic : public UObject
{
	char pad_40[32];  // 0x28(0x20)

}; 



// Class ConZ.Warning
// Size: 0x270(Inherited: 0x260) 
struct UWarning : public UUserWidget
{
	struct TArray<struct FMessageStruct> MessageQueue;  // 0x260(0x10)

}; 



// Class ConZ.WarningNotificationDescription
// Size: 0x58(Inherited: 0x40) 
struct UWarningNotificationDescription : public UNotificationDescription
{
	struct FString Message;  // 0x40(0x10)
	float Duration;  // 0x50(0x4)
	struct FColor Color;  // 0x54(0x4)

}; 



// Class ConZ.WarningSignWidget
// Size: 0x268(Inherited: 0x260) 
struct UWarningSignWidget : public UUserWidget
{
	uint8_t  _type;  // 0x260(0x1)
	char pad_609[7];  // 0x261(0x7)

	void InitFromWarningType(uint8_t  warningType); // Function ConZ.WarningSignWidget.InitFromWarningType
}; 



// Class ConZ.WeaponRevolverAnimInstance
// Size: 0x310(Inherited: 0x300) 
struct UWeaponRevolverAnimInstance : public UWeaponAnimInstance
{
	char pad_768[8];  // 0x300(0x8)
	char pad_776_1 : 7;  // 0x308(0x1)
	bool _useDrumRotation : 1;  // 0x308(0x1)
	char pad_777[3];  // 0x309(0x3)
	float _drumRotation;  // 0x30C(0x4)

}; 



// Class ConZ.WaterSurfaceAssetData
// Size: 0x28(Inherited: 0x28) 
struct UWaterSurfaceAssetData : public UAssetUserData
{

}; 



// Class ConZ.WaypointScreenWidget
// Size: 0x280(Inherited: 0x260) 
struct UWaypointScreenWidget : public UUserWidget
{
	UWaypointWidgetBase* WaypointClass;  // 0x260(0x8)
	struct TArray<struct UWaypointWidgetBase*> _waypoints;  // 0x268(0x10)
	struct UCanvasPanel* WaypointPanel;  // 0x278(0x8)

}; 



// Class ConZ.WaypointWidget
// Size: 0x350(Inherited: 0x2F8) 
struct UWaypointWidget : public UWaypointWidgetBase
{
	struct UImage* Emphasis;  // 0x2F8(0x8)
	struct UImage* BarBG;  // 0x300(0x8)
	struct UImage* Bar;  // 0x308(0x8)
	struct UImage* Background;  // 0x310(0x8)
	struct UImage* BigPointer;  // 0x318(0x8)
	struct UImage* SmallPointer;  // 0x320(0x8)
	struct UImage* Icon;  // 0x328(0x8)
	struct UImage* Accent;  // 0x330(0x8)
	struct UTextBlock* Label;  // 0x338(0x8)
	struct UTextBlock* Distance;  // 0x340(0x8)
	struct UMaterialInterface* _barBrushMaterial;  // 0x348(0x8)

}; 



// Class ConZ.ItemWeaponState
// Size: 0x140(Inherited: 0x100) 
struct UItemWeaponState : public UWeaponItemState
{
	int32_t ZeroRange;  // 0x100(0x4)
	uint8_t  FiringMode;  // 0x104(0x1)
	uint8_t  malfunction;  // 0x105(0x1)
	char pad_262[2];  // 0x106(0x2)
	struct TArray<struct FAmmunitionData> LoadedAmmoData;  // 0x108(0x10)
	struct TArray<struct FAmmunitionData> InternalMagazineAmmoData;  // 0x118(0x10)
	UObject* LoadedAmmunitionItemClass;  // 0x128(0x8)
	struct TArray<struct FEntityId> WeaponAttachments;  // 0x130(0x10)

}; 



// Class ConZ.WeaponActionRocketLauncherArmSequence
// Size: 0x68(Inherited: 0x68) 
struct UWeaponActionRocketLauncherArmSequence : public UWeaponActionSequence
{

}; 



// Class ConZ.WeaponActionRocketLauncherUnarmSequence
// Size: 0x68(Inherited: 0x68) 
struct UWeaponActionRocketLauncherUnarmSequence : public UWeaponActionSequence
{

}; 



// Class ConZ.WeaponActionWornOutFiringConditions
// Size: 0x28(Inherited: 0x28) 
struct UWeaponActionWornOutFiringConditions : public UWeaponAction
{

	bool CanExecuteForWeapon(struct AWeapon* Weapon); // Function ConZ.WeaponActionWornOutFiringConditions.CanExecuteForWeapon
}; 



// Class ConZ.WeaponAmmoDisplayContainerWidget
// Size: 0x288(Inherited: 0x260) 
struct UWeaponAmmoDisplayContainerWidget : public UUserWidget
{
	UUserWidget* _ammoDisplayWidgetClass;  // 0x260(0x8)
	struct UVerticalBox* _displayList;  // 0x268(0x8)
	struct UVerticalBox* _displayListCentered;  // 0x270(0x8)
	char pad_632[16];  // 0x278(0x10)

	void OnTabModeOpened(uint8_t  tabMode); // Function ConZ.WeaponAmmoDisplayContainerWidget.OnTabModeOpened
	void OnTabModeClosed(); // Function ConZ.WeaponAmmoDisplayContainerWidget.OnTabModeClosed
	void Init(struct AWeapon* Weapon, float onScreenDuration, bool displayOnCenter, struct UTexture2D* iconOverride); // Function ConZ.WeaponAmmoDisplayContainerWidget.Init
}; 



// Class ConZ.WeaponAttachmentState
// Size: 0x100(Inherited: 0x100) 
struct UWeaponAttachmentState : public UItemState
{

}; 



// Class ConZ.WeaponAttachmentMagazineState
// Size: 0x110(Inherited: 0x100) 
struct UWeaponAttachmentMagazineState : public UWeaponAttachmentState
{
	struct TArray<struct FAmmunitionData> ammoData;  // 0x100(0x10)

}; 



// Class ConZ.WeaponAttachmentSight
// Size: 0x940(Inherited: 0x930) 
struct AWeaponAttachmentSight : public AWeaponAttachment
{
	struct UWeaponSightItemComponent* _weaponSightItemComponent;  // 0x930(0x8)
	char pad_2360[8];  // 0x938(0x8)

}; 



// Class ConZ.WeaponAttachmentScope
// Size: 0x940(Inherited: 0x940) 
struct AWeaponAttachmentScope : public AWeaponAttachmentSight
{
	struct UWeaponScopeItemComponent* _weaponScopeItemComponent;  // 0x938(0x8)

}; 



// Class ConZ.WorldDoorOwnershipManager
// Size: 0x100(Inherited: 0xB0) 
struct UWorldDoorOwnershipManager : public UActorComponent
{
	char pad_176[80];  // 0xB0(0x50)

}; 



// Class ConZ.WeaponAttachmentSuppressor
// Size: 0x940(Inherited: 0x930) 
struct AWeaponAttachmentSuppressor : public AWeaponAttachment
{
	struct FName MuzzleSocketName;  // 0x930(0x8)
	float NoiseMultiplier;  // 0x938(0x4)
	char pad_2364_1 : 7;  // 0x93C(0x1)
	bool IsImprovised : 1;  // 0x93C(0x1)
	char pad_2365[3];  // 0x93D(0x3)

	void OnAttachedWeaponShot(); // Function ConZ.WeaponAttachmentSuppressor.OnAttachedWeaponShot
}; 



// Class ConZ.WeaponAttachmentUniversalFlashlight
// Size: 0x9B0(Inherited: 0x960) 
struct AWeaponAttachmentUniversalFlashlight : public AWeaponAttachmentFlashlight
{
	struct TMap<AWeapon*, struct UStaticMesh*> WeaponToStaticMeshMapping;  // 0x958(0x50)

}; 



// Class ConZ.WeaponAutoCrossbow
// Size: 0x4380(Inherited: 0x2F60) 
struct AWeaponAutoCrossbow : public AWeapon
{
	struct UWeaponStateFiring* FireState;  // 0x2F60(0x8)
	float _muzzleVelocity;  // 0x2F68(0x4)
	float _probabilityForLaughingSoundEffect;  // 0x2F6C(0x4)
	struct FCharacterAndItemAnimation _autoCrossbowFireAnimation;  // 0x2F70(0x10)
	struct UAkAudioEvent* _autoCrossbowLaughingAudioEvent;  // 0x2F80(0x8)
	struct UWeaponState* _autoCrossbowActiveState;  // 0x2F88(0x8)
	char pad_12176[5024];  // 0x2F90(0x13A0)
	UGameResourceType* _fuelType;  // 0x4330(0x8)
	struct FGameplayTagContainer _inFuelingSocketTypes;  // 0x4338(0x20)
	float _maxFuelAmount;  // 0x4358(0x4)
	float _fuelUsagePerHour;  // 0x435C(0x4)
	float _fuelUsagePerHourWhenDamaged;  // 0x4360(0x4)
	float _fuelFillingDurationPerAmountFilled;  // 0x4364(0x4)
	float _fuelFillingDurationPerAmountFilledWhenDamaged;  // 0x4368(0x4)
	float _fuelFillingExperiencePerAmount;  // 0x436C(0x4)
	float _currentFuelAmount;  // 0x4370(0x4)
	char pad_17268[12];  // 0x4374(0xC)

	void SetFollowerBoneLocationOffset(float LocationOffset); // Function ConZ.WeaponAutoCrossbow.SetFollowerBoneLocationOffset
	void Server_PlayLaughingSoundEffect(); // Function ConZ.WeaponAutoCrossbow.Server_PlayLaughingSoundEffect
	void Server_HandleFiringEffects(bool Active); // Function ConZ.WeaponAutoCrossbow.Server_HandleFiringEffects
	void Multicast_PlayLaughingSoundEffect(); // Function ConZ.WeaponAutoCrossbow.Multicast_PlayLaughingSoundEffect
	void Multicast_HandleFiringEffects(bool Active); // Function ConZ.WeaponAutoCrossbow.Multicast_HandleFiringEffects
}; 



// Class ConZ.WeaponBow
// Size: 0x33C0(Inherited: 0x2F60) 
struct AWeaponBow : public AWeapon
{
	struct FBodyWeaponAnimation InsertArrowAnimations;  // 0x2F58(0x10)
	struct FBodyWeaponAnimation RemoveArrowAnimations;  // 0x2F68(0x10)
	struct FBodyWeaponAnimation UnableToDrawAnimations;  // 0x2F78(0x10)
	struct FBodyWeaponAnimation DrawAnimations2[3];  // 0x2F88(0x30)
	struct FBodyWeaponAnimation DrawWhileAnticipatingDrawAnimations2[3];  // 0x2FB8(0x30)
	struct FBodyWeaponAnimation CancelDrawAnimations2[3];  // 0x2FE8(0x30)
	struct FBodyWeaponAnimation LooseAnimations2[3];  // 0x3018(0x30)
	struct FBodyWeaponAnimation LooseLastShotAnimations2[3];  // 0x3048(0x30)
	struct FWeaponBowAimOffsets AimOffsets[7];  // 0x3078(0xA8)
	struct FWeaponBowArmsShake ArmsShakeAnimamtion[4];  // 0x3120(0xC0)
	struct FBodyWeaponAnimation DrawAnimations;  // 0x31E0(0x10)
	struct FBodyWeaponAnimation DrawWhileAnticipatingDrawAnimations;  // 0x31F0(0x10)
	struct FBodyWeaponAnimation CancelDrawAnimations;  // 0x3200(0x10)
	struct FBodyWeaponAnimation LooseAnimations;  // 0x3210(0x10)
	struct FBodyWeaponAnimation LooseLastShotAnimations;  // 0x3220(0x10)
	struct UAnimSequenceBase* WeaponAimingDownTheSightsAnimationPose;  // 0x3230(0x8)
	struct UAnimSequenceBase* WeaponAimingDownTheSightsStillAnimationPose;  // 0x3238(0x8)
	struct UWeaponState* AnticipateDrawState2;  // 0x3240(0x8)
	struct UWeaponState* DrawState3;  // 0x3248(0x8)
	struct UWeaponState* CancelFiringState;  // 0x3250(0x8)
	struct UWeaponState* AnticipateFiringState;  // 0x3258(0x8)
	struct UWeaponState* FireState;  // 0x3260(0x8)
	struct UWeaponState* FireAndInsertArrowState;  // 0x3268(0x8)
	struct UAkAudioEvent* _fireNoArrowAudioEvent;  // 0x3270(0x8)
	struct FName _arrowSocketName;  // 0x3278(0x8)
	float _muzzleVelocity;  // 0x3280(0x4)
	float _drawWeight;  // 0x3284(0x4)
	float _compoundBowFullDrawHoldTime;  // 0x3288(0x4)
	float _armShakeTimerDecreaseRate;  // 0x328C(0x4)
	float _damageOnUsage;  // 0x3290(0x4)
	struct UWeaponState* _bowActiveState2;  // 0x3298(0x8)
	struct UWeaponState* _bowInsertArrowState;  // 0x32A0(0x8)
	struct UWeaponState* _bowRemoveArrowState;  // 0x32A8(0x8)
	struct UWeaponStateFiring* _bowFiringState2;  // 0x32B0(0x8)
	char pad_12988[44];  // 0x32BC(0x2C)
	uint8_t  _bowState;  // 0x32E8(0x1)
	char pad_13033[3];  // 0x32E9(0x3)
	struct FWeaponBowStateDataReplicated _weaponBowStateDataReplicated;  // 0x32EC(0xC)
	struct UStaticMeshComponent* _arrowMeshComponent;  // 0x32F8(0x8)
	struct FProjectileArrowData _projectileArrowData;  // 0x3300(0x20)
	char pad_13088[80];  // 0x3320(0x50)
	char pad_13168_1 : 7;  // 0x3370(0x1)
	bool _isCompound : 1;  // 0x3370(0x1)
	char pad_13169[7];  // 0x3371(0x7)
	struct UStaticMeshComponent* _handTriggerMeshComponent;  // 0x3378(0x8)
	char pad_13184_1 : 7;  // 0x3380(0x1)
	bool _ignoreArrowStiffness : 1;  // 0x3380(0x1)
	char pad_13185[3];  // 0x3381(0x3)
	float _letOff;  // 0x3384(0x4)
	struct FName _handTriggerBoneName;  // 0x3388(0x8)
	char pad_13200[48];  // 0x3390(0x30)

	void SetDrawWeight(float drawWeight); // Function ConZ.WeaponBow.SetDrawWeight
	void Server_SetPendingArrow(struct AAmmunitionArrow* arrow); // Function ConZ.WeaponBow.Server_SetPendingArrow
	void Server_SetDrawAmount(float drawAmount); // Function ConZ.WeaponBow.Server_SetDrawAmount
	void Server_SetBowStateData(struct FWeaponBowStateDataReplicated State); // Function ConZ.WeaponBow.Server_SetBowStateData
	void Server_SetBowState(uint8_t  State); // Function ConZ.WeaponBow.Server_SetBowState
	void Server_RemoveArrow(); // Function ConZ.WeaponBow.Server_RemoveArrow
	void Server_InsertArrow(struct AAmmunitionArrow* arrow); // Function ConZ.WeaponBow.Server_InsertArrow
	void ReloadArrow(); // Function ConZ.WeaponBow.ReloadArrow
	void OnRep_BowStateData(); // Function ConZ.WeaponBow.OnRep_BowStateData
	void OnRep_BowState(); // Function ConZ.WeaponBow.OnRep_BowState
	void OnRep_Arrow(); // Function ConZ.WeaponBow.OnRep_Arrow
	void GotoInsertArrowState(); // Function ConZ.WeaponBow.GotoInsertArrowState
	struct AAmmunitionArrow* GetPendingArrow(); // Function ConZ.WeaponBow.GetPendingArrow
	float GetOwnersTotalDrawWeight(); // Function ConZ.WeaponBow.GetOwnersTotalDrawWeight
	float GetOwnersDrawWeightByStrength(); // Function ConZ.WeaponBow.GetOwnersDrawWeightByStrength
	float GetOwnersDrawWeightBySkill(); // Function ConZ.WeaponBow.GetOwnersDrawWeightBySkill
	float GetDrawWeightDefaultsByStrength(float Strength); // Function ConZ.WeaponBow.GetDrawWeightDefaultsByStrength
	float GetDrawWeight(); // Function ConZ.WeaponBow.GetDrawWeight
	float GetDrawPercentageDefaultsForParameters(float characterDrawWeight, float bowDrawWeight); // Function ConZ.WeaponBow.GetDrawPercentageDefaultsForParameters
	void EquipArrow(struct AAmmunitionArrow* arrow); // Function ConZ.WeaponBow.EquipArrow
	bool CanInsertArrow(struct AAmmunitionArrow* arrowItem); // Function ConZ.WeaponBow.CanInsertArrow
}; 



// Class ConZ.WeaponCrossbow
// Size: 0x2FB0(Inherited: 0x2F60) 
struct AWeaponCrossbow : public AWeapon
{
	struct UWeaponStateFiring* FireState;  // 0x2F58(0x8)
	struct UWeaponState* FireAndInsertArrowState;  // 0x2F60(0x8)
	float _muzzleVelocity;  // 0x2F68(0x4)
	struct FCharacterAndItemAnimation _crossbowFireAnimation;  // 0x2F70(0x10)
	struct UAkAudioEvent* _crossbowFireAudioEvent;  // 0x2F80(0x8)
	struct UAkAudioEvent* _crossbowDryFireAudioEvent;  // 0x2F88(0x8)
	struct UWeaponState* _crossbowActiveState;  // 0x2F90(0x8)
	char pad_12188_1 : 7;  // 0x2F9C(0x1)
	bool _isCocked : 1;  // 0x2F98(0x1)
	char pad_12189[19];  // 0x2F9D(0x13)

	void SetIsCocked(bool Value); // Function ConZ.WeaponCrossbow.SetIsCocked
	void Server_HandleFiringEffects(bool shotFired); // Function ConZ.WeaponCrossbow.Server_HandleFiringEffects
	void NetMulticast_SetLoadedVariablesForCrossbow(bool isCocked); // Function ConZ.WeaponCrossbow.NetMulticast_SetLoadedVariablesForCrossbow
	void Multicast_HandleFiringEffects(bool shotFired); // Function ConZ.WeaponCrossbow.Multicast_HandleFiringEffects
	bool GetIsCocked(); // Function ConZ.WeaponCrossbow.GetIsCocked
	uint8_t  GetDrawCategory(); // Function ConZ.WeaponCrossbow.GetDrawCategory
}; 



// Class ConZ.WeaponDisassemblyToolItemTag
// Size: 0x30(Inherited: 0x30) 
struct UWeaponDisassemblyToolItemTag : public UBaseItemTag
{

}; 



// Class ConZ.WeaponHolsterItem
// Size: 0xA00(Inherited: 0x9C0) 
struct AWeaponHolsterItem : public AClothesItem
{
	struct AWeapon* _holsteredWeaponRep;  // 0x9C0(0x8)
	struct FName _maxLocationSocketName;  // 0x9C8(0x8)
	struct FName _minLocationSocketName;  // 0x9D0(0x8)
	struct FName _fatLocationSocketName;  // 0x9D8(0x8)
	struct FName _muscleLocationSocketName;  // 0x9E0(0x8)
	struct FName _leanLocationSocketName;  // 0x9E8(0x8)
	struct FName _staticMeshSocketName;  // 0x9F0(0x8)
	char pad_2552[8];  // 0x9F8(0x8)

	void OnRep_HolsteredWeapon(); // Function ConZ.WeaponHolsterItem.OnRep_HolsteredWeapon
	bool HolsterWeapon(struct AWeapon* Weapon); // Function ConZ.WeaponHolsterItem.HolsterWeapon
}; 



// Class ConZ.WeaponItemEntitySetup
// Size: 0x88(Inherited: 0x88) 
struct UWeaponItemEntitySetup : public UItemEntitySetup
{

}; 



// Class ConZ.WeaponRevolver
// Size: 0x2FC0(Inherited: 0x2F60) 
struct AWeaponRevolver : public AWeapon
{
	struct UWeaponStateFiring* FireState;  // 0x2F58(0x8)
	struct UWeaponState* _revolverActiveState;  // 0x2F60(0x8)
	struct FCharacterAndItemAnimation _fireAnimation;  // 0x2F68(0x10)
	struct FCharacterAndItemAnimation _dryFireAnimation;  // 0x2F78(0x10)
	struct FCharacterAndItemAnimation _rollDrumAnimation;  // 0x2F88(0x10)
	struct UAnimMontage* _russianRouletteMontage;  // 0x2F98(0x8)
	float _drumRotationOffset;  // 0x2FA0(0x4)
	int32_t _firingIndex;  // 0x2FA4(0x4)
	char pad_12208[8];  // 0x2FB0(0x8)
	float _drumRotationInterpolatorSpeed;  // 0x2FB8(0x4)
	uint8_t  _drumRotationDirection;  // 0x2FBC(0x1)
	char pad_12221[3];  // 0x2FBD(0x3)

	void Server_UseAmmoAtIndex(int32_t Index); // Function ConZ.WeaponRevolver.Server_UseAmmoAtIndex
	void Server_RollDrum(int32_t Index); // Function ConZ.WeaponRevolver.Server_RollDrum
	void Server_PlayFiringAnimation(int32_t ammoIndex, bool dryFire); // Function ConZ.WeaponRevolver.Server_PlayFiringAnimation
	void NetMulticast_SetLoadedVariablesForRevolver(int32_t ammoIndex); // Function ConZ.WeaponRevolver.NetMulticast_SetLoadedVariablesForRevolver
	void NetMulticast_PlayFiringAnimation(int32_t ammoIndex, bool dryFire); // Function ConZ.WeaponRevolver.NetMulticast_PlayFiringAnimation
}; 



// Class ConZ.WeaponRocketLauncherAnimInstance
// Size: 0x310(Inherited: 0x300) 
struct UWeaponRocketLauncherAnimInstance : public UWeaponAnimInstance
{
	char pad_768[8];  // 0x300(0x8)
	char pad_776_1 : 7;  // 0x308(0x1)
	bool _isArmed : 1;  // 0x308(0x1)
	char pad_777[7];  // 0x309(0x7)

}; 



// Class ConZ.WeaponScopeItemComponent
// Size: 0x250(Inherited: 0x120) 
struct UWeaponScopeItemComponent : public UScopeableItemComponent
{
	struct FVector ScopeViewOffset;  // 0x120(0xC)
	char pad_300[4];  // 0x12C(0x4)
	struct UMaterialInterface* ScopeLensPostProcess;  // 0x130(0x8)
	struct FName LensZoomParameterName;  // 0x138(0x8)
	char pad_320_1 : 7;  // 0x140(0x1)
	bool FrontFocalPlane : 1;  // 0x140(0x1)
	char pad_321_1 : 7;  // 0x141(0x1)
	bool HasCrosshairParallax : 1;  // 0x141(0x1)
	char pad_322[6];  // 0x142(0x6)
	struct UStaticMesh* ScopeViewMesh;  // 0x148(0x8)
	struct UStaticMesh* ScopeViewLensMesh;  // 0x150(0x8)
	char pad_344_1 : 7;  // 0x158(0x1)
	bool _canToggleDownTheSightsMode : 1;  // 0x158(0x1)
	char pad_345[7];  // 0x159(0x7)
	struct UTextureRenderTarget2D* TextRenderTarget;  // 0x160(0x8)
	int32_t WindageInitialOffset;  // 0x168(0x4)
	char pad_364[4];  // 0x16C(0x4)
	struct UAkAudioEvent* WindageClickAudioEvent;  // 0x170(0x8)
	struct UStaticMeshComponent* _scopeViewMesh;  // 0x178(0x8)
	struct UStaticMeshComponent* _scopeViewLensMesh;  // 0x180(0x8)
	float _fakeGlassMinOpacity;  // 0x188(0x4)
	char pad_396[96];  // 0x18C(0x60)
	float _displayBrightnessMultiplier;  // 0x1EC(0x4)
	char pad_496[96];  // 0x1F0(0x60)

	void Server_SetWindage(int32_t Windage); // Function ConZ.WeaponScopeItemComponent.Server_SetWindage
	void Server_SetDisplayBrightnessMultiplier(float Value); // Function ConZ.WeaponScopeItemComponent.Server_SetDisplayBrightnessMultiplier
	void Client_SetLoadedVariables(int32_t Windage, float displayBrightnessMultiplier); // Function ConZ.WeaponScopeItemComponent.Client_SetLoadedVariables
}; 



// Class ConZ.WeaponScopeWidget
// Size: 0x278(Inherited: 0x260) 
struct UWeaponScopeWidget : public UUserWidget
{
	struct UTexture2D* ReticleTexture;  // 0x260(0x8)
	struct UTextureRenderTarget2D* TextRenderTarget;  // 0x268(0x8)
	float FadeFactor;  // 0x270(0x4)
	float OnHideDelay;  // 0x274(0x4)

	void OnShowElements(); // Function ConZ.WeaponScopeWidget.OnShowElements
	void OnHideElements(); // Function ConZ.WeaponScopeWidget.OnHideElements
	void OnFadeOutComplete(); // Function ConZ.WeaponScopeWidget.OnFadeOutComplete
	void OnFadeInComplete(); // Function ConZ.WeaponScopeWidget.OnFadeInComplete
	void OnConstructFinished(); // Function ConZ.WeaponScopeWidget.OnConstructFinished
	void BeginFadeIn(); // Function ConZ.WeaponScopeWidget.BeginFadeIn
}; 



// Class ConZ.WeaponFirstPersonAnimationsDataAsset
// Size: 0xE8(Inherited: 0x98) 
struct UWeaponFirstPersonAnimationsDataAsset : public UItemFirstPersonAnimationsDataAsset
{
	struct FItemFirstPersonUpperBodyAnimationsData UpperBodyAimingHip;  // 0x98(0x50)

}; 



// Class ConZ.WeaponSightItemComponent
// Size: 0xE0(Inherited: 0xC8) 
struct UWeaponSightItemComponent : public UItemComponent
{
	struct FName ViewCenterSocketName;  // 0xC8(0x8)
	struct FVector AimingDownTheSightsLocationOffset;  // 0xD0(0xC)
	char pad_220[4];  // 0xDC(0x4)

}; 



// Class ConZ.WeaponState
// Size: 0x30(Inherited: 0x28) 
struct UWeaponState : public UObject
{
	char pad_40[8];  // 0x28(0x8)

}; 



// Class ConZ.WeaponStateActive
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateActive : public UWeaponState
{

}; 



// Class ConZ.WeaponStateActiveManualFiring
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateActiveManualFiring : public UWeaponState
{

}; 



// Class ConZ.WeaponStateAutoCrossbowActive
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateAutoCrossbowActive : public UWeaponState
{

}; 



// Class ConZ.WeaponStateAutoCrossbowFire
// Size: 0x38(Inherited: 0x30) 
struct UWeaponStateAutoCrossbowFire : public UWeaponStateFiring
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.WeaponStateBowAnticipateDraw
// Size: 0x40(Inherited: 0x30) 
struct UWeaponStateBowAnticipateDraw : public UWeaponState
{
	char pad_48[16];  // 0x30(0x10)

}; 



// Class ConZ.WeaponStateBowAnticipateFiring
// Size: 0x38(Inherited: 0x30) 
struct UWeaponStateBowAnticipateFiring : public UWeaponState
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.WeaponStateBowCancelFiring
// Size: 0x38(Inherited: 0x30) 
struct UWeaponStateBowCancelFiring : public UWeaponState
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.WeaponStateBowFireAndInsertArrow
// Size: 0x40(Inherited: 0x30) 
struct UWeaponStateBowFireAndInsertArrow : public UWeaponStateFiring
{
	char pad_48[16];  // 0x30(0x10)

}; 



// Class ConZ.WeaponStateBowFiring
// Size: 0x38(Inherited: 0x30) 
struct UWeaponStateBowFiring : public UWeaponStateFiring
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.WeaponStateBowInsertArrow
// Size: 0x40(Inherited: 0x30) 
struct UWeaponStateBowInsertArrow : public UWeaponState
{
	char pad_48[16];  // 0x30(0x10)

}; 



// Class ConZ.WeaponStateBowRemoveArrow
// Size: 0x38(Inherited: 0x30) 
struct UWeaponStateBowRemoveArrow : public UWeaponState
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.WeaponStateClearMalfunction
// Size: 0x40(Inherited: 0x30) 
struct UWeaponStateClearMalfunction : public UWeaponState
{
	char pad_48[16];  // 0x30(0x10)

}; 



// Class ConZ.WeaponStateCrossbowActive
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateCrossbowActive : public UWeaponState
{

}; 



// Class ConZ.WeaponStateCrossbowFire
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateCrossbowFire : public UWeaponStateFiring
{

}; 



// Class ConZ.WeaponStateCrossbowFireAndInsertArrow
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateCrossbowFireAndInsertArrow : public UWeaponStateFiring
{

}; 



// Class ConZ.WeaponStateFiringManual
// Size: 0x38(Inherited: 0x30) 
struct UWeaponStateFiringManual : public UWeaponStateFiring
{
	char pad_48[8];  // 0x30(0x8)

}; 



// Class ConZ.WeaponStateFiringSemiAutomatic
// Size: 0x48(Inherited: 0x40) 
struct UWeaponStateFiringSemiAutomatic : public UWeaponStateFiringAutomatic
{
	char pad_64[8];  // 0x40(0x8)

}; 



// Class ConZ.WeaponStateInactive
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateInactive : public UWeaponState
{

}; 



// Class ConZ.WeaponStateReload
// Size: 0x68(Inherited: 0x30) 
struct UWeaponStateReload : public UWeaponState
{
	struct UWeaponActionReloadSequence* _currentReloadActionSequence;  // 0x30(0x8)
	struct FWeaponReloadData _reloadData;  // 0x38(0x30)

}; 



// Class ConZ.WeaponStateRevolverFire
// Size: 0x38(Inherited: 0x38) 
struct UWeaponStateRevolverFire : public UWeaponStateFiringManual
{

}; 



// Class ConZ.WeaponStateRocketLauncherActiveUnarmed
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateRocketLauncherActiveUnarmed : public UWeaponState
{

}; 



// Class ConZ.WeaponStateUnEquipping
// Size: 0x30(Inherited: 0x30) 
struct UWeaponStateUnEquipping : public UWeaponState
{

}; 



// Class ConZ.WeedRemovalToolItemTag
// Size: 0x30(Inherited: 0x30) 
struct UWeedRemovalToolItemTag : public UBaseItemTag
{

}; 



// Class ConZ.WheelBarrow
// Size: 0x1230(Inherited: 0xAE0) 
struct AWheelBarrow : public AVehicleBase
{
	char pad_2784[24];  // 0xAE0(0x18)
	float _driverCapsuleMaxDepenetrationVelocity;  // 0xAF8(0x4)
	struct FVector _driverCapsuleRelativeLocation;  // 0xAFC(0xC)
	float _driverCapsuleMass;  // 0xB08(0x4)
	float _driverCapsuleLinearDamping;  // 0xB0C(0x4)
	float _driverCapsuleAngularDamping;  // 0xB10(0x4)
	struct FVector _driverCapsuleConstraintRelativeLocation;  // 0xB14(0xC)
	float _driverCapsuleConstraintSwingLimit;  // 0xB20(0x4)
	float _driverCapsuleConstraintTwistLimit;  // 0xB24(0x4)
	char pad_2856[8];  // 0xB28(0x8)
	struct FTransform _driverTransformRelativeToCapsule;  // 0xB30(0x30)
	struct FRuntimeFloatCurve _driverActionDifficultyVsSpeed;  // 0xB60(0x88)
	struct FRuntimeFloatCurve _driverActionDifficultyVsSpeedWhenLimping;  // 0xBE8(0x88)
	struct FRuntimeFloatCurve _driverBaseConstitutionChangeRateModifierVsSpeed;  // 0xC70(0x88)
	struct FRuntimeFloatCurve _driverBaseConstitutionChangeRateModifierVsSpeedWhenLimping;  // 0xCF8(0x88)
	struct FRuntimeFloatCurve _driverStrengthGainSpeedInfluenceVsSpeed;  // 0xD80(0x88)
	struct FRuntimeFloatCurve _driverStrengthGainSpeedInfluenceVsSpeedWhenLimping;  // 0xE08(0x88)
	struct FFloatInterval _loadModifierInterpedWithDriverStrength;  // 0xE90(0x8)
	struct FWheelBarrowParametersPerMovementPace _parametersPerMovementPace[4];  // 0xE98(0x80)
	struct FFloatInterval _maxSpeedModifierInterpedWithDriverDexterity;  // 0xF18(0x8)
	struct FRuntimeFloatCurve _weightLoadFactorVsFloorSlopeAngle;  // 0xF20(0x88)
	float _forwardDriveForceMagnitude;  // 0xFA8(0x4)
	float _reverseDriveForceMagnitude;  // 0xFAC(0x4)
	float _steerForceMagnitude;  // 0xFB0(0x4)
	float _steerForceMagnitudeWhenLimping;  // 0xFB4(0x4)
	float _steerRollTorqueMagnitude;  // 0xFB8(0x4)
	float _meshBrakeForceScale;  // 0xFBC(0x4)
	float _meshBrakeForceMagnitudeWhenCloseToMaxSpeed;  // 0xFC0(0x4)
	float _meshSidewaysBrakeForceScale;  // 0xFC4(0x4)
	float _driverCapsuleBrakeForceScale;  // 0xFC8(0x4)
	float _driverCapsuleBrakeForceMagnitudeWhenCloseToMaxSpeed;  // 0xFCC(0x4)
	float _driverCapsuleSidewaysBrakeForceScale;  // 0xFD0(0x4)
	float _physicsMaterialFrictionWhenDriven;  // 0xFD4(0x4)
	float _physicsMaterialRestitutionWhenDriven;  // 0xFD8(0x4)
	char pad_4060_1 : 7;  // 0xFDC(0x1)
	bool _stickyFrictionEnabled : 1;  // 0xFDC(0x1)
	char pad_4061[3];  // 0xFDD(0x3)
	float _stickyFrictionSpeedThreshold;  // 0xFE0(0x4)
	float _stickyFriction;  // 0xFE4(0x4)
	float _healthDrainPerSpeed;  // 0xFE8(0x4)
	float _healthDrainPerLoad;  // 0xFEC(0x4)
	float _healthDrainUpdateInterval;  // 0xFF0(0x4)
	char pad_4084[4];  // 0xFF4(0x4)
	float _speedThresholdToEvictAllMountees;  // 0xFF8(0x4)
	float _vertSpeedThresholdToEvictAllMountees;  // 0xFFC(0x4)
	struct UAkAudioEvent* _startedMovingAudioEvent;  // 0x1000(0x8)
	struct UAkAudioEvent* _stoppedMovingAudioEvent;  // 0x1008(0x8)
	char pad_4112[4];  // 0x1010(0x4)
	float _sendStateFrequency;  // 0x1014(0x4)
	struct UPhysicsConstraintComponent* _driverPhysicsConstraintComponent;  // 0x1018(0x8)
	char pad_4128[8];  // 0x1020(0x8)
	struct UPhysicalMaterial* _physicsMaterialWhenDriven;  // 0x1028(0x8)
	char pad_4144[392];  // 0x1030(0x188)
	struct UWheelBarrowDriverCapsuleComponent* _driverPhysicsCapsuleComponent;  // 0x11B8(0x8)
	struct TArray<struct TWeakObjectPtr<UVehicleAttachment_Wheel>> _attachedWheels;  // 0x11C0(0x10)
	char pad_4560[64];  // 0x11D0(0x40)
	struct UStaticMeshComponent* _wheelMesh;  // 0x1210(0x8)
	char pad_4632[24];  // 0x1218(0x18)

	struct UWheelBarrowDriverCapsuleComponent* GetDriverPhysicsCapsuleComponent(); // Function ConZ.WheelBarrow.GetDriverPhysicsCapsuleComponent
}; 



// Class ConZ.WheelBarrowMountSlot
// Size: 0x140(Inherited: 0x140) 
struct UWheelBarrowMountSlot : public UVehicleBaseMountSlot
{

}; 



// Class ConZ.WheelBarrowDriverMountSlot
// Size: 0x150(Inherited: 0x140) 
struct UWheelBarrowDriverMountSlot : public UWheelBarrowMountSlot
{
	struct UBlendSpace* _walkJogLimpingAnimation;  // 0x140(0x8)
	char pad_328[8];  // 0x148(0x8)

}; 



// Class ConZ.WheeledVehicle2W
// Size: 0xDE0(Inherited: 0xDC0) 
struct AWheeledVehicle2W : public AWheeledVehicleBase
{
	struct FVector _leanForcePosition;  // 0xDB8(0xC)
	float _leanForceStrength;  // 0xDC4(0x4)
	float _xCOMOffset;  // 0xDC8(0x4)
	float _zCOMOffset;  // 0xDCC(0x4)
	char pad_3544[8];  // 0xDD8(0x8)

}; 



// Class ConZ.WheeledVehicleBaseAnimInstance
// Size: 0xA50(Inherited: 0x2C0) 
struct UWheeledVehicleBaseAnimInstance : public UVehicleBaseAnimInstance
{
	char pad_704[1920];  // 0x2C0(0x780)
	struct AWheeledVehicleBase* _vehicleBase;  // 0xA40(0x8)
	char pad_2632[8];  // 0xA48(0x8)

}; 



// Class ConZ.WheeledVehicle4W
// Size: 0xDC0(Inherited: 0xDC0) 
struct AWheeledVehicle4W : public AWheeledVehicleBase
{

}; 



// Class ConZ.ZombieCorpse
// Size: 0x3C0(Inherited: 0x3B0) 
struct AZombieCorpse : public ACorpse
{
	struct USkeletalMesh* StrippedMesh;  // 0x3B0(0x8)
	char pad_952_1 : 7;  // 0x3B8(0x1)
	bool _isSearched : 1;  // 0x3B8(0x1)
	char pad_953[7];  // 0x3B9(0x7)

}; 



// Class ConZ.WheeledVehicle4WAnimInstance
// Size: 0xA50(Inherited: 0xA50) 
struct UWheeledVehicle4WAnimInstance : public UWheeledVehicleBaseAnimInstance
{

}; 



// Class ConZ.WorldCraftingMarkerWidget
// Size: 0x300(Inherited: 0x2F8) 
struct UWorldCraftingMarkerWidget : public UWaypointWidgetBase
{
	struct UCraftingInfoWidget* _craftingInfo;  // 0x2F8(0x8)

	void ChangeMode(uint8_t  mode); // Function ConZ.WorldCraftingMarkerWidget.ChangeMode
}; 



// Class ConZ.WorldEventManager
// Size: 0x250(Inherited: 0x220) 
struct AWorldEventManager : public AActor
{
	struct TArray<AWorldEvent*> EventTypes;  // 0x220(0x10)
	float TimeBetweenEventsMin;  // 0x230(0x4)
	float TimeBetweenEventsMax;  // 0x234(0x4)
	char pad_568[8];  // 0x238(0x8)
	struct TArray<struct AWorldEvent*> _events;  // 0x240(0x10)

}; 



// Class ConZ.WorldItemSpawner
// Size: 0x228(Inherited: 0x220) 
struct AWorldItemSpawner : public AActor
{
	struct UWorldItemSpawnerComponent* _spawnerComponent;  // 0x220(0x8)

}; 



// Class ConZ.WorldItemSpawnerComponent
// Size: 0x4B0(Inherited: 0x450) 
struct UWorldItemSpawnerComponent : public UPrimitiveComponent
{
	char pad_1104[24];  // 0x450(0x18)
	struct TSoftClassPtr<UObject> _item;  // 0x468(0x28)
	char pad_1168[32];  // 0x490(0x20)

}; 



// Class ConZ.WorldStatics
// Size: 0x28(Inherited: 0x28) 
struct UWorldStatics : public UBlueprintFunctionLibrary
{

	struct FVector TransformWorldPositionToTargetFOV(struct UObject* WorldContextObject, float FieldOfView, struct FVector& WorldPosition); // Function ConZ.WorldStatics.TransformWorldPositionToTargetFOV
	bool IsWorldStreamed(struct UObject* WorldContextObject); // Function ConZ.WorldStatics.IsWorldStreamed
	bool IsLocationOverWaterSurface(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.IsLocationOverWaterSurface
	bool IsLocationInDangerZone(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.IsLocationInDangerZone
	bool IsLocationInCustomZone(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.IsLocationInCustomZone
	bool IsEveryStreamedLevelLoadedAtLocation(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.IsEveryStreamedLevelLoadedAtLocation
	bool IsEnvironmentClassOutdoor(uint8_t  Value); // Function ConZ.WorldStatics.IsEnvironmentClassOutdoor
	bool IsEnvironmentClassIndoor(uint8_t  Value); // Function ConZ.WorldStatics.IsEnvironmentClassIndoor
	float GetRadiationAmountIncreaseRateAtLocation(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.GetRadiationAmountIncreaseRateAtLocation
	float GetExtraAirTemperatureFromHeatSourcesAtLocation(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.GetExtraAirTemperatureFromHeatSourcesAtLocation
	struct FEnvironmentDescription GetEnvironmentDescriptionAtLocation(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.GetEnvironmentDescriptionAtLocation
	float GetDistanceToClosestPlayerPawnOrSpectator(struct UWorld* World, struct FVector& Location); // Function ConZ.WorldStatics.GetDistanceToClosestPlayerPawnOrSpectator
	float GetDistanceSquaredToClosestPlayerPawnOrSpectator(struct UWorld* World, struct FVector& Location); // Function ConZ.WorldStatics.GetDistanceSquaredToClosestPlayerPawnOrSpectator
	bool FindTeleportSpotInArea(struct AActor* Actor, struct FVector& Location, struct FRotator& Rotation, float MinRadius, float MaxRadius, int32_t numIterationsPerRadius, int32_t numIterationsPerSlice); // Function ConZ.WorldStatics.FindTeleportSpotInArea
}; 



// Class ConZ.XMLStatics
// Size: 0x28(Inherited: 0x28) 
struct UXMLStatics : public UBlueprintFunctionLibrary
{

}; 



// Class ConZ.YesNoDialog
// Size: 0x2C0(Inherited: 0x260) 
struct UYesNoDialog : public UUserWidget
{
	char pad_608[48];  // 0x260(0x30)
	struct UTextBlock* _textDialog;  // 0x290(0x8)
	struct UConZStandardButton* _buttonYes;  // 0x298(0x8)
	struct UConZStandardButton* _buttonNo;  // 0x2A0(0x8)
	struct FText _dialogMessage;  // 0x2A8(0x18)

	void SetDialogMessage(struct FText& Value); // Function ConZ.YesNoDialog.SetDialogMessage
	void OnButtonYesClicked(); // Function ConZ.YesNoDialog.OnButtonYesClicked
	void OnButtonNoClicked(); // Function ConZ.YesNoDialog.OnButtonNoClicked
}; 



// Class ConZ.ZombieAnimInstance2
// Size: 0x370(Inherited: 0x2C0) 
struct UZombieAnimInstance2 : public UAnimInstance
{
	char pad_704_1 : 7;  // 0x2C0(0x1)
	bool HasOwnerBegunPlay : 1;  // 0x2B8(0x1)
	char pad_705_1 : 7;  // 0x2C1(0x1)
	bool IsAlive : 1;  // 0x2B9(0x1)
	char pad_706_1 : 7;  // 0x2C2(0x1)
	bool IsInRagdoll : 1;  // 0x2BA(0x1)
	char pad_707_1 : 7;  // 0x2C3(0x1)
	bool IsDeadAndCompletelyInRagdoll : 1;  // 0x2BB(0x1)
	uint8_t  stance;  // 0x2BC(0x1)
	char pad_709_1 : 7;  // 0x2C5(0x1)
	bool IsStanceRelaxed : 1;  // 0x2BD(0x1)
	char pad_710_1 : 7;  // 0x2C6(0x1)
	bool IsStanceLying : 1;  // 0x2BE(0x1)
	char pad_711_1 : 7;  // 0x2C7(0x1)
	bool IsStanceAlerted : 1;  // 0x2BF(0x1)
	char pad_712_1 : 7;  // 0x2C8(0x1)
	bool IsStanceCombat : 1;  // 0x2C0(0x1)
	int32_t NumRelaxedIdleVariations;  // 0x2C4(0x4)
	int32_t RelaxedIdleVariationIndex;  // 0x2C8(0x4)
	struct FVector Acceleration;  // 0x2CC(0xC)
	char pad_733_1 : 7;  // 0x2DD(0x1)
	bool WantsToMove : 1;  // 0x2D8(0x1)
	struct FVector Velocity;  // 0x2DC(0xC)
	float Speed;  // 0x2E8(0x4)
	float SpeedXY;  // 0x2EC(0x4)
	float WalkStoppingDistance;  // 0x2F0(0x4)
	float WalkStoppingTime;  // 0x2F4(0x4)
	char pad_762_1 : 7;  // 0x2FA(0x1)
	bool IsFalling : 1;  // 0x2F8(0x1)
	char pad_763_1 : 7;  // 0x2FB(0x1)
	bool IsJumping : 1;  // 0x2F9(0x1)
	float JumpApex;  // 0x2FC(0x4)
	float JumpDuration;  // 0x300(0x4)
	struct FRotator AimOffset;  // 0x304(0xC)
	char pad_784_1 : 7;  // 0x310(0x1)
	bool CanStartGoToLoop : 1;  // 0x310(0x1)
	char pad_785[7];  // 0x311(0x7)
	struct UAnimSequenceBase* RelaxedWalkLoopAnimation;  // 0x318(0x8)
	float RelaxedWalkLoopAnimationPlayRate;  // 0x320(0x4)
	char pad_804[4];  // 0x324(0x4)
	struct UAnimSequenceBase* CombatRunStartAnimation;  // 0x328(0x8)
	float CombatRunStartAnimationPlayRate;  // 0x330(0x4)
	char pad_820[4];  // 0x334(0x4)
	struct UAnimSequenceBase* CombatRunLoopAnimation;  // 0x338(0x8)
	float CombatRunLoopAnimationPlayRate;  // 0x340(0x4)
	char pad_836[4];  // 0x344(0x4)
	struct UAnimSequenceBase* CombatRunStopAnimation;  // 0x348(0x8)
	float CombatRunStopAnimationStartTime;  // 0x350(0x4)
	float CombatRunStopAnimationPlayRate;  // 0x354(0x4)
	float MinUpperBodyBlendWeight;  // 0x358(0x4)
	float UpperBodyBlendMaxSpeedXY;  // 0x35C(0x4)
	float UpperBodyBlendWeight;  // 0x360(0x4)
	char pad_868[12];  // 0x364(0xC)

	void AnimNotify_RFootDown(); // Function ConZ.ZombieAnimInstance2.AnimNotify_RFootDown
	void AnimNotify_LFootDown(); // Function ConZ.ZombieAnimInstance2.AnimNotify_LFootDown
	void AnimNotify_GoToRagdoll(); // Function ConZ.ZombieAnimInstance2.AnimNotify_GoToRagdoll
}; 



// Class ConZ.ZombieKamikazeDummyTrap
// Size: 0xA70(Inherited: 0xA60) 
struct AZombieKamikazeDummyTrap : public ATrapItem
{
	struct TWeakObjectPtr<UZombieKamikazeComponent> _owningComponent;  // 0xA60(0x8)
	char pad_2664[8];  // 0xA68(0x8)

	void OnRep_OwningComponent(); // Function ConZ.ZombieKamikazeDummyTrap.OnRep_OwningComponent
}; 



// Class ConZ.ZombieMovementComponent2
// Size: 0xC10(Inherited: 0xC10) 
struct UZombieMovementComponent2 : public UConZCharacterMovementComponent
{

}; 



// Class ConZ.ZombieSoundComponent2
// Size: 0x118(Inherited: 0xD8) 
struct UZombieSoundComponent2 : public UCharacterSoundComponent
{
	struct UAkAudioEvent* RelaxedStanceEnteredAudioEvent;  // 0xD8(0x8)
	struct UAkAudioEvent* AlertedStanceEnteredAudioEvent;  // 0xE0(0x8)
	struct UAkAudioEvent* CombatStanceEnteredAudioEvent;  // 0xE8(0x8)
	struct UAkAudioEvent* FootstepAudioEvent;  // 0xF0(0x8)
	struct UAkAudioEvent* StopAllAudioEvent;  // 0xF8(0x8)
	struct UAkAudioEvent* DeathAudioEvent;  // 0x100(0x8)
	struct UAkAudioEvent* StartSearchCorpseAudioEvent;  // 0x108(0x8)
	struct UAkAudioEvent* StopSearchCorpseAudioEvent;  // 0x110(0x8)

}; 



// Class ConZ.ZoneConfigurationDataAsset
// Size: 0x48(Inherited: 0x30) 
struct UZoneConfigurationDataAsset : public UDataAsset
{
	struct FZoneConfiguration configuration;  // 0x30(0x18)

}; 



