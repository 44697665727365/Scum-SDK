namespace offsets
{
	namespace UPrisonerMovementComponent
	{
			constexpr auto CapsuleHalfHeightWhenCrouched = 0xc08; // Size: 4, Type: float
			constexpr auto CapsuleHalfHeightWhenProne = 0xc0c; // Size: 4, Type: float
			constexpr auto CapsuleHalfHeightWhenSwimming = 0xc10; // Size: 4, Type: float
			constexpr auto UseCustomRotationRate = 0xc14; // Size: 1, Type: bool
			constexpr auto RequestedPathMovesForwardOnly = 0xc15; // Size: 1, Type: bool
			constexpr auto RotationInterpolationSpeed = 0xc18; // Size: 4, Type: float
			constexpr auto MaxRotationRateCurve = 0xc20; // Size: 8, Type: struct UCurveFloat*
			constexpr auto RotationRateMultiplierWhenStanding = 0xc28; // Size: 4, Type: float
			constexpr auto RotationRateMultiplierWhenCrouched = 0xc2c; // Size: 4, Type: float
			constexpr auto RotationRateMultiplierWhenProne = 0xc30; // Size: 4, Type: float
			constexpr auto RotationRateMultiplierWhenSwimming = 0xc34; // Size: 4, Type: float
			constexpr auto RotationRateMultiplierWhenSwimmingAndDiving = 0xc38; // Size: 4, Type: float
			constexpr auto GroundSlopeAngleForSpeedScalingSmoothingRate = 0xc3c; // Size: 4, Type: float
			constexpr auto GroundSlopeAngleSmoothingRate = 0xc40; // Size: 4, Type: float
			constexpr auto UseSmoothedGroundSlopeAngleForPaceChecks = 0xc44; // Size: 1, Type: bool
			constexpr auto MinGroundSlopeAngleForJogging = 0xc48; // Size: 4, Type: float
			constexpr auto MaxGroundSlopeAngleForJogging = 0xc4c; // Size: 4, Type: float
			constexpr auto MinGroundSlopeAngleForRunning = 0xc50; // Size: 4, Type: float
			constexpr auto MaxGroundSlopeAngleForRunning = 0xc54; // Size: 4, Type: float
			constexpr auto MinSpeedModifierWhenMovingUphill = 0xc58; // Size: 4, Type: float
			constexpr auto BaseJumpZVelocity = 0xc5c; // Size: 4, Type: float
			constexpr auto MaxAbsoluteVelocityZAfterClimb = 0xc98; // Size: 4, Type: float
			constexpr auto StaminaUnitsToDrainOnJump = 0xc9c; // Size: 4, Type: float
			constexpr auto JumpZVelocityMultiplierVsSpeed = 0xca0; // Size: 8, Type: struct UCurveFloat*
			constexpr auto JumpZVelocityMultiplierVsGroundSlopeAngle = 0xca8; // Size: 8, Type: struct UCurveFloat*
			constexpr auto ClimbAnimations = 0xcb0; // Size: 16, Type: struct TArray<struct FPrisonerClimbAnimationInfo>
			constexpr auto ClimbingStaminaDrainModifier = 0xcc0; // Size: 4, Type: float
			constexpr auto ClimbingPlayRateMultiplierWhenRequiredHandIsNotFree = 0xcc4; // Size: 4, Type: float
			constexpr auto ClimbingDebuggingEnabled = 0xcc8; // Size: 1, Type: bool
			constexpr auto ClimbingDebuggingDrawTime = 0xccc; // Size: 4, Type: float
			constexpr auto LadderClimbingCapsuleBias = 0xcd0; // Size: 12, Type: struct FVector
			constexpr auto LadderClimbingMaxSpeed = 0xcdc; // Size: 4, Type: float
			constexpr auto CanClimbOffLadderUpwardsAutomatically = 0xce0; // Size: 1, Type: bool
			constexpr auto CanClimbOffLadderDownwardsAutomatically = 0xce1; // Size: 1, Type: bool
			constexpr auto MaxHorzDistanceToLadderForClimbing = 0xce4; // Size: 4, Type: float
			constexpr auto NumberOfLadderPeekSteps = 0xce8; // Size: 4, Type: int32_t
			constexpr auto PostLadderClimbingLaunchVelocity = 0xcec; // Size: 12, Type: struct FVector
			constexpr auto MaxHeightToJumpOffLadderSafely = 0xcf8; // Size: 4, Type: float
			constexpr auto MaxFallingSpeedAllowedForLadderClimbing = 0xcfc; // Size: 4, Type: float
			constexpr auto MaxGroundSlopeAllowedForLadderClimbing = 0xd00; // Size: 4, Type: float
			constexpr auto MaxHorzDistanceToWindowForClimbingVsSpeed = 0xd08; // Size: 8, Type: struct UCurveFloat*
			constexpr auto WindowClimbingAnimations = 0xd10; // Size: 16, Type: struct TArray<struct FWindowClimbingAnimationInfo>
			constexpr auto WaterImmersionToStartSwimming = 0xd20; // Size: 4, Type: float
			constexpr auto WaterImmersionToStopSwimming = 0xd24; // Size: 4, Type: float
			constexpr auto SwimmingToWalkingDepthTolerance = 0xd28; // Size: 4, Type: float
			constexpr auto SwimmingToWalkingCapsuleCollisionTolerance = 0xd2c; // Size: 4, Type: float
			constexpr auto DesiredWaterImmersion = 0xd30; // Size: 4, Type: float
			constexpr auto DesiredWaterImmersionCorrectionAcceleration = 0xd34; // Size: 4, Type: float
			constexpr auto DesiredWaterImmersionCorrectionAccelerationCurve = 0xd38; // Size: 8, Type: struct UCurveFloat*
			constexpr auto WaterResurfaceAcceleration = 0xd40; // Size: 4, Type: float
			constexpr auto OceanWavesAcceleration = 0xd44; // Size: 8, Type: struct FVector2D
			constexpr auto WaterImmersionAfterWhichRunningIsDisabled = 0xd4c; // Size: 4, Type: float
			constexpr auto ImmersionCorrectionDownMultiplier = 0xd50; // Size: 4, Type: float
			constexpr auto RotationRateMultiplierWhenImmersedInWater = 0xd54; // Size: 4, Type: float
			constexpr auto DiveInAccelerationScale = 0xd58; // Size: 4, Type: float
			constexpr auto DiveInAccelerationTimeout = 0xd5c; // Size: 4, Type: float
			constexpr auto DiveInCollisionCheckOffset = 0xd60; // Size: 4, Type: float
			constexpr auto BuoyancyWhenDiving = 0xd64; // Size: 4, Type: float
			constexpr auto BuoyancyWhenNotDiving = 0xd68; // Size: 4, Type: float
			constexpr auto RotationRatePitchWhenDiving = 0xd6c; // Size: 4, Type: float
			constexpr auto SurfaceTensionForce = 0xd70; // Size: 4, Type: float
			constexpr auto MaxWindSpeedForAerialDrag = 0xd74; // Size: 4, Type: float
			constexpr auto LongFallSpeedThreshold = 0xd78; // Size: 4, Type: float
			constexpr auto BodyRotationCorrectionRate = 0xd7c; // Size: 4, Type: float
			constexpr auto BodyRotationDrag = 0xd80; // Size: 12, Type: struct FVector
			constexpr auto WaterForceWhenSwimmingParams = 0xd8c; // Size: 20, Type: struct FWaterForceWhenSwimmingParams
			constexpr auto _repAccelerationNormal = 0xda0; // Size: 12, Type: struct FVector_NetQuantizeNormal
			constexpr auto _timeToSpendFallingBeforeHandsAreFree = 0xddc; // Size: 4, Type: float
			constexpr auto _maxLatencyForStanceCheckInterpolation = 0xde0; // Size: 4, Type: float
			constexpr auto _repBuoyancy = 0xf10; // Size: 1, Type: char
			constexpr auto _ladderInfoRepData = 0x10e0; // Size: 80, Type: struct FLadderInfoRepData
			constexpr auto _fallingPoseBlendRepData = 0x1332; // Size: 2, Type: uint16_t
			constexpr auto _fallingControlRepData = 0x1334; // Size: 1, Type: char
	}
} 
